; ModuleID = '../bcout/drivers/ata/libata-core.llvm.bc'
source_filename = "drivers/ata/libata-core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_ata_init4:\09\09\09"
module asm ".long\09ata_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.ata_port_operations = type { i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i1 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_port*)*, i64 (%struct.ata_device*, i64)*, void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)*, i32 (%struct.ata_link*, %struct.ata_device**)*, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)*, void (%struct.ata_device*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32*)*, i32 (%struct.ata_link*, i32, i32)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_port*, i32)*, i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_host*)*, void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i8)*, i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, void (%struct.ata_port*)*, i1 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, i8 (%struct.ata_port*)*, i64 (%struct.ata_port*, i8*)*, i64 (%struct.ata_port*, i8*, i64)*, i64 (%struct.ata_device*, i8*)*, i64 (%struct.ata_device*, i32)*, i64 (%struct.ata_port*, i32, i64)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, %struct.ata_port_operations* }
%struct.ata_queued_cmd = type { %struct.ata_port*, %struct.ata_device*, %struct.scsi_cmnd*, void (%struct.scsi_cmnd*)*, %struct.ata_taskfile, [16 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.scatterlist, %struct.scatterlist*, %struct.scatterlist*, i32, i32, %struct.ata_taskfile, void (%struct.ata_queued_cmd*)*, i8*, i8* }
%struct.ata_port = type { %struct.Scsi_Host*, %struct.ata_port_operations*, %struct.spinlock*, i64, i32, i32, i32, i32, %struct.ata_ioports, i8, i8, %struct.ata_link*, %struct.delayed_work, %struct.ata_bmdma_prd*, i64, i32, i32, i32, i32, [33 x %struct.ata_queued_cmd], i64, i64, i32, i32, [8 x i8], %struct.ata_link, %struct.ata_link*, i32, %struct.ata_link*, %struct.ata_link*, %struct.ata_port_stats, %struct.ata_host*, %struct.device*, %struct.device, %struct.mutex, %struct.delayed_work, %struct.work_struct, i32, i32, %struct.list_head, %struct.wait_queue_head, i32, %struct.completion, %struct.pm_message, i32, %struct.timer_list, i64, i64, i32, i8*, %struct.ata_acpi_gtm, [4 x i8], [512 x i8] }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.71, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.0, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.0 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.1, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.84, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.85, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.86, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.87, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.35, %struct.list_head, %struct.list_head, %union.anon.36 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.4, i8* }
%union.anon.4 = type { i64 }
%struct.lockref = type { %union.anon.6 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.35 = type { %struct.list_head }
%union.anon.36 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.8, i32 }
%union.anon.8 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.9, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.9 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.10, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.10 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.12, %union.anon.13, %union.anon.14, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.19, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.11, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.11 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.12 = type { %struct.hlist_node }
%union.anon.13 = type { %struct.rb_node }
%union.anon.14 = type { %struct.anon.18 }
%struct.anon.18 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.19 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.20, void (i8*)*, i8* }
%union.anon.20 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.21, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.21 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.16, %union.anon.17, i32 }
%union.anon.16 = type { %struct.list_head }
%union.anon.17 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.84 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.85 = type { %struct.callback_head }
%union.anon.86 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.37 }
%union.anon.37 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.38 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.38 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.87 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.53 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.23 }
%union.anon.23 = type { %struct.anon.24, [48 x i8] }
%struct.anon.24 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.33, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.file = type { %union.anon.3, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.3 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.54 }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.40 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.40 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.63 }
%struct.anon.63 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.70, i32, [12 x i8] }
%union.anon.70 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.71 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.72, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.75 }
%union.anon.72 = type { %struct.anon.73 }
%struct.anon.73 = type { i64, i64 }
%union.anon.75 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.proc_dir_entry = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type opaque
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.atomic_t = type { i32 }
%struct.workqueue_struct = type opaque
%struct.ata_ioports = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.ata_bmdma_prd = type { i32, i32 }
%struct.ata_link = type { %struct.ata_port*, i32, %struct.device, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ata_eh_info, %struct.ata_eh_context, [16 x i8], [2 x %struct.ata_device], i64, [56 x i8] }
%struct.ata_eh_info = type { %struct.ata_device*, i32, i32, i32, [2 x i32], i32, i32, [80 x i8], i32 }
%struct.ata_eh_context = type { %struct.ata_eh_info, [2 x i32], [2 x [6 x i32]], [2 x i32], i32, i32, i32, [2 x i8], i64 }
%struct.ata_device = type { %struct.ata_link*, i32, i32, i64, %struct.scsi_device*, i8*, %union.acpi_object*, i32, %struct.device, i64, i64, i32, i64, i8, i8, i8, i32, i32, i32, i32, i64, i64, i64, i16, i16, i16, [58 x i8], %union.anon.83, [8 x i8], [20 x i8], [64 x i8], i32, i32, i32, i32, i32, %struct.ata_ering, [8 x i8] }
%union.acpi_object = type { %struct.anon.81 }
%struct.anon.81 = type { i32, i32, i64, i32 }
%union.anon.83 = type { [128 x i32] }
%struct.ata_ering = type { i32, [32 x %struct.ata_ering_entry] }
%struct.ata_ering_entry = type { i32, i32, i64 }
%struct.ata_port_stats = type { i64, i64, i64 }
%struct.ata_host = type { %struct.spinlock, %struct.device*, i8**, i32, i32, i8*, %struct.ata_port_operations*, i64, %struct.kref, %struct.mutex, %struct.task_struct*, %struct.ata_port*, [0 x %struct.ata_port*] }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.pm_message = type { i32 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.ata_acpi_gtm = type { [2 x %struct.ata_acpi_drive], i32 }
%struct.ata_acpi_drive = type { i32, i32 }
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.ata_taskfile = type { i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.88 }
%union.anon.88 = type { i8* }
%struct.kparam_string = type { i32, i8* }
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.ata_force_ent = type { i32, i32, %struct.ata_force_param }
%struct.ata_force_param = type { i8*, i8, i8, i64, i32, i32, i16 }
%struct.ata_xfer_ent = type { i32, i32, i8 }
%struct.ata_port_info = type { i64, i64, i64, i64, i64, %struct.ata_port_operations*, i8* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.ata_blacklist_entry = type { i8*, i8*, i64 }
%struct.va_format = type { i8*, [1 x %struct.__va_list_tag]* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.ata_timing = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.89, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, {}*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, {}*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, {}*, {}*, {}* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.89 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_bits = type { i32, i32, i64, i64 }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}

@ata_base_port_ops = dso_local constant %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i64)* @ata_std_prereset, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* @ata_std_postreset, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* @ata_std_error_handler, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* @ata_std_sched_eh, void (%struct.ata_port*)* @ata_std_end_eh, i32 (%struct.ata_link*, i32, i32*)* null, i32 (%struct.ata_link*, i32, i32)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* null, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* null, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, i8 (%struct.ata_port*)* null, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* null }, align 8, !dbg !0
@sata_port_ops = dso_local constant %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* @ata_std_qc_defer, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* @sata_std_hardreset, void (%struct.ata_link*, i32*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32*)* null, i32 (%struct.ata_link*, i32, i32)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* null, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* null, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, i8 (%struct.ata_port*)* null, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* @ata_base_port_ops }, align 8, !dbg !6857
@ata_print_id = dso_local global %struct.atomic_t zeroinitializer, align 4, !dbg !6859
@__param_str_force = internal constant [13 x i8] c"libata.force\00", align 1, !dbg !7176
@param_ops_string = external dso_local constant %struct.kernel_param_ops, align 8
@__param_string_force = internal constant %struct.kparam_string { i32 2048, i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @ata_force_param_buf, i32 0, i32 0) }, align 8, !dbg !7181
@__param_force = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_string* } } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_force, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_string, i16 0, i8 -1, i8 0, { %struct.kparam_string* } { %struct.kparam_string* @__param_string_force } }, section "__param", align 8, !dbg !6861
@__UNIQUE_ID_forcetype311 = internal constant [29 x i8] c"libata.parmtype=force:string\00", section ".modinfo", align 1, !dbg !6912
@__UNIQUE_ID_force312 = internal constant [160 x i8] c"libata.parm=force:Force ATA configurations including cable type, link speed and transfer mode (see Documentation/admin-guide/kernel-parameters.rst for details)\00", section ".modinfo", align 1, !dbg !6917
@__param_str_atapi_enabled = internal constant [21 x i8] c"libata.atapi_enabled\00", align 16, !dbg !7185
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@atapi_enabled = internal global i32 1, align 4, !dbg !7190
@__param_atapi_enabled = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_atapi_enabled, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @atapi_enabled to i8*) } }, section "__param", align 8, !dbg !6922
@__UNIQUE_ID_atapi_enabledtype313 = internal constant [34 x i8] c"libata.parmtype=atapi_enabled:int\00", section ".modinfo", align 1, !dbg !6924
@__UNIQUE_ID_atapi_enabled314 = internal constant [84 x i8] c"libata.parm=atapi_enabled:Enable discovery of ATAPI devices (0=off, 1=on [default])\00", section ".modinfo", align 1, !dbg !6929
@__param_str_atapi_dmadir = internal constant [20 x i8] c"libata.atapi_dmadir\00", align 16, !dbg !7192
@atapi_dmadir = internal global i32 0, align 4, !dbg !7194
@__param_atapi_dmadir = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_atapi_dmadir, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @atapi_dmadir to i8*) } }, section "__param", align 8, !dbg !6934
@__UNIQUE_ID_atapi_dmadirtype315 = internal constant [33 x i8] c"libata.parmtype=atapi_dmadir:int\00", section ".modinfo", align 1, !dbg !6936
@__UNIQUE_ID_atapi_dmadir316 = internal constant [84 x i8] c"libata.parm=atapi_dmadir:Enable ATAPI DMADIR bridge support (0=off [default], 1=on)\00", section ".modinfo", align 1, !dbg !6939
@atapi_passthru16 = dso_local global i32 1, align 4, !dbg !6941
@__param_str_atapi_passthru16 = internal constant [24 x i8] c"libata.atapi_passthru16\00", align 16, !dbg !7196
@__param_atapi_passthru16 = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_atapi_passthru16, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @atapi_passthru16 to i8*) } }, section "__param", align 8, !dbg !6943
@__UNIQUE_ID_atapi_passthru16type317 = internal constant [37 x i8] c"libata.parmtype=atapi_passthru16:int\00", section ".modinfo", align 1, !dbg !6945
@__UNIQUE_ID_atapi_passthru16318 = internal constant [94 x i8] c"libata.parm=atapi_passthru16:Enable ATA_16 passthru for ATAPI devices (0=off, 1=on [default])\00", section ".modinfo", align 1, !dbg !6948
@libata_fua = dso_local global i32 0, align 4, !dbg !6953
@__param_str_fua = internal constant [11 x i8] c"libata.fua\00", align 1, !dbg !7198
@__param_fua = internal constant %struct.kernel_param { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__param_str_fua, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @libata_fua to i8*) } }, section "__param", align 8, !dbg !6955
@__UNIQUE_ID_fuatype319 = internal constant [24 x i8] c"libata.parmtype=fua:int\00", section ".modinfo", align 1, !dbg !6957
@__UNIQUE_ID_fua320 = internal constant [52 x i8] c"libata.parm=fua:FUA support (0=off [default], 1=on)\00", section ".modinfo", align 1, !dbg !6960
@__param_str_ignore_hpa = internal constant [18 x i8] c"libata.ignore_hpa\00", align 16, !dbg !7203
@ata_ignore_hpa = internal global i32 0, align 4, !dbg !7170
@__param_ignore_hpa = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_ignore_hpa, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @ata_ignore_hpa to i8*) } }, section "__param", align 8, !dbg !6965
@__UNIQUE_ID_ignore_hpatype321 = internal constant [31 x i8] c"libata.parmtype=ignore_hpa:int\00", section ".modinfo", align 1, !dbg !6967
@__UNIQUE_ID_ignore_hpa322 = internal constant [95 x i8] c"libata.parm=ignore_hpa:Ignore HPA limit (0=keep BIOS limits, 1=ignore limits, using full disk)\00", section ".modinfo", align 1, !dbg !6972
@__param_str_dma = internal constant [11 x i8] c"libata.dma\00", align 1, !dbg !7208
@libata_dma_mask = internal global i32 7, align 4, !dbg !7210
@__param_dma = internal constant %struct.kernel_param { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__param_str_dma, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @libata_dma_mask to i8*) } }, section "__param", align 8, !dbg !6977
@__UNIQUE_ID_dmatype323 = internal constant [24 x i8] c"libata.parmtype=dma:int\00", section ".modinfo", align 1, !dbg !6979
@__UNIQUE_ID_dma324 = internal constant [67 x i8] c"libata.parm=dma:DMA enable/disable (0x1==ATA, 0x2==ATAPI, 0x4==CF)\00", section ".modinfo", align 1, !dbg !6981
@__param_str_ata_probe_timeout = internal constant [25 x i8] c"libata.ata_probe_timeout\00", align 16, !dbg !7212
@ata_probe_timeout = internal global i32 0, align 4, !dbg !7172
@__param_ata_probe_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__param_str_ata_probe_timeout, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @ata_probe_timeout to i8*) } }, section "__param", align 8, !dbg !6986
@__UNIQUE_ID_ata_probe_timeouttype325 = internal constant [38 x i8] c"libata.parmtype=ata_probe_timeout:int\00", section ".modinfo", align 1, !dbg !6988
@__UNIQUE_ID_ata_probe_timeout326 = internal constant [64 x i8] c"libata.parm=ata_probe_timeout:Set ATA probing timeout (seconds)\00", section ".modinfo", align 1, !dbg !6993
@libata_noacpi = dso_local global i32 0, align 4, !dbg !6996
@__param_str_noacpi = internal constant [14 x i8] c"libata.noacpi\00", align 1, !dbg !7217
@__param_noacpi = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_noacpi, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @libata_noacpi to i8*) } }, section "__param", align 8, !dbg !6998
@__UNIQUE_ID_noacpitype327 = internal constant [27 x i8] c"libata.parmtype=noacpi:int\00", section ".modinfo", align 1, !dbg !7000
@__UNIQUE_ID_noacpi328 = internal constant [91 x i8] c"libata.parm=noacpi:Disable the use of ACPI in probe/suspend/resume (0=off [default], 1=on)\00", section ".modinfo", align 1, !dbg !7005
@libata_allow_tpm = dso_local global i32 0, align 4, !dbg !7010
@__param_str_allow_tpm = internal constant [17 x i8] c"libata.allow_tpm\00", align 16, !dbg !7222
@__param_allow_tpm = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_allow_tpm, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @libata_allow_tpm to i8*) } }, section "__param", align 8, !dbg !7012
@__UNIQUE_ID_allow_tpmtype329 = internal constant [30 x i8] c"libata.parmtype=allow_tpm:int\00", section ".modinfo", align 1, !dbg !7014
@__UNIQUE_ID_allow_tpm330 = internal constant [77 x i8] c"libata.parm=allow_tpm:Permit the use of TPM commands (0=off [default], 1=on)\00", section ".modinfo", align 1, !dbg !7019
@__param_str_atapi_an = internal constant [16 x i8] c"libata.atapi_an\00", align 16, !dbg !7227
@atapi_an = internal global i32 0, align 4, !dbg !7174
@__param_atapi_an = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_atapi_an, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.88 { i8* bitcast (i32* @atapi_an to i8*) } }, section "__param", align 8, !dbg !7024
@__UNIQUE_ID_atapi_antype331 = internal constant [29 x i8] c"libata.parmtype=atapi_an:int\00", section ".modinfo", align 1, !dbg !7026
@__UNIQUE_ID_atapi_an332 = internal constant [89 x i8] c"libata.parm=atapi_an:Enable ATAPI AN media presence notification (0=0ff [default], 1=on)\00", section ".modinfo", align 1, !dbg !7028
@__UNIQUE_ID_author333 = internal constant [26 x i8] c"libata.author=Jeff Garzik\00", section ".modinfo", align 1, !dbg !7033
@__UNIQUE_ID_description334 = internal constant [50 x i8] c"libata.description=Library module for ATA devices\00", section ".modinfo", align 1, !dbg !7038
@__UNIQUE_ID_file335 = internal constant [31 x i8] c"libata.file=drivers/ata/libata\00", section ".modinfo", align 1, !dbg !7043
@__UNIQUE_ID_license336 = internal constant [19 x i8] c"libata.license=GPL\00", section ".modinfo", align 1, !dbg !7045
@__UNIQUE_ID_version337 = internal constant [20 x i8] c"libata.version=3.00\00", section ".modinfo", align 1, !dbg !7050
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0) }, align 8, !dbg !7230
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !7053
@.str = private unnamed_addr constant [26 x i8] c"drivers/ata/libata-core.c\00", align 1
@ata_force_tbl_size = internal global i32 0, align 4, !dbg !7168
@ata_force_tbl = internal global %struct.ata_force_ent* null, align 8, !dbg !7151
@.str.1 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"FORCE: cable set to %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"device reported invalid CHS sector 0\0A\00", align 1
@ata_xfer_tbl = internal constant [4 x %struct.ata_xfer_ent] [%struct.ata_xfer_ent { i32 0, i32 7, i8 8 }, %struct.ata_xfer_ent { i32 7, i32 5, i8 32 }, %struct.ata_xfer_ent { i32 12, i32 8, i8 64 }, %struct.ata_xfer_ent { i32 -1, i32 0, i8 0 }], align 16, !dbg !7236
@ata_mode_string.xfer_mode_str = internal constant [20 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0)], align 16, !dbg !7098
@.str.5 = private unnamed_addr constant [5 x i8] c"PIO0\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"PIO1\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"PIO2\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"PIO3\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"PIO4\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"PIO5\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"PIO6\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"MWDMA0\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"MWDMA1\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"MWDMA2\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"MWDMA3\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"MWDMA4\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"UDMA/16\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"UDMA/25\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"UDMA/33\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"UDMA/44\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"UDMA/66\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"UDMA/100\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"UDMA/133\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"UDMA7\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"<n/a>\00", align 1
@sata_spd_string.spd_str = internal constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0)], align 16, !dbg !7105
@.str.26 = private unnamed_addr constant [9 x i8] c"1.5 Gbps\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"3.0 Gbps\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"6.0 Gbps\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"qc timeout (cmd 0x%x)\0A\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"%s: ENTER\0A\00", align 1
@__func__.ata_dev_read_id = private unnamed_addr constant [16 x i8] c"ata_dev_read_id\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"unsupported class\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"NODEV after polling detection\0A\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"IDENTIFY failed on device w/ SEMB sig, disabled\0A\00", align 1
@.str.37 = private unnamed_addr constant [40 x i8] c"both IDENTIFYs aborted, assuming NODEV\0A\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"I/O error\00", align 1
@.str.39 = private unnamed_addr constant [65 x i8] c"dumping IDENTIFY data, class=%d may_fallback=%d tried_spinup=%d\0A\00", align 1
@.str.40 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.41 = private unnamed_addr constant [28 x i8] c"device reports invalid type\00", align 1
@.str.42 = private unnamed_addr constant [44 x i8] c"host indicates ignore ATA devices, ignored\0A\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"SPINUP failed\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"INIT_DEV_PARAMS failed\00", align 1
@.str.45 = private unnamed_addr constant [40 x i8] c"failed to IDENTIFY (%s, err_mask=0x%x)\0A\00", align 1
@.str.46 = private unnamed_addr constant [37 x i8] c"READ LOG DMA EXT failed, trying PIO\0A\00", align 1
@.str.47 = private unnamed_addr constant [25 x i8] c"%s: ENTER/EXIT -- nodev\0A\00", align 1
@__func__.ata_dev_configure = private unnamed_addr constant [18 x i8] c"ata_dev_configure\00", align 1
@.str.48 = private unnamed_addr constant [31 x i8] c"unsupported device, disabling\0A\00", align 1
@.str.49 = private unnamed_addr constant [38 x i8] c"WARNING: ATAPI is %s, device ignored\0A\00", align 1
@.str.50 = private unnamed_addr constant [31 x i8] c"not supported with this driver\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.52 = private unnamed_addr constant [39 x i8] c"LPM support broken, forcing max_power\0A\00", align 1
@.str.53 = private unnamed_addr constant [73 x i8] c"%s: cfg 49:%04x 82:%04x 83:%04x 84:%04x 85:%04x 86:%04x 87:%04x 88:%04x\0A\00", align 1
@.str.54 = private unnamed_addr constant [56 x i8] c"supports DRM functions and may not be fully accessible\0A\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"CFA\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"ATA-%d\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"LBA\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"LBA48\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"%s: %s, %s, max %s\0A\00", align 1
@.str.60 = private unnamed_addr constant [31 x i8] c"%llu sectors, multi %u: %s %s\0A\00", align 1
@.str.61 = private unnamed_addr constant [38 x i8] c"%llu sectors, multi %u, CHS %u/%u/%u\0A\00", align 1
@.str.62 = private unnamed_addr constant [48 x i8] c"failed to get Identify Device Data, Emask 0x%x\0A\00", align 1
@.str.63 = private unnamed_addr constant [21 x i8] c"unsupported CDB len\0A\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.65 = private unnamed_addr constant [43 x i8] c"failed to enable ATAPI AN (err_mask=0x%x)\0A\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c", ATAPI AN\00", align 1
@.str.67 = private unnamed_addr constant [11 x i8] c", CDB intr\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c", DMADIR\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"ATAPI: %s, %s, max %s%s%s%s\0A\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"applying bridge limits\0A\00", align 1
@.str.71 = private unnamed_addr constant [62 x i8] c"Drive reports diagnostics failure. This may indicate a drive\0A\00", align 1
@.str.72 = private unnamed_addr constant [67 x i8] c"fault or invalid emulation. Contact drive vendor for information.\0A\00", align 1
@.str.73 = private unnamed_addr constant [65 x i8] c"WARNING: device requires firmware update to be fully functional\0A\00", align 1
@.str.74 = private unnamed_addr constant [65 x i8] c"         contact the vendor or visit http://ata.wiki.kernel.org\0A\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"%s: EXIT, err\0A\00", align 1
@.str.76 = private unnamed_addr constant [32 x i8] c"limiting SATA link speed to %s\0A\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"%s:%s\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.79 = private unnamed_addr constant [22 x i8] c"limiting speed to %s\0A\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"no PIO support\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.81 = private unnamed_addr constant [55 x i8] c"link is slow to respond, please be patient (ready=%d)\0A\00", align 1
@.str.82 = private unnamed_addr constant [44 x i8] c"failed to resume link for reset (errno=%d)\0A\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"class mismatch %u != %u\0A\00", align 1
@.str.84 = private unnamed_addr constant [33 x i8] c"n_sectors mismatch %llu != %llu\0A\00", align 1
@.str.85 = private unnamed_addr constant [75 x i8] c"new n_sectors matches native, probably late HPA unlock, n_sectors updated\0A\00", align 1
@.str.86 = private unnamed_addr constant [78 x i8] c"old n_sectors matches native, probably late HPA lock, will try to unlock HPA\0A\00", align 1
@.str.87 = private unnamed_addr constant [32 x i8] c"revalidation failed (errno=%d)\0A\00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c"waking up from sleep\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"ata_port\00", align 1
@ata_port_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @ata_port_pm_suspend, i32 (%struct.device*)* @ata_port_pm_resume, i32 (%struct.device*)* @ata_port_pm_freeze, i32 (%struct.device*)* @ata_port_pm_resume, i32 (%struct.device*)* @ata_port_pm_poweroff, i32 (%struct.device*)* @ata_port_pm_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* @ata_port_runtime_suspend, i32 (%struct.device*)* @ata_port_runtime_resume, i32 (%struct.device*)* @ata_port_runtime_idle }, align 8, !dbg !7260
@ata_port_type = dso_local constant %struct.device_type { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i32 0, i32 0), %struct.attribute_group** null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)* null, void (%struct.device*)* null, %struct.dev_pm_ops* @ata_port_pm_ops }, align 8, !dbg !7111
@ata_acpi_gtf_filter = external dso_local global i32, align 4
@ata_port_alloc.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7113
@.str.90 = private unnamed_addr constant [21 x i8] c"&ap->scsi_scan_mutex\00", align 1
@ata_port_alloc.__key.91 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7118
@.str.92 = private unnamed_addr constant [15 x i8] c"&ap->eh_wait_q\00", align 1
@ata_host_alloc.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7120
@.str.93 = private unnamed_addr constant [16 x i8] c"&host->eh_mutex\00", align 1
@ata_dummy_port_ops = dso_local global %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* @ata_noop_qc_prep, i32 (%struct.ata_queued_cmd*)* @ata_dummy_qc_issue, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* @ata_dummy_error_handler, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* @ata_std_sched_eh, void (%struct.ata_port*)* @ata_std_end_eh, i32 (%struct.ata_link*, i32, i32*)* null, i32 (%struct.ata_link*, i32, i32)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* null, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* null, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, i8 (%struct.ata_port*)* null, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* null }, align 8, !dbg !7137
@.str.94 = private unnamed_addr constant [36 x i8] c"failed to start port %d (errno=%d)\0A\00", align 1
@ata_host_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7125
@.str.95 = private unnamed_addr constant [40 x i8] c"BUG: trying to register unstarted host\0A\00", align 1
@.str.96 = private unnamed_addr constant [17 x i8] c"%cATA max %s %s\0A\00", align 1
@.str.97 = private unnamed_addr constant [7 x i8] c"DUMMY\0A\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"%s[%s]\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"irq %d\00", align 1
@.str.100 = private unnamed_addr constant [43 x i8] c"failed to enable device after resume (%d)\0A\00", align 1
@ata_scsi_transport_template = external dso_local global %struct.scsi_transport_template*, align 8
@__UNIQUE_ID___addressable_ata_init380 = internal global i8* bitcast (i32 ()* @ata_init to i8*), section ".discard.addressable", align 8, !dbg !7130
@__exitcall_ata_exit = internal global void ()* @ata_exit, section ".exitcall.exit", align 8, !dbg !7132
@ratelimit = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 50, i32 1, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !7282
@__func__.ata_ratelimit = private unnamed_addr constant [14 x i8] c"ata_ratelimit\00", align 1
@ata_dummy_port_info = dso_local constant %struct.ata_port_info { i64 0, i64 0, i64 0, i64 0, i64 0, %struct.ata_port_operations* @ata_dummy_port_ops, i8* null }, align 8, !dbg !7139
@.str.101 = private unnamed_addr constant [13 x i8] c"%sata%u: %pV\00", align 1
@.str.102 = private unnamed_addr constant [18 x i8] c"%sata%u.%02u: %pV\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"version %s\0A\00", align 1
@ata_force_param_buf = internal global [2048 x i8] zeroinitializer, section ".init.data", align 16, !dbg !7183
@.str.104 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"libata\00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c"3.00\00", align 1
@ata_rw_cmds = internal constant [24 x i8] c"\C4\C5)9\00\00\00\CE 0$4\00\00\00\00\C8\CA%5\00\00\00=", align 16, !dbg !7232
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.107 = private unnamed_addr constant [30 x i8] c"FORCE: horkage modified (%s)\0A\00", align 1
@.str.108 = private unnamed_addr constant [41 x i8] c"applying link speed limit horkage to %s\0A\00", align 1
@.str.109 = private unnamed_addr constant [49 x i8] c"HPA support seems broken, skipping HPA handling\0A\00", align 1
@.str.110 = private unnamed_addr constant [41 x i8] c"HPA detected: current %llu, native %llu\0A\00", align 1
@.str.111 = private unnamed_addr constant [54 x i8] c"native sectors (%llu) is smaller than sectors (%llu)\0A\00", align 1
@.str.112 = private unnamed_addr constant [61 x i8] c"device aborted resize (%llu -> %llu), skipping HPA handling\0A\00", align 1
@.str.113 = private unnamed_addr constant [52 x i8] c"failed to re-read IDENTIFY data after HPA resizing\0A\00", align 1
@.str.114 = private unnamed_addr constant [41 x i8] c"HPA unlocked: %llu -> %llu, native %llu\0A\00", align 1
@.str.115 = private unnamed_addr constant [51 x i8] c"failed to read native max address (err_mask=0x%x)\0A\00", align 1
@.str.116 = private unnamed_addr constant [43 x i8] c"failed to set max address (err_mask=0x%x)\0A\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"NCQ (not used)\00", align 1
@.str.118 = private unnamed_addr constant [39 x i8] c"failed to enable AA (error_mask=0x%x)\0A\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c", AA\00", align 1
@.str.120 = private unnamed_addr constant [17 x i8] c"NCQ (depth %d)%s\00", align 1
@.str.121 = private unnamed_addr constant [20 x i8] c"NCQ (depth %d/%d)%s\00", align 1
@.str.122 = private unnamed_addr constant [33 x i8] c"NCQ Send/Recv Log not supported\0A\00", align 1
@.str.123 = private unnamed_addr constant [44 x i8] c"failed to get NCQ Send/Recv Log Emask 0x%x\0A\00", align 1
@.str.124 = private unnamed_addr constant [31 x i8] c"disabling queued TRIM support\0A\00", align 1
@.str.125 = private unnamed_addr constant [43 x i8] c"failed to get NCQ Non-Data Log Emask 0x%x\0A\00", align 1
@.str.126 = private unnamed_addr constant [48 x i8] c"failed to get Identify Device data, Emask 0x%x\0A\00", align 1
@.str.127 = private unnamed_addr constant [37 x i8] c"SATA page does not support priority\0A\00", align 1
@.str.128 = private unnamed_addr constant [51 x i8] c"failed to enable Sense Data Reporting, Emask 0x%x\0A\00", align 1
@.str.129 = private unnamed_addr constant [41 x i8] c"ATA Zoned Information Log not supported\0A\00", align 1
@.str.130 = private unnamed_addr constant [39 x i8] c"ATA Identify Device Log not supported\0A\00", align 1
@.str.131 = private unnamed_addr constant [46 x i8] c"failed to get Device Identify Log Emask 0x%x\0A\00", align 1
@.str.132 = private unnamed_addr constant [28 x i8] c"Security Log not supported\0A\00", align 1
@.str.133 = private unnamed_addr constant [41 x i8] c"failed to read Security Log, Emask 0x%x\0A\00", align 1
@.str.134 = private unnamed_addr constant [47 x i8] c"Trusted Computing capability qword not valid!\0A\00", align 1
@.str.135 = private unnamed_addr constant [28 x i8] c"FORCE: xfer_mask set to %s\0A\00", align 1
@.str.136 = private unnamed_addr constant [24 x i8] c" (SET_XFERMODE skipped)\00", align 1
@.str.137 = private unnamed_addr constant [69 x i8] c"NOSETXFER but PATA detected - can't skip SETXFER, might malfunction\0A\00", align 1
@.str.138 = private unnamed_addr constant [24 x i8] c" (device error ignored)\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"configured for %s%s\0A\00", align 1
@.str.140 = private unnamed_addr constant [40 x i8] c"failed to set xfermode (err_mask=0x%x)\0A\00", align 1
@sata_deb_timing_hotplug = external dso_local constant [0 x i64], align 8
@sata_deb_timing_normal = external dso_local constant [0 x i64], align 8
@.str.141 = private unnamed_addr constant [42 x i8] c"SATA link up %s (SStatus %X SControl %X)\0A\00", align 1
@.str.142 = private unnamed_addr constant [41 x i8] c"SATA link down (SStatus %X SControl %X)\0A\00", align 1
@.str.143 = private unnamed_addr constant [25 x i8] c"class mismatch %d != %d\0A\00", align 1
@.str.144 = private unnamed_addr constant [36 x i8] c"model number mismatch '%s' != '%s'\0A\00", align 1
@.str.145 = private unnamed_addr constant [37 x i8] c"serial number mismatch '%s' != '%s'\0A\00", align 1
@ata_device_blacklist = internal constant [112 x %struct.ata_blacklist_entry] [%struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.146, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.147, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.148, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.149, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.150, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.152, i32 0, i32 0), i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i32 0, i32 0), i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.155, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.156, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.160, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.161, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.162, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.163, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.164, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.165, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.167, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.168, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.171, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.172, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.173, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.176, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.178, i32 0, i32 0), i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.179, i32 0, i32 0), i8* null, i64 2 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.180, i32 0, i32 0), i8* null, i64 32 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.181, i32 0, i32 0), i8* null, i64 8 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.182, i32 0, i32 0), i8* null, i64 2048 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.183, i32 0, i32 0), i8* null, i64 131072 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.184, i32 0, i32 0), i8* null, i64 131072 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i64 33554432 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.187, i32 0, i32 0), i8* null, i64 33554432 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.188, i32 0, i32 0), i8* null, i64 33554432 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.189, i32 0, i32 0), i8* null, i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.190, i32 0, i32 0), i8* null, i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.191, i32 0, i32 0), i8* null, i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.193, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.195, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.200, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.202, i32 0, i32 0), i64 4100 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.202, i32 0, i32 0), i64 4100 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.202, i32 0, i32 0), i64 4100 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.202, i32 0, i32 0), i64 4100 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.206, i32 0, i32 0), i8* null, i64 1081344 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.208, i32 0, i32 0), i64 32768 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.210, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.212, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.214, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.216, i32 0, i32 0), i64 4 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i32 0, i32 0), i8* null, i64 67108864 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.219, i32 0, i32 0), i64 16 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.221, i32 0, i32 0), i64 16 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.223, i32 0, i32 0), i64 16 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.225, i32 0, i32 0), i64 16 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.227, i32 0, i32 0), i64 16 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i32 0, i32 0), i8* null, i64 64 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.229, i32 0, i32 0), i8* null, i64 64 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i32 0, i32 0), i8* null, i64 64 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.232, i32 0, i32 0), i64 256 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.234, i32 0, i32 0), i64 256 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.235, i32 0, i32 0), i8* null, i64 1024 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.236, i32 0, i32 0), i8* null, i64 1024 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.237, i32 0, i32 0), i8* null, i64 8192 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.238, i32 0, i32 0), i8* null, i64 8192 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.239, i32 0, i32 0), i8* null, i64 16384 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.240, i32 0, i32 0), i8* null, i64 16384 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.241, i32 0, i32 0), i8* null, i64 16384 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.242, i32 0, i32 0), i8* null, i64 16384 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.243, i32 0, i32 0), i8* null, i64 16384 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.244, i32 0, i32 0), i8* null, i64 1048576 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i64 5767168 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.245, i32 0, i32 0), i8* null, i64 5242880 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.247, i32 0, i32 0), i8* null, i64 5767168 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.248, i32 0, i32 0), i8* null, i64 5767168 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.250, i32 0, i32 0), i64 1048576 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.252, i32 0, i32 0), i64 1048576 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.253, i32 0, i32 0), i8* null, i64 1048576 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.255, i32 0, i32 0), i64 1048576 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.257, i32 0, i32 0), i8* null, i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.258, i32 0, i32 0), i8* null, i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.262, i32 0, i32 0), i8* null, i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.263, i32 0, i32 0), i8* null, i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.264, i32 0, i32 0), i8* null, i64 4718592 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.265, i32 0, i32 0), i8* null, i64 16777216 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.266, i32 0, i32 0), i8* null, i64 0 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.267, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.268, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.269, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.270, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.271, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.272, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.273, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.274, i32 0, i32 0), i8* null, i64 4194304 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i32 0, i32 0), i8* null, i64 2097152 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.276, i32 0, i32 0), i8* null, i64 2097152 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.277, i32 0, i32 0), i8* null, i64 2097152 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.278, i32 0, i32 0), i8* null, i64 2097152 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.279, i32 0, i32 0), i8* null, i64 2097152 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.280, i32 0, i32 0), i8* null, i64 2097152 }, %struct.ata_blacklist_entry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.281, i32 0, i32 0), i8* null, i64 2097152 }, %struct.ata_blacklist_entry zeroinitializer], align 16, !dbg !7245
@.str.146 = private unnamed_addr constant [13 x i8] c"WDC AC11000H\00", align 1
@.str.147 = private unnamed_addr constant [13 x i8] c"WDC AC22100H\00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c"WDC AC32500H\00", align 1
@.str.149 = private unnamed_addr constant [13 x i8] c"WDC AC33100H\00", align 1
@.str.150 = private unnamed_addr constant [13 x i8] c"WDC AC31600H\00", align 1
@.str.151 = private unnamed_addr constant [13 x i8] c"WDC AC32100H\00", align 1
@.str.152 = private unnamed_addr constant [9 x i8] c"24.09P07\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"WDC AC23200L\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"21.10N21\00", align 1
@.str.155 = private unnamed_addr constant [17 x i8] c"Compaq CRD-8241B\00", align 1
@.str.156 = private unnamed_addr constant [10 x i8] c"CRD-8400B\00", align 1
@.str.157 = private unnamed_addr constant [13 x i8] c"CRD-848[02]B\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"CRD-84\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"SanDisk SDP3B\00", align 1
@.str.160 = private unnamed_addr constant [17 x i8] c"SanDisk SDP3B-64\00", align 1
@.str.161 = private unnamed_addr constant [17 x i8] c"SANYO CD-ROM CRD\00", align 1
@.str.162 = private unnamed_addr constant [14 x i8] c"HITACHI CDR-8\00", align 1
@.str.163 = private unnamed_addr constant [20 x i8] c"HITACHI CDR-8[34]35\00", align 1
@.str.164 = private unnamed_addr constant [24 x i8] c"Toshiba CD-ROM XM-6202B\00", align 1
@.str.165 = private unnamed_addr constant [25 x i8] c"TOSHIBA CD-ROM XM-1702BC\00", align 1
@.str.166 = private unnamed_addr constant [10 x i8] c"CD-532E-A\00", align 1
@.str.167 = private unnamed_addr constant [20 x i8] c"E-IDE CD-ROM CR-840\00", align 1
@.str.168 = private unnamed_addr constant [17 x i8] c"CD-ROM Drive/F5A\00", align 1
@.str.169 = private unnamed_addr constant [12 x i8] c"WPI CDD-820\00", align 1
@.str.170 = private unnamed_addr constant [23 x i8] c"SAMSUNG CD-ROM SC-148C\00", align 1
@.str.171 = private unnamed_addr constant [18 x i8] c"SAMSUNG CD-ROM SC\00", align 1
@.str.172 = private unnamed_addr constant [31 x i8] c"ATAPI CD-ROM DRIVE 40X MAXIMUM\00", align 1
@.str.173 = private unnamed_addr constant [13 x i8] c"_NEC DV5800A\00", align 1
@.str.174 = private unnamed_addr constant [22 x i8] c"SAMSUNG CD-ROM SN-124\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"N001\00", align 1
@.str.176 = private unnamed_addr constant [18 x i8] c"Seagate STT20000A\00", align 1
@.str.177 = private unnamed_addr constant [20 x i8] c" 2GB ATA Flash Disk\00", align 1
@.str.178 = private unnamed_addr constant [9 x i8] c"ADMA428M\00", align 1
@.str.179 = private unnamed_addr constant [20 x i8] c"VRFDFC22048UCHC-TE*\00", align 1
@.str.180 = private unnamed_addr constant [13 x i8] c"Config  Disk\00", align 1
@.str.181 = private unnamed_addr constant [25 x i8] c"TORiSAN DVD-ROM DRD-N216\00", align 1
@.str.182 = private unnamed_addr constant [25 x i8] c"QUANTUM DAT    DAT72-000\00", align 1
@.str.183 = private unnamed_addr constant [24 x i8] c"Slimtype DVD A  DS8A8SH\00", align 1
@.str.184 = private unnamed_addr constant [24 x i8] c"Slimtype DVD A  DS8A9SH\00", align 1
@.str.185 = private unnamed_addr constant [11 x i8] c"ST380013AS\00", align 1
@.str.186 = private unnamed_addr constant [5 x i8] c"3.20\00", align 1
@.str.187 = private unnamed_addr constant [18 x i8] c"LITEON CX1-JB*-HP\00", align 1
@.str.188 = private unnamed_addr constant [13 x i8] c"LITEON EP1-*\00", align 1
@.str.189 = private unnamed_addr constant [17 x i8] c"WDC WD740ADFD-00\00", align 1
@.str.190 = private unnamed_addr constant [21 x i8] c"WDC WD740ADFD-00NLR1\00", align 1
@.str.191 = private unnamed_addr constant [18 x i8] c"FUJITSU MHT2060BH\00", align 1
@.str.192 = private unnamed_addr constant [9 x i8] c"Maxtor *\00", align 1
@.str.193 = private unnamed_addr constant [6 x i8] c"BANC*\00", align 1
@.str.194 = private unnamed_addr constant [15 x i8] c"Maxtor 7V300F0\00", align 1
@.str.195 = private unnamed_addr constant [9 x i8] c"VA111630\00", align 1
@.str.196 = private unnamed_addr constant [11 x i8] c"ST380817AS\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"3.42\00", align 1
@.str.198 = private unnamed_addr constant [12 x i8] c"ST3160023AS\00", align 1
@.str.199 = private unnamed_addr constant [13 x i8] c"OCZ CORE_SSD\00", align 1
@.str.200 = private unnamed_addr constant [9 x i8] c"02.10104\00", align 1
@.str.201 = private unnamed_addr constant [13 x i8] c"ST31500341AS\00", align 1
@.str.202 = private unnamed_addr constant [9 x i8] c"SD1[5-9]\00", align 1
@.str.203 = private unnamed_addr constant [13 x i8] c"ST31000333AS\00", align 1
@.str.204 = private unnamed_addr constant [15 x i8] c"ST3640[36]23AS\00", align 1
@.str.205 = private unnamed_addr constant [15 x i8] c"ST3320[68]13AS\00", align 1
@.str.206 = private unnamed_addr constant [23 x i8] c"ST1000LM024 HN-M101MBB\00", align 1
@.str.207 = private unnamed_addr constant [12 x i8] c"VB0250EAVER\00", align 1
@.str.208 = private unnamed_addr constant [5 x i8] c"HPG7\00", align 1
@.str.209 = private unnamed_addr constant [16 x i8] c"HTS541060G9SA00\00", align 1
@.str.210 = private unnamed_addr constant [9 x i8] c"MB3OC60D\00", align 1
@.str.211 = private unnamed_addr constant [16 x i8] c"HTS541080G9SA00\00", align 1
@.str.212 = private unnamed_addr constant [9 x i8] c"MB4OC60D\00", align 1
@.str.213 = private unnamed_addr constant [16 x i8] c"HTS541010G9SA00\00", align 1
@.str.214 = private unnamed_addr constant [9 x i8] c"MBZOC60D\00", align 1
@.str.215 = private unnamed_addr constant [19 x i8] c"C300-CTFDDAC128MAG\00", align 1
@.str.216 = private unnamed_addr constant [5 x i8] c"0001\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"SanDisk SD[789]*\00", align 1
@.str.218 = private unnamed_addr constant [16 x i8] c"HDS724040KLSA80\00", align 1
@.str.219 = private unnamed_addr constant [9 x i8] c"KFAOA20N\00", align 1
@.str.220 = private unnamed_addr constant [20 x i8] c"WDC WD3200JD-00KLB0\00", align 1
@.str.221 = private unnamed_addr constant [16 x i8] c"WD-WCAMR1130137\00", align 1
@.str.222 = private unnamed_addr constant [20 x i8] c"WDC WD2500JD-00HBB0\00", align 1
@.str.223 = private unnamed_addr constant [16 x i8] c"WD-WMAL71490727\00", align 1
@.str.224 = private unnamed_addr constant [15 x i8] c"MAXTOR 6L080L4\00", align 1
@.str.225 = private unnamed_addr constant [9 x i8] c"A93.0500\00", align 1
@.str.226 = private unnamed_addr constant [11 x i8] c"OCZ-VERTEX\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"1.30\00", align 1
@.str.228 = private unnamed_addr constant [10 x i8] c"ST340823A\00", align 1
@.str.229 = private unnamed_addr constant [10 x i8] c"ST320413A\00", align 1
@.str.230 = private unnamed_addr constant [10 x i8] c"ST310211A\00", align 1
@.str.231 = private unnamed_addr constant [25 x i8] c"QUANTUM FIREBALLlct10 05\00", align 1
@.str.232 = private unnamed_addr constant [9 x i8] c"A03.0900\00", align 1
@.str.233 = private unnamed_addr constant [29 x i8] c"TSSTcorp CDDVDW SH-S202[HJN]\00", align 1
@.str.234 = private unnamed_addr constant [8 x i8] c"SB0[01]\00", align 1
@.str.235 = private unnamed_addr constant [16 x i8] c"MTRON MSP-SATA*\00", align 1
@.str.236 = private unnamed_addr constant [19 x i8] c"BUFFALO HD-QSU2/R5\00", align 1
@.str.237 = private unnamed_addr constant [11 x i8] c"WD My Book\00", align 1
@.str.238 = private unnamed_addr constant [25 x i8] c"Seagate FreeAgent GoFlex\00", align 1
@.str.239 = private unnamed_addr constant [24 x i8] c"PIONEER DVD-RW  DVRTD08\00", align 1
@.str.240 = private unnamed_addr constant [25 x i8] c"PIONEER DVD-RW  DVRTD08A\00", align 1
@.str.241 = private unnamed_addr constant [24 x i8] c"PIONEER DVD-RW  DVR-215\00", align 1
@.str.242 = private unnamed_addr constant [25 x i8] c"PIONEER DVD-RW  DVR-212D\00", align 1
@.str.243 = private unnamed_addr constant [25 x i8] c"PIONEER DVD-RW  DVR-216D\00", align 1
@.str.244 = private unnamed_addr constant [15 x i8] c"CT500BX100SSD1\00", align 1
@.str.245 = private unnamed_addr constant [20 x i8] c"Crucial_CT512MX100*\00", align 1
@.str.246 = private unnamed_addr constant [5 x i8] c"MU01\00", align 1
@.str.247 = private unnamed_addr constant [19 x i8] c"Crucial_CT480M500*\00", align 1
@.str.248 = private unnamed_addr constant [19 x i8] c"Crucial_CT960M500*\00", align 1
@.str.249 = private unnamed_addr constant [27 x i8] c"SAMSUNG MZMPC128HBFU-000MV\00", align 1
@.str.250 = private unnamed_addr constant [9 x i8] c"CXM14M1Q\00", align 1
@.str.251 = private unnamed_addr constant [26 x i8] c"SAMSUNG SSD PM830 mSATA *\00", align 1
@.str.252 = private unnamed_addr constant [9 x i8] c"CXM13D1Q\00", align 1
@.str.253 = private unnamed_addr constant [27 x i8] c"SAMSUNG MZ7TD256HAFV-000L9\00", align 1
@.str.254 = private unnamed_addr constant [27 x i8] c"SAMSUNG MZ7TE512HMHP-000L1\00", align 1
@.str.255 = private unnamed_addr constant [9 x i8] c"EXT06L0Q\00", align 1
@.str.256 = private unnamed_addr constant [16 x i8] c"Micron_M500IT_*\00", align 1
@.str.257 = private unnamed_addr constant [14 x i8] c"Micron_M500_*\00", align 1
@.str.258 = private unnamed_addr constant [17 x i8] c"Crucial_CT*M500*\00", align 1
@.str.259 = private unnamed_addr constant [17 x i8] c"Micron_M5[15]0_*\00", align 1
@.str.260 = private unnamed_addr constant [17 x i8] c"Crucial_CT*M550*\00", align 1
@.str.261 = private unnamed_addr constant [18 x i8] c"Crucial_CT*MX100*\00", align 1
@.str.262 = private unnamed_addr constant [17 x i8] c"Samsung SSD 840*\00", align 1
@.str.263 = private unnamed_addr constant [17 x i8] c"Samsung SSD 850*\00", align 1
@.str.264 = private unnamed_addr constant [11 x i8] c"FCCT*M500*\00", align 1
@.str.265 = private unnamed_addr constant [18 x i8] c"SuperSSpeed S238*\00", align 1
@.str.266 = private unnamed_addr constant [16 x i8] c"INTEL*SSDSC2MH*\00", align 1
@.str.267 = private unnamed_addr constant [8 x i8] c"Micron*\00", align 1
@.str.268 = private unnamed_addr constant [9 x i8] c"Crucial*\00", align 1
@.str.269 = private unnamed_addr constant [11 x i8] c"INTEL*SSD*\00", align 1
@.str.270 = private unnamed_addr constant [11 x i8] c"SSD*INTEL*\00", align 1
@.str.271 = private unnamed_addr constant [13 x i8] c"Samsung*SSD*\00", align 1
@.str.272 = private unnamed_addr constant [13 x i8] c"SAMSUNG*SSD*\00", align 1
@.str.273 = private unnamed_addr constant [15 x i8] c"SAMSUNG*MZ7KM*\00", align 1
@.str.274 = private unnamed_addr constant [21 x i8] c"ST[1248][0248]0[FH]*\00", align 1
@.str.275 = private unnamed_addr constant [14 x i8] c"WDC WD800JD-*\00", align 1
@.str.276 = private unnamed_addr constant [15 x i8] c"WDC WD1200JD-*\00", align 1
@.str.277 = private unnamed_addr constant [15 x i8] c"WDC WD1600JD-*\00", align 1
@.str.278 = private unnamed_addr constant [15 x i8] c"WDC WD2000JD-*\00", align 1
@.str.279 = private unnamed_addr constant [15 x i8] c"WDC WD2500JD-*\00", align 1
@.str.280 = private unnamed_addr constant [15 x i8] c"WDC WD3000JD-*\00", align 1
@.str.281 = private unnamed_addr constant [15 x i8] c"WDC WD3200JD-*\00", align 1
@.str.282 = private unnamed_addr constant [43 x i8] c"device is on DMA blacklist, disabling DMA\0A\00", align 1
@.str.283 = private unnamed_addr constant [55 x i8] c"simplex DMA is claimed by other device, disabling DMA\0A\00", align 1
@.str.284 = private unnamed_addr constant [41 x i8] c"limited to UDMA/33 due to 40-wire cable\0A\00", align 1
@.str.285 = private unnamed_addr constant [32 x i8] c"FORCE: PHY spd limit set to %s\0A\00", align 1
@.str.286 = private unnamed_addr constant [38 x i8] c"FORCE: link flag 0x%x forced -> 0x%x\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.287 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7262
@.str.288 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@ata_finalize_port_ops.lock = internal global %struct.spinlock undef, align 1, !dbg !7267
@.str.289 = private unnamed_addr constant [31 x i8] c"\017libata version 3.00 loaded.\0A\00", align 1
@.str.290 = private unnamed_addr constant [59 x i8] c"\014ata: failed to extend force table, libata.force ignored\0A\00", align 1
@.str.291 = private unnamed_addr constant [50 x i8] c"\014ata: failed to parse force parameter \22%s\22 (%s)\0A\00", align 1
@ata_parse_force_one.force_tbl = internal constant [53 x %struct.ata_force_param] [%struct.ata_force_param { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.292, i32 0, i32 0), i8 1, i8 0, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.293, i32 0, i32 0), i8 2, i8 0, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.294, i32 0, i32 0), i8 3, i8 0, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8 4, i8 0, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.296, i32 0, i32 0), i8 5, i8 0, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8 6, i8 0, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8 0, i8 1, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.299, i32 0, i32 0), i8 0, i8 2, i64 0, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.300, i32 0, i32 0), i8 0, i8 0, i64 0, i32 4, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.301, i32 0, i32 0), i8 0, i8 0, i64 0, i32 0, i32 4, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.302, i32 0, i32 0), i8 0, i8 0, i64 0, i32 524288, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.303, i32 0, i32 0), i8 0, i8 0, i64 0, i32 0, i32 524288, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.304, i32 0, i32 0), i8 0, i8 0, i64 0, i32 65536, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.305, i32 0, i32 0), i8 0, i8 0, i64 1, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.306, i32 0, i32 0), i8 0, i8 0, i64 2, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.307, i32 0, i32 0), i8 0, i8 0, i64 4, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), i8 0, i8 0, i64 8, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.309, i32 0, i32 0), i8 0, i8 0, i64 16, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i8 0, i8 0, i64 32, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i8 0, i8 0, i64 64, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i32 0, i32 0), i8 0, i8 0, i64 128, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i8 0, i8 0, i64 256, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i8 0, i8 0, i64 512, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.315, i32 0, i32 0), i8 0, i8 0, i64 1024, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.316, i32 0, i32 0), i8 0, i8 0, i64 2048, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.317, i32 0, i32 0), i8 0, i8 0, i64 4096, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.318, i32 0, i32 0), i8 0, i8 0, i64 4096, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.319, i32 0, i32 0), i8 0, i8 0, i64 4096, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.320, i32 0, i32 0), i8 0, i8 0, i64 8192, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.321, i32 0, i32 0), i8 0, i8 0, i64 8192, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.322, i32 0, i32 0), i8 0, i8 0, i64 8192, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.323, i32 0, i32 0), i8 0, i8 0, i64 16384, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.324, i32 0, i32 0), i8 0, i8 0, i64 16384, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.325, i32 0, i32 0), i8 0, i8 0, i64 16384, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.326, i32 0, i32 0), i8 0, i8 0, i64 32768, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.327, i32 0, i32 0), i8 0, i8 0, i64 32768, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.328, i32 0, i32 0), i8 0, i8 0, i64 32768, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.329, i32 0, i32 0), i8 0, i8 0, i64 65536, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i32 0, i32 0), i8 0, i8 0, i64 65536, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.331, i32 0, i32 0), i8 0, i8 0, i64 65536, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.332, i32 0, i32 0), i8 0, i8 0, i64 131072, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.333, i32 0, i32 0), i8 0, i8 0, i64 131072, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.334, i32 0, i32 0), i8 0, i8 0, i64 131072, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.335, i32 0, i32 0), i8 0, i8 0, i64 262144, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.336, i32 0, i32 0), i8 0, i8 0, i64 262144, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.337, i32 0, i32 0), i8 0, i8 0, i64 262144, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.338, i32 0, i32 0), i8 0, i8 0, i64 524288, i32 0, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.339, i32 0, i32 0), i8 0, i8 0, i64 0, i32 0, i32 0, i16 2 }, %struct.ata_force_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i32 0, i32 0), i8 0, i8 0, i64 0, i32 0, i32 0, i16 4 }, %struct.ata_force_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.341, i32 0, i32 0), i8 0, i8 0, i64 0, i32 0, i32 0, i16 6 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.342, i32 0, i32 0), i8 0, i8 0, i64 0, i32 0, i32 0, i16 512 }, %struct.ata_force_param { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.343, i32 0, i32 0), i8 0, i8 0, i64 0, i32 262144, i32 0, i16 0 }, %struct.ata_force_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.344, i32 0, i32 0), i8 0, i8 0, i64 0, i32 32, i32 0, i16 0 }], section ".init.rodata", align 16, !dbg !7272
@.str.292 = private unnamed_addr constant [4 x i8] c"40c\00", align 1
@.str.293 = private unnamed_addr constant [4 x i8] c"80c\00", align 1
@.str.294 = private unnamed_addr constant [9 x i8] c"short40c\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"unk\00", align 1
@.str.296 = private unnamed_addr constant [4 x i8] c"ign\00", align 1
@.str.297 = private unnamed_addr constant [5 x i8] c"sata\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"1.5Gbps\00", align 1
@.str.299 = private unnamed_addr constant [8 x i8] c"3.0Gbps\00", align 1
@.str.300 = private unnamed_addr constant [6 x i8] c"noncq\00", align 1
@.str.301 = private unnamed_addr constant [4 x i8] c"ncq\00", align 1
@.str.302 = private unnamed_addr constant [10 x i8] c"noncqtrim\00", align 1
@.str.303 = private unnamed_addr constant [8 x i8] c"ncqtrim\00", align 1
@.str.304 = private unnamed_addr constant [8 x i8] c"dump_id\00", align 1
@.str.305 = private unnamed_addr constant [5 x i8] c"pio0\00", align 1
@.str.306 = private unnamed_addr constant [5 x i8] c"pio1\00", align 1
@.str.307 = private unnamed_addr constant [5 x i8] c"pio2\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"pio3\00", align 1
@.str.309 = private unnamed_addr constant [5 x i8] c"pio4\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"pio5\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"pio6\00", align 1
@.str.312 = private unnamed_addr constant [7 x i8] c"mwdma0\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"mwdma1\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"mwdma2\00", align 1
@.str.315 = private unnamed_addr constant [7 x i8] c"mwdma3\00", align 1
@.str.316 = private unnamed_addr constant [7 x i8] c"mwdma4\00", align 1
@.str.317 = private unnamed_addr constant [6 x i8] c"udma0\00", align 1
@.str.318 = private unnamed_addr constant [7 x i8] c"udma16\00", align 1
@.str.319 = private unnamed_addr constant [8 x i8] c"udma/16\00", align 1
@.str.320 = private unnamed_addr constant [6 x i8] c"udma1\00", align 1
@.str.321 = private unnamed_addr constant [7 x i8] c"udma25\00", align 1
@.str.322 = private unnamed_addr constant [8 x i8] c"udma/25\00", align 1
@.str.323 = private unnamed_addr constant [6 x i8] c"udma2\00", align 1
@.str.324 = private unnamed_addr constant [7 x i8] c"udma33\00", align 1
@.str.325 = private unnamed_addr constant [8 x i8] c"udma/33\00", align 1
@.str.326 = private unnamed_addr constant [6 x i8] c"udma3\00", align 1
@.str.327 = private unnamed_addr constant [7 x i8] c"udma44\00", align 1
@.str.328 = private unnamed_addr constant [8 x i8] c"udma/44\00", align 1
@.str.329 = private unnamed_addr constant [6 x i8] c"udma4\00", align 1
@.str.330 = private unnamed_addr constant [7 x i8] c"udma66\00", align 1
@.str.331 = private unnamed_addr constant [8 x i8] c"udma/66\00", align 1
@.str.332 = private unnamed_addr constant [6 x i8] c"udma5\00", align 1
@.str.333 = private unnamed_addr constant [8 x i8] c"udma100\00", align 1
@.str.334 = private unnamed_addr constant [9 x i8] c"udma/100\00", align 1
@.str.335 = private unnamed_addr constant [6 x i8] c"udma6\00", align 1
@.str.336 = private unnamed_addr constant [8 x i8] c"udma133\00", align 1
@.str.337 = private unnamed_addr constant [9 x i8] c"udma/133\00", align 1
@.str.338 = private unnamed_addr constant [6 x i8] c"udma7\00", align 1
@.str.339 = private unnamed_addr constant [7 x i8] c"nohrst\00", align 1
@.str.340 = private unnamed_addr constant [7 x i8] c"nosrst\00", align 1
@.str.341 = private unnamed_addr constant [6 x i8] c"norst\00", align 1
@.str.342 = private unnamed_addr constant [8 x i8] c"rstonce\00", align 1
@.str.343 = private unnamed_addr constant [13 x i8] c"atapi_dmadir\00", align 1
@.str.344 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.345 = private unnamed_addr constant [15 x i8] c"invalid device\00", align 1
@.str.346 = private unnamed_addr constant [18 x i8] c"invalid port/link\00", align 1
@.str.347 = private unnamed_addr constant [14 x i8] c"unknown value\00", align 1
@.str.348 = private unnamed_addr constant [16 x i8] c"ambiguous value\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@llvm.used = appending global [42 x i8*] [i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_string* } }* @__param_force to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_forcetype311, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @__UNIQUE_ID_force312, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_atapi_enabled to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_atapi_enabledtype313, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__UNIQUE_ID_atapi_enabled314, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_atapi_dmadir to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_atapi_dmadirtype315, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__UNIQUE_ID_atapi_dmadir316, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_atapi_passthru16 to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_atapi_passthru16type317, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__UNIQUE_ID_atapi_passthru16318, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_fua to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_fuatype319, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__UNIQUE_ID_fua320, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ignore_hpa to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_ignore_hpatype321, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__UNIQUE_ID_ignore_hpa322, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_dma to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_dmatype323, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_dma324, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ata_probe_timeout to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_ata_probe_timeouttype325, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_ata_probe_timeout326, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_noacpi to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_noacpitype327, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__UNIQUE_ID_noacpi328, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_allow_tpm to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_allow_tpmtype329, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__UNIQUE_ID_allow_tpm330, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_atapi_an to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_atapi_antype331, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__UNIQUE_ID_atapi_an332, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_author333, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_description334, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_file335, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__UNIQUE_ID_license336, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_version337, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* bitcast (void ()* @ata_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_ata_init380 to i8*), i8* bitcast (void ()** @__exitcall_ata_exit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_std_prereset(%struct.ata_link* %link, i64 %deadline) #0 !dbg !7290 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %deadline.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %timing = alloca i64*, align 8
  %rc = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !7293, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7295, metadata !DIExpression()), !dbg !7296
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7297
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !7298
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !7298
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !7296
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !7299, metadata !DIExpression()), !dbg !7301
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7302
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 12, !dbg !7303
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !7301
  call void @llvm.dbg.declare(metadata i64** %timing, metadata !7304, metadata !DIExpression()), !dbg !7306
  %3 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7307
  %call = call i64* @sata_ehc_deb_timing(%struct.ata_eh_context* %3) #12, !dbg !7308
  store i64* %call, i64** %timing, align 8, !dbg !7306
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7309, metadata !DIExpression()), !dbg !7310
  %4 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7311
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %4, i32 0, i32 0, !dbg !7313
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 3, !dbg !7314
  %5 = load i32, i32* %action, align 8, !dbg !7314
  %and = and i32 %5, 4, !dbg !7315
  %tobool = icmp ne i32 %and, 0, !dbg !7315
  br i1 %tobool, label %if.then, label %if.end, !dbg !7316

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7317
  br label %return, !dbg !7317

if.end:                                           ; preds = %entry
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7318
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 3, !dbg !7320
  %7 = load i64, i64* %flags, align 8, !dbg !7320
  %and2 = and i64 %7, 2, !dbg !7321
  %tobool3 = icmp ne i64 %and2, 0, !dbg !7321
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !7322

if.then4:                                         ; preds = %if.end
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7323
  %9 = load i64*, i64** %timing, align 8, !dbg !7325
  %10 = load i64, i64* %deadline.addr, align 8, !dbg !7326
  %call5 = call i32 @sata_link_resume(%struct.ata_link* %8, i64* %9, i64 %10) #12, !dbg !7327
  store i32 %call5, i32* %rc, align 4, !dbg !7328
  %11 = load i32, i32* %rc, align 4, !dbg !7329
  %tobool6 = icmp ne i32 %11, 0, !dbg !7329
  br i1 %tobool6, label %land.lhs.true, label %if.end8, !dbg !7331

land.lhs.true:                                    ; preds = %if.then4
  %12 = load i32, i32* %rc, align 4, !dbg !7332
  %cmp = icmp ne i32 %12, -95, !dbg !7333
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !7334

if.then7:                                         ; preds = %land.lhs.true
  %13 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7335
  %14 = load i32, i32* %rc, align 4, !dbg !7335
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.82, i64 0, i64 0), i32 %14) #12, !dbg !7335
  br label %if.end8, !dbg !7335

if.end8:                                          ; preds = %if.then7, %land.lhs.true, %if.then4
  br label %if.end9, !dbg !7336

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7337
  %call10 = call zeroext i1 @ata_phys_link_offline(%struct.ata_link* %15) #12, !dbg !7339
  br i1 %call10, label %if.then11, label %if.end15, !dbg !7340

if.then11:                                        ; preds = %if.end9
  %16 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7341
  %i12 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %16, i32 0, i32 0, !dbg !7342
  %action13 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i12, i32 0, i32 3, !dbg !7343
  %17 = load i32, i32* %action13, align 8, !dbg !7344
  %and14 = and i32 %17, -3, !dbg !7344
  store i32 %and14, i32* %action13, align 8, !dbg !7344
  br label %if.end15, !dbg !7341

if.end15:                                         ; preds = %if.then11, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !7345
  br label %return, !dbg !7345

return:                                           ; preds = %if.end15, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7346
  ret i32 %18, !dbg !7346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_std_postreset(%struct.ata_link* %link, i32* %classes) #0 !dbg !7347 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %classes.addr = alloca i32*, align 8
  %serror = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7348, metadata !DIExpression()), !dbg !7349
  store i32* %classes, i32** %classes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %classes.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.declare(metadata i32* %serror, metadata !7352, metadata !DIExpression()), !dbg !7353
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7354
  %call = call i32 @sata_scr_read(%struct.ata_link* %0, i32 1, i32* %serror) #12, !dbg !7356
  %tobool = icmp ne i32 %call, 0, !dbg !7356
  br i1 %tobool, label %if.end, label %if.then, !dbg !7357

if.then:                                          ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7358
  %2 = load i32, i32* %serror, align 4, !dbg !7359
  %call1 = call i32 @sata_scr_write(%struct.ata_link* %1, i32 1, i32 %2) #12, !dbg !7360
  br label %if.end, !dbg !7360

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7361
  call void @sata_print_link_status(%struct.ata_link* %3) #12, !dbg !7362
  ret void, !dbg !7363
}

; Function Attrs: noredzone
declare dso_local void @ata_std_error_handler(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local void @ata_std_sched_eh(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local void @ata_std_end_eh(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_std_qc_defer(%struct.ata_queued_cmd* %qc) #0 !dbg !7364 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %link = alloca %struct.ata_link*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !7365, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !7367, metadata !DIExpression()), !dbg !7368
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !7369
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !7370
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7370
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 0, !dbg !7371
  %2 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !7371
  store %struct.ata_link* %2, %struct.ata_link** %link, align 8, !dbg !7368
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !7372
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 4, !dbg !7374
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !7375
  %4 = load i8, i8* %protocol, align 8, !dbg !7375
  %call = call zeroext i1 @ata_is_ncq(i8 zeroext %4) #12, !dbg !7376
  br i1 %call, label %if.then, label %if.else, !dbg !7377

if.then:                                          ; preds = %entry
  %5 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7378
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 3, !dbg !7381
  %6 = load i32, i32* %active_tag, align 8, !dbg !7381
  %call2 = call zeroext i1 @ata_tag_valid(i32 %6) #12, !dbg !7382
  br i1 %call2, label %if.end, label %if.then3, !dbg !7383

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !7384
  br label %return, !dbg !7384

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !7385

if.else:                                          ; preds = %entry
  %7 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7386
  %active_tag4 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 3, !dbg !7389
  %8 = load i32, i32* %active_tag4, align 8, !dbg !7389
  %call5 = call zeroext i1 @ata_tag_valid(i32 %8) #12, !dbg !7390
  br i1 %call5, label %if.end7, label %land.lhs.true, !dbg !7391

land.lhs.true:                                    ; preds = %if.else
  %9 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7392
  %sactive = getelementptr inbounds %struct.ata_link, %struct.ata_link* %9, i32 0, i32 4, !dbg !7393
  %10 = load i32, i32* %sactive, align 4, !dbg !7393
  %tobool = icmp ne i32 %10, 0, !dbg !7392
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !7394

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !7395
  br label %return, !dbg !7395

if.end7:                                          ; preds = %land.lhs.true, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  store i32 1, i32* %retval, align 4, !dbg !7396
  br label %return, !dbg !7396

return:                                           ; preds = %if.end8, %if.then6, %if.then3
  %11 = load i32, i32* %retval, align 4, !dbg !7397
  ret i32 %11, !dbg !7397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @sata_std_hardreset(%struct.ata_link* %link, i32* %class, i64 %deadline) #0 !dbg !7398 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %class.addr = alloca i32*, align 8
  %deadline.addr = alloca i64, align 8
  %timing = alloca i64*, align 8
  %online = alloca i8, align 1
  %rc = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  store i32* %class, i32** %class.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %class.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata i64** %timing, metadata !7405, metadata !DIExpression()), !dbg !7406
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7407
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 12, !dbg !7408
  %call = call i64* @sata_ehc_deb_timing(%struct.ata_eh_context* %eh_context) #12, !dbg !7409
  store i64* %call, i64** %timing, align 8, !dbg !7406
  call void @llvm.dbg.declare(metadata i8* %online, metadata !7410, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7412, metadata !DIExpression()), !dbg !7413
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7414
  %2 = load i64*, i64** %timing, align 8, !dbg !7415
  %3 = load i64, i64* %deadline.addr, align 8, !dbg !7416
  %call1 = call i32 @sata_link_hardreset(%struct.ata_link* %1, i64* %2, i64 %3, i8* %online, i32 (%struct.ata_link*)* null) #12, !dbg !7417
  store i32 %call1, i32* %rc, align 4, !dbg !7418
  %4 = load i8, i8* %online, align 1, !dbg !7419
  %tobool = trunc i8 %4 to i1, !dbg !7419
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7419

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7419

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %rc, align 4, !dbg !7420
  br label %cond.end, !dbg !7419

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -11, %cond.true ], [ %5, %cond.false ], !dbg !7419
  ret i32 %cond, !dbg !7421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_link* @ata_link_next(%struct.ata_link* %link, %struct.ata_port* %ap, i32 %mode) #0 !dbg !7422 {
entry:
  %retval = alloca %struct.ata_link*, align 8
  %link.addr = alloca %struct.ata_link*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7429, metadata !DIExpression()), !dbg !7430
  br label %do.body, !dbg !7431

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7432
  %cmp = icmp ne i32 %0, 0, !dbg !7432
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7432

land.lhs.true:                                    ; preds = %do.body
  %1 = load i32, i32* %mode.addr, align 4, !dbg !7432
  %cmp1 = icmp ne i32 %1, 2, !dbg !7432
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !7432

land.rhs:                                         ; preds = %land.lhs.true
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7432
  %cmp2 = icmp ne i32 %2, 1, !dbg !7432
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %do.body
  %3 = phi i1 [ false, %land.lhs.true ], [ false, %do.body ], [ %cmp2, %land.rhs ], !dbg !7435
  %lnot = xor i1 %3, true, !dbg !7432
  %lnot3 = xor i1 %lnot, true, !dbg !7432
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7432
  %conv = sext i32 %lnot.ext to i64, !dbg !7432
  %tobool = icmp ne i64 %conv, 0, !dbg !7432
  br i1 %tobool, label %if.then, label %if.end, !dbg !7436

if.then:                                          ; preds = %land.end
  br label %do.body4, !dbg !7432

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !7437

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !7439

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !7437

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 184, i32 0, i64 12) #7, !dbg !7441, !srcloc !7443
  br label %do.end7, !dbg !7441

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !7437

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 338) #7, !dbg !7444, !srcloc !7447
  unreachable, !dbg !7448

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !7437

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !7437

if.end:                                           ; preds = %do.end10, %land.end
  br label %do.end11, !dbg !7436

do.end11:                                         ; preds = %if.end
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7449
  %tobool12 = icmp ne %struct.ata_link* %4, null, !dbg !7449
  br i1 %tobool12, label %if.end18, label %if.then13, !dbg !7451

if.then13:                                        ; preds = %do.end11
  %5 = load i32, i32* %mode.addr, align 4, !dbg !7452
  switch i32 %5, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb16
  ], !dbg !7453

sw.bb:                                            ; preds = %if.then13, %if.then13
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7454
  %call = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %6) #12, !dbg !7457
  br i1 %call, label %if.then14, label %if.end15, !dbg !7458

if.then14:                                        ; preds = %sw.bb
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7459
  %pmp_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 28, !dbg !7460
  %8 = load %struct.ata_link*, %struct.ata_link** %pmp_link, align 16, !dbg !7460
  store %struct.ata_link* %8, %struct.ata_link** %retval, align 8, !dbg !7461
  br label %return, !dbg !7461

if.end15:                                         ; preds = %sw.bb
  br label %sw.bb16, !dbg !7462

sw.bb16:                                          ; preds = %if.then13, %if.end15
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7463
  %link17 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 25, !dbg !7464
  store %struct.ata_link* %link17, %struct.ata_link** %retval, align 8, !dbg !7465
  br label %return, !dbg !7465

sw.epilog:                                        ; preds = %if.then13
  br label %if.end18, !dbg !7466

if.end18:                                         ; preds = %sw.epilog, %do.end11
  %10 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7467
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7469
  %link19 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 25, !dbg !7470
  %cmp20 = icmp eq %struct.ata_link* %10, %link19, !dbg !7471
  br i1 %cmp20, label %if.then22, label %if.end41, !dbg !7472

if.then22:                                        ; preds = %if.end18
  %12 = load i32, i32* %mode.addr, align 4, !dbg !7473
  switch i32 %12, label %sw.epilog40 [
    i32 1, label %sw.bb23
    i32 2, label %sw.bb28
    i32 0, label %sw.bb39
  ], !dbg !7474

sw.bb23:                                          ; preds = %if.then22
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7475
  %call24 = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %13) #12, !dbg !7478
  br i1 %call24, label %if.then25, label %if.end27, !dbg !7479

if.then25:                                        ; preds = %sw.bb23
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7480
  %pmp_link26 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 28, !dbg !7481
  %15 = load %struct.ata_link*, %struct.ata_link** %pmp_link26, align 16, !dbg !7481
  store %struct.ata_link* %15, %struct.ata_link** %retval, align 8, !dbg !7482
  br label %return, !dbg !7482

if.end27:                                         ; preds = %sw.bb23
  br label %sw.bb28, !dbg !7483

sw.bb28:                                          ; preds = %if.then22, %if.end27
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7484
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 26, !dbg !7484
  %17 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !7484
  %tobool29 = icmp ne %struct.ata_link* %17, null, !dbg !7484
  %lnot30 = xor i1 %tobool29, true, !dbg !7484
  %lnot32 = xor i1 %lnot30, true, !dbg !7484
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !7484
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !7484
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !7484
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !7486

if.then36:                                        ; preds = %sw.bb28
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7487
  %slave_link37 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 26, !dbg !7488
  %19 = load %struct.ata_link*, %struct.ata_link** %slave_link37, align 64, !dbg !7488
  store %struct.ata_link* %19, %struct.ata_link** %retval, align 8, !dbg !7489
  br label %return, !dbg !7489

if.end38:                                         ; preds = %sw.bb28
  br label %sw.bb39, !dbg !7484

sw.bb39:                                          ; preds = %if.then22, %if.end38
  store %struct.ata_link* null, %struct.ata_link** %retval, align 8, !dbg !7490
  br label %return, !dbg !7490

sw.epilog40:                                      ; preds = %if.then22
  br label %if.end41, !dbg !7491

if.end41:                                         ; preds = %sw.epilog40, %if.end18
  %20 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7492
  %21 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7492
  %slave_link42 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 26, !dbg !7492
  %22 = load %struct.ata_link*, %struct.ata_link** %slave_link42, align 64, !dbg !7492
  %cmp43 = icmp eq %struct.ata_link* %20, %22, !dbg !7492
  %lnot45 = xor i1 %cmp43, true, !dbg !7492
  %lnot47 = xor i1 %lnot45, true, !dbg !7492
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !7492
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !7492
  %tobool50 = icmp ne i64 %conv49, 0, !dbg !7492
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !7494

if.then51:                                        ; preds = %if.end41
  store %struct.ata_link* null, %struct.ata_link** %retval, align 8, !dbg !7495
  br label %return, !dbg !7495

if.end52:                                         ; preds = %if.end41
  %23 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7496
  %incdec.ptr = getelementptr %struct.ata_link, %struct.ata_link* %23, i32 1, !dbg !7496
  store %struct.ata_link* %incdec.ptr, %struct.ata_link** %link.addr, align 8, !dbg !7496
  %24 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7498
  %pmp_link53 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %24, i32 0, i32 28, !dbg !7499
  %25 = load %struct.ata_link*, %struct.ata_link** %pmp_link53, align 16, !dbg !7499
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7500
  %nr_pmp_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 27, !dbg !7501
  %27 = load i32, i32* %nr_pmp_links, align 8, !dbg !7501
  %idx.ext = sext i32 %27 to i64, !dbg !7502
  %add.ptr = getelementptr %struct.ata_link, %struct.ata_link* %25, i64 %idx.ext, !dbg !7502
  %cmp54 = icmp ult %struct.ata_link* %incdec.ptr, %add.ptr, !dbg !7503
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !7504

if.then56:                                        ; preds = %if.end52
  %28 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7505
  store %struct.ata_link* %28, %struct.ata_link** %retval, align 8, !dbg !7506
  br label %return, !dbg !7506

if.end57:                                         ; preds = %if.end52
  %29 = load i32, i32* %mode.addr, align 4, !dbg !7507
  %cmp58 = icmp eq i32 %29, 2, !dbg !7509
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !7510

if.then60:                                        ; preds = %if.end57
  %30 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7511
  %link61 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 25, !dbg !7512
  store %struct.ata_link* %link61, %struct.ata_link** %retval, align 8, !dbg !7513
  br label %return, !dbg !7513

if.end62:                                         ; preds = %if.end57
  store %struct.ata_link* null, %struct.ata_link** %retval, align 8, !dbg !7514
  br label %return, !dbg !7514

return:                                           ; preds = %if.end62, %if.then60, %if.then56, %if.then51, %sw.bb39, %if.then36, %if.then25, %sw.bb16, %if.then14
  %31 = load %struct.ata_link*, %struct.ata_link** %retval, align 8, !dbg !7515
  ret %struct.ata_link* %31, !dbg !7515
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sata_pmp_attached(%struct.ata_port* %ap) #0 !dbg !7516 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7517, metadata !DIExpression()), !dbg !7518
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7519
  %nr_pmp_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 27, !dbg !7520
  %1 = load i32, i32* %nr_pmp_links, align 8, !dbg !7520
  %cmp = icmp ne i32 %1, 0, !dbg !7521
  ret i1 %cmp, !dbg !7522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_device* @ata_dev_next(%struct.ata_device* %dev, %struct.ata_link* %link, i32 %mode) #0 !dbg !7523 {
entry:
  %retval = alloca %struct.ata_device*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %link.addr = alloca %struct.ata_link*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7526, metadata !DIExpression()), !dbg !7527
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7530, metadata !DIExpression()), !dbg !7531
  br label %do.body, !dbg !7532

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7533
  %cmp = icmp ne i32 %0, 0, !dbg !7533
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7533

land.lhs.true:                                    ; preds = %do.body
  %1 = load i32, i32* %mode.addr, align 4, !dbg !7533
  %cmp1 = icmp ne i32 %1, 1, !dbg !7533
  br i1 %cmp1, label %land.lhs.true2, label %land.end, !dbg !7533

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7533
  %cmp3 = icmp ne i32 %2, 2, !dbg !7533
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !7533

land.rhs:                                         ; preds = %land.lhs.true2
  %3 = load i32, i32* %mode.addr, align 4, !dbg !7533
  %cmp4 = icmp ne i32 %3, 3, !dbg !7533
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true2, %land.lhs.true, %do.body
  %4 = phi i1 [ false, %land.lhs.true2 ], [ false, %land.lhs.true ], [ false, %do.body ], [ %cmp4, %land.rhs ], !dbg !7536
  %lnot = xor i1 %4, true, !dbg !7533
  %lnot5 = xor i1 %lnot, true, !dbg !7533
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !7533
  %conv = sext i32 %lnot.ext to i64, !dbg !7533
  %tobool = icmp ne i64 %conv, 0, !dbg !7533
  br i1 %tobool, label %if.then, label %if.end, !dbg !7537

if.then:                                          ; preds = %land.end
  br label %do.body6, !dbg !7533

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !7538

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !7540

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !7538

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 244, i32 0, i64 12) #7, !dbg !7542, !srcloc !7544
  br label %do.end9, !dbg !7542

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !7538

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 339) #7, !dbg !7545, !srcloc !7548
  unreachable, !dbg !7549

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !7538

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !7538

if.end:                                           ; preds = %do.end12, %land.end
  br label %do.end13, !dbg !7537

do.end13:                                         ; preds = %if.end
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7550
  %tobool14 = icmp ne %struct.ata_device* %5, null, !dbg !7550
  br i1 %tobool14, label %if.end20, label %if.then15, !dbg !7552

if.then15:                                        ; preds = %do.end13
  %6 = load i32, i32* %mode.addr, align 4, !dbg !7553
  switch i32 %6, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb16
    i32 3, label %sw.bb16
  ], !dbg !7554

sw.bb:                                            ; preds = %if.then15, %if.then15
  %7 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7555
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 14, !dbg !7557
  %arraydecay = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 0, !dbg !7555
  store %struct.ata_device* %arraydecay, %struct.ata_device** %dev.addr, align 8, !dbg !7558
  br label %check, !dbg !7559

sw.bb16:                                          ; preds = %if.then15, %if.then15
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7560
  %device17 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %8, i32 0, i32 14, !dbg !7561
  %arraydecay18 = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device17, i64 0, i64 0, !dbg !7560
  %9 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7562
  %call = call i32 @ata_link_max_devices(%struct.ata_link* %9) #12, !dbg !7563
  %idx.ext = sext i32 %call to i64, !dbg !7564
  %add.ptr = getelementptr %struct.ata_device, %struct.ata_device* %arraydecay18, i64 %idx.ext, !dbg !7564
  %add.ptr19 = getelementptr %struct.ata_device, %struct.ata_device* %add.ptr, i64 -1, !dbg !7565
  store %struct.ata_device* %add.ptr19, %struct.ata_device** %dev.addr, align 8, !dbg !7566
  br label %check, !dbg !7567

sw.epilog:                                        ; preds = %if.then15
  br label %if.end20, !dbg !7568

if.end20:                                         ; preds = %sw.epilog, %do.end13
  br label %next, !dbg !7550

next:                                             ; preds = %if.then47, %if.end20
  call void @llvm.dbg.label(metadata !7569), !dbg !7570
  %10 = load i32, i32* %mode.addr, align 4, !dbg !7571
  switch i32 %10, label %sw.epilog39 [
    i32 0, label %sw.bb21
    i32 2, label %sw.bb21
    i32 1, label %sw.bb31
    i32 3, label %sw.bb31
  ], !dbg !7572

sw.bb21:                                          ; preds = %next, %next
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7573
  %incdec.ptr = getelementptr %struct.ata_device, %struct.ata_device* %11, i32 1, !dbg !7573
  store %struct.ata_device* %incdec.ptr, %struct.ata_device** %dev.addr, align 8, !dbg !7573
  %12 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7576
  %device22 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %12, i32 0, i32 14, !dbg !7577
  %arraydecay23 = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device22, i64 0, i64 0, !dbg !7576
  %13 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7578
  %call24 = call i32 @ata_link_max_devices(%struct.ata_link* %13) #12, !dbg !7579
  %idx.ext25 = sext i32 %call24 to i64, !dbg !7580
  %add.ptr26 = getelementptr %struct.ata_device, %struct.ata_device* %arraydecay23, i64 %idx.ext25, !dbg !7580
  %cmp27 = icmp ult %struct.ata_device* %incdec.ptr, %add.ptr26, !dbg !7581
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7582

if.then29:                                        ; preds = %sw.bb21
  br label %check, !dbg !7583

if.end30:                                         ; preds = %sw.bb21
  store %struct.ata_device* null, %struct.ata_device** %retval, align 8, !dbg !7584
  br label %return, !dbg !7584

sw.bb31:                                          ; preds = %next, %next
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7585
  %incdec.ptr32 = getelementptr %struct.ata_device, %struct.ata_device* %14, i32 -1, !dbg !7585
  store %struct.ata_device* %incdec.ptr32, %struct.ata_device** %dev.addr, align 8, !dbg !7585
  %15 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7587
  %device33 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %15, i32 0, i32 14, !dbg !7588
  %arraydecay34 = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device33, i64 0, i64 0, !dbg !7587
  %cmp35 = icmp uge %struct.ata_device* %incdec.ptr32, %arraydecay34, !dbg !7589
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !7590

if.then37:                                        ; preds = %sw.bb31
  br label %check, !dbg !7591

if.end38:                                         ; preds = %sw.bb31
  store %struct.ata_device* null, %struct.ata_device** %retval, align 8, !dbg !7592
  br label %return, !dbg !7592

sw.epilog39:                                      ; preds = %next
  br label %check, !dbg !7593

check:                                            ; preds = %sw.epilog39, %if.then37, %if.then29, %sw.bb16, %sw.bb
  call void @llvm.dbg.label(metadata !7594), !dbg !7595
  %16 = load i32, i32* %mode.addr, align 4, !dbg !7596
  %cmp40 = icmp eq i32 %16, 0, !dbg !7598
  br i1 %cmp40, label %land.lhs.true44, label %lor.lhs.false, !dbg !7599

lor.lhs.false:                                    ; preds = %check
  %17 = load i32, i32* %mode.addr, align 4, !dbg !7600
  %cmp42 = icmp eq i32 %17, 1, !dbg !7601
  br i1 %cmp42, label %land.lhs.true44, label %if.end48, !dbg !7602

land.lhs.true44:                                  ; preds = %lor.lhs.false, %check
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7603
  %call45 = call i32 @ata_dev_enabled(%struct.ata_device* %18) #12, !dbg !7604
  %tobool46 = icmp ne i32 %call45, 0, !dbg !7604
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !7605

if.then47:                                        ; preds = %land.lhs.true44
  br label %next, !dbg !7606

if.end48:                                         ; preds = %land.lhs.true44, %lor.lhs.false
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7607
  store %struct.ata_device* %19, %struct.ata_device** %retval, align 8, !dbg !7608
  br label %return, !dbg !7608

return:                                           ; preds = %if.end48, %if.end38, %if.end30
  %20 = load %struct.ata_device*, %struct.ata_device** %retval, align 8, !dbg !7609
  ret %struct.ata_device* %20, !dbg !7609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_link_max_devices(%struct.ata_link* %link) #0 !dbg !7610 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7615, metadata !DIExpression()), !dbg !7616
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7617
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %0) #12, !dbg !7619
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !7620

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7621
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !7622
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !7622
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 3, !dbg !7623
  %3 = load i64, i64* %flags, align 8, !dbg !7623
  %and = and i64 %3, 1, !dbg !7624
  %tobool = icmp ne i64 %and, 0, !dbg !7624
  br i1 %tobool, label %if.then, label %if.end, !dbg !7625

if.then:                                          ; preds = %land.lhs.true
  store i32 2, i32* %retval, align 4, !dbg !7626
  br label %return, !dbg !7626

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !7627
  br label %return, !dbg !7627

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7628
  ret i32 %4, !dbg !7628
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_enabled(%struct.ata_device* %dev) #0 !dbg !7629 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7634, metadata !DIExpression()), !dbg !7635
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7636
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 11, !dbg !7637
  %1 = load i32, i32* %class, align 64, !dbg !7637
  %call = call i32 @ata_class_enabled(i32 %1) #12, !dbg !7638
  ret i32 %call, !dbg !7639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %dev) #0 !dbg !7640 {
entry:
  %retval = alloca %struct.ata_link*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7643, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7645, metadata !DIExpression()), !dbg !7646
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7647
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !7648
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !7648
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !7649
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !7649
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !7646
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7650
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 26, !dbg !7652
  %4 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !7652
  %tobool = icmp ne %struct.ata_link* %4, null, !dbg !7650
  br i1 %tobool, label %if.end, label %if.then, !dbg !7653

if.then:                                          ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7654
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 0, !dbg !7655
  %6 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !7655
  store %struct.ata_link* %6, %struct.ata_link** %retval, align 8, !dbg !7656
  br label %return, !dbg !7656

if.end:                                           ; preds = %entry
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7657
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 1, !dbg !7659
  %8 = load i32, i32* %devno, align 8, !dbg !7659
  %tobool3 = icmp ne i32 %8, 0, !dbg !7657
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !7660

if.then4:                                         ; preds = %if.end
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7661
  %link5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 25, !dbg !7662
  store %struct.ata_link* %link5, %struct.ata_link** %retval, align 8, !dbg !7663
  br label %return, !dbg !7663

if.end6:                                          ; preds = %if.end
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7664
  %slave_link7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 26, !dbg !7665
  %11 = load %struct.ata_link*, %struct.ata_link** %slave_link7, align 64, !dbg !7665
  store %struct.ata_link* %11, %struct.ata_link** %retval, align 8, !dbg !7666
  br label %return, !dbg !7666

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %12 = load %struct.ata_link*, %struct.ata_link** %retval, align 8, !dbg !7667
  ret %struct.ata_link* %12, !dbg !7667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_force_cbl(%struct.ata_port* %ap) #0 !dbg !7668 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %i = alloca i32, align 4
  %fe = alloca %struct.ata_force_ent*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7671, metadata !DIExpression()), !dbg !7672
  %0 = load i32, i32* @ata_force_tbl_size, align 4, !dbg !7673
  %sub = sub i32 %0, 1, !dbg !7675
  store i32 %sub, i32* %i, align 4, !dbg !7676
  br label %for.cond, !dbg !7677

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !7678
  %cmp = icmp sge i32 %1, 0, !dbg !7680
  br i1 %cmp, label %for.body, label %for.end, !dbg !7681

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_force_ent** %fe, metadata !7682, metadata !DIExpression()), !dbg !7686
  %2 = load %struct.ata_force_ent*, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !7687
  %3 = load i32, i32* %i, align 4, !dbg !7688
  %idxprom = sext i32 %3 to i64, !dbg !7687
  %arrayidx = getelementptr %struct.ata_force_ent, %struct.ata_force_ent* %2, i64 %idxprom, !dbg !7687
  store %struct.ata_force_ent* %arrayidx, %struct.ata_force_ent** %fe, align 8, !dbg !7686
  %4 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !7689
  %port = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %4, i32 0, i32 0, !dbg !7691
  %5 = load i32, i32* %port, align 8, !dbg !7691
  %cmp1 = icmp ne i32 %5, -1, !dbg !7692
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !7693

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !7694
  %port2 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %6, i32 0, i32 0, !dbg !7695
  %7 = load i32, i32* %port2, align 8, !dbg !7695
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7696
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 5, !dbg !7697
  %9 = load i32, i32* %print_id, align 4, !dbg !7697
  %cmp3 = icmp ne i32 %7, %9, !dbg !7698
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7699

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !7700

if.end:                                           ; preds = %land.lhs.true, %for.body
  %10 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !7701
  %param = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %10, i32 0, i32 2, !dbg !7703
  %cbl = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param, i32 0, i32 1, !dbg !7704
  %11 = load i8, i8* %cbl, align 8, !dbg !7704
  %conv = zext i8 %11 to i32, !dbg !7701
  %cmp4 = icmp eq i32 %conv, 0, !dbg !7705
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !7706

if.then6:                                         ; preds = %if.end
  br label %for.inc, !dbg !7707

if.end7:                                          ; preds = %if.end
  %12 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !7708
  %param8 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %12, i32 0, i32 2, !dbg !7709
  %cbl9 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param8, i32 0, i32 1, !dbg !7710
  %13 = load i8, i8* %cbl9, align 8, !dbg !7710
  %conv10 = zext i8 %13 to i32, !dbg !7708
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7711
  %cbl11 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 18, !dbg !7712
  store i32 %conv10, i32* %cbl11, align 4, !dbg !7713
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7714
  %16 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !7714
  %param12 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %16, i32 0, i32 2, !dbg !7714
  %name = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param12, i32 0, i32 0, !dbg !7714
  %17 = load i8*, i8** %name, align 8, !dbg !7714
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* %17) #12, !dbg !7714
  br label %for.end, !dbg !7715

for.inc:                                          ; preds = %if.then6, %if.then
  %18 = load i32, i32* %i, align 4, !dbg !7716
  %dec = add i32 %18, -1, !dbg !7716
  store i32 %dec, i32* %i, align 4, !dbg !7716
  br label %for.cond, !dbg !7717, !llvm.loop !7718

for.end:                                          ; preds = %if.end7, %for.cond
  ret void, !dbg !7720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_port_printk(%struct.ata_port* %ap, i8* %level, i8* %fmt, ...) #0 !dbg !7721 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %level.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7726, metadata !DIExpression()), !dbg !7727
  store i8* %level, i8** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %level.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !7732, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !7750, metadata !DIExpression()), !dbg !7751
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7752
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7752
  call void @llvm.va_start(i8* %arraydecay1), !dbg !7752
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !7753
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !7754
  store i8* %0, i8** %fmt2, align 8, !dbg !7755
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !7756
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !7757
  %1 = load i8*, i8** %level.addr, align 8, !dbg !7758
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7759
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 5, !dbg !7760
  %3 = load i32, i32* %print_id, align 4, !dbg !7760
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i64 0, i64 0), i8* %1, i32 %3, %struct.va_format* %vaf) #13, !dbg !7761
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7762
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !7762
  call void @llvm.va_end(i8* %arraydecay34), !dbg !7762
  ret void, !dbg !7763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @atapi_cmd_type(i8 zeroext %opcode) #0 !dbg !7764 {
entry:
  %retval = alloca i32, align 4
  %opcode.addr = alloca i8, align 1
  store i8 %opcode, i8* %opcode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode.addr, metadata !7767, metadata !DIExpression()), !dbg !7768
  %0 = load i8, i8* %opcode.addr, align 1, !dbg !7769
  %conv = zext i8 %0 to i32, !dbg !7769
  switch i32 %conv, label %sw.default [
    i32 40, label %sw.bb
    i32 168, label %sw.bb
    i32 42, label %sw.bb1
    i32 170, label %sw.bb1
    i32 46, label %sw.bb1
    i32 190, label %sw.bb2
    i32 185, label %sw.bb2
    i32 133, label %sw.bb3
    i32 161, label %sw.bb3
  ], !dbg !7770

sw.bb:                                            ; preds = %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !7771
  br label %return, !dbg !7771

sw.bb1:                                           ; preds = %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !7773
  br label %return, !dbg !7773

sw.bb2:                                           ; preds = %entry, %entry
  store i32 2, i32* %retval, align 4, !dbg !7774
  br label %return, !dbg !7774

sw.bb3:                                           ; preds = %entry, %entry
  %1 = load i32, i32* @atapi_passthru16, align 4, !dbg !7775
  %tobool = icmp ne i32 %1, 0, !dbg !7775
  br i1 %tobool, label %if.then, label %if.end, !dbg !7777

if.then:                                          ; preds = %sw.bb3
  store i32 3, i32* %retval, align 4, !dbg !7778
  br label %return, !dbg !7778

if.end:                                           ; preds = %sw.bb3
  br label %sw.default, !dbg !7775

sw.default:                                       ; preds = %entry, %if.end
  store i32 4, i32* %retval, align 4, !dbg !7779
  br label %return, !dbg !7779

return:                                           ; preds = %sw.default, %if.then, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !7780
  ret i32 %2, !dbg !7780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_tf_read_block(%struct.ata_taskfile* %tf, %struct.ata_device* %dev) #0 !dbg !7781 {
entry:
  %retval = alloca i64, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %block = alloca i64, align 8
  %cyl = alloca i32, align 4
  %head = alloca i32, align 4
  %sect = alloca i32, align 4
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !7784, metadata !DIExpression()), !dbg !7785
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata i64* %block, metadata !7788, metadata !DIExpression()), !dbg !7789
  store i64 0, i64* %block, align 8, !dbg !7789
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7790
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 0, !dbg !7792
  %1 = load i64, i64* %flags, align 8, !dbg !7792
  %and = and i64 %1, 16, !dbg !7793
  %tobool = icmp ne i64 %and, 0, !dbg !7793
  br i1 %tobool, label %if.then, label %if.else26, !dbg !7794

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7795
  %flags1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 0, !dbg !7798
  %3 = load i64, i64* %flags1, align 8, !dbg !7798
  %and2 = and i64 %3, 1, !dbg !7799
  %tobool3 = icmp ne i64 %and2, 0, !dbg !7799
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !7800

if.then4:                                         ; preds = %if.then
  %4 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7801
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %4, i32 0, i32 7, !dbg !7803
  %5 = load i8, i8* %hob_lbah, align 2, !dbg !7803
  %conv = zext i8 %5 to i64, !dbg !7804
  %shl = shl i64 %conv, 40, !dbg !7805
  %6 = load i64, i64* %block, align 8, !dbg !7806
  %or = or i64 %6, %shl, !dbg !7806
  store i64 %or, i64* %block, align 8, !dbg !7806
  %7 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7807
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %7, i32 0, i32 6, !dbg !7808
  %8 = load i8, i8* %hob_lbam, align 1, !dbg !7808
  %conv5 = zext i8 %8 to i64, !dbg !7809
  %shl6 = shl i64 %conv5, 32, !dbg !7810
  %9 = load i64, i64* %block, align 8, !dbg !7811
  %or7 = or i64 %9, %shl6, !dbg !7811
  store i64 %or7, i64* %block, align 8, !dbg !7811
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7812
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 5, !dbg !7813
  %11 = load i8, i8* %hob_lbal, align 4, !dbg !7813
  %conv8 = zext i8 %11 to i64, !dbg !7814
  %shl9 = shl i64 %conv8, 24, !dbg !7815
  %12 = load i64, i64* %block, align 8, !dbg !7816
  %or10 = or i64 %12, %shl9, !dbg !7816
  store i64 %or10, i64* %block, align 8, !dbg !7816
  br label %if.end, !dbg !7817

if.else:                                          ; preds = %if.then
  %13 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7818
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %13, i32 0, i32 13, !dbg !7819
  %14 = load i8, i8* %device, align 4, !dbg !7819
  %conv11 = zext i8 %14 to i32, !dbg !7818
  %and12 = and i32 %conv11, 15, !dbg !7820
  %shl13 = shl i32 %and12, 24, !dbg !7821
  %conv14 = sext i32 %shl13 to i64, !dbg !7822
  %15 = load i64, i64* %block, align 8, !dbg !7823
  %or15 = or i64 %15, %conv14, !dbg !7823
  store i64 %or15, i64* %block, align 8, !dbg !7823
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %16 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7824
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %16, i32 0, i32 12, !dbg !7825
  %17 = load i8, i8* %lbah, align 1, !dbg !7825
  %conv16 = zext i8 %17 to i32, !dbg !7824
  %shl17 = shl i32 %conv16, 16, !dbg !7826
  %conv18 = sext i32 %shl17 to i64, !dbg !7824
  %18 = load i64, i64* %block, align 8, !dbg !7827
  %or19 = or i64 %18, %conv18, !dbg !7827
  store i64 %or19, i64* %block, align 8, !dbg !7827
  %19 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7828
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %19, i32 0, i32 11, !dbg !7829
  %20 = load i8, i8* %lbam, align 2, !dbg !7829
  %conv20 = zext i8 %20 to i32, !dbg !7828
  %shl21 = shl i32 %conv20, 8, !dbg !7830
  %conv22 = sext i32 %shl21 to i64, !dbg !7828
  %21 = load i64, i64* %block, align 8, !dbg !7831
  %or23 = or i64 %21, %conv22, !dbg !7831
  store i64 %or23, i64* %block, align 8, !dbg !7831
  %22 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7832
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %22, i32 0, i32 10, !dbg !7833
  %23 = load i8, i8* %lbal, align 1, !dbg !7833
  %conv24 = zext i8 %23 to i64, !dbg !7832
  %24 = load i64, i64* %block, align 8, !dbg !7834
  %or25 = or i64 %24, %conv24, !dbg !7834
  store i64 %or25, i64* %block, align 8, !dbg !7834
  br label %if.end46, !dbg !7835

if.else26:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %cyl, metadata !7836, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.declare(metadata i32* %head, metadata !7839, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.declare(metadata i32* %sect, metadata !7841, metadata !DIExpression()), !dbg !7842
  %25 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7843
  %lbam27 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %25, i32 0, i32 11, !dbg !7844
  %26 = load i8, i8* %lbam27, align 2, !dbg !7844
  %conv28 = zext i8 %26 to i32, !dbg !7843
  %27 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7845
  %lbah29 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %27, i32 0, i32 12, !dbg !7846
  %28 = load i8, i8* %lbah29, align 1, !dbg !7846
  %conv30 = zext i8 %28 to i32, !dbg !7845
  %shl31 = shl i32 %conv30, 8, !dbg !7847
  %or32 = or i32 %conv28, %shl31, !dbg !7848
  store i32 %or32, i32* %cyl, align 4, !dbg !7849
  %29 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7850
  %device33 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %29, i32 0, i32 13, !dbg !7851
  %30 = load i8, i8* %device33, align 4, !dbg !7851
  %conv34 = zext i8 %30 to i32, !dbg !7850
  %and35 = and i32 %conv34, 15, !dbg !7852
  store i32 %and35, i32* %head, align 4, !dbg !7853
  %31 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7854
  %lbal36 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %31, i32 0, i32 10, !dbg !7855
  %32 = load i8, i8* %lbal36, align 1, !dbg !7855
  %conv37 = zext i8 %32 to i32, !dbg !7854
  store i32 %conv37, i32* %sect, align 4, !dbg !7856
  %33 = load i32, i32* %sect, align 4, !dbg !7857
  %tobool38 = icmp ne i32 %33, 0, !dbg !7857
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !7859

if.then39:                                        ; preds = %if.else26
  %34 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7860
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !7860
  store i64 -1, i64* %retval, align 8, !dbg !7862
  br label %return, !dbg !7862

if.end40:                                         ; preds = %if.else26
  %35 = load i32, i32* %cyl, align 4, !dbg !7863
  %36 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7864
  %heads = getelementptr inbounds %struct.ata_device, %struct.ata_device* %36, i32 0, i32 24, !dbg !7865
  %37 = load i16, i16* %heads, align 2, !dbg !7865
  %conv41 = zext i16 %37 to i32, !dbg !7864
  %mul = mul i32 %35, %conv41, !dbg !7866
  %38 = load i32, i32* %head, align 4, !dbg !7867
  %add = add i32 %mul, %38, !dbg !7868
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7869
  %sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 25, !dbg !7870
  %40 = load i16, i16* %sectors, align 4, !dbg !7870
  %conv42 = zext i16 %40 to i32, !dbg !7869
  %mul43 = mul i32 %add, %conv42, !dbg !7871
  %41 = load i32, i32* %sect, align 4, !dbg !7872
  %add44 = add i32 %mul43, %41, !dbg !7873
  %sub = sub i32 %add44, 1, !dbg !7874
  %conv45 = zext i32 %sub to i64, !dbg !7875
  store i64 %conv45, i64* %block, align 8, !dbg !7876
  br label %if.end46

if.end46:                                         ; preds = %if.end40, %if.end
  %42 = load i64, i64* %block, align 8, !dbg !7877
  store i64 %42, i64* %retval, align 8, !dbg !7878
  br label %return, !dbg !7878

return:                                           ; preds = %if.end46, %if.then39
  %43 = load i64, i64* %retval, align 8, !dbg !7879
  ret i64 %43, !dbg !7879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_dev_printk(%struct.ata_device* %dev, i8* %level, i8* %fmt, ...) #0 !dbg !7880 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %level.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7883, metadata !DIExpression()), !dbg !7884
  store i8* %level, i8** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %level.addr, metadata !7885, metadata !DIExpression()), !dbg !7886
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !7889, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !7891, metadata !DIExpression()), !dbg !7892
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7893
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7893
  call void @llvm.va_start(i8* %arraydecay1), !dbg !7893
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !7894
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !7895
  store i8* %0, i8** %fmt2, align 8, !dbg !7896
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !7897
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !7898
  %1 = load i8*, i8** %level.addr, align 8, !dbg !7899
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7900
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 0, !dbg !7901
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !7901
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !7902
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !7902
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 5, !dbg !7903
  %5 = load i32, i32* %print_id, align 4, !dbg !7903
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7904
  %link3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 0, !dbg !7905
  %7 = load %struct.ata_link*, %struct.ata_link** %link3, align 64, !dbg !7905
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 1, !dbg !7906
  %8 = load i32, i32* %pmp, align 8, !dbg !7906
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7907
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 1, !dbg !7908
  %10 = load i32, i32* %devno, align 8, !dbg !7908
  %add = add i32 %8, %10, !dbg !7909
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.102, i64 0, i64 0), i8* %1, i32 %5, i32 %add, %struct.va_format* %vaf) #13, !dbg !7910
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7911
  %arraydecay45 = bitcast %struct.__va_list_tag* %arraydecay4 to i8*, !dbg !7911
  call void @llvm.va_end(i8* %arraydecay45), !dbg !7911
  ret void, !dbg !7912
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_build_rw_tf(%struct.ata_taskfile* %tf, %struct.ata_device* %dev, i64 %block, i32 %n_block, i32 %tf_flags, i32 %tag, i32 %class) #0 !dbg !7913 {
entry:
  %retval = alloca i32, align 4
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %block.addr = alloca i64, align 8
  %n_block.addr = alloca i32, align 4
  %tf_flags.addr = alloca i32, align 4
  %tag.addr = alloca i32, align 4
  %class.addr = alloca i32, align 4
  %sect = alloca i32, align 4
  %head = alloca i32, align 4
  %cyl = alloca i32, align 4
  %track = alloca i32, align 4
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !7916, metadata !DIExpression()), !dbg !7917
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  store i64 %block, i64* %block.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %block.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  store i32 %n_block, i32* %n_block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_block.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  store i32 %tf_flags, i32* %tf_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tf_flags.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7926, metadata !DIExpression()), !dbg !7927
  store i32 %class, i32* %class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %class.addr, metadata !7928, metadata !DIExpression()), !dbg !7929
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7930
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 0, !dbg !7931
  %1 = load i64, i64* %flags, align 8, !dbg !7932
  %or = or i64 %1, 6, !dbg !7932
  store i64 %or, i64* %flags, align 8, !dbg !7932
  %2 = load i32, i32* %tf_flags.addr, align 4, !dbg !7933
  %conv = zext i32 %2 to i64, !dbg !7933
  %3 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7934
  %flags1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %3, i32 0, i32 0, !dbg !7935
  %4 = load i64, i64* %flags1, align 8, !dbg !7936
  %or2 = or i64 %4, %conv, !dbg !7936
  store i64 %or2, i64* %flags1, align 8, !dbg !7936
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7937
  %call = call i32 @ata_ncq_enabled(%struct.ata_device* %5) #12, !dbg !7939
  %tobool = icmp ne i32 %call, 0, !dbg !7939
  br i1 %tobool, label %land.lhs.true, label %if.else55, !dbg !7940

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %tag.addr, align 4, !dbg !7941
  %call3 = call zeroext i1 @ata_tag_internal(i32 %6) #12, !dbg !7942
  br i1 %call3, label %if.else55, label %if.then, !dbg !7943

if.then:                                          ; preds = %land.lhs.true
  %7 = load i64, i64* %block.addr, align 8, !dbg !7944
  %8 = load i32, i32* %n_block.addr, align 4, !dbg !7947
  %call4 = call zeroext i1 @lba_48_ok(i64 %7, i32 %8) #12, !dbg !7948
  br i1 %call4, label %if.end, label %if.then5, !dbg !7949

if.then5:                                         ; preds = %if.then
  store i32 -34, i32* %retval, align 4, !dbg !7950
  br label %return, !dbg !7950

if.end:                                           ; preds = %if.then
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7951
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 1, !dbg !7952
  store i8 6, i8* %protocol, align 8, !dbg !7953
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7954
  %flags6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 0, !dbg !7955
  %11 = load i64, i64* %flags6, align 8, !dbg !7956
  %or7 = or i64 %11, 17, !dbg !7956
  store i64 %or7, i64* %flags6, align 8, !dbg !7956
  %12 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7957
  %flags8 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %12, i32 0, i32 0, !dbg !7959
  %13 = load i64, i64* %flags8, align 8, !dbg !7959
  %and = and i64 %13, 8, !dbg !7960
  %tobool9 = icmp ne i64 %and, 0, !dbg !7960
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !7961

if.then10:                                        ; preds = %if.end
  %14 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7962
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %14, i32 0, i32 14, !dbg !7963
  store i8 97, i8* %command, align 1, !dbg !7964
  br label %if.end12, !dbg !7962

if.else:                                          ; preds = %if.end
  %15 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7965
  %command11 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %15, i32 0, i32 14, !dbg !7966
  store i8 96, i8* %command11, align 1, !dbg !7967
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then10
  %16 = load i32, i32* %tag.addr, align 4, !dbg !7968
  %shl = shl i32 %16, 3, !dbg !7969
  %conv13 = trunc i32 %shl to i8, !dbg !7968
  %17 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7970
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %17, i32 0, i32 9, !dbg !7971
  store i8 %conv13, i8* %nsect, align 8, !dbg !7972
  %18 = load i32, i32* %n_block.addr, align 4, !dbg !7973
  %shr = lshr i32 %18, 8, !dbg !7974
  %and14 = and i32 %shr, 255, !dbg !7975
  %conv15 = trunc i32 %and14 to i8, !dbg !7976
  %19 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7977
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %19, i32 0, i32 3, !dbg !7978
  store i8 %conv15, i8* %hob_feature, align 2, !dbg !7979
  %20 = load i32, i32* %n_block.addr, align 4, !dbg !7980
  %and16 = and i32 %20, 255, !dbg !7981
  %conv17 = trunc i32 %and16 to i8, !dbg !7980
  %21 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7982
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %21, i32 0, i32 8, !dbg !7983
  store i8 %conv17, i8* %feature, align 1, !dbg !7984
  %22 = load i64, i64* %block.addr, align 8, !dbg !7985
  %shr18 = lshr i64 %22, 40, !dbg !7986
  %and19 = and i64 %shr18, 255, !dbg !7987
  %conv20 = trunc i64 %and19 to i8, !dbg !7988
  %23 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7989
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %23, i32 0, i32 7, !dbg !7990
  store i8 %conv20, i8* %hob_lbah, align 2, !dbg !7991
  %24 = load i64, i64* %block.addr, align 8, !dbg !7992
  %shr21 = lshr i64 %24, 32, !dbg !7993
  %and22 = and i64 %shr21, 255, !dbg !7994
  %conv23 = trunc i64 %and22 to i8, !dbg !7995
  %25 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7996
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %25, i32 0, i32 6, !dbg !7997
  store i8 %conv23, i8* %hob_lbam, align 1, !dbg !7998
  %26 = load i64, i64* %block.addr, align 8, !dbg !7999
  %shr24 = lshr i64 %26, 24, !dbg !8000
  %and25 = and i64 %shr24, 255, !dbg !8001
  %conv26 = trunc i64 %and25 to i8, !dbg !8002
  %27 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8003
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %27, i32 0, i32 5, !dbg !8004
  store i8 %conv26, i8* %hob_lbal, align 4, !dbg !8005
  %28 = load i64, i64* %block.addr, align 8, !dbg !8006
  %shr27 = lshr i64 %28, 16, !dbg !8007
  %and28 = and i64 %shr27, 255, !dbg !8008
  %conv29 = trunc i64 %and28 to i8, !dbg !8009
  %29 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8010
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %29, i32 0, i32 12, !dbg !8011
  store i8 %conv29, i8* %lbah, align 1, !dbg !8012
  %30 = load i64, i64* %block.addr, align 8, !dbg !8013
  %shr30 = lshr i64 %30, 8, !dbg !8014
  %and31 = and i64 %shr30, 255, !dbg !8015
  %conv32 = trunc i64 %and31 to i8, !dbg !8016
  %31 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8017
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %31, i32 0, i32 11, !dbg !8018
  store i8 %conv32, i8* %lbam, align 2, !dbg !8019
  %32 = load i64, i64* %block.addr, align 8, !dbg !8020
  %and33 = and i64 %32, 255, !dbg !8021
  %conv34 = trunc i64 %and33 to i8, !dbg !8020
  %33 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8022
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %33, i32 0, i32 10, !dbg !8023
  store i8 %conv34, i8* %lbal, align 1, !dbg !8024
  %34 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8025
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %34, i32 0, i32 13, !dbg !8026
  store i8 64, i8* %device, align 4, !dbg !8027
  %35 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8028
  %flags35 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %35, i32 0, i32 0, !dbg !8030
  %36 = load i64, i64* %flags35, align 8, !dbg !8030
  %and36 = and i64 %36, 32, !dbg !8031
  %tobool37 = icmp ne i64 %and36, 0, !dbg !8031
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !8032

if.then38:                                        ; preds = %if.end12
  %37 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8033
  %device39 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %37, i32 0, i32 13, !dbg !8034
  %38 = load i8, i8* %device39, align 4, !dbg !8035
  %conv40 = zext i8 %38 to i32, !dbg !8035
  %or41 = or i32 %conv40, 128, !dbg !8035
  %conv42 = trunc i32 %or41 to i8, !dbg !8035
  store i8 %conv42, i8* %device39, align 4, !dbg !8035
  br label %if.end43, !dbg !8033

if.end43:                                         ; preds = %if.then38, %if.end12
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8036
  %flags44 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 3, !dbg !8038
  %40 = load i64, i64* %flags44, align 16, !dbg !8038
  %and45 = and i64 %40, 1048576, !dbg !8039
  %tobool46 = icmp ne i64 %and45, 0, !dbg !8039
  br i1 %tobool46, label %if.then47, label %if.end54, !dbg !8040

if.then47:                                        ; preds = %if.end43
  %41 = load i32, i32* %class.addr, align 4, !dbg !8041
  %cmp = icmp eq i32 %41, 1, !dbg !8044
  br i1 %cmp, label %if.then49, label %if.end53, !dbg !8045

if.then49:                                        ; preds = %if.then47
  %42 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8046
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %42, i32 0, i32 4, !dbg !8047
  %43 = load i8, i8* %hob_nsect, align 1, !dbg !8048
  %conv50 = zext i8 %43 to i32, !dbg !8048
  %or51 = or i32 %conv50, 128, !dbg !8048
  %conv52 = trunc i32 %or51 to i8, !dbg !8048
  store i8 %conv52, i8* %hob_nsect, align 1, !dbg !8048
  br label %if.end53, !dbg !8046

if.end53:                                         ; preds = %if.then49, %if.then47
  br label %if.end54, !dbg !8049

if.end54:                                         ; preds = %if.end53, %if.end43
  br label %if.end176, !dbg !8050

if.else55:                                        ; preds = %land.lhs.true, %entry
  %44 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8051
  %flags56 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %44, i32 0, i32 3, !dbg !8053
  %45 = load i64, i64* %flags56, align 16, !dbg !8053
  %and57 = and i64 %45, 1, !dbg !8054
  %tobool58 = icmp ne i64 %and57, 0, !dbg !8054
  br i1 %tobool58, label %if.then59, label %if.else125, !dbg !8055

if.then59:                                        ; preds = %if.else55
  %46 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8056
  %flags60 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %46, i32 0, i32 0, !dbg !8058
  %47 = load i64, i64* %flags60, align 8, !dbg !8059
  %or61 = or i64 %47, 16, !dbg !8059
  store i64 %or61, i64* %flags60, align 8, !dbg !8059
  %48 = load i64, i64* %block.addr, align 8, !dbg !8060
  %49 = load i32, i32* %n_block.addr, align 4, !dbg !8062
  %call62 = call zeroext i1 @lba_28_ok(i64 %48, i32 %49) #12, !dbg !8063
  br i1 %call62, label %if.then63, label %if.else70, !dbg !8064

if.then63:                                        ; preds = %if.then59
  %50 = load i64, i64* %block.addr, align 8, !dbg !8065
  %shr64 = lshr i64 %50, 24, !dbg !8067
  %and65 = and i64 %shr64, 15, !dbg !8068
  %51 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8069
  %device66 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %51, i32 0, i32 13, !dbg !8070
  %52 = load i8, i8* %device66, align 4, !dbg !8071
  %conv67 = zext i8 %52 to i64, !dbg !8071
  %or68 = or i64 %conv67, %and65, !dbg !8071
  %conv69 = trunc i64 %or68 to i8, !dbg !8071
  store i8 %conv69, i8* %device66, align 4, !dbg !8071
  br label %if.end98, !dbg !8072

if.else70:                                        ; preds = %if.then59
  %53 = load i64, i64* %block.addr, align 8, !dbg !8073
  %54 = load i32, i32* %n_block.addr, align 4, !dbg !8075
  %call71 = call zeroext i1 @lba_48_ok(i64 %53, i32 %54) #12, !dbg !8076
  br i1 %call71, label %if.then72, label %if.else96, !dbg !8077

if.then72:                                        ; preds = %if.else70
  %55 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8078
  %flags73 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %55, i32 0, i32 3, !dbg !8081
  %56 = load i64, i64* %flags73, align 16, !dbg !8081
  %and74 = and i64 %56, 2, !dbg !8082
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8082
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !8083

if.then76:                                        ; preds = %if.then72
  store i32 -34, i32* %retval, align 4, !dbg !8084
  br label %return, !dbg !8084

if.end77:                                         ; preds = %if.then72
  %57 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8085
  %flags78 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %57, i32 0, i32 0, !dbg !8086
  %58 = load i64, i64* %flags78, align 8, !dbg !8087
  %or79 = or i64 %58, 1, !dbg !8087
  store i64 %or79, i64* %flags78, align 8, !dbg !8087
  %59 = load i32, i32* %n_block.addr, align 4, !dbg !8088
  %shr80 = lshr i32 %59, 8, !dbg !8089
  %and81 = and i32 %shr80, 255, !dbg !8090
  %conv82 = trunc i32 %and81 to i8, !dbg !8091
  %60 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8092
  %hob_nsect83 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %60, i32 0, i32 4, !dbg !8093
  store i8 %conv82, i8* %hob_nsect83, align 1, !dbg !8094
  %61 = load i64, i64* %block.addr, align 8, !dbg !8095
  %shr84 = lshr i64 %61, 40, !dbg !8096
  %and85 = and i64 %shr84, 255, !dbg !8097
  %conv86 = trunc i64 %and85 to i8, !dbg !8098
  %62 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8099
  %hob_lbah87 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %62, i32 0, i32 7, !dbg !8100
  store i8 %conv86, i8* %hob_lbah87, align 2, !dbg !8101
  %63 = load i64, i64* %block.addr, align 8, !dbg !8102
  %shr88 = lshr i64 %63, 32, !dbg !8103
  %and89 = and i64 %shr88, 255, !dbg !8104
  %conv90 = trunc i64 %and89 to i8, !dbg !8105
  %64 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8106
  %hob_lbam91 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %64, i32 0, i32 6, !dbg !8107
  store i8 %conv90, i8* %hob_lbam91, align 1, !dbg !8108
  %65 = load i64, i64* %block.addr, align 8, !dbg !8109
  %shr92 = lshr i64 %65, 24, !dbg !8110
  %and93 = and i64 %shr92, 255, !dbg !8111
  %conv94 = trunc i64 %and93 to i8, !dbg !8112
  %66 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8113
  %hob_lbal95 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %66, i32 0, i32 5, !dbg !8114
  store i8 %conv94, i8* %hob_lbal95, align 4, !dbg !8115
  br label %if.end97, !dbg !8116

if.else96:                                        ; preds = %if.else70
  store i32 -34, i32* %retval, align 4, !dbg !8117
  br label %return, !dbg !8117

if.end97:                                         ; preds = %if.end77
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then63
  %67 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8118
  %68 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8118
  %call99 = call i32 @ata_rwcmd_protocol(%struct.ata_taskfile* %67, %struct.ata_device* %68) #12, !dbg !8118
  %cmp100 = icmp slt i32 %call99, 0, !dbg !8118
  %lnot = xor i1 %cmp100, true, !dbg !8118
  %lnot102 = xor i1 %lnot, true, !dbg !8118
  %lnot.ext = zext i1 %lnot102 to i32, !dbg !8118
  %conv103 = sext i32 %lnot.ext to i64, !dbg !8118
  %tobool104 = icmp ne i64 %conv103, 0, !dbg !8118
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !8120

if.then105:                                       ; preds = %if.end98
  store i32 -22, i32* %retval, align 4, !dbg !8121
  br label %return, !dbg !8121

if.end106:                                        ; preds = %if.end98
  %69 = load i32, i32* %n_block.addr, align 4, !dbg !8122
  %and107 = and i32 %69, 255, !dbg !8123
  %conv108 = trunc i32 %and107 to i8, !dbg !8122
  %70 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8124
  %nsect109 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %70, i32 0, i32 9, !dbg !8125
  store i8 %conv108, i8* %nsect109, align 8, !dbg !8126
  %71 = load i64, i64* %block.addr, align 8, !dbg !8127
  %shr110 = lshr i64 %71, 16, !dbg !8128
  %and111 = and i64 %shr110, 255, !dbg !8129
  %conv112 = trunc i64 %and111 to i8, !dbg !8130
  %72 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8131
  %lbah113 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %72, i32 0, i32 12, !dbg !8132
  store i8 %conv112, i8* %lbah113, align 1, !dbg !8133
  %73 = load i64, i64* %block.addr, align 8, !dbg !8134
  %shr114 = lshr i64 %73, 8, !dbg !8135
  %and115 = and i64 %shr114, 255, !dbg !8136
  %conv116 = trunc i64 %and115 to i8, !dbg !8137
  %74 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8138
  %lbam117 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %74, i32 0, i32 11, !dbg !8139
  store i8 %conv116, i8* %lbam117, align 2, !dbg !8140
  %75 = load i64, i64* %block.addr, align 8, !dbg !8141
  %and118 = and i64 %75, 255, !dbg !8142
  %conv119 = trunc i64 %and118 to i8, !dbg !8141
  %76 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8143
  %lbal120 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %76, i32 0, i32 10, !dbg !8144
  store i8 %conv119, i8* %lbal120, align 1, !dbg !8145
  %77 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8146
  %device121 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %77, i32 0, i32 13, !dbg !8147
  %78 = load i8, i8* %device121, align 4, !dbg !8148
  %conv122 = zext i8 %78 to i32, !dbg !8148
  %or123 = or i32 %conv122, 64, !dbg !8148
  %conv124 = trunc i32 %or123 to i8, !dbg !8148
  store i8 %conv124, i8* %device121, align 4, !dbg !8148
  br label %if.end175, !dbg !8149

if.else125:                                       ; preds = %if.else55
  call void @llvm.dbg.declare(metadata i32* %sect, metadata !8150, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.declare(metadata i32* %head, metadata !8153, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata i32* %cyl, metadata !8155, metadata !DIExpression()), !dbg !8156
  call void @llvm.dbg.declare(metadata i32* %track, metadata !8157, metadata !DIExpression()), !dbg !8158
  %79 = load i64, i64* %block.addr, align 8, !dbg !8159
  %80 = load i32, i32* %n_block.addr, align 4, !dbg !8161
  %call126 = call zeroext i1 @lba_28_ok(i64 %79, i32 %80) #12, !dbg !8162
  br i1 %call126, label %if.end128, label %if.then127, !dbg !8163

if.then127:                                       ; preds = %if.else125
  store i32 -34, i32* %retval, align 4, !dbg !8164
  br label %return, !dbg !8164

if.end128:                                        ; preds = %if.else125
  %81 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8165
  %82 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8165
  %call129 = call i32 @ata_rwcmd_protocol(%struct.ata_taskfile* %81, %struct.ata_device* %82) #12, !dbg !8165
  %cmp130 = icmp slt i32 %call129, 0, !dbg !8165
  %lnot132 = xor i1 %cmp130, true, !dbg !8165
  %lnot134 = xor i1 %lnot132, true, !dbg !8165
  %lnot.ext135 = zext i1 %lnot134 to i32, !dbg !8165
  %conv136 = sext i32 %lnot.ext135 to i64, !dbg !8165
  %tobool137 = icmp ne i64 %conv136, 0, !dbg !8165
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !8167

if.then138:                                       ; preds = %if.end128
  store i32 -22, i32* %retval, align 4, !dbg !8168
  br label %return, !dbg !8168

if.end139:                                        ; preds = %if.end128
  %83 = load i64, i64* %block.addr, align 8, !dbg !8169
  %conv140 = trunc i64 %83 to i32, !dbg !8170
  %84 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8171
  %sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %84, i32 0, i32 25, !dbg !8172
  %85 = load i16, i16* %sectors, align 4, !dbg !8172
  %conv141 = zext i16 %85 to i32, !dbg !8171
  %div = udiv i32 %conv140, %conv141, !dbg !8173
  store i32 %div, i32* %track, align 4, !dbg !8174
  %86 = load i32, i32* %track, align 4, !dbg !8175
  %87 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8176
  %heads = getelementptr inbounds %struct.ata_device, %struct.ata_device* %87, i32 0, i32 24, !dbg !8177
  %88 = load i16, i16* %heads, align 2, !dbg !8177
  %conv142 = zext i16 %88 to i32, !dbg !8176
  %div143 = udiv i32 %86, %conv142, !dbg !8178
  store i32 %div143, i32* %cyl, align 4, !dbg !8179
  %89 = load i32, i32* %track, align 4, !dbg !8180
  %90 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8181
  %heads144 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %90, i32 0, i32 24, !dbg !8182
  %91 = load i16, i16* %heads144, align 2, !dbg !8182
  %conv145 = zext i16 %91 to i32, !dbg !8181
  %rem = urem i32 %89, %conv145, !dbg !8183
  store i32 %rem, i32* %head, align 4, !dbg !8184
  %92 = load i64, i64* %block.addr, align 8, !dbg !8185
  %conv146 = trunc i64 %92 to i32, !dbg !8186
  %93 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8187
  %sectors147 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %93, i32 0, i32 25, !dbg !8188
  %94 = load i16, i16* %sectors147, align 4, !dbg !8188
  %conv148 = zext i16 %94 to i32, !dbg !8187
  %rem149 = urem i32 %conv146, %conv148, !dbg !8189
  %add = add i32 %rem149, 1, !dbg !8190
  store i32 %add, i32* %sect, align 4, !dbg !8191
  %95 = load i32, i32* %cyl, align 4, !dbg !8192
  %shr150 = lshr i32 %95, 16, !dbg !8194
  %tobool151 = icmp ne i32 %shr150, 0, !dbg !8194
  br i1 %tobool151, label %if.then159, label %lor.lhs.false, !dbg !8195

lor.lhs.false:                                    ; preds = %if.end139
  %96 = load i32, i32* %head, align 4, !dbg !8196
  %shr152 = lshr i32 %96, 4, !dbg !8197
  %tobool153 = icmp ne i32 %shr152, 0, !dbg !8197
  br i1 %tobool153, label %if.then159, label %lor.lhs.false154, !dbg !8198

lor.lhs.false154:                                 ; preds = %lor.lhs.false
  %97 = load i32, i32* %sect, align 4, !dbg !8199
  %shr155 = lshr i32 %97, 8, !dbg !8200
  %tobool156 = icmp ne i32 %shr155, 0, !dbg !8200
  br i1 %tobool156, label %if.then159, label %lor.lhs.false157, !dbg !8201

lor.lhs.false157:                                 ; preds = %lor.lhs.false154
  %98 = load i32, i32* %sect, align 4, !dbg !8202
  %tobool158 = icmp ne i32 %98, 0, !dbg !8202
  br i1 %tobool158, label %if.end160, label %if.then159, !dbg !8203

if.then159:                                       ; preds = %lor.lhs.false157, %lor.lhs.false154, %lor.lhs.false, %if.end139
  store i32 -34, i32* %retval, align 4, !dbg !8204
  br label %return, !dbg !8204

if.end160:                                        ; preds = %lor.lhs.false157
  %99 = load i32, i32* %n_block.addr, align 4, !dbg !8205
  %and161 = and i32 %99, 255, !dbg !8206
  %conv162 = trunc i32 %and161 to i8, !dbg !8205
  %100 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8207
  %nsect163 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %100, i32 0, i32 9, !dbg !8208
  store i8 %conv162, i8* %nsect163, align 8, !dbg !8209
  %101 = load i32, i32* %sect, align 4, !dbg !8210
  %conv164 = trunc i32 %101 to i8, !dbg !8210
  %102 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8211
  %lbal165 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %102, i32 0, i32 10, !dbg !8212
  store i8 %conv164, i8* %lbal165, align 1, !dbg !8213
  %103 = load i32, i32* %cyl, align 4, !dbg !8214
  %conv166 = trunc i32 %103 to i8, !dbg !8214
  %104 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8215
  %lbam167 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %104, i32 0, i32 11, !dbg !8216
  store i8 %conv166, i8* %lbam167, align 2, !dbg !8217
  %105 = load i32, i32* %cyl, align 4, !dbg !8218
  %shr168 = lshr i32 %105, 8, !dbg !8219
  %conv169 = trunc i32 %shr168 to i8, !dbg !8218
  %106 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8220
  %lbah170 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %106, i32 0, i32 12, !dbg !8221
  store i8 %conv169, i8* %lbah170, align 1, !dbg !8222
  %107 = load i32, i32* %head, align 4, !dbg !8223
  %108 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8224
  %device171 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %108, i32 0, i32 13, !dbg !8225
  %109 = load i8, i8* %device171, align 4, !dbg !8226
  %conv172 = zext i8 %109 to i32, !dbg !8226
  %or173 = or i32 %conv172, %107, !dbg !8226
  %conv174 = trunc i32 %or173 to i8, !dbg !8226
  store i8 %conv174, i8* %device171, align 4, !dbg !8226
  br label %if.end175

if.end175:                                        ; preds = %if.end160, %if.end106
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.end54
  store i32 0, i32* %retval, align 4, !dbg !8227
  br label %return, !dbg !8227

return:                                           ; preds = %if.end176, %if.then159, %if.then138, %if.then127, %if.then105, %if.else96, %if.then76, %if.then5
  %110 = load i32, i32* %retval, align 4, !dbg !8228
  ret i32 %110, !dbg !8228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_ncq_enabled(%struct.ata_device* %dev) #0 !dbg !8229 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !8232, metadata !DIExpression()), !dbg !8233
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8234
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 3, !dbg !8235
  %1 = load i64, i64* %flags, align 16, !dbg !8235
  %and = and i64 %1, 12296, !dbg !8236
  %cmp = icmp eq i64 %and, 8, !dbg !8237
  %conv = zext i1 %cmp to i32, !dbg !8237
  ret i32 %conv, !dbg !8238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_internal(i32 %tag) #0 !dbg !8239 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  %0 = load i32, i32* %tag.addr, align 4, !dbg !8244
  %cmp = icmp eq i32 %0, 32, !dbg !8245
  ret i1 %cmp, !dbg !8246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @lba_48_ok(i64 %block, i32 %n_block) #0 !dbg !8247 {
entry:
  %block.addr = alloca i64, align 8
  %n_block.addr = alloca i32, align 4
  store i64 %block, i64* %block.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %block.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  store i32 %n_block, i32* %n_block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_block.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  %0 = load i64, i64* %block.addr, align 8, !dbg !8254
  %1 = load i32, i32* %n_block.addr, align 4, !dbg !8255
  %conv = zext i32 %1 to i64, !dbg !8255
  %add = add i64 %0, %conv, !dbg !8256
  %sub = sub i64 %add, 1, !dbg !8257
  %cmp = icmp ult i64 %sub, 281474976710656, !dbg !8258
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8259

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %n_block.addr, align 4, !dbg !8260
  %cmp2 = icmp ule i32 %2, 65535, !dbg !8261
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !8262
  ret i1 %3, !dbg !8263
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @lba_28_ok(i64 %block, i32 %n_block) #0 !dbg !8264 {
entry:
  %block.addr = alloca i64, align 8
  %n_block.addr = alloca i32, align 4
  store i64 %block, i64* %block.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %block.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i32 %n_block, i32* %n_block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_block.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  %0 = load i64, i64* %block.addr, align 8, !dbg !8269
  %1 = load i32, i32* %n_block.addr, align 4, !dbg !8270
  %conv = zext i32 %1 to i64, !dbg !8270
  %add = add i64 %0, %conv, !dbg !8271
  %cmp = icmp ult i64 %add, 268435455, !dbg !8272
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8273

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %n_block.addr, align 4, !dbg !8274
  %cmp2 = icmp ule i32 %2, 256, !dbg !8275
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !8276
  ret i1 %3, !dbg !8277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_rwcmd_protocol(%struct.ata_taskfile* %tf, %struct.ata_device* %dev) #0 !dbg !8278 {
entry:
  %retval = alloca i32, align 4
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd = alloca i8, align 1
  %index = alloca i32, align 4
  %fua = alloca i32, align 4
  %lba48 = alloca i32, align 4
  %write = alloca i32, align 4
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.declare(metadata i8* %cmd, metadata !8285, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.declare(metadata i32* %fua, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata i32* %lba48, metadata !8291, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata i32* %write, metadata !8293, metadata !DIExpression()), !dbg !8294
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8295
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 0, !dbg !8296
  %1 = load i64, i64* %flags, align 8, !dbg !8296
  %and = and i64 %1, 32, !dbg !8297
  %tobool = icmp ne i64 %and, 0, !dbg !8298
  %2 = zext i1 %tobool to i64, !dbg !8298
  %cond = select i1 %tobool, i32 4, i32 0, !dbg !8298
  store i32 %cond, i32* %fua, align 4, !dbg !8299
  %3 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8300
  %flags1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %3, i32 0, i32 0, !dbg !8301
  %4 = load i64, i64* %flags1, align 8, !dbg !8301
  %and2 = and i64 %4, 1, !dbg !8302
  %tobool3 = icmp ne i64 %and2, 0, !dbg !8303
  %5 = zext i1 %tobool3 to i64, !dbg !8303
  %cond4 = select i1 %tobool3, i32 2, i32 0, !dbg !8303
  store i32 %cond4, i32* %lba48, align 4, !dbg !8304
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8305
  %flags5 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 0, !dbg !8306
  %7 = load i64, i64* %flags5, align 8, !dbg !8306
  %and6 = and i64 %7, 8, !dbg !8307
  %tobool7 = icmp ne i64 %and6, 0, !dbg !8308
  %8 = zext i1 %tobool7 to i64, !dbg !8308
  %cond8 = select i1 %tobool7, i32 1, i32 0, !dbg !8308
  store i32 %cond8, i32* %write, align 4, !dbg !8309
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8310
  %flags9 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 3, !dbg !8312
  %10 = load i64, i64* %flags9, align 16, !dbg !8312
  %and10 = and i64 %10, 4096, !dbg !8313
  %tobool11 = icmp ne i64 %and10, 0, !dbg !8313
  br i1 %tobool11, label %if.then, label %if.else, !dbg !8314

if.then:                                          ; preds = %entry
  %11 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8315
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %11, i32 0, i32 1, !dbg !8317
  store i8 1, i8* %protocol, align 8, !dbg !8318
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8319
  %multi_count = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 17, !dbg !8320
  %13 = load i32, i32* %multi_count, align 8, !dbg !8320
  %tobool12 = icmp ne i32 %13, 0, !dbg !8319
  %14 = zext i1 %tobool12 to i64, !dbg !8319
  %cond13 = select i1 %tobool12, i32 0, i32 8, !dbg !8319
  store i32 %cond13, i32* %index, align 4, !dbg !8321
  br label %if.end25, !dbg !8322

if.else:                                          ; preds = %entry
  %15 = load i32, i32* %lba48, align 4, !dbg !8323
  %tobool14 = icmp ne i32 %15, 0, !dbg !8323
  br i1 %tobool14, label %land.lhs.true, label %if.else23, !dbg !8325

land.lhs.true:                                    ; preds = %if.else
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8326
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 0, !dbg !8327
  %17 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !8327
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %17, i32 0, i32 0, !dbg !8328
  %18 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !8328
  %flags15 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 3, !dbg !8329
  %19 = load i64, i64* %flags15, align 8, !dbg !8329
  %and16 = and i64 %19, 256, !dbg !8330
  %tobool17 = icmp ne i64 %and16, 0, !dbg !8330
  br i1 %tobool17, label %if.then18, label %if.else23, !dbg !8331

if.then18:                                        ; preds = %land.lhs.true
  %20 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8332
  %protocol19 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %20, i32 0, i32 1, !dbg !8334
  store i8 1, i8* %protocol19, align 8, !dbg !8335
  %21 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8336
  %multi_count20 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %21, i32 0, i32 17, !dbg !8337
  %22 = load i32, i32* %multi_count20, align 8, !dbg !8337
  %tobool21 = icmp ne i32 %22, 0, !dbg !8336
  %23 = zext i1 %tobool21 to i64, !dbg !8336
  %cond22 = select i1 %tobool21, i32 0, i32 8, !dbg !8336
  store i32 %cond22, i32* %index, align 4, !dbg !8338
  br label %if.end, !dbg !8339

if.else23:                                        ; preds = %land.lhs.true, %if.else
  %24 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8340
  %protocol24 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %24, i32 0, i32 1, !dbg !8342
  store i8 2, i8* %protocol24, align 8, !dbg !8343
  store i32 16, i32* %index, align 4, !dbg !8344
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then18
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  %25 = load i32, i32* %index, align 4, !dbg !8345
  %26 = load i32, i32* %fua, align 4, !dbg !8346
  %add = add i32 %25, %26, !dbg !8347
  %27 = load i32, i32* %lba48, align 4, !dbg !8348
  %add26 = add i32 %add, %27, !dbg !8349
  %28 = load i32, i32* %write, align 4, !dbg !8350
  %add27 = add i32 %add26, %28, !dbg !8351
  %idxprom = sext i32 %add27 to i64, !dbg !8352
  %arrayidx = getelementptr [24 x i8], [24 x i8]* @ata_rw_cmds, i64 0, i64 %idxprom, !dbg !8352
  %29 = load i8, i8* %arrayidx, align 1, !dbg !8352
  store i8 %29, i8* %cmd, align 1, !dbg !8353
  %30 = load i8, i8* %cmd, align 1, !dbg !8354
  %tobool28 = icmp ne i8 %30, 0, !dbg !8354
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !8356

if.then29:                                        ; preds = %if.end25
  %31 = load i8, i8* %cmd, align 1, !dbg !8357
  %32 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8359
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %32, i32 0, i32 14, !dbg !8360
  store i8 %31, i8* %command, align 1, !dbg !8361
  store i32 0, i32* %retval, align 4, !dbg !8362
  br label %return, !dbg !8362

if.end30:                                         ; preds = %if.end25
  store i32 -1, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

return:                                           ; preds = %if.end30, %if.then29
  %33 = load i32, i32* %retval, align 4, !dbg !8364
  ret i32 %33, !dbg !8364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_pack_xfermask(i64 %pio_mask, i64 %mwdma_mask, i64 %udma_mask) #0 !dbg !8365 {
entry:
  %pio_mask.addr = alloca i64, align 8
  %mwdma_mask.addr = alloca i64, align 8
  %udma_mask.addr = alloca i64, align 8
  store i64 %pio_mask, i64* %pio_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pio_mask.addr, metadata !8368, metadata !DIExpression()), !dbg !8369
  store i64 %mwdma_mask, i64* %mwdma_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mwdma_mask.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store i64 %udma_mask, i64* %udma_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %udma_mask.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  %0 = load i64, i64* %pio_mask.addr, align 8, !dbg !8374
  %shl = shl i64 %0, 0, !dbg !8375
  %and = and i64 %shl, 127, !dbg !8376
  %1 = load i64, i64* %mwdma_mask.addr, align 8, !dbg !8377
  %shl1 = shl i64 %1, 7, !dbg !8378
  %and2 = and i64 %shl1, 3968, !dbg !8379
  %or = or i64 %and, %and2, !dbg !8380
  %2 = load i64, i64* %udma_mask.addr, align 8, !dbg !8381
  %shl3 = shl i64 %2, 12, !dbg !8382
  %and4 = and i64 %shl3, 1044480, !dbg !8383
  %or5 = or i64 %or, %and4, !dbg !8384
  ret i64 %or5, !dbg !8385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_unpack_xfermask(i64 %xfer_mask, i64* %pio_mask, i64* %mwdma_mask, i64* %udma_mask) #0 !dbg !8386 {
entry:
  %xfer_mask.addr = alloca i64, align 8
  %pio_mask.addr = alloca i64*, align 8
  %mwdma_mask.addr = alloca i64*, align 8
  %udma_mask.addr = alloca i64*, align 8
  store i64 %xfer_mask, i64* %xfer_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %xfer_mask.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  store i64* %pio_mask, i64** %pio_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pio_mask.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  store i64* %mwdma_mask, i64** %mwdma_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %mwdma_mask.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  store i64* %udma_mask, i64** %udma_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %udma_mask.addr, metadata !8395, metadata !DIExpression()), !dbg !8396
  %0 = load i64*, i64** %pio_mask.addr, align 8, !dbg !8397
  %tobool = icmp ne i64* %0, null, !dbg !8397
  br i1 %tobool, label %if.then, label %if.end, !dbg !8399

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %xfer_mask.addr, align 8, !dbg !8400
  %and = and i64 %1, 127, !dbg !8401
  %shr = lshr i64 %and, 0, !dbg !8402
  %2 = load i64*, i64** %pio_mask.addr, align 8, !dbg !8403
  store i64 %shr, i64* %2, align 8, !dbg !8404
  br label %if.end, !dbg !8405

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64*, i64** %mwdma_mask.addr, align 8, !dbg !8406
  %tobool1 = icmp ne i64* %3, null, !dbg !8406
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !8408

if.then2:                                         ; preds = %if.end
  %4 = load i64, i64* %xfer_mask.addr, align 8, !dbg !8409
  %and3 = and i64 %4, 3968, !dbg !8410
  %shr4 = lshr i64 %and3, 7, !dbg !8411
  %5 = load i64*, i64** %mwdma_mask.addr, align 8, !dbg !8412
  store i64 %shr4, i64* %5, align 8, !dbg !8413
  br label %if.end5, !dbg !8414

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load i64*, i64** %udma_mask.addr, align 8, !dbg !8415
  %tobool6 = icmp ne i64* %6, null, !dbg !8415
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !8417

if.then7:                                         ; preds = %if.end5
  %7 = load i64, i64* %xfer_mask.addr, align 8, !dbg !8418
  %and8 = and i64 %7, 1044480, !dbg !8419
  %shr9 = lshr i64 %and8, 12, !dbg !8420
  %8 = load i64*, i64** %udma_mask.addr, align 8, !dbg !8421
  store i64 %shr9, i64* %8, align 8, !dbg !8422
  br label %if.end10, !dbg !8423

if.end10:                                         ; preds = %if.then7, %if.end5
  ret void, !dbg !8424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @ata_xfer_mask2mode(i64 %xfer_mask) #0 !dbg !8425 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8428, metadata !DIExpression()), !dbg !8433
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8435, metadata !DIExpression()), !dbg !8436
  %retval = alloca i8, align 1
  %xfer_mask.addr = alloca i64, align 8
  %highbit = alloca i32, align 4
  %ent = alloca %struct.ata_xfer_ent*, align 8
  store i64 %xfer_mask, i64* %xfer_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %xfer_mask.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.declare(metadata i32* %highbit, metadata !8439, metadata !DIExpression()), !dbg !8440
  %0 = load i64, i64* %xfer_mask.addr, align 8, !dbg !8441
  %conv = trunc i64 %0 to i32, !dbg !8441
  store i32 %conv, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !8442
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #8, !dbg !8443, !srcloc !8444
  store i32 %2, i32* %r.i, align 4, !dbg !8443
  %3 = load i32, i32* %r.i, align 4, !dbg !8445
  %add.i = add i32 %3, 1, !dbg !8446
  %sub = sub i32 %add.i, 1, !dbg !8447
  store i32 %sub, i32* %highbit, align 4, !dbg !8440
  call void @llvm.dbg.declare(metadata %struct.ata_xfer_ent** %ent, metadata !8448, metadata !DIExpression()), !dbg !8450
  store %struct.ata_xfer_ent* getelementptr inbounds ([4 x %struct.ata_xfer_ent], [4 x %struct.ata_xfer_ent]* @ata_xfer_tbl, i64 0, i64 0), %struct.ata_xfer_ent** %ent, align 8, !dbg !8451
  br label %for.cond, !dbg !8453

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8454
  %shift = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %4, i32 0, i32 0, !dbg !8456
  %5 = load i32, i32* %shift, align 4, !dbg !8456
  %cmp = icmp sge i32 %5, 0, !dbg !8457
  br i1 %cmp, label %for.body, label %for.end, !dbg !8458

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %highbit, align 4, !dbg !8459
  %7 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8461
  %shift2 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %7, i32 0, i32 0, !dbg !8462
  %8 = load i32, i32* %shift2, align 4, !dbg !8462
  %cmp3 = icmp sge i32 %6, %8, !dbg !8463
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !8464

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32, i32* %highbit, align 4, !dbg !8465
  %10 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8466
  %shift5 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %10, i32 0, i32 0, !dbg !8467
  %11 = load i32, i32* %shift5, align 4, !dbg !8467
  %12 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8468
  %bits = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %12, i32 0, i32 1, !dbg !8469
  %13 = load i32, i32* %bits, align 4, !dbg !8469
  %add = add i32 %11, %13, !dbg !8470
  %cmp6 = icmp slt i32 %9, %add, !dbg !8471
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8472

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8473
  %base = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %14, i32 0, i32 2, !dbg !8474
  %15 = load i8, i8* %base, align 4, !dbg !8474
  %conv8 = zext i8 %15 to i32, !dbg !8473
  %16 = load i32, i32* %highbit, align 4, !dbg !8475
  %add9 = add i32 %conv8, %16, !dbg !8476
  %17 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8477
  %shift10 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %17, i32 0, i32 0, !dbg !8478
  %18 = load i32, i32* %shift10, align 4, !dbg !8478
  %sub11 = sub i32 %add9, %18, !dbg !8479
  %conv12 = trunc i32 %sub11 to i8, !dbg !8473
  store i8 %conv12, i8* %retval, align 1, !dbg !8480
  br label %return, !dbg !8480

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8469

for.inc:                                          ; preds = %if.end
  %19 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8481
  %incdec.ptr = getelementptr %struct.ata_xfer_ent, %struct.ata_xfer_ent* %19, i32 1, !dbg !8481
  store %struct.ata_xfer_ent* %incdec.ptr, %struct.ata_xfer_ent** %ent, align 8, !dbg !8481
  br label %for.cond, !dbg !8482, !llvm.loop !8483

for.end:                                          ; preds = %for.cond
  store i8 -1, i8* %retval, align 1, !dbg !8485
  br label %return, !dbg !8485

return:                                           ; preds = %for.end, %if.then
  %20 = load i8, i8* %retval, align 1, !dbg !8486
  ret i8 %20, !dbg !8486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_xfer_mode2mask(i8 zeroext %xfer_mode) #0 !dbg !8487 {
entry:
  %retval = alloca i64, align 8
  %xfer_mode.addr = alloca i8, align 1
  %ent = alloca %struct.ata_xfer_ent*, align 8
  store i8 %xfer_mode, i8* %xfer_mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %xfer_mode.addr, metadata !8490, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.declare(metadata %struct.ata_xfer_ent** %ent, metadata !8492, metadata !DIExpression()), !dbg !8493
  store %struct.ata_xfer_ent* getelementptr inbounds ([4 x %struct.ata_xfer_ent], [4 x %struct.ata_xfer_ent]* @ata_xfer_tbl, i64 0, i64 0), %struct.ata_xfer_ent** %ent, align 8, !dbg !8494
  br label %for.cond, !dbg !8496

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8497
  %shift = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %0, i32 0, i32 0, !dbg !8499
  %1 = load i32, i32* %shift, align 4, !dbg !8499
  %cmp = icmp sge i32 %1, 0, !dbg !8500
  br i1 %cmp, label %for.body, label %for.end, !dbg !8501

for.body:                                         ; preds = %for.cond
  %2 = load i8, i8* %xfer_mode.addr, align 1, !dbg !8502
  %conv = zext i8 %2 to i32, !dbg !8502
  %3 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8504
  %base = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %3, i32 0, i32 2, !dbg !8505
  %4 = load i8, i8* %base, align 4, !dbg !8505
  %conv1 = zext i8 %4 to i32, !dbg !8504
  %cmp2 = icmp sge i32 %conv, %conv1, !dbg !8506
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !8507

land.lhs.true:                                    ; preds = %for.body
  %5 = load i8, i8* %xfer_mode.addr, align 1, !dbg !8508
  %conv4 = zext i8 %5 to i32, !dbg !8508
  %6 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8509
  %base5 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %6, i32 0, i32 2, !dbg !8510
  %7 = load i8, i8* %base5, align 4, !dbg !8510
  %conv6 = zext i8 %7 to i32, !dbg !8509
  %8 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8511
  %bits = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %8, i32 0, i32 1, !dbg !8512
  %9 = load i32, i32* %bits, align 4, !dbg !8512
  %add = add i32 %conv6, %9, !dbg !8513
  %cmp7 = icmp slt i32 %conv4, %add, !dbg !8514
  br i1 %cmp7, label %if.then, label %if.end, !dbg !8515

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8516
  %shift9 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %10, i32 0, i32 0, !dbg !8517
  %11 = load i32, i32* %shift9, align 4, !dbg !8517
  %12 = load i8, i8* %xfer_mode.addr, align 1, !dbg !8518
  %conv10 = zext i8 %12 to i32, !dbg !8518
  %add11 = add i32 %11, %conv10, !dbg !8519
  %13 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8520
  %base12 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %13, i32 0, i32 2, !dbg !8521
  %14 = load i8, i8* %base12, align 4, !dbg !8521
  %conv13 = zext i8 %14 to i32, !dbg !8520
  %sub = sub i32 %add11, %conv13, !dbg !8522
  %shl = shl i32 2, %sub, !dbg !8523
  %sub14 = sub i32 %shl, 1, !dbg !8524
  %15 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8525
  %shift15 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %15, i32 0, i32 0, !dbg !8526
  %16 = load i32, i32* %shift15, align 4, !dbg !8526
  %shl16 = shl i32 1, %16, !dbg !8527
  %sub17 = sub i32 %shl16, 1, !dbg !8528
  %neg = xor i32 %sub17, -1, !dbg !8529
  %and = and i32 %sub14, %neg, !dbg !8530
  %conv18 = sext i32 %and to i64, !dbg !8531
  store i64 %conv18, i64* %retval, align 8, !dbg !8532
  br label %return, !dbg !8532

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8512

for.inc:                                          ; preds = %if.end
  %17 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8533
  %incdec.ptr = getelementptr %struct.ata_xfer_ent, %struct.ata_xfer_ent* %17, i32 1, !dbg !8533
  store %struct.ata_xfer_ent* %incdec.ptr, %struct.ata_xfer_ent** %ent, align 8, !dbg !8533
  br label %for.cond, !dbg !8534, !llvm.loop !8535

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %retval, align 8, !dbg !8537
  br label %return, !dbg !8537

return:                                           ; preds = %for.end, %if.then
  %18 = load i64, i64* %retval, align 8, !dbg !8538
  ret i64 %18, !dbg !8538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_xfer_mode2shift(i64 %xfer_mode) #0 !dbg !8539 {
entry:
  %retval = alloca i32, align 4
  %xfer_mode.addr = alloca i64, align 8
  %ent = alloca %struct.ata_xfer_ent*, align 8
  store i64 %xfer_mode, i64* %xfer_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %xfer_mode.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.declare(metadata %struct.ata_xfer_ent** %ent, metadata !8544, metadata !DIExpression()), !dbg !8545
  store %struct.ata_xfer_ent* getelementptr inbounds ([4 x %struct.ata_xfer_ent], [4 x %struct.ata_xfer_ent]* @ata_xfer_tbl, i64 0, i64 0), %struct.ata_xfer_ent** %ent, align 8, !dbg !8546
  br label %for.cond, !dbg !8548

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8549
  %shift = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %0, i32 0, i32 0, !dbg !8551
  %1 = load i32, i32* %shift, align 4, !dbg !8551
  %cmp = icmp sge i32 %1, 0, !dbg !8552
  br i1 %cmp, label %for.body, label %for.end, !dbg !8553

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %xfer_mode.addr, align 8, !dbg !8554
  %3 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8556
  %base = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %3, i32 0, i32 2, !dbg !8557
  %4 = load i8, i8* %base, align 4, !dbg !8557
  %conv = zext i8 %4 to i64, !dbg !8556
  %cmp1 = icmp uge i64 %2, %conv, !dbg !8558
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !8559

land.lhs.true:                                    ; preds = %for.body
  %5 = load i64, i64* %xfer_mode.addr, align 8, !dbg !8560
  %6 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8561
  %base3 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %6, i32 0, i32 2, !dbg !8562
  %7 = load i8, i8* %base3, align 4, !dbg !8562
  %conv4 = zext i8 %7 to i32, !dbg !8561
  %8 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8563
  %bits = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %8, i32 0, i32 1, !dbg !8564
  %9 = load i32, i32* %bits, align 4, !dbg !8564
  %add = add i32 %conv4, %9, !dbg !8565
  %conv5 = sext i32 %add to i64, !dbg !8561
  %cmp6 = icmp ult i64 %5, %conv5, !dbg !8566
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8567

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8568
  %shift8 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %10, i32 0, i32 0, !dbg !8569
  %11 = load i32, i32* %shift8, align 4, !dbg !8569
  store i32 %11, i32* %retval, align 4, !dbg !8570
  br label %return, !dbg !8570

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8564

for.inc:                                          ; preds = %if.end
  %12 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !8571
  %incdec.ptr = getelementptr %struct.ata_xfer_ent, %struct.ata_xfer_ent* %12, i32 1, !dbg !8571
  store %struct.ata_xfer_ent* %incdec.ptr, %struct.ata_xfer_ent** %ent, align 8, !dbg !8571
  br label %for.cond, !dbg !8572, !llvm.loop !8573

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !8575
  br label %return, !dbg !8575

return:                                           ; preds = %for.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8576
  ret i32 %13, !dbg !8576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @ata_mode_string(i64 %xfer_mask) #0 !dbg !7100 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8428, metadata !DIExpression()), !dbg !8577
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8435, metadata !DIExpression()), !dbg !8579
  %retval = alloca i8*, align 8
  %xfer_mask.addr = alloca i64, align 8
  %highbit = alloca i32, align 4
  store i64 %xfer_mask, i64* %xfer_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %xfer_mask.addr, metadata !8580, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.declare(metadata i32* %highbit, metadata !8582, metadata !DIExpression()), !dbg !8583
  %0 = load i64, i64* %xfer_mask.addr, align 8, !dbg !8584
  %conv = trunc i64 %0 to i32, !dbg !8584
  store i32 %conv, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !8585
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #8, !dbg !8586, !srcloc !8444
  store i32 %2, i32* %r.i, align 4, !dbg !8586
  %3 = load i32, i32* %r.i, align 4, !dbg !8587
  %add.i = add i32 %3, 1, !dbg !8588
  %sub = sub i32 %add.i, 1, !dbg !8589
  store i32 %sub, i32* %highbit, align 4, !dbg !8590
  %4 = load i32, i32* %highbit, align 4, !dbg !8591
  %cmp = icmp sge i32 %4, 0, !dbg !8593
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8594

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %highbit, align 4, !dbg !8595
  %conv2 = sext i32 %5 to i64, !dbg !8595
  %cmp3 = icmp ult i64 %conv2, 20, !dbg !8596
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8597

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %highbit, align 4, !dbg !8598
  %idxprom = sext i32 %6 to i64, !dbg !8599
  %arrayidx = getelementptr [20 x i8*], [20 x i8*]* @ata_mode_string.xfer_mode_str, i64 0, i64 %idxprom, !dbg !8599
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !8599
  store i8* %7, i8** %retval, align 8, !dbg !8600
  br label %return, !dbg !8600

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i8** %retval, align 8, !dbg !8601
  br label %return, !dbg !8601

return:                                           ; preds = %if.end, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !8602
  ret i8* %8, !dbg !8602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @sata_spd_string(i32 %spd) #0 !dbg !7107 {
entry:
  %retval = alloca i8*, align 8
  %spd.addr = alloca i32, align 4
  store i32 %spd, i32* %spd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spd.addr, metadata !8603, metadata !DIExpression()), !dbg !8604
  %0 = load i32, i32* %spd.addr, align 4, !dbg !8605
  %cmp = icmp eq i32 %0, 0, !dbg !8607
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8608

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %spd.addr, align 4, !dbg !8609
  %sub = sub i32 %1, 1, !dbg !8610
  %conv = zext i32 %sub to i64, !dbg !8611
  %cmp1 = icmp uge i64 %conv, 3, !dbg !8612
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8613

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i8** %retval, align 8, !dbg !8614
  br label %return, !dbg !8614

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %spd.addr, align 4, !dbg !8615
  %sub3 = sub i32 %2, 1, !dbg !8616
  %idxprom = zext i32 %sub3 to i64, !dbg !8617
  %arrayidx = getelementptr [3 x i8*], [3 x i8*]* @sata_spd_string.spd_str, i64 0, i64 %idxprom, !dbg !8617
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !8617
  store i8* %3, i8** %retval, align 8, !dbg !8618
  br label %return, !dbg !8618

return:                                           ; preds = %if.end, %if.then
  %4 = load i8*, i8** %retval, align 8, !dbg !8619
  ret i8* %4, !dbg !8619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_dev_classify(%struct.ata_taskfile* %tf) #0 !dbg !8620 {
entry:
  %retval = alloca i32, align 4
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !8623, metadata !DIExpression()), !dbg !8624
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8625
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 11, !dbg !8627
  %1 = load i8, i8* %lbam, align 2, !dbg !8627
  %conv = zext i8 %1 to i32, !dbg !8625
  %cmp = icmp eq i32 %conv, 0, !dbg !8628
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8629

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8630
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 12, !dbg !8631
  %3 = load i8, i8* %lbah, align 1, !dbg !8631
  %conv2 = zext i8 %3 to i32, !dbg !8630
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !8632
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8633

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8634
  br label %return, !dbg !8634

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8636
  %lbam5 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %4, i32 0, i32 11, !dbg !8638
  %5 = load i8, i8* %lbam5, align 2, !dbg !8638
  %conv6 = zext i8 %5 to i32, !dbg !8636
  %cmp7 = icmp eq i32 %conv6, 20, !dbg !8639
  br i1 %cmp7, label %land.lhs.true9, label %if.end15, !dbg !8640

land.lhs.true9:                                   ; preds = %if.end
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8641
  %lbah10 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 12, !dbg !8642
  %7 = load i8, i8* %lbah10, align 1, !dbg !8642
  %conv11 = zext i8 %7 to i32, !dbg !8641
  %cmp12 = icmp eq i32 %conv11, 235, !dbg !8643
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !8644

if.then14:                                        ; preds = %land.lhs.true9
  store i32 3, i32* %retval, align 4, !dbg !8645
  br label %return, !dbg !8645

if.end15:                                         ; preds = %land.lhs.true9, %if.end
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8647
  %lbam16 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 11, !dbg !8649
  %9 = load i8, i8* %lbam16, align 2, !dbg !8649
  %conv17 = zext i8 %9 to i32, !dbg !8647
  %cmp18 = icmp eq i32 %conv17, 105, !dbg !8650
  br i1 %cmp18, label %land.lhs.true20, label %if.end26, !dbg !8651

land.lhs.true20:                                  ; preds = %if.end15
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8652
  %lbah21 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 12, !dbg !8653
  %11 = load i8, i8* %lbah21, align 1, !dbg !8653
  %conv22 = zext i8 %11 to i32, !dbg !8652
  %cmp23 = icmp eq i32 %conv22, 150, !dbg !8654
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8655

if.then25:                                        ; preds = %land.lhs.true20
  store i32 5, i32* %retval, align 4, !dbg !8656
  br label %return, !dbg !8656

if.end26:                                         ; preds = %land.lhs.true20, %if.end15
  %12 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8658
  %lbam27 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %12, i32 0, i32 11, !dbg !8660
  %13 = load i8, i8* %lbam27, align 2, !dbg !8660
  %conv28 = zext i8 %13 to i32, !dbg !8658
  %cmp29 = icmp eq i32 %conv28, 60, !dbg !8661
  br i1 %cmp29, label %land.lhs.true31, label %if.end37, !dbg !8662

land.lhs.true31:                                  ; preds = %if.end26
  %14 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8663
  %lbah32 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %14, i32 0, i32 12, !dbg !8664
  %15 = load i8, i8* %lbah32, align 1, !dbg !8664
  %conv33 = zext i8 %15 to i32, !dbg !8663
  %cmp34 = icmp eq i32 %conv33, 195, !dbg !8665
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !8666

if.then36:                                        ; preds = %land.lhs.true31
  store i32 7, i32* %retval, align 4, !dbg !8667
  br label %return, !dbg !8667

if.end37:                                         ; preds = %land.lhs.true31, %if.end26
  %16 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8669
  %lbam38 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %16, i32 0, i32 11, !dbg !8671
  %17 = load i8, i8* %lbam38, align 2, !dbg !8671
  %conv39 = zext i8 %17 to i32, !dbg !8669
  %cmp40 = icmp eq i32 %conv39, 205, !dbg !8672
  br i1 %cmp40, label %land.lhs.true42, label %if.end48, !dbg !8673

land.lhs.true42:                                  ; preds = %if.end37
  %18 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8674
  %lbah43 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %18, i32 0, i32 12, !dbg !8675
  %19 = load i8, i8* %lbah43, align 1, !dbg !8675
  %conv44 = zext i8 %19 to i32, !dbg !8674
  %cmp45 = icmp eq i32 %conv44, 171, !dbg !8676
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !8677

if.then47:                                        ; preds = %land.lhs.true42
  store i32 9, i32* %retval, align 4, !dbg !8678
  br label %return, !dbg !8678

if.end48:                                         ; preds = %land.lhs.true42, %if.end37
  store i32 0, i32* %retval, align 4, !dbg !8680
  br label %return, !dbg !8680

return:                                           ; preds = %if.end48, %if.then47, %if.then36, %if.then25, %if.then14, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !8681
  ret i32 %20, !dbg !8681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_id_string(i16* %id, i8* %s, i32 %ofs, i32 %len) #0 !dbg !8682 {
entry:
  %id.addr = alloca i16*, align 8
  %s.addr = alloca i8*, align 8
  %ofs.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !8686, metadata !DIExpression()), !dbg !8687
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8688, metadata !DIExpression()), !dbg !8689
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !8690, metadata !DIExpression()), !dbg !8691
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !8692, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8694, metadata !DIExpression()), !dbg !8695
  br label %do.body, !dbg !8696

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %len.addr, align 4, !dbg !8697
  %and = and i32 %0, 1, !dbg !8697
  %tobool = icmp ne i32 %and, 0, !dbg !8697
  %lnot = xor i1 %tobool, true, !dbg !8697
  %lnot1 = xor i1 %lnot, true, !dbg !8697
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8697
  %conv = sext i32 %lnot.ext to i64, !dbg !8697
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8697
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8700

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !8697

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !8701

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !8703

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8701

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1059, i32 0, i64 12) #7, !dbg !8705, !srcloc !8707
  br label %do.end6, !dbg !8705

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !8701

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 340) #7, !dbg !8708, !srcloc !8711
  unreachable, !dbg !8712

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !8701

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !8701

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !8700

do.end10:                                         ; preds = %if.end
  br label %while.cond, !dbg !8713

while.cond:                                       ; preds = %while.body, %do.end10
  %1 = load i32, i32* %len.addr, align 4, !dbg !8714
  %cmp = icmp ugt i32 %1, 0, !dbg !8715
  br i1 %cmp, label %while.body, label %while.end, !dbg !8713

while.body:                                       ; preds = %while.cond
  %2 = load i16*, i16** %id.addr, align 8, !dbg !8716
  %3 = load i32, i32* %ofs.addr, align 4, !dbg !8718
  %idxprom = zext i32 %3 to i64, !dbg !8716
  %arrayidx = getelementptr i16, i16* %2, i64 %idxprom, !dbg !8716
  %4 = load i16, i16* %arrayidx, align 2, !dbg !8716
  %conv12 = zext i16 %4 to i32, !dbg !8716
  %shr = ashr i32 %conv12, 8, !dbg !8719
  store i32 %shr, i32* %c, align 4, !dbg !8720
  %5 = load i32, i32* %c, align 4, !dbg !8721
  %conv13 = trunc i32 %5 to i8, !dbg !8721
  %6 = load i8*, i8** %s.addr, align 8, !dbg !8722
  store i8 %conv13, i8* %6, align 1, !dbg !8723
  %7 = load i8*, i8** %s.addr, align 8, !dbg !8724
  %incdec.ptr = getelementptr i8, i8* %7, i32 1, !dbg !8724
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !8724
  %8 = load i16*, i16** %id.addr, align 8, !dbg !8725
  %9 = load i32, i32* %ofs.addr, align 4, !dbg !8726
  %idxprom14 = zext i32 %9 to i64, !dbg !8725
  %arrayidx15 = getelementptr i16, i16* %8, i64 %idxprom14, !dbg !8725
  %10 = load i16, i16* %arrayidx15, align 2, !dbg !8725
  %conv16 = zext i16 %10 to i32, !dbg !8725
  %and17 = and i32 %conv16, 255, !dbg !8727
  store i32 %and17, i32* %c, align 4, !dbg !8728
  %11 = load i32, i32* %c, align 4, !dbg !8729
  %conv18 = trunc i32 %11 to i8, !dbg !8729
  %12 = load i8*, i8** %s.addr, align 8, !dbg !8730
  store i8 %conv18, i8* %12, align 1, !dbg !8731
  %13 = load i8*, i8** %s.addr, align 8, !dbg !8732
  %incdec.ptr19 = getelementptr i8, i8* %13, i32 1, !dbg !8732
  store i8* %incdec.ptr19, i8** %s.addr, align 8, !dbg !8732
  %14 = load i32, i32* %ofs.addr, align 4, !dbg !8733
  %inc = add i32 %14, 1, !dbg !8733
  store i32 %inc, i32* %ofs.addr, align 4, !dbg !8733
  %15 = load i32, i32* %len.addr, align 4, !dbg !8734
  %sub = sub i32 %15, 2, !dbg !8734
  store i32 %sub, i32* %len.addr, align 4, !dbg !8734
  br label %while.cond, !dbg !8713, !llvm.loop !8735

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_id_c_string(i16* %id, i8* %s, i32 %ofs, i32 %len) #0 !dbg !8738 {
entry:
  %id.addr = alloca i16*, align 8
  %s.addr = alloca i8*, align 8
  %ofs.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8741, metadata !DIExpression()), !dbg !8742
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !8743, metadata !DIExpression()), !dbg !8744
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !8745, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8747, metadata !DIExpression()), !dbg !8748
  %0 = load i16*, i16** %id.addr, align 8, !dbg !8749
  %1 = load i8*, i8** %s.addr, align 8, !dbg !8750
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !8751
  %3 = load i32, i32* %len.addr, align 4, !dbg !8752
  %sub = sub i32 %3, 1, !dbg !8753
  call void @ata_id_string(i16* %0, i8* %1, i32 %2, i32 %sub) #12, !dbg !8754
  %4 = load i8*, i8** %s.addr, align 8, !dbg !8755
  %5 = load i8*, i8** %s.addr, align 8, !dbg !8756
  %6 = load i32, i32* %len.addr, align 4, !dbg !8757
  %sub1 = sub i32 %6, 1, !dbg !8758
  %conv = zext i32 %sub1 to i64, !dbg !8757
  %call = call i64 @strnlen(i8* %5, i64 %conv) #12, !dbg !8759
  %add.ptr = getelementptr i8, i8* %4, i64 %call, !dbg !8760
  store i8* %add.ptr, i8** %p, align 8, !dbg !8761
  br label %while.cond, !dbg !8762

while.cond:                                       ; preds = %while.body, %entry
  %7 = load i8*, i8** %p, align 8, !dbg !8763
  %8 = load i8*, i8** %s.addr, align 8, !dbg !8764
  %cmp = icmp ugt i8* %7, %8, !dbg !8765
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8766

land.rhs:                                         ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !8767
  %arrayidx = getelementptr i8, i8* %9, i64 -1, !dbg !8767
  %10 = load i8, i8* %arrayidx, align 1, !dbg !8767
  %conv3 = zext i8 %10 to i32, !dbg !8767
  %cmp4 = icmp eq i32 %conv3, 32, !dbg !8768
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ], !dbg !8769
  br i1 %11, label %while.body, label %while.end, !dbg !8762

while.body:                                       ; preds = %land.end
  %12 = load i8*, i8** %p, align 8, !dbg !8770
  %incdec.ptr = getelementptr i8, i8* %12, i32 -1, !dbg !8770
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8770
  br label %while.cond, !dbg !8762, !llvm.loop !8771

while.end:                                        ; preds = %land.end
  %13 = load i8*, i8** %p, align 8, !dbg !8772
  store i8 0, i8* %13, align 1, !dbg !8773
  ret void, !dbg !8774
}

; Function Attrs: noredzone
declare dso_local i64 @strnlen(i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_tf_to_lba48(%struct.ata_taskfile* %tf) #0 !dbg !8775 {
entry:
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %sectors = alloca i64, align 8
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !8778, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.declare(metadata i64* %sectors, metadata !8780, metadata !DIExpression()), !dbg !8781
  store i64 0, i64* %sectors, align 8, !dbg !8781
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8782
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 7, !dbg !8783
  %1 = load i8, i8* %hob_lbah, align 2, !dbg !8783
  %conv = zext i8 %1 to i32, !dbg !8782
  %and = and i32 %conv, 255, !dbg !8784
  %conv1 = sext i32 %and to i64, !dbg !8785
  %shl = shl i64 %conv1, 40, !dbg !8786
  %2 = load i64, i64* %sectors, align 8, !dbg !8787
  %or = or i64 %2, %shl, !dbg !8787
  store i64 %or, i64* %sectors, align 8, !dbg !8787
  %3 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8788
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %3, i32 0, i32 6, !dbg !8789
  %4 = load i8, i8* %hob_lbam, align 1, !dbg !8789
  %conv2 = zext i8 %4 to i32, !dbg !8788
  %and3 = and i32 %conv2, 255, !dbg !8790
  %conv4 = sext i32 %and3 to i64, !dbg !8791
  %shl5 = shl i64 %conv4, 32, !dbg !8792
  %5 = load i64, i64* %sectors, align 8, !dbg !8793
  %or6 = or i64 %5, %shl5, !dbg !8793
  store i64 %or6, i64* %sectors, align 8, !dbg !8793
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8794
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 5, !dbg !8795
  %7 = load i8, i8* %hob_lbal, align 4, !dbg !8795
  %conv7 = zext i8 %7 to i32, !dbg !8794
  %and8 = and i32 %conv7, 255, !dbg !8796
  %conv9 = sext i32 %and8 to i64, !dbg !8797
  %shl10 = shl i64 %conv9, 24, !dbg !8798
  %8 = load i64, i64* %sectors, align 8, !dbg !8799
  %or11 = or i64 %8, %shl10, !dbg !8799
  store i64 %or11, i64* %sectors, align 8, !dbg !8799
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8800
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 12, !dbg !8801
  %10 = load i8, i8* %lbah, align 1, !dbg !8801
  %conv12 = zext i8 %10 to i32, !dbg !8800
  %and13 = and i32 %conv12, 255, !dbg !8802
  %shl14 = shl i32 %and13, 16, !dbg !8803
  %conv15 = sext i32 %shl14 to i64, !dbg !8804
  %11 = load i64, i64* %sectors, align 8, !dbg !8805
  %or16 = or i64 %11, %conv15, !dbg !8805
  store i64 %or16, i64* %sectors, align 8, !dbg !8805
  %12 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8806
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %12, i32 0, i32 11, !dbg !8807
  %13 = load i8, i8* %lbam, align 2, !dbg !8807
  %conv17 = zext i8 %13 to i32, !dbg !8806
  %and18 = and i32 %conv17, 255, !dbg !8808
  %shl19 = shl i32 %and18, 8, !dbg !8809
  %conv20 = sext i32 %shl19 to i64, !dbg !8810
  %14 = load i64, i64* %sectors, align 8, !dbg !8811
  %or21 = or i64 %14, %conv20, !dbg !8811
  store i64 %or21, i64* %sectors, align 8, !dbg !8811
  %15 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8812
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %15, i32 0, i32 10, !dbg !8813
  %16 = load i8, i8* %lbal, align 1, !dbg !8813
  %conv22 = zext i8 %16 to i32, !dbg !8812
  %and23 = and i32 %conv22, 255, !dbg !8814
  %conv24 = sext i32 %and23 to i64, !dbg !8815
  %17 = load i64, i64* %sectors, align 8, !dbg !8816
  %or25 = or i64 %17, %conv24, !dbg !8816
  store i64 %or25, i64* %sectors, align 8, !dbg !8816
  %18 = load i64, i64* %sectors, align 8, !dbg !8817
  ret i64 %18, !dbg !8818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_tf_to_lba(%struct.ata_taskfile* %tf) #0 !dbg !8819 {
entry:
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %sectors = alloca i64, align 8
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !8820, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.declare(metadata i64* %sectors, metadata !8822, metadata !DIExpression()), !dbg !8823
  store i64 0, i64* %sectors, align 8, !dbg !8823
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8824
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 13, !dbg !8825
  %1 = load i8, i8* %device, align 4, !dbg !8825
  %conv = zext i8 %1 to i32, !dbg !8824
  %and = and i32 %conv, 15, !dbg !8826
  %shl = shl i32 %and, 24, !dbg !8827
  %conv1 = sext i32 %shl to i64, !dbg !8828
  %2 = load i64, i64* %sectors, align 8, !dbg !8829
  %or = or i64 %2, %conv1, !dbg !8829
  store i64 %or, i64* %sectors, align 8, !dbg !8829
  %3 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8830
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %3, i32 0, i32 12, !dbg !8831
  %4 = load i8, i8* %lbah, align 1, !dbg !8831
  %conv2 = zext i8 %4 to i32, !dbg !8830
  %and3 = and i32 %conv2, 255, !dbg !8832
  %shl4 = shl i32 %and3, 16, !dbg !8833
  %conv5 = sext i32 %shl4 to i64, !dbg !8834
  %5 = load i64, i64* %sectors, align 8, !dbg !8835
  %or6 = or i64 %5, %conv5, !dbg !8835
  store i64 %or6, i64* %sectors, align 8, !dbg !8835
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8836
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 11, !dbg !8837
  %7 = load i8, i8* %lbam, align 2, !dbg !8837
  %conv7 = zext i8 %7 to i32, !dbg !8836
  %and8 = and i32 %conv7, 255, !dbg !8838
  %shl9 = shl i32 %and8, 8, !dbg !8839
  %conv10 = sext i32 %shl9 to i64, !dbg !8840
  %8 = load i64, i64* %sectors, align 8, !dbg !8841
  %or11 = or i64 %8, %conv10, !dbg !8841
  store i64 %or11, i64* %sectors, align 8, !dbg !8841
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !8842
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 10, !dbg !8843
  %10 = load i8, i8* %lbal, align 1, !dbg !8843
  %conv12 = zext i8 %10 to i32, !dbg !8842
  %and13 = and i32 %conv12, 255, !dbg !8844
  %conv14 = sext i32 %and13 to i64, !dbg !8845
  %11 = load i64, i64* %sectors, align 8, !dbg !8846
  %or15 = or i64 %11, %conv14, !dbg !8846
  store i64 %or15, i64* %sectors, align 8, !dbg !8846
  %12 = load i64, i64* %sectors, align 8, !dbg !8847
  ret i64 %12, !dbg !8848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_id_xfermask(i16* %id) #0 !dbg !8849 {
entry:
  %id.addr = alloca i16*, align 8
  %pio_mask = alloca i64, align 8
  %mwdma_mask = alloca i64, align 8
  %udma_mask = alloca i64, align 8
  %mode = alloca i8, align 1
  %pio = alloca i32, align 4
  %dma = alloca i32, align 4
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata i64* %pio_mask, metadata !8854, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.declare(metadata i64* %mwdma_mask, metadata !8856, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.declare(metadata i64* %udma_mask, metadata !8858, metadata !DIExpression()), !dbg !8859
  %0 = load i16*, i16** %id.addr, align 8, !dbg !8860
  %arrayidx = getelementptr i16, i16* %0, i64 53, !dbg !8860
  %1 = load i16, i16* %arrayidx, align 2, !dbg !8860
  %conv = zext i16 %1 to i32, !dbg !8860
  %and = and i32 %conv, 2, !dbg !8862
  %tobool = icmp ne i32 %and, 0, !dbg !8862
  br i1 %tobool, label %if.then, label %if.else, !dbg !8863

if.then:                                          ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !8864
  %arrayidx1 = getelementptr i16, i16* %2, i64 64, !dbg !8864
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !8864
  %conv2 = zext i16 %3 to i32, !dbg !8864
  %and3 = and i32 %conv2, 3, !dbg !8866
  %conv4 = sext i32 %and3 to i64, !dbg !8864
  store i64 %conv4, i64* %pio_mask, align 8, !dbg !8867
  %4 = load i64, i64* %pio_mask, align 8, !dbg !8868
  %shl = shl i64 %4, 3, !dbg !8868
  store i64 %shl, i64* %pio_mask, align 8, !dbg !8868
  %5 = load i64, i64* %pio_mask, align 8, !dbg !8869
  %or = or i64 %5, 7, !dbg !8869
  store i64 %or, i64* %pio_mask, align 8, !dbg !8869
  br label %if.end16, !dbg !8870

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %mode, metadata !8871, metadata !DIExpression()), !dbg !8873
  %6 = load i16*, i16** %id.addr, align 8, !dbg !8874
  %arrayidx5 = getelementptr i16, i16* %6, i64 51, !dbg !8874
  %7 = load i16, i16* %arrayidx5, align 2, !dbg !8874
  %conv6 = zext i16 %7 to i32, !dbg !8874
  %shr = ashr i32 %conv6, 8, !dbg !8875
  %and7 = and i32 %shr, 255, !dbg !8876
  %conv8 = trunc i32 %and7 to i8, !dbg !8877
  store i8 %conv8, i8* %mode, align 1, !dbg !8873
  %8 = load i8, i8* %mode, align 1, !dbg !8878
  %conv9 = zext i8 %8 to i32, !dbg !8878
  %cmp = icmp slt i32 %conv9, 5, !dbg !8880
  br i1 %cmp, label %if.then11, label %if.else15, !dbg !8881

if.then11:                                        ; preds = %if.else
  %9 = load i8, i8* %mode, align 1, !dbg !8882
  %conv12 = zext i8 %9 to i32, !dbg !8882
  %shl13 = shl i32 2, %conv12, !dbg !8883
  %sub = sub i32 %shl13, 1, !dbg !8884
  %conv14 = sext i32 %sub to i64, !dbg !8885
  store i64 %conv14, i64* %pio_mask, align 8, !dbg !8886
  br label %if.end, !dbg !8887

if.else15:                                        ; preds = %if.else
  store i64 1, i64* %pio_mask, align 8, !dbg !8888
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %10 = load i16*, i16** %id.addr, align 8, !dbg !8889
  %arrayidx17 = getelementptr i16, i16* %10, i64 63, !dbg !8889
  %11 = load i16, i16* %arrayidx17, align 2, !dbg !8889
  %conv18 = zext i16 %11 to i32, !dbg !8889
  %and19 = and i32 %conv18, 7, !dbg !8890
  %conv20 = sext i32 %and19 to i64, !dbg !8889
  store i64 %conv20, i64* %mwdma_mask, align 8, !dbg !8891
  %12 = load i16*, i16** %id.addr, align 8, !dbg !8892
  %call = call zeroext i1 @ata_id_is_cfa(i16* %12) #12, !dbg !8894
  br i1 %call, label %if.then21, label %if.end48, !dbg !8895

if.then21:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %pio, metadata !8896, metadata !DIExpression()), !dbg !8898
  %13 = load i16*, i16** %id.addr, align 8, !dbg !8899
  %arrayidx22 = getelementptr i16, i16* %13, i64 163, !dbg !8899
  %14 = load i16, i16* %arrayidx22, align 2, !dbg !8899
  %conv23 = zext i16 %14 to i32, !dbg !8899
  %shr24 = ashr i32 %conv23, 0, !dbg !8900
  %and25 = and i32 %shr24, 7, !dbg !8901
  store i32 %and25, i32* %pio, align 4, !dbg !8898
  call void @llvm.dbg.declare(metadata i32* %dma, metadata !8902, metadata !DIExpression()), !dbg !8903
  %15 = load i16*, i16** %id.addr, align 8, !dbg !8904
  %arrayidx26 = getelementptr i16, i16* %15, i64 163, !dbg !8904
  %16 = load i16, i16* %arrayidx26, align 2, !dbg !8904
  %conv27 = zext i16 %16 to i32, !dbg !8904
  %shr28 = ashr i32 %conv27, 3, !dbg !8905
  %and29 = and i32 %shr28, 7, !dbg !8906
  store i32 %and29, i32* %dma, align 4, !dbg !8903
  %17 = load i32, i32* %pio, align 4, !dbg !8907
  %tobool30 = icmp ne i32 %17, 0, !dbg !8907
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !8909

if.then31:                                        ; preds = %if.then21
  %18 = load i64, i64* %pio_mask, align 8, !dbg !8910
  %or32 = or i64 %18, 32, !dbg !8910
  store i64 %or32, i64* %pio_mask, align 8, !dbg !8910
  br label %if.end33, !dbg !8911

if.end33:                                         ; preds = %if.then31, %if.then21
  %19 = load i32, i32* %pio, align 4, !dbg !8912
  %cmp34 = icmp sgt i32 %19, 1, !dbg !8914
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !8915

if.then36:                                        ; preds = %if.end33
  %20 = load i64, i64* %pio_mask, align 8, !dbg !8916
  %or37 = or i64 %20, 64, !dbg !8916
  store i64 %or37, i64* %pio_mask, align 8, !dbg !8916
  br label %if.end38, !dbg !8917

if.end38:                                         ; preds = %if.then36, %if.end33
  %21 = load i32, i32* %dma, align 4, !dbg !8918
  %tobool39 = icmp ne i32 %21, 0, !dbg !8918
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !8920

if.then40:                                        ; preds = %if.end38
  %22 = load i64, i64* %mwdma_mask, align 8, !dbg !8921
  %or41 = or i64 %22, 8, !dbg !8921
  store i64 %or41, i64* %mwdma_mask, align 8, !dbg !8921
  br label %if.end42, !dbg !8922

if.end42:                                         ; preds = %if.then40, %if.end38
  %23 = load i32, i32* %dma, align 4, !dbg !8923
  %cmp43 = icmp sgt i32 %23, 1, !dbg !8925
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !8926

if.then45:                                        ; preds = %if.end42
  %24 = load i64, i64* %mwdma_mask, align 8, !dbg !8927
  %or46 = or i64 %24, 16, !dbg !8927
  store i64 %or46, i64* %mwdma_mask, align 8, !dbg !8927
  br label %if.end47, !dbg !8928

if.end47:                                         ; preds = %if.then45, %if.end42
  br label %if.end48, !dbg !8929

if.end48:                                         ; preds = %if.end47, %if.end16
  store i64 0, i64* %udma_mask, align 8, !dbg !8930
  %25 = load i16*, i16** %id.addr, align 8, !dbg !8931
  %arrayidx49 = getelementptr i16, i16* %25, i64 53, !dbg !8931
  %26 = load i16, i16* %arrayidx49, align 2, !dbg !8931
  %conv50 = zext i16 %26 to i32, !dbg !8931
  %and51 = and i32 %conv50, 4, !dbg !8933
  %tobool52 = icmp ne i32 %and51, 0, !dbg !8933
  br i1 %tobool52, label %if.then53, label %if.end58, !dbg !8934

if.then53:                                        ; preds = %if.end48
  %27 = load i16*, i16** %id.addr, align 8, !dbg !8935
  %arrayidx54 = getelementptr i16, i16* %27, i64 88, !dbg !8935
  %28 = load i16, i16* %arrayidx54, align 2, !dbg !8935
  %conv55 = zext i16 %28 to i32, !dbg !8935
  %and56 = and i32 %conv55, 255, !dbg !8936
  %conv57 = sext i32 %and56 to i64, !dbg !8935
  store i64 %conv57, i64* %udma_mask, align 8, !dbg !8937
  br label %if.end58, !dbg !8938

if.end58:                                         ; preds = %if.then53, %if.end48
  %29 = load i64, i64* %pio_mask, align 8, !dbg !8939
  %30 = load i64, i64* %mwdma_mask, align 8, !dbg !8940
  %31 = load i64, i64* %udma_mask, align 8, !dbg !8941
  %call59 = call i64 @ata_pack_xfermask(i64 %29, i64 %30, i64 %31) #12, !dbg !8942
  ret i64 %call59, !dbg !8943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_is_cfa(i16* %id) #0 !dbg !8944 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  %0 = load i16*, i16** %id.addr, align 8, !dbg !8949
  %arrayidx = getelementptr i16, i16* %0, i64 0, !dbg !8949
  %1 = load i16, i16* %arrayidx, align 2, !dbg !8949
  %conv = zext i16 %1 to i32, !dbg !8949
  %cmp = icmp eq i32 %conv, 33930, !dbg !8951
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8952

lor.lhs.false:                                    ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !8953
  %arrayidx2 = getelementptr i16, i16* %2, i64 0, !dbg !8953
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !8953
  %conv3 = zext i16 %3 to i32, !dbg !8953
  %cmp4 = icmp eq i32 %conv3, 33866, !dbg !8954
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8955

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1, !dbg !8956
  br label %return, !dbg !8956

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i16*, i16** %id.addr, align 8, !dbg !8957
  %arrayidx6 = getelementptr i16, i16* %4, i64 83, !dbg !8957
  %5 = load i16, i16* %arrayidx6, align 2, !dbg !8957
  %conv7 = zext i16 %5 to i32, !dbg !8957
  %and = and i32 %conv7, 49156, !dbg !8958
  %cmp8 = icmp eq i32 %and, 16388, !dbg !8959
  store i1 %cmp8, i1* %retval, align 1, !dbg !8960
  br label %return, !dbg !8960

return:                                           ; preds = %if.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !8961
  ret i1 %6, !dbg !8961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_exec_internal_sg(%struct.ata_device* %dev, %struct.ata_taskfile* %tf, i8* %cdb, i32 %dma_dir, %struct.scatterlist* %sgl, i32 %n_elem, i64 %timeout) #0 !dbg !8962 {
entry:
  %lock.addr.i239 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i239, metadata !8966, metadata !DIExpression()), !dbg !8972
  %lock.addr.i234 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i234, metadata !8979, metadata !DIExpression()), !dbg !8983
  %flags.addr.i235 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i235, metadata !8987, metadata !DIExpression()), !dbg !8988
  %tmp.i236 = alloca i32, align 4
  %tmp8.i237 = alloca i32, align 4
  %lock.addr.i232 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i232, metadata !8966, metadata !DIExpression()), !dbg !8989
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8996, metadata !DIExpression()), !dbg !9001
  %lock.addr.i227 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i227, metadata !8979, metadata !DIExpression()), !dbg !9003
  %flags.addr.i228 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i228, metadata !8987, metadata !DIExpression()), !dbg !9005
  %tmp.i229 = alloca i32, align 4
  %tmp8.i230 = alloca i32, align 4
  %lock.addr.i222 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i222, metadata !8979, metadata !DIExpression()), !dbg !9006
  %flags.addr.i223 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i223, metadata !8987, metadata !DIExpression()), !dbg !9010
  %tmp.i224 = alloca i32, align 4
  %tmp8.i225 = alloca i32, align 4
  %lock.addr.i220 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i220, metadata !8979, metadata !DIExpression()), !dbg !9011
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !8987, metadata !DIExpression()), !dbg !9013
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8966, metadata !DIExpression()), !dbg !9014
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %cdb.addr = alloca i8*, align 8
  %dma_dir.addr = alloca i32, align 4
  %sgl.addr = alloca %struct.scatterlist*, align 8
  %n_elem.addr = alloca i32, align 4
  %timeout.addr = alloca i64, align 8
  %link = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %command = alloca i8, align 1
  %auto_timeout = alloca i32, align 4
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %preempted_tag = alloca i32, align 4
  %preempted_sactive = alloca i32, align 4
  %preempted_qc_active = alloca i64, align 8
  %preempted_nr_active_links = alloca i32, align 4
  %wait = alloca %struct.completion, align 8
  %flags = alloca i64, align 8
  %err_mask = alloca i32, align 4
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %i = alloca i32, align 4
  %buflen = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  %__dummy89 = alloca i64, align 8
  %__dummy290 = alloca i64, align 8
  %tmp93 = alloca i32, align 4
  %__dummy97 = alloca i64, align 8
  %__dummy298 = alloca i64, align 8
  %tmp101 = alloca i32, align 4
  %__dummy182 = alloca i64, align 8
  %__dummy2183 = alloca i64, align 8
  %tmp186 = alloca i32, align 4
  %__dummy190 = alloca i64, align 8
  %__dummy2191 = alloca i64, align 8
  %tmp194 = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9021, metadata !DIExpression()), !dbg !9022
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !9023, metadata !DIExpression()), !dbg !9024
  store i8* %cdb, i8** %cdb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdb.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  store i32 %dma_dir, i32* %dma_dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dma_dir.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  store %struct.scatterlist* %sgl, %struct.scatterlist** %sgl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  store i32 %n_elem, i32* %n_elem.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_elem.addr, metadata !9031, metadata !DIExpression()), !dbg !9032
  store i64 %timeout, i64* %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout.addr, metadata !9033, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !9035, metadata !DIExpression()), !dbg !9036
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9037
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !9038
  %1 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !9038
  store %struct.ata_link* %1, %struct.ata_link** %link, align 8, !dbg !9036
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9039, metadata !DIExpression()), !dbg !9040
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9041
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !9042
  %3 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !9042
  store %struct.ata_port* %3, %struct.ata_port** %ap, align 8, !dbg !9040
  call void @llvm.dbg.declare(metadata i8* %command, metadata !9043, metadata !DIExpression()), !dbg !9044
  %4 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9045
  %command3 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %4, i32 0, i32 14, !dbg !9046
  %5 = load i8, i8* %command3, align 1, !dbg !9046
  store i8 %5, i8* %command, align 1, !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %auto_timeout, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i32 0, i32* %auto_timeout, align 4, !dbg !9048
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata i32* %preempted_tag, metadata !9051, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.declare(metadata i32* %preempted_sactive, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.declare(metadata i64* %preempted_qc_active, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.declare(metadata i32* %preempted_nr_active_links, metadata !9057, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata %struct.completion* %wait, metadata !9059, metadata !DIExpression()), !dbg !9060
  %done = getelementptr inbounds %struct.completion, %struct.completion* %wait, i32 0, i32 0, !dbg !9060
  store i32 0, i32* %done, align 8, !dbg !9060
  %wait4 = getelementptr inbounds %struct.completion, %struct.completion* %wait, i32 0, i32 1, !dbg !9060
  %task_list = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait4, i32 0, i32 1, !dbg !9060
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0, !dbg !9060
  %wait5 = getelementptr inbounds %struct.completion, %struct.completion* %wait, i32 0, i32 1, !dbg !9060
  %task_list6 = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait5, i32 0, i32 1, !dbg !9060
  store %struct.list_head* %task_list6, %struct.list_head** %next, align 8, !dbg !9060
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1, !dbg !9060
  %wait7 = getelementptr inbounds %struct.completion, %struct.completion* %wait, i32 0, i32 1, !dbg !9060
  %task_list8 = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait7, i32 0, i32 1, !dbg !9060
  store %struct.list_head* %task_list8, %struct.list_head** %prev, align 8, !dbg !9060
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9061, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !9063, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9065, metadata !DIExpression()), !dbg !9066
  br label %do.body, !dbg !9067

do.body:                                          ; preds = %entry
  br label %do.body9, !dbg !9068

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9069, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9072, metadata !DIExpression()), !dbg !9071
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9071
  %conv = zext i1 %cmp to i32, !dbg !9071
  store i32 1, i32* %tmp, align 4, !dbg !9071
  %6 = load i32, i32* %tmp, align 4, !dbg !9071
  br label %do.body10, !dbg !9073

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !9074

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !9075

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !9077, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !9081, metadata !DIExpression()), !dbg !9080
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !9080
  %conv16 = zext i1 %cmp15 to i32, !dbg !9080
  store i32 1, i32* %tmp17, align 4, !dbg !9080
  %7 = load i32, i32* %tmp17, align 4, !dbg !9080
  %call = call i64 @arch_local_irq_save() #12, !dbg !9082
  store i64 %call, i64* %flags, align 8, !dbg !9082
  br label %do.end, !dbg !9082

do.end:                                           ; preds = %do.body12
  br label %do.end18, !dbg !9075

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !9074

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9083, !srcloc !9084
  br label %do.body20, !dbg !9083

do.body20:                                        ; preds = %do.body19
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9085
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !9085
  %9 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9085
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9086
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9087
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !9087
  br label %do.end22, !dbg !9085

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !9083

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9074

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !9073

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !9068

do.end26:                                         ; preds = %do.end25
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9088
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 4, !dbg !9089
  %13 = load i32, i32* %pflags, align 32, !dbg !9089
  %and = and i32 %13, 4, !dbg !9090
  %tobool = icmp ne i32 %and, 0, !dbg !9090
  br i1 %tobool, label %if.then, label %if.end, !dbg !9091

if.then:                                          ; preds = %do.end26
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9092
  %lock27 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 2, !dbg !9093
  %15 = load %struct.spinlock*, %struct.spinlock** %lock27, align 16, !dbg !9093
  %16 = load i64, i64* %flags, align 8, !dbg !9094
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i222, align 8
  store i64 %16, i64* %flags.addr.i223, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !9098
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !9098
  store i32 1, i32* %tmp.i224, align 4, !dbg !9098
  %17 = load i32, i32* %tmp.i224, align 4, !dbg !9098
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !9105
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !9105
  store i32 1, i32* %tmp8.i225, align 4, !dbg !9105
  %18 = load i32, i32* %tmp8.i225, align 4, !dbg !9105
  %19 = load i64, i64* %flags.addr.i223, align 8, !dbg !9107
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !9107
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9108, !srcloc !9110
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i222, align 8, !dbg !9111
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9111
  %rlock.i226 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !9111
  store i32 64, i32* %retval, align 4, !dbg !9113
  br label %return, !dbg !9113

if.end:                                           ; preds = %do.end26
  %22 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9114
  %call28 = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %22, i32 32) #12, !dbg !9115
  store %struct.ata_queued_cmd* %call28, %struct.ata_queued_cmd** %qc, align 8, !dbg !9116
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9117
  %tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 7, !dbg !9118
  store i32 32, i32* %tag, align 8, !dbg !9119
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9120
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %24, i32 0, i32 8, !dbg !9121
  store i32 0, i32* %hw_tag, align 4, !dbg !9122
  %25 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9123
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %25, i32 0, i32 2, !dbg !9124
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !9125
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9126
  %27 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9127
  %ap29 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %27, i32 0, i32 0, !dbg !9128
  store %struct.ata_port* %26, %struct.ata_port** %ap29, align 8, !dbg !9129
  %28 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9130
  %29 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9131
  %dev30 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %29, i32 0, i32 1, !dbg !9132
  store %struct.ata_device* %28, %struct.ata_device** %dev30, align 8, !dbg !9133
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9134
  call void @ata_qc_reinit(%struct.ata_queued_cmd* %30) #12, !dbg !9135
  %31 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9136
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %31, i32 0, i32 3, !dbg !9137
  %32 = load i32, i32* %active_tag, align 8, !dbg !9137
  store i32 %32, i32* %preempted_tag, align 4, !dbg !9138
  %33 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9139
  %sactive = getelementptr inbounds %struct.ata_link, %struct.ata_link* %33, i32 0, i32 4, !dbg !9140
  %34 = load i32, i32* %sactive, align 4, !dbg !9140
  store i32 %34, i32* %preempted_sactive, align 4, !dbg !9141
  %35 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9142
  %qc_active = getelementptr inbounds %struct.ata_port, %struct.ata_port* %35, i32 0, i32 21, !dbg !9143
  %36 = load i64, i64* %qc_active, align 8, !dbg !9143
  store i64 %36, i64* %preempted_qc_active, align 8, !dbg !9144
  %37 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9145
  %nr_active_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 22, !dbg !9146
  %38 = load i32, i32* %nr_active_links, align 16, !dbg !9146
  store i32 %38, i32* %preempted_nr_active_links, align 4, !dbg !9147
  %39 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9148
  %active_tag31 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %39, i32 0, i32 3, !dbg !9149
  store i32 -84148995, i32* %active_tag31, align 8, !dbg !9150
  %40 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9151
  %sactive32 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %40, i32 0, i32 4, !dbg !9152
  store i32 0, i32* %sactive32, align 4, !dbg !9153
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9154
  %qc_active33 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %41, i32 0, i32 21, !dbg !9155
  store i64 0, i64* %qc_active33, align 8, !dbg !9156
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9157
  %nr_active_links34 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 22, !dbg !9158
  store i32 0, i32* %nr_active_links34, align 16, !dbg !9159
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9160
  %tf35 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 4, !dbg !9161
  %44 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9162
  %45 = bitcast %struct.ata_taskfile* %tf35 to i8*, !dbg !9163
  %46 = bitcast %struct.ata_taskfile* %44 to i8*, !dbg !9163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 32, i1 false), !dbg !9163
  %47 = load i8*, i8** %cdb.addr, align 8, !dbg !9164
  %tobool36 = icmp ne i8* %47, null, !dbg !9164
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !9166

if.then37:                                        ; preds = %if.end
  %48 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9167
  %cdb38 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %48, i32 0, i32 5, !dbg !9168
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %cdb38, i64 0, i64 0, !dbg !9169
  %49 = load i8*, i8** %cdb.addr, align 8, !dbg !9170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %49, i64 16, i1 false), !dbg !9169
  br label %if.end39, !dbg !9169

if.end39:                                         ; preds = %if.then37, %if.end
  %50 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9171
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %50, i32 0, i32 1, !dbg !9173
  %51 = load i8, i8* %protocol, align 8, !dbg !9173
  %conv40 = zext i8 %51 to i32, !dbg !9171
  %cmp41 = icmp eq i32 %conv40, 10, !dbg !9174
  br i1 %cmp41, label %land.lhs.true, label %if.end53, !dbg !9175

land.lhs.true:                                    ; preds = %if.end39
  %52 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9176
  %flags43 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %52, i32 0, i32 3, !dbg !9177
  %53 = load i64, i64* %flags43, align 16, !dbg !9177
  %and44 = and i64 %53, 1024, !dbg !9178
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9178
  br i1 %tobool45, label %land.lhs.true46, label %if.end53, !dbg !9179

land.lhs.true46:                                  ; preds = %land.lhs.true
  %54 = load i32, i32* %dma_dir.addr, align 4, !dbg !9180
  %cmp47 = icmp eq i32 %54, 2, !dbg !9181
  br i1 %cmp47, label %if.then49, label %if.end53, !dbg !9182

if.then49:                                        ; preds = %land.lhs.true46
  %55 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9183
  %tf50 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %55, i32 0, i32 4, !dbg !9184
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf50, i32 0, i32 8, !dbg !9185
  %56 = load i8, i8* %feature, align 1, !dbg !9186
  %conv51 = zext i8 %56 to i32, !dbg !9186
  %or = or i32 %conv51, 4, !dbg !9186
  %conv52 = trunc i32 %or to i8, !dbg !9186
  store i8 %conv52, i8* %feature, align 1, !dbg !9186
  br label %if.end53, !dbg !9183

if.end53:                                         ; preds = %if.then49, %land.lhs.true46, %land.lhs.true, %if.end39
  %57 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9187
  %flags54 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %57, i32 0, i32 6, !dbg !9188
  %58 = load i64, i64* %flags54, align 8, !dbg !9189
  %or55 = or i64 %58, 16, !dbg !9189
  store i64 %or55, i64* %flags54, align 8, !dbg !9189
  %59 = load i32, i32* %dma_dir.addr, align 4, !dbg !9190
  %60 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9191
  %dma_dir56 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %60, i32 0, i32 11, !dbg !9192
  store i32 %59, i32* %dma_dir56, align 8, !dbg !9193
  %61 = load i32, i32* %dma_dir.addr, align 4, !dbg !9194
  %cmp57 = icmp ne i32 %61, 3, !dbg !9196
  br i1 %cmp57, label %if.then59, label %if.end63, !dbg !9197

if.then59:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.declare(metadata i32* %buflen, metadata !9201, metadata !DIExpression()), !dbg !9202
  store i32 0, i32* %buflen, align 4, !dbg !9202
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !9203, metadata !DIExpression()), !dbg !9204
  store i32 0, i32* %i, align 4, !dbg !9205
  %62 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !9205
  store %struct.scatterlist* %62, %struct.scatterlist** %sg, align 8, !dbg !9205
  br label %for.cond, !dbg !9205

for.cond:                                         ; preds = %for.inc, %if.then59
  %63 = load i32, i32* %i, align 4, !dbg !9207
  %64 = load i32, i32* %n_elem.addr, align 4, !dbg !9207
  %cmp60 = icmp ult i32 %63, %64, !dbg !9207
  br i1 %cmp60, label %for.body, label %for.end, !dbg !9205

for.body:                                         ; preds = %for.cond
  %65 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9209
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %65, i32 0, i32 2, !dbg !9210
  %66 = load i32, i32* %length, align 4, !dbg !9210
  %67 = load i32, i32* %buflen, align 4, !dbg !9211
  %add = add i32 %67, %66, !dbg !9211
  store i32 %add, i32* %buflen, align 4, !dbg !9211
  br label %for.inc, !dbg !9212

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !dbg !9207
  %inc = add i32 %68, 1, !dbg !9207
  store i32 %inc, i32* %i, align 4, !dbg !9207
  %69 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9207
  %call62 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %69) #12, !dbg !9207
  store %struct.scatterlist* %call62, %struct.scatterlist** %sg, align 8, !dbg !9207
  br label %for.cond, !dbg !9207, !llvm.loop !9213

for.end:                                          ; preds = %for.cond
  %70 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9215
  %71 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !9216
  %72 = load i32, i32* %n_elem.addr, align 4, !dbg !9217
  call void @ata_sg_init(%struct.ata_queued_cmd* %70, %struct.scatterlist* %71, i32 %72) #12, !dbg !9218
  %73 = load i32, i32* %buflen, align 4, !dbg !9219
  %74 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9220
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %74, i32 0, i32 13, !dbg !9221
  store i32 %73, i32* %nbytes, align 8, !dbg !9222
  br label %if.end63, !dbg !9223

if.end63:                                         ; preds = %for.end, %if.end53
  %75 = bitcast %struct.completion* %wait to i8*, !dbg !9224
  %76 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9225
  %private_data = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %76, i32 0, i32 23, !dbg !9226
  store i8* %75, i8** %private_data, align 8, !dbg !9227
  %77 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9228
  %complete_fn = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %77, i32 0, i32 22, !dbg !9229
  store void (%struct.ata_queued_cmd*)* @ata_qc_complete_internal, void (%struct.ata_queued_cmd*)** %complete_fn, align 8, !dbg !9230
  %78 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9231
  call void @ata_qc_issue(%struct.ata_queued_cmd* %78) #12, !dbg !9232
  %79 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9233
  %lock64 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %79, i32 0, i32 2, !dbg !9234
  %80 = load %struct.spinlock*, %struct.spinlock** %lock64, align 16, !dbg !9234
  %81 = load i64, i64* %flags, align 8, !dbg !9235
  store %struct.spinlock* %80, %struct.spinlock** %lock.addr.i227, align 8
  store i64 %81, i64* %flags.addr.i228, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !9236
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !9236
  store i32 1, i32* %tmp.i229, align 4, !dbg !9236
  %82 = load i32, i32* %tmp.i229, align 4, !dbg !9236
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !9237
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !9237
  store i32 1, i32* %tmp8.i230, align 4, !dbg !9237
  %83 = load i32, i32* %tmp8.i230, align 4, !dbg !9237
  %84 = load i64, i64* %flags.addr.i228, align 8, !dbg !9238
  call void @arch_local_irq_restore(i64 %84) #14, !dbg !9238
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9239, !srcloc !9110
  %85 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i227, align 8, !dbg !9240
  %86 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %85, i32 0, i32 0, !dbg !9240
  %rlock.i231 = bitcast %union.anon* %86 to %struct.raw_spinlock*, !dbg !9240
  %87 = load i64, i64* %timeout.addr, align 8, !dbg !9241
  %tobool65 = icmp ne i64 %87, 0, !dbg !9241
  br i1 %tobool65, label %if.end72, label %if.then66, !dbg !9243

if.then66:                                        ; preds = %if.end63
  %88 = load i32, i32* @ata_probe_timeout, align 4, !dbg !9244
  %tobool67 = icmp ne i32 %88, 0, !dbg !9244
  br i1 %tobool67, label %if.then68, label %if.else, !dbg !9247

if.then68:                                        ; preds = %if.then66
  %89 = load i32, i32* @ata_probe_timeout, align 4, !dbg !9248
  %mul = mul i32 %89, 1000, !dbg !9249
  %conv69 = sext i32 %mul to i64, !dbg !9248
  store i64 %conv69, i64* %timeout.addr, align 8, !dbg !9250
  br label %if.end71, !dbg !9251

if.else:                                          ; preds = %if.then66
  %90 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9252
  %91 = load i8, i8* %command, align 1, !dbg !9254
  %call70 = call i64 @ata_internal_cmd_timeout(%struct.ata_device* %90, i8 zeroext %91) #12, !dbg !9255
  store i64 %call70, i64* %timeout.addr, align 8, !dbg !9256
  store i32 1, i32* %auto_timeout, align 4, !dbg !9257
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then68
  br label %if.end72, !dbg !9258

if.end72:                                         ; preds = %if.end71, %if.end63
  %92 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9259
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %92, i32 0, i32 1, !dbg !9261
  %93 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9261
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %93, i32 0, i32 22, !dbg !9262
  %94 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9262
  %tobool73 = icmp ne void (%struct.ata_port*)* %94, null, !dbg !9259
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !9263

if.then74:                                        ; preds = %if.end72
  %95 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9264
  call void @ata_eh_release(%struct.ata_port* %95) #12, !dbg !9265
  br label %if.end75, !dbg !9265

if.end75:                                         ; preds = %if.then74, %if.end72
  %96 = load i64, i64* %timeout.addr, align 8, !dbg !9266
  %conv76 = trunc i64 %96 to i32, !dbg !9266
  store i32 %conv76, i32* %m.addr.i, align 4
  %97 = load i32, i32* %m.addr.i, align 4, !dbg !9267
  %98 = call i1 @llvm.is.constant.i32(i32 %97) #7, !dbg !9269
  br i1 %98, label %if.then.i, label %if.else.i, !dbg !9270

if.then.i:                                        ; preds = %if.end75
  %99 = load i32, i32* %m.addr.i, align 4, !dbg !9271
  %cmp.i = icmp slt i32 %99, 0, !dbg !9274
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9275

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9276
  br label %msecs_to_jiffies.exit, !dbg !9276

if.end.i:                                         ; preds = %if.then.i
  %100 = load i32, i32* %m.addr.i, align 4, !dbg !9277
  %call.i = call i64 @_msecs_to_jiffies(i32 %100) #14, !dbg !9278
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9279
  br label %msecs_to_jiffies.exit, !dbg !9279

if.else.i:                                        ; preds = %if.end75
  %101 = load i32, i32* %m.addr.i, align 4, !dbg !9280
  %call2.i = call i64 @__msecs_to_jiffies(i32 %101) #14, !dbg !9282
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9283
  br label %msecs_to_jiffies.exit, !dbg !9283

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %102 = load i64, i64* %retval.i, align 8, !dbg !9284
  %call78 = call i64 @wait_for_completion_timeout(%struct.completion* %wait, i64 %102) #12, !dbg !9285
  %conv79 = trunc i64 %call78 to i32, !dbg !9285
  store i32 %conv79, i32* %rc, align 4, !dbg !9286
  %103 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9287
  %ops80 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %103, i32 0, i32 1, !dbg !9289
  %104 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops80, align 8, !dbg !9289
  %error_handler81 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %104, i32 0, i32 22, !dbg !9290
  %105 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler81, align 8, !dbg !9290
  %tobool82 = icmp ne void (%struct.ata_port*)* %105, null, !dbg !9287
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !9291

if.then83:                                        ; preds = %msecs_to_jiffies.exit
  %106 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9292
  call void @ata_eh_acquire(%struct.ata_port* %106) #12, !dbg !9293
  br label %if.end84, !dbg !9293

if.end84:                                         ; preds = %if.then83, %msecs_to_jiffies.exit
  %107 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9294
  call void @ata_sff_flush_pio_task(%struct.ata_port* %107) #12, !dbg !9295
  %108 = load i32, i32* %rc, align 4, !dbg !9296
  %tobool85 = icmp ne i32 %108, 0, !dbg !9296
  br i1 %tobool85, label %if.end134, label %if.then86, !dbg !9297

if.then86:                                        ; preds = %if.end84
  br label %do.body87, !dbg !9298

do.body87:                                        ; preds = %if.then86
  br label %do.body88, !dbg !9299

do.body88:                                        ; preds = %do.body87
  call void @llvm.dbg.declare(metadata i64* %__dummy89, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.declare(metadata i64* %__dummy290, metadata !9303, metadata !DIExpression()), !dbg !9302
  %cmp91 = icmp eq i64* %__dummy89, %__dummy290, !dbg !9302
  %conv92 = zext i1 %cmp91 to i32, !dbg !9302
  store i32 1, i32* %tmp93, align 4, !dbg !9302
  %109 = load i32, i32* %tmp93, align 4, !dbg !9302
  br label %do.body94, !dbg !9304

do.body94:                                        ; preds = %do.body88
  br label %do.body95, !dbg !9305

do.body95:                                        ; preds = %do.body94
  br label %do.body96, !dbg !9306

do.body96:                                        ; preds = %do.body95
  call void @llvm.dbg.declare(metadata i64* %__dummy97, metadata !9308, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata i64* %__dummy298, metadata !9312, metadata !DIExpression()), !dbg !9311
  %cmp99 = icmp eq i64* %__dummy97, %__dummy298, !dbg !9311
  %conv100 = zext i1 %cmp99 to i32, !dbg !9311
  store i32 1, i32* %tmp101, align 4, !dbg !9311
  %110 = load i32, i32* %tmp101, align 4, !dbg !9311
  %call102 = call i64 @arch_local_irq_save() #12, !dbg !9313
  store i64 %call102, i64* %flags, align 8, !dbg !9313
  br label %do.end103, !dbg !9313

do.end103:                                        ; preds = %do.body96
  br label %do.end104, !dbg !9306

do.end104:                                        ; preds = %do.end103
  br label %do.body105, !dbg !9305

do.body105:                                       ; preds = %do.end104
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9314, !srcloc !9315
  br label %do.body106, !dbg !9314

do.body106:                                       ; preds = %do.body105
  %111 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9316
  %lock107 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %111, i32 0, i32 2, !dbg !9316
  %112 = load %struct.spinlock*, %struct.spinlock** %lock107, align 16, !dbg !9316
  store %struct.spinlock* %112, %struct.spinlock** %lock.addr.i232, align 8
  %113 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i232, align 8, !dbg !9317
  %114 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %113, i32 0, i32 0, !dbg !9318
  %rlock.i233 = bitcast %union.anon* %114 to %struct.raw_spinlock*, !dbg !9318
  br label %do.end109, !dbg !9316

do.end109:                                        ; preds = %do.body106
  br label %do.end110, !dbg !9314

do.end110:                                        ; preds = %do.end109
  br label %do.end111, !dbg !9305

do.end111:                                        ; preds = %do.end110
  br label %do.end112, !dbg !9304

do.end112:                                        ; preds = %do.end111
  br label %do.end113, !dbg !9299

do.end113:                                        ; preds = %do.end112
  %115 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9319
  %flags114 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %115, i32 0, i32 6, !dbg !9321
  %116 = load i64, i64* %flags114, align 8, !dbg !9321
  %and115 = and i64 %116, 1, !dbg !9322
  %tobool116 = icmp ne i64 %and115, 0, !dbg !9322
  br i1 %tobool116, label %if.then117, label %if.end132, !dbg !9323

if.then117:                                       ; preds = %do.end113
  %117 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9324
  %err_mask118 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %117, i32 0, i32 20, !dbg !9326
  %118 = load i32, i32* %err_mask118, align 4, !dbg !9327
  %or119 = or i32 %118, 4, !dbg !9327
  store i32 %or119, i32* %err_mask118, align 4, !dbg !9327
  %119 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9328
  %ops120 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %119, i32 0, i32 1, !dbg !9330
  %120 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops120, align 8, !dbg !9330
  %error_handler121 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %120, i32 0, i32 22, !dbg !9331
  %121 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler121, align 8, !dbg !9331
  %tobool122 = icmp ne void (%struct.ata_port*)* %121, null, !dbg !9328
  br i1 %tobool122, label %if.then123, label %if.else125, !dbg !9332

if.then123:                                       ; preds = %if.then117
  %122 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9333
  %call124 = call i32 @ata_port_freeze(%struct.ata_port* %122) #12, !dbg !9334
  br label %if.end126, !dbg !9334

if.else125:                                       ; preds = %if.then117
  %123 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9335
  call void @ata_qc_complete(%struct.ata_queued_cmd* %123) #12, !dbg !9336
  br label %if.end126

if.end126:                                        ; preds = %if.else125, %if.then123
  %124 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9337
  %msg_enable = getelementptr inbounds %struct.ata_port, %struct.ata_port* %124, i32 0, i32 38, !dbg !9337
  %125 = load i32, i32* %msg_enable, align 4, !dbg !9337
  %and127 = and i32 %125, 8, !dbg !9337
  %tobool128 = icmp ne i32 %and127, 0, !dbg !9337
  br i1 %tobool128, label %if.then129, label %if.end131, !dbg !9339

if.then129:                                       ; preds = %if.end126
  %126 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9340
  %127 = load i8, i8* %command, align 1, !dbg !9340
  %conv130 = zext i8 %127 to i32, !dbg !9340
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %126, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i32 %conv130) #12, !dbg !9340
  br label %if.end131, !dbg !9340

if.end131:                                        ; preds = %if.then129, %if.end126
  br label %if.end132, !dbg !9341

if.end132:                                        ; preds = %if.end131, %do.end113
  %128 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9342
  %lock133 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %128, i32 0, i32 2, !dbg !9343
  %129 = load %struct.spinlock*, %struct.spinlock** %lock133, align 16, !dbg !9343
  %130 = load i64, i64* %flags, align 8, !dbg !9344
  store %struct.spinlock* %129, %struct.spinlock** %lock.addr.i234, align 8
  store i64 %130, i64* %flags.addr.i235, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !9345
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !9345
  store i32 1, i32* %tmp.i236, align 4, !dbg !9345
  %131 = load i32, i32* %tmp.i236, align 4, !dbg !9345
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !9346
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !9346
  store i32 1, i32* %tmp8.i237, align 4, !dbg !9346
  %132 = load i32, i32* %tmp8.i237, align 4, !dbg !9346
  %133 = load i64, i64* %flags.addr.i235, align 8, !dbg !9347
  call void @arch_local_irq_restore(i64 %133) #14, !dbg !9347
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9348, !srcloc !9110
  %134 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i234, align 8, !dbg !9349
  %135 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %134, i32 0, i32 0, !dbg !9349
  %rlock.i238 = bitcast %union.anon* %135 to %struct.raw_spinlock*, !dbg !9349
  br label %if.end134, !dbg !9350

if.end134:                                        ; preds = %if.end132, %if.end84
  %136 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9351
  %ops135 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %136, i32 0, i32 1, !dbg !9353
  %137 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops135, align 8, !dbg !9353
  %post_internal_cmd = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %137, i32 0, i32 24, !dbg !9354
  %138 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %post_internal_cmd, align 8, !dbg !9354
  %tobool136 = icmp ne void (%struct.ata_queued_cmd*)* %138, null, !dbg !9351
  br i1 %tobool136, label %if.then137, label %if.end140, !dbg !9355

if.then137:                                       ; preds = %if.end134
  %139 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9356
  %ops138 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %139, i32 0, i32 1, !dbg !9357
  %140 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops138, align 8, !dbg !9357
  %post_internal_cmd139 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %140, i32 0, i32 24, !dbg !9358
  %141 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %post_internal_cmd139, align 8, !dbg !9358
  %142 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9359
  call void %141(%struct.ata_queued_cmd* %142) #12, !dbg !9356
  br label %if.end140, !dbg !9356

if.end140:                                        ; preds = %if.then137, %if.end134
  %143 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9360
  %flags141 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %143, i32 0, i32 6, !dbg !9362
  %144 = load i64, i64* %flags141, align 8, !dbg !9362
  %and142 = and i64 %144, 65536, !dbg !9363
  %tobool143 = icmp ne i64 %and142, 0, !dbg !9363
  br i1 %tobool143, label %if.then144, label %if.else166, !dbg !9364

if.then144:                                       ; preds = %if.end140
  %145 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9365
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %145, i32 0, i32 21, !dbg !9368
  %command145 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf, i32 0, i32 14, !dbg !9369
  %146 = load i8, i8* %command145, align 1, !dbg !9369
  %conv146 = zext i8 %146 to i32, !dbg !9365
  %and147 = and i32 %conv146, 33, !dbg !9370
  %tobool148 = icmp ne i32 %and147, 0, !dbg !9370
  br i1 %tobool148, label %if.then149, label %if.end152, !dbg !9371

if.then149:                                       ; preds = %if.then144
  %147 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9372
  %err_mask150 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %147, i32 0, i32 20, !dbg !9373
  %148 = load i32, i32* %err_mask150, align 4, !dbg !9374
  %or151 = or i32 %148, 1, !dbg !9374
  store i32 %or151, i32* %err_mask150, align 4, !dbg !9374
  br label %if.end152, !dbg !9372

if.end152:                                        ; preds = %if.then149, %if.then144
  %149 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9375
  %err_mask153 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %149, i32 0, i32 20, !dbg !9377
  %150 = load i32, i32* %err_mask153, align 4, !dbg !9377
  %tobool154 = icmp ne i32 %150, 0, !dbg !9375
  br i1 %tobool154, label %if.end158, label %if.then155, !dbg !9378

if.then155:                                       ; preds = %if.end152
  %151 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9379
  %err_mask156 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %151, i32 0, i32 20, !dbg !9380
  %152 = load i32, i32* %err_mask156, align 4, !dbg !9381
  %or157 = or i32 %152, 256, !dbg !9381
  store i32 %or157, i32* %err_mask156, align 4, !dbg !9381
  br label %if.end158, !dbg !9379

if.end158:                                        ; preds = %if.then155, %if.end152
  %153 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9382
  %err_mask159 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %153, i32 0, i32 20, !dbg !9384
  %154 = load i32, i32* %err_mask159, align 4, !dbg !9384
  %and160 = and i32 %154, -257, !dbg !9385
  %tobool161 = icmp ne i32 %and160, 0, !dbg !9385
  br i1 %tobool161, label %if.then162, label %if.end165, !dbg !9386

if.then162:                                       ; preds = %if.end158
  %155 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9387
  %err_mask163 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %155, i32 0, i32 20, !dbg !9388
  %156 = load i32, i32* %err_mask163, align 4, !dbg !9389
  %and164 = and i32 %156, -257, !dbg !9389
  store i32 %and164, i32* %err_mask163, align 4, !dbg !9389
  br label %if.end165, !dbg !9387

if.end165:                                        ; preds = %if.then162, %if.end158
  br label %if.end179, !dbg !9390

if.else166:                                       ; preds = %if.end140
  %157 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9391
  %tf167 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %157, i32 0, i32 4, !dbg !9393
  %command168 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf167, i32 0, i32 14, !dbg !9394
  %158 = load i8, i8* %command168, align 1, !dbg !9394
  %conv169 = zext i8 %158 to i32, !dbg !9391
  %cmp170 = icmp eq i32 %conv169, 11, !dbg !9395
  br i1 %cmp170, label %if.then172, label %if.end178, !dbg !9396

if.then172:                                       ; preds = %if.else166
  %159 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9397
  %result_tf173 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %159, i32 0, i32 21, !dbg !9399
  %command174 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf173, i32 0, i32 14, !dbg !9400
  %160 = load i8, i8* %command174, align 1, !dbg !9401
  %conv175 = zext i8 %160 to i32, !dbg !9401
  %or176 = or i32 %conv175, 2, !dbg !9401
  %conv177 = trunc i32 %or176 to i8, !dbg !9401
  store i8 %conv177, i8* %command174, align 1, !dbg !9401
  br label %if.end178, !dbg !9402

if.end178:                                        ; preds = %if.then172, %if.else166
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end165
  br label %do.body180, !dbg !9403

do.body180:                                       ; preds = %if.end179
  br label %do.body181, !dbg !9404

do.body181:                                       ; preds = %do.body180
  call void @llvm.dbg.declare(metadata i64* %__dummy182, metadata !9405, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.declare(metadata i64* %__dummy2183, metadata !9408, metadata !DIExpression()), !dbg !9407
  %cmp184 = icmp eq i64* %__dummy182, %__dummy2183, !dbg !9407
  %conv185 = zext i1 %cmp184 to i32, !dbg !9407
  store i32 1, i32* %tmp186, align 4, !dbg !9407
  %161 = load i32, i32* %tmp186, align 4, !dbg !9407
  br label %do.body187, !dbg !9409

do.body187:                                       ; preds = %do.body181
  br label %do.body188, !dbg !9410

do.body188:                                       ; preds = %do.body187
  br label %do.body189, !dbg !9411

do.body189:                                       ; preds = %do.body188
  call void @llvm.dbg.declare(metadata i64* %__dummy190, metadata !9413, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.declare(metadata i64* %__dummy2191, metadata !9417, metadata !DIExpression()), !dbg !9416
  %cmp192 = icmp eq i64* %__dummy190, %__dummy2191, !dbg !9416
  %conv193 = zext i1 %cmp192 to i32, !dbg !9416
  store i32 1, i32* %tmp194, align 4, !dbg !9416
  %162 = load i32, i32* %tmp194, align 4, !dbg !9416
  %call195 = call i64 @arch_local_irq_save() #12, !dbg !9418
  store i64 %call195, i64* %flags, align 8, !dbg !9418
  br label %do.end196, !dbg !9418

do.end196:                                        ; preds = %do.body189
  br label %do.end197, !dbg !9411

do.end197:                                        ; preds = %do.end196
  br label %do.body198, !dbg !9410

do.body198:                                       ; preds = %do.end197
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9419, !srcloc !9420
  br label %do.body199, !dbg !9419

do.body199:                                       ; preds = %do.body198
  %163 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9421
  %lock200 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %163, i32 0, i32 2, !dbg !9421
  %164 = load %struct.spinlock*, %struct.spinlock** %lock200, align 16, !dbg !9421
  store %struct.spinlock* %164, %struct.spinlock** %lock.addr.i239, align 8
  %165 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i239, align 8, !dbg !9422
  %166 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %165, i32 0, i32 0, !dbg !9423
  %rlock.i240 = bitcast %union.anon* %166 to %struct.raw_spinlock*, !dbg !9423
  br label %do.end202, !dbg !9421

do.end202:                                        ; preds = %do.body199
  br label %do.end203, !dbg !9419

do.end203:                                        ; preds = %do.end202
  br label %do.end204, !dbg !9410

do.end204:                                        ; preds = %do.end203
  br label %do.end205, !dbg !9409

do.end205:                                        ; preds = %do.end204
  br label %do.end206, !dbg !9404

do.end206:                                        ; preds = %do.end205
  %167 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9424
  %168 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9425
  %result_tf207 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %168, i32 0, i32 21, !dbg !9426
  %169 = bitcast %struct.ata_taskfile* %167 to i8*, !dbg !9426
  %170 = bitcast %struct.ata_taskfile* %result_tf207 to i8*, !dbg !9426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 32, i1 false), !dbg !9426
  %171 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9427
  %err_mask208 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %171, i32 0, i32 20, !dbg !9428
  %172 = load i32, i32* %err_mask208, align 4, !dbg !9428
  store i32 %172, i32* %err_mask, align 4, !dbg !9429
  %173 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9430
  call void @ata_qc_free(%struct.ata_queued_cmd* %173) #12, !dbg !9431
  %174 = load i32, i32* %preempted_tag, align 4, !dbg !9432
  %175 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9433
  %active_tag209 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %175, i32 0, i32 3, !dbg !9434
  store i32 %174, i32* %active_tag209, align 8, !dbg !9435
  %176 = load i32, i32* %preempted_sactive, align 4, !dbg !9436
  %177 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9437
  %sactive210 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %177, i32 0, i32 4, !dbg !9438
  store i32 %176, i32* %sactive210, align 4, !dbg !9439
  %178 = load i64, i64* %preempted_qc_active, align 8, !dbg !9440
  %179 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9441
  %qc_active211 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %179, i32 0, i32 21, !dbg !9442
  store i64 %178, i64* %qc_active211, align 8, !dbg !9443
  %180 = load i32, i32* %preempted_nr_active_links, align 4, !dbg !9444
  %181 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9445
  %nr_active_links212 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %181, i32 0, i32 22, !dbg !9446
  store i32 %180, i32* %nr_active_links212, align 16, !dbg !9447
  %182 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9448
  %lock213 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %182, i32 0, i32 2, !dbg !9449
  %183 = load %struct.spinlock*, %struct.spinlock** %lock213, align 16, !dbg !9449
  %184 = load i64, i64* %flags, align 8, !dbg !9450
  store %struct.spinlock* %183, %struct.spinlock** %lock.addr.i220, align 8
  store i64 %184, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !9451
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !9451
  store i32 1, i32* %tmp.i, align 4, !dbg !9451
  %185 = load i32, i32* %tmp.i, align 4, !dbg !9451
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !9452
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !9452
  store i32 1, i32* %tmp8.i, align 4, !dbg !9452
  %186 = load i32, i32* %tmp8.i, align 4, !dbg !9452
  %187 = load i64, i64* %flags.addr.i, align 8, !dbg !9453
  call void @arch_local_irq_restore(i64 %187) #14, !dbg !9453
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9454, !srcloc !9110
  %188 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i220, align 8, !dbg !9455
  %189 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %188, i32 0, i32 0, !dbg !9455
  %rlock.i221 = bitcast %union.anon* %189 to %struct.raw_spinlock*, !dbg !9455
  %190 = load i32, i32* %err_mask, align 4, !dbg !9456
  %and214 = and i32 %190, 4, !dbg !9458
  %tobool215 = icmp ne i32 %and214, 0, !dbg !9458
  br i1 %tobool215, label %land.lhs.true216, label %if.end219, !dbg !9459

land.lhs.true216:                                 ; preds = %do.end206
  %191 = load i32, i32* %auto_timeout, align 4, !dbg !9460
  %tobool217 = icmp ne i32 %191, 0, !dbg !9460
  br i1 %tobool217, label %if.then218, label %if.end219, !dbg !9461

if.then218:                                       ; preds = %land.lhs.true216
  %192 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9462
  %193 = load i8, i8* %command, align 1, !dbg !9463
  call void @ata_internal_cmd_timed_out(%struct.ata_device* %192, i8 zeroext %193) #12, !dbg !9464
  br label %if.end219, !dbg !9464

if.end219:                                        ; preds = %if.then218, %land.lhs.true216, %do.end206
  %194 = load i32, i32* %err_mask, align 4, !dbg !9465
  store i32 %194, i32* %retval, align 4, !dbg !9466
  br label %return, !dbg !9466

return:                                           ; preds = %if.end219, %if.then
  %195 = load i32, i32* %retval, align 4, !dbg !9467
  ret i32 %195, !dbg !9467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !9468 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !9472, metadata !DIExpression()), !dbg !9473
  %call = call i64 @arch_local_save_flags() #12, !dbg !9474
  store i64 %call, i64* %f, align 8, !dbg !9475
  call void @arch_local_irq_disable() #12, !dbg !9476
  %0 = load i64, i64* %f, align 8, !dbg !9477
  ret i64 %0, !dbg !9478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %ap, i32 %tag) #0 !dbg !9479 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %tag.addr = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9482, metadata !DIExpression()), !dbg !9483
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !9484, metadata !DIExpression()), !dbg !9485
  %0 = load i32, i32* %tag.addr, align 4, !dbg !9486
  %call = call zeroext i1 @ata_tag_valid(i32 %0) #12, !dbg !9488
  br i1 %call, label %if.then, label %if.end, !dbg !9489

if.then:                                          ; preds = %entry
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9490
  %qcmd = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 19, !dbg !9491
  %2 = load i32, i32* %tag.addr, align 4, !dbg !9492
  %idxprom = zext i32 %2 to i64, !dbg !9490
  %arrayidx = getelementptr [33 x %struct.ata_queued_cmd], [33 x %struct.ata_queued_cmd]* %qcmd, i64 0, i64 %idxprom, !dbg !9490
  store %struct.ata_queued_cmd* %arrayidx, %struct.ata_queued_cmd** %retval, align 8, !dbg !9493
  br label %return, !dbg !9493

if.end:                                           ; preds = %entry
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !9494
  br label %return, !dbg !9494

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !9495
  ret %struct.ata_queued_cmd* %3, !dbg !9495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_qc_reinit(%struct.ata_queued_cmd* %qc) #0 !dbg !9496 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9499
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 11, !dbg !9500
  store i32 3, i32* %dma_dir, align 8, !dbg !9501
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9502
  %sg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 17, !dbg !9503
  store %struct.scatterlist* null, %struct.scatterlist** %sg, align 8, !dbg !9504
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9505
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 6, !dbg !9506
  store i64 0, i64* %flags, align 8, !dbg !9507
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9508
  %cursg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 18, !dbg !9509
  store %struct.scatterlist* null, %struct.scatterlist** %cursg, align 8, !dbg !9510
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9511
  %cursg_ofs = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 19, !dbg !9512
  store i32 0, i32* %cursg_ofs, align 8, !dbg !9513
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9514
  %curbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 15, !dbg !9515
  store i32 0, i32* %curbytes, align 8, !dbg !9516
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9517
  %extrabytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 14, !dbg !9518
  store i32 0, i32* %extrabytes, align 4, !dbg !9519
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9520
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 13, !dbg !9521
  store i32 0, i32* %nbytes, align 8, !dbg !9522
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9523
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 9, !dbg !9524
  store i32 0, i32* %n_elem, align 8, !dbg !9525
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9526
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 20, !dbg !9527
  store i32 0, i32* %err_mask, align 4, !dbg !9528
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9529
  %sect_size = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 12, !dbg !9530
  store i32 512, i32* %sect_size, align 4, !dbg !9531
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9532
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 1, !dbg !9533
  %12 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9533
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9534
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 4, !dbg !9535
  call void @ata_tf_init(%struct.ata_device* %12, %struct.ata_taskfile* %tf) #12, !dbg !9536
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9537
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 21, !dbg !9538
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf, i32 0, i32 14, !dbg !9539
  store i8 64, i8* %command, align 1, !dbg !9540
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9541
  %result_tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 21, !dbg !9542
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf1, i32 0, i32 8, !dbg !9543
  store i8 0, i8* %feature, align 1, !dbg !9544
  ret void, !dbg !9545
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sg_init(%struct.ata_queued_cmd* %qc, %struct.scatterlist* %sg, i32 %n_elem) #0 !dbg !9546 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %sg.addr = alloca %struct.scatterlist*, align 8
  %n_elem.addr = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9549, metadata !DIExpression()), !dbg !9550
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !9551, metadata !DIExpression()), !dbg !9552
  store i32 %n_elem, i32* %n_elem.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_elem.addr, metadata !9553, metadata !DIExpression()), !dbg !9554
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9555
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9556
  %sg1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 17, !dbg !9557
  store %struct.scatterlist* %0, %struct.scatterlist** %sg1, align 8, !dbg !9558
  %2 = load i32, i32* %n_elem.addr, align 4, !dbg !9559
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9560
  %n_elem2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 9, !dbg !9561
  store i32 %2, i32* %n_elem2, align 8, !dbg !9562
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9563
  %sg3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 17, !dbg !9564
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg3, align 8, !dbg !9564
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9565
  %cursg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 18, !dbg !9566
  store %struct.scatterlist* %5, %struct.scatterlist** %cursg, align 8, !dbg !9567
  ret void, !dbg !9568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_qc_complete_internal(%struct.ata_queued_cmd* %qc) #0 !dbg !9569 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %waiting = alloca %struct.completion*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata %struct.completion** %waiting, metadata !9572, metadata !DIExpression()), !dbg !9573
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9574
  %private_data = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 23, !dbg !9575
  %1 = load i8*, i8** %private_data, align 8, !dbg !9575
  %2 = bitcast i8* %1 to %struct.completion*, !dbg !9574
  store %struct.completion* %2, %struct.completion** %waiting, align 8, !dbg !9573
  %3 = load %struct.completion*, %struct.completion** %waiting, align 8, !dbg !9576
  call void @complete(%struct.completion* %3) #12, !dbg !9577
  ret void, !dbg !9578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_qc_issue(%struct.ata_queued_cmd* %qc) #0 !dbg !9579 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %prot = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on24 = alloca i32, align 4
  %tmp47 = alloca i64, align 8
  %__ret_warn_on61 = alloca i32, align 4
  %tmp85 = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9580, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9582, metadata !DIExpression()), !dbg !9583
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9584
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !9585
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !9585
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9583
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !9586, metadata !DIExpression()), !dbg !9587
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9588
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 1, !dbg !9589
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9589
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 0, !dbg !9590
  %4 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !9590
  store %struct.ata_link* %4, %struct.ata_link** %link, align 8, !dbg !9587
  call void @llvm.dbg.declare(metadata i8* %prot, metadata !9591, metadata !DIExpression()), !dbg !9592
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9593
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 4, !dbg !9594
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !9595
  %6 = load i8, i8* %protocol, align 8, !dbg !9595
  store i8 %6, i8* %prot, align 1, !dbg !9592
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9596, metadata !DIExpression()), !dbg !9598
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9598
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 1, !dbg !9598
  %8 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9598
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %8, i32 0, i32 22, !dbg !9598
  %9 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9598
  %tobool = icmp ne void (%struct.ata_port*)* %9, null, !dbg !9598
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9598

land.rhs:                                         ; preds = %entry
  %10 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9598
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %10, i32 0, i32 3, !dbg !9598
  %11 = load i32, i32* %active_tag, align 8, !dbg !9598
  %call = call zeroext i1 @ata_tag_valid(i32 %11) #12, !dbg !9598
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !9599
  %lnot = xor i1 %12, true, !dbg !9598
  %lnot3 = xor i1 %lnot, true, !dbg !9598
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9598
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9598
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !9600
  %tobool4 = icmp ne i32 %13, 0, !dbg !9600
  %lnot5 = xor i1 %tobool4, true, !dbg !9600
  %lnot7 = xor i1 %lnot5, true, !dbg !9600
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9600
  %conv = sext i32 %lnot.ext8 to i64, !dbg !9600
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9600
  br i1 %tobool9, label %if.then, label %if.end, !dbg !9598

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !9600

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !9602

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !9604

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !9602

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4772, i32 2307, i64 12) #7, !dbg !9606, !srcloc !9608
  br label %do.end12, !dbg !9606

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 357) #7, !dbg !9609, !srcloc !9611
  br label %do.body13, !dbg !9602

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !9612

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !9602

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !9602

if.end:                                           ; preds = %do.end15, %land.end
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !9598
  %tobool16 = icmp ne i32 %14, 0, !dbg !9598
  %lnot17 = xor i1 %tobool16, true, !dbg !9598
  %lnot19 = xor i1 %lnot17, true, !dbg !9598
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !9598
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !9598
  store i64 %conv21, i64* %tmp, align 8, !dbg !9600
  %15 = load i64, i64* %tmp, align 8, !dbg !9598
  %16 = load i8, i8* %prot, align 1, !dbg !9614
  %call22 = call zeroext i1 @ata_is_ncq(i8 zeroext %16) #12, !dbg !9616
  br i1 %call22, label %if.then23, label %if.else, !dbg !9617

if.then23:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on24, metadata !9618, metadata !DIExpression()), !dbg !9621
  %17 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9621
  %sactive = getelementptr inbounds %struct.ata_link, %struct.ata_link* %17, i32 0, i32 4, !dbg !9621
  %18 = load i32, i32* %sactive, align 4, !dbg !9621
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9621
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 8, !dbg !9621
  %20 = load i32, i32* %hw_tag, align 4, !dbg !9621
  %shl = shl i32 1, %20, !dbg !9621
  %and = and i32 %18, %shl, !dbg !9621
  %tobool25 = icmp ne i32 %and, 0, !dbg !9621
  %lnot26 = xor i1 %tobool25, true, !dbg !9621
  %lnot28 = xor i1 %lnot26, true, !dbg !9621
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !9621
  store i32 %lnot.ext29, i32* %__ret_warn_on24, align 4, !dbg !9621
  %21 = load i32, i32* %__ret_warn_on24, align 4, !dbg !9622
  %tobool30 = icmp ne i32 %21, 0, !dbg !9622
  %lnot31 = xor i1 %tobool30, true, !dbg !9622
  %lnot33 = xor i1 %lnot31, true, !dbg !9622
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !9622
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !9622
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !9622
  br i1 %tobool36, label %if.then37, label %if.end46, !dbg !9621

if.then37:                                        ; preds = %if.then23
  br label %do.body38, !dbg !9622

do.body38:                                        ; preds = %if.then37
  br label %do.body39, !dbg !9624

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !9626

do.end40:                                         ; preds = %do.body39
  br label %do.body41, !dbg !9624

do.body41:                                        ; preds = %do.end40
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4775, i32 2307, i64 12) #7, !dbg !9628, !srcloc !9630
  br label %do.end42, !dbg !9628

do.end42:                                         ; preds = %do.body41
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 358) #7, !dbg !9631, !srcloc !9633
  br label %do.body43, !dbg !9624

do.body43:                                        ; preds = %do.end42
  br label %do.end44, !dbg !9634

do.end44:                                         ; preds = %do.body43
  br label %do.end45, !dbg !9624

do.end45:                                         ; preds = %do.end44
  br label %if.end46, !dbg !9624

if.end46:                                         ; preds = %do.end45, %if.then23
  %22 = load i32, i32* %__ret_warn_on24, align 4, !dbg !9621
  %tobool48 = icmp ne i32 %22, 0, !dbg !9621
  %lnot49 = xor i1 %tobool48, true, !dbg !9621
  %lnot51 = xor i1 %lnot49, true, !dbg !9621
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !9621
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !9621
  store i64 %conv53, i64* %tmp47, align 8, !dbg !9622
  %23 = load i64, i64* %tmp47, align 8, !dbg !9621
  %24 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9636
  %sactive54 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %24, i32 0, i32 4, !dbg !9638
  %25 = load i32, i32* %sactive54, align 4, !dbg !9638
  %tobool55 = icmp ne i32 %25, 0, !dbg !9636
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !9639

if.then56:                                        ; preds = %if.end46
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9640
  %nr_active_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 22, !dbg !9641
  %27 = load i32, i32* %nr_active_links, align 16, !dbg !9642
  %inc = add i32 %27, 1, !dbg !9642
  store i32 %inc, i32* %nr_active_links, align 16, !dbg !9642
  br label %if.end57, !dbg !9640

if.end57:                                         ; preds = %if.then56, %if.end46
  %28 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9643
  %hw_tag58 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %28, i32 0, i32 8, !dbg !9644
  %29 = load i32, i32* %hw_tag58, align 4, !dbg !9644
  %shl59 = shl i32 1, %29, !dbg !9645
  %30 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9646
  %sactive60 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %30, i32 0, i32 4, !dbg !9647
  %31 = load i32, i32* %sactive60, align 4, !dbg !9648
  %or = or i32 %31, %shl59, !dbg !9648
  store i32 %or, i32* %sactive60, align 4, !dbg !9648
  br label %if.end95, !dbg !9649

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on61, metadata !9650, metadata !DIExpression()), !dbg !9653
  %32 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9653
  %sactive62 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %32, i32 0, i32 4, !dbg !9653
  %33 = load i32, i32* %sactive62, align 4, !dbg !9653
  %tobool63 = icmp ne i32 %33, 0, !dbg !9653
  %lnot64 = xor i1 %tobool63, true, !dbg !9653
  %lnot66 = xor i1 %lnot64, true, !dbg !9653
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !9653
  store i32 %lnot.ext67, i32* %__ret_warn_on61, align 4, !dbg !9653
  %34 = load i32, i32* %__ret_warn_on61, align 4, !dbg !9654
  %tobool68 = icmp ne i32 %34, 0, !dbg !9654
  %lnot69 = xor i1 %tobool68, true, !dbg !9654
  %lnot71 = xor i1 %lnot69, true, !dbg !9654
  %lnot.ext72 = zext i1 %lnot71 to i32, !dbg !9654
  %conv73 = sext i32 %lnot.ext72 to i64, !dbg !9654
  %tobool74 = icmp ne i64 %conv73, 0, !dbg !9654
  br i1 %tobool74, label %if.then75, label %if.end84, !dbg !9653

if.then75:                                        ; preds = %if.else
  br label %do.body76, !dbg !9654

do.body76:                                        ; preds = %if.then75
  br label %do.body77, !dbg !9656

do.body77:                                        ; preds = %do.body76
  br label %do.end78, !dbg !9658

do.end78:                                         ; preds = %do.body77
  br label %do.body79, !dbg !9656

do.body79:                                        ; preds = %do.end78
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4781, i32 2307, i64 12) #7, !dbg !9660, !srcloc !9662
  br label %do.end80, !dbg !9660

do.end80:                                         ; preds = %do.body79
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 359) #7, !dbg !9663, !srcloc !9665
  br label %do.body81, !dbg !9656

do.body81:                                        ; preds = %do.end80
  br label %do.end82, !dbg !9666

do.end82:                                         ; preds = %do.body81
  br label %do.end83, !dbg !9656

do.end83:                                         ; preds = %do.end82
  br label %if.end84, !dbg !9656

if.end84:                                         ; preds = %do.end83, %if.else
  %35 = load i32, i32* %__ret_warn_on61, align 4, !dbg !9653
  %tobool86 = icmp ne i32 %35, 0, !dbg !9653
  %lnot87 = xor i1 %tobool86, true, !dbg !9653
  %lnot89 = xor i1 %lnot87, true, !dbg !9653
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !9653
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !9653
  store i64 %conv91, i64* %tmp85, align 8, !dbg !9654
  %36 = load i64, i64* %tmp85, align 8, !dbg !9653
  %37 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9668
  %nr_active_links92 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 22, !dbg !9669
  %38 = load i32, i32* %nr_active_links92, align 16, !dbg !9670
  %inc93 = add i32 %38, 1, !dbg !9670
  store i32 %inc93, i32* %nr_active_links92, align 16, !dbg !9670
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9671
  %tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %39, i32 0, i32 7, !dbg !9672
  %40 = load i32, i32* %tag, align 8, !dbg !9672
  %41 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9673
  %active_tag94 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %41, i32 0, i32 3, !dbg !9674
  store i32 %40, i32* %active_tag94, align 8, !dbg !9675
  br label %if.end95

if.end95:                                         ; preds = %if.end84, %if.end57
  %42 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9676
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %42, i32 0, i32 6, !dbg !9677
  %43 = load i64, i64* %flags, align 8, !dbg !9678
  %or96 = or i64 %43, 1, !dbg !9678
  store i64 %or96, i64* %flags, align 8, !dbg !9678
  %44 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9679
  %tag97 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %44, i32 0, i32 7, !dbg !9680
  %45 = load i32, i32* %tag97, align 8, !dbg !9680
  %sh_prom = zext i32 %45 to i64, !dbg !9681
  %shl98 = shl i64 1, %sh_prom, !dbg !9681
  %46 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9682
  %qc_active = getelementptr inbounds %struct.ata_port, %struct.ata_port* %46, i32 0, i32 21, !dbg !9683
  %47 = load i64, i64* %qc_active, align 8, !dbg !9684
  %or99 = or i64 %47, %shl98, !dbg !9684
  store i64 %or99, i64* %qc_active, align 8, !dbg !9684
  %48 = load i8, i8* %prot, align 1, !dbg !9685
  %call100 = call zeroext i1 @ata_is_data(i8 zeroext %48) #12, !dbg !9687
  br i1 %call100, label %land.lhs.true, label %if.end107, !dbg !9688

land.lhs.true:                                    ; preds = %if.end95
  %49 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9689
  %sg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %49, i32 0, i32 17, !dbg !9690
  %50 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9690
  %tobool102 = icmp ne %struct.scatterlist* %50, null, !dbg !9689
  br i1 %tobool102, label %lor.lhs.false, label %if.then106, !dbg !9691

lor.lhs.false:                                    ; preds = %land.lhs.true
  %51 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9692
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %51, i32 0, i32 9, !dbg !9693
  %52 = load i32, i32* %n_elem, align 8, !dbg !9693
  %tobool103 = icmp ne i32 %52, 0, !dbg !9692
  br i1 %tobool103, label %lor.lhs.false104, label %if.then106, !dbg !9694

lor.lhs.false104:                                 ; preds = %lor.lhs.false
  %53 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9695
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %53, i32 0, i32 13, !dbg !9696
  %54 = load i32, i32* %nbytes, align 8, !dbg !9696
  %tobool105 = icmp ne i32 %54, 0, !dbg !9695
  br i1 %tobool105, label %if.end107, label %if.then106, !dbg !9697

if.then106:                                       ; preds = %lor.lhs.false104, %lor.lhs.false, %land.lhs.true
  br label %sys_err, !dbg !9698

if.end107:                                        ; preds = %lor.lhs.false104, %if.end95
  %55 = load i8, i8* %prot, align 1, !dbg !9699
  %call108 = call zeroext i1 @ata_is_dma(i8 zeroext %55) #12, !dbg !9701
  br i1 %call108, label %if.then117, label %lor.lhs.false110, !dbg !9702

lor.lhs.false110:                                 ; preds = %if.end107
  %56 = load i8, i8* %prot, align 1, !dbg !9703
  %call111 = call zeroext i1 @ata_is_pio(i8 zeroext %56) #12, !dbg !9704
  br i1 %call111, label %land.lhs.true113, label %if.end122, !dbg !9705

land.lhs.true113:                                 ; preds = %lor.lhs.false110
  %57 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9706
  %flags114 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %57, i32 0, i32 3, !dbg !9707
  %58 = load i64, i64* %flags114, align 8, !dbg !9707
  %and115 = and i64 %58, 128, !dbg !9708
  %tobool116 = icmp ne i64 %and115, 0, !dbg !9708
  br i1 %tobool116, label %if.then117, label %if.end122, !dbg !9709

if.then117:                                       ; preds = %land.lhs.true113, %if.end107
  %59 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9710
  %call118 = call i32 @ata_sg_setup(%struct.ata_queued_cmd* %59) #12, !dbg !9712
  %tobool119 = icmp ne i32 %call118, 0, !dbg !9712
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !9713

if.then120:                                       ; preds = %if.then117
  br label %sys_err, !dbg !9714

if.end121:                                        ; preds = %if.then117
  br label %if.end122, !dbg !9715

if.end122:                                        ; preds = %if.end121, %land.lhs.true113, %lor.lhs.false110
  %60 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9716
  %dev123 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %60, i32 0, i32 1, !dbg !9716
  %61 = load %struct.ata_device*, %struct.ata_device** %dev123, align 8, !dbg !9716
  %flags124 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %61, i32 0, i32 3, !dbg !9716
  %62 = load i64, i64* %flags124, align 16, !dbg !9716
  %and125 = and i64 %62, 32768, !dbg !9716
  %tobool126 = icmp ne i64 %and125, 0, !dbg !9716
  %lnot127 = xor i1 %tobool126, true, !dbg !9716
  %lnot129 = xor i1 %lnot127, true, !dbg !9716
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !9716
  %conv131 = sext i32 %lnot.ext130 to i64, !dbg !9716
  %tobool132 = icmp ne i64 %conv131, 0, !dbg !9716
  br i1 %tobool132, label %if.then133, label %if.end137, !dbg !9718

if.then133:                                       ; preds = %if.end122
  %63 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9719
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %63, i32 0, i32 11, !dbg !9721
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %eh_info, i32 0, i32 3, !dbg !9722
  %64 = load i32, i32* %action, align 8, !dbg !9723
  %or134 = or i32 %64, 6, !dbg !9723
  store i32 %or134, i32* %action, align 8, !dbg !9723
  %65 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9724
  %eh_info135 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %65, i32 0, i32 11, !dbg !9725
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %eh_info135, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.88, i64 0, i64 0)) #12, !dbg !9726
  %66 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9727
  %call136 = call i32 @ata_link_abort(%struct.ata_link* %66) #12, !dbg !9728
  br label %return, !dbg !9729

if.end137:                                        ; preds = %if.end122
  %67 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9730
  %ops138 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %67, i32 0, i32 1, !dbg !9731
  %68 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops138, align 8, !dbg !9731
  %qc_prep = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %68, i32 0, i32 2, !dbg !9732
  %69 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %qc_prep, align 8, !dbg !9732
  %70 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9733
  %call139 = call i32 %69(%struct.ata_queued_cmd* %70) #12, !dbg !9730
  %71 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9734
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %71, i32 0, i32 20, !dbg !9735
  %72 = load i32, i32* %err_mask, align 4, !dbg !9736
  %or140 = or i32 %72, %call139, !dbg !9736
  store i32 %or140, i32* %err_mask, align 4, !dbg !9736
  %73 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9737
  %err_mask141 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %73, i32 0, i32 20, !dbg !9737
  %74 = load i32, i32* %err_mask141, align 4, !dbg !9737
  %tobool142 = icmp ne i32 %74, 0, !dbg !9737
  %lnot143 = xor i1 %tobool142, true, !dbg !9737
  %lnot145 = xor i1 %lnot143, true, !dbg !9737
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !9737
  %conv147 = sext i32 %lnot.ext146 to i64, !dbg !9737
  %tobool148 = icmp ne i64 %conv147, 0, !dbg !9737
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !9739

if.then149:                                       ; preds = %if.end137
  br label %err, !dbg !9740

if.end150:                                        ; preds = %if.end137
  %75 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9741
  call void @trace_ata_qc_issue(%struct.ata_queued_cmd* %75) #12, !dbg !9742
  %76 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9743
  %ops151 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %76, i32 0, i32 1, !dbg !9744
  %77 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops151, align 8, !dbg !9744
  %qc_issue = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %77, i32 0, i32 3, !dbg !9745
  %78 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %qc_issue, align 8, !dbg !9745
  %79 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9746
  %call152 = call i32 %78(%struct.ata_queued_cmd* %79) #12, !dbg !9743
  %80 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9747
  %err_mask153 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %80, i32 0, i32 20, !dbg !9748
  %81 = load i32, i32* %err_mask153, align 4, !dbg !9749
  %or154 = or i32 %81, %call152, !dbg !9749
  store i32 %or154, i32* %err_mask153, align 4, !dbg !9749
  %82 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9750
  %err_mask155 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %82, i32 0, i32 20, !dbg !9750
  %83 = load i32, i32* %err_mask155, align 4, !dbg !9750
  %tobool156 = icmp ne i32 %83, 0, !dbg !9750
  %lnot157 = xor i1 %tobool156, true, !dbg !9750
  %lnot159 = xor i1 %lnot157, true, !dbg !9750
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !9750
  %conv161 = sext i32 %lnot.ext160 to i64, !dbg !9750
  %tobool162 = icmp ne i64 %conv161, 0, !dbg !9750
  br i1 %tobool162, label %if.then163, label %if.end164, !dbg !9752

if.then163:                                       ; preds = %if.end150
  br label %err, !dbg !9753

if.end164:                                        ; preds = %if.end150
  br label %return, !dbg !9754

sys_err:                                          ; preds = %if.then120, %if.then106
  call void @llvm.dbg.label(metadata !9755), !dbg !9756
  %84 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9757
  %err_mask165 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %84, i32 0, i32 20, !dbg !9758
  %85 = load i32, i32* %err_mask165, align 4, !dbg !9759
  %or166 = or i32 %85, 64, !dbg !9759
  store i32 %or166, i32* %err_mask165, align 4, !dbg !9759
  br label %err, !dbg !9757

err:                                              ; preds = %sys_err, %if.then163, %if.then149
  call void @llvm.dbg.label(metadata !9760), !dbg !9761
  %86 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9762
  call void @ata_qc_complete(%struct.ata_queued_cmd* %86) #12, !dbg !9763
  br label %return, !dbg !9764

return:                                           ; preds = %err, %if.end164, %if.then133
  ret void, !dbg !9764
}

; Function Attrs: noredzone
declare dso_local i64 @ata_internal_cmd_timeout(%struct.ata_device*, i8 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @ata_eh_release(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local i64 @wait_for_completion_timeout(%struct.completion*, i64) #1

; Function Attrs: noredzone
declare dso_local void @ata_eh_acquire(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local void @ata_sff_flush_pio_task(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_port_freeze(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_qc_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !9765 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9766, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9768, metadata !DIExpression()), !dbg !9769
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9770
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !9771
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !9771
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9769
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9772
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 4, !dbg !9773
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !9774
  %3 = load i64, i64* %flags, align 8, !dbg !9774
  %and = and i64 %3, 8, !dbg !9775
  %tobool = icmp ne i64 %and, 0, !dbg !9776
  %lnot = xor i1 %tobool, true, !dbg !9776
  %lnot2 = xor i1 %lnot, true, !dbg !9777
  call void @ledtrig_disk_activity(i1 zeroext %lnot2) #12, !dbg !9778
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9779
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 1, !dbg !9781
  %5 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9781
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %5, i32 0, i32 22, !dbg !9782
  %6 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9782
  %tobool3 = icmp ne void (%struct.ata_port*)* %6, null, !dbg !9779
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9783

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !9784, metadata !DIExpression()), !dbg !9786
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9787
  %dev4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 1, !dbg !9788
  %8 = load %struct.ata_device*, %struct.ata_device** %dev4, align 8, !dbg !9788
  store %struct.ata_device* %8, %struct.ata_device** %dev, align 8, !dbg !9786
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !9789, metadata !DIExpression()), !dbg !9791
  %9 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9792
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 0, !dbg !9793
  %10 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !9793
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %10, i32 0, i32 11, !dbg !9794
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !9791
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9795
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 20, !dbg !9795
  %12 = load i32, i32* %err_mask, align 4, !dbg !9795
  %tobool5 = icmp ne i32 %12, 0, !dbg !9795
  %lnot6 = xor i1 %tobool5, true, !dbg !9795
  %lnot7 = xor i1 %lnot6, true, !dbg !9795
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !9795
  %conv = sext i32 %lnot.ext to i64, !dbg !9795
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9795
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !9797

if.then9:                                         ; preds = %if.then
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9798
  %flags10 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 6, !dbg !9799
  %14 = load i64, i64* %flags10, align 8, !dbg !9800
  %or = or i64 %14, 65536, !dbg !9800
  store i64 %or, i64* %flags10, align 8, !dbg !9800
  br label %if.end, !dbg !9798

if.end:                                           ; preds = %if.then9, %if.then
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9801
  %tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 7, !dbg !9801
  %16 = load i32, i32* %tag, align 8, !dbg !9801
  %call = call zeroext i1 @ata_tag_internal(i32 %16) #12, !dbg !9801
  %lnot11 = xor i1 %call, true, !dbg !9801
  %lnot13 = xor i1 %lnot11, true, !dbg !9801
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !9801
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !9801
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !9801
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9803

if.then17:                                        ; preds = %if.end
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9804
  call void @fill_result_tf(%struct.ata_queued_cmd* %17) #12, !dbg !9806
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9807
  call void @trace_ata_qc_complete_internal(%struct.ata_queued_cmd* %18) #12, !dbg !9808
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9809
  call void @__ata_qc_complete(%struct.ata_queued_cmd* %19) #12, !dbg !9810
  br label %if.end114, !dbg !9811

if.end18:                                         ; preds = %if.end
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9812
  %flags19 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %20, i32 0, i32 6, !dbg !9812
  %21 = load i64, i64* %flags19, align 8, !dbg !9812
  %and20 = and i64 %21, 65536, !dbg !9812
  %tobool21 = icmp ne i64 %and20, 0, !dbg !9812
  %lnot22 = xor i1 %tobool21, true, !dbg !9812
  %lnot24 = xor i1 %lnot22, true, !dbg !9812
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !9812
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !9812
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !9812
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !9814

if.then28:                                        ; preds = %if.end18
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9815
  call void @fill_result_tf(%struct.ata_queued_cmd* %22) #12, !dbg !9817
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9818
  call void @trace_ata_qc_complete_failed(%struct.ata_queued_cmd* %23) #12, !dbg !9819
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9820
  call void @ata_qc_schedule_eh(%struct.ata_queued_cmd* %24) #12, !dbg !9821
  br label %if.end114, !dbg !9822

if.end29:                                         ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9823, metadata !DIExpression()), !dbg !9825
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9825
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 4, !dbg !9825
  %26 = load i32, i32* %pflags, align 32, !dbg !9825
  %and30 = and i32 %26, 4, !dbg !9825
  %tobool31 = icmp ne i32 %and30, 0, !dbg !9825
  %lnot32 = xor i1 %tobool31, true, !dbg !9825
  %lnot34 = xor i1 %lnot32, true, !dbg !9825
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !9825
  store i32 %lnot.ext35, i32* %__ret_warn_on, align 4, !dbg !9825
  %27 = load i32, i32* %__ret_warn_on, align 4, !dbg !9826
  %tobool36 = icmp ne i32 %27, 0, !dbg !9826
  %lnot37 = xor i1 %tobool36, true, !dbg !9826
  %lnot39 = xor i1 %lnot37, true, !dbg !9826
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !9826
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !9826
  %tobool42 = icmp ne i64 %conv41, 0, !dbg !9826
  br i1 %tobool42, label %if.then43, label %if.end50, !dbg !9825

if.then43:                                        ; preds = %if.end29
  br label %do.body, !dbg !9826

do.body:                                          ; preds = %if.then43
  br label %do.body44, !dbg !9828

do.body44:                                        ; preds = %do.body
  br label %do.end, !dbg !9830

do.end:                                           ; preds = %do.body44
  br label %do.body45, !dbg !9828

do.body45:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4679, i32 2307, i64 12) #7, !dbg !9832, !srcloc !9834
  br label %do.end46, !dbg !9832

do.end46:                                         ; preds = %do.body45
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 356) #7, !dbg !9835, !srcloc !9837
  br label %do.body47, !dbg !9828

do.body47:                                        ; preds = %do.end46
  br label %do.end48, !dbg !9838

do.end48:                                         ; preds = %do.body47
  br label %do.end49, !dbg !9828

do.end49:                                         ; preds = %do.end48
  br label %if.end50, !dbg !9828

if.end50:                                         ; preds = %do.end49, %if.end29
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !9825
  %tobool51 = icmp ne i32 %28, 0, !dbg !9825
  %lnot52 = xor i1 %tobool51, true, !dbg !9825
  %lnot54 = xor i1 %lnot52, true, !dbg !9825
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !9825
  %conv56 = sext i32 %lnot.ext55 to i64, !dbg !9825
  store i64 %conv56, i64* %tmp, align 8, !dbg !9826
  %29 = load i64, i64* %tmp, align 8, !dbg !9825
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9840
  %flags57 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %30, i32 0, i32 6, !dbg !9842
  %31 = load i64, i64* %flags57, align 8, !dbg !9842
  %and58 = and i64 %31, 16, !dbg !9843
  %tobool59 = icmp ne i64 %and58, 0, !dbg !9843
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !9844

if.then60:                                        ; preds = %if.end50
  %32 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9845
  call void @fill_result_tf(%struct.ata_queued_cmd* %32) #12, !dbg !9846
  br label %if.end61, !dbg !9846

if.end61:                                         ; preds = %if.then60, %if.end50
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9847
  call void @trace_ata_qc_complete_done(%struct.ata_queued_cmd* %33) #12, !dbg !9848
  %34 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9849
  %tf62 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %34, i32 0, i32 4, !dbg !9850
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf62, i32 0, i32 14, !dbg !9851
  %35 = load i8, i8* %command, align 1, !dbg !9851
  %conv63 = zext i8 %35 to i32, !dbg !9849
  switch i32 %conv63, label %sw.epilog [
    i32 239, label %sw.bb
    i32 145, label %sw.bb86
    i32 198, label %sw.bb86
    i32 230, label %sw.bb88
  ], !dbg !9852

sw.bb:                                            ; preds = %if.end61
  %36 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9853
  %tf64 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %36, i32 0, i32 4, !dbg !9856
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf64, i32 0, i32 8, !dbg !9857
  %37 = load i8, i8* %feature, align 1, !dbg !9857
  %conv65 = zext i8 %37 to i32, !dbg !9853
  %cmp = icmp ne i32 %conv65, 2, !dbg !9858
  br i1 %cmp, label %land.lhs.true, label %if.end85, !dbg !9859

land.lhs.true:                                    ; preds = %sw.bb
  %38 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9860
  %tf67 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %38, i32 0, i32 4, !dbg !9861
  %feature68 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf67, i32 0, i32 8, !dbg !9862
  %39 = load i8, i8* %feature68, align 1, !dbg !9862
  %conv69 = zext i8 %39 to i32, !dbg !9860
  %cmp70 = icmp ne i32 %conv69, 130, !dbg !9863
  br i1 %cmp70, label %land.lhs.true72, label %if.end85, !dbg !9864

land.lhs.true72:                                  ; preds = %land.lhs.true
  %40 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9865
  %tf73 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %40, i32 0, i32 4, !dbg !9866
  %feature74 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf73, i32 0, i32 8, !dbg !9867
  %41 = load i8, i8* %feature74, align 1, !dbg !9867
  %conv75 = zext i8 %41 to i32, !dbg !9865
  %cmp76 = icmp ne i32 %conv75, 170, !dbg !9868
  br i1 %cmp76, label %land.lhs.true78, label %if.end85, !dbg !9869

land.lhs.true78:                                  ; preds = %land.lhs.true72
  %42 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9870
  %tf79 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %42, i32 0, i32 4, !dbg !9871
  %feature80 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf79, i32 0, i32 8, !dbg !9872
  %43 = load i8, i8* %feature80, align 1, !dbg !9872
  %conv81 = zext i8 %43 to i32, !dbg !9870
  %cmp82 = icmp ne i32 %conv81, 85, !dbg !9873
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !9874

if.then84:                                        ; preds = %land.lhs.true78
  br label %sw.epilog, !dbg !9875

if.end85:                                         ; preds = %land.lhs.true78, %land.lhs.true72, %land.lhs.true, %sw.bb
  br label %sw.bb86, !dbg !9876

sw.bb86:                                          ; preds = %if.end61, %if.end61, %if.end85
  %44 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !9877
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %44, i32 0, i32 4, !dbg !9878
  %45 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9879
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %45, i32 0, i32 1, !dbg !9880
  %46 = load i32, i32* %devno, align 8, !dbg !9880
  %idxprom = zext i32 %46 to i64, !dbg !9877
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 %idxprom, !dbg !9877
  %47 = load i32, i32* %arrayidx, align 4, !dbg !9881
  %or87 = or i32 %47, 1, !dbg !9881
  store i32 %or87, i32* %arrayidx, align 4, !dbg !9881
  %48 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9882
  call void @ata_port_schedule_eh(%struct.ata_port* %48) #12, !dbg !9883
  br label %sw.epilog, !dbg !9884

sw.bb88:                                          ; preds = %if.end61
  %49 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9885
  %flags89 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %49, i32 0, i32 3, !dbg !9886
  %50 = load i64, i64* %flags89, align 16, !dbg !9887
  %or90 = or i64 %50, 32768, !dbg !9887
  store i64 %or90, i64* %flags89, align 16, !dbg !9887
  br label %sw.epilog, !dbg !9888

sw.epilog:                                        ; preds = %if.end61, %sw.bb88, %sw.bb86, %if.then84
  %51 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9889
  %flags91 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %51, i32 0, i32 3, !dbg !9889
  %52 = load i64, i64* %flags91, align 16, !dbg !9889
  %and92 = and i64 %52, 65536, !dbg !9889
  %tobool93 = icmp ne i64 %and92, 0, !dbg !9889
  %lnot94 = xor i1 %tobool93, true, !dbg !9889
  %lnot96 = xor i1 %lnot94, true, !dbg !9889
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !9889
  %conv98 = sext i32 %lnot.ext97 to i64, !dbg !9889
  %tobool99 = icmp ne i64 %conv98, 0, !dbg !9889
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !9891

if.then100:                                       ; preds = %sw.epilog
  %53 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9892
  call void @ata_verify_xfer(%struct.ata_queued_cmd* %53) #12, !dbg !9893
  br label %if.end101, !dbg !9893

if.end101:                                        ; preds = %if.then100, %sw.epilog
  %54 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9894
  call void @__ata_qc_complete(%struct.ata_queued_cmd* %54) #12, !dbg !9895
  br label %if.end114, !dbg !9896

if.else:                                          ; preds = %entry
  %55 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9897
  %flags102 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %55, i32 0, i32 6, !dbg !9900
  %56 = load i64, i64* %flags102, align 8, !dbg !9900
  %and103 = and i64 %56, 262144, !dbg !9901
  %tobool104 = icmp ne i64 %and103, 0, !dbg !9901
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !9902

if.then105:                                       ; preds = %if.else
  br label %if.end114, !dbg !9903

if.end106:                                        ; preds = %if.else
  %57 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9904
  %err_mask107 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %57, i32 0, i32 20, !dbg !9906
  %58 = load i32, i32* %err_mask107, align 4, !dbg !9906
  %tobool108 = icmp ne i32 %58, 0, !dbg !9904
  br i1 %tobool108, label %if.then112, label %lor.lhs.false, !dbg !9907

lor.lhs.false:                                    ; preds = %if.end106
  %59 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9908
  %flags109 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %59, i32 0, i32 6, !dbg !9909
  %60 = load i64, i64* %flags109, align 8, !dbg !9909
  %and110 = and i64 %60, 16, !dbg !9910
  %tobool111 = icmp ne i64 %and110, 0, !dbg !9910
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !9911

if.then112:                                       ; preds = %lor.lhs.false, %if.end106
  %61 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9912
  call void @fill_result_tf(%struct.ata_queued_cmd* %61) #12, !dbg !9913
  br label %if.end113, !dbg !9913

if.end113:                                        ; preds = %if.then112, %lor.lhs.false
  %62 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9914
  call void @__ata_qc_complete(%struct.ata_queued_cmd* %62) #12, !dbg !9915
  br label %if.end114

if.end114:                                        ; preds = %if.then17, %if.then28, %if.then105, %if.end113, %if.end101
  ret void, !dbg !9916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_qc_free(%struct.ata_queued_cmd* %qc) #0 !dbg !9917 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %tag = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9918, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9920, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !9922, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9924, metadata !DIExpression()), !dbg !9926
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9926
  %cmp = icmp eq %struct.ata_queued_cmd* %0, null, !dbg !9926
  %lnot = xor i1 %cmp, true, !dbg !9926
  %lnot1 = xor i1 %lnot, true, !dbg !9926
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9926
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9926
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !9927
  %tobool = icmp ne i32 %1, 0, !dbg !9927
  %lnot2 = xor i1 %tobool, true, !dbg !9927
  %lnot4 = xor i1 %lnot2, true, !dbg !9927
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !9927
  %conv = sext i32 %lnot.ext5 to i64, !dbg !9927
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9927
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9926

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9927

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !9929

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !9931

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !9929

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4543, i32 2307, i64 12) #7, !dbg !9933, !srcloc !9935
  br label %do.end9, !dbg !9933

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 353) #7, !dbg !9936, !srcloc !9938
  br label %do.body10, !dbg !9929

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !9939

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !9929

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !9929

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !9926
  %tobool13 = icmp ne i32 %2, 0, !dbg !9926
  %lnot14 = xor i1 %tobool13, true, !dbg !9926
  %lnot16 = xor i1 %lnot14, true, !dbg !9926
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9926
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9926
  store i64 %conv18, i64* %tmp, align 8, !dbg !9927
  %3 = load i64, i64* %tmp, align 8, !dbg !9926
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9941
  %ap19 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 0, !dbg !9942
  %5 = load %struct.ata_port*, %struct.ata_port** %ap19, align 8, !dbg !9942
  store %struct.ata_port* %5, %struct.ata_port** %ap, align 8, !dbg !9943
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9944
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 6, !dbg !9945
  store i64 0, i64* %flags, align 8, !dbg !9946
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9947
  %tag20 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 7, !dbg !9948
  %8 = load i32, i32* %tag20, align 8, !dbg !9948
  store i32 %8, i32* %tag, align 4, !dbg !9949
  %9 = load i32, i32* %tag, align 4, !dbg !9950
  %call = call zeroext i1 @ata_tag_valid(i32 %9) #12, !dbg !9952
  br i1 %call, label %if.then21, label %if.end27, !dbg !9953

if.then21:                                        ; preds = %if.end
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9954
  %tag22 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 7, !dbg !9956
  store i32 -84148995, i32* %tag22, align 8, !dbg !9957
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9958
  %flags23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 3, !dbg !9960
  %12 = load i64, i64* %flags23, align 8, !dbg !9960
  %and = and i64 %12, 16777216, !dbg !9961
  %tobool24 = icmp ne i64 %and, 0, !dbg !9961
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !9962

if.then25:                                        ; preds = %if.then21
  %13 = load i32, i32* %tag, align 4, !dbg !9963
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9964
  call void @ata_sas_free_tag(i32 %13, %struct.ata_port* %14) #12, !dbg !9965
  br label %if.end26, !dbg !9965

if.end26:                                         ; preds = %if.then25, %if.then21
  br label %if.end27, !dbg !9966

if.end27:                                         ; preds = %if.end26, %if.end
  ret void, !dbg !9967
}

; Function Attrs: noredzone
declare dso_local void @ata_internal_cmd_timed_out(%struct.ata_device*, i8 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_exec_internal(%struct.ata_device* %dev, %struct.ata_taskfile* %tf, i8* %cdb, i32 %dma_dir, i8* %buf, i32 %buflen, i64 %timeout) #0 !dbg !9968 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %cdb.addr = alloca i8*, align 8
  %dma_dir.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  %timeout.addr = alloca i64, align 8
  %psg = alloca %struct.scatterlist*, align 8
  %sg = alloca %struct.scatterlist, align 8
  %n_elem = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  store i8* %cdb, i8** %cdb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdb.addr, metadata !9975, metadata !DIExpression()), !dbg !9976
  store i32 %dma_dir, i32* %dma_dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dma_dir.addr, metadata !9977, metadata !DIExpression()), !dbg !9978
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9979, metadata !DIExpression()), !dbg !9980
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !9981, metadata !DIExpression()), !dbg !9982
  store i64 %timeout, i64* %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout.addr, metadata !9983, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %psg, metadata !9985, metadata !DIExpression()), !dbg !9986
  store %struct.scatterlist* null, %struct.scatterlist** %psg, align 8, !dbg !9986
  call void @llvm.dbg.declare(metadata %struct.scatterlist* %sg, metadata !9987, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.declare(metadata i32* %n_elem, metadata !9989, metadata !DIExpression()), !dbg !9990
  store i32 0, i32* %n_elem, align 4, !dbg !9990
  %0 = load i32, i32* %dma_dir.addr, align 4, !dbg !9991
  %cmp = icmp ne i32 %0, 3, !dbg !9993
  br i1 %cmp, label %if.then, label %if.end22, !dbg !9994

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9995, metadata !DIExpression()), !dbg !9998
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !9998
  %tobool = icmp ne i8* %1, null, !dbg !9998
  %lnot = xor i1 %tobool, true, !dbg !9998
  %lnot1 = xor i1 %lnot, true, !dbg !9998
  %lnot2 = xor i1 %lnot1, true, !dbg !9998
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9998
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9998
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !9999
  %tobool3 = icmp ne i32 %2, 0, !dbg !9999
  %lnot4 = xor i1 %tobool3, true, !dbg !9999
  %lnot6 = xor i1 %lnot4, true, !dbg !9999
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !9999
  %conv = sext i32 %lnot.ext7 to i64, !dbg !9999
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9999
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !9998

if.then9:                                         ; preds = %if.then
  br label %do.body, !dbg !9999

do.body:                                          ; preds = %if.then9
  br label %do.body10, !dbg !10001

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !10003

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !10001

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1676, i32 2305, i64 12) #7, !dbg !10005, !srcloc !10007
  br label %do.end12, !dbg !10005

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 341) #7, !dbg !10008, !srcloc !10010
  br label %do.body13, !dbg !10001

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !10011

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !10001

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !10001

if.end:                                           ; preds = %do.end15, %if.then
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9998
  %tobool16 = icmp ne i32 %3, 0, !dbg !9998
  %lnot17 = xor i1 %tobool16, true, !dbg !9998
  %lnot19 = xor i1 %lnot17, true, !dbg !9998
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !9998
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !9998
  store i64 %conv21, i64* %tmp, align 8, !dbg !9999
  %4 = load i64, i64* %tmp, align 8, !dbg !9998
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10013
  %6 = load i32, i32* %buflen.addr, align 4, !dbg !10014
  call void @sg_init_one(%struct.scatterlist* %sg, i8* %5, i32 %6) #12, !dbg !10015
  store %struct.scatterlist* %sg, %struct.scatterlist** %psg, align 8, !dbg !10016
  %7 = load i32, i32* %n_elem, align 4, !dbg !10017
  %inc = add i32 %7, 1, !dbg !10017
  store i32 %inc, i32* %n_elem, align 4, !dbg !10017
  br label %if.end22, !dbg !10018

if.end22:                                         ; preds = %if.end, %entry
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10019
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !10020
  %10 = load i8*, i8** %cdb.addr, align 8, !dbg !10021
  %11 = load i32, i32* %dma_dir.addr, align 4, !dbg !10022
  %12 = load %struct.scatterlist*, %struct.scatterlist** %psg, align 8, !dbg !10023
  %13 = load i32, i32* %n_elem, align 4, !dbg !10024
  %14 = load i64, i64* %timeout.addr, align 8, !dbg !10025
  %call = call i32 @ata_exec_internal_sg(%struct.ata_device* %8, %struct.ata_taskfile* %9, i8* %10, i32 %11, %struct.scatterlist* %12, i32 %13, i64 %14) #12, !dbg !10026
  ret i32 %call, !dbg !10027
}

; Function Attrs: noredzone
declare dso_local void @sg_init_one(%struct.scatterlist*, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pio_need_iordy(%struct.ata_device* %adev) #0 !dbg !10028 {
entry:
  %retval = alloca i32, align 4
  %adev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %adev, %struct.ata_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %adev.addr, metadata !10029, metadata !DIExpression()), !dbg !10030
  %0 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !10031
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !10033
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !10033
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !10034
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !10034
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 4, !dbg !10035
  %3 = load i32, i32* %pflags, align 32, !dbg !10035
  %and = and i32 %3, 256, !dbg !10036
  %tobool = icmp ne i32 %and, 0, !dbg !10036
  br i1 %tobool, label %if.then, label %if.end, !dbg !10037

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10038
  br label %return, !dbg !10038

if.end:                                           ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !10039
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 0, !dbg !10041
  %5 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !10041
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 0, !dbg !10042
  %6 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !10042
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 3, !dbg !10043
  %7 = load i64, i64* %flags, align 8, !dbg !10043
  %and3 = and i64 %7, 65536, !dbg !10044
  %tobool4 = icmp ne i64 %and3, 0, !dbg !10044
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10045

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10046
  br label %return, !dbg !10046

if.end6:                                          ; preds = %if.end
  %8 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !10047
  %9 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 27, !dbg !10049
  %id = bitcast %union.anon.83* %9 to [256 x i16]*, !dbg !10049
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !10047
  %call = call zeroext i1 @ata_id_is_cfa(i16* %arraydecay) #12, !dbg !10050
  br i1 %call, label %land.lhs.true, label %if.end13, !dbg !10051

land.lhs.true:                                    ; preds = %if.end6
  %10 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !10052
  %pio_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 13, !dbg !10053
  %11 = load i8, i8* %pio_mode, align 16, !dbg !10053
  %conv = zext i8 %11 to i32, !dbg !10052
  %cmp = icmp eq i32 %conv, 13, !dbg !10054
  br i1 %cmp, label %if.then12, label %lor.lhs.false, !dbg !10055

lor.lhs.false:                                    ; preds = %land.lhs.true
  %12 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !10056
  %pio_mode8 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 13, !dbg !10057
  %13 = load i8, i8* %pio_mode8, align 16, !dbg !10057
  %conv9 = zext i8 %13 to i32, !dbg !10056
  %cmp10 = icmp eq i32 %conv9, 14, !dbg !10058
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10059

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !10060
  br label %return, !dbg !10060

if.end13:                                         ; preds = %lor.lhs.false, %if.end6
  %14 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !10061
  %pio_mode14 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 13, !dbg !10063
  %15 = load i8, i8* %pio_mode14, align 16, !dbg !10063
  %conv15 = zext i8 %15 to i32, !dbg !10061
  %cmp16 = icmp sgt i32 %conv15, 10, !dbg !10064
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !10065

if.then18:                                        ; preds = %if.end13
  store i32 1, i32* %retval, align 4, !dbg !10066
  br label %return, !dbg !10066

if.end19:                                         ; preds = %if.end13
  %16 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !10067
  %17 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 27, !dbg !10067
  %id20 = bitcast %union.anon.83* %17 to [256 x i16]*, !dbg !10067
  %arrayidx = getelementptr [256 x i16], [256 x i16]* %id20, i64 0, i64 49, !dbg !10067
  %18 = load i16, i16* %arrayidx, align 2, !dbg !10067
  %conv21 = zext i16 %18 to i32, !dbg !10067
  %and22 = and i32 %conv21, 2048, !dbg !10067
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10067
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !10069

if.then24:                                        ; preds = %if.end19
  store i32 1, i32* %retval, align 4, !dbg !10070
  br label %return, !dbg !10070

if.end25:                                         ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !10071
  br label %return, !dbg !10071

return:                                           ; preds = %if.end25, %if.then24, %if.then18, %if.then12, %if.then5, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !10072
  ret i32 %19, !dbg !10072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_do_dev_read_id(%struct.ata_device* %dev, %struct.ata_taskfile* %tf, i16* %id) #0 !dbg !10073 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %id.addr = alloca i16*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10080
  %1 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !10081
  %2 = load i16*, i16** %id.addr, align 8, !dbg !10082
  %3 = bitcast i16* %2 to i8*, !dbg !10082
  %call = call i32 @ata_exec_internal(%struct.ata_device* %0, %struct.ata_taskfile* %1, i8* null, i32 2, i8* %3, i32 512, i64 0) #12, !dbg !10083
  ret i32 %call, !dbg !10084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_dev_read_id(%struct.ata_device* %dev, i32* %p_class, i32 %flags, i16* %id) #0 !dbg !10085 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %p_class.addr = alloca i32*, align 8
  %flags.addr = alloca i32, align 4
  %id.addr = alloca i16*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %class = alloca i32, align 4
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  %reason = alloca i8*, align 8
  %is_semb = alloca i8, align 1
  %may_fallback = alloca i32, align 4
  %tried_spinup = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  store i32* %p_class, i32** %p_class.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_class.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10096, metadata !DIExpression()), !dbg !10097
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10098
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !10099
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !10099
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !10100
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !10100
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !10097
  call void @llvm.dbg.declare(metadata i32* %class, metadata !10101, metadata !DIExpression()), !dbg !10102
  %3 = load i32*, i32** %p_class.addr, align 8, !dbg !10103
  %4 = load i32, i32* %3, align 4, !dbg !10104
  store i32 %4, i32* %class, align 4, !dbg !10102
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !10105, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !10107, metadata !DIExpression()), !dbg !10108
  store i32 0, i32* %err_mask, align 4, !dbg !10108
  call void @llvm.dbg.declare(metadata i8** %reason, metadata !10109, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.declare(metadata i8* %is_semb, metadata !10111, metadata !DIExpression()), !dbg !10112
  %5 = load i32, i32* %class, align 4, !dbg !10113
  %cmp = icmp eq i32 %5, 7, !dbg !10114
  %frombool = zext i1 %cmp to i8, !dbg !10112
  store i8 %frombool, i8* %is_semb, align 1, !dbg !10112
  call void @llvm.dbg.declare(metadata i32* %may_fallback, metadata !10115, metadata !DIExpression()), !dbg !10116
  store i32 1, i32* %may_fallback, align 4, !dbg !10116
  call void @llvm.dbg.declare(metadata i32* %tried_spinup, metadata !10117, metadata !DIExpression()), !dbg !10118
  store i32 0, i32* %tried_spinup, align 4, !dbg !10118
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10119, metadata !DIExpression()), !dbg !10120
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10121
  %msg_enable = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 38, !dbg !10121
  %7 = load i32, i32* %msg_enable, align 4, !dbg !10121
  %and = and i32 %7, 32, !dbg !10121
  %tobool = icmp ne i32 %and, 0, !dbg !10121
  br i1 %tobool, label %if.then, label %if.end, !dbg !10123

if.then:                                          ; preds = %entry
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10124
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ata_dev_read_id, i64 0, i64 0)) #12, !dbg !10124
  br label %if.end, !dbg !10124

if.end:                                           ; preds = %if.then, %entry
  br label %retry, !dbg !10121

retry:                                            ; preds = %if.end125, %if.then99, %if.end33, %if.end
  call void @llvm.dbg.label(metadata !10125), !dbg !10126
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10127
  call void @ata_tf_init(%struct.ata_device* %9, %struct.ata_taskfile* %tf) #12, !dbg !10128
  %10 = load i32, i32* %class, align 4, !dbg !10129
  switch i32 %10, label %sw.default [
    i32 7, label %sw.bb
    i32 1, label %sw.bb2
    i32 9, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !10130

sw.bb:                                            ; preds = %retry
  store i32 1, i32* %class, align 4, !dbg !10131
  br label %sw.bb2, !dbg !10133

sw.bb2:                                           ; preds = %retry, %retry, %sw.bb
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !10134
  store i8 -20, i8* %command, align 1, !dbg !10135
  br label %sw.epilog, !dbg !10136

sw.bb3:                                           ; preds = %retry
  %command4 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !10137
  store i8 -95, i8* %command4, align 1, !dbg !10138
  br label %sw.epilog, !dbg !10139

sw.default:                                       ; preds = %retry
  store i32 -19, i32* %rc, align 4, !dbg !10140
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8** %reason, align 8, !dbg !10141
  br label %err_out, !dbg !10142

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10143
  store i8 1, i8* %protocol, align 8, !dbg !10144
  %flags5 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !10145
  %11 = load i64, i64* %flags5, align 8, !dbg !10146
  %or = or i64 %11, 6, !dbg !10146
  store i64 %or, i64* %flags5, align 8, !dbg !10146
  %flags6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !10147
  %12 = load i64, i64* %flags6, align 8, !dbg !10148
  %or7 = or i64 %12, 64, !dbg !10148
  store i64 %or7, i64* %flags6, align 8, !dbg !10148
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10149
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 1, !dbg !10151
  %14 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !10151
  %read_id = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %14, i32 0, i32 10, !dbg !10152
  %15 = load i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)*, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)** %read_id, align 8, !dbg !10152
  %tobool8 = icmp ne i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* %15, null, !dbg !10149
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !10153

if.then9:                                         ; preds = %sw.epilog
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10154
  %ops10 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 1, !dbg !10155
  %17 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops10, align 8, !dbg !10155
  %read_id11 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %17, i32 0, i32 10, !dbg !10156
  %18 = load i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)*, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)** %read_id11, align 8, !dbg !10156
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10157
  %20 = load i16*, i16** %id.addr, align 8, !dbg !10158
  %call = call i32 %18(%struct.ata_device* %19, %struct.ata_taskfile* %tf, i16* %20) #12, !dbg !10154
  store i32 %call, i32* %err_mask, align 4, !dbg !10159
  br label %if.end13, !dbg !10160

if.else:                                          ; preds = %sw.epilog
  %21 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10161
  %22 = load i16*, i16** %id.addr, align 8, !dbg !10162
  %call12 = call i32 @ata_do_dev_read_id(%struct.ata_device* %21, %struct.ata_taskfile* %tf, i16* %22) #12, !dbg !10163
  store i32 %call12, i32* %err_mask, align 4, !dbg !10164
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then9
  %23 = load i32, i32* %err_mask, align 4, !dbg !10165
  %tobool14 = icmp ne i32 %23, 0, !dbg !10165
  br i1 %tobool14, label %if.then15, label %if.end36, !dbg !10167

if.then15:                                        ; preds = %if.end13
  %24 = load i32, i32* %err_mask, align 4, !dbg !10168
  %and16 = and i32 %24, 512, !dbg !10171
  %tobool17 = icmp ne i32 %and16, 0, !dbg !10171
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !10172

if.then18:                                        ; preds = %if.then15
  %25 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10173
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0)) #12, !dbg !10173
  store i32 -2, i32* %retval, align 4, !dbg !10175
  br label %return, !dbg !10175

if.end19:                                         ; preds = %if.then15
  %26 = load i8, i8* %is_semb, align 1, !dbg !10176
  %tobool20 = trunc i8 %26 to i1, !dbg !10176
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10178

if.then21:                                        ; preds = %if.end19
  %27 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10179
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0)) #12, !dbg !10179
  %28 = load i32*, i32** %p_class.addr, align 8, !dbg !10181
  store i32 8, i32* %28, align 4, !dbg !10182
  store i32 0, i32* %retval, align 4, !dbg !10183
  br label %return, !dbg !10183

if.end22:                                         ; preds = %if.end19
  %29 = load i32, i32* %err_mask, align 4, !dbg !10184
  %cmp23 = icmp eq i32 %29, 1, !dbg !10186
  br i1 %cmp23, label %land.lhs.true, label %if.end35, !dbg !10187

land.lhs.true:                                    ; preds = %if.end22
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !10188
  %30 = load i8, i8* %feature, align 1, !dbg !10188
  %conv = zext i8 %30 to i32, !dbg !10189
  %and24 = and i32 %conv, 4, !dbg !10190
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10190
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !10191

if.then26:                                        ; preds = %land.lhs.true
  %31 = load i32, i32* %may_fallback, align 4, !dbg !10192
  %tobool27 = icmp ne i32 %31, 0, !dbg !10192
  br i1 %tobool27, label %if.then28, label %if.end34, !dbg !10195

if.then28:                                        ; preds = %if.then26
  store i32 0, i32* %may_fallback, align 4, !dbg !10196
  %32 = load i32, i32* %class, align 4, !dbg !10198
  %cmp29 = icmp eq i32 %32, 1, !dbg !10200
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !10201

if.then31:                                        ; preds = %if.then28
  store i32 3, i32* %class, align 4, !dbg !10202
  br label %if.end33, !dbg !10203

if.else32:                                        ; preds = %if.then28
  store i32 1, i32* %class, align 4, !dbg !10204
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then31
  br label %retry, !dbg !10205

if.end34:                                         ; preds = %if.then26
  %33 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10206
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i64 0, i64 0)) #12, !dbg !10206
  store i32 -2, i32* %retval, align 4, !dbg !10207
  br label %return, !dbg !10207

if.end35:                                         ; preds = %land.lhs.true, %if.end22
  store i32 -5, i32* %rc, align 4, !dbg !10208
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), i8** %reason, align 8, !dbg !10209
  br label %err_out, !dbg !10210

if.end36:                                         ; preds = %if.end13
  %34 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10211
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 2, !dbg !10213
  %35 = load i32, i32* %horkage, align 4, !dbg !10213
  %and37 = and i32 %35, 65536, !dbg !10214
  %tobool38 = icmp ne i32 %and37, 0, !dbg !10214
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !10215

if.then39:                                        ; preds = %if.end36
  %36 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10216
  %37 = load i32, i32* %class, align 4, !dbg !10216
  %38 = load i32, i32* %may_fallback, align 4, !dbg !10216
  %39 = load i32, i32* %tried_spinup, align 4, !dbg !10216
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.39, i64 0, i64 0), i32 %37, i32 %38, i32 %39) #12, !dbg !10216
  %40 = load i16*, i16** %id.addr, align 8, !dbg !10218
  %41 = bitcast i16* %40 to i8*, !dbg !10218
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i32 2, i32 16, i32 2, i8* %41, i64 512, i1 zeroext true) #12, !dbg !10219
  br label %if.end40, !dbg !10220

if.end40:                                         ; preds = %if.then39, %if.end36
  store i32 0, i32* %may_fallback, align 4, !dbg !10221
  %42 = load i16*, i16** %id.addr, align 8, !dbg !10222
  call void @swap_buf_le16(i16* %42, i32 256) #12, !dbg !10223
  store i32 -22, i32* %rc, align 4, !dbg !10224
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.41, i64 0, i64 0), i8** %reason, align 8, !dbg !10225
  %43 = load i32, i32* %class, align 4, !dbg !10226
  %cmp41 = icmp eq i32 %43, 1, !dbg !10228
  br i1 %cmp41, label %if.then45, label %lor.lhs.false, !dbg !10229

lor.lhs.false:                                    ; preds = %if.end40
  %44 = load i32, i32* %class, align 4, !dbg !10230
  %cmp43 = icmp eq i32 %44, 9, !dbg !10231
  br i1 %cmp43, label %if.then45, label %if.else65, !dbg !10232

if.then45:                                        ; preds = %lor.lhs.false, %if.end40
  %45 = load i16*, i16** %id.addr, align 8, !dbg !10233
  %arrayidx = getelementptr i16, i16* %45, i64 0, !dbg !10233
  %46 = load i16, i16* %arrayidx, align 2, !dbg !10233
  %conv46 = zext i16 %46 to i32, !dbg !10233
  %and47 = and i32 %conv46, 32768, !dbg !10233
  %cmp48 = icmp eq i32 %and47, 0, !dbg !10233
  br i1 %cmp48, label %if.end53, label %land.lhs.true50, !dbg !10236

land.lhs.true50:                                  ; preds = %if.then45
  %47 = load i16*, i16** %id.addr, align 8, !dbg !10237
  %call51 = call zeroext i1 @ata_id_is_cfa(i16* %47) #12, !dbg !10238
  br i1 %call51, label %if.end53, label %if.then52, !dbg !10239

if.then52:                                        ; preds = %land.lhs.true50
  br label %err_out, !dbg !10240

if.end53:                                         ; preds = %land.lhs.true50, %if.then45
  %48 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10241
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %48, i32 0, i32 31, !dbg !10243
  %49 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10243
  %flags54 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %49, i32 0, i32 7, !dbg !10244
  %50 = load i64, i64* %flags54, align 8, !dbg !10244
  %and55 = and i64 %50, 8, !dbg !10245
  %tobool56 = icmp ne i64 %and55, 0, !dbg !10245
  br i1 %tobool56, label %land.lhs.true57, label %if.end64, !dbg !10246

land.lhs.true57:                                  ; preds = %if.end53
  %51 = load i16*, i16** %id.addr, align 8, !dbg !10247
  %arrayidx58 = getelementptr i16, i16* %51, i64 0, !dbg !10247
  %52 = load i16, i16* %arrayidx58, align 2, !dbg !10247
  %conv59 = zext i16 %52 to i32, !dbg !10247
  %and60 = and i32 %conv59, 32768, !dbg !10247
  %cmp61 = icmp eq i32 %and60, 0, !dbg !10247
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !10248

if.then63:                                        ; preds = %land.lhs.true57
  %53 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10249
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !10249
  store i32 -2, i32* %retval, align 4, !dbg !10251
  br label %return, !dbg !10251

if.end64:                                         ; preds = %land.lhs.true57, %if.end53
  br label %if.end73, !dbg !10252

if.else65:                                        ; preds = %lor.lhs.false
  %54 = load i16*, i16** %id.addr, align 8, !dbg !10253
  %arrayidx66 = getelementptr i16, i16* %54, i64 0, !dbg !10253
  %55 = load i16, i16* %arrayidx66, align 2, !dbg !10253
  %conv67 = zext i16 %55 to i32, !dbg !10253
  %and68 = and i32 %conv67, 32768, !dbg !10253
  %cmp69 = icmp eq i32 %and68, 0, !dbg !10253
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !10256

if.then71:                                        ; preds = %if.else65
  br label %err_out, !dbg !10257

if.end72:                                         ; preds = %if.else65
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end64
  %56 = load i32, i32* %tried_spinup, align 4, !dbg !10258
  %tobool74 = icmp ne i32 %56, 0, !dbg !10258
  br i1 %tobool74, label %if.end101, label %land.lhs.true75, !dbg !10260

land.lhs.true75:                                  ; preds = %if.end73
  %57 = load i16*, i16** %id.addr, align 8, !dbg !10261
  %arrayidx76 = getelementptr i16, i16* %57, i64 2, !dbg !10261
  %58 = load i16, i16* %arrayidx76, align 2, !dbg !10261
  %conv77 = zext i16 %58 to i32, !dbg !10261
  %cmp78 = icmp eq i32 %conv77, 14280, !dbg !10262
  br i1 %cmp78, label %if.then85, label %lor.lhs.false80, !dbg !10263

lor.lhs.false80:                                  ; preds = %land.lhs.true75
  %59 = load i16*, i16** %id.addr, align 8, !dbg !10264
  %arrayidx81 = getelementptr i16, i16* %59, i64 2, !dbg !10264
  %60 = load i16, i16* %arrayidx81, align 2, !dbg !10264
  %conv82 = zext i16 %60 to i32, !dbg !10264
  %cmp83 = icmp eq i32 %conv82, 29580, !dbg !10265
  br i1 %cmp83, label %if.then85, label %if.end101, !dbg !10266

if.then85:                                        ; preds = %lor.lhs.false80, %land.lhs.true75
  store i32 1, i32* %tried_spinup, align 4, !dbg !10267
  %61 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10269
  %call86 = call i32 @ata_dev_set_feature(%struct.ata_device* %61, i8 zeroext 7, i8 zeroext 0) #12, !dbg !10270
  store i32 %call86, i32* %err_mask, align 4, !dbg !10271
  %62 = load i32, i32* %err_mask, align 4, !dbg !10272
  %tobool87 = icmp ne i32 %62, 0, !dbg !10272
  br i1 %tobool87, label %land.lhs.true88, label %if.end94, !dbg !10274

land.lhs.true88:                                  ; preds = %if.then85
  %63 = load i16*, i16** %id.addr, align 8, !dbg !10275
  %arrayidx89 = getelementptr i16, i16* %63, i64 2, !dbg !10275
  %64 = load i16, i16* %arrayidx89, align 2, !dbg !10275
  %conv90 = zext i16 %64 to i32, !dbg !10275
  %cmp91 = icmp ne i32 %conv90, 29580, !dbg !10276
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !10277

if.then93:                                        ; preds = %land.lhs.true88
  store i32 -5, i32* %rc, align 4, !dbg !10278
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0), i8** %reason, align 8, !dbg !10280
  br label %err_out, !dbg !10281

if.end94:                                         ; preds = %land.lhs.true88, %if.then85
  %65 = load i16*, i16** %id.addr, align 8, !dbg !10282
  %arrayidx95 = getelementptr i16, i16* %65, i64 2, !dbg !10282
  %66 = load i16, i16* %arrayidx95, align 2, !dbg !10282
  %conv96 = zext i16 %66 to i32, !dbg !10282
  %cmp97 = icmp eq i32 %conv96, 14280, !dbg !10284
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !10285

if.then99:                                        ; preds = %if.end94
  br label %retry, !dbg !10286

if.end100:                                        ; preds = %if.end94
  br label %if.end101, !dbg !10287

if.end101:                                        ; preds = %if.end100, %lor.lhs.false80, %if.end73
  %67 = load i32, i32* %flags.addr, align 4, !dbg !10288
  %and102 = and i32 %67, 1, !dbg !10290
  %tobool103 = icmp ne i32 %and102, 0, !dbg !10290
  br i1 %tobool103, label %land.lhs.true104, label %if.end128, !dbg !10291

land.lhs.true104:                                 ; preds = %if.end101
  %68 = load i32, i32* %class, align 4, !dbg !10292
  %cmp105 = icmp eq i32 %68, 1, !dbg !10293
  br i1 %cmp105, label %if.then110, label %lor.lhs.false107, !dbg !10294

lor.lhs.false107:                                 ; preds = %land.lhs.true104
  %69 = load i32, i32* %class, align 4, !dbg !10295
  %cmp108 = icmp eq i32 %69, 9, !dbg !10296
  br i1 %cmp108, label %if.then110, label %if.end128, !dbg !10297

if.then110:                                       ; preds = %lor.lhs.false107, %land.lhs.true104
  %70 = load i16*, i16** %id.addr, align 8, !dbg !10298
  %call111 = call i32 @ata_id_major_version(i16* %70) #12, !dbg !10301
  %cmp112 = icmp ult i32 %call111, 4, !dbg !10302
  br i1 %cmp112, label %if.then119, label %lor.lhs.false114, !dbg !10303

lor.lhs.false114:                                 ; preds = %if.then110
  %71 = load i16*, i16** %id.addr, align 8, !dbg !10304
  %arrayidx115 = getelementptr i16, i16* %71, i64 49, !dbg !10304
  %72 = load i16, i16* %arrayidx115, align 2, !dbg !10304
  %conv116 = zext i16 %72 to i32, !dbg !10304
  %and117 = and i32 %conv116, 512, !dbg !10304
  %tobool118 = icmp ne i32 %and117, 0, !dbg !10304
  br i1 %tobool118, label %if.end127, label %if.then119, !dbg !10305

if.then119:                                       ; preds = %lor.lhs.false114, %if.then110
  %73 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10306
  %74 = load i16*, i16** %id.addr, align 8, !dbg !10308
  %arrayidx120 = getelementptr i16, i16* %74, i64 3, !dbg !10308
  %75 = load i16, i16* %arrayidx120, align 2, !dbg !10308
  %76 = load i16*, i16** %id.addr, align 8, !dbg !10309
  %arrayidx121 = getelementptr i16, i16* %76, i64 6, !dbg !10309
  %77 = load i16, i16* %arrayidx121, align 2, !dbg !10309
  %call122 = call i32 @ata_dev_init_params(%struct.ata_device* %73, i16 zeroext %75, i16 zeroext %77) #12, !dbg !10310
  store i32 %call122, i32* %err_mask, align 4, !dbg !10311
  %78 = load i32, i32* %err_mask, align 4, !dbg !10312
  %tobool123 = icmp ne i32 %78, 0, !dbg !10312
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !10314

if.then124:                                       ; preds = %if.then119
  store i32 -5, i32* %rc, align 4, !dbg !10315
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i64 0, i64 0), i8** %reason, align 8, !dbg !10317
  br label %err_out, !dbg !10318

if.end125:                                        ; preds = %if.then119
  %79 = load i32, i32* %flags.addr, align 4, !dbg !10319
  %and126 = and i32 %79, -2, !dbg !10319
  store i32 %and126, i32* %flags.addr, align 4, !dbg !10319
  br label %retry, !dbg !10320

if.end127:                                        ; preds = %lor.lhs.false114
  br label %if.end128, !dbg !10321

if.end128:                                        ; preds = %if.end127, %lor.lhs.false107, %if.end101
  %80 = load i32, i32* %class, align 4, !dbg !10322
  %81 = load i32*, i32** %p_class.addr, align 8, !dbg !10323
  store i32 %80, i32* %81, align 4, !dbg !10324
  store i32 0, i32* %retval, align 4, !dbg !10325
  br label %return, !dbg !10325

err_out:                                          ; preds = %if.then124, %if.then93, %if.then71, %if.then52, %if.end35, %sw.default
  call void @llvm.dbg.label(metadata !10326), !dbg !10327
  %82 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10328
  %msg_enable129 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %82, i32 0, i32 38, !dbg !10328
  %83 = load i32, i32* %msg_enable129, align 4, !dbg !10328
  %and130 = and i32 %83, 8, !dbg !10328
  %tobool131 = icmp ne i32 %and130, 0, !dbg !10328
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !10330

if.then132:                                       ; preds = %err_out
  %84 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10331
  %85 = load i8*, i8** %reason, align 8, !dbg !10331
  %86 = load i32, i32* %err_mask, align 4, !dbg !10331
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.45, i64 0, i64 0), i8* %85, i32 %86) #12, !dbg !10331
  br label %if.end133, !dbg !10331

if.end133:                                        ; preds = %if.then132, %err_out
  %87 = load i32, i32* %rc, align 4, !dbg !10332
  store i32 %87, i32* %retval, align 4, !dbg !10333
  br label %return, !dbg !10333

return:                                           ; preds = %if.end133, %if.end128, %if.then63, %if.end34, %if.then21, %if.then18
  %88 = load i32, i32* %retval, align 4, !dbg !10334
  ret i32 %88, !dbg !10334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_tf_init(%struct.ata_device* %dev, %struct.ata_taskfile* %tf) #0 !dbg !10335 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10338, metadata !DIExpression()), !dbg !10339
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !10340, metadata !DIExpression()), !dbg !10341
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !10342
  %1 = bitcast %struct.ata_taskfile* %0 to i8*, !dbg !10343
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !10343
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10344
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 0, !dbg !10345
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !10345
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !10346
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !10346
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 9, !dbg !10347
  %5 = load i8, i8* %ctl, align 8, !dbg !10347
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !10348
  %ctl1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 2, !dbg !10349
  store i8 %5, i8* %ctl1, align 1, !dbg !10350
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10351
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 1, !dbg !10353
  %8 = load i32, i32* %devno, align 8, !dbg !10353
  %cmp = icmp eq i32 %8, 0, !dbg !10354
  br i1 %cmp, label %if.then, label %if.else, !dbg !10355

if.then:                                          ; preds = %entry
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !10356
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 13, !dbg !10357
  store i8 -96, i8* %device, align 4, !dbg !10358
  br label %if.end, !dbg !10356

if.else:                                          ; preds = %entry
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !10359
  %device2 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 13, !dbg !10360
  store i8 -80, i8* %device2, align 4, !dbg !10361
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10362
}

; Function Attrs: noredzone
declare dso_local void @print_hex_dump(i8*, i8*, i32, i32, i32, i8*, i64, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @swap_buf_le16(i16* %buf, i32 %buf_words) #0 !dbg !10363 {
entry:
  %buf.addr = alloca i16*, align 8
  %buf_words.addr = alloca i32, align 4
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  store i32 %buf_words, i32* %buf_words.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_words.addr, metadata !10368, metadata !DIExpression()), !dbg !10369
  ret void, !dbg !10370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_dev_set_feature(%struct.ata_device* %dev, i8 zeroext %enable, i8 zeroext %feature) #0 !dbg !10371 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %enable.addr = alloca i8, align 1
  %feature.addr = alloca i8, align 1
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  %timeout = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10374, metadata !DIExpression()), !dbg !10375
  store i8 %enable, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !10376, metadata !DIExpression()), !dbg !10377
  store i8 %feature, i8* %feature.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %feature.addr, metadata !10378, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !10380, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !10382, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !10384, metadata !DIExpression()), !dbg !10385
  store i64 0, i64* %timeout, align 8, !dbg !10385
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10386
  call void @ata_tf_init(%struct.ata_device* %0, %struct.ata_taskfile* %tf) #12, !dbg !10387
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !10388
  store i8 -17, i8* %command, align 1, !dbg !10389
  %1 = load i8, i8* %enable.addr, align 1, !dbg !10390
  %feature1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !10391
  store i8 %1, i8* %feature1, align 1, !dbg !10392
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !10393
  %2 = load i64, i64* %flags, align 8, !dbg !10394
  %or = or i64 %2, 6, !dbg !10394
  store i64 %or, i64* %flags, align 8, !dbg !10394
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10395
  store i8 0, i8* %protocol, align 8, !dbg !10396
  %3 = load i8, i8* %feature.addr, align 1, !dbg !10397
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 9, !dbg !10398
  store i8 %3, i8* %nsect, align 8, !dbg !10399
  %4 = load i8, i8* %enable.addr, align 1, !dbg !10400
  %conv = zext i8 %4 to i32, !dbg !10400
  %cmp = icmp eq i32 %conv, 7, !dbg !10402
  br i1 %cmp, label %if.then, label %if.end, !dbg !10403

if.then:                                          ; preds = %entry
  %5 = load i32, i32* @ata_probe_timeout, align 4, !dbg !10404
  %tobool = icmp ne i32 %5, 0, !dbg !10404
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10404

cond.true:                                        ; preds = %if.then
  %6 = load i32, i32* @ata_probe_timeout, align 4, !dbg !10405
  %mul = mul i32 %6, 1000, !dbg !10406
  br label %cond.end, !dbg !10404

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !10404

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul, %cond.true ], [ 30000, %cond.false ], !dbg !10404
  %conv3 = sext i32 %cond to i64, !dbg !10404
  store i64 %conv3, i64* %timeout, align 8, !dbg !10407
  br label %if.end, !dbg !10408

if.end:                                           ; preds = %cond.end, %entry
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10409
  %8 = load i64, i64* %timeout, align 8, !dbg !10410
  %call = call i32 @ata_exec_internal(%struct.ata_device* %7, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 %8) #12, !dbg !10411
  store i32 %call, i32* %err_mask, align 4, !dbg !10412
  %9 = load i32, i32* %err_mask, align 4, !dbg !10413
  ret i32 %9, !dbg !10414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_id_major_version(i16* %id) #0 !dbg !10415 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16*, align 8
  %mver = alloca i32, align 4
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !10418, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.declare(metadata i32* %mver, metadata !10420, metadata !DIExpression()), !dbg !10421
  %0 = load i16*, i16** %id.addr, align 8, !dbg !10422
  %arrayidx = getelementptr i16, i16* %0, i64 80, !dbg !10422
  %1 = load i16, i16* %arrayidx, align 2, !dbg !10422
  %conv = zext i16 %1 to i32, !dbg !10422
  %cmp = icmp eq i32 %conv, 65535, !dbg !10424
  br i1 %cmp, label %if.then, label %if.end, !dbg !10425

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10426
  br label %return, !dbg !10426

if.end:                                           ; preds = %entry
  store i32 14, i32* %mver, align 4, !dbg !10427
  br label %for.cond, !dbg !10429

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %mver, align 4, !dbg !10430
  %cmp2 = icmp uge i32 %2, 1, !dbg !10432
  br i1 %cmp2, label %for.body, label %for.end, !dbg !10433

for.body:                                         ; preds = %for.cond
  %3 = load i16*, i16** %id.addr, align 8, !dbg !10434
  %arrayidx4 = getelementptr i16, i16* %3, i64 80, !dbg !10434
  %4 = load i16, i16* %arrayidx4, align 2, !dbg !10434
  %conv5 = zext i16 %4 to i32, !dbg !10434
  %5 = load i32, i32* %mver, align 4, !dbg !10436
  %shl = shl i32 1, %5, !dbg !10437
  %and = and i32 %conv5, %shl, !dbg !10438
  %tobool = icmp ne i32 %and, 0, !dbg !10438
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !10439

if.then6:                                         ; preds = %for.body
  br label %for.end, !dbg !10440

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !10441

for.inc:                                          ; preds = %if.end7
  %6 = load i32, i32* %mver, align 4, !dbg !10442
  %dec = add i32 %6, -1, !dbg !10442
  store i32 %dec, i32* %mver, align 4, !dbg !10442
  br label %for.cond, !dbg !10443, !llvm.loop !10444

for.end:                                          ; preds = %if.then6, %for.cond
  %7 = load i32, i32* %mver, align 4, !dbg !10446
  store i32 %7, i32* %retval, align 4, !dbg !10447
  br label %return, !dbg !10447

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10448
  ret i32 %8, !dbg !10448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_init_params(%struct.ata_device* %dev, i16 zeroext %heads, i16 zeroext %sectors) #0 !dbg !10449 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %heads.addr = alloca i16, align 2
  %sectors.addr = alloca i16, align 2
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10452, metadata !DIExpression()), !dbg !10453
  store i16 %heads, i16* %heads.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %heads.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  store i16 %sectors, i16* %sectors.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %sectors.addr, metadata !10456, metadata !DIExpression()), !dbg !10457
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !10460, metadata !DIExpression()), !dbg !10461
  %0 = load i16, i16* %sectors.addr, align 2, !dbg !10462
  %conv = zext i16 %0 to i32, !dbg !10462
  %cmp = icmp slt i32 %conv, 1, !dbg !10464
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10465

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16, i16* %sectors.addr, align 2, !dbg !10466
  %conv2 = zext i16 %1 to i32, !dbg !10466
  %cmp3 = icmp sgt i32 %conv2, 255, !dbg !10467
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !10468

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %2 = load i16, i16* %heads.addr, align 2, !dbg !10469
  %conv6 = zext i16 %2 to i32, !dbg !10469
  %cmp7 = icmp slt i32 %conv6, 1, !dbg !10470
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !10471

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %3 = load i16, i16* %heads.addr, align 2, !dbg !10472
  %conv10 = zext i16 %3 to i32, !dbg !10472
  %cmp11 = icmp sgt i32 %conv10, 16, !dbg !10473
  br i1 %cmp11, label %if.then, label %if.end, !dbg !10474

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  store i32 128, i32* %retval, align 4, !dbg !10475
  br label %return, !dbg !10475

if.end:                                           ; preds = %lor.lhs.false9
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10476
  call void @ata_tf_init(%struct.ata_device* %4, %struct.ata_taskfile* %tf) #12, !dbg !10477
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !10478
  store i8 -111, i8* %command, align 1, !dbg !10479
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !10480
  %5 = load i64, i64* %flags, align 8, !dbg !10481
  %or = or i64 %5, 6, !dbg !10481
  store i64 %or, i64* %flags, align 8, !dbg !10481
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10482
  store i8 0, i8* %protocol, align 8, !dbg !10483
  %6 = load i16, i16* %sectors.addr, align 2, !dbg !10484
  %conv13 = trunc i16 %6 to i8, !dbg !10484
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 9, !dbg !10485
  store i8 %conv13, i8* %nsect, align 8, !dbg !10486
  %7 = load i16, i16* %heads.addr, align 2, !dbg !10487
  %conv14 = zext i16 %7 to i32, !dbg !10487
  %sub = sub i32 %conv14, 1, !dbg !10488
  %and = and i32 %sub, 15, !dbg !10489
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 13, !dbg !10490
  %8 = load i8, i8* %device, align 4, !dbg !10491
  %conv15 = zext i8 %8 to i32, !dbg !10491
  %or16 = or i32 %conv15, %and, !dbg !10491
  %conv17 = trunc i32 %or16 to i8, !dbg !10491
  store i8 %conv17, i8* %device, align 4, !dbg !10491
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10492
  %call = call i32 @ata_exec_internal(%struct.ata_device* %9, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 0) #12, !dbg !10493
  store i32 %call, i32* %err_mask, align 4, !dbg !10494
  %10 = load i32, i32* %err_mask, align 4, !dbg !10495
  %cmp18 = icmp eq i32 %10, 1, !dbg !10497
  br i1 %cmp18, label %land.lhs.true, label %if.end23, !dbg !10498

land.lhs.true:                                    ; preds = %if.end
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !10499
  %11 = load i8, i8* %feature, align 1, !dbg !10499
  %conv20 = zext i8 %11 to i32, !dbg !10500
  %and21 = and i32 %conv20, 4, !dbg !10501
  %tobool = icmp ne i32 %and21, 0, !dbg !10501
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !10502

if.then22:                                        ; preds = %land.lhs.true
  store i32 0, i32* %err_mask, align 4, !dbg !10503
  br label %if.end23, !dbg !10504

if.end23:                                         ; preds = %if.then22, %land.lhs.true, %if.end
  %12 = load i32, i32* %err_mask, align 4, !dbg !10505
  store i32 %12, i32* %retval, align 4, !dbg !10506
  br label %return, !dbg !10506

return:                                           ; preds = %if.end23, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10507
  ret i32 %13, !dbg !10507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_read_log_page(%struct.ata_device* %dev, i8 zeroext %log, i8 zeroext %page, i8* %buf, i32 %sectors) #0 !dbg !10508 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %log.addr = alloca i8, align 1
  %page.addr = alloca i8, align 1
  %buf.addr = alloca i8*, align 8
  %sectors.addr = alloca i32, align 4
  %ap_flags = alloca i64, align 8
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  %dma = alloca i8, align 1
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10511, metadata !DIExpression()), !dbg !10512
  store i8 %log, i8* %log.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %log.addr, metadata !10513, metadata !DIExpression()), !dbg !10514
  store i8 %page, i8* %page.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %page.addr, metadata !10515, metadata !DIExpression()), !dbg !10516
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10517, metadata !DIExpression()), !dbg !10518
  store i32 %sectors, i32* %sectors.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sectors.addr, metadata !10519, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.declare(metadata i64* %ap_flags, metadata !10521, metadata !DIExpression()), !dbg !10522
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10523
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !10524
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !10524
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !10525
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !10525
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 3, !dbg !10526
  %3 = load i64, i64* %flags, align 8, !dbg !10526
  store i64 %3, i64* %ap_flags, align 8, !dbg !10522
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !10527, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !10529, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.declare(metadata i8* %dma, metadata !10531, metadata !DIExpression()), !dbg !10532
  store i8 0, i8* %dma, align 1, !dbg !10532
  %4 = load i64, i64* %ap_flags, align 8, !dbg !10533
  %and = and i64 %4, 32, !dbg !10535
  %tobool = icmp ne i64 %and, 0, !dbg !10535
  br i1 %tobool, label %if.then, label %if.end, !dbg !10536

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10537
  br label %return, !dbg !10537

if.end:                                           ; preds = %entry
  br label %retry, !dbg !10538

retry:                                            ; preds = %if.then18, %if.end
  call void @llvm.dbg.label(metadata !10539), !dbg !10540
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10541
  call void @ata_tf_init(%struct.ata_device* %5, %struct.ata_taskfile* %tf) #12, !dbg !10542
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10543
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 14, !dbg !10545
  %7 = load i8, i8* %dma_mode, align 1, !dbg !10545
  %conv = zext i8 %7 to i32, !dbg !10543
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10543
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !10546

land.lhs.true:                                    ; preds = %retry
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10547
  %9 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 27, !dbg !10548
  %id = bitcast %union.anon.83* %9 to [256 x i16]*, !dbg !10548
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !10547
  %call = call zeroext i1 @ata_id_has_read_log_dma_ext(i16* %arraydecay) #12, !dbg !10549
  br i1 %call, label %land.lhs.true3, label %if.else, !dbg !10550

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10551
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 2, !dbg !10552
  %11 = load i32, i32* %horkage, align 4, !dbg !10552
  %and4 = and i32 %11, 8388608, !dbg !10553
  %tobool5 = icmp ne i32 %and4, 0, !dbg !10553
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !10554

if.then6:                                         ; preds = %land.lhs.true3
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !10555
  store i8 71, i8* %command, align 1, !dbg !10557
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10558
  store i8 2, i8* %protocol, align 8, !dbg !10559
  store i8 1, i8* %dma, align 1, !dbg !10560
  br label %if.end9, !dbg !10561

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %retry
  %command7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !10562
  store i8 47, i8* %command7, align 1, !dbg !10564
  %protocol8 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10565
  store i8 1, i8* %protocol8, align 8, !dbg !10566
  store i8 0, i8* %dma, align 1, !dbg !10567
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %12 = load i8, i8* %log.addr, align 1, !dbg !10568
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 10, !dbg !10569
  store i8 %12, i8* %lbal, align 1, !dbg !10570
  %13 = load i8, i8* %page.addr, align 1, !dbg !10571
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 11, !dbg !10572
  store i8 %13, i8* %lbam, align 2, !dbg !10573
  %14 = load i32, i32* %sectors.addr, align 4, !dbg !10574
  %conv10 = trunc i32 %14 to i8, !dbg !10574
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 9, !dbg !10575
  store i8 %conv10, i8* %nsect, align 8, !dbg !10576
  %15 = load i32, i32* %sectors.addr, align 4, !dbg !10577
  %shr = lshr i32 %15, 8, !dbg !10578
  %conv11 = trunc i32 %shr to i8, !dbg !10577
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 4, !dbg !10579
  store i8 %conv11, i8* %hob_nsect, align 1, !dbg !10580
  %flags12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !10581
  %16 = load i64, i64* %flags12, align 8, !dbg !10582
  %or = or i64 %16, 7, !dbg !10582
  store i64 %or, i64* %flags12, align 8, !dbg !10582
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10583
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !10584
  %19 = load i32, i32* %sectors.addr, align 4, !dbg !10585
  %mul = mul i32 %19, 512, !dbg !10586
  %call13 = call i32 @ata_exec_internal(%struct.ata_device* %17, %struct.ata_taskfile* %tf, i8* null, i32 2, i8* %18, i32 %mul, i64 0) #12, !dbg !10587
  store i32 %call13, i32* %err_mask, align 4, !dbg !10588
  %20 = load i32, i32* %err_mask, align 4, !dbg !10589
  %tobool14 = icmp ne i32 %20, 0, !dbg !10589
  br i1 %tobool14, label %land.lhs.true15, label %if.end21, !dbg !10591

land.lhs.true15:                                  ; preds = %if.end9
  %21 = load i8, i8* %dma, align 1, !dbg !10592
  %tobool16 = trunc i8 %21 to i1, !dbg !10592
  br i1 %tobool16, label %if.then18, label %if.end21, !dbg !10593

if.then18:                                        ; preds = %land.lhs.true15
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10594
  %horkage19 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 2, !dbg !10596
  %23 = load i32, i32* %horkage19, align 4, !dbg !10597
  %or20 = or i32 %23, 8388608, !dbg !10597
  store i32 %or20, i32* %horkage19, align 4, !dbg !10597
  %24 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10598
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.46, i64 0, i64 0)) #12, !dbg !10598
  br label %retry, !dbg !10599

if.end21:                                         ; preds = %land.lhs.true15, %if.end9
  %25 = load i32, i32* %err_mask, align 4, !dbg !10600
  store i32 %25, i32* %retval, align 4, !dbg !10601
  br label %return, !dbg !10601

return:                                           ; preds = %if.end21, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !10602
  ret i32 %26, !dbg !10602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_read_log_dma_ext(i16* %id) #0 !dbg !10603 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load i16*, i16** %id.addr, align 8, !dbg !10606
  %arrayidx = getelementptr i16, i16* %0, i64 86, !dbg !10606
  %1 = load i16, i16* %arrayidx, align 2, !dbg !10606
  %conv = zext i16 %1 to i32, !dbg !10606
  %and = and i32 %conv, 32768, !dbg !10608
  %tobool = icmp ne i32 %and, 0, !dbg !10608
  br i1 %tobool, label %if.end, label %if.then, !dbg !10609

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10610
  br label %return, !dbg !10610

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !10611
  %arrayidx1 = getelementptr i16, i16* %2, i64 119, !dbg !10611
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !10611
  %conv2 = zext i16 %3 to i32, !dbg !10611
  %and3 = and i32 %conv2, 49160, !dbg !10613
  %cmp = icmp eq i32 %and3, 16392, !dbg !10614
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !10615

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i16*, i16** %id.addr, align 8, !dbg !10616
  %arrayidx5 = getelementptr i16, i16* %4, i64 120, !dbg !10616
  %5 = load i16, i16* %arrayidx5, align 2, !dbg !10616
  %conv6 = zext i16 %5 to i32, !dbg !10616
  %and7 = and i32 %conv6, 49160, !dbg !10617
  %cmp8 = icmp eq i32 %and7, 16392, !dbg !10618
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10619

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  store i1 true, i1* %retval, align 1, !dbg !10620
  br label %return, !dbg !10620

if.end11:                                         ; preds = %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !10621
  br label %return, !dbg !10621

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !10622
  ret i1 %6, !dbg !10622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_dev_configure(%struct.ata_device* %dev) #0 !dbg !10623 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %print_info = alloca i32, align 4
  %id = alloca i16*, align 8
  %xfer_mask = alloca i64, align 8
  %err_mask = alloca i32, align 4
  %revbuf = alloca [7 x i8], align 1
  %fwrevbuf = alloca [9 x i8], align 1
  %modelbuf = alloca [41 x i8], align 16
  %rc = alloca i32, align 4
  %max = alloca i32, align 4
  %cnt = alloca i32, align 4
  %lba_desc = alloca i8*, align 8
  %ncq_desc = alloca [24 x i8], align 16
  %sata_setting = alloca i8*, align 8
  %i246 = alloca i32, align 4
  %j = alloca i32, align 4
  %cdb_intr_string = alloca i8*, align 8
  %atapi_an_string = alloca i8*, align 8
  %dma_dir_string = alloca i8*, align 8
  %sntf = alloca i32, align 4
  %__UNIQUE_ID___x344 = alloca i32, align 4
  %__UNIQUE_ID___y345 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x346 = alloca i32, align 4
  %__UNIQUE_ID___y347 = alloca i32, align 4
  %tmp408 = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10624, metadata !DIExpression()), !dbg !10625
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10626, metadata !DIExpression()), !dbg !10627
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10628
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !10629
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !10629
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !10630
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !10630
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !10627
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !10631, metadata !DIExpression()), !dbg !10632
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10633
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 0, !dbg !10634
  %4 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !10634
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 12, !dbg !10635
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !10632
  call void @llvm.dbg.declare(metadata i32* %print_info, metadata !10636, metadata !DIExpression()), !dbg !10637
  %5 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10638
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %5, i32 0, i32 0, !dbg !10639
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !10640
  %6 = load i32, i32* %flags, align 4, !dbg !10640
  %and = and i32 %6, 262144, !dbg !10641
  store i32 %and, i32* %print_info, align 4, !dbg !10637
  call void @llvm.dbg.declare(metadata i16** %id, metadata !10642, metadata !DIExpression()), !dbg !10643
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10644
  %8 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 27, !dbg !10645
  %id3 = bitcast %union.anon.83* %8 to [256 x i16]*, !dbg !10645
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id3, i64 0, i64 0, !dbg !10644
  store i16* %arraydecay, i16** %id, align 8, !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %xfer_mask, metadata !10646, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !10648, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.declare(metadata [7 x i8]* %revbuf, metadata !10650, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata [9 x i8]* %fwrevbuf, metadata !10653, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.declare(metadata [41 x i8]* %modelbuf, metadata !10656, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10661, metadata !DIExpression()), !dbg !10662
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10663
  %call = call i32 @ata_dev_enabled(%struct.ata_device* %9) #12, !dbg !10665
  %tobool = icmp ne i32 %call, 0, !dbg !10665
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10666

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10667
  %msg_enable = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 38, !dbg !10667
  %11 = load i32, i32* %msg_enable, align 4, !dbg !10667
  %and4 = and i32 %11, 2, !dbg !10667
  %tobool5 = icmp ne i32 %and4, 0, !dbg !10667
  br i1 %tobool5, label %if.then, label %if.end, !dbg !10668

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10669
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.ata_dev_configure, i64 0, i64 0)) #12, !dbg !10669
  store i32 0, i32* %retval, align 4, !dbg !10671
  br label %return, !dbg !10671

if.end:                                           ; preds = %land.lhs.true, %entry
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10672
  %msg_enable6 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 38, !dbg !10672
  %14 = load i32, i32* %msg_enable6, align 4, !dbg !10672
  %and7 = and i32 %14, 4, !dbg !10672
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10672
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10674

if.then9:                                         ; preds = %if.end
  %15 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10675
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.ata_dev_configure, i64 0, i64 0)) #12, !dbg !10675
  br label %if.end10, !dbg !10675

if.end10:                                         ; preds = %if.then9, %if.end
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10676
  %call11 = call i64 @ata_dev_blacklisted(%struct.ata_device* %16) #12, !dbg !10677
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10678
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 2, !dbg !10679
  %18 = load i32, i32* %horkage, align 4, !dbg !10680
  %conv = zext i32 %18 to i64, !dbg !10680
  %or = or i64 %conv, %call11, !dbg !10680
  %conv12 = trunc i64 %or to i32, !dbg !10680
  store i32 %conv12, i32* %horkage, align 4, !dbg !10680
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10681
  call void @ata_force_horkage(%struct.ata_device* %19) #12, !dbg !10682
  %20 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10683
  %horkage13 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %20, i32 0, i32 2, !dbg !10685
  %21 = load i32, i32* %horkage13, align 4, !dbg !10685
  %and14 = and i32 %21, 32, !dbg !10686
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10686
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10687

if.then16:                                        ; preds = %if.end10
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10688
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48, i64 0, i64 0)) #12, !dbg !10688
  %23 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10690
  call void @ata_dev_disable(%struct.ata_device* %23) #12, !dbg !10691
  store i32 0, i32* %retval, align 4, !dbg !10692
  br label %return, !dbg !10692

if.end17:                                         ; preds = %if.end10
  %24 = load i32, i32* @atapi_enabled, align 4, !dbg !10693
  %tobool18 = icmp ne i32 %24, 0, !dbg !10693
  br i1 %tobool18, label %lor.lhs.false, label %land.lhs.true22, !dbg !10695

lor.lhs.false:                                    ; preds = %if.end17
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10696
  %flags19 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 3, !dbg !10697
  %26 = load i64, i64* %flags19, align 8, !dbg !10697
  %and20 = and i64 %26, 64, !dbg !10698
  %tobool21 = icmp ne i64 %and20, 0, !dbg !10698
  br i1 %tobool21, label %land.lhs.true22, label %if.end26, !dbg !10699

land.lhs.true22:                                  ; preds = %lor.lhs.false, %if.end17
  %27 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10700
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %27, i32 0, i32 11, !dbg !10701
  %28 = load i32, i32* %class, align 64, !dbg !10701
  %cmp = icmp eq i32 %28, 3, !dbg !10702
  br i1 %cmp, label %if.then24, label %if.end26, !dbg !10703

if.then24:                                        ; preds = %land.lhs.true22
  %29 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10704
  %30 = load i32, i32* @atapi_enabled, align 4, !dbg !10704
  %tobool25 = icmp ne i32 %30, 0, !dbg !10704
  %31 = zext i1 %tobool25 to i64, !dbg !10704
  %cond = select i1 %tobool25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), !dbg !10704
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.49, i64 0, i64 0), i8* %cond) #12, !dbg !10704
  %32 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10706
  call void @ata_dev_disable(%struct.ata_device* %32) #12, !dbg !10707
  store i32 0, i32* %retval, align 4, !dbg !10708
  br label %return, !dbg !10708

if.end26:                                         ; preds = %land.lhs.true22, %lor.lhs.false
  %33 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10709
  %call27 = call i32 @ata_do_link_spd_horkage(%struct.ata_device* %33) #12, !dbg !10710
  store i32 %call27, i32* %rc, align 4, !dbg !10711
  %34 = load i32, i32* %rc, align 4, !dbg !10712
  %tobool28 = icmp ne i32 %34, 0, !dbg !10712
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !10714

if.then29:                                        ; preds = %if.end26
  %35 = load i32, i32* %rc, align 4, !dbg !10715
  store i32 %35, i32* %retval, align 4, !dbg !10716
  br label %return, !dbg !10716

if.end30:                                         ; preds = %if.end26
  %36 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10717
  %horkage31 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %36, i32 0, i32 2, !dbg !10719
  %37 = load i32, i32* %horkage31, align 4, !dbg !10719
  %and32 = and i32 %37, 2097152, !dbg !10720
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10720
  br i1 %tobool33, label %land.lhs.true34, label %if.end42, !dbg !10721

land.lhs.true34:                                  ; preds = %if.end30
  %38 = load i16*, i16** %id, align 8, !dbg !10722
  %arrayidx = getelementptr i16, i16* %38, i64 76, !dbg !10722
  %39 = load i16, i16* %arrayidx, align 2, !dbg !10722
  %conv35 = zext i16 %39 to i32, !dbg !10722
  %and36 = and i32 %conv35, 14, !dbg !10723
  %cmp37 = icmp eq i32 %and36, 2, !dbg !10724
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !10725

if.then39:                                        ; preds = %land.lhs.true34
  %40 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10726
  %horkage40 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %40, i32 0, i32 2, !dbg !10727
  %41 = load i32, i32* %horkage40, align 4, !dbg !10728
  %or41 = or i32 %41, 1048576, !dbg !10728
  store i32 %or41, i32* %horkage40, align 4, !dbg !10728
  br label %if.end42, !dbg !10726

if.end42:                                         ; preds = %if.then39, %land.lhs.true34, %if.end30
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10729
  %flags43 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 3, !dbg !10731
  %43 = load i64, i64* %flags43, align 8, !dbg !10731
  %and44 = and i64 %43, 4, !dbg !10732
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10732
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !10733

if.then46:                                        ; preds = %if.end42
  %44 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10734
  %horkage47 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %44, i32 0, i32 2, !dbg !10735
  %45 = load i32, i32* %horkage47, align 4, !dbg !10736
  %or48 = or i32 %45, 1048576, !dbg !10736
  store i32 %or48, i32* %horkage47, align 4, !dbg !10736
  br label %if.end49, !dbg !10734

if.end49:                                         ; preds = %if.then46, %if.end42
  %46 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10737
  %horkage50 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %46, i32 0, i32 2, !dbg !10739
  %47 = load i32, i32* %horkage50, align 4, !dbg !10739
  %and51 = and i32 %47, 1048576, !dbg !10740
  %tobool52 = icmp ne i32 %and51, 0, !dbg !10740
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !10741

if.then53:                                        ; preds = %if.end49
  %48 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10742
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.52, i64 0, i64 0)) #12, !dbg !10742
  %49 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10744
  %link54 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %49, i32 0, i32 0, !dbg !10745
  %50 = load %struct.ata_link*, %struct.ata_link** %link54, align 64, !dbg !10745
  %ap55 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %50, i32 0, i32 0, !dbg !10746
  %51 = load %struct.ata_port*, %struct.ata_port** %ap55, align 64, !dbg !10746
  %target_lpm_policy = getelementptr inbounds %struct.ata_port, %struct.ata_port* %51, i32 0, i32 44, !dbg !10747
  store i32 1, i32* %target_lpm_policy, align 4, !dbg !10748
  br label %if.end56, !dbg !10749

if.end56:                                         ; preds = %if.then53, %if.end49
  %52 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10750
  %call57 = call i32 @ata_acpi_on_devcfg(%struct.ata_device* %52) #12, !dbg !10751
  store i32 %call57, i32* %rc, align 4, !dbg !10752
  %53 = load i32, i32* %rc, align 4, !dbg !10753
  %tobool58 = icmp ne i32 %53, 0, !dbg !10753
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !10755

if.then59:                                        ; preds = %if.end56
  %54 = load i32, i32* %rc, align 4, !dbg !10756
  store i32 %54, i32* %retval, align 4, !dbg !10757
  br label %return, !dbg !10757

if.end60:                                         ; preds = %if.end56
  %55 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10758
  %call61 = call i32 @ata_hpa_resize(%struct.ata_device* %55) #12, !dbg !10759
  store i32 %call61, i32* %rc, align 4, !dbg !10760
  %56 = load i32, i32* %rc, align 4, !dbg !10761
  %tobool62 = icmp ne i32 %56, 0, !dbg !10761
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !10763

if.then63:                                        ; preds = %if.end60
  %57 = load i32, i32* %rc, align 4, !dbg !10764
  store i32 %57, i32* %retval, align 4, !dbg !10765
  br label %return, !dbg !10765

if.end64:                                         ; preds = %if.end60
  %58 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10766
  %msg_enable65 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %58, i32 0, i32 38, !dbg !10766
  %59 = load i32, i32* %msg_enable65, align 4, !dbg !10766
  %and66 = and i32 %59, 4, !dbg !10766
  %tobool67 = icmp ne i32 %and66, 0, !dbg !10766
  br i1 %tobool67, label %if.then68, label %if.end85, !dbg !10768

if.then68:                                        ; preds = %if.end64
  %60 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10769
  %61 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx69 = getelementptr i16, i16* %61, i64 49, !dbg !10769
  %62 = load i16, i16* %arrayidx69, align 2, !dbg !10769
  %conv70 = zext i16 %62 to i32, !dbg !10769
  %63 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx71 = getelementptr i16, i16* %63, i64 82, !dbg !10769
  %64 = load i16, i16* %arrayidx71, align 2, !dbg !10769
  %conv72 = zext i16 %64 to i32, !dbg !10769
  %65 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx73 = getelementptr i16, i16* %65, i64 83, !dbg !10769
  %66 = load i16, i16* %arrayidx73, align 2, !dbg !10769
  %conv74 = zext i16 %66 to i32, !dbg !10769
  %67 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx75 = getelementptr i16, i16* %67, i64 84, !dbg !10769
  %68 = load i16, i16* %arrayidx75, align 2, !dbg !10769
  %conv76 = zext i16 %68 to i32, !dbg !10769
  %69 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx77 = getelementptr i16, i16* %69, i64 85, !dbg !10769
  %70 = load i16, i16* %arrayidx77, align 2, !dbg !10769
  %conv78 = zext i16 %70 to i32, !dbg !10769
  %71 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx79 = getelementptr i16, i16* %71, i64 86, !dbg !10769
  %72 = load i16, i16* %arrayidx79, align 2, !dbg !10769
  %conv80 = zext i16 %72 to i32, !dbg !10769
  %73 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx81 = getelementptr i16, i16* %73, i64 87, !dbg !10769
  %74 = load i16, i16* %arrayidx81, align 2, !dbg !10769
  %conv82 = zext i16 %74 to i32, !dbg !10769
  %75 = load i16*, i16** %id, align 8, !dbg !10769
  %arrayidx83 = getelementptr i16, i16* %75, i64 88, !dbg !10769
  %76 = load i16, i16* %arrayidx83, align 2, !dbg !10769
  %conv84 = zext i16 %76 to i32, !dbg !10769
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.ata_dev_configure, i64 0, i64 0), i32 %conv70, i32 %conv72, i32 %conv74, i32 %conv76, i32 %conv78, i32 %conv80, i32 %conv82, i32 %conv84) #12, !dbg !10769
  br label %if.end85, !dbg !10769

if.end85:                                         ; preds = %if.then68, %if.end64
  %77 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10770
  %flags86 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %77, i32 0, i32 3, !dbg !10771
  %78 = load i64, i64* %flags86, align 16, !dbg !10772
  %and87 = and i64 %78, -4096, !dbg !10772
  store i64 %and87, i64* %flags86, align 16, !dbg !10772
  %79 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10773
  %max_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %79, i32 0, i32 18, !dbg !10774
  store i32 0, i32* %max_sectors, align 4, !dbg !10775
  %80 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10776
  %cdb_len = getelementptr inbounds %struct.ata_device, %struct.ata_device* %80, i32 0, i32 19, !dbg !10777
  store i32 0, i32* %cdb_len, align 32, !dbg !10778
  %81 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10779
  %n_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %81, i32 0, i32 9, !dbg !10780
  store i64 0, i64* %n_sectors, align 16, !dbg !10781
  %82 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10782
  %cylinders = getelementptr inbounds %struct.ata_device, %struct.ata_device* %82, i32 0, i32 23, !dbg !10783
  store i16 0, i16* %cylinders, align 64, !dbg !10784
  %83 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10785
  %heads = getelementptr inbounds %struct.ata_device, %struct.ata_device* %83, i32 0, i32 24, !dbg !10786
  store i16 0, i16* %heads, align 2, !dbg !10787
  %84 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10788
  %sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %84, i32 0, i32 25, !dbg !10789
  store i16 0, i16* %sectors, align 4, !dbg !10790
  %85 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10791
  %multi_count = getelementptr inbounds %struct.ata_device, %struct.ata_device* %85, i32 0, i32 17, !dbg !10792
  store i32 0, i32* %multi_count, align 8, !dbg !10793
  %86 = load i16*, i16** %id, align 8, !dbg !10794
  %call88 = call i64 @ata_id_xfermask(i16* %86) #12, !dbg !10795
  store i64 %call88, i64* %xfer_mask, align 8, !dbg !10796
  %87 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10797
  %msg_enable89 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %87, i32 0, i32 38, !dbg !10797
  %88 = load i32, i32* %msg_enable89, align 4, !dbg !10797
  %and90 = and i32 %88, 4, !dbg !10797
  %tobool91 = icmp ne i32 %and90, 0, !dbg !10797
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !10799

if.then92:                                        ; preds = %if.end85
  %89 = load i16*, i16** %id, align 8, !dbg !10800
  call void @ata_dump_id(i16* %89) #12, !dbg !10801
  br label %if.end93, !dbg !10801

if.end93:                                         ; preds = %if.then92, %if.end85
  %90 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10802
  %91 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %90, i32 0, i32 27, !dbg !10803
  %id94 = bitcast %union.anon.83* %91 to [256 x i16]*, !dbg !10803
  %arraydecay95 = getelementptr inbounds [256 x i16], [256 x i16]* %id94, i64 0, i64 0, !dbg !10802
  %arraydecay96 = getelementptr inbounds [9 x i8], [9 x i8]* %fwrevbuf, i64 0, i64 0, !dbg !10804
  call void @ata_id_c_string(i16* %arraydecay95, i8* %arraydecay96, i32 23, i32 9) #12, !dbg !10805
  %92 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10806
  %93 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %92, i32 0, i32 27, !dbg !10807
  %id97 = bitcast %union.anon.83* %93 to [256 x i16]*, !dbg !10807
  %arraydecay98 = getelementptr inbounds [256 x i16], [256 x i16]* %id97, i64 0, i64 0, !dbg !10806
  %arraydecay99 = getelementptr inbounds [41 x i8], [41 x i8]* %modelbuf, i64 0, i64 0, !dbg !10808
  call void @ata_id_c_string(i16* %arraydecay98, i8* %arraydecay99, i32 27, i32 41) #12, !dbg !10809
  %94 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10810
  %class100 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %94, i32 0, i32 11, !dbg !10812
  %95 = load i32, i32* %class100, align 64, !dbg !10812
  %cmp101 = icmp eq i32 %95, 1, !dbg !10813
  br i1 %cmp101, label %if.then107, label %lor.lhs.false103, !dbg !10814

lor.lhs.false103:                                 ; preds = %if.end93
  %96 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10815
  %class104 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %96, i32 0, i32 11, !dbg !10816
  %97 = load i32, i32* %class104, align 64, !dbg !10816
  %cmp105 = icmp eq i32 %97, 9, !dbg !10817
  br i1 %cmp105, label %if.then107, label %if.else261, !dbg !10818

if.then107:                                       ; preds = %lor.lhs.false103, %if.end93
  %98 = load i16*, i16** %id, align 8, !dbg !10819
  %call108 = call zeroext i1 @ata_id_is_cfa(i16* %98) #12, !dbg !10822
  br i1 %call108, label %if.then109, label %if.else, !dbg !10823

if.then109:                                       ; preds = %if.then107
  %99 = load i16*, i16** %id, align 8, !dbg !10824
  %arrayidx110 = getelementptr i16, i16* %99, i64 162, !dbg !10824
  %100 = load i16, i16* %arrayidx110, align 2, !dbg !10824
  %conv111 = zext i16 %100 to i32, !dbg !10824
  %and112 = and i32 %conv111, 1, !dbg !10827
  %tobool113 = icmp ne i32 %and112, 0, !dbg !10827
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !10828

if.then114:                                       ; preds = %if.then109
  %101 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10829
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.54, i64 0, i64 0)) #12, !dbg !10829
  br label %if.end115, !dbg !10829

if.end115:                                        ; preds = %if.then114, %if.then109
  %arraydecay116 = getelementptr inbounds [7 x i8], [7 x i8]* %revbuf, i64 0, i64 0, !dbg !10830
  %call117 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay116, i64 7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0)) #12, !dbg !10831
  br label %if.end124, !dbg !10832

if.else:                                          ; preds = %if.then107
  %arraydecay118 = getelementptr inbounds [7 x i8], [7 x i8]* %revbuf, i64 0, i64 0, !dbg !10833
  %102 = load i16*, i16** %id, align 8, !dbg !10835
  %call119 = call i32 @ata_id_major_version(i16* %102) #12, !dbg !10836
  %call120 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay118, i64 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0), i32 %call119) #12, !dbg !10837
  %103 = load i16*, i16** %id, align 8, !dbg !10838
  %call121 = call zeroext i1 @ata_id_has_tpm(i16* %103) #12, !dbg !10840
  br i1 %call121, label %if.then122, label %if.end123, !dbg !10841

if.then122:                                       ; preds = %if.else
  %104 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10842
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.54, i64 0, i64 0)) #12, !dbg !10842
  br label %if.end123, !dbg !10842

if.end123:                                        ; preds = %if.then122, %if.else
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end115
  %105 = load i16*, i16** %id, align 8, !dbg !10843
  %call125 = call i64 @ata_id_n_sectors(i16* %105) #12, !dbg !10844
  %106 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10845
  %n_sectors126 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %106, i32 0, i32 9, !dbg !10846
  store i64 %call125, i64* %n_sectors126, align 16, !dbg !10847
  %107 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10848
  %108 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %107, i32 0, i32 27, !dbg !10850
  %id127 = bitcast %union.anon.83* %108 to [256 x i16]*, !dbg !10850
  %arrayidx128 = getelementptr [256 x i16], [256 x i16]* %id127, i64 0, i64 47, !dbg !10848
  %109 = load i16, i16* %arrayidx128, align 2, !dbg !10848
  %conv129 = zext i16 %109 to i32, !dbg !10848
  %shr = ashr i32 %conv129, 8, !dbg !10851
  %cmp130 = icmp eq i32 %shr, 128, !dbg !10852
  br i1 %cmp130, label %land.lhs.true132, label %if.end161, !dbg !10853

land.lhs.true132:                                 ; preds = %if.end124
  %110 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10854
  %111 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %110, i32 0, i32 27, !dbg !10855
  %id133 = bitcast %union.anon.83* %111 to [256 x i16]*, !dbg !10855
  %arrayidx134 = getelementptr [256 x i16], [256 x i16]* %id133, i64 0, i64 59, !dbg !10854
  %112 = load i16, i16* %arrayidx134, align 2, !dbg !10854
  %conv135 = zext i16 %112 to i32, !dbg !10854
  %and136 = and i32 %conv135, 256, !dbg !10856
  %tobool137 = icmp ne i32 %and136, 0, !dbg !10856
  br i1 %tobool137, label %if.then138, label %if.end161, !dbg !10857

if.then138:                                       ; preds = %land.lhs.true132
  call void @llvm.dbg.declare(metadata i32* %max, metadata !10858, metadata !DIExpression()), !dbg !10860
  %113 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10861
  %114 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %113, i32 0, i32 27, !dbg !10862
  %id139 = bitcast %union.anon.83* %114 to [256 x i16]*, !dbg !10862
  %arrayidx140 = getelementptr [256 x i16], [256 x i16]* %id139, i64 0, i64 47, !dbg !10861
  %115 = load i16, i16* %arrayidx140, align 2, !dbg !10861
  %conv141 = zext i16 %115 to i32, !dbg !10861
  %and142 = and i32 %conv141, 255, !dbg !10863
  store i32 %and142, i32* %max, align 4, !dbg !10860
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !10864, metadata !DIExpression()), !dbg !10865
  %116 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10866
  %117 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %116, i32 0, i32 27, !dbg !10867
  %id143 = bitcast %union.anon.83* %117 to [256 x i16]*, !dbg !10867
  %arrayidx144 = getelementptr [256 x i16], [256 x i16]* %id143, i64 0, i64 59, !dbg !10866
  %118 = load i16, i16* %arrayidx144, align 2, !dbg !10866
  %conv145 = zext i16 %118 to i32, !dbg !10866
  %and146 = and i32 %conv145, 255, !dbg !10868
  store i32 %and146, i32* %cnt, align 4, !dbg !10865
  %119 = load i32, i32* %max, align 4, !dbg !10869
  %conv147 = zext i32 %119 to i64, !dbg !10869
  %call148 = call zeroext i1 @is_power_of_2(i64 %conv147) #15, !dbg !10871
  br i1 %call148, label %land.lhs.true150, label %if.end160, !dbg !10872

land.lhs.true150:                                 ; preds = %if.then138
  %120 = load i32, i32* %cnt, align 4, !dbg !10873
  %conv151 = zext i32 %120 to i64, !dbg !10873
  %call152 = call zeroext i1 @is_power_of_2(i64 %conv151) #15, !dbg !10874
  br i1 %call152, label %if.then154, label %if.end160, !dbg !10875

if.then154:                                       ; preds = %land.lhs.true150
  %121 = load i32, i32* %cnt, align 4, !dbg !10876
  %122 = load i32, i32* %max, align 4, !dbg !10878
  %cmp155 = icmp ule i32 %121, %122, !dbg !10879
  br i1 %cmp155, label %if.then157, label %if.end159, !dbg !10880

if.then157:                                       ; preds = %if.then154
  %123 = load i32, i32* %cnt, align 4, !dbg !10881
  %124 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10882
  %multi_count158 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %124, i32 0, i32 17, !dbg !10883
  store i32 %123, i32* %multi_count158, align 8, !dbg !10884
  br label %if.end159, !dbg !10882

if.end159:                                        ; preds = %if.then157, %if.then154
  br label %if.end160, !dbg !10878

if.end160:                                        ; preds = %if.end159, %land.lhs.true150, %if.then138
  br label %if.end161, !dbg !10885

if.end161:                                        ; preds = %if.end160, %land.lhs.true132, %if.end124
  %125 = load i16*, i16** %id, align 8, !dbg !10886
  %arrayidx162 = getelementptr i16, i16* %125, i64 49, !dbg !10886
  %126 = load i16, i16* %arrayidx162, align 2, !dbg !10886
  %conv163 = zext i16 %126 to i32, !dbg !10886
  %and164 = and i32 %conv163, 512, !dbg !10886
  %tobool165 = icmp ne i32 %and164, 0, !dbg !10886
  br i1 %tobool165, label %if.then166, label %if.else203, !dbg !10888

if.then166:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i8** %lba_desc, metadata !10889, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.declare(metadata [24 x i8]* %ncq_desc, metadata !10892, metadata !DIExpression()), !dbg !10894
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), i8** %lba_desc, align 8, !dbg !10895
  %127 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10896
  %flags167 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %127, i32 0, i32 3, !dbg !10897
  %128 = load i64, i64* %flags167, align 16, !dbg !10898
  %or168 = or i64 %128, 1, !dbg !10898
  store i64 %or168, i64* %flags167, align 16, !dbg !10898
  %129 = load i16*, i16** %id, align 8, !dbg !10899
  %call169 = call zeroext i1 @ata_id_has_lba48(i16* %129) #12, !dbg !10901
  br i1 %call169, label %if.then170, label %if.end183, !dbg !10902

if.then170:                                       ; preds = %if.then166
  %130 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10903
  %flags171 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %130, i32 0, i32 3, !dbg !10905
  %131 = load i64, i64* %flags171, align 16, !dbg !10906
  %or172 = or i64 %131, 2, !dbg !10906
  store i64 %or172, i64* %flags171, align 16, !dbg !10906
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i8** %lba_desc, align 8, !dbg !10907
  %132 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10908
  %n_sectors173 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %132, i32 0, i32 9, !dbg !10910
  %133 = load i64, i64* %n_sectors173, align 16, !dbg !10910
  %cmp174 = icmp uge i64 %133, 268435456, !dbg !10911
  br i1 %cmp174, label %land.lhs.true176, label %if.end182, !dbg !10912

land.lhs.true176:                                 ; preds = %if.then170
  %134 = load i16*, i16** %id, align 8, !dbg !10913
  %call177 = call zeroext i1 @ata_id_has_flush_ext(i16* %134) #12, !dbg !10914
  br i1 %call177, label %if.then179, label %if.end182, !dbg !10915

if.then179:                                       ; preds = %land.lhs.true176
  %135 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10916
  %flags180 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %135, i32 0, i32 3, !dbg !10917
  %136 = load i64, i64* %flags180, align 16, !dbg !10918
  %or181 = or i64 %136, 16, !dbg !10918
  store i64 %or181, i64* %flags180, align 16, !dbg !10918
  br label %if.end182, !dbg !10916

if.end182:                                        ; preds = %if.then179, %land.lhs.true176, %if.then170
  br label %if.end183, !dbg !10919

if.end183:                                        ; preds = %if.end182, %if.then166
  %137 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10920
  %arraydecay184 = getelementptr inbounds [24 x i8], [24 x i8]* %ncq_desc, i64 0, i64 0, !dbg !10921
  %call185 = call i32 @ata_dev_config_ncq(%struct.ata_device* %137, i8* %arraydecay184, i64 24) #12, !dbg !10922
  store i32 %call185, i32* %rc, align 4, !dbg !10923
  %138 = load i32, i32* %rc, align 4, !dbg !10924
  %tobool186 = icmp ne i32 %138, 0, !dbg !10924
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !10926

if.then187:                                       ; preds = %if.end183
  %139 = load i32, i32* %rc, align 4, !dbg !10927
  store i32 %139, i32* %retval, align 4, !dbg !10928
  br label %return, !dbg !10928

if.end188:                                        ; preds = %if.end183
  %140 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10929
  %msg_enable189 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %140, i32 0, i32 38, !dbg !10929
  %141 = load i32, i32* %msg_enable189, align 4, !dbg !10929
  %and190 = and i32 %141, 1, !dbg !10929
  %tobool191 = icmp ne i32 %and190, 0, !dbg !10929
  br i1 %tobool191, label %land.lhs.true192, label %if.end202, !dbg !10931

land.lhs.true192:                                 ; preds = %if.end188
  %142 = load i32, i32* %print_info, align 4, !dbg !10932
  %tobool193 = icmp ne i32 %142, 0, !dbg !10932
  br i1 %tobool193, label %if.then194, label %if.end202, !dbg !10933

if.then194:                                       ; preds = %land.lhs.true192
  %143 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10934
  %arraydecay195 = getelementptr inbounds [7 x i8], [7 x i8]* %revbuf, i64 0, i64 0, !dbg !10934
  %arraydecay196 = getelementptr inbounds [41 x i8], [41 x i8]* %modelbuf, i64 0, i64 0, !dbg !10934
  %arraydecay197 = getelementptr inbounds [9 x i8], [9 x i8]* %fwrevbuf, i64 0, i64 0, !dbg !10934
  %144 = load i64, i64* %xfer_mask, align 8, !dbg !10934
  %call198 = call i8* @ata_mode_string(i64 %144) #12, !dbg !10934
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i64 0, i64 0), i8* %arraydecay195, i8* %arraydecay196, i8* %arraydecay197, i8* %call198) #12, !dbg !10934
  %145 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10936
  %146 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10936
  %n_sectors199 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %146, i32 0, i32 9, !dbg !10936
  %147 = load i64, i64* %n_sectors199, align 16, !dbg !10936
  %148 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10936
  %multi_count200 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %148, i32 0, i32 17, !dbg !10936
  %149 = load i32, i32* %multi_count200, align 8, !dbg !10936
  %150 = load i8*, i8** %lba_desc, align 8, !dbg !10936
  %arraydecay201 = getelementptr inbounds [24 x i8], [24 x i8]* %ncq_desc, i64 0, i64 0, !dbg !10936
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %145, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0), i64 %147, i32 %149, i8* %150, i8* %arraydecay201) #12, !dbg !10936
  br label %if.end202, !dbg !10937

if.end202:                                        ; preds = %if.then194, %land.lhs.true192, %if.end188
  br label %if.end238, !dbg !10938

if.else203:                                       ; preds = %if.end161
  %151 = load i16*, i16** %id, align 8, !dbg !10939
  %arrayidx204 = getelementptr i16, i16* %151, i64 1, !dbg !10939
  %152 = load i16, i16* %arrayidx204, align 2, !dbg !10939
  %153 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10941
  %cylinders205 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %153, i32 0, i32 23, !dbg !10942
  store i16 %152, i16* %cylinders205, align 64, !dbg !10943
  %154 = load i16*, i16** %id, align 8, !dbg !10944
  %arrayidx206 = getelementptr i16, i16* %154, i64 3, !dbg !10944
  %155 = load i16, i16* %arrayidx206, align 2, !dbg !10944
  %156 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10945
  %heads207 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %156, i32 0, i32 24, !dbg !10946
  store i16 %155, i16* %heads207, align 2, !dbg !10947
  %157 = load i16*, i16** %id, align 8, !dbg !10948
  %arrayidx208 = getelementptr i16, i16* %157, i64 6, !dbg !10948
  %158 = load i16, i16* %arrayidx208, align 2, !dbg !10948
  %159 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10949
  %sectors209 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %159, i32 0, i32 25, !dbg !10950
  store i16 %158, i16* %sectors209, align 4, !dbg !10951
  %160 = load i16*, i16** %id, align 8, !dbg !10952
  %call210 = call zeroext i1 @ata_id_current_chs_valid(i16* %160) #12, !dbg !10954
  br i1 %call210, label %if.then211, label %if.end218, !dbg !10955

if.then211:                                       ; preds = %if.else203
  %161 = load i16*, i16** %id, align 8, !dbg !10956
  %arrayidx212 = getelementptr i16, i16* %161, i64 54, !dbg !10956
  %162 = load i16, i16* %arrayidx212, align 2, !dbg !10956
  %163 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10958
  %cylinders213 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %163, i32 0, i32 23, !dbg !10959
  store i16 %162, i16* %cylinders213, align 64, !dbg !10960
  %164 = load i16*, i16** %id, align 8, !dbg !10961
  %arrayidx214 = getelementptr i16, i16* %164, i64 55, !dbg !10961
  %165 = load i16, i16* %arrayidx214, align 2, !dbg !10961
  %166 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10962
  %heads215 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %166, i32 0, i32 24, !dbg !10963
  store i16 %165, i16* %heads215, align 2, !dbg !10964
  %167 = load i16*, i16** %id, align 8, !dbg !10965
  %arrayidx216 = getelementptr i16, i16* %167, i64 56, !dbg !10965
  %168 = load i16, i16* %arrayidx216, align 2, !dbg !10965
  %169 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10966
  %sectors217 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %169, i32 0, i32 25, !dbg !10967
  store i16 %168, i16* %sectors217, align 4, !dbg !10968
  br label %if.end218, !dbg !10969

if.end218:                                        ; preds = %if.then211, %if.else203
  %170 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10970
  %msg_enable219 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %170, i32 0, i32 38, !dbg !10970
  %171 = load i32, i32* %msg_enable219, align 4, !dbg !10970
  %and220 = and i32 %171, 1, !dbg !10970
  %tobool221 = icmp ne i32 %and220, 0, !dbg !10970
  br i1 %tobool221, label %land.lhs.true222, label %if.end237, !dbg !10972

land.lhs.true222:                                 ; preds = %if.end218
  %172 = load i32, i32* %print_info, align 4, !dbg !10973
  %tobool223 = icmp ne i32 %172, 0, !dbg !10973
  br i1 %tobool223, label %if.then224, label %if.end237, !dbg !10974

if.then224:                                       ; preds = %land.lhs.true222
  %173 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10975
  %arraydecay225 = getelementptr inbounds [7 x i8], [7 x i8]* %revbuf, i64 0, i64 0, !dbg !10975
  %arraydecay226 = getelementptr inbounds [41 x i8], [41 x i8]* %modelbuf, i64 0, i64 0, !dbg !10975
  %arraydecay227 = getelementptr inbounds [9 x i8], [9 x i8]* %fwrevbuf, i64 0, i64 0, !dbg !10975
  %174 = load i64, i64* %xfer_mask, align 8, !dbg !10975
  %call228 = call i8* @ata_mode_string(i64 %174) #12, !dbg !10975
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %173, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i64 0, i64 0), i8* %arraydecay225, i8* %arraydecay226, i8* %arraydecay227, i8* %call228) #12, !dbg !10975
  %175 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10977
  %176 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10977
  %n_sectors229 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %176, i32 0, i32 9, !dbg !10977
  %177 = load i64, i64* %n_sectors229, align 16, !dbg !10977
  %178 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10977
  %multi_count230 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %178, i32 0, i32 17, !dbg !10977
  %179 = load i32, i32* %multi_count230, align 8, !dbg !10977
  %180 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10977
  %cylinders231 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %180, i32 0, i32 23, !dbg !10977
  %181 = load i16, i16* %cylinders231, align 64, !dbg !10977
  %conv232 = zext i16 %181 to i32, !dbg !10977
  %182 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10977
  %heads233 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %182, i32 0, i32 24, !dbg !10977
  %183 = load i16, i16* %heads233, align 2, !dbg !10977
  %conv234 = zext i16 %183 to i32, !dbg !10977
  %184 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10977
  %sectors235 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %184, i32 0, i32 25, !dbg !10977
  %185 = load i16, i16* %sectors235, align 4, !dbg !10977
  %conv236 = zext i16 %185 to i32, !dbg !10977
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %175, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.61, i64 0, i64 0), i64 %177, i32 %179, i32 %conv232, i32 %conv234, i32 %conv236) #12, !dbg !10977
  br label %if.end237, !dbg !10978

if.end237:                                        ; preds = %if.then224, %land.lhs.true222, %if.end218
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.end202
  %186 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10979
  %187 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %186, i32 0, i32 27, !dbg !10979
  %id239 = bitcast %union.anon.83* %187 to [256 x i16]*, !dbg !10979
  %arrayidx240 = getelementptr [256 x i16], [256 x i16]* %id239, i64 0, i64 78, !dbg !10979
  %188 = load i16, i16* %arrayidx240, align 4, !dbg !10979
  %conv241 = zext i16 %188 to i32, !dbg !10979
  %and242 = and i32 %conv241, 256, !dbg !10979
  %tobool243 = icmp ne i32 %and242, 0, !dbg !10979
  br i1 %tobool243, label %if.then244, label %if.end259, !dbg !10981

if.then244:                                       ; preds = %if.end238
  call void @llvm.dbg.declare(metadata i8** %sata_setting, metadata !10982, metadata !DIExpression()), !dbg !10984
  %189 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10985
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %189, i32 0, i32 52, !dbg !10986
  %arraydecay245 = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !10985
  store i8* %arraydecay245, i8** %sata_setting, align 8, !dbg !10984
  call void @llvm.dbg.declare(metadata i32* %i246, metadata !10987, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10989, metadata !DIExpression()), !dbg !10990
  %190 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10991
  %flags247 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %190, i32 0, i32 3, !dbg !10992
  %191 = load i64, i64* %flags247, align 16, !dbg !10993
  %or248 = or i64 %191, 134217728, !dbg !10993
  store i64 %or248, i64* %flags247, align 16, !dbg !10993
  %192 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10994
  %193 = load i8*, i8** %sata_setting, align 8, !dbg !10995
  %call249 = call i32 @ata_read_log_page(%struct.ata_device* %192, i8 zeroext 48, i8 zeroext 8, i8* %193, i32 1) #12, !dbg !10996
  store i32 %call249, i32* %err_mask, align 4, !dbg !10997
  %194 = load i32, i32* %err_mask, align 4, !dbg !10998
  %tobool250 = icmp ne i32 %194, 0, !dbg !10998
  br i1 %tobool250, label %if.then251, label %if.else252, !dbg !11000

if.then251:                                       ; preds = %if.then244
  %195 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11001
  %196 = load i32, i32* %err_mask, align 4, !dbg !11001
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %195, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.62, i64 0, i64 0), i32 %196) #12, !dbg !11001
  br label %if.end258, !dbg !11001

if.else252:                                       ; preds = %if.then244
  store i32 0, i32* %i246, align 4, !dbg !11002
  br label %for.cond, !dbg !11004

for.cond:                                         ; preds = %for.inc, %if.else252
  %197 = load i32, i32* %i246, align 4, !dbg !11005
  %cmp253 = icmp slt i32 %197, 8, !dbg !11007
  br i1 %cmp253, label %for.body, label %for.end, !dbg !11008

for.body:                                         ; preds = %for.cond
  %198 = load i32, i32* %i246, align 4, !dbg !11009
  %add = add i32 48, %198, !dbg !11011
  store i32 %add, i32* %j, align 4, !dbg !11012
  %199 = load i8*, i8** %sata_setting, align 8, !dbg !11013
  %200 = load i32, i32* %j, align 4, !dbg !11014
  %idxprom = sext i32 %200 to i64, !dbg !11013
  %arrayidx255 = getelementptr i8, i8* %199, i64 %idxprom, !dbg !11013
  %201 = load i8, i8* %arrayidx255, align 1, !dbg !11013
  %202 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11015
  %devslp_timing = getelementptr inbounds %struct.ata_device, %struct.ata_device* %202, i32 0, i32 28, !dbg !11016
  %203 = load i32, i32* %i246, align 4, !dbg !11017
  %idxprom256 = sext i32 %203 to i64, !dbg !11015
  %arrayidx257 = getelementptr [8 x i8], [8 x i8]* %devslp_timing, i64 0, i64 %idxprom256, !dbg !11015
  store i8 %201, i8* %arrayidx257, align 1, !dbg !11018
  br label %for.inc, !dbg !11019

for.inc:                                          ; preds = %for.body
  %204 = load i32, i32* %i246, align 4, !dbg !11020
  %inc = add i32 %204, 1, !dbg !11020
  store i32 %inc, i32* %i246, align 4, !dbg !11020
  br label %for.cond, !dbg !11021, !llvm.loop !11022

for.end:                                          ; preds = %for.cond
  br label %if.end258

if.end258:                                        ; preds = %for.end, %if.then251
  br label %if.end259, !dbg !11024

if.end259:                                        ; preds = %if.end258, %if.end238
  %205 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11025
  call void @ata_dev_config_sense_reporting(%struct.ata_device* %205) #12, !dbg !11026
  %206 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11027
  call void @ata_dev_config_zac(%struct.ata_device* %206) #12, !dbg !11028
  %207 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11029
  call void @ata_dev_config_trusted(%struct.ata_device* %207) #12, !dbg !11030
  %208 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11031
  %cdb_len260 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %208, i32 0, i32 19, !dbg !11032
  store i32 32, i32* %cdb_len260, align 32, !dbg !11033
  br label %if.end360, !dbg !11034

if.else261:                                       ; preds = %lor.lhs.false103
  %209 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11035
  %class262 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %209, i32 0, i32 11, !dbg !11037
  %210 = load i32, i32* %class262, align 64, !dbg !11037
  %cmp263 = icmp eq i32 %210, 3, !dbg !11038
  br i1 %cmp263, label %if.then265, label %if.end359, !dbg !11039

if.then265:                                       ; preds = %if.else261
  call void @llvm.dbg.declare(metadata i8** %cdb_intr_string, metadata !11040, metadata !DIExpression()), !dbg !11042
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %cdb_intr_string, align 8, !dbg !11042
  call void @llvm.dbg.declare(metadata i8** %atapi_an_string, metadata !11043, metadata !DIExpression()), !dbg !11044
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %atapi_an_string, align 8, !dbg !11044
  call void @llvm.dbg.declare(metadata i8** %dma_dir_string, metadata !11045, metadata !DIExpression()), !dbg !11046
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %dma_dir_string, align 8, !dbg !11046
  call void @llvm.dbg.declare(metadata i32* %sntf, metadata !11047, metadata !DIExpression()), !dbg !11048
  %211 = load i16*, i16** %id, align 8, !dbg !11049
  %call266 = call i32 @atapi_cdb_len(i16* %211) #12, !dbg !11050
  store i32 %call266, i32* %rc, align 4, !dbg !11051
  %212 = load i32, i32* %rc, align 4, !dbg !11052
  %cmp267 = icmp slt i32 %212, 12, !dbg !11054
  br i1 %cmp267, label %if.then272, label %lor.lhs.false269, !dbg !11055

lor.lhs.false269:                                 ; preds = %if.then265
  %213 = load i32, i32* %rc, align 4, !dbg !11056
  %cmp270 = icmp sgt i32 %213, 16, !dbg !11057
  br i1 %cmp270, label %if.then272, label %if.end278, !dbg !11058

if.then272:                                       ; preds = %lor.lhs.false269, %if.then265
  %214 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11059
  %msg_enable273 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %214, i32 0, i32 38, !dbg !11059
  %215 = load i32, i32* %msg_enable273, align 4, !dbg !11059
  %and274 = and i32 %215, 8, !dbg !11059
  %tobool275 = icmp ne i32 %and274, 0, !dbg !11059
  br i1 %tobool275, label %if.then276, label %if.end277, !dbg !11062

if.then276:                                       ; preds = %if.then272
  %216 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11063
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %216, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !11063
  br label %if.end277, !dbg !11063

if.end277:                                        ; preds = %if.then276, %if.then272
  store i32 -22, i32* %rc, align 4, !dbg !11064
  br label %err_out_nosup, !dbg !11065

if.end278:                                        ; preds = %lor.lhs.false269
  %217 = load i32, i32* %rc, align 4, !dbg !11066
  %218 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11067
  %cdb_len279 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %218, i32 0, i32 19, !dbg !11068
  store i32 %217, i32* %cdb_len279, align 32, !dbg !11069
  %219 = load i32, i32* @atapi_an, align 4, !dbg !11070
  %tobool280 = icmp ne i32 %219, 0, !dbg !11070
  br i1 %tobool280, label %land.lhs.true281, label %if.end315, !dbg !11072

land.lhs.true281:                                 ; preds = %if.end278
  %220 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11073
  %flags282 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %220, i32 0, i32 3, !dbg !11074
  %221 = load i64, i64* %flags282, align 8, !dbg !11074
  %and283 = and i64 %221, 262144, !dbg !11075
  %tobool284 = icmp ne i64 %and283, 0, !dbg !11075
  br i1 %tobool284, label %land.lhs.true285, label %if.end315, !dbg !11076

land.lhs.true285:                                 ; preds = %land.lhs.true281
  %222 = load i16*, i16** %id, align 8, !dbg !11077
  %arrayidx286 = getelementptr i16, i16* %222, i64 76, !dbg !11077
  %223 = load i16, i16* %arrayidx286, align 2, !dbg !11077
  %conv287 = zext i16 %223 to i32, !dbg !11077
  %cmp288 = icmp ne i32 %conv287, 0, !dbg !11077
  br i1 %cmp288, label %land.lhs.true290, label %if.end315, !dbg !11077

land.lhs.true290:                                 ; preds = %land.lhs.true285
  %224 = load i16*, i16** %id, align 8, !dbg !11077
  %arrayidx291 = getelementptr i16, i16* %224, i64 76, !dbg !11077
  %225 = load i16, i16* %arrayidx291, align 2, !dbg !11077
  %conv292 = zext i16 %225 to i32, !dbg !11077
  %cmp293 = icmp ne i32 %conv292, 65535, !dbg !11077
  br i1 %cmp293, label %land.lhs.true295, label %if.end315, !dbg !11077

land.lhs.true295:                                 ; preds = %land.lhs.true290
  %226 = load i16*, i16** %id, align 8, !dbg !11077
  %arrayidx296 = getelementptr i16, i16* %226, i64 78, !dbg !11077
  %227 = load i16, i16* %arrayidx296, align 2, !dbg !11077
  %conv297 = zext i16 %227 to i32, !dbg !11077
  %and298 = and i32 %conv297, 32, !dbg !11077
  %tobool299 = icmp ne i32 %and298, 0, !dbg !11077
  br i1 %tobool299, label %land.lhs.true300, label %if.end315, !dbg !11078

land.lhs.true300:                                 ; preds = %land.lhs.true295
  %228 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11079
  %call301 = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %228) #12, !dbg !11080
  br i1 %call301, label %lor.lhs.false302, label %if.then307, !dbg !11081

lor.lhs.false302:                                 ; preds = %land.lhs.true300
  %229 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11082
  %link303 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %229, i32 0, i32 25, !dbg !11083
  %call304 = call i32 @sata_scr_read(%struct.ata_link* %link303, i32 4, i32* %sntf) #12, !dbg !11084
  %cmp305 = icmp eq i32 %call304, 0, !dbg !11085
  br i1 %cmp305, label %if.then307, label %if.end315, !dbg !11086

if.then307:                                       ; preds = %lor.lhs.false302, %land.lhs.true300
  %230 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11087
  %call308 = call i32 @ata_dev_set_feature(%struct.ata_device* %230, i8 zeroext 16, i8 zeroext 5) #12, !dbg !11089
  store i32 %call308, i32* %err_mask, align 4, !dbg !11090
  %231 = load i32, i32* %err_mask, align 4, !dbg !11091
  %tobool309 = icmp ne i32 %231, 0, !dbg !11091
  br i1 %tobool309, label %if.then310, label %if.else311, !dbg !11093

if.then310:                                       ; preds = %if.then307
  %232 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11094
  %233 = load i32, i32* %err_mask, align 4, !dbg !11094
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %232, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.65, i64 0, i64 0), i32 %233) #12, !dbg !11094
  br label %if.end314, !dbg !11094

if.else311:                                       ; preds = %if.then307
  %234 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11095
  %flags312 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %234, i32 0, i32 3, !dbg !11097
  %235 = load i64, i64* %flags312, align 16, !dbg !11098
  %or313 = or i64 %235, 128, !dbg !11098
  store i64 %or313, i64* %flags312, align 16, !dbg !11098
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0), i8** %atapi_an_string, align 8, !dbg !11099
  br label %if.end314

if.end314:                                        ; preds = %if.else311, %if.then310
  br label %if.end315, !dbg !11100

if.end315:                                        ; preds = %if.end314, %lor.lhs.false302, %land.lhs.true295, %land.lhs.true290, %land.lhs.true285, %land.lhs.true281, %if.end278
  %236 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11101
  %237 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %236, i32 0, i32 27, !dbg !11101
  %id316 = bitcast %union.anon.83* %237 to [256 x i16]*, !dbg !11101
  %arrayidx317 = getelementptr [256 x i16], [256 x i16]* %id316, i64 0, i64 0, !dbg !11101
  %238 = load i16, i16* %arrayidx317, align 64, !dbg !11101
  %conv318 = zext i16 %238 to i32, !dbg !11101
  %and319 = and i32 %conv318, 96, !dbg !11101
  %cmp320 = icmp eq i32 %and319, 32, !dbg !11101
  br i1 %cmp320, label %if.then322, label %if.end325, !dbg !11103

if.then322:                                       ; preds = %if.end315
  %239 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11104
  %flags323 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %239, i32 0, i32 3, !dbg !11106
  %240 = load i64, i64* %flags323, align 16, !dbg !11107
  %or324 = or i64 %240, 4, !dbg !11107
  store i64 %or324, i64* %flags323, align 16, !dbg !11107
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.67, i64 0, i64 0), i8** %cdb_intr_string, align 8, !dbg !11108
  br label %if.end325, !dbg !11109

if.end325:                                        ; preds = %if.then322, %if.end315
  %241 = load i32, i32* @atapi_dmadir, align 4, !dbg !11110
  %tobool326 = icmp ne i32 %241, 0, !dbg !11110
  br i1 %tobool326, label %if.then336, label %lor.lhs.false327, !dbg !11112

lor.lhs.false327:                                 ; preds = %if.end325
  %242 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11113
  %horkage328 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %242, i32 0, i32 2, !dbg !11114
  %243 = load i32, i32* %horkage328, align 4, !dbg !11114
  %and329 = and i32 %243, 262144, !dbg !11115
  %tobool330 = icmp ne i32 %and329, 0, !dbg !11115
  br i1 %tobool330, label %if.then336, label %lor.lhs.false331, !dbg !11116

lor.lhs.false331:                                 ; preds = %lor.lhs.false327
  %244 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11117
  %245 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %244, i32 0, i32 27, !dbg !11118
  %id332 = bitcast %union.anon.83* %245 to [256 x i16]*, !dbg !11118
  %arraydecay333 = getelementptr inbounds [256 x i16], [256 x i16]* %id332, i64 0, i64 0, !dbg !11117
  %call334 = call zeroext i1 @atapi_id_dmadir(i16* %arraydecay333) #12, !dbg !11119
  br i1 %call334, label %if.then336, label %if.end339, !dbg !11120

if.then336:                                       ; preds = %lor.lhs.false331, %lor.lhs.false327, %if.end325
  %246 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11121
  %flags337 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %246, i32 0, i32 3, !dbg !11123
  %247 = load i64, i64* %flags337, align 16, !dbg !11124
  %or338 = or i64 %247, 1024, !dbg !11124
  store i64 %or338, i64* %flags337, align 16, !dbg !11124
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i64 0, i64 0), i8** %dma_dir_string, align 8, !dbg !11125
  br label %if.end339, !dbg !11126

if.end339:                                        ; preds = %if.then336, %lor.lhs.false331
  %248 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11127
  %249 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %248, i32 0, i32 27, !dbg !11127
  %id340 = bitcast %union.anon.83* %249 to [256 x i16]*, !dbg !11127
  %arrayidx341 = getelementptr [256 x i16], [256 x i16]* %id340, i64 0, i64 77, !dbg !11127
  %250 = load i16, i16* %arrayidx341, align 2, !dbg !11127
  %conv342 = zext i16 %250 to i32, !dbg !11127
  %and343 = and i32 %conv342, 16, !dbg !11127
  %tobool344 = icmp ne i32 %and343, 0, !dbg !11127
  br i1 %tobool344, label %if.then345, label %if.end348, !dbg !11129

if.then345:                                       ; preds = %if.end339
  %251 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11130
  %flags346 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %251, i32 0, i32 3, !dbg !11132
  %252 = load i64, i64* %flags346, align 16, !dbg !11133
  %or347 = or i64 %252, 67108864, !dbg !11133
  store i64 %or347, i64* %flags346, align 16, !dbg !11133
  %253 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11134
  call void @zpodd_init(%struct.ata_device* %253) #12, !dbg !11135
  br label %if.end348, !dbg !11136

if.end348:                                        ; preds = %if.then345, %if.end339
  %254 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11137
  %msg_enable349 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %254, i32 0, i32 38, !dbg !11137
  %255 = load i32, i32* %msg_enable349, align 4, !dbg !11137
  %and350 = and i32 %255, 1, !dbg !11137
  %tobool351 = icmp ne i32 %and350, 0, !dbg !11137
  br i1 %tobool351, label %land.lhs.true352, label %if.end358, !dbg !11139

land.lhs.true352:                                 ; preds = %if.end348
  %256 = load i32, i32* %print_info, align 4, !dbg !11140
  %tobool353 = icmp ne i32 %256, 0, !dbg !11140
  br i1 %tobool353, label %if.then354, label %if.end358, !dbg !11141

if.then354:                                       ; preds = %land.lhs.true352
  %257 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11142
  %arraydecay355 = getelementptr inbounds [41 x i8], [41 x i8]* %modelbuf, i64 0, i64 0, !dbg !11142
  %arraydecay356 = getelementptr inbounds [9 x i8], [9 x i8]* %fwrevbuf, i64 0, i64 0, !dbg !11142
  %258 = load i64, i64* %xfer_mask, align 8, !dbg !11142
  %call357 = call i8* @ata_mode_string(i64 %258) #12, !dbg !11142
  %259 = load i8*, i8** %cdb_intr_string, align 8, !dbg !11142
  %260 = load i8*, i8** %atapi_an_string, align 8, !dbg !11142
  %261 = load i8*, i8** %dma_dir_string, align 8, !dbg !11142
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %257, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i64 0, i64 0), i8* %arraydecay355, i8* %arraydecay356, i8* %call357, i8* %259, i8* %260, i8* %261) #12, !dbg !11142
  br label %if.end358, !dbg !11142

if.end358:                                        ; preds = %if.then354, %land.lhs.true352, %if.end348
  br label %if.end359, !dbg !11143

if.end359:                                        ; preds = %if.end358, %if.else261
  br label %if.end360

if.end360:                                        ; preds = %if.end359, %if.end259
  %262 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11144
  %max_sectors361 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %262, i32 0, i32 18, !dbg !11145
  store i32 256, i32* %max_sectors361, align 4, !dbg !11146
  %263 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11147
  %flags362 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %263, i32 0, i32 3, !dbg !11149
  %264 = load i64, i64* %flags362, align 16, !dbg !11149
  %and363 = and i64 %264, 2, !dbg !11150
  %tobool364 = icmp ne i64 %and363, 0, !dbg !11150
  br i1 %tobool364, label %if.then365, label %if.end367, !dbg !11151

if.then365:                                       ; preds = %if.end360
  %265 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11152
  %max_sectors366 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %265, i32 0, i32 18, !dbg !11153
  store i32 65535, i32* %max_sectors366, align 4, !dbg !11154
  br label %if.end367, !dbg !11152

if.end367:                                        ; preds = %if.then365, %if.end360
  %266 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11155
  %call368 = call zeroext i8 @ata_dev_knobble(%struct.ata_device* %266) #12, !dbg !11157
  %tobool369 = icmp ne i8 %call368, 0, !dbg !11157
  br i1 %tobool369, label %if.then370, label %if.end380, !dbg !11158

if.then370:                                       ; preds = %if.end367
  %267 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11159
  %msg_enable371 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %267, i32 0, i32 38, !dbg !11159
  %268 = load i32, i32* %msg_enable371, align 4, !dbg !11159
  %and372 = and i32 %268, 1, !dbg !11159
  %tobool373 = icmp ne i32 %and372, 0, !dbg !11159
  br i1 %tobool373, label %land.lhs.true374, label %if.end377, !dbg !11162

land.lhs.true374:                                 ; preds = %if.then370
  %269 = load i32, i32* %print_info, align 4, !dbg !11163
  %tobool375 = icmp ne i32 %269, 0, !dbg !11163
  br i1 %tobool375, label %if.then376, label %if.end377, !dbg !11164

if.then376:                                       ; preds = %land.lhs.true374
  %270 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11165
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %270, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i64 0, i64 0)) #12, !dbg !11165
  br label %if.end377, !dbg !11165

if.end377:                                        ; preds = %if.then376, %land.lhs.true374, %if.then370
  %271 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11166
  %udma_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %271, i32 0, i32 22, !dbg !11167
  %272 = load i64, i64* %udma_mask, align 8, !dbg !11168
  %and378 = and i64 %272, 63, !dbg !11168
  store i64 %and378, i64* %udma_mask, align 8, !dbg !11168
  %273 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11169
  %max_sectors379 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %273, i32 0, i32 18, !dbg !11170
  store i32 256, i32* %max_sectors379, align 4, !dbg !11171
  br label %if.end380, !dbg !11172

if.end380:                                        ; preds = %if.end377, %if.end367
  %274 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11173
  %class381 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %274, i32 0, i32 11, !dbg !11175
  %275 = load i32, i32* %class381, align 64, !dbg !11175
  %cmp382 = icmp eq i32 %275, 3, !dbg !11176
  br i1 %cmp382, label %land.lhs.true384, label %if.end392, !dbg !11177

land.lhs.true384:                                 ; preds = %if.end380
  %276 = load i16*, i16** %id, align 8, !dbg !11178
  %call385 = call i32 @atapi_command_packet_set(i16* %276) #12, !dbg !11179
  %cmp386 = icmp eq i32 %call385, 1, !dbg !11180
  br i1 %cmp386, label %if.then388, label %if.end392, !dbg !11181

if.then388:                                       ; preds = %land.lhs.true384
  %277 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11182
  %max_sectors389 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %277, i32 0, i32 18, !dbg !11184
  store i32 65535, i32* %max_sectors389, align 4, !dbg !11185
  %278 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11186
  %horkage390 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %278, i32 0, i32 2, !dbg !11187
  %279 = load i32, i32* %horkage390, align 4, !dbg !11188
  %or391 = or i32 %279, 512, !dbg !11188
  store i32 %or391, i32* %horkage390, align 4, !dbg !11188
  br label %if.end392, !dbg !11189

if.end392:                                        ; preds = %if.then388, %land.lhs.true384, %if.end380
  %280 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11190
  %horkage393 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %280, i32 0, i32 2, !dbg !11192
  %281 = load i32, i32* %horkage393, align 4, !dbg !11192
  %and394 = and i32 %281, 8, !dbg !11193
  %tobool395 = icmp ne i32 %and394, 0, !dbg !11193
  br i1 %tobool395, label %if.then396, label %if.end402, !dbg !11194

if.then396:                                       ; preds = %if.end392
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x344, metadata !11195, metadata !DIExpression()), !dbg !11197
  store i32 128, i32* %__UNIQUE_ID___x344, align 4, !dbg !11197
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y345, metadata !11198, metadata !DIExpression()), !dbg !11197
  %282 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11197
  %max_sectors397 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %282, i32 0, i32 18, !dbg !11197
  %283 = load i32, i32* %max_sectors397, align 4, !dbg !11197
  store i32 %283, i32* %__UNIQUE_ID___y345, align 4, !dbg !11197
  %284 = load i32, i32* %__UNIQUE_ID___x344, align 4, !dbg !11197
  %285 = load i32, i32* %__UNIQUE_ID___y345, align 4, !dbg !11197
  %cmp398 = icmp ult i32 %284, %285, !dbg !11197
  br i1 %cmp398, label %cond.true, label %cond.false, !dbg !11197

cond.true:                                        ; preds = %if.then396
  %286 = load i32, i32* %__UNIQUE_ID___x344, align 4, !dbg !11197
  br label %cond.end, !dbg !11197

cond.false:                                       ; preds = %if.then396
  %287 = load i32, i32* %__UNIQUE_ID___y345, align 4, !dbg !11197
  br label %cond.end, !dbg !11197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond400 = phi i32 [ %286, %cond.true ], [ %287, %cond.false ], !dbg !11197
  store i32 %cond400, i32* %tmp, align 4, !dbg !11197
  %288 = load i32, i32* %tmp, align 4, !dbg !11197
  %289 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11199
  %max_sectors401 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %289, i32 0, i32 18, !dbg !11200
  store i32 %288, i32* %max_sectors401, align 4, !dbg !11201
  br label %if.end402, !dbg !11199

if.end402:                                        ; preds = %cond.end, %if.end392
  %290 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11202
  %horkage403 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %290, i32 0, i32 2, !dbg !11204
  %291 = load i32, i32* %horkage403, align 4, !dbg !11204
  %and404 = and i32 %291, 33554432, !dbg !11205
  %tobool405 = icmp ne i32 %and404, 0, !dbg !11205
  br i1 %tobool405, label %if.then406, label %if.end416, !dbg !11206

if.then406:                                       ; preds = %if.end402
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x346, metadata !11207, metadata !DIExpression()), !dbg !11209
  store i32 1024, i32* %__UNIQUE_ID___x346, align 4, !dbg !11209
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y347, metadata !11210, metadata !DIExpression()), !dbg !11209
  %292 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11209
  %max_sectors407 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %292, i32 0, i32 18, !dbg !11209
  %293 = load i32, i32* %max_sectors407, align 4, !dbg !11209
  store i32 %293, i32* %__UNIQUE_ID___y347, align 4, !dbg !11209
  %294 = load i32, i32* %__UNIQUE_ID___x346, align 4, !dbg !11209
  %295 = load i32, i32* %__UNIQUE_ID___y347, align 4, !dbg !11209
  %cmp409 = icmp ult i32 %294, %295, !dbg !11209
  br i1 %cmp409, label %cond.true411, label %cond.false412, !dbg !11209

cond.true411:                                     ; preds = %if.then406
  %296 = load i32, i32* %__UNIQUE_ID___x346, align 4, !dbg !11209
  br label %cond.end413, !dbg !11209

cond.false412:                                    ; preds = %if.then406
  %297 = load i32, i32* %__UNIQUE_ID___y347, align 4, !dbg !11209
  br label %cond.end413, !dbg !11209

cond.end413:                                      ; preds = %cond.false412, %cond.true411
  %cond414 = phi i32 [ %296, %cond.true411 ], [ %297, %cond.false412 ], !dbg !11209
  store i32 %cond414, i32* %tmp408, align 4, !dbg !11209
  %298 = load i32, i32* %tmp408, align 4, !dbg !11209
  %299 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11211
  %max_sectors415 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %299, i32 0, i32 18, !dbg !11212
  store i32 %298, i32* %max_sectors415, align 4, !dbg !11213
  br label %if.end416, !dbg !11211

if.end416:                                        ; preds = %cond.end413, %if.end402
  %300 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11214
  %horkage417 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %300, i32 0, i32 2, !dbg !11216
  %301 = load i32, i32* %horkage417, align 4, !dbg !11216
  %and418 = and i32 %301, 131072, !dbg !11217
  %tobool419 = icmp ne i32 %and418, 0, !dbg !11217
  br i1 %tobool419, label %if.then420, label %if.end422, !dbg !11218

if.then420:                                       ; preds = %if.end416
  %302 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11219
  %max_sectors421 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %302, i32 0, i32 18, !dbg !11220
  store i32 65535, i32* %max_sectors421, align 4, !dbg !11221
  br label %if.end422, !dbg !11219

if.end422:                                        ; preds = %if.then420, %if.end416
  %303 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11222
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %303, i32 0, i32 1, !dbg !11224
  %304 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !11224
  %dev_config = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %304, i32 0, i32 11, !dbg !11225
  %305 = load void (%struct.ata_device*)*, void (%struct.ata_device*)** %dev_config, align 8, !dbg !11225
  %tobool423 = icmp ne void (%struct.ata_device*)* %305, null, !dbg !11222
  br i1 %tobool423, label %if.then424, label %if.end427, !dbg !11226

if.then424:                                       ; preds = %if.end422
  %306 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11227
  %ops425 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %306, i32 0, i32 1, !dbg !11228
  %307 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops425, align 8, !dbg !11228
  %dev_config426 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %307, i32 0, i32 11, !dbg !11229
  %308 = load void (%struct.ata_device*)*, void (%struct.ata_device*)** %dev_config426, align 8, !dbg !11229
  %309 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11230
  call void %308(%struct.ata_device* %309) #12, !dbg !11227
  br label %if.end427, !dbg !11227

if.end427:                                        ; preds = %if.then424, %if.end422
  %310 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11231
  %horkage428 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %310, i32 0, i32 2, !dbg !11233
  %311 = load i32, i32* %horkage428, align 4, !dbg !11233
  %and429 = and i32 %311, 1, !dbg !11234
  %tobool430 = icmp ne i32 %and429, 0, !dbg !11234
  br i1 %tobool430, label %if.then431, label %if.end435, !dbg !11235

if.then431:                                       ; preds = %if.end427
  %312 = load i32, i32* %print_info, align 4, !dbg !11236
  %tobool432 = icmp ne i32 %312, 0, !dbg !11236
  br i1 %tobool432, label %if.then433, label %if.end434, !dbg !11239

if.then433:                                       ; preds = %if.then431
  %313 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11240
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %313, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !11240
  %314 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11242
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %314, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.72, i64 0, i64 0)) #12, !dbg !11242
  br label %if.end434, !dbg !11243

if.end434:                                        ; preds = %if.then433, %if.then431
  br label %if.end435, !dbg !11244

if.end435:                                        ; preds = %if.end434, %if.end427
  %315 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11245
  %horkage436 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %315, i32 0, i32 2, !dbg !11247
  %316 = load i32, i32* %horkage436, align 4, !dbg !11247
  %and437 = and i32 %316, 4096, !dbg !11248
  %tobool438 = icmp ne i32 %and437, 0, !dbg !11248
  br i1 %tobool438, label %land.lhs.true439, label %if.end442, !dbg !11249

land.lhs.true439:                                 ; preds = %if.end435
  %317 = load i32, i32* %print_info, align 4, !dbg !11250
  %tobool440 = icmp ne i32 %317, 0, !dbg !11250
  br i1 %tobool440, label %if.then441, label %if.end442, !dbg !11251

if.then441:                                       ; preds = %land.lhs.true439
  %318 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11252
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %318, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.73, i64 0, i64 0)) #12, !dbg !11252
  %319 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11254
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %319, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.74, i64 0, i64 0)) #12, !dbg !11254
  br label %if.end442, !dbg !11255

if.end442:                                        ; preds = %if.then441, %land.lhs.true439, %if.end435
  store i32 0, i32* %retval, align 4, !dbg !11256
  br label %return, !dbg !11256

err_out_nosup:                                    ; preds = %if.end277
  call void @llvm.dbg.label(metadata !11257), !dbg !11258
  %320 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11259
  %msg_enable443 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %320, i32 0, i32 38, !dbg !11259
  %321 = load i32, i32* %msg_enable443, align 4, !dbg !11259
  %and444 = and i32 %321, 4, !dbg !11259
  %tobool445 = icmp ne i32 %and444, 0, !dbg !11259
  br i1 %tobool445, label %if.then446, label %if.end447, !dbg !11261

if.then446:                                       ; preds = %err_out_nosup
  %322 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11262
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %322, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.ata_dev_configure, i64 0, i64 0)) #12, !dbg !11262
  br label %if.end447, !dbg !11262

if.end447:                                        ; preds = %if.then446, %err_out_nosup
  %323 = load i32, i32* %rc, align 4, !dbg !11263
  store i32 %323, i32* %retval, align 4, !dbg !11264
  br label %return, !dbg !11264

return:                                           ; preds = %if.end447, %if.end442, %if.then187, %if.then63, %if.then59, %if.then29, %if.then24, %if.then16, %if.then
  %324 = load i32, i32* %retval, align 4, !dbg !11265
  ret i32 %324, !dbg !11265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_dev_blacklisted(%struct.ata_device* %dev) #0 !dbg !11266 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %model_num = alloca [41 x i8], align 16
  %model_rev = alloca [9 x i8], align 1
  %ad = alloca %struct.ata_blacklist_entry*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11269, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.declare(metadata [41 x i8]* %model_num, metadata !11271, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.declare(metadata [9 x i8]* %model_rev, metadata !11274, metadata !DIExpression()), !dbg !11276
  call void @llvm.dbg.declare(metadata %struct.ata_blacklist_entry** %ad, metadata !11277, metadata !DIExpression()), !dbg !11279
  store %struct.ata_blacklist_entry* getelementptr inbounds ([112 x %struct.ata_blacklist_entry], [112 x %struct.ata_blacklist_entry]* @ata_device_blacklist, i64 0, i64 0), %struct.ata_blacklist_entry** %ad, align 8, !dbg !11279
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11280
  %1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 27, !dbg !11281
  %id = bitcast %union.anon.83* %1 to [256 x i16]*, !dbg !11281
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !11280
  %arraydecay1 = getelementptr inbounds [41 x i8], [41 x i8]* %model_num, i64 0, i64 0, !dbg !11282
  call void @ata_id_c_string(i16* %arraydecay, i8* %arraydecay1, i32 27, i32 41) #12, !dbg !11283
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11284
  %3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 27, !dbg !11285
  %id2 = bitcast %union.anon.83* %3 to [256 x i16]*, !dbg !11285
  %arraydecay3 = getelementptr inbounds [256 x i16], [256 x i16]* %id2, i64 0, i64 0, !dbg !11284
  %arraydecay4 = getelementptr inbounds [9 x i8], [9 x i8]* %model_rev, i64 0, i64 0, !dbg !11286
  call void @ata_id_c_string(i16* %arraydecay3, i8* %arraydecay4, i32 23, i32 9) #12, !dbg !11287
  br label %while.cond, !dbg !11288

while.cond:                                       ; preds = %if.end16, %entry
  %4 = load %struct.ata_blacklist_entry*, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11289
  %model_num5 = getelementptr inbounds %struct.ata_blacklist_entry, %struct.ata_blacklist_entry* %4, i32 0, i32 0, !dbg !11290
  %5 = load i8*, i8** %model_num5, align 8, !dbg !11290
  %tobool = icmp ne i8* %5, null, !dbg !11288
  br i1 %tobool, label %while.body, label %while.end, !dbg !11288

while.body:                                       ; preds = %while.cond
  %6 = load %struct.ata_blacklist_entry*, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11291
  %model_num6 = getelementptr inbounds %struct.ata_blacklist_entry, %struct.ata_blacklist_entry* %6, i32 0, i32 0, !dbg !11294
  %7 = load i8*, i8** %model_num6, align 8, !dbg !11294
  %arraydecay7 = getelementptr inbounds [41 x i8], [41 x i8]* %model_num, i64 0, i64 0, !dbg !11295
  %call = call zeroext i1 @glob_match(i8* %7, i8* %arraydecay7) #16, !dbg !11296
  br i1 %call, label %if.then, label %if.end16, !dbg !11297

if.then:                                          ; preds = %while.body
  %8 = load %struct.ata_blacklist_entry*, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11298
  %model_rev8 = getelementptr inbounds %struct.ata_blacklist_entry, %struct.ata_blacklist_entry* %8, i32 0, i32 1, !dbg !11301
  %9 = load i8*, i8** %model_rev8, align 8, !dbg !11301
  %cmp = icmp eq i8* %9, null, !dbg !11302
  br i1 %cmp, label %if.then9, label %if.end, !dbg !11303

if.then9:                                         ; preds = %if.then
  %10 = load %struct.ata_blacklist_entry*, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11304
  %horkage = getelementptr inbounds %struct.ata_blacklist_entry, %struct.ata_blacklist_entry* %10, i32 0, i32 2, !dbg !11305
  %11 = load i64, i64* %horkage, align 8, !dbg !11305
  store i64 %11, i64* %retval, align 8, !dbg !11306
  br label %return, !dbg !11306

if.end:                                           ; preds = %if.then
  %12 = load %struct.ata_blacklist_entry*, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11307
  %model_rev10 = getelementptr inbounds %struct.ata_blacklist_entry, %struct.ata_blacklist_entry* %12, i32 0, i32 1, !dbg !11309
  %13 = load i8*, i8** %model_rev10, align 8, !dbg !11309
  %arraydecay11 = getelementptr inbounds [9 x i8], [9 x i8]* %model_rev, i64 0, i64 0, !dbg !11310
  %call12 = call zeroext i1 @glob_match(i8* %13, i8* %arraydecay11) #16, !dbg !11311
  br i1 %call12, label %if.then13, label %if.end15, !dbg !11312

if.then13:                                        ; preds = %if.end
  %14 = load %struct.ata_blacklist_entry*, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11313
  %horkage14 = getelementptr inbounds %struct.ata_blacklist_entry, %struct.ata_blacklist_entry* %14, i32 0, i32 2, !dbg !11314
  %15 = load i64, i64* %horkage14, align 8, !dbg !11314
  store i64 %15, i64* %retval, align 8, !dbg !11315
  br label %return, !dbg !11315

if.end15:                                         ; preds = %if.end
  br label %if.end16, !dbg !11316

if.end16:                                         ; preds = %if.end15, %while.body
  %16 = load %struct.ata_blacklist_entry*, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11317
  %incdec.ptr = getelementptr %struct.ata_blacklist_entry, %struct.ata_blacklist_entry* %16, i32 1, !dbg !11317
  store %struct.ata_blacklist_entry* %incdec.ptr, %struct.ata_blacklist_entry** %ad, align 8, !dbg !11317
  br label %while.cond, !dbg !11288, !llvm.loop !11318

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %retval, align 8, !dbg !11320
  br label %return, !dbg !11320

return:                                           ; preds = %while.end, %if.then13, %if.then9
  %17 = load i64, i64* %retval, align 8, !dbg !11321
  ret i64 %17, !dbg !11321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_force_horkage(%struct.ata_device* %dev) #0 !dbg !11322 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %devno = alloca i32, align 4
  %alt_devno = alloca i32, align 4
  %i = alloca i32, align 4
  %fe = alloca %struct.ata_force_ent*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.declare(metadata i32* %devno, metadata !11325, metadata !DIExpression()), !dbg !11326
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11327
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !11328
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !11328
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 1, !dbg !11329
  %2 = load i32, i32* %pmp, align 8, !dbg !11329
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11330
  %devno1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 1, !dbg !11331
  %4 = load i32, i32* %devno1, align 8, !dbg !11331
  %add = add i32 %2, %4, !dbg !11332
  store i32 %add, i32* %devno, align 4, !dbg !11326
  call void @llvm.dbg.declare(metadata i32* %alt_devno, metadata !11333, metadata !DIExpression()), !dbg !11334
  %5 = load i32, i32* %devno, align 4, !dbg !11335
  store i32 %5, i32* %alt_devno, align 4, !dbg !11334
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11336, metadata !DIExpression()), !dbg !11337
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11338
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 0, !dbg !11340
  %7 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !11340
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %7) #12, !dbg !11341
  br i1 %call, label %if.then, label %if.end, !dbg !11342

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %alt_devno, align 4, !dbg !11343
  %add3 = add i32 %8, 15, !dbg !11343
  store i32 %add3, i32* %alt_devno, align 4, !dbg !11343
  br label %if.end, !dbg !11344

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !11345
  br label %for.cond, !dbg !11347

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !11348
  %10 = load i32, i32* @ata_force_tbl_size, align 4, !dbg !11350
  %cmp = icmp slt i32 %9, %10, !dbg !11351
  br i1 %cmp, label %for.body, label %for.end, !dbg !11352

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_force_ent** %fe, metadata !11353, metadata !DIExpression()), !dbg !11355
  %11 = load %struct.ata_force_ent*, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !11356
  %12 = load i32, i32* %i, align 4, !dbg !11357
  %idxprom = sext i32 %12 to i64, !dbg !11356
  %arrayidx = getelementptr %struct.ata_force_ent, %struct.ata_force_ent* %11, i64 %idxprom, !dbg !11356
  store %struct.ata_force_ent* %arrayidx, %struct.ata_force_ent** %fe, align 8, !dbg !11355
  %13 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11358
  %port = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %13, i32 0, i32 0, !dbg !11360
  %14 = load i32, i32* %port, align 8, !dbg !11360
  %cmp4 = icmp ne i32 %14, -1, !dbg !11361
  br i1 %cmp4, label %land.lhs.true, label %if.end9, !dbg !11362

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11363
  %port5 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %15, i32 0, i32 0, !dbg !11364
  %16 = load i32, i32* %port5, align 8, !dbg !11364
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11365
  %link6 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 0, !dbg !11366
  %18 = load %struct.ata_link*, %struct.ata_link** %link6, align 64, !dbg !11366
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %18, i32 0, i32 0, !dbg !11367
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11367
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 5, !dbg !11368
  %20 = load i32, i32* %print_id, align 4, !dbg !11368
  %cmp7 = icmp ne i32 %16, %20, !dbg !11369
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11370

if.then8:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !11371

if.end9:                                          ; preds = %land.lhs.true, %for.body
  %21 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11372
  %device = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %21, i32 0, i32 1, !dbg !11374
  %22 = load i32, i32* %device, align 4, !dbg !11374
  %cmp10 = icmp ne i32 %22, -1, !dbg !11375
  br i1 %cmp10, label %land.lhs.true11, label %if.end18, !dbg !11376

land.lhs.true11:                                  ; preds = %if.end9
  %23 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11377
  %device12 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %23, i32 0, i32 1, !dbg !11378
  %24 = load i32, i32* %device12, align 4, !dbg !11378
  %25 = load i32, i32* %devno, align 4, !dbg !11379
  %cmp13 = icmp ne i32 %24, %25, !dbg !11380
  br i1 %cmp13, label %land.lhs.true14, label %if.end18, !dbg !11381

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %26 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11382
  %device15 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %26, i32 0, i32 1, !dbg !11383
  %27 = load i32, i32* %device15, align 4, !dbg !11383
  %28 = load i32, i32* %alt_devno, align 4, !dbg !11384
  %cmp16 = icmp ne i32 %27, %28, !dbg !11385
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !11386

if.then17:                                        ; preds = %land.lhs.true14
  br label %for.inc, !dbg !11387

if.end18:                                         ; preds = %land.lhs.true14, %land.lhs.true11, %if.end9
  %29 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11388
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %29, i32 0, i32 2, !dbg !11390
  %30 = load i32, i32* %horkage, align 4, !dbg !11390
  %neg = xor i32 %30, -1, !dbg !11391
  %31 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11392
  %param = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %31, i32 0, i32 2, !dbg !11393
  %horkage_on = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param, i32 0, i32 4, !dbg !11394
  %32 = load i32, i32* %horkage_on, align 8, !dbg !11394
  %and = and i32 %neg, %32, !dbg !11395
  %tobool = icmp ne i32 %and, 0, !dbg !11395
  br i1 %tobool, label %if.end25, label %land.lhs.true19, !dbg !11396

land.lhs.true19:                                  ; preds = %if.end18
  %33 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11397
  %horkage20 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 2, !dbg !11398
  %34 = load i32, i32* %horkage20, align 4, !dbg !11398
  %35 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11399
  %param21 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %35, i32 0, i32 2, !dbg !11400
  %horkage_off = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param21, i32 0, i32 5, !dbg !11401
  %36 = load i32, i32* %horkage_off, align 4, !dbg !11401
  %and22 = and i32 %34, %36, !dbg !11402
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11402
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !11403

if.then24:                                        ; preds = %land.lhs.true19
  br label %for.inc, !dbg !11404

if.end25:                                         ; preds = %land.lhs.true19, %if.end18
  %37 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11405
  %param26 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %37, i32 0, i32 2, !dbg !11406
  %horkage_on27 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param26, i32 0, i32 4, !dbg !11407
  %38 = load i32, i32* %horkage_on27, align 8, !dbg !11407
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11408
  %horkage28 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 2, !dbg !11409
  %40 = load i32, i32* %horkage28, align 4, !dbg !11410
  %or = or i32 %40, %38, !dbg !11410
  store i32 %or, i32* %horkage28, align 4, !dbg !11410
  %41 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11411
  %param29 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %41, i32 0, i32 2, !dbg !11412
  %horkage_off30 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param29, i32 0, i32 5, !dbg !11413
  %42 = load i32, i32* %horkage_off30, align 4, !dbg !11413
  %neg31 = xor i32 %42, -1, !dbg !11414
  %43 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11415
  %horkage32 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %43, i32 0, i32 2, !dbg !11416
  %44 = load i32, i32* %horkage32, align 4, !dbg !11417
  %and33 = and i32 %44, %neg31, !dbg !11417
  store i32 %and33, i32* %horkage32, align 4, !dbg !11417
  %45 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11418
  %46 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !11418
  %param34 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %46, i32 0, i32 2, !dbg !11418
  %name = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param34, i32 0, i32 0, !dbg !11418
  %47 = load i8*, i8** %name, align 8, !dbg !11418
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.107, i64 0, i64 0), i8* %47) #12, !dbg !11418
  br label %for.inc, !dbg !11419

for.inc:                                          ; preds = %if.end25, %if.then24, %if.then17, %if.then8
  %48 = load i32, i32* %i, align 4, !dbg !11420
  %inc = add i32 %48, 1, !dbg !11420
  store i32 %inc, i32* %i, align 4, !dbg !11420
  br label %for.cond, !dbg !11421, !llvm.loop !11422

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11424
}

; Function Attrs: noredzone
declare dso_local void @ata_dev_disable(%struct.ata_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_do_link_spd_horkage(%struct.ata_device* %dev) #0 !dbg !11425 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %plink = alloca %struct.ata_link*, align 8
  %target = alloca i32, align 4
  %target_limit = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11426, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.declare(metadata %struct.ata_link** %plink, metadata !11428, metadata !DIExpression()), !dbg !11429
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11430
  %call = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %0) #12, !dbg !11431
  store %struct.ata_link* %call, %struct.ata_link** %plink, align 8, !dbg !11429
  call void @llvm.dbg.declare(metadata i32* %target, metadata !11432, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.declare(metadata i32* %target_limit, metadata !11434, metadata !DIExpression()), !dbg !11435
  %1 = load %struct.ata_link*, %struct.ata_link** %plink, align 8, !dbg !11436
  %call1 = call i32 @sata_scr_valid(%struct.ata_link* %1) #12, !dbg !11438
  %tobool = icmp ne i32 %call1, 0, !dbg !11438
  br i1 %tobool, label %if.end, label %if.then, !dbg !11439

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11440
  br label %return, !dbg !11440

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11441
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 2, !dbg !11443
  %3 = load i32, i32* %horkage, align 4, !dbg !11443
  %and = and i32 %3, 8192, !dbg !11444
  %tobool2 = icmp ne i32 %and, 0, !dbg !11444
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !11445

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %target, align 4, !dbg !11446
  br label %if.end4, !dbg !11447

if.else:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11448
  br label %return, !dbg !11448

if.end4:                                          ; preds = %if.then3
  %4 = load i32, i32* %target, align 4, !dbg !11449
  %shl = shl i32 1, %4, !dbg !11450
  %sub = sub i32 %shl, 1, !dbg !11451
  store i32 %sub, i32* %target_limit, align 4, !dbg !11452
  %5 = load %struct.ata_link*, %struct.ata_link** %plink, align 8, !dbg !11453
  %sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 8, !dbg !11455
  %6 = load i32, i32* %sata_spd_limit, align 4, !dbg !11455
  %7 = load i32, i32* %target_limit, align 4, !dbg !11456
  %cmp = icmp ule i32 %6, %7, !dbg !11457
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !11458

if.then5:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !11459
  br label %return, !dbg !11459

if.end6:                                          ; preds = %if.end4
  %8 = load i32, i32* %target_limit, align 4, !dbg !11460
  %9 = load %struct.ata_link*, %struct.ata_link** %plink, align 8, !dbg !11461
  %sata_spd_limit7 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %9, i32 0, i32 8, !dbg !11462
  store i32 %8, i32* %sata_spd_limit7, align 4, !dbg !11463
  %10 = load %struct.ata_link*, %struct.ata_link** %plink, align 8, !dbg !11464
  %sata_spd = getelementptr inbounds %struct.ata_link, %struct.ata_link* %10, i32 0, i32 9, !dbg !11466
  %11 = load i32, i32* %sata_spd, align 32, !dbg !11466
  %12 = load i32, i32* %target, align 4, !dbg !11467
  %cmp8 = icmp ugt i32 %11, %12, !dbg !11468
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !11469

if.then9:                                         ; preds = %if.end6
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11470
  %14 = load i32, i32* %target, align 4, !dbg !11470
  %call10 = call i8* @sata_spd_string(i32 %14) #12, !dbg !11470
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i64 0, i64 0), i8* %call10) #12, !dbg !11470
  store i32 -11, i32* %retval, align 4, !dbg !11472
  br label %return, !dbg !11472

if.end11:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !11473
  br label %return, !dbg !11473

return:                                           ; preds = %if.end11, %if.then9, %if.then5, %if.else, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !11474
  ret i32 %15, !dbg !11474
}

; Function Attrs: noredzone
declare dso_local i32 @ata_acpi_on_devcfg(%struct.ata_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_hpa_resize(%struct.ata_device* %dev) #0 !dbg !11475 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %print_info = alloca i32, align 4
  %unlock_hpa = alloca i8, align 1
  %sectors = alloca i64, align 8
  %native_sectors = alloca i64, align 8
  %rc = alloca i32, align 4
  %new_sectors = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11476, metadata !DIExpression()), !dbg !11477
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !11478, metadata !DIExpression()), !dbg !11479
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11480
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !11481
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !11481
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 12, !dbg !11482
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !11479
  call void @llvm.dbg.declare(metadata i32* %print_info, metadata !11483, metadata !DIExpression()), !dbg !11484
  %2 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11485
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %2, i32 0, i32 0, !dbg !11486
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !11487
  %3 = load i32, i32* %flags, align 4, !dbg !11487
  %and = and i32 %3, 262144, !dbg !11488
  store i32 %and, i32* %print_info, align 4, !dbg !11484
  call void @llvm.dbg.declare(metadata i8* %unlock_hpa, metadata !11489, metadata !DIExpression()), !dbg !11490
  %4 = load i32, i32* @ata_ignore_hpa, align 4, !dbg !11491
  %tobool = icmp ne i32 %4, 0, !dbg !11491
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !11492

lor.rhs:                                          ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11493
  %flags1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 3, !dbg !11494
  %6 = load i64, i64* %flags1, align 16, !dbg !11494
  %and2 = and i64 %6, 262144, !dbg !11495
  %tobool3 = icmp ne i64 %and2, 0, !dbg !11492
  br label %lor.end, !dbg !11492

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %frombool = zext i1 %7 to i8, !dbg !11490
  store i8 %frombool, i8* %unlock_hpa, align 1, !dbg !11490
  call void @llvm.dbg.declare(metadata i64* %sectors, metadata !11496, metadata !DIExpression()), !dbg !11497
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11498
  %9 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 27, !dbg !11499
  %id = bitcast %union.anon.83* %9 to [256 x i16]*, !dbg !11499
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !11498
  %call = call i64 @ata_id_n_sectors(i16* %arraydecay) #12, !dbg !11500
  store i64 %call, i64* %sectors, align 8, !dbg !11497
  call void @llvm.dbg.declare(metadata i64* %native_sectors, metadata !11501, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11503, metadata !DIExpression()), !dbg !11504
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11505
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 11, !dbg !11507
  %11 = load i32, i32* %class, align 64, !dbg !11507
  %cmp = icmp ne i32 %11, 1, !dbg !11508
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !11509

land.lhs.true:                                    ; preds = %lor.end
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11510
  %class4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 11, !dbg !11511
  %13 = load i32, i32* %class4, align 64, !dbg !11511
  %cmp5 = icmp ne i32 %13, 9, !dbg !11512
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !11513

lor.lhs.false:                                    ; preds = %land.lhs.true, %lor.end
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11514
  %15 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 27, !dbg !11514
  %id6 = bitcast %union.anon.83* %15 to [256 x i16]*, !dbg !11514
  %arrayidx = getelementptr [256 x i16], [256 x i16]* %id6, i64 0, i64 49, !dbg !11514
  %16 = load i16, i16* %arrayidx, align 2, !dbg !11514
  %conv = zext i16 %16 to i32, !dbg !11514
  %and7 = and i32 %conv, 512, !dbg !11514
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11514
  br i1 %tobool8, label %lor.lhs.false9, label %if.then, !dbg !11515

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11516
  %18 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 27, !dbg !11517
  %id10 = bitcast %union.anon.83* %18 to [256 x i16]*, !dbg !11517
  %arraydecay11 = getelementptr inbounds [256 x i16], [256 x i16]* %id10, i64 0, i64 0, !dbg !11516
  %call12 = call zeroext i1 @ata_id_hpa_enabled(i16* %arraydecay11) #12, !dbg !11518
  br i1 %call12, label %lor.lhs.false13, label %if.then, !dbg !11519

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11520
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 2, !dbg !11521
  %20 = load i32, i32* %horkage, align 4, !dbg !11521
  %and14 = and i32 %20, 16, !dbg !11522
  %tobool15 = icmp ne i32 %and14, 0, !dbg !11522
  br i1 %tobool15, label %if.then, label %if.end, !dbg !11523

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11524
  br label %return, !dbg !11524

if.end:                                           ; preds = %lor.lhs.false13
  %21 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11525
  %call16 = call i32 @ata_read_native_max_address(%struct.ata_device* %21, i64* %native_sectors) #12, !dbg !11526
  store i32 %call16, i32* %rc, align 4, !dbg !11527
  %22 = load i32, i32* %rc, align 4, !dbg !11528
  %tobool17 = icmp ne i32 %22, 0, !dbg !11528
  br i1 %tobool17, label %if.then18, label %if.end30, !dbg !11530

if.then18:                                        ; preds = %if.end
  %23 = load i32, i32* %rc, align 4, !dbg !11531
  %cmp19 = icmp eq i32 %23, -13, !dbg !11534
  br i1 %cmp19, label %if.then23, label %lor.lhs.false21, !dbg !11535

lor.lhs.false21:                                  ; preds = %if.then18
  %24 = load i8, i8* %unlock_hpa, align 1, !dbg !11536
  %tobool22 = trunc i8 %24 to i1, !dbg !11536
  br i1 %tobool22, label %if.end29, label %if.then23, !dbg !11537

if.then23:                                        ; preds = %lor.lhs.false21, %if.then18
  %25 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11538
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.109, i64 0, i64 0)) #12, !dbg !11538
  %26 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11540
  %horkage24 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 2, !dbg !11541
  %27 = load i32, i32* %horkage24, align 4, !dbg !11542
  %or = or i32 %27, 16, !dbg !11542
  store i32 %or, i32* %horkage24, align 4, !dbg !11542
  %28 = load i32, i32* %rc, align 4, !dbg !11543
  %cmp25 = icmp eq i32 %28, -13, !dbg !11545
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11546

if.then27:                                        ; preds = %if.then23
  store i32 0, i32* %rc, align 4, !dbg !11547
  br label %if.end28, !dbg !11548

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !11549

if.end29:                                         ; preds = %if.end28, %lor.lhs.false21
  %29 = load i32, i32* %rc, align 4, !dbg !11550
  store i32 %29, i32* %retval, align 4, !dbg !11551
  br label %return, !dbg !11551

if.end30:                                         ; preds = %if.end
  %30 = load i64, i64* %native_sectors, align 8, !dbg !11552
  %31 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11553
  %n_native_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 10, !dbg !11554
  store i64 %30, i64* %n_native_sectors, align 8, !dbg !11555
  %32 = load i64, i64* %native_sectors, align 8, !dbg !11556
  %33 = load i64, i64* %sectors, align 8, !dbg !11558
  %cmp31 = icmp ule i64 %32, %33, !dbg !11559
  br i1 %cmp31, label %if.then35, label %lor.lhs.false33, !dbg !11560

lor.lhs.false33:                                  ; preds = %if.end30
  %34 = load i8, i8* %unlock_hpa, align 1, !dbg !11561
  %tobool34 = trunc i8 %34 to i1, !dbg !11561
  br i1 %tobool34, label %if.end50, label %if.then35, !dbg !11562

if.then35:                                        ; preds = %lor.lhs.false33, %if.end30
  %35 = load i32, i32* %print_info, align 4, !dbg !11563
  %tobool36 = icmp ne i32 %35, 0, !dbg !11563
  br i1 %tobool36, label %lor.lhs.false37, label %if.then40, !dbg !11566

lor.lhs.false37:                                  ; preds = %if.then35
  %36 = load i64, i64* %native_sectors, align 8, !dbg !11567
  %37 = load i64, i64* %sectors, align 8, !dbg !11568
  %cmp38 = icmp eq i64 %36, %37, !dbg !11569
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !11570

if.then40:                                        ; preds = %lor.lhs.false37, %if.then35
  store i32 0, i32* %retval, align 4, !dbg !11571
  br label %return, !dbg !11571

if.end41:                                         ; preds = %lor.lhs.false37
  %38 = load i64, i64* %native_sectors, align 8, !dbg !11572
  %39 = load i64, i64* %sectors, align 8, !dbg !11574
  %cmp42 = icmp ugt i64 %38, %39, !dbg !11575
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !11576

if.then44:                                        ; preds = %if.end41
  %40 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11577
  %41 = load i64, i64* %sectors, align 8, !dbg !11577
  %42 = load i64, i64* %native_sectors, align 8, !dbg !11577
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.110, i64 0, i64 0), i64 %41, i64 %42) #12, !dbg !11577
  br label %if.end49, !dbg !11577

if.else:                                          ; preds = %if.end41
  %43 = load i64, i64* %native_sectors, align 8, !dbg !11578
  %44 = load i64, i64* %sectors, align 8, !dbg !11580
  %cmp45 = icmp ult i64 %43, %44, !dbg !11581
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !11582

if.then47:                                        ; preds = %if.else
  %45 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11583
  %46 = load i64, i64* %native_sectors, align 8, !dbg !11583
  %47 = load i64, i64* %sectors, align 8, !dbg !11583
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.111, i64 0, i64 0), i64 %46, i64 %47) #12, !dbg !11583
  br label %if.end48, !dbg !11583

if.end48:                                         ; preds = %if.then47, %if.else
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then44
  store i32 0, i32* %retval, align 4, !dbg !11584
  br label %return, !dbg !11584

if.end50:                                         ; preds = %lor.lhs.false33
  %48 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11585
  %49 = load i64, i64* %native_sectors, align 8, !dbg !11586
  %call51 = call i32 @ata_set_max_sectors(%struct.ata_device* %48, i64 %49) #12, !dbg !11587
  store i32 %call51, i32* %rc, align 4, !dbg !11588
  %50 = load i32, i32* %rc, align 4, !dbg !11589
  %cmp52 = icmp eq i32 %50, -13, !dbg !11591
  br i1 %cmp52, label %if.then54, label %if.else57, !dbg !11592

if.then54:                                        ; preds = %if.end50
  %51 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11593
  %52 = load i64, i64* %sectors, align 8, !dbg !11593
  %53 = load i64, i64* %native_sectors, align 8, !dbg !11593
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.112, i64 0, i64 0), i64 %52, i64 %53) #12, !dbg !11593
  %54 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11595
  %horkage55 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %54, i32 0, i32 2, !dbg !11596
  %55 = load i32, i32* %horkage55, align 4, !dbg !11597
  %or56 = or i32 %55, 16, !dbg !11597
  store i32 %or56, i32* %horkage55, align 4, !dbg !11597
  store i32 0, i32* %retval, align 4, !dbg !11598
  br label %return, !dbg !11598

if.else57:                                        ; preds = %if.end50
  %56 = load i32, i32* %rc, align 4, !dbg !11599
  %tobool58 = icmp ne i32 %56, 0, !dbg !11599
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !11601

if.then59:                                        ; preds = %if.else57
  %57 = load i32, i32* %rc, align 4, !dbg !11602
  store i32 %57, i32* %retval, align 4, !dbg !11603
  br label %return, !dbg !11603

if.end60:                                         ; preds = %if.else57
  br label %if.end61

if.end61:                                         ; preds = %if.end60
  %58 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11604
  %call62 = call i32 @ata_dev_reread_id(%struct.ata_device* %58, i32 0) #12, !dbg !11605
  store i32 %call62, i32* %rc, align 4, !dbg !11606
  %59 = load i32, i32* %rc, align 4, !dbg !11607
  %tobool63 = icmp ne i32 %59, 0, !dbg !11607
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !11609

if.then64:                                        ; preds = %if.end61
  %60 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11610
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.113, i64 0, i64 0)) #12, !dbg !11610
  %61 = load i32, i32* %rc, align 4, !dbg !11612
  store i32 %61, i32* %retval, align 4, !dbg !11613
  br label %return, !dbg !11613

if.end65:                                         ; preds = %if.end61
  %62 = load i32, i32* %print_info, align 4, !dbg !11614
  %tobool66 = icmp ne i32 %62, 0, !dbg !11614
  br i1 %tobool66, label %if.then67, label %if.end71, !dbg !11616

if.then67:                                        ; preds = %if.end65
  call void @llvm.dbg.declare(metadata i64* %new_sectors, metadata !11617, metadata !DIExpression()), !dbg !11619
  %63 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11620
  %64 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %63, i32 0, i32 27, !dbg !11621
  %id68 = bitcast %union.anon.83* %64 to [256 x i16]*, !dbg !11621
  %arraydecay69 = getelementptr inbounds [256 x i16], [256 x i16]* %id68, i64 0, i64 0, !dbg !11620
  %call70 = call i64 @ata_id_n_sectors(i16* %arraydecay69) #12, !dbg !11622
  store i64 %call70, i64* %new_sectors, align 8, !dbg !11619
  %65 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11623
  %66 = load i64, i64* %sectors, align 8, !dbg !11623
  %67 = load i64, i64* %new_sectors, align 8, !dbg !11623
  %68 = load i64, i64* %native_sectors, align 8, !dbg !11623
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.114, i64 0, i64 0), i64 %66, i64 %67, i64 %68) #12, !dbg !11623
  br label %if.end71, !dbg !11624

if.end71:                                         ; preds = %if.then67, %if.end65
  store i32 0, i32* %retval, align 4, !dbg !11625
  br label %return, !dbg !11625

return:                                           ; preds = %if.end71, %if.then64, %if.then59, %if.then54, %if.end49, %if.then40, %if.end29, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !11626
  ret i32 %69, !dbg !11626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dump_id(i16* %id) #0 !dbg !11627 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  ret void, !dbg !11632
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_tpm(i16* %id) #0 !dbg !11633 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !11634, metadata !DIExpression()), !dbg !11635
  %0 = load i16*, i16** %id.addr, align 8, !dbg !11636
  %call = call i32 @ata_id_major_version(i16* %0) #12, !dbg !11638
  %cmp = icmp ult i32 %call, 8, !dbg !11639
  br i1 %cmp, label %if.then, label %if.end, !dbg !11640

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11641
  br label %return, !dbg !11641

if.end:                                           ; preds = %entry
  %1 = load i16*, i16** %id.addr, align 8, !dbg !11642
  %arrayidx = getelementptr i16, i16* %1, i64 48, !dbg !11642
  %2 = load i16, i16* %arrayidx, align 2, !dbg !11642
  %conv = zext i16 %2 to i32, !dbg !11642
  %and = and i32 %conv, 49152, !dbg !11644
  %cmp1 = icmp ne i32 %and, 16384, !dbg !11645
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !11646

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11647
  br label %return, !dbg !11647

if.end4:                                          ; preds = %if.end
  %3 = load i16*, i16** %id.addr, align 8, !dbg !11648
  %arrayidx5 = getelementptr i16, i16* %3, i64 48, !dbg !11648
  %4 = load i16, i16* %arrayidx5, align 2, !dbg !11648
  %conv6 = zext i16 %4 to i32, !dbg !11648
  %and7 = and i32 %conv6, 1, !dbg !11649
  %tobool = icmp ne i32 %and7, 0, !dbg !11648
  store i1 %tobool, i1* %retval, align 1, !dbg !11650
  br label %return, !dbg !11650

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !11651
  ret i1 %5, !dbg !11651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_id_n_sectors(i16* %id) #0 !dbg !11652 {
entry:
  %retval = alloca i64, align 8
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !11655, metadata !DIExpression()), !dbg !11656
  %0 = load i16*, i16** %id.addr, align 8, !dbg !11657
  %arrayidx = getelementptr i16, i16* %0, i64 49, !dbg !11657
  %1 = load i16, i16* %arrayidx, align 2, !dbg !11657
  %conv = zext i16 %1 to i32, !dbg !11657
  %and = and i32 %conv, 512, !dbg !11657
  %tobool = icmp ne i32 %and, 0, !dbg !11657
  br i1 %tobool, label %if.then, label %if.else21, !dbg !11659

if.then:                                          ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !11660
  %call = call zeroext i1 @ata_id_has_lba48(i16* %2) #12, !dbg !11663
  br i1 %call, label %if.then1, label %if.else, !dbg !11664

if.then1:                                         ; preds = %if.then
  %3 = load i16*, i16** %id.addr, align 8, !dbg !11665
  %arrayidx2 = getelementptr i16, i16* %3, i64 103, !dbg !11665
  %4 = load i16, i16* %arrayidx2, align 2, !dbg !11665
  %conv3 = zext i16 %4 to i64, !dbg !11665
  %shl = shl i64 %conv3, 48, !dbg !11665
  %5 = load i16*, i16** %id.addr, align 8, !dbg !11665
  %arrayidx4 = getelementptr i16, i16* %5, i64 102, !dbg !11665
  %6 = load i16, i16* %arrayidx4, align 2, !dbg !11665
  %conv5 = zext i16 %6 to i64, !dbg !11665
  %shl6 = shl i64 %conv5, 32, !dbg !11665
  %or = or i64 %shl, %shl6, !dbg !11665
  %7 = load i16*, i16** %id.addr, align 8, !dbg !11665
  %arrayidx7 = getelementptr i16, i16* %7, i64 101, !dbg !11665
  %8 = load i16, i16* %arrayidx7, align 2, !dbg !11665
  %conv8 = zext i16 %8 to i64, !dbg !11665
  %shl9 = shl i64 %conv8, 16, !dbg !11665
  %or10 = or i64 %or, %shl9, !dbg !11665
  %9 = load i16*, i16** %id.addr, align 8, !dbg !11665
  %arrayidx11 = getelementptr i16, i16* %9, i64 100, !dbg !11665
  %10 = load i16, i16* %arrayidx11, align 2, !dbg !11665
  %conv12 = zext i16 %10 to i64, !dbg !11665
  %or13 = or i64 %or10, %conv12, !dbg !11665
  store i64 %or13, i64* %retval, align 8, !dbg !11666
  br label %return, !dbg !11666

if.else:                                          ; preds = %if.then
  %11 = load i16*, i16** %id.addr, align 8, !dbg !11667
  %arrayidx14 = getelementptr i16, i16* %11, i64 61, !dbg !11667
  %12 = load i16, i16* %arrayidx14, align 2, !dbg !11667
  %conv15 = zext i16 %12 to i32, !dbg !11667
  %shl16 = shl i32 %conv15, 16, !dbg !11667
  %13 = load i16*, i16** %id.addr, align 8, !dbg !11667
  %arrayidx17 = getelementptr i16, i16* %13, i64 60, !dbg !11667
  %14 = load i16, i16* %arrayidx17, align 2, !dbg !11667
  %conv18 = zext i16 %14 to i32, !dbg !11667
  %or19 = or i32 %shl16, %conv18, !dbg !11667
  %conv20 = zext i32 %or19 to i64, !dbg !11667
  store i64 %conv20, i64* %retval, align 8, !dbg !11668
  br label %return, !dbg !11668

if.else21:                                        ; preds = %entry
  %15 = load i16*, i16** %id.addr, align 8, !dbg !11669
  %call22 = call zeroext i1 @ata_id_current_chs_valid(i16* %15) #12, !dbg !11672
  br i1 %call22, label %if.then23, label %if.else32, !dbg !11673

if.then23:                                        ; preds = %if.else21
  %16 = load i16*, i16** %id.addr, align 8, !dbg !11674
  %arrayidx24 = getelementptr i16, i16* %16, i64 54, !dbg !11674
  %17 = load i16, i16* %arrayidx24, align 2, !dbg !11674
  %conv25 = zext i16 %17 to i32, !dbg !11674
  %18 = load i16*, i16** %id.addr, align 8, !dbg !11675
  %arrayidx26 = getelementptr i16, i16* %18, i64 55, !dbg !11675
  %19 = load i16, i16* %arrayidx26, align 2, !dbg !11675
  %conv27 = zext i16 %19 to i32, !dbg !11675
  %mul = mul i32 %conv25, %conv27, !dbg !11676
  %20 = load i16*, i16** %id.addr, align 8, !dbg !11677
  %arrayidx28 = getelementptr i16, i16* %20, i64 56, !dbg !11677
  %21 = load i16, i16* %arrayidx28, align 2, !dbg !11677
  %conv29 = zext i16 %21 to i32, !dbg !11677
  %mul30 = mul i32 %mul, %conv29, !dbg !11678
  %conv31 = sext i32 %mul30 to i64, !dbg !11674
  store i64 %conv31, i64* %retval, align 8, !dbg !11679
  br label %return, !dbg !11679

if.else32:                                        ; preds = %if.else21
  %22 = load i16*, i16** %id.addr, align 8, !dbg !11680
  %arrayidx33 = getelementptr i16, i16* %22, i64 1, !dbg !11680
  %23 = load i16, i16* %arrayidx33, align 2, !dbg !11680
  %conv34 = zext i16 %23 to i32, !dbg !11680
  %24 = load i16*, i16** %id.addr, align 8, !dbg !11681
  %arrayidx35 = getelementptr i16, i16* %24, i64 3, !dbg !11681
  %25 = load i16, i16* %arrayidx35, align 2, !dbg !11681
  %conv36 = zext i16 %25 to i32, !dbg !11681
  %mul37 = mul i32 %conv34, %conv36, !dbg !11682
  %26 = load i16*, i16** %id.addr, align 8, !dbg !11683
  %arrayidx38 = getelementptr i16, i16* %26, i64 6, !dbg !11683
  %27 = load i16, i16* %arrayidx38, align 2, !dbg !11683
  %conv39 = zext i16 %27 to i32, !dbg !11683
  %mul40 = mul i32 %mul37, %conv39, !dbg !11684
  %conv41 = sext i32 %mul40 to i64, !dbg !11680
  store i64 %conv41, i64* %retval, align 8, !dbg !11685
  br label %return, !dbg !11685

return:                                           ; preds = %if.else32, %if.then23, %if.else, %if.then1
  %28 = load i64, i64* %retval, align 8, !dbg !11686
  ret i64 %28, !dbg !11686
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i1 @is_power_of_2(i64 %n) #4 !dbg !11687 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11691, metadata !DIExpression()), !dbg !11692
  %0 = load i64, i64* %n.addr, align 8, !dbg !11693
  %cmp = icmp ne i64 %0, 0, !dbg !11694
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11695

land.rhs:                                         ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !11696
  %2 = load i64, i64* %n.addr, align 8, !dbg !11697
  %sub = sub i64 %2, 1, !dbg !11698
  %and = and i64 %1, %sub, !dbg !11699
  %cmp1 = icmp eq i64 %and, 0, !dbg !11700
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !11701
  ret i1 %3, !dbg !11702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_lba48(i16* %id) #0 !dbg !11703 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !11704, metadata !DIExpression()), !dbg !11705
  %0 = load i16*, i16** %id.addr, align 8, !dbg !11706
  %arrayidx = getelementptr i16, i16* %0, i64 83, !dbg !11706
  %1 = load i16, i16* %arrayidx, align 2, !dbg !11706
  %conv = zext i16 %1 to i32, !dbg !11706
  %and = and i32 %conv, 49152, !dbg !11708
  %cmp = icmp ne i32 %and, 16384, !dbg !11709
  br i1 %cmp, label %if.then, label %if.end, !dbg !11710

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11711
  br label %return, !dbg !11711

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !11712
  %arrayidx2 = getelementptr i16, i16* %2, i64 103, !dbg !11712
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !11712
  %conv3 = zext i16 %3 to i64, !dbg !11712
  %shl = shl i64 %conv3, 48, !dbg !11712
  %4 = load i16*, i16** %id.addr, align 8, !dbg !11712
  %arrayidx4 = getelementptr i16, i16* %4, i64 102, !dbg !11712
  %5 = load i16, i16* %arrayidx4, align 2, !dbg !11712
  %conv5 = zext i16 %5 to i64, !dbg !11712
  %shl6 = shl i64 %conv5, 32, !dbg !11712
  %or = or i64 %shl, %shl6, !dbg !11712
  %6 = load i16*, i16** %id.addr, align 8, !dbg !11712
  %arrayidx7 = getelementptr i16, i16* %6, i64 101, !dbg !11712
  %7 = load i16, i16* %arrayidx7, align 2, !dbg !11712
  %conv8 = zext i16 %7 to i64, !dbg !11712
  %shl9 = shl i64 %conv8, 16, !dbg !11712
  %or10 = or i64 %or, %shl9, !dbg !11712
  %8 = load i16*, i16** %id.addr, align 8, !dbg !11712
  %arrayidx11 = getelementptr i16, i16* %8, i64 100, !dbg !11712
  %9 = load i16, i16* %arrayidx11, align 2, !dbg !11712
  %conv12 = zext i16 %9 to i64, !dbg !11712
  %or13 = or i64 %or10, %conv12, !dbg !11712
  %tobool = icmp ne i64 %or13, 0, !dbg !11712
  br i1 %tobool, label %if.end15, label %if.then14, !dbg !11714

if.then14:                                        ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11715
  br label %return, !dbg !11715

if.end15:                                         ; preds = %if.end
  %10 = load i16*, i16** %id.addr, align 8, !dbg !11716
  %arrayidx16 = getelementptr i16, i16* %10, i64 83, !dbg !11716
  %11 = load i16, i16* %arrayidx16, align 2, !dbg !11716
  %conv17 = zext i16 %11 to i32, !dbg !11716
  %and18 = and i32 %conv17, 1024, !dbg !11717
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11716
  store i1 %tobool19, i1* %retval, align 1, !dbg !11718
  br label %return, !dbg !11718

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !11719
  ret i1 %12, !dbg !11719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_flush_ext(i16* %id) #0 !dbg !11720 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !11721, metadata !DIExpression()), !dbg !11722
  %0 = load i16*, i16** %id.addr, align 8, !dbg !11723
  %arrayidx = getelementptr i16, i16* %0, i64 83, !dbg !11723
  %1 = load i16, i16* %arrayidx, align 2, !dbg !11723
  %conv = zext i16 %1 to i32, !dbg !11723
  %and = and i32 %conv, 49152, !dbg !11725
  %cmp = icmp ne i32 %and, 16384, !dbg !11726
  br i1 %cmp, label %if.then, label %if.end, !dbg !11727

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11728
  br label %return, !dbg !11728

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !11729
  %arrayidx2 = getelementptr i16, i16* %2, i64 83, !dbg !11729
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !11729
  %conv3 = zext i16 %3 to i32, !dbg !11729
  %and4 = and i32 %conv3, 8192, !dbg !11730
  %tobool = icmp ne i32 %and4, 0, !dbg !11729
  store i1 %tobool, i1* %retval, align 1, !dbg !11731
  br label %return, !dbg !11731

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !11732
  ret i1 %4, !dbg !11732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_config_ncq(%struct.ata_device* %dev, i8* %desc, i64 %desc_sz) #0 !dbg !11733 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %desc.addr = alloca i8*, align 8
  %desc_sz.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %hdepth = alloca i32, align 4
  %ddepth = alloca i32, align 4
  %err_mask = alloca i32, align 4
  %aa_desc = alloca i8*, align 8
  %__UNIQUE_ID___x342 = alloca i32, align 4
  %__UNIQUE_ID___y343 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11736, metadata !DIExpression()), !dbg !11737
  store i8* %desc, i8** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %desc.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  store i64 %desc_sz, i64* %desc_sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %desc_sz.addr, metadata !11740, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11742, metadata !DIExpression()), !dbg !11743
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11744
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !11745
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !11745
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !11746
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !11746
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !11743
  call void @llvm.dbg.declare(metadata i32* %hdepth, metadata !11747, metadata !DIExpression()), !dbg !11748
  store i32 0, i32* %hdepth, align 4, !dbg !11748
  call void @llvm.dbg.declare(metadata i32* %ddepth, metadata !11749, metadata !DIExpression()), !dbg !11750
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11751
  %4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 27, !dbg !11751
  %id = bitcast %union.anon.83* %4 to [256 x i16]*, !dbg !11751
  %arrayidx = getelementptr [256 x i16], [256 x i16]* %id, i64 0, i64 75, !dbg !11751
  %5 = load i16, i16* %arrayidx, align 2, !dbg !11751
  %conv = zext i16 %5 to i32, !dbg !11751
  %and = and i32 %conv, 31, !dbg !11751
  %add = add i32 %and, 1, !dbg !11751
  store i32 %add, i32* %ddepth, align 4, !dbg !11750
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !11752, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.declare(metadata i8** %aa_desc, metadata !11754, metadata !DIExpression()), !dbg !11755
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %aa_desc, align 8, !dbg !11755
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11756
  %7 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 27, !dbg !11756
  %id2 = bitcast %union.anon.83* %7 to [256 x i16]*, !dbg !11756
  %arrayidx3 = getelementptr [256 x i16], [256 x i16]* %id2, i64 0, i64 76, !dbg !11756
  %8 = load i16, i16* %arrayidx3, align 8, !dbg !11756
  %conv4 = zext i16 %8 to i32, !dbg !11756
  %and5 = and i32 %conv4, 256, !dbg !11756
  %tobool = icmp ne i32 %and5, 0, !dbg !11756
  br i1 %tobool, label %if.end, label %if.then, !dbg !11758

if.then:                                          ; preds = %entry
  %9 = load i8*, i8** %desc.addr, align 8, !dbg !11759
  %arrayidx6 = getelementptr i8, i8* %9, i64 0, !dbg !11759
  store i8 0, i8* %arrayidx6, align 1, !dbg !11761
  store i32 0, i32* %retval, align 4, !dbg !11762
  br label %return, !dbg !11762

if.end:                                           ; preds = %entry
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11763
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 2, !dbg !11765
  %11 = load i32, i32* %horkage, align 4, !dbg !11765
  %and7 = and i32 %11, 4, !dbg !11766
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11766
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !11767

if.then9:                                         ; preds = %if.end
  %12 = load i8*, i8** %desc.addr, align 8, !dbg !11768
  %13 = load i64, i64* %desc_sz.addr, align 8, !dbg !11770
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.117, i64 0, i64 0)) #12, !dbg !11771
  store i32 0, i32* %retval, align 4, !dbg !11772
  br label %return, !dbg !11772

if.end10:                                         ; preds = %if.end
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11773
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 3, !dbg !11775
  %15 = load i64, i64* %flags, align 8, !dbg !11775
  %and11 = and i64 %15, 1024, !dbg !11776
  %tobool12 = icmp ne i64 %and11, 0, !dbg !11776
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !11777

if.then13:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x342, metadata !11778, metadata !DIExpression()), !dbg !11781
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11781
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 0, !dbg !11781
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !11781
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %17, i32 0, i32 25, !dbg !11781
  %18 = load i32, i32* %can_queue, align 4, !dbg !11781
  store i32 %18, i32* %__UNIQUE_ID___x342, align 4, !dbg !11781
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y343, metadata !11782, metadata !DIExpression()), !dbg !11781
  store i32 32, i32* %__UNIQUE_ID___y343, align 4, !dbg !11781
  %19 = load i32, i32* %__UNIQUE_ID___x342, align 4, !dbg !11781
  %20 = load i32, i32* %__UNIQUE_ID___y343, align 4, !dbg !11781
  %cmp = icmp slt i32 %19, %20, !dbg !11781
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11781

cond.true:                                        ; preds = %if.then13
  %21 = load i32, i32* %__UNIQUE_ID___x342, align 4, !dbg !11781
  br label %cond.end, !dbg !11781

cond.false:                                       ; preds = %if.then13
  %22 = load i32, i32* %__UNIQUE_ID___y343, align 4, !dbg !11781
  br label %cond.end, !dbg !11781

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %22, %cond.false ], !dbg !11781
  store i32 %cond, i32* %tmp, align 4, !dbg !11781
  %23 = load i32, i32* %tmp, align 4, !dbg !11781
  store i32 %23, i32* %hdepth, align 4, !dbg !11783
  %24 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11784
  %flags15 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %24, i32 0, i32 3, !dbg !11785
  %25 = load i64, i64* %flags15, align 16, !dbg !11786
  %or = or i64 %25, 8, !dbg !11786
  store i64 %or, i64* %flags15, align 16, !dbg !11786
  br label %if.end16, !dbg !11787

if.end16:                                         ; preds = %cond.end, %if.end10
  %26 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11788
  %horkage17 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 2, !dbg !11790
  %27 = load i32, i32* %horkage17, align 4, !dbg !11790
  %and18 = and i32 %27, 32768, !dbg !11791
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11791
  br i1 %tobool19, label %if.end52, label %land.lhs.true, !dbg !11792

land.lhs.true:                                    ; preds = %if.end16
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11793
  %flags20 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 3, !dbg !11794
  %29 = load i64, i64* %flags20, align 8, !dbg !11794
  %and21 = and i64 %29, 16384, !dbg !11795
  %tobool22 = icmp ne i64 %and21, 0, !dbg !11795
  br i1 %tobool22, label %land.lhs.true23, label %if.end52, !dbg !11796

land.lhs.true23:                                  ; preds = %land.lhs.true
  %30 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11797
  %31 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %30, i32 0, i32 27, !dbg !11797
  %id24 = bitcast %union.anon.83* %31 to [256 x i16]*, !dbg !11797
  %arrayidx25 = getelementptr [256 x i16], [256 x i16]* %id24, i64 0, i64 76, !dbg !11797
  %32 = load i16, i16* %arrayidx25, align 8, !dbg !11797
  %conv26 = zext i16 %32 to i32, !dbg !11797
  %cmp27 = icmp ne i32 %conv26, 0, !dbg !11797
  br i1 %cmp27, label %land.lhs.true29, label %if.end52, !dbg !11797

land.lhs.true29:                                  ; preds = %land.lhs.true23
  %33 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11797
  %34 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 27, !dbg !11797
  %id30 = bitcast %union.anon.83* %34 to [256 x i16]*, !dbg !11797
  %arrayidx31 = getelementptr [256 x i16], [256 x i16]* %id30, i64 0, i64 76, !dbg !11797
  %35 = load i16, i16* %arrayidx31, align 8, !dbg !11797
  %conv32 = zext i16 %35 to i32, !dbg !11797
  %cmp33 = icmp ne i32 %conv32, 65535, !dbg !11797
  br i1 %cmp33, label %land.lhs.true35, label %if.end52, !dbg !11797

land.lhs.true35:                                  ; preds = %land.lhs.true29
  %36 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11797
  %37 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %36, i32 0, i32 27, !dbg !11797
  %id36 = bitcast %union.anon.83* %37 to [256 x i16]*, !dbg !11797
  %arrayidx37 = getelementptr [256 x i16], [256 x i16]* %id36, i64 0, i64 78, !dbg !11797
  %38 = load i16, i16* %arrayidx37, align 4, !dbg !11797
  %conv38 = zext i16 %38 to i32, !dbg !11797
  %and39 = and i32 %conv38, 4, !dbg !11797
  %tobool40 = icmp ne i32 %and39, 0, !dbg !11797
  br i1 %tobool40, label %if.then41, label %if.end52, !dbg !11798

if.then41:                                        ; preds = %land.lhs.true35
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11799
  %call42 = call i32 @ata_dev_set_feature(%struct.ata_device* %39, i8 zeroext 16, i8 zeroext 2) #12, !dbg !11801
  store i32 %call42, i32* %err_mask, align 4, !dbg !11802
  %40 = load i32, i32* %err_mask, align 4, !dbg !11803
  %tobool43 = icmp ne i32 %40, 0, !dbg !11803
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !11805

if.then44:                                        ; preds = %if.then41
  %41 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11806
  %42 = load i32, i32* %err_mask, align 4, !dbg !11806
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.118, i64 0, i64 0), i32 %42) #12, !dbg !11806
  %43 = load i32, i32* %err_mask, align 4, !dbg !11808
  %cmp45 = icmp ne i32 %43, 1, !dbg !11810
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !11811

if.then47:                                        ; preds = %if.then44
  %44 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11812
  %horkage48 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %44, i32 0, i32 2, !dbg !11814
  %45 = load i32, i32* %horkage48, align 4, !dbg !11815
  %or49 = or i32 %45, 32768, !dbg !11815
  store i32 %or49, i32* %horkage48, align 4, !dbg !11815
  store i32 -5, i32* %retval, align 4, !dbg !11816
  br label %return, !dbg !11816

if.end50:                                         ; preds = %if.then44
  br label %if.end51, !dbg !11817

if.else:                                          ; preds = %if.then41
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i64 0, i64 0), i8** %aa_desc, align 8, !dbg !11818
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.end50
  br label %if.end52, !dbg !11819

if.end52:                                         ; preds = %if.end51, %land.lhs.true35, %land.lhs.true29, %land.lhs.true23, %land.lhs.true, %if.end16
  %46 = load i32, i32* %hdepth, align 4, !dbg !11820
  %47 = load i32, i32* %ddepth, align 4, !dbg !11822
  %cmp53 = icmp sge i32 %46, %47, !dbg !11823
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !11824

if.then55:                                        ; preds = %if.end52
  %48 = load i8*, i8** %desc.addr, align 8, !dbg !11825
  %49 = load i64, i64* %desc_sz.addr, align 8, !dbg !11826
  %50 = load i32, i32* %ddepth, align 4, !dbg !11827
  %51 = load i8*, i8** %aa_desc, align 8, !dbg !11828
  %call56 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %48, i64 %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.120, i64 0, i64 0), i32 %50, i8* %51) #12, !dbg !11829
  br label %if.end59, !dbg !11829

if.else57:                                        ; preds = %if.end52
  %52 = load i8*, i8** %desc.addr, align 8, !dbg !11830
  %53 = load i64, i64* %desc_sz.addr, align 8, !dbg !11831
  %54 = load i32, i32* %hdepth, align 4, !dbg !11832
  %55 = load i32, i32* %ddepth, align 4, !dbg !11833
  %56 = load i8*, i8** %aa_desc, align 8, !dbg !11834
  %call58 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %52, i64 %53, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.121, i64 0, i64 0), i32 %54, i32 %55, i8* %56) #12, !dbg !11835
  br label %if.end59

if.end59:                                         ; preds = %if.else57, %if.then55
  %57 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11836
  %flags60 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %57, i32 0, i32 3, !dbg !11838
  %58 = load i64, i64* %flags60, align 8, !dbg !11838
  %and61 = and i64 %58, 1048576, !dbg !11839
  %tobool62 = icmp ne i64 %and61, 0, !dbg !11839
  br i1 %tobool62, label %if.then63, label %if.end78, !dbg !11840

if.then63:                                        ; preds = %if.end59
  %59 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11841
  %60 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %59, i32 0, i32 27, !dbg !11844
  %id64 = bitcast %union.anon.83* %60 to [256 x i16]*, !dbg !11844
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id64, i64 0, i64 0, !dbg !11841
  %call65 = call zeroext i1 @ata_id_has_ncq_send_and_recv(i16* %arraydecay) #12, !dbg !11845
  br i1 %call65, label %if.then66, label %if.end67, !dbg !11846

if.then66:                                        ; preds = %if.then63
  %61 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11847
  call void @ata_dev_config_ncq_send_recv(%struct.ata_device* %61) #12, !dbg !11848
  br label %if.end67, !dbg !11848

if.end67:                                         ; preds = %if.then66, %if.then63
  %62 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11849
  %63 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %62, i32 0, i32 27, !dbg !11851
  %id68 = bitcast %union.anon.83* %63 to [256 x i16]*, !dbg !11851
  %arraydecay69 = getelementptr inbounds [256 x i16], [256 x i16]* %id68, i64 0, i64 0, !dbg !11849
  %call70 = call zeroext i1 @ata_id_has_ncq_non_data(i16* %arraydecay69) #12, !dbg !11852
  br i1 %call70, label %if.then71, label %if.end72, !dbg !11853

if.then71:                                        ; preds = %if.end67
  %64 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11854
  call void @ata_dev_config_ncq_non_data(%struct.ata_device* %64) #12, !dbg !11855
  br label %if.end72, !dbg !11855

if.end72:                                         ; preds = %if.then71, %if.end67
  %65 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11856
  %66 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %65, i32 0, i32 27, !dbg !11858
  %id73 = bitcast %union.anon.83* %66 to [256 x i16]*, !dbg !11858
  %arraydecay74 = getelementptr inbounds [256 x i16], [256 x i16]* %id73, i64 0, i64 0, !dbg !11856
  %call75 = call zeroext i1 @ata_id_has_ncq_prio(i16* %arraydecay74) #12, !dbg !11859
  br i1 %call75, label %if.then76, label %if.end77, !dbg !11860

if.then76:                                        ; preds = %if.end72
  %67 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11861
  call void @ata_dev_config_ncq_prio(%struct.ata_device* %67) #12, !dbg !11862
  br label %if.end77, !dbg !11862

if.end77:                                         ; preds = %if.then76, %if.end72
  br label %if.end78, !dbg !11863

if.end78:                                         ; preds = %if.end77, %if.end59
  store i32 0, i32* %retval, align 4, !dbg !11864
  br label %return, !dbg !11864

return:                                           ; preds = %if.end78, %if.then47, %if.then9, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !11865
  ret i32 %68, !dbg !11865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_current_chs_valid(i16* %id) #0 !dbg !11866 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !11867, metadata !DIExpression()), !dbg !11868
  %0 = load i16*, i16** %id.addr, align 8, !dbg !11869
  %arrayidx = getelementptr i16, i16* %0, i64 53, !dbg !11869
  %1 = load i16, i16* %arrayidx, align 2, !dbg !11869
  %conv = zext i16 %1 to i32, !dbg !11869
  %and = and i32 %conv, 1, !dbg !11870
  %tobool = icmp ne i32 %and, 0, !dbg !11870
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !11871

land.lhs.true:                                    ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !11872
  %arrayidx1 = getelementptr i16, i16* %2, i64 54, !dbg !11872
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !11872
  %conv2 = zext i16 %3 to i32, !dbg !11872
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !11872
  br i1 %tobool3, label %land.lhs.true4, label %land.end, !dbg !11873

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load i16*, i16** %id.addr, align 8, !dbg !11874
  %arrayidx5 = getelementptr i16, i16* %4, i64 55, !dbg !11874
  %5 = load i16, i16* %arrayidx5, align 2, !dbg !11874
  %conv6 = zext i16 %5 to i32, !dbg !11874
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !11874
  br i1 %tobool7, label %land.lhs.true8, label %land.end, !dbg !11875

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load i16*, i16** %id.addr, align 8, !dbg !11876
  %arrayidx9 = getelementptr i16, i16* %6, i64 55, !dbg !11876
  %7 = load i16, i16* %arrayidx9, align 2, !dbg !11876
  %conv10 = zext i16 %7 to i32, !dbg !11876
  %cmp = icmp sle i32 %conv10, 16, !dbg !11877
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11878

land.rhs:                                         ; preds = %land.lhs.true8
  %8 = load i16*, i16** %id.addr, align 8, !dbg !11879
  %arrayidx12 = getelementptr i16, i16* %8, i64 56, !dbg !11879
  %9 = load i16, i16* %arrayidx12, align 2, !dbg !11879
  %conv13 = zext i16 %9 to i32, !dbg !11879
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !11878
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true8, %land.lhs.true4, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true8 ], [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %entry ], [ %tobool14, %land.rhs ], !dbg !11880
  ret i1 %10, !dbg !11881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_config_sense_reporting(%struct.ata_device* %dev) #0 !dbg !11882 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11883, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !11885, metadata !DIExpression()), !dbg !11886
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11887
  %1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 27, !dbg !11889
  %id = bitcast %union.anon.83* %1 to [256 x i16]*, !dbg !11889
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !11887
  %call = call zeroext i1 @ata_id_has_sense_reporting(i16* %arraydecay) #12, !dbg !11890
  br i1 %call, label %if.end, label %if.then, !dbg !11891

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !11892

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11893
  %3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 27, !dbg !11895
  %id1 = bitcast %union.anon.83* %3 to [256 x i16]*, !dbg !11895
  %arraydecay2 = getelementptr inbounds [256 x i16], [256 x i16]* %id1, i64 0, i64 0, !dbg !11893
  %call3 = call zeroext i1 @ata_id_sense_reporting_enabled(i16* %arraydecay2) #12, !dbg !11896
  br i1 %call3, label %if.then4, label %if.end5, !dbg !11897

if.then4:                                         ; preds = %if.end
  br label %if.end8, !dbg !11898

if.end5:                                          ; preds = %if.end
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11899
  %call6 = call i32 @ata_dev_set_feature(%struct.ata_device* %4, i8 zeroext -61, i8 zeroext 1) #12, !dbg !11900
  store i32 %call6, i32* %err_mask, align 4, !dbg !11901
  %5 = load i32, i32* %err_mask, align 4, !dbg !11902
  %tobool = icmp ne i32 %5, 0, !dbg !11902
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !11904

if.then7:                                         ; preds = %if.end5
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11905
  %7 = load i32, i32* %err_mask, align 4, !dbg !11905
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.128, i64 0, i64 0), i32 %7) #12, !dbg !11905
  br label %if.end8, !dbg !11907

if.end8:                                          ; preds = %if.then, %if.then4, %if.then7, %if.end5
  ret void, !dbg !11908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_config_zac(%struct.ata_device* %dev) #0 !dbg !11909 {
entry:
  %p.addr.i.i53 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i53, metadata !11910, metadata !DIExpression()), !dbg !11917
  %p.addr.i54 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i54, metadata !11926, metadata !DIExpression()), !dbg !11927
  %p.addr.i.i51 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i51, metadata !11910, metadata !DIExpression()), !dbg !11928
  %p.addr.i52 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i52, metadata !11926, metadata !DIExpression()), !dbg !11931
  %p.addr.i.i49 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i49, metadata !11910, metadata !DIExpression()), !dbg !11932
  %p.addr.i50 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i50, metadata !11926, metadata !DIExpression()), !dbg !11935
  %p.addr.i.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i, metadata !11910, metadata !DIExpression()), !dbg !11936
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !11926, metadata !DIExpression()), !dbg !11939
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %err_mask = alloca i32, align 4
  %identify_buf = alloca i8*, align 8
  %zoned_cap = alloca i64, align 8
  %opt_open = alloca i64, align 8
  %opt_nonseq = alloca i64, align 8
  %max_open = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11942, metadata !DIExpression()), !dbg !11943
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11944
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !11945
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !11945
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !11946
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !11946
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !11943
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !11947, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.declare(metadata i8** %identify_buf, metadata !11949, metadata !DIExpression()), !dbg !11950
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11951
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 52, !dbg !11952
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !11951
  store i8* %arraydecay, i8** %identify_buf, align 8, !dbg !11950
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11953
  %zac_zones_optimal_open = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 32, !dbg !11954
  store i32 -1, i32* %zac_zones_optimal_open, align 32, !dbg !11955
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11956
  %zac_zones_optimal_nonseq = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 33, !dbg !11957
  store i32 -1, i32* %zac_zones_optimal_nonseq, align 4, !dbg !11958
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11959
  %zac_zones_max_open = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 34, !dbg !11960
  store i32 -1, i32* %zac_zones_max_open, align 8, !dbg !11961
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11962
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 11, !dbg !11964
  %8 = load i32, i32* %class, align 64, !dbg !11964
  %cmp = icmp eq i32 %8, 9, !dbg !11965
  br i1 %cmp, label %if.then, label %if.else, !dbg !11966

if.then:                                          ; preds = %entry
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11967
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 3, !dbg !11968
  %10 = load i64, i64* %flags, align 16, !dbg !11969
  %or = or i64 %10, 1073741824, !dbg !11969
  store i64 %or, i64* %flags, align 16, !dbg !11969
  br label %if.end8, !dbg !11967

if.else:                                          ; preds = %entry
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11970
  %12 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 27, !dbg !11972
  %id = bitcast %union.anon.83* %12 to [256 x i16]*, !dbg !11972
  %arraydecay2 = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !11970
  %call = call zeroext i8 @ata_id_zoned_cap(i16* %arraydecay2) #12, !dbg !11973
  %conv = zext i8 %call to i32, !dbg !11973
  %cmp3 = icmp eq i32 %conv, 1, !dbg !11974
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !11975

if.then5:                                         ; preds = %if.else
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11976
  %flags6 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 3, !dbg !11977
  %14 = load i64, i64* %flags6, align 16, !dbg !11978
  %or7 = or i64 %14, 1073741824, !dbg !11978
  store i64 %or7, i64* %flags6, align 16, !dbg !11978
  br label %if.end, !dbg !11976

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %15 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11979
  %flags9 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %15, i32 0, i32 3, !dbg !11981
  %16 = load i64, i64* %flags9, align 16, !dbg !11981
  %and = and i64 %16, 1073741824, !dbg !11982
  %tobool = icmp ne i64 %and, 0, !dbg !11982
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !11983

if.then10:                                        ; preds = %if.end8
  br label %if.end48, !dbg !11984

if.end11:                                         ; preds = %if.end8
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11985
  %call12 = call zeroext i1 @ata_identify_page_supported(%struct.ata_device* %17, i8 zeroext 9) #12, !dbg !11987
  br i1 %call12, label %if.end14, label %if.then13, !dbg !11988

if.then13:                                        ; preds = %if.end11
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11989
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.129, i64 0, i64 0)) #12, !dbg !11989
  br label %if.end48, !dbg !11991

if.end14:                                         ; preds = %if.end11
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11992
  %20 = load i8*, i8** %identify_buf, align 8, !dbg !11993
  %call15 = call i32 @ata_read_log_page(%struct.ata_device* %19, i8 zeroext 48, i8 zeroext 9, i8* %20, i32 1) #12, !dbg !11994
  store i32 %call15, i32* %err_mask, align 4, !dbg !11995
  %21 = load i32, i32* %err_mask, align 4, !dbg !11996
  %tobool16 = icmp ne i32 %21, 0, !dbg !11996
  br i1 %tobool16, label %if.end48, label %if.then17, !dbg !11997

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i64* %zoned_cap, metadata !11998, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.declare(metadata i64* %opt_open, metadata !12000, metadata !DIExpression()), !dbg !12001
  call void @llvm.dbg.declare(metadata i64* %opt_nonseq, metadata !12002, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.declare(metadata i64* %max_open, metadata !12004, metadata !DIExpression()), !dbg !12005
  %22 = load i8*, i8** %identify_buf, align 8, !dbg !12006
  %arrayidx = getelementptr i8, i8* %22, i64 8, !dbg !12006
  store i8* %arrayidx, i8** %p.addr.i, align 8
  %23 = load i8*, i8** %p.addr.i, align 8, !dbg !12007
  %24 = bitcast i8* %23 to i64*, !dbg !12008
  store i64* %24, i64** %p.addr.i.i, align 8
  %25 = load i64*, i64** %p.addr.i.i, align 8, !dbg !12009
  %26 = load i64, i64* %25, align 8, !dbg !12010
  store i64 %26, i64* %zoned_cap, align 8, !dbg !12011
  %27 = load i64, i64* %zoned_cap, align 8, !dbg !12012
  %shr = lshr i64 %27, 63, !dbg !12014
  %tobool19 = icmp ne i64 %shr, 0, !dbg !12014
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !12015

if.then20:                                        ; preds = %if.then17
  %28 = load i64, i64* %zoned_cap, align 8, !dbg !12016
  %and21 = and i64 %28, 1, !dbg !12017
  %conv22 = trunc i64 %and21 to i32, !dbg !12018
  %29 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12019
  %zac_zoned_cap = getelementptr inbounds %struct.ata_device, %struct.ata_device* %29, i32 0, i32 31, !dbg !12020
  store i32 %conv22, i32* %zac_zoned_cap, align 4, !dbg !12021
  br label %if.end23, !dbg !12019

if.end23:                                         ; preds = %if.then20, %if.then17
  %30 = load i8*, i8** %identify_buf, align 8, !dbg !12022
  %arrayidx24 = getelementptr i8, i8* %30, i64 24, !dbg !12022
  store i8* %arrayidx24, i8** %p.addr.i54, align 8
  %31 = load i8*, i8** %p.addr.i54, align 8, !dbg !12023
  %32 = bitcast i8* %31 to i64*, !dbg !12024
  store i64* %32, i64** %p.addr.i.i53, align 8
  %33 = load i64*, i64** %p.addr.i.i53, align 8, !dbg !12025
  %34 = load i64, i64* %33, align 8, !dbg !12026
  store i64 %34, i64* %opt_open, align 8, !dbg !12027
  %35 = load i64, i64* %opt_open, align 8, !dbg !12028
  %shr26 = lshr i64 %35, 63, !dbg !12030
  %tobool27 = icmp ne i64 %shr26, 0, !dbg !12030
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !12031

if.then28:                                        ; preds = %if.end23
  %36 = load i64, i64* %opt_open, align 8, !dbg !12032
  %conv29 = trunc i64 %36 to i32, !dbg !12033
  %37 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12034
  %zac_zones_optimal_open30 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %37, i32 0, i32 32, !dbg !12035
  store i32 %conv29, i32* %zac_zones_optimal_open30, align 32, !dbg !12036
  br label %if.end31, !dbg !12034

if.end31:                                         ; preds = %if.then28, %if.end23
  %38 = load i8*, i8** %identify_buf, align 8, !dbg !12037
  %arrayidx32 = getelementptr i8, i8* %38, i64 32, !dbg !12037
  store i8* %arrayidx32, i8** %p.addr.i52, align 8
  %39 = load i8*, i8** %p.addr.i52, align 8, !dbg !12038
  %40 = bitcast i8* %39 to i64*, !dbg !12039
  store i64* %40, i64** %p.addr.i.i51, align 8
  %41 = load i64*, i64** %p.addr.i.i51, align 8, !dbg !12040
  %42 = load i64, i64* %41, align 8, !dbg !12041
  store i64 %42, i64* %opt_nonseq, align 8, !dbg !12042
  %43 = load i64, i64* %opt_nonseq, align 8, !dbg !12043
  %shr34 = lshr i64 %43, 63, !dbg !12045
  %tobool35 = icmp ne i64 %shr34, 0, !dbg !12045
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !12046

if.then36:                                        ; preds = %if.end31
  %44 = load i64, i64* %opt_nonseq, align 8, !dbg !12047
  %conv37 = trunc i64 %44 to i32, !dbg !12048
  %45 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12049
  %zac_zones_optimal_nonseq38 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %45, i32 0, i32 33, !dbg !12050
  store i32 %conv37, i32* %zac_zones_optimal_nonseq38, align 4, !dbg !12051
  br label %if.end39, !dbg !12049

if.end39:                                         ; preds = %if.then36, %if.end31
  %46 = load i8*, i8** %identify_buf, align 8, !dbg !12052
  %arrayidx40 = getelementptr i8, i8* %46, i64 40, !dbg !12052
  store i8* %arrayidx40, i8** %p.addr.i50, align 8
  %47 = load i8*, i8** %p.addr.i50, align 8, !dbg !12053
  %48 = bitcast i8* %47 to i64*, !dbg !12054
  store i64* %48, i64** %p.addr.i.i49, align 8
  %49 = load i64*, i64** %p.addr.i.i49, align 8, !dbg !12055
  %50 = load i64, i64* %49, align 8, !dbg !12056
  store i64 %50, i64* %max_open, align 8, !dbg !12057
  %51 = load i64, i64* %max_open, align 8, !dbg !12058
  %shr42 = lshr i64 %51, 63, !dbg !12060
  %tobool43 = icmp ne i64 %shr42, 0, !dbg !12060
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !12061

if.then44:                                        ; preds = %if.end39
  %52 = load i64, i64* %max_open, align 8, !dbg !12062
  %conv45 = trunc i64 %52 to i32, !dbg !12063
  %53 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12064
  %zac_zones_max_open46 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %53, i32 0, i32 34, !dbg !12065
  store i32 %conv45, i32* %zac_zones_max_open46, align 8, !dbg !12066
  br label %if.end47, !dbg !12064

if.end47:                                         ; preds = %if.then44, %if.end39
  br label %if.end48, !dbg !12067

if.end48:                                         ; preds = %if.then10, %if.then13, %if.end47, %if.end14
  ret void, !dbg !12068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_config_trusted(%struct.ata_device* %dev) #0 !dbg !12069 {
entry:
  %p.addr.i.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i, metadata !11910, metadata !DIExpression()), !dbg !12070
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !11926, metadata !DIExpression()), !dbg !12073
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %trusted_cap = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12074, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !12076, metadata !DIExpression()), !dbg !12077
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12078
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !12079
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !12079
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !12080
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !12080
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !12077
  call void @llvm.dbg.declare(metadata i64* %trusted_cap, metadata !12081, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12083, metadata !DIExpression()), !dbg !12084
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12085
  %4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 27, !dbg !12087
  %id = bitcast %union.anon.83* %4 to [256 x i16]*, !dbg !12087
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !12085
  %call = call zeroext i1 @ata_id_has_trusted(i16* %arraydecay) #12, !dbg !12088
  br i1 %call, label %if.end, label %if.then, !dbg !12089

if.then:                                          ; preds = %entry
  br label %if.end17, !dbg !12090

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12091
  %call2 = call zeroext i1 @ata_identify_page_supported(%struct.ata_device* %5, i8 zeroext 6) #12, !dbg !12093
  br i1 %call2, label %if.end4, label %if.then3, !dbg !12094

if.then3:                                         ; preds = %if.end
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12095
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.132, i64 0, i64 0)) #12, !dbg !12095
  br label %if.end17, !dbg !12097

if.end4:                                          ; preds = %if.end
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12098
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12099
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 52, !dbg !12100
  %arraydecay5 = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !12099
  %call6 = call i32 @ata_read_log_page(%struct.ata_device* %7, i8 zeroext 48, i8 zeroext 6, i8* %arraydecay5, i32 1) #12, !dbg !12101
  store i32 %call6, i32* %err, align 4, !dbg !12102
  %9 = load i32, i32* %err, align 4, !dbg !12103
  %tobool = icmp ne i32 %9, 0, !dbg !12103
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !12105

if.then7:                                         ; preds = %if.end4
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12106
  %11 = load i32, i32* %err, align 4, !dbg !12106
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.133, i64 0, i64 0), i32 %11) #12, !dbg !12106
  br label %if.end17, !dbg !12108

if.end8:                                          ; preds = %if.end4
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12109
  %sector_buf9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 52, !dbg !12110
  %arrayidx = getelementptr [512 x i8], [512 x i8]* %sector_buf9, i64 0, i64 40, !dbg !12109
  store i8* %arrayidx, i8** %p.addr.i, align 8
  %13 = load i8*, i8** %p.addr.i, align 8, !dbg !12111
  %14 = bitcast i8* %13 to i64*, !dbg !12112
  store i64* %14, i64** %p.addr.i.i, align 8
  %15 = load i64*, i64** %p.addr.i.i, align 8, !dbg !12113
  %16 = load i64, i64* %15, align 8, !dbg !12114
  store i64 %16, i64* %trusted_cap, align 8, !dbg !12115
  %17 = load i64, i64* %trusted_cap, align 8, !dbg !12116
  %and = and i64 %17, -9223372036854775808, !dbg !12118
  %tobool11 = icmp ne i64 %and, 0, !dbg !12118
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !12119

if.then12:                                        ; preds = %if.end8
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12120
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.134, i64 0, i64 0)) #12, !dbg !12120
  br label %if.end17, !dbg !12122

if.end13:                                         ; preds = %if.end8
  %19 = load i64, i64* %trusted_cap, align 8, !dbg !12123
  %and14 = and i64 %19, 1, !dbg !12125
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12125
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12126

if.then16:                                        ; preds = %if.end13
  %20 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12127
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %20, i32 0, i32 3, !dbg !12128
  %21 = load i64, i64* %flags, align 16, !dbg !12129
  %or = or i64 %21, 256, !dbg !12129
  store i64 %or, i64* %flags, align 16, !dbg !12129
  br label %if.end17, !dbg !12127

if.end17:                                         ; preds = %if.then, %if.then3, %if.then7, %if.then12, %if.then16, %if.end13
  ret void, !dbg !12130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atapi_cdb_len(i16* %dev_id) #0 !dbg !12131 {
entry:
  %retval = alloca i32, align 4
  %dev_id.addr = alloca i16*, align 8
  %tmp = alloca i16, align 2
  store i16* %dev_id, i16** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dev_id.addr, metadata !12134, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.declare(metadata i16* %tmp, metadata !12136, metadata !DIExpression()), !dbg !12137
  %0 = load i16*, i16** %dev_id.addr, align 8, !dbg !12138
  %arrayidx = getelementptr i16, i16* %0, i64 0, !dbg !12138
  %1 = load i16, i16* %arrayidx, align 2, !dbg !12138
  %conv = zext i16 %1 to i32, !dbg !12138
  %and = and i32 %conv, 3, !dbg !12139
  %conv1 = trunc i32 %and to i16, !dbg !12138
  store i16 %conv1, i16* %tmp, align 2, !dbg !12137
  %2 = load i16, i16* %tmp, align 2, !dbg !12140
  %conv2 = zext i16 %2 to i32, !dbg !12140
  switch i32 %conv2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !12141

sw.bb:                                            ; preds = %entry
  store i32 12, i32* %retval, align 4, !dbg !12142
  br label %return, !dbg !12142

sw.bb3:                                           ; preds = %entry
  store i32 16, i32* %retval, align 4, !dbg !12144
  br label %return, !dbg !12144

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12145
  br label %return, !dbg !12145

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !12146
  ret i32 %3, !dbg !12146
}

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_read(%struct.ata_link*, i32, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @atapi_id_dmadir(i16* %dev_id) #0 !dbg !12147 {
entry:
  %dev_id.addr = alloca i16*, align 8
  store i16* %dev_id, i16** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dev_id.addr, metadata !12148, metadata !DIExpression()), !dbg !12149
  %0 = load i16*, i16** %dev_id.addr, align 8, !dbg !12150
  %call = call i32 @ata_id_major_version(i16* %0) #12, !dbg !12151
  %cmp = icmp uge i32 %call, 7, !dbg !12152
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12153

land.rhs:                                         ; preds = %entry
  %1 = load i16*, i16** %dev_id.addr, align 8, !dbg !12154
  %arrayidx = getelementptr i16, i16* %1, i64 62, !dbg !12154
  %2 = load i16, i16* %arrayidx, align 2, !dbg !12154
  %conv = zext i16 %2 to i32, !dbg !12154
  %and = and i32 %conv, 32768, !dbg !12155
  %tobool = icmp ne i32 %and, 0, !dbg !12153
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !12156
  ret i1 %3, !dbg !12157
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @zpodd_init(%struct.ata_device* %dev) #0 !dbg !12158 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12159, metadata !DIExpression()), !dbg !12160
  ret void, !dbg !12161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_dev_knobble(%struct.ata_device* %dev) #0 !dbg !12162 {
entry:
  %retval = alloca i8, align 1
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12165, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !12167, metadata !DIExpression()), !dbg !12168
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12169
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !12170
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !12170
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !12171
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !12171
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !12168
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12172
  %call = call i64 @ata_dev_blacklisted(%struct.ata_device* %3) #12, !dbg !12174
  %and = and i64 %call, 1024, !dbg !12175
  %tobool = icmp ne i64 %and, 0, !dbg !12175
  br i1 %tobool, label %if.then, label %if.end, !dbg !12176

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12177
  br label %return, !dbg !12177

if.end:                                           ; preds = %entry
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12178
  %cbl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 18, !dbg !12179
  %5 = load i32, i32* %cbl, align 4, !dbg !12179
  %cmp = icmp eq i32 %5, 6, !dbg !12180
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12181

land.rhs:                                         ; preds = %if.end
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12182
  %7 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 27, !dbg !12183
  %id = bitcast %union.anon.83* %7 to [256 x i16]*, !dbg !12183
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !12182
  %call2 = call zeroext i1 @ata_id_is_sata(i16* %arraydecay) #12, !dbg !12184
  %lnot = xor i1 %call2, true, !dbg !12185
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %8 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !12186
  %land.ext = zext i1 %8 to i32, !dbg !12181
  %conv = trunc i32 %land.ext to i8, !dbg !12187
  store i8 %conv, i8* %retval, align 1, !dbg !12188
  br label %return, !dbg !12188

return:                                           ; preds = %land.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !12189
  ret i8 %9, !dbg !12189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atapi_command_packet_set(i16* %dev_id) #0 !dbg !12190 {
entry:
  %dev_id.addr = alloca i16*, align 8
  store i16* %dev_id, i16** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dev_id.addr, metadata !12191, metadata !DIExpression()), !dbg !12192
  %0 = load i16*, i16** %dev_id.addr, align 8, !dbg !12193
  %arrayidx = getelementptr i16, i16* %0, i64 0, !dbg !12193
  %1 = load i16, i16* %arrayidx, align 2, !dbg !12193
  %conv = zext i16 %1 to i32, !dbg !12193
  %shr = ashr i32 %conv, 8, !dbg !12194
  %and = and i32 %shr, 31, !dbg !12195
  ret i32 %and, !dbg !12196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_cable_40wire(%struct.ata_port* %ap) #0 !dbg !12197 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12198, metadata !DIExpression()), !dbg !12199
  ret i32 1, !dbg !12200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_cable_80wire(%struct.ata_port* %ap) #0 !dbg !12201 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12202, metadata !DIExpression()), !dbg !12203
  ret i32 2, !dbg !12204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_cable_unknown(%struct.ata_port* %ap) #0 !dbg !12205 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12206, metadata !DIExpression()), !dbg !12207
  ret i32 4, !dbg !12208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_cable_ignore(%struct.ata_port* %ap) #0 !dbg !12209 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12210, metadata !DIExpression()), !dbg !12211
  ret i32 5, !dbg !12212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_cable_sata(%struct.ata_port* %ap) #0 !dbg !12213 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12214, metadata !DIExpression()), !dbg !12215
  ret i32 6, !dbg !12216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bus_probe(%struct.ata_port* %ap) #0 !dbg !12217 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %classes = alloca [2 x i32], align 4
  %tries = alloca [2 x i32], align 4
  %rc = alloca i32, align 4
  %dev = alloca %struct.ata_device*, align 8
  %__UNIQUE_ID___x348 = alloca i32, align 4
  %__UNIQUE_ID___y349 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12218, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.declare(metadata [2 x i32]* %classes, metadata !12220, metadata !DIExpression()), !dbg !12221
  call void @llvm.dbg.declare(metadata [2 x i32]* %tries, metadata !12222, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12224, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12226, metadata !DIExpression()), !dbg !12227
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12228
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 25, !dbg !12228
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link, i32 2) #12, !dbg !12228
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !12228
  br label %for.cond, !dbg !12228

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12230
  %tobool = icmp ne %struct.ata_device* %1, null, !dbg !12228
  br i1 %tobool, label %for.body, label %for.end, !dbg !12228

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12232
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 1, !dbg !12233
  %3 = load i32, i32* %devno, align 8, !dbg !12233
  %idxprom = zext i32 %3 to i64, !dbg !12234
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom, !dbg !12234
  store i32 3, i32* %arrayidx, align 4, !dbg !12235
  br label %for.inc, !dbg !12234

for.inc:                                          ; preds = %for.body
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12230
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12230
  %link1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 25, !dbg !12230
  %call2 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %4, %struct.ata_link* %link1, i32 2) #12, !dbg !12230
  store %struct.ata_device* %call2, %struct.ata_device** %dev, align 8, !dbg !12230
  br label %for.cond, !dbg !12230, !llvm.loop !12236

for.end:                                          ; preds = %for.cond
  br label %retry, !dbg !12237

retry:                                            ; preds = %if.end146, %for.end
  call void @llvm.dbg.label(metadata !12238), !dbg !12239
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12240
  %link3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 25, !dbg !12240
  %call4 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link3, i32 2) #12, !dbg !12240
  store %struct.ata_device* %call4, %struct.ata_device** %dev, align 8, !dbg !12240
  br label %for.cond5, !dbg !12240

for.cond5:                                        ; preds = %for.inc11, %retry
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12242
  %tobool6 = icmp ne %struct.ata_device* %7, null, !dbg !12240
  br i1 %tobool6, label %for.body7, label %for.end14, !dbg !12240

for.body7:                                        ; preds = %for.cond5
  %8 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12244
  %pio_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 13, !dbg !12246
  store i8 8, i8* %pio_mode, align 16, !dbg !12247
  %9 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12248
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 14, !dbg !12249
  store i8 -1, i8* %dma_mode, align 1, !dbg !12250
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12251
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 1, !dbg !12253
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !12253
  %set_piomode = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %11, i32 0, i32 7, !dbg !12254
  %12 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_piomode, align 8, !dbg !12254
  %tobool8 = icmp ne void (%struct.ata_port*, %struct.ata_device*)* %12, null, !dbg !12251
  br i1 %tobool8, label %if.then, label %if.end, !dbg !12255

if.then:                                          ; preds = %for.body7
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12256
  %ops9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 1, !dbg !12257
  %14 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops9, align 8, !dbg !12257
  %set_piomode10 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %14, i32 0, i32 7, !dbg !12258
  %15 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_piomode10, align 8, !dbg !12258
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12259
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12260
  call void %15(%struct.ata_port* %16, %struct.ata_device* %17) #12, !dbg !12256
  br label %if.end, !dbg !12256

if.end:                                           ; preds = %if.then, %for.body7
  br label %for.inc11, !dbg !12261

for.inc11:                                        ; preds = %if.end
  %18 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12242
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12242
  %link12 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 25, !dbg !12242
  %call13 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %18, %struct.ata_link* %link12, i32 2) #12, !dbg !12242
  store %struct.ata_device* %call13, %struct.ata_device** %dev, align 8, !dbg !12242
  br label %for.cond5, !dbg !12242, !llvm.loop !12262

for.end14:                                        ; preds = %for.cond5
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12264
  %ops15 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 1, !dbg !12265
  %21 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops15, align 8, !dbg !12265
  %phy_reset = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %21, i32 0, i32 58, !dbg !12266
  %22 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %phy_reset, align 8, !dbg !12266
  %23 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12267
  call void %22(%struct.ata_port* %23) #12, !dbg !12264
  %24 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12268
  %link16 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %24, i32 0, i32 25, !dbg !12268
  %call17 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link16, i32 2) #12, !dbg !12268
  store %struct.ata_device* %call17, %struct.ata_device** %dev, align 8, !dbg !12268
  br label %for.cond18, !dbg !12268

for.cond18:                                       ; preds = %for.inc31, %for.end14
  %25 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12270
  %tobool19 = icmp ne %struct.ata_device* %25, null, !dbg !12268
  br i1 %tobool19, label %for.body20, label %for.end34, !dbg !12268

for.body20:                                       ; preds = %for.cond18
  %26 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12272
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 11, !dbg !12275
  %27 = load i32, i32* %class, align 64, !dbg !12275
  %cmp = icmp ne i32 %27, 0, !dbg !12276
  br i1 %cmp, label %if.then21, label %if.else, !dbg !12277

if.then21:                                        ; preds = %for.body20
  %28 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12278
  %class22 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %28, i32 0, i32 11, !dbg !12279
  %29 = load i32, i32* %class22, align 64, !dbg !12279
  %30 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12280
  %devno23 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %30, i32 0, i32 1, !dbg !12281
  %31 = load i32, i32* %devno23, align 8, !dbg !12281
  %idxprom24 = zext i32 %31 to i64, !dbg !12282
  %arrayidx25 = getelementptr [2 x i32], [2 x i32]* %classes, i64 0, i64 %idxprom24, !dbg !12282
  store i32 %29, i32* %arrayidx25, align 4, !dbg !12283
  br label %if.end29, !dbg !12282

if.else:                                          ; preds = %for.body20
  %32 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12284
  %devno26 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %32, i32 0, i32 1, !dbg !12285
  %33 = load i32, i32* %devno26, align 8, !dbg !12285
  %idxprom27 = zext i32 %33 to i64, !dbg !12286
  %arrayidx28 = getelementptr [2 x i32], [2 x i32]* %classes, i64 0, i64 %idxprom27, !dbg !12286
  store i32 11, i32* %arrayidx28, align 4, !dbg !12287
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then21
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12288
  %class30 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 11, !dbg !12289
  store i32 0, i32* %class30, align 64, !dbg !12290
  br label %for.inc31, !dbg !12291

for.inc31:                                        ; preds = %if.end29
  %35 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12270
  %36 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12270
  %link32 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %36, i32 0, i32 25, !dbg !12270
  %call33 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %35, %struct.ata_link* %link32, i32 2) #12, !dbg !12270
  store %struct.ata_device* %call33, %struct.ata_device** %dev, align 8, !dbg !12270
  br label %for.cond18, !dbg !12270, !llvm.loop !12292

for.end34:                                        ; preds = %for.cond18
  %37 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12294
  %link35 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 25, !dbg !12294
  %call36 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link35, i32 3) #12, !dbg !12294
  store %struct.ata_device* %call36, %struct.ata_device** %dev, align 8, !dbg !12294
  br label %for.cond37, !dbg !12294

for.cond37:                                       ; preds = %for.inc59, %for.end34
  %38 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12296
  %tobool38 = icmp ne %struct.ata_device* %38, null, !dbg !12294
  br i1 %tobool38, label %for.body39, label %for.end62, !dbg !12294

for.body39:                                       ; preds = %for.cond37
  %39 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12298
  %devno40 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 1, !dbg !12301
  %40 = load i32, i32* %devno40, align 8, !dbg !12301
  %idxprom41 = zext i32 %40 to i64, !dbg !12302
  %arrayidx42 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom41, !dbg !12302
  %41 = load i32, i32* %arrayidx42, align 4, !dbg !12302
  %tobool43 = icmp ne i32 %41, 0, !dbg !12302
  br i1 %tobool43, label %if.then44, label %if.end49, !dbg !12303

if.then44:                                        ; preds = %for.body39
  %42 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12304
  %devno45 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %42, i32 0, i32 1, !dbg !12305
  %43 = load i32, i32* %devno45, align 8, !dbg !12305
  %idxprom46 = zext i32 %43 to i64, !dbg !12306
  %arrayidx47 = getelementptr [2 x i32], [2 x i32]* %classes, i64 0, i64 %idxprom46, !dbg !12306
  %44 = load i32, i32* %arrayidx47, align 4, !dbg !12306
  %45 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12307
  %class48 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %45, i32 0, i32 11, !dbg !12308
  store i32 %44, i32* %class48, align 64, !dbg !12309
  br label %if.end49, !dbg !12307

if.end49:                                         ; preds = %if.then44, %for.body39
  %46 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12310
  %call50 = call i32 @ata_dev_enabled(%struct.ata_device* %46) #12, !dbg !12312
  %tobool51 = icmp ne i32 %call50, 0, !dbg !12312
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !12313

if.then52:                                        ; preds = %if.end49
  br label %for.inc59, !dbg !12314

if.end53:                                         ; preds = %if.end49
  %47 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12315
  %48 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12316
  %class54 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %48, i32 0, i32 11, !dbg !12317
  %49 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12318
  %50 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %49, i32 0, i32 27, !dbg !12319
  %id = bitcast %union.anon.83* %50 to [256 x i16]*, !dbg !12319
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !12318
  %call55 = call i32 @ata_dev_read_id(%struct.ata_device* %47, i32* %class54, i32 1, i16* %arraydecay) #12, !dbg !12320
  store i32 %call55, i32* %rc, align 4, !dbg !12321
  %51 = load i32, i32* %rc, align 4, !dbg !12322
  %tobool56 = icmp ne i32 %51, 0, !dbg !12322
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !12324

if.then57:                                        ; preds = %if.end53
  br label %fail, !dbg !12325

if.end58:                                         ; preds = %if.end53
  br label %for.inc59, !dbg !12326

for.inc59:                                        ; preds = %if.end58, %if.then52
  %52 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12296
  %53 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12296
  %link60 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %53, i32 0, i32 25, !dbg !12296
  %call61 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %52, %struct.ata_link* %link60, i32 3) #12, !dbg !12296
  store %struct.ata_device* %call61, %struct.ata_device** %dev, align 8, !dbg !12296
  br label %for.cond37, !dbg !12296, !llvm.loop !12327

for.end62:                                        ; preds = %for.cond37
  %54 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12329
  %ops63 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %54, i32 0, i32 1, !dbg !12331
  %55 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops63, align 8, !dbg !12331
  %cable_detect = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %55, i32 0, i32 5, !dbg !12332
  %56 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %cable_detect, align 8, !dbg !12332
  %tobool64 = icmp ne i32 (%struct.ata_port*)* %56, null, !dbg !12329
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !12333

if.then65:                                        ; preds = %for.end62
  %57 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12334
  %ops66 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %57, i32 0, i32 1, !dbg !12335
  %58 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops66, align 8, !dbg !12335
  %cable_detect67 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %58, i32 0, i32 5, !dbg !12336
  %59 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %cable_detect67, align 8, !dbg !12336
  %60 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12337
  %call68 = call i32 %59(%struct.ata_port* %60) #12, !dbg !12334
  %61 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12338
  %cbl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %61, i32 0, i32 18, !dbg !12339
  store i32 %call68, i32* %cbl, align 4, !dbg !12340
  br label %if.end69, !dbg !12338

if.end69:                                         ; preds = %if.then65, %for.end62
  %62 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12341
  %link70 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %62, i32 0, i32 25, !dbg !12341
  %call71 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link70, i32 0) #12, !dbg !12341
  store %struct.ata_device* %call71, %struct.ata_device** %dev, align 8, !dbg !12341
  br label %for.cond72, !dbg !12341

for.cond72:                                       ; preds = %for.inc81, %if.end69
  %63 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12343
  %tobool73 = icmp ne %struct.ata_device* %63, null, !dbg !12341
  br i1 %tobool73, label %for.body74, label %for.end84, !dbg !12341

for.body74:                                       ; preds = %for.cond72
  %64 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12345
  %65 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %64, i32 0, i32 27, !dbg !12347
  %id75 = bitcast %union.anon.83* %65 to [256 x i16]*, !dbg !12347
  %arraydecay76 = getelementptr inbounds [256 x i16], [256 x i16]* %id75, i64 0, i64 0, !dbg !12345
  %call77 = call zeroext i1 @ata_id_is_sata(i16* %arraydecay76) #12, !dbg !12348
  br i1 %call77, label %if.then78, label %if.end80, !dbg !12349

if.then78:                                        ; preds = %for.body74
  %66 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12350
  %cbl79 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %66, i32 0, i32 18, !dbg !12351
  store i32 6, i32* %cbl79, align 4, !dbg !12352
  br label %if.end80, !dbg !12350

if.end80:                                         ; preds = %if.then78, %for.body74
  br label %for.inc81, !dbg !12353

for.inc81:                                        ; preds = %if.end80
  %67 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12343
  %68 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12343
  %link82 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %68, i32 0, i32 25, !dbg !12343
  %call83 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %67, %struct.ata_link* %link82, i32 0) #12, !dbg !12343
  store %struct.ata_device* %call83, %struct.ata_device** %dev, align 8, !dbg !12343
  br label %for.cond72, !dbg !12343, !llvm.loop !12354

for.end84:                                        ; preds = %for.cond72
  %69 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12356
  %link85 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %69, i32 0, i32 25, !dbg !12356
  %call86 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link85, i32 0) #12, !dbg !12356
  store %struct.ata_device* %call86, %struct.ata_device** %dev, align 8, !dbg !12356
  br label %for.cond87, !dbg !12356

for.cond87:                                       ; preds = %for.inc99, %for.end84
  %70 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12358
  %tobool88 = icmp ne %struct.ata_device* %70, null, !dbg !12356
  br i1 %tobool88, label %for.body89, label %for.end102, !dbg !12356

for.body89:                                       ; preds = %for.cond87
  %71 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12360
  %link90 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %71, i32 0, i32 25, !dbg !12362
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link90, i32 0, i32 12, !dbg !12363
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context, i32 0, i32 0, !dbg !12364
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !12365
  %72 = load i32, i32* %flags, align 4, !dbg !12366
  %or = or i32 %72, 262144, !dbg !12366
  store i32 %or, i32* %flags, align 4, !dbg !12366
  %73 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12367
  %call91 = call i32 @ata_dev_configure(%struct.ata_device* %73) #12, !dbg !12368
  store i32 %call91, i32* %rc, align 4, !dbg !12369
  %74 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12370
  %link92 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %74, i32 0, i32 25, !dbg !12371
  %eh_context93 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link92, i32 0, i32 12, !dbg !12372
  %i94 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context93, i32 0, i32 0, !dbg !12373
  %flags95 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i94, i32 0, i32 5, !dbg !12374
  %75 = load i32, i32* %flags95, align 4, !dbg !12375
  %and = and i32 %75, -262145, !dbg !12375
  store i32 %and, i32* %flags95, align 4, !dbg !12375
  %76 = load i32, i32* %rc, align 4, !dbg !12376
  %tobool96 = icmp ne i32 %76, 0, !dbg !12376
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !12378

if.then97:                                        ; preds = %for.body89
  br label %fail, !dbg !12379

if.end98:                                         ; preds = %for.body89
  br label %for.inc99, !dbg !12380

for.inc99:                                        ; preds = %if.end98
  %77 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12358
  %78 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12358
  %link100 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %78, i32 0, i32 25, !dbg !12358
  %call101 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %77, %struct.ata_link* %link100, i32 0) #12, !dbg !12358
  store %struct.ata_device* %call101, %struct.ata_device** %dev, align 8, !dbg !12358
  br label %for.cond87, !dbg !12358, !llvm.loop !12381

for.end102:                                       ; preds = %for.cond87
  %79 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12383
  %link103 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %79, i32 0, i32 25, !dbg !12384
  %call104 = call i32 @ata_set_mode(%struct.ata_link* %link103, %struct.ata_device** %dev) #12, !dbg !12385
  store i32 %call104, i32* %rc, align 4, !dbg !12386
  %80 = load i32, i32* %rc, align 4, !dbg !12387
  %tobool105 = icmp ne i32 %80, 0, !dbg !12387
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !12389

if.then106:                                       ; preds = %for.end102
  br label %fail, !dbg !12390

if.end107:                                        ; preds = %for.end102
  %81 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12391
  %link108 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %81, i32 0, i32 25, !dbg !12391
  %call109 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link108, i32 0) #12, !dbg !12391
  store %struct.ata_device* %call109, %struct.ata_device** %dev, align 8, !dbg !12391
  br label %for.cond110, !dbg !12391

for.cond110:                                      ; preds = %for.inc113, %if.end107
  %82 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12393
  %tobool111 = icmp ne %struct.ata_device* %82, null, !dbg !12391
  br i1 %tobool111, label %for.body112, label %for.end116, !dbg !12391

for.body112:                                      ; preds = %for.cond110
  store i32 0, i32* %retval, align 4, !dbg !12395
  br label %return, !dbg !12395

for.inc113:                                       ; No predecessors!
  %83 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12393
  %84 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12393
  %link114 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %84, i32 0, i32 25, !dbg !12393
  %call115 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %83, %struct.ata_link* %link114, i32 0) #12, !dbg !12393
  store %struct.ata_device* %call115, %struct.ata_device** %dev, align 8, !dbg !12393
  br label %for.cond110, !dbg !12393, !llvm.loop !12396

for.end116:                                       ; preds = %for.cond110
  store i32 -19, i32* %retval, align 4, !dbg !12398
  br label %return, !dbg !12398

fail:                                             ; preds = %if.then106, %if.then97, %if.then57
  call void @llvm.dbg.label(metadata !12399), !dbg !12400
  %85 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12401
  %devno117 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %85, i32 0, i32 1, !dbg !12402
  %86 = load i32, i32* %devno117, align 8, !dbg !12402
  %idxprom118 = zext i32 %86 to i64, !dbg !12403
  %arrayidx119 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom118, !dbg !12403
  %87 = load i32, i32* %arrayidx119, align 4, !dbg !12404
  %dec = add i32 %87, -1, !dbg !12404
  store i32 %dec, i32* %arrayidx119, align 4, !dbg !12404
  %88 = load i32, i32* %rc, align 4, !dbg !12405
  switch i32 %88, label %sw.epilog [
    i32 -22, label %sw.bb
    i32 -19, label %sw.bb123
    i32 -5, label %sw.bb131
  ], !dbg !12406

sw.bb:                                            ; preds = %fail
  %89 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12407
  %devno120 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %89, i32 0, i32 1, !dbg !12409
  %90 = load i32, i32* %devno120, align 8, !dbg !12409
  %idxprom121 = zext i32 %90 to i64, !dbg !12410
  %arrayidx122 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom121, !dbg !12410
  store i32 0, i32* %arrayidx122, align 4, !dbg !12411
  br label %sw.epilog, !dbg !12412

sw.bb123:                                         ; preds = %fail
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x348, metadata !12413, metadata !DIExpression()), !dbg !12415
  %91 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12415
  %devno124 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %91, i32 0, i32 1, !dbg !12415
  %92 = load i32, i32* %devno124, align 8, !dbg !12415
  %idxprom125 = zext i32 %92 to i64, !dbg !12415
  %arrayidx126 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom125, !dbg !12415
  %93 = load i32, i32* %arrayidx126, align 4, !dbg !12415
  store i32 %93, i32* %__UNIQUE_ID___x348, align 4, !dbg !12415
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y349, metadata !12416, metadata !DIExpression()), !dbg !12415
  store i32 1, i32* %__UNIQUE_ID___y349, align 4, !dbg !12415
  %94 = load i32, i32* %__UNIQUE_ID___x348, align 4, !dbg !12415
  %95 = load i32, i32* %__UNIQUE_ID___y349, align 4, !dbg !12415
  %cmp127 = icmp slt i32 %94, %95, !dbg !12415
  br i1 %cmp127, label %cond.true, label %cond.false, !dbg !12415

cond.true:                                        ; preds = %sw.bb123
  %96 = load i32, i32* %__UNIQUE_ID___x348, align 4, !dbg !12415
  br label %cond.end, !dbg !12415

cond.false:                                       ; preds = %sw.bb123
  %97 = load i32, i32* %__UNIQUE_ID___y349, align 4, !dbg !12415
  br label %cond.end, !dbg !12415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %96, %cond.true ], [ %97, %cond.false ], !dbg !12415
  store i32 %cond, i32* %tmp, align 4, !dbg !12415
  %98 = load i32, i32* %tmp, align 4, !dbg !12415
  %99 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12417
  %devno128 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %99, i32 0, i32 1, !dbg !12418
  %100 = load i32, i32* %devno128, align 8, !dbg !12418
  %idxprom129 = zext i32 %100 to i64, !dbg !12419
  %arrayidx130 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom129, !dbg !12419
  store i32 %98, i32* %arrayidx130, align 4, !dbg !12420
  br label %sw.bb131, !dbg !12419

sw.bb131:                                         ; preds = %fail, %cond.end
  %101 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12421
  %devno132 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %101, i32 0, i32 1, !dbg !12423
  %102 = load i32, i32* %devno132, align 8, !dbg !12423
  %idxprom133 = zext i32 %102 to i64, !dbg !12424
  %arrayidx134 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom133, !dbg !12424
  %103 = load i32, i32* %arrayidx134, align 4, !dbg !12424
  %cmp135 = icmp eq i32 %103, 1, !dbg !12425
  br i1 %cmp135, label %if.then136, label %if.end140, !dbg !12426

if.then136:                                       ; preds = %sw.bb131
  %104 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12427
  %link137 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %104, i32 0, i32 25, !dbg !12429
  %call138 = call i32 @sata_down_spd_limit(%struct.ata_link* %link137, i32 0) #12, !dbg !12430
  %105 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12431
  %call139 = call i32 @ata_down_xfermask_limit(%struct.ata_device* %105, i32 0) #12, !dbg !12432
  br label %if.end140, !dbg !12433

if.end140:                                        ; preds = %if.then136, %sw.bb131
  br label %sw.epilog, !dbg !12434

sw.epilog:                                        ; preds = %if.end140, %fail, %sw.bb
  %106 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12435
  %devno141 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %106, i32 0, i32 1, !dbg !12437
  %107 = load i32, i32* %devno141, align 8, !dbg !12437
  %idxprom142 = zext i32 %107 to i64, !dbg !12438
  %arrayidx143 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom142, !dbg !12438
  %108 = load i32, i32* %arrayidx143, align 4, !dbg !12438
  %tobool144 = icmp ne i32 %108, 0, !dbg !12438
  br i1 %tobool144, label %if.end146, label %if.then145, !dbg !12439

if.then145:                                       ; preds = %sw.epilog
  %109 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12440
  call void @ata_dev_disable(%struct.ata_device* %109) #12, !dbg !12441
  br label %if.end146, !dbg !12441

if.end146:                                        ; preds = %if.then145, %sw.epilog
  br label %retry, !dbg !12442

return:                                           ; preds = %for.end116, %for.body112
  %110 = load i32, i32* %retval, align 4, !dbg !12443
  ret i32 %110, !dbg !12443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_is_sata(i16* %id) #0 !dbg !12444 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !12445, metadata !DIExpression()), !dbg !12446
  %0 = load i16*, i16** %id.addr, align 8, !dbg !12447
  %arrayidx = getelementptr i16, i16* %0, i64 93, !dbg !12447
  %1 = load i16, i16* %arrayidx, align 2, !dbg !12447
  %conv = zext i16 %1 to i32, !dbg !12447
  %cmp = icmp eq i32 %conv, 0, !dbg !12449
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12450

land.lhs.true:                                    ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !12451
  %arrayidx2 = getelementptr i16, i16* %2, i64 80, !dbg !12451
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !12451
  %conv3 = sext i16 %3 to i32, !dbg !12452
  %cmp4 = icmp sge i32 %conv3, 32, !dbg !12453
  br i1 %cmp4, label %if.then, label %if.end, !dbg !12454

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !12455
  br label %return, !dbg !12455

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !12456
  br label %return, !dbg !12456

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !12457
  ret i1 %4, !dbg !12457
}

; Function Attrs: noredzone
declare dso_local i32 @ata_set_mode(%struct.ata_link*, %struct.ata_device**) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @sata_down_spd_limit(%struct.ata_link* %link, i32 %spd_limit) #0 !dbg !12458 {
entry:
  %x.addr.i43 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i43, metadata !8428, metadata !DIExpression()), !dbg !12461
  %r.i44 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i44, metadata !8435, metadata !DIExpression()), !dbg !12463
  %x.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i40, metadata !12464, metadata !DIExpression()), !dbg !12466
  %r.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i41, metadata !12472, metadata !DIExpression()), !dbg !12473
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8428, metadata !DIExpression()), !dbg !12474
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8435, metadata !DIExpression()), !dbg !12476
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %spd_limit.addr = alloca i32, align 4
  %sstatus = alloca i32, align 4
  %spd = alloca i32, align 4
  %mask = alloca i32, align 4
  %rc = alloca i32, align 4
  %bit = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !12477, metadata !DIExpression()), !dbg !12478
  store i32 %spd_limit, i32* %spd_limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spd_limit.addr, metadata !12479, metadata !DIExpression()), !dbg !12480
  call void @llvm.dbg.declare(metadata i32* %sstatus, metadata !12481, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.declare(metadata i32* %spd, metadata !12483, metadata !DIExpression()), !dbg !12484
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !12485, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12487, metadata !DIExpression()), !dbg !12488
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !12489, metadata !DIExpression()), !dbg !12490
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12491
  %call = call i32 @sata_scr_valid(%struct.ata_link* %0) #12, !dbg !12493
  %tobool = icmp ne i32 %call, 0, !dbg !12493
  br i1 %tobool, label %if.end, label %if.then, !dbg !12494

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !12495
  br label %return, !dbg !12495

if.end:                                           ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12496
  %call1 = call i32 @sata_scr_read(%struct.ata_link* %1, i32 0, i32* %sstatus) #12, !dbg !12497
  store i32 %call1, i32* %rc, align 4, !dbg !12498
  %2 = load i32, i32* %rc, align 4, !dbg !12499
  %cmp = icmp eq i32 %2, 0, !dbg !12501
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12502

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* %sstatus, align 4, !dbg !12503
  %call2 = call zeroext i1 @ata_sstatus_online(i32 %3) #12, !dbg !12504
  br i1 %call2, label %if.then3, label %if.else, !dbg !12505

if.then3:                                         ; preds = %land.lhs.true
  %4 = load i32, i32* %sstatus, align 4, !dbg !12506
  %shr = lshr i32 %4, 4, !dbg !12507
  %and = and i32 %shr, 15, !dbg !12508
  store i32 %and, i32* %spd, align 4, !dbg !12509
  br label %if.end4, !dbg !12510

if.else:                                          ; preds = %land.lhs.true, %if.end
  %5 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12511
  %sata_spd = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 9, !dbg !12512
  %6 = load i32, i32* %sata_spd, align 32, !dbg !12512
  store i32 %6, i32* %spd, align 4, !dbg !12513
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %7 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12514
  %sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 8, !dbg !12515
  %8 = load i32, i32* %sata_spd_limit, align 4, !dbg !12515
  store i32 %8, i32* %mask, align 4, !dbg !12516
  %9 = load i32, i32* %mask, align 4, !dbg !12517
  %cmp5 = icmp ule i32 %9, 1, !dbg !12519
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12520

if.then6:                                         ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !12521
  br label %return, !dbg !12521

if.end7:                                          ; preds = %if.end4
  %10 = load i32, i32* %mask, align 4, !dbg !12522
  store i32 %10, i32* %x.addr.i, align 4
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !12523
  %12 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %11, i32 -1) #8, !dbg !12524, !srcloc !8444
  store i32 %12, i32* %r.i, align 4, !dbg !12524
  %13 = load i32, i32* %r.i, align 4, !dbg !12525
  %add.i = add i32 %13, 1, !dbg !12526
  %sub = sub i32 %add.i, 1, !dbg !12527
  store i32 %sub, i32* %bit, align 4, !dbg !12528
  %14 = load i32, i32* %bit, align 4, !dbg !12529
  %shl = shl i32 1, %14, !dbg !12530
  %neg = xor i32 %shl, -1, !dbg !12531
  %15 = load i32, i32* %mask, align 4, !dbg !12532
  %and9 = and i32 %15, %neg, !dbg !12532
  store i32 %and9, i32* %mask, align 4, !dbg !12532
  %16 = load i32, i32* %spd, align 4, !dbg !12533
  %cmp10 = icmp ugt i32 %16, 1, !dbg !12535
  br i1 %cmp10, label %if.then11, label %if.else16, !dbg !12536

if.then11:                                        ; preds = %if.end7
  %17 = load i32, i32* %spd, align 4, !dbg !12537
  %sub12 = sub i32 %17, 1, !dbg !12538
  %shl13 = shl i32 1, %sub12, !dbg !12539
  %sub14 = sub i32 %shl13, 1, !dbg !12540
  %18 = load i32, i32* %mask, align 4, !dbg !12541
  %and15 = and i32 %18, %sub14, !dbg !12541
  store i32 %and15, i32* %mask, align 4, !dbg !12541
  br label %if.end17, !dbg !12542

if.else16:                                        ; preds = %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !12543
  br label %return, !dbg !12543

if.end17:                                         ; preds = %if.then11
  %19 = load i32, i32* %mask, align 4, !dbg !12544
  %tobool18 = icmp ne i32 %19, 0, !dbg !12544
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !12546

if.then19:                                        ; preds = %if.end17
  store i32 -22, i32* %retval, align 4, !dbg !12547
  br label %return, !dbg !12547

if.end20:                                         ; preds = %if.end17
  %20 = load i32, i32* %spd_limit.addr, align 4, !dbg !12548
  %tobool21 = icmp ne i32 %20, 0, !dbg !12548
  br i1 %tobool21, label %if.then22, label %if.end36, !dbg !12549

if.then22:                                        ; preds = %if.end20
  %21 = load i32, i32* %mask, align 4, !dbg !12550
  %22 = load i32, i32* %spd_limit.addr, align 4, !dbg !12551
  %shl23 = shl i32 1, %22, !dbg !12552
  %sub24 = sub i32 %shl23, 1, !dbg !12553
  %and25 = and i32 %21, %sub24, !dbg !12554
  %tobool26 = icmp ne i32 %and25, 0, !dbg !12554
  br i1 %tobool26, label %if.then27, label %if.else31, !dbg !12555

if.then27:                                        ; preds = %if.then22
  %23 = load i32, i32* %spd_limit.addr, align 4, !dbg !12556
  %shl28 = shl i32 1, %23, !dbg !12557
  %sub29 = sub i32 %shl28, 1, !dbg !12558
  %24 = load i32, i32* %mask, align 4, !dbg !12559
  %and30 = and i32 %24, %sub29, !dbg !12559
  store i32 %and30, i32* %mask, align 4, !dbg !12559
  br label %if.end35, !dbg !12560

if.else31:                                        ; preds = %if.then22
  %25 = load i32, i32* %mask, align 4, !dbg !12561
  store i32 %25, i32* %x.addr.i40, align 4
  %26 = load i32, i32* %x.addr.i40, align 4, !dbg !12562
  %27 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %26, i32 -1) #8, !dbg !12563, !srcloc !12564
  store i32 %27, i32* %r.i41, align 4, !dbg !12563
  %28 = load i32, i32* %r.i41, align 4, !dbg !12565
  %add.i42 = add i32 %28, 1, !dbg !12566
  %sub33 = sub i32 %add.i42, 1, !dbg !12567
  store i32 %sub33, i32* %bit, align 4, !dbg !12568
  %29 = load i32, i32* %bit, align 4, !dbg !12569
  %shl34 = shl i32 1, %29, !dbg !12570
  store i32 %shl34, i32* %mask, align 4, !dbg !12571
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then27
  br label %if.end36, !dbg !12572

if.end36:                                         ; preds = %if.end35, %if.end20
  %30 = load i32, i32* %mask, align 4, !dbg !12573
  %31 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12574
  %sata_spd_limit37 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %31, i32 0, i32 8, !dbg !12575
  store i32 %30, i32* %sata_spd_limit37, align 4, !dbg !12576
  %32 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12577
  %33 = load i32, i32* %mask, align 4, !dbg !12577
  store i32 %33, i32* %x.addr.i43, align 4
  %34 = load i32, i32* %x.addr.i43, align 4, !dbg !12578
  %35 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %34, i32 -1) #8, !dbg !12579, !srcloc !8444
  store i32 %35, i32* %r.i44, align 4, !dbg !12579
  %36 = load i32, i32* %r.i44, align 4, !dbg !12580
  %add.i45 = add i32 %36, 1, !dbg !12581
  %call39 = call i8* @sata_spd_string(i32 %add.i45) #12, !dbg !12577
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i64 0, i64 0), i8* %call39) #12, !dbg !12577
  store i32 0, i32* %retval, align 4, !dbg !12582
  br label %return, !dbg !12582

return:                                           ; preds = %if.end36, %if.then19, %if.else16, %if.then6, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !12583
  ret i32 %37, !dbg !12583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_down_xfermask_limit(%struct.ata_device* %dev, i32 %sel) #0 !dbg !12584 {
entry:
  %x.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i74, metadata !8428, metadata !DIExpression()), !dbg !12587
  %r.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i75, metadata !8435, metadata !DIExpression()), !dbg !12593
  %x.addr.i71 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i71, metadata !8428, metadata !DIExpression()), !dbg !12594
  %r.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i72, metadata !8435, metadata !DIExpression()), !dbg !12597
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8428, metadata !DIExpression()), !dbg !12598
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8435, metadata !DIExpression()), !dbg !12600
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %sel.addr = alloca i32, align 4
  %buf = alloca [32 x i8], align 16
  %orig_mask = alloca i64, align 8
  %xfer_mask = alloca i64, align 8
  %pio_mask = alloca i64, align 8
  %mwdma_mask = alloca i64, align 8
  %udma_mask = alloca i64, align 8
  %quiet = alloca i32, align 4
  %highbit = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12601, metadata !DIExpression()), !dbg !12602
  store i32 %sel, i32* %sel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sel.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !12605, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.declare(metadata i64* %orig_mask, metadata !12607, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.declare(metadata i64* %xfer_mask, metadata !12609, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.declare(metadata i64* %pio_mask, metadata !12611, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.declare(metadata i64* %mwdma_mask, metadata !12613, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.declare(metadata i64* %udma_mask, metadata !12615, metadata !DIExpression()), !dbg !12616
  call void @llvm.dbg.declare(metadata i32* %quiet, metadata !12617, metadata !DIExpression()), !dbg !12618
  call void @llvm.dbg.declare(metadata i32* %highbit, metadata !12619, metadata !DIExpression()), !dbg !12620
  %0 = load i32, i32* %sel.addr, align 4, !dbg !12621
  %and = and i32 %0, -2147483648, !dbg !12622
  %tobool = icmp ne i32 %and, 0, !dbg !12623
  %lnot = xor i1 %tobool, true, !dbg !12623
  %lnot1 = xor i1 %lnot, true, !dbg !12624
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12624
  store i32 %lnot.ext, i32* %quiet, align 4, !dbg !12625
  %1 = load i32, i32* %sel.addr, align 4, !dbg !12626
  %and2 = and i32 %1, 2147483647, !dbg !12626
  store i32 %and2, i32* %sel.addr, align 4, !dbg !12626
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12627
  %pio_mask3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 20, !dbg !12628
  %3 = load i64, i64* %pio_mask3, align 8, !dbg !12628
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12629
  %mwdma_mask4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 21, !dbg !12630
  %5 = load i64, i64* %mwdma_mask4, align 16, !dbg !12630
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12631
  %udma_mask5 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 22, !dbg !12632
  %7 = load i64, i64* %udma_mask5, align 8, !dbg !12632
  %call = call i64 @ata_pack_xfermask(i64 %3, i64 %5, i64 %7) #12, !dbg !12633
  store i64 %call, i64* %orig_mask, align 8, !dbg !12634
  store i64 %call, i64* %xfer_mask, align 8, !dbg !12635
  %8 = load i64, i64* %xfer_mask, align 8, !dbg !12636
  call void @ata_unpack_xfermask(i64 %8, i64* %pio_mask, i64* %mwdma_mask, i64* %udma_mask) #12, !dbg !12637
  %9 = load i32, i32* %sel.addr, align 4, !dbg !12638
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb34
    i32 4, label %sw.bb36
    i32 3, label %sw.bb38
  ], !dbg !12639

sw.bb:                                            ; preds = %entry
  %10 = load i64, i64* %pio_mask, align 8, !dbg !12640
  %conv = trunc i64 %10 to i32, !dbg !12640
  store i32 %conv, i32* %x.addr.i, align 4
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !12641
  %12 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %11, i32 -1) #8, !dbg !12642, !srcloc !8444
  store i32 %12, i32* %r.i, align 4, !dbg !12642
  %13 = load i32, i32* %r.i, align 4, !dbg !12643
  %add.i = add i32 %13, 1, !dbg !12644
  %sub = sub i32 %add.i, 1, !dbg !12645
  store i32 %sub, i32* %highbit, align 4, !dbg !12646
  %14 = load i32, i32* %highbit, align 4, !dbg !12647
  %shl = shl i32 1, %14, !dbg !12648
  %neg = xor i32 %shl, -1, !dbg !12649
  %conv7 = sext i32 %neg to i64, !dbg !12649
  %15 = load i64, i64* %pio_mask, align 8, !dbg !12650
  %and8 = and i64 %15, %conv7, !dbg !12650
  store i64 %and8, i64* %pio_mask, align 8, !dbg !12650
  br label %sw.epilog, !dbg !12651

sw.bb9:                                           ; preds = %entry
  %16 = load i64, i64* %udma_mask, align 8, !dbg !12652
  %tobool10 = icmp ne i64 %16, 0, !dbg !12652
  br i1 %tobool10, label %if.then, label %if.else, !dbg !12653

if.then:                                          ; preds = %sw.bb9
  %17 = load i64, i64* %udma_mask, align 8, !dbg !12654
  %conv11 = trunc i64 %17 to i32, !dbg !12654
  store i32 %conv11, i32* %x.addr.i71, align 4
  %18 = load i32, i32* %x.addr.i71, align 4, !dbg !12655
  %19 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %18, i32 -1) #8, !dbg !12656, !srcloc !8444
  store i32 %19, i32* %r.i72, align 4, !dbg !12656
  %20 = load i32, i32* %r.i72, align 4, !dbg !12657
  %add.i73 = add i32 %20, 1, !dbg !12658
  %sub13 = sub i32 %add.i73, 1, !dbg !12659
  store i32 %sub13, i32* %highbit, align 4, !dbg !12660
  %21 = load i32, i32* %highbit, align 4, !dbg !12661
  %shl14 = shl i32 1, %21, !dbg !12662
  %neg15 = xor i32 %shl14, -1, !dbg !12663
  %conv16 = sext i32 %neg15 to i64, !dbg !12663
  %22 = load i64, i64* %udma_mask, align 8, !dbg !12664
  %and17 = and i64 %22, %conv16, !dbg !12664
  store i64 %and17, i64* %udma_mask, align 8, !dbg !12664
  %23 = load i64, i64* %udma_mask, align 8, !dbg !12665
  %tobool18 = icmp ne i64 %23, 0, !dbg !12665
  br i1 %tobool18, label %if.end, label %if.then19, !dbg !12667

if.then19:                                        ; preds = %if.then
  store i32 -2, i32* %retval, align 4, !dbg !12668
  br label %return, !dbg !12668

if.end:                                           ; preds = %if.then
  br label %if.end33, !dbg !12669

if.else:                                          ; preds = %sw.bb9
  %24 = load i64, i64* %mwdma_mask, align 8, !dbg !12670
  %tobool20 = icmp ne i64 %24, 0, !dbg !12670
  br i1 %tobool20, label %if.then21, label %if.end32, !dbg !12671

if.then21:                                        ; preds = %if.else
  %25 = load i64, i64* %mwdma_mask, align 8, !dbg !12672
  %conv22 = trunc i64 %25 to i32, !dbg !12672
  store i32 %conv22, i32* %x.addr.i74, align 4
  %26 = load i32, i32* %x.addr.i74, align 4, !dbg !12673
  %27 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %26, i32 -1) #8, !dbg !12674, !srcloc !8444
  store i32 %27, i32* %r.i75, align 4, !dbg !12674
  %28 = load i32, i32* %r.i75, align 4, !dbg !12675
  %add.i76 = add i32 %28, 1, !dbg !12676
  %sub24 = sub i32 %add.i76, 1, !dbg !12677
  store i32 %sub24, i32* %highbit, align 4, !dbg !12678
  %29 = load i32, i32* %highbit, align 4, !dbg !12679
  %shl25 = shl i32 1, %29, !dbg !12680
  %neg26 = xor i32 %shl25, -1, !dbg !12681
  %conv27 = sext i32 %neg26 to i64, !dbg !12681
  %30 = load i64, i64* %mwdma_mask, align 8, !dbg !12682
  %and28 = and i64 %30, %conv27, !dbg !12682
  store i64 %and28, i64* %mwdma_mask, align 8, !dbg !12682
  %31 = load i64, i64* %mwdma_mask, align 8, !dbg !12683
  %tobool29 = icmp ne i64 %31, 0, !dbg !12683
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !12685

if.then30:                                        ; preds = %if.then21
  store i32 -2, i32* %retval, align 4, !dbg !12686
  br label %return, !dbg !12686

if.end31:                                         ; preds = %if.then21
  br label %if.end32, !dbg !12687

if.end32:                                         ; preds = %if.end31, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end
  br label %sw.epilog, !dbg !12688

sw.bb34:                                          ; preds = %entry
  %32 = load i64, i64* %udma_mask, align 8, !dbg !12689
  %and35 = and i64 %32, 7, !dbg !12689
  store i64 %and35, i64* %udma_mask, align 8, !dbg !12689
  br label %sw.epilog, !dbg !12690

sw.bb36:                                          ; preds = %entry
  %33 = load i64, i64* %pio_mask, align 8, !dbg !12691
  %and37 = and i64 %33, 1, !dbg !12691
  store i64 %and37, i64* %pio_mask, align 8, !dbg !12691
  br label %sw.bb38, !dbg !12692

sw.bb38:                                          ; preds = %entry, %sw.bb36
  store i64 0, i64* %mwdma_mask, align 8, !dbg !12693
  store i64 0, i64* %udma_mask, align 8, !dbg !12694
  br label %sw.epilog, !dbg !12695

sw.default:                                       ; preds = %entry
  br label %do.body, !dbg !12696

do.body:                                          ; preds = %sw.default
  br label %do.body39, !dbg !12697

do.body39:                                        ; preds = %do.body
  br label %do.end, !dbg !12699

do.end:                                           ; preds = %do.body39
  br label %do.body40, !dbg !12697

do.body40:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 3168, i32 0, i64 12) #7, !dbg !12701, !srcloc !12703
  br label %do.end41, !dbg !12701

do.end41:                                         ; preds = %do.body40
  br label %do.body42, !dbg !12697

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 350) #7, !dbg !12704, !srcloc !12707
  unreachable, !dbg !12708

do.end43:                                         ; No predecessors!
  br label %do.end44, !dbg !12697

do.end44:                                         ; preds = %do.end43
  br label %sw.epilog, !dbg !12709

sw.epilog:                                        ; preds = %do.end44, %sw.bb38, %sw.bb34, %if.end33, %sw.bb
  %34 = load i64, i64* %pio_mask, align 8, !dbg !12710
  %35 = load i64, i64* %mwdma_mask, align 8, !dbg !12711
  %36 = load i64, i64* %udma_mask, align 8, !dbg !12712
  %call45 = call i64 @ata_pack_xfermask(i64 %34, i64 %35, i64 %36) #12, !dbg !12713
  %37 = load i64, i64* %xfer_mask, align 8, !dbg !12714
  %and46 = and i64 %37, %call45, !dbg !12714
  store i64 %and46, i64* %xfer_mask, align 8, !dbg !12714
  %38 = load i64, i64* %xfer_mask, align 8, !dbg !12715
  %and47 = and i64 %38, 127, !dbg !12717
  %tobool48 = icmp ne i64 %and47, 0, !dbg !12717
  br i1 %tobool48, label %lor.lhs.false, label %if.then50, !dbg !12718

lor.lhs.false:                                    ; preds = %sw.epilog
  %39 = load i64, i64* %xfer_mask, align 8, !dbg !12719
  %40 = load i64, i64* %orig_mask, align 8, !dbg !12720
  %cmp = icmp eq i64 %39, %40, !dbg !12721
  br i1 %cmp, label %if.then50, label %if.end51, !dbg !12722

if.then50:                                        ; preds = %lor.lhs.false, %sw.epilog
  store i32 -2, i32* %retval, align 4, !dbg !12723
  br label %return, !dbg !12723

if.end51:                                         ; preds = %lor.lhs.false
  %41 = load i32, i32* %quiet, align 4, !dbg !12724
  %tobool52 = icmp ne i32 %41, 0, !dbg !12724
  br i1 %tobool52, label %if.end67, label %if.then53, !dbg !12726

if.then53:                                        ; preds = %if.end51
  %42 = load i64, i64* %xfer_mask, align 8, !dbg !12727
  %and54 = and i64 %42, 1048448, !dbg !12730
  %tobool55 = icmp ne i64 %and54, 0, !dbg !12730
  br i1 %tobool55, label %if.then56, label %if.else61, !dbg !12731

if.then56:                                        ; preds = %if.then53
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !12732
  %43 = load i64, i64* %xfer_mask, align 8, !dbg !12733
  %call57 = call i8* @ata_mode_string(i64 %43) #12, !dbg !12734
  %44 = load i64, i64* %xfer_mask, align 8, !dbg !12735
  %and58 = and i64 %44, 127, !dbg !12736
  %call59 = call i8* @ata_mode_string(i64 %and58) #12, !dbg !12737
  %call60 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0), i8* %call57, i8* %call59) #12, !dbg !12738
  br label %if.end65, !dbg !12738

if.else61:                                        ; preds = %if.then53
  %arraydecay62 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !12739
  %45 = load i64, i64* %xfer_mask, align 8, !dbg !12740
  %call63 = call i8* @ata_mode_string(i64 %45) #12, !dbg !12741
  %call64 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay62, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i64 0, i64 0), i8* %call63) #12, !dbg !12742
  br label %if.end65

if.end65:                                         ; preds = %if.else61, %if.then56
  %46 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12743
  %arraydecay66 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !12743
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.79, i64 0, i64 0), i8* %arraydecay66) #12, !dbg !12743
  br label %if.end67, !dbg !12744

if.end67:                                         ; preds = %if.end65, %if.end51
  %47 = load i64, i64* %xfer_mask, align 8, !dbg !12745
  %48 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12746
  %pio_mask68 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %48, i32 0, i32 20, !dbg !12747
  %49 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12748
  %mwdma_mask69 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %49, i32 0, i32 21, !dbg !12749
  %50 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12750
  %udma_mask70 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %50, i32 0, i32 22, !dbg !12751
  call void @ata_unpack_xfermask(i64 %47, i64* %pio_mask68, i64* %mwdma_mask69, i64* %udma_mask70) #12, !dbg !12752
  store i32 0, i32* %retval, align 4, !dbg !12753
  br label %return, !dbg !12753

return:                                           ; preds = %if.end67, %if.then50, %if.then30, %if.then19
  %51 = load i32, i32* %retval, align 4, !dbg !12754
  ret i32 %51, !dbg !12754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_device* @ata_dev_pair(%struct.ata_device* %adev) #0 !dbg !12755 {
entry:
  %retval = alloca %struct.ata_device*, align 8
  %adev.addr = alloca %struct.ata_device*, align 8
  %link = alloca %struct.ata_link*, align 8
  %pair = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %adev, %struct.ata_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %adev.addr, metadata !12758, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !12760, metadata !DIExpression()), !dbg !12761
  %0 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !12762
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !12763
  %1 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !12763
  store %struct.ata_link* %1, %struct.ata_link** %link, align 8, !dbg !12761
  call void @llvm.dbg.declare(metadata %struct.ata_device** %pair, metadata !12764, metadata !DIExpression()), !dbg !12765
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12766
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 14, !dbg !12767
  %3 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !12768
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 1, !dbg !12769
  %4 = load i32, i32* %devno, align 8, !dbg !12769
  %sub = sub i32 1, %4, !dbg !12770
  %idxprom = zext i32 %sub to i64, !dbg !12766
  %arrayidx = getelementptr [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 %idxprom, !dbg !12766
  store %struct.ata_device* %arrayidx, %struct.ata_device** %pair, align 8, !dbg !12765
  %5 = load %struct.ata_device*, %struct.ata_device** %pair, align 8, !dbg !12771
  %call = call i32 @ata_dev_enabled(%struct.ata_device* %5) #12, !dbg !12773
  %tobool = icmp ne i32 %call, 0, !dbg !12773
  br i1 %tobool, label %if.end, label %if.then, !dbg !12774

if.then:                                          ; preds = %entry
  store %struct.ata_device* null, %struct.ata_device** %retval, align 8, !dbg !12775
  br label %return, !dbg !12775

if.end:                                           ; preds = %entry
  %6 = load %struct.ata_device*, %struct.ata_device** %pair, align 8, !dbg !12776
  store %struct.ata_device* %6, %struct.ata_device** %retval, align 8, !dbg !12777
  br label %return, !dbg !12777

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.ata_device*, %struct.ata_device** %retval, align 8, !dbg !12778
  ret %struct.ata_device* %7, !dbg !12778
}

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_valid(%struct.ata_link*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_sstatus_online(i32 %sstatus) #0 !dbg !12779 {
entry:
  %sstatus.addr = alloca i32, align 4
  store i32 %sstatus, i32* %sstatus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sstatus.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  %0 = load i32, i32* %sstatus.addr, align 4, !dbg !12784
  %and = and i32 %0, 15, !dbg !12785
  %cmp = icmp eq i32 %and, 3, !dbg !12786
  ret i1 %cmp, !dbg !12787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_link_printk(%struct.ata_link* %link, i8* %level, i8* %fmt, ...) #0 !dbg !12788 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %level.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %vaf = alloca %struct.va_format, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !12791, metadata !DIExpression()), !dbg !12792
  store i8* %level, i8** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %level.addr, metadata !12793, metadata !DIExpression()), !dbg !12794
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !12795, metadata !DIExpression()), !dbg !12796
  call void @llvm.dbg.declare(metadata %struct.va_format* %vaf, metadata !12797, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !12799, metadata !DIExpression()), !dbg !12800
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !12801
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !12801
  call void @llvm.va_start(i8* %arraydecay1), !dbg !12801
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !12802
  %fmt2 = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 0, !dbg !12803
  store i8* %0, i8** %fmt2, align 8, !dbg !12804
  %va = getelementptr inbounds %struct.va_format, %struct.va_format* %vaf, i32 0, i32 1, !dbg !12805
  store [1 x %struct.__va_list_tag]* %args, [1 x %struct.__va_list_tag]** %va, align 8, !dbg !12806
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12807
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !12809
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !12809
  %call = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %2) #12, !dbg !12810
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !12811

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12812
  %ap3 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !12813
  %4 = load %struct.ata_port*, %struct.ata_port** %ap3, align 64, !dbg !12813
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 26, !dbg !12814
  %5 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !12814
  %tobool = icmp ne %struct.ata_link* %5, null, !dbg !12812
  br i1 %tobool, label %if.then, label %if.else, !dbg !12815

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load i8*, i8** %level.addr, align 8, !dbg !12816
  %7 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12817
  %ap4 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 0, !dbg !12818
  %8 = load %struct.ata_port*, %struct.ata_port** %ap4, align 64, !dbg !12818
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 5, !dbg !12819
  %9 = load i32, i32* %print_id, align 4, !dbg !12819
  %10 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12820
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %10, i32 0, i32 1, !dbg !12821
  %11 = load i32, i32* %pmp, align 8, !dbg !12821
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.102, i64 0, i64 0), i8* %6, i32 %9, i32 %11, %struct.va_format* %vaf) #13, !dbg !12822
  br label %if.end, !dbg !12822

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i8*, i8** %level.addr, align 8, !dbg !12823
  %13 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12824
  %ap6 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %13, i32 0, i32 0, !dbg !12825
  %14 = load %struct.ata_port*, %struct.ata_port** %ap6, align 64, !dbg !12825
  %print_id7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 5, !dbg !12826
  %15 = load i32, i32* %print_id7, align 4, !dbg !12826
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i64 0, i64 0), i8* %12, i32 %15, %struct.va_format* %vaf) #13, !dbg !12827
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !12828
  %arraydecay910 = bitcast %struct.__va_list_tag* %arraydecay9 to i8*, !dbg !12828
  call void @llvm.va_end(i8* %arraydecay910), !dbg !12828
  ret void, !dbg !12829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @ata_timing_cycle2mode(i32 %xfer_shift, i32 %cycle) #0 !dbg !12830 {
entry:
  %retval = alloca i8, align 1
  %xfer_shift.addr = alloca i32, align 4
  %cycle.addr = alloca i32, align 4
  %base_mode = alloca i8, align 1
  %last_mode = alloca i8, align 1
  %ent = alloca %struct.ata_xfer_ent*, align 8
  %t = alloca %struct.ata_timing*, align 8
  %this_cycle = alloca i16, align 2
  store i32 %xfer_shift, i32* %xfer_shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xfer_shift.addr, metadata !12833, metadata !DIExpression()), !dbg !12834
  store i32 %cycle, i32* %cycle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cycle.addr, metadata !12835, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.declare(metadata i8* %base_mode, metadata !12837, metadata !DIExpression()), !dbg !12838
  store i8 -1, i8* %base_mode, align 1, !dbg !12838
  call void @llvm.dbg.declare(metadata i8* %last_mode, metadata !12839, metadata !DIExpression()), !dbg !12840
  store i8 -1, i8* %last_mode, align 1, !dbg !12840
  call void @llvm.dbg.declare(metadata %struct.ata_xfer_ent** %ent, metadata !12841, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.declare(metadata %struct.ata_timing** %t, metadata !12843, metadata !DIExpression()), !dbg !12858
  store %struct.ata_xfer_ent* getelementptr inbounds ([4 x %struct.ata_xfer_ent], [4 x %struct.ata_xfer_ent]* @ata_xfer_tbl, i64 0, i64 0), %struct.ata_xfer_ent** %ent, align 8, !dbg !12859
  br label %for.cond, !dbg !12861

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !12862
  %shift = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %0, i32 0, i32 0, !dbg !12864
  %1 = load i32, i32* %shift, align 4, !dbg !12864
  %cmp = icmp sge i32 %1, 0, !dbg !12865
  br i1 %cmp, label %for.body, label %for.end, !dbg !12866

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !12867
  %shift1 = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %2, i32 0, i32 0, !dbg !12869
  %3 = load i32, i32* %shift1, align 4, !dbg !12869
  %4 = load i32, i32* %xfer_shift.addr, align 4, !dbg !12870
  %cmp2 = icmp eq i32 %3, %4, !dbg !12871
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12872

if.then:                                          ; preds = %for.body
  %5 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !12873
  %base = getelementptr inbounds %struct.ata_xfer_ent, %struct.ata_xfer_ent* %5, i32 0, i32 2, !dbg !12874
  %6 = load i8, i8* %base, align 4, !dbg !12874
  store i8 %6, i8* %base_mode, align 1, !dbg !12875
  br label %if.end, !dbg !12876

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !12870

for.inc:                                          ; preds = %if.end
  %7 = load %struct.ata_xfer_ent*, %struct.ata_xfer_ent** %ent, align 8, !dbg !12877
  %incdec.ptr = getelementptr %struct.ata_xfer_ent, %struct.ata_xfer_ent* %7, i32 1, !dbg !12877
  store %struct.ata_xfer_ent* %incdec.ptr, %struct.ata_xfer_ent** %ent, align 8, !dbg !12877
  br label %for.cond, !dbg !12878, !llvm.loop !12879

for.end:                                          ; preds = %for.cond
  %8 = load i8, i8* %base_mode, align 1, !dbg !12881
  %call = call %struct.ata_timing* @ata_timing_find_mode(i8 zeroext %8) #12, !dbg !12883
  store %struct.ata_timing* %call, %struct.ata_timing** %t, align 8, !dbg !12884
  br label %for.cond3, !dbg !12885

for.cond3:                                        ; preds = %for.inc17, %for.end
  %9 = load %struct.ata_timing*, %struct.ata_timing** %t, align 8, !dbg !12886
  %tobool = icmp ne %struct.ata_timing* %9, null, !dbg !12886
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12888

land.rhs:                                         ; preds = %for.cond3
  %10 = load %struct.ata_timing*, %struct.ata_timing** %t, align 8, !dbg !12889
  %mode = getelementptr inbounds %struct.ata_timing, %struct.ata_timing* %10, i32 0, i32 0, !dbg !12890
  %11 = load i16, i16* %mode, align 2, !dbg !12890
  %conv = zext i16 %11 to i64, !dbg !12889
  %call4 = call i32 @ata_xfer_mode2shift(i64 %conv) #12, !dbg !12891
  %12 = load i32, i32* %xfer_shift.addr, align 4, !dbg !12892
  %cmp5 = icmp eq i32 %call4, %12, !dbg !12893
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond3
  %13 = phi i1 [ false, %for.cond3 ], [ %cmp5, %land.rhs ], !dbg !12894
  br i1 %13, label %for.body7, label %for.end19, !dbg !12895

for.body7:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i16* %this_cycle, metadata !12896, metadata !DIExpression()), !dbg !12898
  %14 = load i32, i32* %xfer_shift.addr, align 4, !dbg !12899
  switch i32 %14, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb
    i32 12, label %sw.bb9
  ], !dbg !12900

sw.bb:                                            ; preds = %for.body7, %for.body7
  %15 = load %struct.ata_timing*, %struct.ata_timing** %t, align 8, !dbg !12901
  %cycle8 = getelementptr inbounds %struct.ata_timing, %struct.ata_timing* %15, i32 0, i32 8, !dbg !12903
  %16 = load i16, i16* %cycle8, align 2, !dbg !12903
  store i16 %16, i16* %this_cycle, align 2, !dbg !12904
  br label %sw.epilog, !dbg !12905

sw.bb9:                                           ; preds = %for.body7
  %17 = load %struct.ata_timing*, %struct.ata_timing** %t, align 8, !dbg !12906
  %udma = getelementptr inbounds %struct.ata_timing, %struct.ata_timing* %17, i32 0, i32 9, !dbg !12907
  %18 = load i16, i16* %udma, align 2, !dbg !12907
  store i16 %18, i16* %this_cycle, align 2, !dbg !12908
  br label %sw.epilog, !dbg !12909

sw.default:                                       ; preds = %for.body7
  store i8 -1, i8* %retval, align 1, !dbg !12910
  br label %return, !dbg !12910

sw.epilog:                                        ; preds = %sw.bb9, %sw.bb
  %19 = load i32, i32* %cycle.addr, align 4, !dbg !12911
  %20 = load i16, i16* %this_cycle, align 2, !dbg !12913
  %conv10 = zext i16 %20 to i32, !dbg !12913
  %cmp11 = icmp sgt i32 %19, %conv10, !dbg !12914
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !12915

if.then13:                                        ; preds = %sw.epilog
  br label %for.end19, !dbg !12916

if.end14:                                         ; preds = %sw.epilog
  %21 = load %struct.ata_timing*, %struct.ata_timing** %t, align 8, !dbg !12917
  %mode15 = getelementptr inbounds %struct.ata_timing, %struct.ata_timing* %21, i32 0, i32 0, !dbg !12918
  %22 = load i16, i16* %mode15, align 2, !dbg !12918
  %conv16 = trunc i16 %22 to i8, !dbg !12917
  store i8 %conv16, i8* %last_mode, align 1, !dbg !12919
  br label %for.inc17, !dbg !12920

for.inc17:                                        ; preds = %if.end14
  %23 = load %struct.ata_timing*, %struct.ata_timing** %t, align 8, !dbg !12921
  %incdec.ptr18 = getelementptr %struct.ata_timing, %struct.ata_timing* %23, i32 1, !dbg !12921
  store %struct.ata_timing* %incdec.ptr18, %struct.ata_timing** %t, align 8, !dbg !12921
  br label %for.cond3, !dbg !12922, !llvm.loop !12923

for.end19:                                        ; preds = %if.then13, %land.end
  %24 = load i8, i8* %last_mode, align 1, !dbg !12925
  store i8 %24, i8* %retval, align 1, !dbg !12926
  br label %return, !dbg !12926

return:                                           ; preds = %for.end19, %sw.default
  %25 = load i8, i8* %retval, align 1, !dbg !12927
  ret i8 %25, !dbg !12927
}

; Function Attrs: noredzone
declare dso_local %struct.ata_timing* @ata_timing_find_mode(i8 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_do_set_mode(%struct.ata_link* %link, %struct.ata_device** %r_failed_dev) #0 !dbg !12928 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %r_failed_dev.addr = alloca %struct.ata_device**, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %rc = alloca i32, align 4
  %used_dma = alloca i32, align 4
  %found = alloca i32, align 4
  %pio_mask = alloca i64, align 8
  %dma_mask = alloca i64, align 8
  %mode_mask = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !12929, metadata !DIExpression()), !dbg !12930
  store %struct.ata_device** %r_failed_dev, %struct.ata_device*** %r_failed_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device*** %r_failed_dev.addr, metadata !12931, metadata !DIExpression()), !dbg !12932
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !12933, metadata !DIExpression()), !dbg !12934
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12935
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !12936
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !12936
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !12934
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12937, metadata !DIExpression()), !dbg !12938
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12939, metadata !DIExpression()), !dbg !12940
  store i32 0, i32* %rc, align 4, !dbg !12940
  call void @llvm.dbg.declare(metadata i32* %used_dma, metadata !12941, metadata !DIExpression()), !dbg !12942
  store i32 0, i32* %used_dma, align 4, !dbg !12942
  call void @llvm.dbg.declare(metadata i32* %found, metadata !12943, metadata !DIExpression()), !dbg !12944
  store i32 0, i32* %found, align 4, !dbg !12944
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12945
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %2, i32 0) #12, !dbg !12945
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !12945
  br label %for.cond, !dbg !12945

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12947
  %tobool = icmp ne %struct.ata_device* %3, null, !dbg !12945
  br i1 %tobool, label %for.body, label %for.end, !dbg !12945

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %pio_mask, metadata !12949, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.declare(metadata i64* %dma_mask, metadata !12952, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.declare(metadata i32* %mode_mask, metadata !12954, metadata !DIExpression()), !dbg !12955
  store i32 1, i32* %mode_mask, align 4, !dbg !12956
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12957
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 11, !dbg !12959
  %5 = load i32, i32* %class, align 64, !dbg !12959
  %cmp = icmp eq i32 %5, 3, !dbg !12960
  br i1 %cmp, label %if.then, label %if.else, !dbg !12961

if.then:                                          ; preds = %for.body
  store i32 2, i32* %mode_mask, align 4, !dbg !12962
  br label %if.end4, !dbg !12963

if.else:                                          ; preds = %for.body
  %6 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12964
  %7 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 27, !dbg !12966
  %id = bitcast %union.anon.83* %7 to [256 x i16]*, !dbg !12966
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !12964
  %call2 = call zeroext i1 @ata_id_is_cfa(i16* %arraydecay) #12, !dbg !12967
  br i1 %call2, label %if.then3, label %if.end, !dbg !12968

if.then3:                                         ; preds = %if.else
  store i32 4, i32* %mode_mask, align 4, !dbg !12969
  br label %if.end, !dbg !12970

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %8 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12971
  call void @ata_dev_xfermask(%struct.ata_device* %8) #12, !dbg !12972
  %9 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12973
  call void @ata_force_xfermask(%struct.ata_device* %9) #12, !dbg !12974
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12975
  %pio_mask5 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 20, !dbg !12976
  %11 = load i64, i64* %pio_mask5, align 8, !dbg !12976
  %call6 = call i64 @ata_pack_xfermask(i64 %11, i64 0, i64 0) #12, !dbg !12977
  store i64 %call6, i64* %pio_mask, align 8, !dbg !12978
  %12 = load i32, i32* @libata_dma_mask, align 4, !dbg !12979
  %13 = load i32, i32* %mode_mask, align 4, !dbg !12981
  %and = and i32 %12, %13, !dbg !12982
  %tobool7 = icmp ne i32 %and, 0, !dbg !12982
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !12983

if.then8:                                         ; preds = %if.end4
  %14 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12984
  %mwdma_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 21, !dbg !12985
  %15 = load i64, i64* %mwdma_mask, align 16, !dbg !12985
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12986
  %udma_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 22, !dbg !12987
  %17 = load i64, i64* %udma_mask, align 8, !dbg !12987
  %call9 = call i64 @ata_pack_xfermask(i64 0, i64 %15, i64 %17) #12, !dbg !12988
  store i64 %call9, i64* %dma_mask, align 8, !dbg !12989
  br label %if.end11, !dbg !12990

if.else10:                                        ; preds = %if.end4
  store i64 0, i64* %dma_mask, align 8, !dbg !12991
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then8
  %18 = load i64, i64* %pio_mask, align 8, !dbg !12992
  %call12 = call zeroext i8 @ata_xfer_mask2mode(i64 %18) #12, !dbg !12993
  %19 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12994
  %pio_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 13, !dbg !12995
  store i8 %call12, i8* %pio_mode, align 16, !dbg !12996
  %20 = load i64, i64* %dma_mask, align 8, !dbg !12997
  %call13 = call zeroext i8 @ata_xfer_mask2mode(i64 %20) #12, !dbg !12998
  %21 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12999
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %21, i32 0, i32 14, !dbg !13000
  store i8 %call13, i8* %dma_mode, align 1, !dbg !13001
  store i32 1, i32* %found, align 4, !dbg !13002
  %22 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13003
  %call14 = call i32 @ata_dma_enabled(%struct.ata_device* %22) #12, !dbg !13005
  %tobool15 = icmp ne i32 %call14, 0, !dbg !13005
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !13006

if.then16:                                        ; preds = %if.end11
  store i32 1, i32* %used_dma, align 4, !dbg !13007
  br label %if.end17, !dbg !13008

if.end17:                                         ; preds = %if.then16, %if.end11
  br label %for.inc, !dbg !13009

for.inc:                                          ; preds = %if.end17
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12947
  %24 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12947
  %call18 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %23, %struct.ata_link* %24, i32 0) #12, !dbg !12947
  store %struct.ata_device* %call18, %struct.ata_device** %dev, align 8, !dbg !12947
  br label %for.cond, !dbg !12947, !llvm.loop !13010

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %found, align 4, !dbg !13012
  %tobool19 = icmp ne i32 %25, 0, !dbg !13012
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !13014

if.then20:                                        ; preds = %for.end
  br label %out, !dbg !13015

if.end21:                                         ; preds = %for.end
  %26 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13016
  %call22 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %26, i32 0) #12, !dbg !13016
  store %struct.ata_device* %call22, %struct.ata_device** %dev, align 8, !dbg !13016
  br label %for.cond23, !dbg !13016

for.cond23:                                       ; preds = %for.inc37, %if.end21
  %27 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13018
  %tobool24 = icmp ne %struct.ata_device* %27, null, !dbg !13016
  br i1 %tobool24, label %for.body25, label %for.end39, !dbg !13016

for.body25:                                       ; preds = %for.cond23
  %28 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13020
  %pio_mode26 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %28, i32 0, i32 13, !dbg !13023
  %29 = load i8, i8* %pio_mode26, align 16, !dbg !13023
  %conv = zext i8 %29 to i32, !dbg !13020
  %cmp27 = icmp eq i32 %conv, 255, !dbg !13024
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !13025

if.then29:                                        ; preds = %for.body25
  %30 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13026
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0)) #12, !dbg !13026
  store i32 -22, i32* %rc, align 4, !dbg !13028
  br label %out, !dbg !13029

if.end30:                                         ; preds = %for.body25
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13030
  %pio_mode31 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 13, !dbg !13031
  %32 = load i8, i8* %pio_mode31, align 16, !dbg !13031
  %33 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13032
  %xfer_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 15, !dbg !13033
  store i8 %32, i8* %xfer_mode, align 2, !dbg !13034
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13035
  %xfer_shift = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 16, !dbg !13036
  store i32 0, i32* %xfer_shift, align 4, !dbg !13037
  %35 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13038
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %35, i32 0, i32 1, !dbg !13040
  %36 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13040
  %set_piomode = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %36, i32 0, i32 7, !dbg !13041
  %37 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_piomode, align 8, !dbg !13041
  %tobool32 = icmp ne void (%struct.ata_port*, %struct.ata_device*)* %37, null, !dbg !13038
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !13042

if.then33:                                        ; preds = %if.end30
  %38 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13043
  %ops34 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 1, !dbg !13044
  %39 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops34, align 8, !dbg !13044
  %set_piomode35 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %39, i32 0, i32 7, !dbg !13045
  %40 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_piomode35, align 8, !dbg !13045
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13046
  %42 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13047
  call void %40(%struct.ata_port* %41, %struct.ata_device* %42) #12, !dbg !13043
  br label %if.end36, !dbg !13043

if.end36:                                         ; preds = %if.then33, %if.end30
  br label %for.inc37, !dbg !13048

for.inc37:                                        ; preds = %if.end36
  %43 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13018
  %44 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13018
  %call38 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %43, %struct.ata_link* %44, i32 0) #12, !dbg !13018
  store %struct.ata_device* %call38, %struct.ata_device** %dev, align 8, !dbg !13018
  br label %for.cond23, !dbg !13018, !llvm.loop !13049

for.end39:                                        ; preds = %for.cond23
  %45 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13051
  %call40 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %45, i32 0) #12, !dbg !13051
  store %struct.ata_device* %call40, %struct.ata_device** %dev, align 8, !dbg !13051
  br label %for.cond41, !dbg !13051

for.cond41:                                       ; preds = %for.inc60, %for.end39
  %46 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13053
  %tobool42 = icmp ne %struct.ata_device* %46, null, !dbg !13051
  br i1 %tobool42, label %for.body43, label %for.end62, !dbg !13051

for.body43:                                       ; preds = %for.cond41
  %47 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13055
  %call44 = call i32 @ata_dma_enabled(%struct.ata_device* %47) #12, !dbg !13058
  %tobool45 = icmp ne i32 %call44, 0, !dbg !13058
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !13059

if.then46:                                        ; preds = %for.body43
  br label %for.inc60, !dbg !13060

if.end47:                                         ; preds = %for.body43
  %48 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13061
  %dma_mode48 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %48, i32 0, i32 14, !dbg !13062
  %49 = load i8, i8* %dma_mode48, align 1, !dbg !13062
  %50 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13063
  %xfer_mode49 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %50, i32 0, i32 15, !dbg !13064
  store i8 %49, i8* %xfer_mode49, align 2, !dbg !13065
  %51 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13066
  %dma_mode50 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %51, i32 0, i32 14, !dbg !13067
  %52 = load i8, i8* %dma_mode50, align 1, !dbg !13067
  %conv51 = zext i8 %52 to i64, !dbg !13066
  %call52 = call i32 @ata_xfer_mode2shift(i64 %conv51) #12, !dbg !13068
  %53 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13069
  %xfer_shift53 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %53, i32 0, i32 16, !dbg !13070
  store i32 %call52, i32* %xfer_shift53, align 4, !dbg !13071
  %54 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13072
  %ops54 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %54, i32 0, i32 1, !dbg !13074
  %55 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops54, align 8, !dbg !13074
  %set_dmamode = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %55, i32 0, i32 8, !dbg !13075
  %56 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_dmamode, align 8, !dbg !13075
  %tobool55 = icmp ne void (%struct.ata_port*, %struct.ata_device*)* %56, null, !dbg !13072
  br i1 %tobool55, label %if.then56, label %if.end59, !dbg !13076

if.then56:                                        ; preds = %if.end47
  %57 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13077
  %ops57 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %57, i32 0, i32 1, !dbg !13078
  %58 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops57, align 8, !dbg !13078
  %set_dmamode58 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %58, i32 0, i32 8, !dbg !13079
  %59 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_dmamode58, align 8, !dbg !13079
  %60 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13080
  %61 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13081
  call void %59(%struct.ata_port* %60, %struct.ata_device* %61) #12, !dbg !13077
  br label %if.end59, !dbg !13077

if.end59:                                         ; preds = %if.then56, %if.end47
  br label %for.inc60, !dbg !13082

for.inc60:                                        ; preds = %if.end59, %if.then46
  %62 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13053
  %63 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13053
  %call61 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %62, %struct.ata_link* %63, i32 0) #12, !dbg !13053
  store %struct.ata_device* %call61, %struct.ata_device** %dev, align 8, !dbg !13053
  br label %for.cond41, !dbg !13053, !llvm.loop !13083

for.end62:                                        ; preds = %for.cond41
  %64 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13085
  %call63 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %64, i32 0) #12, !dbg !13085
  store %struct.ata_device* %call63, %struct.ata_device** %dev, align 8, !dbg !13085
  br label %for.cond64, !dbg !13085

for.cond64:                                       ; preds = %for.inc71, %for.end62
  %65 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13087
  %tobool65 = icmp ne %struct.ata_device* %65, null, !dbg !13085
  br i1 %tobool65, label %for.body66, label %for.end73, !dbg !13085

for.body66:                                       ; preds = %for.cond64
  %66 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13089
  %call67 = call i32 @ata_dev_set_mode(%struct.ata_device* %66) #12, !dbg !13091
  store i32 %call67, i32* %rc, align 4, !dbg !13092
  %67 = load i32, i32* %rc, align 4, !dbg !13093
  %tobool68 = icmp ne i32 %67, 0, !dbg !13093
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !13095

if.then69:                                        ; preds = %for.body66
  br label %out, !dbg !13096

if.end70:                                         ; preds = %for.body66
  br label %for.inc71, !dbg !13097

for.inc71:                                        ; preds = %if.end70
  %68 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13087
  %69 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13087
  %call72 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %68, %struct.ata_link* %69, i32 0) #12, !dbg !13087
  store %struct.ata_device* %call72, %struct.ata_device** %dev, align 8, !dbg !13087
  br label %for.cond64, !dbg !13087, !llvm.loop !13098

for.end73:                                        ; preds = %for.cond64
  %70 = load i32, i32* %used_dma, align 4, !dbg !13100
  %tobool74 = icmp ne i32 %70, 0, !dbg !13100
  br i1 %tobool74, label %land.lhs.true, label %if.end79, !dbg !13102

land.lhs.true:                                    ; preds = %for.end73
  %71 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13103
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %71, i32 0, i32 31, !dbg !13104
  %72 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13104
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %72, i32 0, i32 7, !dbg !13105
  %73 = load i64, i64* %flags, align 8, !dbg !13105
  %and75 = and i64 %73, 1, !dbg !13106
  %tobool76 = icmp ne i64 %and75, 0, !dbg !13106
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !13107

if.then77:                                        ; preds = %land.lhs.true
  %74 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13108
  %75 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13109
  %host78 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %75, i32 0, i32 31, !dbg !13110
  %76 = load %struct.ata_host*, %struct.ata_host** %host78, align 8, !dbg !13110
  %simplex_claimed = getelementptr inbounds %struct.ata_host, %struct.ata_host* %76, i32 0, i32 11, !dbg !13111
  store %struct.ata_port* %74, %struct.ata_port** %simplex_claimed, align 8, !dbg !13112
  br label %if.end79, !dbg !13109

if.end79:                                         ; preds = %if.then77, %land.lhs.true, %for.end73
  br label %out, !dbg !13113

out:                                              ; preds = %if.end79, %if.then69, %if.then29, %if.then20
  call void @llvm.dbg.label(metadata !13114), !dbg !13115
  %77 = load i32, i32* %rc, align 4, !dbg !13116
  %tobool80 = icmp ne i32 %77, 0, !dbg !13116
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !13118

if.then81:                                        ; preds = %out
  %78 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13119
  %79 = load %struct.ata_device**, %struct.ata_device*** %r_failed_dev.addr, align 8, !dbg !13120
  store %struct.ata_device* %78, %struct.ata_device** %79, align 8, !dbg !13121
  br label %if.end82, !dbg !13122

if.end82:                                         ; preds = %if.then81, %out
  %80 = load i32, i32* %rc, align 4, !dbg !13123
  ret i32 %80, !dbg !13124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_xfermask(%struct.ata_device* %dev) #0 !dbg !13125 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %link = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %host = alloca %struct.ata_host*, align 8
  %xfer_mask = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13126, metadata !DIExpression()), !dbg !13127
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !13128, metadata !DIExpression()), !dbg !13129
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13130
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !13131
  %1 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !13131
  store %struct.ata_link* %1, %struct.ata_link** %link, align 8, !dbg !13129
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !13132, metadata !DIExpression()), !dbg !13133
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !13134
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !13135
  %3 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !13135
  store %struct.ata_port* %3, %struct.ata_port** %ap, align 8, !dbg !13133
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !13136, metadata !DIExpression()), !dbg !13137
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13138
  %host3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 31, !dbg !13139
  %5 = load %struct.ata_host*, %struct.ata_host** %host3, align 8, !dbg !13139
  store %struct.ata_host* %5, %struct.ata_host** %host, align 8, !dbg !13137
  call void @llvm.dbg.declare(metadata i64* %xfer_mask, metadata !13140, metadata !DIExpression()), !dbg !13141
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13142
  %pio_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 15, !dbg !13143
  %7 = load i32, i32* %pio_mask, align 32, !dbg !13143
  %conv = zext i32 %7 to i64, !dbg !13142
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13144
  %mwdma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 16, !dbg !13145
  %9 = load i32, i32* %mwdma_mask, align 4, !dbg !13145
  %conv4 = zext i32 %9 to i64, !dbg !13144
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13146
  %udma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 17, !dbg !13147
  %11 = load i32, i32* %udma_mask, align 8, !dbg !13147
  %conv5 = zext i32 %11 to i64, !dbg !13146
  %call = call i64 @ata_pack_xfermask(i64 %conv, i64 %conv4, i64 %conv5) #12, !dbg !13148
  store i64 %call, i64* %xfer_mask, align 8, !dbg !13149
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13150
  %pio_mask6 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 20, !dbg !13151
  %13 = load i64, i64* %pio_mask6, align 8, !dbg !13151
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13152
  %mwdma_mask7 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 21, !dbg !13153
  %15 = load i64, i64* %mwdma_mask7, align 16, !dbg !13153
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13154
  %udma_mask8 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 22, !dbg !13155
  %17 = load i64, i64* %udma_mask8, align 8, !dbg !13155
  %call9 = call i64 @ata_pack_xfermask(i64 %13, i64 %15, i64 %17) #12, !dbg !13156
  %18 = load i64, i64* %xfer_mask, align 8, !dbg !13157
  %and = and i64 %18, %call9, !dbg !13157
  store i64 %and, i64* %xfer_mask, align 8, !dbg !13157
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13158
  %20 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 27, !dbg !13159
  %id = bitcast %union.anon.83* %20 to [256 x i16]*, !dbg !13159
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !13158
  %call10 = call i64 @ata_id_xfermask(i16* %arraydecay) #12, !dbg !13160
  %21 = load i64, i64* %xfer_mask, align 8, !dbg !13161
  %and11 = and i64 %21, %call10, !dbg !13161
  store i64 %and11, i64* %xfer_mask, align 8, !dbg !13161
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13162
  %call12 = call %struct.ata_device* @ata_dev_pair(%struct.ata_device* %22) #12, !dbg !13164
  %tobool = icmp ne %struct.ata_device* %call12, null, !dbg !13164
  br i1 %tobool, label %if.then, label %if.end, !dbg !13165

if.then:                                          ; preds = %entry
  %23 = load i64, i64* %xfer_mask, align 8, !dbg !13166
  %and13 = and i64 %23, -97, !dbg !13166
  store i64 %and13, i64* %xfer_mask, align 8, !dbg !13166
  %24 = load i64, i64* %xfer_mask, align 8, !dbg !13168
  %and14 = and i64 %24, -3073, !dbg !13168
  store i64 %and14, i64* %xfer_mask, align 8, !dbg !13168
  br label %if.end, !dbg !13169

if.end:                                           ; preds = %if.then, %entry
  %25 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13170
  %call15 = call i32 @ata_dma_blacklisted(%struct.ata_device* %25) #12, !dbg !13172
  %tobool16 = icmp ne i32 %call15, 0, !dbg !13172
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !13173

if.then17:                                        ; preds = %if.end
  %26 = load i64, i64* %xfer_mask, align 8, !dbg !13174
  %and18 = and i64 %26, -1048449, !dbg !13174
  store i64 %and18, i64* %xfer_mask, align 8, !dbg !13174
  %27 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13176
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.282, i64 0, i64 0)) #12, !dbg !13176
  br label %if.end19, !dbg !13177

if.end19:                                         ; preds = %if.then17, %if.end
  %28 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13178
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %28, i32 0, i32 7, !dbg !13180
  %29 = load i64, i64* %flags, align 8, !dbg !13180
  %and20 = and i64 %29, 1, !dbg !13181
  %tobool21 = icmp ne i64 %and20, 0, !dbg !13181
  br i1 %tobool21, label %land.lhs.true, label %if.end28, !dbg !13182

land.lhs.true:                                    ; preds = %if.end19
  %30 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13183
  %simplex_claimed = getelementptr inbounds %struct.ata_host, %struct.ata_host* %30, i32 0, i32 11, !dbg !13184
  %31 = load %struct.ata_port*, %struct.ata_port** %simplex_claimed, align 8, !dbg !13184
  %tobool22 = icmp ne %struct.ata_port* %31, null, !dbg !13183
  br i1 %tobool22, label %land.lhs.true23, label %if.end28, !dbg !13185

land.lhs.true23:                                  ; preds = %land.lhs.true
  %32 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13186
  %simplex_claimed24 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %32, i32 0, i32 11, !dbg !13187
  %33 = load %struct.ata_port*, %struct.ata_port** %simplex_claimed24, align 8, !dbg !13187
  %34 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13188
  %cmp = icmp ne %struct.ata_port* %33, %34, !dbg !13189
  br i1 %cmp, label %if.then26, label %if.end28, !dbg !13190

if.then26:                                        ; preds = %land.lhs.true23
  %35 = load i64, i64* %xfer_mask, align 8, !dbg !13191
  %and27 = and i64 %35, -1048449, !dbg !13191
  store i64 %and27, i64* %xfer_mask, align 8, !dbg !13191
  %36 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13193
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.283, i64 0, i64 0)) #12, !dbg !13193
  br label %if.end28, !dbg !13194

if.end28:                                         ; preds = %if.then26, %land.lhs.true23, %land.lhs.true, %if.end19
  %37 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13195
  %flags29 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 3, !dbg !13197
  %38 = load i64, i64* %flags29, align 8, !dbg !13197
  %and30 = and i64 %38, 65536, !dbg !13198
  %tobool31 = icmp ne i64 %and30, 0, !dbg !13198
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !13199

if.then32:                                        ; preds = %if.end28
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13200
  %call33 = call i32 @ata_pio_mask_no_iordy(%struct.ata_device* %39) #12, !dbg !13201
  %conv34 = zext i32 %call33 to i64, !dbg !13201
  %40 = load i64, i64* %xfer_mask, align 8, !dbg !13202
  %and35 = and i64 %40, %conv34, !dbg !13202
  store i64 %and35, i64* %xfer_mask, align 8, !dbg !13202
  br label %if.end36, !dbg !13203

if.end36:                                         ; preds = %if.then32, %if.end28
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13204
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %41, i32 0, i32 1, !dbg !13206
  %42 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13206
  %mode_filter = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %42, i32 0, i32 6, !dbg !13207
  %43 = load i64 (%struct.ata_device*, i64)*, i64 (%struct.ata_device*, i64)** %mode_filter, align 8, !dbg !13207
  %tobool37 = icmp ne i64 (%struct.ata_device*, i64)* %43, null, !dbg !13204
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !13208

if.then38:                                        ; preds = %if.end36
  %44 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13209
  %ops39 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %44, i32 0, i32 1, !dbg !13210
  %45 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops39, align 8, !dbg !13210
  %mode_filter40 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %45, i32 0, i32 6, !dbg !13211
  %46 = load i64 (%struct.ata_device*, i64)*, i64 (%struct.ata_device*, i64)** %mode_filter40, align 8, !dbg !13211
  %47 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13212
  %48 = load i64, i64* %xfer_mask, align 8, !dbg !13213
  %call41 = call i64 %46(%struct.ata_device* %47, i64 %48) #12, !dbg !13209
  store i64 %call41, i64* %xfer_mask, align 8, !dbg !13214
  br label %if.end42, !dbg !13215

if.end42:                                         ; preds = %if.then38, %if.end36
  %49 = load i64, i64* %xfer_mask, align 8, !dbg !13216
  %and43 = and i64 %49, 1015808, !dbg !13218
  %tobool44 = icmp ne i64 %and43, 0, !dbg !13218
  br i1 %tobool44, label %if.then45, label %if.end51, !dbg !13219

if.then45:                                        ; preds = %if.end42
  %50 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13220
  %call46 = call i32 @cable_is_40wire(%struct.ata_port* %50) #12, !dbg !13222
  %tobool47 = icmp ne i32 %call46, 0, !dbg !13222
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !13223

if.then48:                                        ; preds = %if.then45
  %51 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13224
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.284, i64 0, i64 0)) #12, !dbg !13224
  %52 = load i64, i64* %xfer_mask, align 8, !dbg !13226
  %and49 = and i64 %52, -1015809, !dbg !13226
  store i64 %and49, i64* %xfer_mask, align 8, !dbg !13226
  br label %if.end50, !dbg !13227

if.end50:                                         ; preds = %if.then48, %if.then45
  br label %if.end51, !dbg !13228

if.end51:                                         ; preds = %if.end50, %if.end42
  %53 = load i64, i64* %xfer_mask, align 8, !dbg !13229
  %54 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13230
  %pio_mask52 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %54, i32 0, i32 20, !dbg !13231
  %55 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13232
  %mwdma_mask53 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %55, i32 0, i32 21, !dbg !13233
  %56 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13234
  %udma_mask54 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %56, i32 0, i32 22, !dbg !13235
  call void @ata_unpack_xfermask(i64 %53, i64* %pio_mask52, i64* %mwdma_mask53, i64* %udma_mask54) #12, !dbg !13236
  ret void, !dbg !13237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_force_xfermask(%struct.ata_device* %dev) #0 !dbg !13238 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %devno = alloca i32, align 4
  %alt_devno = alloca i32, align 4
  %i = alloca i32, align 4
  %fe = alloca %struct.ata_force_ent*, align 8
  %pio_mask = alloca i64, align 8
  %mwdma_mask = alloca i64, align 8
  %udma_mask = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13239, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.declare(metadata i32* %devno, metadata !13241, metadata !DIExpression()), !dbg !13242
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13243
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !13244
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !13244
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 1, !dbg !13245
  %2 = load i32, i32* %pmp, align 8, !dbg !13245
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13246
  %devno1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 1, !dbg !13247
  %4 = load i32, i32* %devno1, align 8, !dbg !13247
  %add = add i32 %2, %4, !dbg !13248
  store i32 %add, i32* %devno, align 4, !dbg !13242
  call void @llvm.dbg.declare(metadata i32* %alt_devno, metadata !13249, metadata !DIExpression()), !dbg !13250
  %5 = load i32, i32* %devno, align 4, !dbg !13251
  store i32 %5, i32* %alt_devno, align 4, !dbg !13250
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13252, metadata !DIExpression()), !dbg !13253
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13254
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 0, !dbg !13256
  %7 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !13256
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %7) #12, !dbg !13257
  br i1 %call, label %if.then, label %if.end, !dbg !13258

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %alt_devno, align 4, !dbg !13259
  %add3 = add i32 %8, 15, !dbg !13259
  store i32 %add3, i32* %alt_devno, align 4, !dbg !13259
  br label %if.end, !dbg !13260

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* @ata_force_tbl_size, align 4, !dbg !13261
  %sub = sub i32 %9, 1, !dbg !13263
  store i32 %sub, i32* %i, align 4, !dbg !13264
  br label %for.cond, !dbg !13265

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !13266
  %cmp = icmp sge i32 %10, 0, !dbg !13268
  br i1 %cmp, label %for.body, label %for.end, !dbg !13269

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_force_ent** %fe, metadata !13270, metadata !DIExpression()), !dbg !13272
  %11 = load %struct.ata_force_ent*, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !13273
  %12 = load i32, i32* %i, align 4, !dbg !13274
  %idxprom = sext i32 %12 to i64, !dbg !13273
  %arrayidx = getelementptr %struct.ata_force_ent, %struct.ata_force_ent* %11, i64 %idxprom, !dbg !13273
  store %struct.ata_force_ent* %arrayidx, %struct.ata_force_ent** %fe, align 8, !dbg !13272
  call void @llvm.dbg.declare(metadata i64* %pio_mask, metadata !13275, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.declare(metadata i64* %mwdma_mask, metadata !13277, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.declare(metadata i64* %udma_mask, metadata !13279, metadata !DIExpression()), !dbg !13280
  %13 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13281
  %port = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %13, i32 0, i32 0, !dbg !13283
  %14 = load i32, i32* %port, align 8, !dbg !13283
  %cmp4 = icmp ne i32 %14, -1, !dbg !13284
  br i1 %cmp4, label %land.lhs.true, label %if.end9, !dbg !13285

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13286
  %port5 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %15, i32 0, i32 0, !dbg !13287
  %16 = load i32, i32* %port5, align 8, !dbg !13287
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13288
  %link6 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 0, !dbg !13289
  %18 = load %struct.ata_link*, %struct.ata_link** %link6, align 64, !dbg !13289
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %18, i32 0, i32 0, !dbg !13290
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !13290
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 5, !dbg !13291
  %20 = load i32, i32* %print_id, align 4, !dbg !13291
  %cmp7 = icmp ne i32 %16, %20, !dbg !13292
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !13293

if.then8:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !13294

if.end9:                                          ; preds = %land.lhs.true, %for.body
  %21 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13295
  %device = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %21, i32 0, i32 1, !dbg !13297
  %22 = load i32, i32* %device, align 4, !dbg !13297
  %cmp10 = icmp ne i32 %22, -1, !dbg !13298
  br i1 %cmp10, label %land.lhs.true11, label %if.end18, !dbg !13299

land.lhs.true11:                                  ; preds = %if.end9
  %23 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13300
  %device12 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %23, i32 0, i32 1, !dbg !13301
  %24 = load i32, i32* %device12, align 4, !dbg !13301
  %25 = load i32, i32* %devno, align 4, !dbg !13302
  %cmp13 = icmp ne i32 %24, %25, !dbg !13303
  br i1 %cmp13, label %land.lhs.true14, label %if.end18, !dbg !13304

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %26 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13305
  %device15 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %26, i32 0, i32 1, !dbg !13306
  %27 = load i32, i32* %device15, align 4, !dbg !13306
  %28 = load i32, i32* %alt_devno, align 4, !dbg !13307
  %cmp16 = icmp ne i32 %27, %28, !dbg !13308
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !13309

if.then17:                                        ; preds = %land.lhs.true14
  br label %for.inc, !dbg !13310

if.end18:                                         ; preds = %land.lhs.true14, %land.lhs.true11, %if.end9
  %29 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13311
  %param = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %29, i32 0, i32 2, !dbg !13313
  %xfer_mask = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param, i32 0, i32 3, !dbg !13314
  %30 = load i64, i64* %xfer_mask, align 8, !dbg !13314
  %tobool = icmp ne i64 %30, 0, !dbg !13311
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !13315

if.then19:                                        ; preds = %if.end18
  br label %for.inc, !dbg !13316

if.end20:                                         ; preds = %if.end18
  %31 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13317
  %param21 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %31, i32 0, i32 2, !dbg !13318
  %xfer_mask22 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param21, i32 0, i32 3, !dbg !13319
  %32 = load i64, i64* %xfer_mask22, align 8, !dbg !13319
  call void @ata_unpack_xfermask(i64 %32, i64* %pio_mask, i64* %mwdma_mask, i64* %udma_mask) #12, !dbg !13320
  %33 = load i64, i64* %udma_mask, align 8, !dbg !13321
  %tobool23 = icmp ne i64 %33, 0, !dbg !13321
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !13323

if.then24:                                        ; preds = %if.end20
  %34 = load i64, i64* %udma_mask, align 8, !dbg !13324
  %35 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13325
  %udma_mask25 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %35, i32 0, i32 22, !dbg !13326
  store i64 %34, i64* %udma_mask25, align 8, !dbg !13327
  br label %if.end35, !dbg !13325

if.else:                                          ; preds = %if.end20
  %36 = load i64, i64* %mwdma_mask, align 8, !dbg !13328
  %tobool26 = icmp ne i64 %36, 0, !dbg !13328
  br i1 %tobool26, label %if.then27, label %if.else30, !dbg !13330

if.then27:                                        ; preds = %if.else
  %37 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13331
  %udma_mask28 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %37, i32 0, i32 22, !dbg !13333
  store i64 0, i64* %udma_mask28, align 8, !dbg !13334
  %38 = load i64, i64* %mwdma_mask, align 8, !dbg !13335
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13336
  %mwdma_mask29 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 21, !dbg !13337
  store i64 %38, i64* %mwdma_mask29, align 16, !dbg !13338
  br label %if.end34, !dbg !13339

if.else30:                                        ; preds = %if.else
  %40 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13340
  %udma_mask31 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %40, i32 0, i32 22, !dbg !13342
  store i64 0, i64* %udma_mask31, align 8, !dbg !13343
  %41 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13344
  %mwdma_mask32 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %41, i32 0, i32 21, !dbg !13345
  store i64 0, i64* %mwdma_mask32, align 16, !dbg !13346
  %42 = load i64, i64* %pio_mask, align 8, !dbg !13347
  %43 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13348
  %pio_mask33 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %43, i32 0, i32 20, !dbg !13349
  store i64 %42, i64* %pio_mask33, align 8, !dbg !13350
  br label %if.end34

if.end34:                                         ; preds = %if.else30, %if.then27
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then24
  %44 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13351
  %45 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !13351
  %param36 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %45, i32 0, i32 2, !dbg !13351
  %name = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param36, i32 0, i32 0, !dbg !13351
  %46 = load i8*, i8** %name, align 8, !dbg !13351
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.135, i64 0, i64 0), i8* %46) #12, !dbg !13351
  br label %for.end, !dbg !13352

for.inc:                                          ; preds = %if.then19, %if.then17, %if.then8
  %47 = load i32, i32* %i, align 4, !dbg !13353
  %dec = add i32 %47, -1, !dbg !13353
  store i32 %dec, i32* %i, align 4, !dbg !13353
  br label %for.cond, !dbg !13354, !llvm.loop !13355

for.end:                                          ; preds = %if.end35, %for.cond
  ret void, !dbg !13357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dma_enabled(%struct.ata_device* %adev) #0 !dbg !13358 {
entry:
  %adev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %adev, %struct.ata_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %adev.addr, metadata !13359, metadata !DIExpression()), !dbg !13360
  %0 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !13361
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 14, !dbg !13362
  %1 = load i8, i8* %dma_mode, align 1, !dbg !13362
  %conv = zext i8 %1 to i32, !dbg !13361
  %cmp = icmp eq i32 %conv, 255, !dbg !13363
  %2 = zext i1 %cmp to i64, !dbg !13361
  %cond = select i1 %cmp, i32 0, i32 1, !dbg !13361
  ret i32 %cond, !dbg !13364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_set_mode(%struct.ata_device* %dev) #0 !dbg !13365 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %nosetxfer = alloca i8, align 1
  %dev_err_whine = alloca i8*, align 8
  %ign_dev_err = alloca i32, align 4
  %err_mask = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !13368, metadata !DIExpression()), !dbg !13369
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13370
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !13371
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !13371
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !13372
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !13372
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !13369
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !13373, metadata !DIExpression()), !dbg !13374
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13375
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 0, !dbg !13376
  %4 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !13376
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 12, !dbg !13377
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !13374
  call void @llvm.dbg.declare(metadata i8* %nosetxfer, metadata !13378, metadata !DIExpression()), !dbg !13380
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13381
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 2, !dbg !13382
  %6 = load i32, i32* %horkage, align 4, !dbg !13382
  %and = and i32 %6, 16384, !dbg !13383
  %tobool = icmp ne i32 %and, 0, !dbg !13381
  %frombool = zext i1 %tobool to i8, !dbg !13380
  store i8 %frombool, i8* %nosetxfer, align 1, !dbg !13380
  call void @llvm.dbg.declare(metadata i8** %dev_err_whine, metadata !13384, metadata !DIExpression()), !dbg !13385
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %dev_err_whine, align 8, !dbg !13385
  call void @llvm.dbg.declare(metadata i32* %ign_dev_err, metadata !13386, metadata !DIExpression()), !dbg !13387
  store i32 0, i32* %ign_dev_err, align 4, !dbg !13387
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !13388, metadata !DIExpression()), !dbg !13389
  store i32 0, i32* %err_mask, align 4, !dbg !13389
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !13390, metadata !DIExpression()), !dbg !13391
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13392
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 3, !dbg !13393
  %8 = load i64, i64* %flags, align 16, !dbg !13394
  %and3 = and i64 %8, -4097, !dbg !13394
  store i64 %and3, i64* %flags, align 16, !dbg !13394
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13395
  %xfer_shift = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 16, !dbg !13397
  %10 = load i32, i32* %xfer_shift, align 4, !dbg !13397
  %cmp = icmp eq i32 %10, 0, !dbg !13398
  br i1 %cmp, label %if.then, label %if.end, !dbg !13399

if.then:                                          ; preds = %entry
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13400
  %flags4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 3, !dbg !13401
  %12 = load i64, i64* %flags4, align 16, !dbg !13402
  %or = or i64 %12, 4096, !dbg !13402
  store i64 %or, i64* %flags4, align 16, !dbg !13402
  br label %if.end, !dbg !13400

if.end:                                           ; preds = %if.then, %entry
  %13 = load i8, i8* %nosetxfer, align 1, !dbg !13403
  %tobool5 = trunc i8 %13 to i1, !dbg !13403
  br i1 %tobool5, label %land.lhs.true, label %if.else, !dbg !13405

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13406
  %flags6 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 3, !dbg !13407
  %15 = load i64, i64* %flags6, align 8, !dbg !13407
  %and7 = and i64 %15, 2, !dbg !13408
  %tobool8 = icmp ne i64 %and7, 0, !dbg !13408
  br i1 %tobool8, label %land.lhs.true9, label %if.else, !dbg !13409

land.lhs.true9:                                   ; preds = %land.lhs.true
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13410
  %17 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 27, !dbg !13411
  %id = bitcast %union.anon.83* %17 to [256 x i16]*, !dbg !13411
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !13410
  %call = call zeroext i1 @ata_id_is_sata(i16* %arraydecay) #12, !dbg !13412
  br i1 %call, label %if.then10, label %if.else, !dbg !13413

if.then10:                                        ; preds = %land.lhs.true9
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.136, i64 0, i64 0), i8** %dev_err_whine, align 8, !dbg !13414
  br label %if.end15, !dbg !13415

if.else:                                          ; preds = %land.lhs.true9, %land.lhs.true, %if.end
  %18 = load i8, i8* %nosetxfer, align 1, !dbg !13416
  %tobool11 = trunc i8 %18 to i1, !dbg !13416
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !13419

if.then12:                                        ; preds = %if.else
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13420
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.137, i64 0, i64 0)) #12, !dbg !13420
  br label %if.end13, !dbg !13420

if.end13:                                         ; preds = %if.then12, %if.else
  %20 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13421
  %call14 = call i32 @ata_dev_set_xfermode(%struct.ata_device* %20) #12, !dbg !13422
  store i32 %call14, i32* %err_mask, align 4, !dbg !13423
  br label %if.end15

if.end15:                                         ; preds = %if.end13, %if.then10
  %21 = load i32, i32* %err_mask, align 4, !dbg !13424
  %and16 = and i32 %21, -2, !dbg !13426
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13426
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !13427

if.then18:                                        ; preds = %if.end15
  br label %fail, !dbg !13428

if.end19:                                         ; preds = %if.end15
  %22 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13429
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %22, i32 0, i32 0, !dbg !13430
  %flags20 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !13431
  %23 = load i32, i32* %flags20, align 4, !dbg !13432
  %or21 = or i32 %23, 1048576, !dbg !13432
  store i32 %or21, i32* %flags20, align 4, !dbg !13432
  %24 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13433
  %call22 = call i32 @ata_dev_revalidate(%struct.ata_device* %24, i32 0, i32 0) #12, !dbg !13434
  store i32 %call22, i32* %rc, align 4, !dbg !13435
  %25 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13436
  %i23 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %25, i32 0, i32 0, !dbg !13437
  %flags24 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i23, i32 0, i32 5, !dbg !13438
  %26 = load i32, i32* %flags24, align 4, !dbg !13439
  %and25 = and i32 %26, -1048577, !dbg !13439
  store i32 %and25, i32* %flags24, align 4, !dbg !13439
  %27 = load i32, i32* %rc, align 4, !dbg !13440
  %tobool26 = icmp ne i32 %27, 0, !dbg !13440
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !13442

if.then27:                                        ; preds = %if.end19
  %28 = load i32, i32* %rc, align 4, !dbg !13443
  store i32 %28, i32* %retval, align 4, !dbg !13444
  br label %return, !dbg !13444

if.end28:                                         ; preds = %if.end19
  %29 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13445
  %xfer_shift29 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %29, i32 0, i32 16, !dbg !13447
  %30 = load i32, i32* %xfer_shift29, align 4, !dbg !13447
  %cmp30 = icmp eq i32 %30, 0, !dbg !13448
  br i1 %cmp30, label %if.then31, label %if.end57, !dbg !13449

if.then31:                                        ; preds = %if.end28
  %31 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13450
  %32 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 27, !dbg !13453
  %id32 = bitcast %union.anon.83* %32 to [256 x i16]*, !dbg !13453
  %arraydecay33 = getelementptr inbounds [256 x i16], [256 x i16]* %id32, i64 0, i64 0, !dbg !13450
  %call34 = call zeroext i1 @ata_id_is_cfa(i16* %arraydecay33) #12, !dbg !13454
  br i1 %call34, label %if.then35, label %if.end36, !dbg !13455

if.then35:                                        ; preds = %if.then31
  store i32 1, i32* %ign_dev_err, align 4, !dbg !13456
  br label %if.end36, !dbg !13457

if.end36:                                         ; preds = %if.then35, %if.then31
  %33 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13458
  %34 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 27, !dbg !13460
  %id37 = bitcast %union.anon.83* %34 to [256 x i16]*, !dbg !13460
  %arraydecay38 = getelementptr inbounds [256 x i16], [256 x i16]* %id37, i64 0, i64 0, !dbg !13458
  %call39 = call i32 @ata_id_major_version(i16* %arraydecay38) #12, !dbg !13461
  %cmp40 = icmp eq i32 %call39, 0, !dbg !13462
  br i1 %cmp40, label %land.lhs.true41, label %if.end45, !dbg !13463

land.lhs.true41:                                  ; preds = %if.end36
  %35 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13464
  %pio_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %35, i32 0, i32 13, !dbg !13465
  %36 = load i8, i8* %pio_mode, align 16, !dbg !13465
  %conv = zext i8 %36 to i32, !dbg !13464
  %cmp42 = icmp sle i32 %conv, 10, !dbg !13466
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !13467

if.then44:                                        ; preds = %land.lhs.true41
  store i32 1, i32* %ign_dev_err, align 4, !dbg !13468
  br label %if.end45, !dbg !13469

if.end45:                                         ; preds = %if.then44, %land.lhs.true41, %if.end36
  %37 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13470
  %38 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %37, i32 0, i32 27, !dbg !13470
  %id46 = bitcast %union.anon.83* %38 to [256 x i16]*, !dbg !13470
  %arrayidx = getelementptr [256 x i16], [256 x i16]* %id46, i64 0, i64 49, !dbg !13470
  %39 = load i16, i16* %arrayidx, align 2, !dbg !13470
  %conv47 = zext i16 %39 to i32, !dbg !13470
  %and48 = and i32 %conv47, 2048, !dbg !13470
  %tobool49 = icmp ne i32 %and48, 0, !dbg !13470
  br i1 %tobool49, label %if.end56, label %land.lhs.true50, !dbg !13472

land.lhs.true50:                                  ; preds = %if.end45
  %40 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13473
  %pio_mode51 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %40, i32 0, i32 13, !dbg !13474
  %41 = load i8, i8* %pio_mode51, align 16, !dbg !13474
  %conv52 = zext i8 %41 to i32, !dbg !13473
  %cmp53 = icmp sle i32 %conv52, 10, !dbg !13475
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !13476

if.then55:                                        ; preds = %land.lhs.true50
  store i32 1, i32* %ign_dev_err, align 4, !dbg !13477
  br label %if.end56, !dbg !13478

if.end56:                                         ; preds = %if.then55, %land.lhs.true50, %if.end45
  br label %if.end57, !dbg !13479

if.end57:                                         ; preds = %if.end56, %if.end28
  %42 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13480
  %xfer_shift58 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %42, i32 0, i32 16, !dbg !13482
  %43 = load i32, i32* %xfer_shift58, align 4, !dbg !13482
  %cmp59 = icmp eq i32 %43, 7, !dbg !13483
  br i1 %cmp59, label %land.lhs.true61, label %if.end72, !dbg !13484

land.lhs.true61:                                  ; preds = %if.end57
  %44 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13485
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %44, i32 0, i32 14, !dbg !13486
  %45 = load i8, i8* %dma_mode, align 1, !dbg !13486
  %conv62 = zext i8 %45 to i32, !dbg !13485
  %cmp63 = icmp eq i32 %conv62, 32, !dbg !13487
  br i1 %cmp63, label %land.lhs.true65, label %if.end72, !dbg !13488

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %46 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13489
  %47 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %46, i32 0, i32 27, !dbg !13490
  %id66 = bitcast %union.anon.83* %47 to [256 x i16]*, !dbg !13490
  %arrayidx67 = getelementptr [256 x i16], [256 x i16]* %id66, i64 0, i64 63, !dbg !13489
  %48 = load i16, i16* %arrayidx67, align 2, !dbg !13489
  %conv68 = zext i16 %48 to i32, !dbg !13489
  %shr = ashr i32 %conv68, 8, !dbg !13491
  %and69 = and i32 %shr, 1, !dbg !13492
  %tobool70 = icmp ne i32 %and69, 0, !dbg !13492
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !13493

if.then71:                                        ; preds = %land.lhs.true65
  store i32 1, i32* %ign_dev_err, align 4, !dbg !13494
  br label %if.end72, !dbg !13495

if.end72:                                         ; preds = %if.then71, %land.lhs.true65, %land.lhs.true61, %if.end57
  %49 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13496
  %xfer_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %49, i32 0, i32 15, !dbg !13498
  %50 = load i8, i8* %xfer_mode, align 2, !dbg !13498
  %conv73 = zext i8 %50 to i32, !dbg !13496
  %51 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13499
  %52 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %51, i32 0, i32 27, !dbg !13500
  %id74 = bitcast %union.anon.83* %52 to [256 x i16]*, !dbg !13500
  %arraydecay75 = getelementptr inbounds [256 x i16], [256 x i16]* %id74, i64 0, i64 0, !dbg !13499
  %call76 = call i64 @ata_id_xfermask(i16* %arraydecay75) #12, !dbg !13501
  %call77 = call zeroext i8 @ata_xfer_mask2mode(i64 %call76) #12, !dbg !13502
  %conv78 = zext i8 %call77 to i32, !dbg !13502
  %cmp79 = icmp eq i32 %conv73, %conv78, !dbg !13503
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !13504

if.then81:                                        ; preds = %if.end72
  store i32 1, i32* %ign_dev_err, align 4, !dbg !13505
  br label %if.end82, !dbg !13506

if.end82:                                         ; preds = %if.then81, %if.end72
  %53 = load i32, i32* %err_mask, align 4, !dbg !13507
  %and83 = and i32 %53, 1, !dbg !13509
  %tobool84 = icmp ne i32 %and83, 0, !dbg !13509
  br i1 %tobool84, label %if.then85, label %if.end90, !dbg !13510

if.then85:                                        ; preds = %if.end82
  %54 = load i32, i32* %ign_dev_err, align 4, !dbg !13511
  %tobool86 = icmp ne i32 %54, 0, !dbg !13511
  br i1 %tobool86, label %if.else88, label %if.then87, !dbg !13514

if.then87:                                        ; preds = %if.then85
  br label %fail, !dbg !13515

if.else88:                                        ; preds = %if.then85
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.138, i64 0, i64 0), i8** %dev_err_whine, align 8, !dbg !13516
  br label %if.end89

if.end89:                                         ; preds = %if.else88
  br label %if.end90, !dbg !13517

if.end90:                                         ; preds = %if.end89, %if.end82
  %55 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13518
  %i91 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %55, i32 0, i32 0, !dbg !13520
  %flags92 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i91, i32 0, i32 5, !dbg !13521
  %56 = load i32, i32* %flags92, align 4, !dbg !13521
  %and93 = and i32 %56, 8, !dbg !13522
  %tobool94 = icmp ne i32 %and93, 0, !dbg !13522
  br i1 %tobool94, label %lor.lhs.false, label %if.then99, !dbg !13523

lor.lhs.false:                                    ; preds = %if.end90
  %57 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13524
  %i95 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %57, i32 0, i32 0, !dbg !13525
  %flags96 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i95, i32 0, i32 5, !dbg !13526
  %58 = load i32, i32* %flags96, align 4, !dbg !13526
  %and97 = and i32 %58, 131072, !dbg !13527
  %tobool98 = icmp ne i32 %and97, 0, !dbg !13527
  br i1 %tobool98, label %if.then99, label %if.end103, !dbg !13528

if.then99:                                        ; preds = %lor.lhs.false, %if.end90
  %59 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13529
  %60 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13529
  %xfer_mode100 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %60, i32 0, i32 15, !dbg !13529
  %61 = load i8, i8* %xfer_mode100, align 2, !dbg !13529
  %call101 = call i64 @ata_xfer_mode2mask(i8 zeroext %61) #12, !dbg !13529
  %call102 = call i8* @ata_mode_string(i64 %call101) #12, !dbg !13529
  %62 = load i8*, i8** %dev_err_whine, align 8, !dbg !13529
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i64 0, i64 0), i8* %call102, i8* %62) #12, !dbg !13529
  br label %if.end103, !dbg !13529

if.end103:                                        ; preds = %if.then99, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !13530
  br label %return, !dbg !13530

fail:                                             ; preds = %if.then87, %if.then18
  call void @llvm.dbg.label(metadata !13531), !dbg !13532
  %63 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13533
  %64 = load i32, i32* %err_mask, align 4, !dbg !13533
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.140, i64 0, i64 0), i32 %64) #12, !dbg !13533
  store i32 -5, i32* %retval, align 4, !dbg !13534
  br label %return, !dbg !13534

return:                                           ; preds = %fail, %if.end103, %if.then27
  %65 = load i32, i32* %retval, align 4, !dbg !13535
  ret i32 %65, !dbg !13535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_wait_ready(%struct.ata_link* %link, i64 %deadline, i32 (%struct.ata_link*)* %check_ready) #0 !dbg !13536 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %deadline.addr = alloca i64, align 8
  %check_ready.addr = alloca i32 (%struct.ata_link*)*, align 8
  %start = alloca i64, align 8
  %nodev_deadline = alloca i64, align 8
  %warned = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %now = alloca i64, align 8
  %ready = alloca i32, align 4
  %tmp28 = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13542, metadata !DIExpression()), !dbg !13543
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !13544, metadata !DIExpression()), !dbg !13545
  store i32 (%struct.ata_link*)* %check_ready, i32 (%struct.ata_link*)** %check_ready.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*)** %check_ready.addr, metadata !13546, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.declare(metadata i64* %start, metadata !13548, metadata !DIExpression()), !dbg !13549
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !13550
  store i64 %0, i64* %start, align 8, !dbg !13549
  call void @llvm.dbg.declare(metadata i64* %nodev_deadline, metadata !13551, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.declare(metadata i32* %warned, metadata !13553, metadata !DIExpression()), !dbg !13554
  store i32 0, i32* %warned, align 4, !dbg !13554
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13555
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !13557
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !13557
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 31, !dbg !13558
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13558
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 7, !dbg !13559
  %4 = load i64, i64* %flags, align 8, !dbg !13559
  %and = and i64 %4, 4, !dbg !13560
  %tobool = icmp ne i64 %and, 0, !dbg !13560
  br i1 %tobool, label %if.then, label %if.else, !dbg !13561

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %start, align 8, !dbg !13562
  %call = call i64 @ata_deadline(i64 %5, i64 2000) #12, !dbg !13563
  store i64 %call, i64* %nodev_deadline, align 8, !dbg !13564
  br label %if.end, !dbg !13565

if.else:                                          ; preds = %entry
  %6 = load i64, i64* %start, align 8, !dbg !13566
  %call1 = call i64 @ata_deadline(i64 %6, i64 800) #12, !dbg !13567
  store i64 %call1, i64* %nodev_deadline, align 8, !dbg !13568
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13569, metadata !DIExpression()), !dbg !13571
  %7 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13571
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13571
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %8, i32 0, i32 0, !dbg !13571
  %9 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !13571
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 26, !dbg !13571
  %10 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !13571
  %cmp = icmp eq %struct.ata_link* %7, %10, !dbg !13571
  %lnot = xor i1 %cmp, true, !dbg !13571
  %lnot3 = xor i1 %lnot, true, !dbg !13571
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13571
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13571
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !13572
  %tobool4 = icmp ne i32 %11, 0, !dbg !13572
  %lnot5 = xor i1 %tobool4, true, !dbg !13572
  %lnot7 = xor i1 %lnot5, true, !dbg !13572
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !13572
  %conv = sext i32 %lnot.ext8 to i64, !dbg !13572
  %tobool9 = icmp ne i64 %conv, 0, !dbg !13572
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !13571

if.then10:                                        ; preds = %if.end
  br label %do.body, !dbg !13572

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !13574

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !13576

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !13574

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 3414, i32 2305, i64 12) #7, !dbg !13578, !srcloc !13580
  br label %do.end13, !dbg !13578

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 351) #7, !dbg !13581, !srcloc !13583
  br label %do.body14, !dbg !13574

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !13584

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !13574

do.end16:                                         ; preds = %do.end15
  br label %if.end17, !dbg !13574

if.end17:                                         ; preds = %do.end16, %if.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !13571
  %tobool18 = icmp ne i32 %12, 0, !dbg !13571
  %lnot19 = xor i1 %tobool18, true, !dbg !13571
  %lnot21 = xor i1 %lnot19, true, !dbg !13571
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !13571
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !13571
  store i64 %conv23, i64* %tmp, align 8, !dbg !13572
  %13 = load i64, i64* %tmp, align 8, !dbg !13571
  %14 = load i64, i64* %deadline.addr, align 8, !dbg !13586
  %15 = load i64, i64* %nodev_deadline, align 8, !dbg !13586
  %sub = sub i64 %14, %15, !dbg !13586
  %cmp24 = icmp slt i64 %sub, 0, !dbg !13586
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !13588

if.then26:                                        ; preds = %if.end17
  %16 = load i64, i64* %deadline.addr, align 8, !dbg !13589
  store i64 %16, i64* %nodev_deadline, align 8, !dbg !13590
  br label %if.end27, !dbg !13591

if.end27:                                         ; preds = %if.then26, %if.end17
  br label %while.body, !dbg !13592

while.body:                                       ; preds = %if.end27, %if.end71
  call void @llvm.dbg.declare(metadata i64* %now, metadata !13593, metadata !DIExpression()), !dbg !13595
  %17 = load volatile i64, i64* @jiffies, align 8, !dbg !13596
  store i64 %17, i64* %now, align 8, !dbg !13595
  call void @llvm.dbg.declare(metadata i32* %ready, metadata !13597, metadata !DIExpression()), !dbg !13598
  call void @llvm.dbg.declare(metadata i32* %tmp28, metadata !13599, metadata !DIExpression()), !dbg !13600
  %18 = load i32 (%struct.ata_link*)*, i32 (%struct.ata_link*)** %check_ready.addr, align 8, !dbg !13601
  %19 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13602
  %call29 = call i32 %18(%struct.ata_link* %19) #12, !dbg !13601
  store i32 %call29, i32* %tmp28, align 4, !dbg !13603
  store i32 %call29, i32* %ready, align 4, !dbg !13604
  %20 = load i32, i32* %ready, align 4, !dbg !13605
  %cmp30 = icmp sgt i32 %20, 0, !dbg !13607
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !13608

if.then32:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !13609
  br label %return, !dbg !13609

if.end33:                                         ; preds = %while.body
  %21 = load i32, i32* %ready, align 4, !dbg !13610
  %cmp34 = icmp eq i32 %21, -19, !dbg !13612
  br i1 %cmp34, label %if.then36, label %if.end52, !dbg !13613

if.then36:                                        ; preds = %if.end33
  %22 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13614
  %call37 = call zeroext i1 @ata_link_online(%struct.ata_link* %22) #12, !dbg !13617
  br i1 %call37, label %if.then38, label %if.else39, !dbg !13618

if.then38:                                        ; preds = %if.then36
  store i32 0, i32* %ready, align 4, !dbg !13619
  br label %if.end51, !dbg !13620

if.else39:                                        ; preds = %if.then36
  %23 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13621
  %ap40 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %23, i32 0, i32 0, !dbg !13623
  %24 = load %struct.ata_port*, %struct.ata_port** %ap40, align 64, !dbg !13623
  %flags41 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %24, i32 0, i32 3, !dbg !13624
  %25 = load i64, i64* %flags41, align 8, !dbg !13624
  %and42 = and i64 %25, 2, !dbg !13625
  %tobool43 = icmp ne i64 %and42, 0, !dbg !13625
  br i1 %tobool43, label %land.lhs.true, label %if.end50, !dbg !13626

land.lhs.true:                                    ; preds = %if.else39
  %26 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13627
  %call44 = call zeroext i1 @ata_link_offline(%struct.ata_link* %26) #12, !dbg !13628
  br i1 %call44, label %if.end50, label %land.lhs.true45, !dbg !13629

land.lhs.true45:                                  ; preds = %land.lhs.true
  %27 = load i64, i64* %now, align 8, !dbg !13630
  %28 = load i64, i64* %nodev_deadline, align 8, !dbg !13630
  %sub46 = sub i64 %27, %28, !dbg !13630
  %cmp47 = icmp slt i64 %sub46, 0, !dbg !13630
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !13631

if.then49:                                        ; preds = %land.lhs.true45
  store i32 0, i32* %ready, align 4, !dbg !13632
  br label %if.end50, !dbg !13633

if.end50:                                         ; preds = %if.then49, %land.lhs.true45, %land.lhs.true, %if.else39
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then38
  br label %if.end52, !dbg !13634

if.end52:                                         ; preds = %if.end51, %if.end33
  %29 = load i32, i32* %ready, align 4, !dbg !13635
  %tobool53 = icmp ne i32 %29, 0, !dbg !13635
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !13637

if.then54:                                        ; preds = %if.end52
  %30 = load i32, i32* %ready, align 4, !dbg !13638
  store i32 %30, i32* %retval, align 4, !dbg !13639
  br label %return, !dbg !13639

if.end55:                                         ; preds = %if.end52
  %31 = load i64, i64* %deadline.addr, align 8, !dbg !13640
  %32 = load i64, i64* %now, align 8, !dbg !13640
  %sub56 = sub i64 %31, %32, !dbg !13640
  %cmp57 = icmp slt i64 %sub56, 0, !dbg !13640
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !13642

if.then59:                                        ; preds = %if.end55
  store i32 -16, i32* %retval, align 4, !dbg !13643
  br label %return, !dbg !13643

if.end60:                                         ; preds = %if.end55
  %33 = load i32, i32* %warned, align 4, !dbg !13644
  %tobool61 = icmp ne i32 %33, 0, !dbg !13644
  br i1 %tobool61, label %if.end71, label %land.lhs.true62, !dbg !13646

land.lhs.true62:                                  ; preds = %if.end60
  %34 = load i64, i64* %start, align 8, !dbg !13647
  %add = add i64 %34, 1250, !dbg !13647
  %35 = load i64, i64* %now, align 8, !dbg !13647
  %sub63 = sub i64 %add, %35, !dbg !13647
  %cmp64 = icmp slt i64 %sub63, 0, !dbg !13647
  br i1 %cmp64, label %land.lhs.true66, label %if.end71, !dbg !13648

land.lhs.true66:                                  ; preds = %land.lhs.true62
  %36 = load i64, i64* %deadline.addr, align 8, !dbg !13649
  %37 = load i64, i64* %now, align 8, !dbg !13650
  %sub67 = sub i64 %36, %37, !dbg !13651
  %cmp68 = icmp ugt i64 %sub67, 750, !dbg !13652
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !13653

if.then70:                                        ; preds = %land.lhs.true66
  %38 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13654
  %39 = load i32, i32* %tmp28, align 4, !dbg !13654
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.81, i64 0, i64 0), i32 %39) #12, !dbg !13654
  store i32 1, i32* %warned, align 4, !dbg !13656
  br label %if.end71, !dbg !13657

if.end71:                                         ; preds = %if.then70, %land.lhs.true66, %land.lhs.true62, %if.end60
  %40 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13658
  %ap72 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %40, i32 0, i32 0, !dbg !13659
  %41 = load %struct.ata_port*, %struct.ata_port** %ap72, align 64, !dbg !13659
  call void @ata_msleep(%struct.ata_port* %41, i32 50) #12, !dbg !13660
  br label %while.body, !dbg !13592, !llvm.loop !13661

return:                                           ; preds = %if.then59, %if.then54, %if.then32
  %42 = load i32, i32* %retval, align 4, !dbg !13663
  ret i32 %42, !dbg !13663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_deadline(i64 %from_jiffies, i64 %timeout_msecs) #0 !dbg !13664 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8996, metadata !DIExpression()), !dbg !13667
  %from_jiffies.addr = alloca i64, align 8
  %timeout_msecs.addr = alloca i64, align 8
  store i64 %from_jiffies, i64* %from_jiffies.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from_jiffies.addr, metadata !13669, metadata !DIExpression()), !dbg !13670
  store i64 %timeout_msecs, i64* %timeout_msecs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout_msecs.addr, metadata !13671, metadata !DIExpression()), !dbg !13672
  %0 = load i64, i64* %from_jiffies.addr, align 8, !dbg !13673
  %1 = load i64, i64* %timeout_msecs.addr, align 8, !dbg !13674
  %conv = trunc i64 %1 to i32, !dbg !13674
  store i32 %conv, i32* %m.addr.i, align 4
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !13675
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #7, !dbg !13676
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !13677

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !13678
  %cmp.i = icmp slt i32 %4, 0, !dbg !13679
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13680

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !13681
  br label %msecs_to_jiffies.exit, !dbg !13681

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !13682
  %call.i = call i64 @_msecs_to_jiffies(i32 %5) #14, !dbg !13683
  store i64 %call.i, i64* %retval.i, align 8, !dbg !13684
  br label %msecs_to_jiffies.exit, !dbg !13684

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !13685
  %call2.i = call i64 @__msecs_to_jiffies(i32 %6) #14, !dbg !13686
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !13687
  br label %msecs_to_jiffies.exit, !dbg !13687

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !13688
  %add = add i64 %0, %7, !dbg !13689
  ret i64 %add, !dbg !13690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @ata_link_online(%struct.ata_link* %link) #0 !dbg !13691 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %slave = alloca %struct.ata_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13694, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.declare(metadata %struct.ata_link** %slave, metadata !13696, metadata !DIExpression()), !dbg !13697
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13698
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !13699
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !13699
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 26, !dbg !13700
  %2 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !13700
  store %struct.ata_link* %2, %struct.ata_link** %slave, align 8, !dbg !13697
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13701, metadata !DIExpression()), !dbg !13703
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13703
  %4 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !13703
  %cmp = icmp eq %struct.ata_link* %3, %4, !dbg !13703
  %lnot = xor i1 %cmp, true, !dbg !13703
  %lnot1 = xor i1 %lnot, true, !dbg !13703
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13703
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13703
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !13704
  %tobool = icmp ne i32 %5, 0, !dbg !13704
  %lnot2 = xor i1 %tobool, true, !dbg !13704
  %lnot4 = xor i1 %lnot2, true, !dbg !13704
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !13704
  %conv = sext i32 %lnot.ext5 to i64, !dbg !13704
  %tobool6 = icmp ne i64 %conv, 0, !dbg !13704
  br i1 %tobool6, label %if.then, label %if.end, !dbg !13703

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13704

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !13706

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !13708

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !13706

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4893, i32 2305, i64 12) #7, !dbg !13710, !srcloc !13712
  br label %do.end9, !dbg !13710

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 360) #7, !dbg !13713, !srcloc !13715
  br label %do.body10, !dbg !13706

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !13716

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !13706

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !13706

if.end:                                           ; preds = %do.end12, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !13703
  %tobool13 = icmp ne i32 %6, 0, !dbg !13703
  %lnot14 = xor i1 %tobool13, true, !dbg !13703
  %lnot16 = xor i1 %lnot14, true, !dbg !13703
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13703
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !13703
  store i64 %conv18, i64* %tmp, align 8, !dbg !13704
  %7 = load i64, i64* %tmp, align 8, !dbg !13703
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13718
  %call = call zeroext i1 @ata_phys_link_online(%struct.ata_link* %8) #12, !dbg !13719
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !13720

lor.rhs:                                          ; preds = %if.end
  %9 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !13721
  %tobool20 = icmp ne %struct.ata_link* %9, null, !dbg !13721
  br i1 %tobool20, label %land.rhs, label %land.end, !dbg !13722

land.rhs:                                         ; preds = %lor.rhs
  %10 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !13723
  %call21 = call zeroext i1 @ata_phys_link_online(%struct.ata_link* %10) #12, !dbg !13724
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %11 = phi i1 [ false, %lor.rhs ], [ %call21, %land.rhs ], !dbg !13725
  br label %lor.end, !dbg !13720

lor.end:                                          ; preds = %land.end, %if.end
  %12 = phi i1 [ true, %if.end ], [ %11, %land.end ]
  ret i1 %12, !dbg !13726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @ata_link_offline(%struct.ata_link* %link) #0 !dbg !13727 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %slave = alloca %struct.ata_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13728, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.declare(metadata %struct.ata_link** %slave, metadata !13730, metadata !DIExpression()), !dbg !13731
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13732
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !13733
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !13733
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 26, !dbg !13734
  %2 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !13734
  store %struct.ata_link* %2, %struct.ata_link** %slave, align 8, !dbg !13731
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13735, metadata !DIExpression()), !dbg !13737
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13737
  %4 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !13737
  %cmp = icmp eq %struct.ata_link* %3, %4, !dbg !13737
  %lnot = xor i1 %cmp, true, !dbg !13737
  %lnot1 = xor i1 %lnot, true, !dbg !13737
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13737
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13737
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !13738
  %tobool = icmp ne i32 %5, 0, !dbg !13738
  %lnot2 = xor i1 %tobool, true, !dbg !13738
  %lnot4 = xor i1 %lnot2, true, !dbg !13738
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !13738
  %conv = sext i32 %lnot.ext5 to i64, !dbg !13738
  %tobool6 = icmp ne i64 %conv, 0, !dbg !13738
  br i1 %tobool6, label %if.then, label %if.end, !dbg !13737

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13738

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !13740

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !13742

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !13740

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4920, i32 2305, i64 12) #7, !dbg !13744, !srcloc !13746
  br label %do.end9, !dbg !13744

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 361) #7, !dbg !13747, !srcloc !13749
  br label %do.body10, !dbg !13740

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !13750

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !13740

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !13740

if.end:                                           ; preds = %do.end12, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !13737
  %tobool13 = icmp ne i32 %6, 0, !dbg !13737
  %lnot14 = xor i1 %tobool13, true, !dbg !13737
  %lnot16 = xor i1 %lnot14, true, !dbg !13737
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13737
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !13737
  store i64 %conv18, i64* %tmp, align 8, !dbg !13738
  %7 = load i64, i64* %tmp, align 8, !dbg !13737
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13752
  %call = call zeroext i1 @ata_phys_link_offline(%struct.ata_link* %8) #12, !dbg !13753
  br i1 %call, label %land.rhs, label %land.end, !dbg !13754

land.rhs:                                         ; preds = %if.end
  %9 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !13755
  %tobool20 = icmp ne %struct.ata_link* %9, null, !dbg !13755
  br i1 %tobool20, label %lor.rhs, label %lor.end, !dbg !13756

lor.rhs:                                          ; preds = %land.rhs
  %10 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !13757
  %call21 = call zeroext i1 @ata_phys_link_offline(%struct.ata_link* %10) #12, !dbg !13758
  br label %lor.end, !dbg !13756

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %11 = phi i1 [ true, %land.rhs ], [ %call21, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.end
  %12 = phi i1 [ false, %if.end ], [ %11, %lor.end ], !dbg !13759
  ret i1 %12, !dbg !13760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_msleep(%struct.ata_port* %ap, i32 %msecs) #0 !dbg !13761 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !13762, metadata !DIExpression()), !dbg !13768
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !13770, metadata !DIExpression()), !dbg !13772
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !13773, metadata !DIExpression()), !dbg !13775
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %msecs.addr = alloca i32, align 4
  %owns_eh = alloca i8, align 1
  %usecs = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13776, metadata !DIExpression()), !dbg !13777
  store i32 %msecs, i32* %msecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %msecs.addr, metadata !13778, metadata !DIExpression()), !dbg !13779
  call void @llvm.dbg.declare(metadata i8* %owns_eh, metadata !13780, metadata !DIExpression()), !dbg !13781
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13782
  %tobool = icmp ne %struct.ata_port* %0, null, !dbg !13782
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13783

land.rhs:                                         ; preds = %entry
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13784
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 31, !dbg !13785
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13785
  %eh_owner = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 10, !dbg !13786
  %3 = load %struct.task_struct*, %struct.task_struct** %eh_owner, align 8, !dbg !13786
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !13772
  %4 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !13772
  %5 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #17, !dbg !13775, !srcloc !13787
  store i64 %5, i64* %pfo_val__.i, align 8, !dbg !13775
  %6 = load i64, i64* %pfo_val__.i, align 8, !dbg !13775
  %7 = inttoptr i64 %6 to %struct.task_struct*, !dbg !13775
  store %struct.task_struct* %7, %struct.task_struct** %tmp.i, align 8, !dbg !13775
  %8 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !13775
  store %struct.task_struct* %8, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !13768
  %9 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !13768
  store %struct.task_struct* %9, %struct.task_struct** %tmp1.i, align 8, !dbg !13768
  %10 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !13768
  %cmp = icmp eq %struct.task_struct* %3, %10, !dbg !13788
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %11 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !13789
  %frombool = zext i1 %11 to i8, !dbg !13781
  store i8 %frombool, i8* %owns_eh, align 1, !dbg !13781
  %12 = load i8, i8* %owns_eh, align 1, !dbg !13790
  %tobool1 = trunc i8 %12 to i1, !dbg !13790
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13792

if.then:                                          ; preds = %land.end
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13793
  call void @ata_eh_release(%struct.ata_port* %13) #12, !dbg !13794
  br label %if.end, !dbg !13794

if.end:                                           ; preds = %if.then, %land.end
  %14 = load i32, i32* %msecs.addr, align 4, !dbg !13795
  %cmp2 = icmp ult i32 %14, 20, !dbg !13797
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !13798

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %usecs, metadata !13799, metadata !DIExpression()), !dbg !13801
  %15 = load i32, i32* %msecs.addr, align 4, !dbg !13802
  %conv = zext i32 %15 to i64, !dbg !13802
  %mul = mul i64 %conv, 1000, !dbg !13803
  store i64 %mul, i64* %usecs, align 8, !dbg !13801
  %16 = load i64, i64* %usecs, align 8, !dbg !13804
  %17 = load i64, i64* %usecs, align 8, !dbg !13805
  %add = add i64 %17, 50, !dbg !13806
  call void @usleep_range(i64 %16, i64 %add) #12, !dbg !13807
  br label %if.end4, !dbg !13808

if.else:                                          ; preds = %if.end
  %18 = load i32, i32* %msecs.addr, align 4, !dbg !13809
  call void @msleep(i32 %18) #12, !dbg !13811
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %19 = load i8, i8* %owns_eh, align 1, !dbg !13812
  %tobool5 = trunc i8 %19 to i1, !dbg !13812
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !13814

if.then6:                                         ; preds = %if.end4
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13815
  call void @ata_eh_acquire(%struct.ata_port* %20) #12, !dbg !13816
  br label %if.end7, !dbg !13816

if.end7:                                          ; preds = %if.then6, %if.end4
  ret void, !dbg !13817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_wait_after_reset(%struct.ata_link* %link, i64 %deadline, i32 (%struct.ata_link*)* %check_ready) #0 !dbg !13818 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %deadline.addr = alloca i64, align 8
  %check_ready.addr = alloca i32 (%struct.ata_link*)*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13819, metadata !DIExpression()), !dbg !13820
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !13821, metadata !DIExpression()), !dbg !13822
  store i32 (%struct.ata_link*)* %check_ready, i32 (%struct.ata_link*)** %check_ready.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*)** %check_ready.addr, metadata !13823, metadata !DIExpression()), !dbg !13824
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13825
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !13826
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !13826
  call void @ata_msleep(%struct.ata_port* %1, i32 150) #12, !dbg !13827
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13828
  %3 = load i64, i64* %deadline.addr, align 8, !dbg !13829
  %4 = load i32 (%struct.ata_link*)*, i32 (%struct.ata_link*)** %check_ready.addr, align 8, !dbg !13830
  %call = call i32 @ata_wait_ready(%struct.ata_link* %2, i64 %3, i32 (%struct.ata_link*)* %4) #12, !dbg !13831
  ret i32 %call, !dbg !13832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64* @sata_ehc_deb_timing(%struct.ata_eh_context* %ehc) #0 !dbg !13833 {
entry:
  %retval = alloca i64*, align 8
  %ehc.addr = alloca %struct.ata_eh_context*, align 8
  store %struct.ata_eh_context* %ehc, %struct.ata_eh_context** %ehc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc.addr, metadata !13836, metadata !DIExpression()), !dbg !13837
  %0 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc.addr, align 8, !dbg !13838
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %0, i32 0, i32 0, !dbg !13840
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !13841
  %1 = load i32, i32* %flags, align 4, !dbg !13841
  %and = and i32 %1, 1, !dbg !13842
  %tobool = icmp ne i32 %and, 0, !dbg !13842
  br i1 %tobool, label %if.then, label %if.else, !dbg !13843

if.then:                                          ; preds = %entry
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @sata_deb_timing_hotplug, i64 0, i64 0), i64** %retval, align 8, !dbg !13844
  br label %return, !dbg !13844

if.else:                                          ; preds = %entry
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @sata_deb_timing_normal, i64 0, i64 0), i64** %retval, align 8, !dbg !13845
  br label %return, !dbg !13845

return:                                           ; preds = %if.else, %if.then
  %2 = load i64*, i64** %retval, align 8, !dbg !13846
  ret i64* %2, !dbg !13846
}

; Function Attrs: noredzone
declare dso_local i32 @sata_link_resume(%struct.ata_link*, i64*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @ata_phys_link_offline(%struct.ata_link* %link) #0 !dbg !13847 {
entry:
  %retval = alloca i1, align 1
  %link.addr = alloca %struct.ata_link*, align 8
  %sstatus = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13848, metadata !DIExpression()), !dbg !13849
  call void @llvm.dbg.declare(metadata i32* %sstatus, metadata !13850, metadata !DIExpression()), !dbg !13851
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13852
  %call = call i32 @sata_scr_read(%struct.ata_link* %0, i32 0, i32* %sstatus) #12, !dbg !13854
  %cmp = icmp eq i32 %call, 0, !dbg !13855
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13856

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %sstatus, align 4, !dbg !13857
  %call1 = call zeroext i1 @ata_sstatus_online(i32 %1) #12, !dbg !13858
  br i1 %call1, label %if.end, label %if.then, !dbg !13859

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !13860
  br label %return, !dbg !13860

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !13861
  br label %return, !dbg !13861

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, i1* %retval, align 1, !dbg !13862
  ret i1 %2, !dbg !13862
}

; Function Attrs: noredzone
declare dso_local i32 @sata_link_hardreset(%struct.ata_link*, i64*, i64, i8*, i32 (%struct.ata_link*)*) #1

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_write(%struct.ata_link*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sata_print_link_status(%struct.ata_link* %link) #0 !dbg !13863 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %sstatus = alloca i32, align 4
  %scontrol = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13866, metadata !DIExpression()), !dbg !13867
  call void @llvm.dbg.declare(metadata i32* %sstatus, metadata !13868, metadata !DIExpression()), !dbg !13869
  call void @llvm.dbg.declare(metadata i32* %scontrol, metadata !13870, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13872, metadata !DIExpression()), !dbg !13873
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13874
  %call = call i32 @sata_scr_read(%struct.ata_link* %0, i32 0, i32* %sstatus) #12, !dbg !13876
  %tobool = icmp ne i32 %call, 0, !dbg !13876
  br i1 %tobool, label %if.then, label %if.end, !dbg !13877

if.then:                                          ; preds = %entry
  br label %if.end5, !dbg !13878

if.end:                                           ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13879
  %call1 = call i32 @sata_scr_read(%struct.ata_link* %1, i32 2, i32* %scontrol) #12, !dbg !13880
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13881
  %call2 = call zeroext i1 @ata_phys_link_online(%struct.ata_link* %2) #12, !dbg !13883
  br i1 %call2, label %if.then3, label %if.else, !dbg !13884

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %sstatus, align 4, !dbg !13885
  %shr = lshr i32 %3, 4, !dbg !13887
  %and = and i32 %shr, 15, !dbg !13888
  store i32 %and, i32* %tmp, align 4, !dbg !13889
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13890
  %5 = load i32, i32* %tmp, align 4, !dbg !13890
  %call4 = call i8* @sata_spd_string(i32 %5) #12, !dbg !13890
  %6 = load i32, i32* %sstatus, align 4, !dbg !13890
  %7 = load i32, i32* %scontrol, align 4, !dbg !13890
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.141, i64 0, i64 0), i8* %call4, i32 %6, i32 %7) #12, !dbg !13890
  br label %if.end5, !dbg !13891

if.else:                                          ; preds = %if.end
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13892
  %9 = load i32, i32* %sstatus, align 4, !dbg !13892
  %10 = load i32, i32* %scontrol, align 4, !dbg !13892
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.142, i64 0, i64 0), i32 %9, i32 %10) #12, !dbg !13892
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !13894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_dev_reread_id(%struct.ata_device* %dev, i32 %readid_flags) #0 !dbg !13895 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %readid_flags.addr = alloca i32, align 4
  %class = alloca i32, align 4
  %id = alloca i16*, align 8
  %rc = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13896, metadata !DIExpression()), !dbg !13897
  store i32 %readid_flags, i32* %readid_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %readid_flags.addr, metadata !13898, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.declare(metadata i32* %class, metadata !13900, metadata !DIExpression()), !dbg !13901
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13902
  %class1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 11, !dbg !13903
  %1 = load i32, i32* %class1, align 64, !dbg !13903
  store i32 %1, i32* %class, align 4, !dbg !13901
  call void @llvm.dbg.declare(metadata i16** %id, metadata !13904, metadata !DIExpression()), !dbg !13905
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13906
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 0, !dbg !13907
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !13907
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !13908
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !13908
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 52, !dbg !13909
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !13906
  %5 = bitcast i8* %arraydecay to i16*, !dbg !13910
  store i16* %5, i16** %id, align 8, !dbg !13905
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !13911, metadata !DIExpression()), !dbg !13912
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13913
  %7 = load i32, i32* %readid_flags.addr, align 4, !dbg !13914
  %8 = load i16*, i16** %id, align 8, !dbg !13915
  %call = call i32 @ata_dev_read_id(%struct.ata_device* %6, i32* %class, i32 %7, i16* %8) #12, !dbg !13916
  store i32 %call, i32* %rc, align 4, !dbg !13917
  %9 = load i32, i32* %rc, align 4, !dbg !13918
  %tobool = icmp ne i32 %9, 0, !dbg !13918
  br i1 %tobool, label %if.then, label %if.end, !dbg !13920

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %rc, align 4, !dbg !13921
  store i32 %10, i32* %retval, align 4, !dbg !13922
  br label %return, !dbg !13922

if.end:                                           ; preds = %entry
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13923
  %12 = load i32, i32* %class, align 4, !dbg !13925
  %13 = load i16*, i16** %id, align 8, !dbg !13926
  %call2 = call i32 @ata_dev_same_device(%struct.ata_device* %11, i32 %12, i16* %13) #12, !dbg !13927
  %tobool3 = icmp ne i32 %call2, 0, !dbg !13927
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !13928

if.then4:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !13929
  br label %return, !dbg !13929

if.end5:                                          ; preds = %if.end
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13930
  %15 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 27, !dbg !13931
  %id6 = bitcast %union.anon.83* %15 to [256 x i16]*, !dbg !13931
  %arraydecay7 = getelementptr inbounds [256 x i16], [256 x i16]* %id6, i64 0, i64 0, !dbg !13932
  %16 = bitcast i16* %arraydecay7 to i8*, !dbg !13932
  %17 = load i16*, i16** %id, align 8, !dbg !13933
  %18 = bitcast i16* %17 to i8*, !dbg !13932
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 64 %16, i8* align 2 %18, i64 512, i1 false), !dbg !13932
  store i32 0, i32* %retval, align 4, !dbg !13934
  br label %return, !dbg !13934

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !13935
  ret i32 %19, !dbg !13935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_same_device(%struct.ata_device* %dev, i32 %new_class, i16* %new_id) #0 !dbg !13936 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %new_class.addr = alloca i32, align 4
  %new_id.addr = alloca i16*, align 8
  %old_id = alloca i16*, align 8
  %model = alloca [2 x [41 x i8]], align 16
  %serial = alloca [2 x [21 x i8]], align 16
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13939, metadata !DIExpression()), !dbg !13940
  store i32 %new_class, i32* %new_class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_class.addr, metadata !13941, metadata !DIExpression()), !dbg !13942
  store i16* %new_id, i16** %new_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %new_id.addr, metadata !13943, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.declare(metadata i16** %old_id, metadata !13945, metadata !DIExpression()), !dbg !13946
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13947
  %1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 27, !dbg !13948
  %id = bitcast %union.anon.83* %1 to [256 x i16]*, !dbg !13948
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !13947
  store i16* %arraydecay, i16** %old_id, align 8, !dbg !13946
  call void @llvm.dbg.declare(metadata [2 x [41 x i8]]* %model, metadata !13949, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.declare(metadata [2 x [21 x i8]]* %serial, metadata !13953, metadata !DIExpression()), !dbg !13956
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13957
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 11, !dbg !13959
  %3 = load i32, i32* %class, align 64, !dbg !13959
  %4 = load i32, i32* %new_class.addr, align 4, !dbg !13960
  %cmp = icmp ne i32 %3, %4, !dbg !13961
  br i1 %cmp, label %if.then, label %if.end, !dbg !13962

if.then:                                          ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13963
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13963
  %class1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 11, !dbg !13963
  %7 = load i32, i32* %class1, align 64, !dbg !13963
  %8 = load i32, i32* %new_class.addr, align 4, !dbg !13963
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.143, i64 0, i64 0), i32 %7, i32 %8) #12, !dbg !13963
  store i32 0, i32* %retval, align 4, !dbg !13965
  br label %return, !dbg !13965

if.end:                                           ; preds = %entry
  %9 = load i16*, i16** %old_id, align 8, !dbg !13966
  %arrayidx = getelementptr [2 x [41 x i8]], [2 x [41 x i8]]* %model, i64 0, i64 0, !dbg !13967
  %arraydecay2 = getelementptr inbounds [41 x i8], [41 x i8]* %arrayidx, i64 0, i64 0, !dbg !13967
  call void @ata_id_c_string(i16* %9, i8* %arraydecay2, i32 27, i32 41) #12, !dbg !13968
  %10 = load i16*, i16** %new_id.addr, align 8, !dbg !13969
  %arrayidx3 = getelementptr [2 x [41 x i8]], [2 x [41 x i8]]* %model, i64 0, i64 1, !dbg !13970
  %arraydecay4 = getelementptr inbounds [41 x i8], [41 x i8]* %arrayidx3, i64 0, i64 0, !dbg !13970
  call void @ata_id_c_string(i16* %10, i8* %arraydecay4, i32 27, i32 41) #12, !dbg !13971
  %11 = load i16*, i16** %old_id, align 8, !dbg !13972
  %arrayidx5 = getelementptr [2 x [21 x i8]], [2 x [21 x i8]]* %serial, i64 0, i64 0, !dbg !13973
  %arraydecay6 = getelementptr inbounds [21 x i8], [21 x i8]* %arrayidx5, i64 0, i64 0, !dbg !13973
  call void @ata_id_c_string(i16* %11, i8* %arraydecay6, i32 10, i32 21) #12, !dbg !13974
  %12 = load i16*, i16** %new_id.addr, align 8, !dbg !13975
  %arrayidx7 = getelementptr [2 x [21 x i8]], [2 x [21 x i8]]* %serial, i64 0, i64 1, !dbg !13976
  %arraydecay8 = getelementptr inbounds [21 x i8], [21 x i8]* %arrayidx7, i64 0, i64 0, !dbg !13976
  call void @ata_id_c_string(i16* %12, i8* %arraydecay8, i32 10, i32 21) #12, !dbg !13977
  %arrayidx9 = getelementptr [2 x [41 x i8]], [2 x [41 x i8]]* %model, i64 0, i64 0, !dbg !13978
  %arraydecay10 = getelementptr inbounds [41 x i8], [41 x i8]* %arrayidx9, i64 0, i64 0, !dbg !13978
  %arrayidx11 = getelementptr [2 x [41 x i8]], [2 x [41 x i8]]* %model, i64 0, i64 1, !dbg !13980
  %arraydecay12 = getelementptr inbounds [41 x i8], [41 x i8]* %arrayidx11, i64 0, i64 0, !dbg !13980
  %call = call i32 @strcmp(i8* %arraydecay10, i8* %arraydecay12) #12, !dbg !13981
  %tobool = icmp ne i32 %call, 0, !dbg !13981
  br i1 %tobool, label %if.then13, label %if.end18, !dbg !13982

if.then13:                                        ; preds = %if.end
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13983
  %arrayidx14 = getelementptr [2 x [41 x i8]], [2 x [41 x i8]]* %model, i64 0, i64 0, !dbg !13983
  %arraydecay15 = getelementptr inbounds [41 x i8], [41 x i8]* %arrayidx14, i64 0, i64 0, !dbg !13983
  %arrayidx16 = getelementptr [2 x [41 x i8]], [2 x [41 x i8]]* %model, i64 0, i64 1, !dbg !13983
  %arraydecay17 = getelementptr inbounds [41 x i8], [41 x i8]* %arrayidx16, i64 0, i64 0, !dbg !13983
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.144, i64 0, i64 0), i8* %arraydecay15, i8* %arraydecay17) #12, !dbg !13983
  store i32 0, i32* %retval, align 4, !dbg !13985
  br label %return, !dbg !13985

if.end18:                                         ; preds = %if.end
  %arrayidx19 = getelementptr [2 x [21 x i8]], [2 x [21 x i8]]* %serial, i64 0, i64 0, !dbg !13986
  %arraydecay20 = getelementptr inbounds [21 x i8], [21 x i8]* %arrayidx19, i64 0, i64 0, !dbg !13986
  %arrayidx21 = getelementptr [2 x [21 x i8]], [2 x [21 x i8]]* %serial, i64 0, i64 1, !dbg !13988
  %arraydecay22 = getelementptr inbounds [21 x i8], [21 x i8]* %arrayidx21, i64 0, i64 0, !dbg !13988
  %call23 = call i32 @strcmp(i8* %arraydecay20, i8* %arraydecay22) #12, !dbg !13989
  %tobool24 = icmp ne i32 %call23, 0, !dbg !13989
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !13990

if.then25:                                        ; preds = %if.end18
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13991
  %arrayidx26 = getelementptr [2 x [21 x i8]], [2 x [21 x i8]]* %serial, i64 0, i64 0, !dbg !13991
  %arraydecay27 = getelementptr inbounds [21 x i8], [21 x i8]* %arrayidx26, i64 0, i64 0, !dbg !13991
  %arrayidx28 = getelementptr [2 x [21 x i8]], [2 x [21 x i8]]* %serial, i64 0, i64 1, !dbg !13991
  %arraydecay29 = getelementptr inbounds [21 x i8], [21 x i8]* %arrayidx28, i64 0, i64 0, !dbg !13991
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.145, i64 0, i64 0), i8* %arraydecay27, i8* %arraydecay29) #12, !dbg !13991
  store i32 0, i32* %retval, align 4, !dbg !13993
  br label %return, !dbg !13993

if.end30:                                         ; preds = %if.end18
  store i32 1, i32* %retval, align 4, !dbg !13994
  br label %return, !dbg !13994

return:                                           ; preds = %if.end30, %if.then25, %if.then13, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !13995
  ret i32 %15, !dbg !13995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_dev_revalidate(%struct.ata_device* %dev, i32 %new_class, i32 %readid_flags) #0 !dbg !13996 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %new_class.addr = alloca i32, align 4
  %readid_flags.addr = alloca i32, align 4
  %n_sectors = alloca i64, align 8
  %n_native_sectors = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13999, metadata !DIExpression()), !dbg !14000
  store i32 %new_class, i32* %new_class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_class.addr, metadata !14001, metadata !DIExpression()), !dbg !14002
  store i32 %readid_flags, i32* %readid_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %readid_flags.addr, metadata !14003, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.declare(metadata i64* %n_sectors, metadata !14005, metadata !DIExpression()), !dbg !14006
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14007
  %n_sectors1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 9, !dbg !14008
  %1 = load i64, i64* %n_sectors1, align 16, !dbg !14008
  store i64 %1, i64* %n_sectors, align 8, !dbg !14006
  call void @llvm.dbg.declare(metadata i64* %n_native_sectors, metadata !14009, metadata !DIExpression()), !dbg !14010
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14011
  %n_native_sectors2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 10, !dbg !14012
  %3 = load i64, i64* %n_native_sectors2, align 8, !dbg !14012
  store i64 %3, i64* %n_native_sectors, align 8, !dbg !14010
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !14013, metadata !DIExpression()), !dbg !14014
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14015
  %call = call i32 @ata_dev_enabled(%struct.ata_device* %4) #12, !dbg !14017
  %tobool = icmp ne i32 %call, 0, !dbg !14017
  br i1 %tobool, label %if.end, label %if.then, !dbg !14018

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !14019
  br label %return, !dbg !14019

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %new_class.addr, align 4, !dbg !14020
  %call3 = call i32 @ata_class_enabled(i32 %5) #12, !dbg !14022
  %tobool4 = icmp ne i32 %call3, 0, !dbg !14022
  br i1 %tobool4, label %land.lhs.true, label %if.end12, !dbg !14023

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %new_class.addr, align 4, !dbg !14024
  %cmp = icmp ne i32 %6, 1, !dbg !14025
  br i1 %cmp, label %land.lhs.true5, label %if.end12, !dbg !14026

land.lhs.true5:                                   ; preds = %land.lhs.true
  %7 = load i32, i32* %new_class.addr, align 4, !dbg !14027
  %cmp6 = icmp ne i32 %7, 3, !dbg !14028
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !14029

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %8 = load i32, i32* %new_class.addr, align 4, !dbg !14030
  %cmp8 = icmp ne i32 %8, 9, !dbg !14031
  br i1 %cmp8, label %land.lhs.true9, label %if.end12, !dbg !14032

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %9 = load i32, i32* %new_class.addr, align 4, !dbg !14033
  %cmp10 = icmp ne i32 %9, 7, !dbg !14034
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !14035

if.then11:                                        ; preds = %land.lhs.true9
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14036
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14036
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 11, !dbg !14036
  %12 = load i32, i32* %class, align 64, !dbg !14036
  %13 = load i32, i32* %new_class.addr, align 4, !dbg !14036
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i64 0, i64 0), i32 %12, i32 %13) #12, !dbg !14036
  store i32 -19, i32* %rc, align 4, !dbg !14038
  br label %fail, !dbg !14039

if.end12:                                         ; preds = %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14040
  %15 = load i32, i32* %readid_flags.addr, align 4, !dbg !14041
  %call13 = call i32 @ata_dev_reread_id(%struct.ata_device* %14, i32 %15) #12, !dbg !14042
  store i32 %call13, i32* %rc, align 4, !dbg !14043
  %16 = load i32, i32* %rc, align 4, !dbg !14044
  %tobool14 = icmp ne i32 %16, 0, !dbg !14044
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !14046

if.then15:                                        ; preds = %if.end12
  br label %fail, !dbg !14047

if.end16:                                         ; preds = %if.end12
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14048
  %call17 = call i32 @ata_dev_configure(%struct.ata_device* %17) #12, !dbg !14049
  store i32 %call17, i32* %rc, align 4, !dbg !14050
  %18 = load i32, i32* %rc, align 4, !dbg !14051
  %tobool18 = icmp ne i32 %18, 0, !dbg !14051
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !14053

if.then19:                                        ; preds = %if.end16
  br label %fail, !dbg !14054

if.end20:                                         ; preds = %if.end16
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14055
  %class21 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 11, !dbg !14057
  %20 = load i32, i32* %class21, align 64, !dbg !14057
  %cmp22 = icmp ne i32 %20, 1, !dbg !14058
  br i1 %cmp22, label %if.then27, label %lor.lhs.false, !dbg !14059

lor.lhs.false:                                    ; preds = %if.end20
  %21 = load i64, i64* %n_sectors, align 8, !dbg !14060
  %tobool23 = icmp ne i64 %21, 0, !dbg !14060
  br i1 %tobool23, label %lor.lhs.false24, label %if.then27, !dbg !14061

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14062
  %n_sectors25 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 9, !dbg !14063
  %23 = load i64, i64* %n_sectors25, align 16, !dbg !14063
  %24 = load i64, i64* %n_sectors, align 8, !dbg !14064
  %cmp26 = icmp eq i64 %23, %24, !dbg !14065
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !14066

if.then27:                                        ; preds = %lor.lhs.false24, %lor.lhs.false, %if.end20
  store i32 0, i32* %retval, align 4, !dbg !14067
  br label %return, !dbg !14067

if.end28:                                         ; preds = %lor.lhs.false24
  %25 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14068
  %26 = load i64, i64* %n_sectors, align 8, !dbg !14068
  %27 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14068
  %n_sectors29 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %27, i32 0, i32 9, !dbg !14068
  %28 = load i64, i64* %n_sectors29, align 16, !dbg !14068
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.84, i64 0, i64 0), i64 %26, i64 %28) #12, !dbg !14068
  %29 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14069
  %n_native_sectors30 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %29, i32 0, i32 10, !dbg !14071
  %30 = load i64, i64* %n_native_sectors30, align 8, !dbg !14071
  %31 = load i64, i64* %n_native_sectors, align 8, !dbg !14072
  %cmp31 = icmp eq i64 %30, %31, !dbg !14073
  br i1 %cmp31, label %land.lhs.true32, label %if.end39, !dbg !14074

land.lhs.true32:                                  ; preds = %if.end28
  %32 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14075
  %n_sectors33 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %32, i32 0, i32 9, !dbg !14076
  %33 = load i64, i64* %n_sectors33, align 16, !dbg !14076
  %34 = load i64, i64* %n_sectors, align 8, !dbg !14077
  %cmp34 = icmp ugt i64 %33, %34, !dbg !14078
  br i1 %cmp34, label %land.lhs.true35, label %if.end39, !dbg !14079

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %35 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14080
  %n_sectors36 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %35, i32 0, i32 9, !dbg !14081
  %36 = load i64, i64* %n_sectors36, align 16, !dbg !14081
  %37 = load i64, i64* %n_native_sectors, align 8, !dbg !14082
  %cmp37 = icmp eq i64 %36, %37, !dbg !14083
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !14084

if.then38:                                        ; preds = %land.lhs.true35
  %38 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14085
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.85, i64 0, i64 0)) #12, !dbg !14085
  store i32 0, i32* %retval, align 4, !dbg !14087
  br label %return, !dbg !14087

if.end39:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %if.end28
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14088
  %n_native_sectors40 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 10, !dbg !14090
  %40 = load i64, i64* %n_native_sectors40, align 8, !dbg !14090
  %41 = load i64, i64* %n_native_sectors, align 8, !dbg !14091
  %cmp41 = icmp eq i64 %40, %41, !dbg !14092
  br i1 %cmp41, label %land.lhs.true42, label %if.else, !dbg !14093

land.lhs.true42:                                  ; preds = %if.end39
  %42 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14094
  %n_sectors43 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %42, i32 0, i32 9, !dbg !14095
  %43 = load i64, i64* %n_sectors43, align 16, !dbg !14095
  %44 = load i64, i64* %n_sectors, align 8, !dbg !14096
  %cmp44 = icmp ult i64 %43, %44, !dbg !14097
  br i1 %cmp44, label %land.lhs.true45, label %if.else, !dbg !14098

land.lhs.true45:                                  ; preds = %land.lhs.true42
  %45 = load i64, i64* %n_sectors, align 8, !dbg !14099
  %46 = load i64, i64* %n_native_sectors, align 8, !dbg !14100
  %cmp46 = icmp eq i64 %45, %46, !dbg !14101
  br i1 %cmp46, label %land.lhs.true47, label %if.else, !dbg !14102

land.lhs.true47:                                  ; preds = %land.lhs.true45
  %47 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14103
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %47, i32 0, i32 2, !dbg !14104
  %48 = load i32, i32* %horkage, align 4, !dbg !14104
  %and = and i32 %48, 16, !dbg !14105
  %tobool48 = icmp ne i32 %and, 0, !dbg !14105
  br i1 %tobool48, label %if.else, label %if.then49, !dbg !14106

if.then49:                                        ; preds = %land.lhs.true47
  %49 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14107
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.86, i64 0, i64 0)) #12, !dbg !14107
  %50 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14109
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %50, i32 0, i32 3, !dbg !14110
  %51 = load i64, i64* %flags, align 16, !dbg !14111
  %or = or i64 %51, 262144, !dbg !14111
  store i64 %or, i64* %flags, align 16, !dbg !14111
  store i32 -5, i32* %rc, align 4, !dbg !14112
  br label %if.end50, !dbg !14113

if.else:                                          ; preds = %land.lhs.true47, %land.lhs.true45, %land.lhs.true42, %if.end39
  store i32 -19, i32* %rc, align 4, !dbg !14114
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then49
  %52 = load i64, i64* %n_native_sectors, align 8, !dbg !14115
  %53 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14116
  %n_native_sectors51 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %53, i32 0, i32 10, !dbg !14117
  store i64 %52, i64* %n_native_sectors51, align 8, !dbg !14118
  %54 = load i64, i64* %n_sectors, align 8, !dbg !14119
  %55 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14120
  %n_sectors52 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %55, i32 0, i32 9, !dbg !14121
  store i64 %54, i64* %n_sectors52, align 16, !dbg !14122
  br label %fail, !dbg !14120

fail:                                             ; preds = %if.end50, %if.then19, %if.then15, %if.then11
  call void @llvm.dbg.label(metadata !14123), !dbg !14124
  %56 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14125
  %57 = load i32, i32* %rc, align 4, !dbg !14125
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.87, i64 0, i64 0), i32 %57) #12, !dbg !14125
  %58 = load i32, i32* %rc, align 4, !dbg !14126
  store i32 %58, i32* %retval, align 4, !dbg !14127
  br label %return, !dbg !14127

return:                                           ; preds = %fail, %if.then38, %if.then27, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !14128
  ret i32 %59, !dbg !14128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_class_enabled(i32 %class) #0 !dbg !14129 {
entry:
  %class.addr = alloca i32, align 4
  store i32 %class, i32* %class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %class.addr, metadata !14132, metadata !DIExpression()), !dbg !14133
  %0 = load i32, i32* %class.addr, align 4, !dbg !14134
  %cmp = icmp eq i32 %0, 1, !dbg !14135
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !14136

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %class.addr, align 4, !dbg !14137
  %cmp1 = icmp eq i32 %1, 3, !dbg !14138
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !14139

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %class.addr, align 4, !dbg !14140
  %cmp3 = icmp eq i32 %2, 5, !dbg !14141
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !14142

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %class.addr, align 4, !dbg !14143
  %cmp5 = icmp eq i32 %3, 7, !dbg !14144
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !14145

lor.rhs:                                          ; preds = %lor.lhs.false4
  %4 = load i32, i32* %class.addr, align 4, !dbg !14146
  %cmp6 = icmp eq i32 %4, 9, !dbg !14147
  br label %lor.end, !dbg !14145

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %5 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32, !dbg !14145
  ret i32 %lor.ext, !dbg !14148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @atapi_check_dma(%struct.ata_queued_cmd* %qc) #0 !dbg !14149 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14150, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14152, metadata !DIExpression()), !dbg !14153
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14154
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !14155
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !14155
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !14153
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14156
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 1, !dbg !14158
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14158
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 2, !dbg !14159
  %4 = load i32, i32* %horkage, align 4, !dbg !14159
  %and = and i32 %4, 2048, !dbg !14160
  %tobool = icmp ne i32 %and, 0, !dbg !14160
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !14161

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14162
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 13, !dbg !14162
  %6 = load i32, i32* %nbytes, align 8, !dbg !14162
  %and2 = and i32 %6, 15, !dbg !14162
  %tobool3 = icmp ne i32 %and2, 0, !dbg !14162
  %lnot = xor i1 %tobool3, true, !dbg !14162
  %lnot4 = xor i1 %lnot, true, !dbg !14162
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !14162
  %conv = sext i32 %lnot.ext to i64, !dbg !14162
  %tobool5 = icmp ne i64 %conv, 0, !dbg !14162
  br i1 %tobool5, label %if.then, label %if.end, !dbg !14163

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !14164
  br label %return, !dbg !14164

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14165
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 1, !dbg !14167
  %8 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !14167
  %check_atapi_dma = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %8, i32 0, i32 1, !dbg !14168
  %9 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %check_atapi_dma, align 8, !dbg !14168
  %tobool6 = icmp ne i32 (%struct.ata_queued_cmd*)* %9, null, !dbg !14165
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !14169

if.then7:                                         ; preds = %if.end
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14170
  %ops8 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 1, !dbg !14171
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops8, align 8, !dbg !14171
  %check_atapi_dma9 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %11, i32 0, i32 1, !dbg !14172
  %12 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %check_atapi_dma9, align 8, !dbg !14172
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14173
  %call = call i32 %12(%struct.ata_queued_cmd* %13) #12, !dbg !14170
  store i32 %call, i32* %retval, align 4, !dbg !14174
  br label %return, !dbg !14174

if.end10:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14175
  br label %return, !dbg !14175

return:                                           ; preds = %if.end10, %if.then7, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !14176
  ret i32 %14, !dbg !14176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_ncq(i8 zeroext %prot) #0 !dbg !14177 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !14180, metadata !DIExpression()), !dbg !14181
  %0 = load i8, i8* %prot.addr, align 1, !dbg !14182
  %conv = zext i8 %0 to i32, !dbg !14182
  %and = and i32 %conv, 4, !dbg !14183
  %tobool = icmp ne i32 %and, 0, !dbg !14182
  ret i1 %tobool, !dbg !14184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_valid(i32 %tag) #0 !dbg !14185 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !14186, metadata !DIExpression()), !dbg !14187
  %0 = load i32, i32* %tag.addr, align 4, !dbg !14188
  %cmp = icmp ult i32 %0, 32, !dbg !14189
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14190

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %tag.addr, align 4, !dbg !14191
  %call = call zeroext i1 @ata_tag_internal(i32 %1) #12, !dbg !14192
  br label %lor.end, !dbg !14190

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %2, !dbg !14193
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_noop_qc_prep(%struct.ata_queued_cmd* %qc) #0 !dbg !14194 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14195, metadata !DIExpression()), !dbg !14196
  ret i32 0, !dbg !14197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_queued_cmd* @ata_qc_new_init(%struct.ata_device* %dev, i32 %tag) #0 !dbg !14198 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %tag.addr = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14201, metadata !DIExpression()), !dbg !14202
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !14203, metadata !DIExpression()), !dbg !14204
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14205, metadata !DIExpression()), !dbg !14206
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14207
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !14208
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !14208
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !14209
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !14209
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !14206
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !14210, metadata !DIExpression()), !dbg !14211
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14212
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 4, !dbg !14212
  %4 = load i32, i32* %pflags, align 32, !dbg !14212
  %and = and i32 %4, 4, !dbg !14212
  %tobool = icmp ne i32 %and, 0, !dbg !14212
  %lnot = xor i1 %tobool, true, !dbg !14212
  %lnot2 = xor i1 %lnot, true, !dbg !14212
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14212
  %conv = sext i32 %lnot.ext to i64, !dbg !14212
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14212
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14214

if.then:                                          ; preds = %entry
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !14215
  br label %return, !dbg !14215

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14216
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 3, !dbg !14218
  %6 = load i64, i64* %flags, align 8, !dbg !14218
  %and4 = and i64 %6, 16777216, !dbg !14219
  %tobool5 = icmp ne i64 %and4, 0, !dbg !14219
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !14220

if.then6:                                         ; preds = %if.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14221
  %call = call i32 @ata_sas_allocate_tag(%struct.ata_port* %7) #12, !dbg !14223
  store i32 %call, i32* %tag.addr, align 4, !dbg !14224
  %8 = load i32, i32* %tag.addr, align 4, !dbg !14225
  %cmp = icmp slt i32 %8, 0, !dbg !14227
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !14228

if.then8:                                         ; preds = %if.then6
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !14229
  br label %return, !dbg !14229

if.end9:                                          ; preds = %if.then6
  br label %if.end10, !dbg !14230

if.end10:                                         ; preds = %if.end9, %if.end
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14231
  %10 = load i32, i32* %tag.addr, align 4, !dbg !14232
  %call11 = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %9, i32 %10) #12, !dbg !14233
  store %struct.ata_queued_cmd* %call11, %struct.ata_queued_cmd** %qc, align 8, !dbg !14234
  %11 = load i32, i32* %tag.addr, align 4, !dbg !14235
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14236
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %12, i32 0, i32 8, !dbg !14237
  store i32 %11, i32* %hw_tag, align 4, !dbg !14238
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14239
  %tag12 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 7, !dbg !14240
  store i32 %11, i32* %tag12, align 8, !dbg !14241
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14242
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 2, !dbg !14243
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !14244
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14245
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14246
  %ap13 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 0, !dbg !14247
  store %struct.ata_port* %15, %struct.ata_port** %ap13, align 8, !dbg !14248
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14249
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14250
  %dev14 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 1, !dbg !14251
  store %struct.ata_device* %17, %struct.ata_device** %dev14, align 8, !dbg !14252
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14253
  call void @ata_qc_reinit(%struct.ata_queued_cmd* %19) #12, !dbg !14254
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14255
  store %struct.ata_queued_cmd* %20, %struct.ata_queued_cmd** %retval, align 8, !dbg !14256
  br label %return, !dbg !14256

return:                                           ; preds = %if.end10, %if.then8, %if.then
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !14257
  ret %struct.ata_queued_cmd* %21, !dbg !14257
}

; Function Attrs: noredzone
declare dso_local i32 @ata_sas_allocate_tag(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local void @ata_sas_free_tag(i32, %struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__ata_qc_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !14258 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on19 = alloca i32, align 4
  %tmp44 = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14259, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14261, metadata !DIExpression()), !dbg !14262
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !14263, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14265, metadata !DIExpression()), !dbg !14267
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14267
  %cmp = icmp eq %struct.ata_queued_cmd* %0, null, !dbg !14267
  %lnot = xor i1 %cmp, true, !dbg !14267
  %lnot1 = xor i1 %lnot, true, !dbg !14267
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14267
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !14267
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !14268
  %tobool = icmp ne i32 %1, 0, !dbg !14268
  %lnot2 = xor i1 %tobool, true, !dbg !14268
  %lnot4 = xor i1 %lnot2, true, !dbg !14268
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !14268
  %conv = sext i32 %lnot.ext5 to i64, !dbg !14268
  %tobool6 = icmp ne i64 %conv, 0, !dbg !14268
  br i1 %tobool6, label %if.then, label %if.end, !dbg !14267

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14268

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !14270

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !14272

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !14270

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4560, i32 2307, i64 12) #7, !dbg !14274, !srcloc !14276
  br label %do.end9, !dbg !14274

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 354) #7, !dbg !14277, !srcloc !14279
  br label %do.body10, !dbg !14270

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !14280

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !14270

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !14270

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !14267
  %tobool13 = icmp ne i32 %2, 0, !dbg !14267
  %lnot14 = xor i1 %tobool13, true, !dbg !14267
  %lnot16 = xor i1 %lnot14, true, !dbg !14267
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !14267
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !14267
  store i64 %conv18, i64* %tmp, align 8, !dbg !14268
  %3 = load i64, i64* %tmp, align 8, !dbg !14267
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on19, metadata !14282, metadata !DIExpression()), !dbg !14284
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14284
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 6, !dbg !14284
  %5 = load i64, i64* %flags, align 8, !dbg !14284
  %and = and i64 %5, 1, !dbg !14284
  %tobool20 = icmp ne i64 %and, 0, !dbg !14284
  %lnot21 = xor i1 %tobool20, true, !dbg !14284
  %lnot23 = xor i1 %lnot21, true, !dbg !14284
  %lnot25 = xor i1 %lnot23, true, !dbg !14284
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !14284
  store i32 %lnot.ext26, i32* %__ret_warn_on19, align 4, !dbg !14284
  %6 = load i32, i32* %__ret_warn_on19, align 4, !dbg !14285
  %tobool27 = icmp ne i32 %6, 0, !dbg !14285
  %lnot28 = xor i1 %tobool27, true, !dbg !14285
  %lnot30 = xor i1 %lnot28, true, !dbg !14285
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !14285
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !14285
  %tobool33 = icmp ne i64 %conv32, 0, !dbg !14285
  br i1 %tobool33, label %if.then34, label %if.end43, !dbg !14284

if.then34:                                        ; preds = %if.end
  br label %do.body35, !dbg !14285

do.body35:                                        ; preds = %if.then34
  br label %do.body36, !dbg !14287

do.body36:                                        ; preds = %do.body35
  br label %do.end37, !dbg !14289

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !14287

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4561, i32 2307, i64 12) #7, !dbg !14291, !srcloc !14293
  br label %do.end39, !dbg !14291

do.end39:                                         ; preds = %do.body38
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 355) #7, !dbg !14294, !srcloc !14296
  br label %do.body40, !dbg !14287

do.body40:                                        ; preds = %do.end39
  br label %do.end41, !dbg !14297

do.end41:                                         ; preds = %do.body40
  br label %do.end42, !dbg !14287

do.end42:                                         ; preds = %do.end41
  br label %if.end43, !dbg !14287

if.end43:                                         ; preds = %do.end42, %if.end
  %7 = load i32, i32* %__ret_warn_on19, align 4, !dbg !14284
  %tobool45 = icmp ne i32 %7, 0, !dbg !14284
  %lnot46 = xor i1 %tobool45, true, !dbg !14284
  %lnot48 = xor i1 %lnot46, true, !dbg !14284
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !14284
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !14284
  store i64 %conv50, i64* %tmp44, align 8, !dbg !14285
  %8 = load i64, i64* %tmp44, align 8, !dbg !14284
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14299
  %ap51 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 0, !dbg !14300
  %10 = load %struct.ata_port*, %struct.ata_port** %ap51, align 8, !dbg !14300
  store %struct.ata_port* %10, %struct.ata_port** %ap, align 8, !dbg !14301
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14302
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 1, !dbg !14303
  %12 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14303
  %link52 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 0, !dbg !14304
  %13 = load %struct.ata_link*, %struct.ata_link** %link52, align 64, !dbg !14304
  store %struct.ata_link* %13, %struct.ata_link** %link, align 8, !dbg !14305
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14306
  %flags53 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 6, !dbg !14306
  %15 = load i64, i64* %flags53, align 8, !dbg !14306
  %and54 = and i64 %15, 2, !dbg !14306
  %tobool55 = icmp ne i64 %and54, 0, !dbg !14306
  %lnot56 = xor i1 %tobool55, true, !dbg !14306
  %lnot58 = xor i1 %lnot56, true, !dbg !14306
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !14306
  %conv60 = sext i32 %lnot.ext59 to i64, !dbg !14306
  %tobool61 = icmp ne i64 %conv60, 0, !dbg !14306
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !14308

if.then62:                                        ; preds = %if.end43
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14309
  call void @ata_sg_clean(%struct.ata_queued_cmd* %16) #12, !dbg !14310
  br label %if.end63, !dbg !14310

if.end63:                                         ; preds = %if.then62, %if.end43
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14311
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %17, i32 0, i32 4, !dbg !14313
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !14314
  %18 = load i8, i8* %protocol, align 8, !dbg !14314
  %call = call zeroext i1 @ata_is_ncq(i8 zeroext %18) #12, !dbg !14315
  br i1 %call, label %if.then64, label %if.else, !dbg !14316

if.then64:                                        ; preds = %if.end63
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14317
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 8, !dbg !14319
  %20 = load i32, i32* %hw_tag, align 4, !dbg !14319
  %shl = shl i32 1, %20, !dbg !14320
  %neg = xor i32 %shl, -1, !dbg !14321
  %21 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14322
  %sactive = getelementptr inbounds %struct.ata_link, %struct.ata_link* %21, i32 0, i32 4, !dbg !14323
  %22 = load i32, i32* %sactive, align 4, !dbg !14324
  %and65 = and i32 %22, %neg, !dbg !14324
  store i32 %and65, i32* %sactive, align 4, !dbg !14324
  %23 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14325
  %sactive66 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %23, i32 0, i32 4, !dbg !14327
  %24 = load i32, i32* %sactive66, align 4, !dbg !14327
  %tobool67 = icmp ne i32 %24, 0, !dbg !14325
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !14328

if.then68:                                        ; preds = %if.then64
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14329
  %nr_active_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 22, !dbg !14330
  %26 = load i32, i32* %nr_active_links, align 16, !dbg !14331
  %dec = add i32 %26, -1, !dbg !14331
  store i32 %dec, i32* %nr_active_links, align 16, !dbg !14331
  br label %if.end69, !dbg !14329

if.end69:                                         ; preds = %if.then68, %if.then64
  br label %if.end72, !dbg !14332

if.else:                                          ; preds = %if.end63
  %27 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14333
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %27, i32 0, i32 3, !dbg !14335
  store i32 -84148995, i32* %active_tag, align 8, !dbg !14336
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14337
  %nr_active_links70 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 22, !dbg !14338
  %29 = load i32, i32* %nr_active_links70, align 16, !dbg !14339
  %dec71 = add i32 %29, -1, !dbg !14339
  store i32 %dec71, i32* %nr_active_links70, align 16, !dbg !14339
  br label %if.end72

if.end72:                                         ; preds = %if.else, %if.end69
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14340
  %flags73 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %30, i32 0, i32 6, !dbg !14340
  %31 = load i64, i64* %flags73, align 8, !dbg !14340
  %and74 = and i64 %31, 32, !dbg !14340
  %tobool75 = icmp ne i64 %and74, 0, !dbg !14340
  br i1 %tobool75, label %land.rhs, label %land.end, !dbg !14340

land.rhs:                                         ; preds = %if.end72
  %32 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14340
  %excl_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 29, !dbg !14340
  %33 = load %struct.ata_link*, %struct.ata_link** %excl_link, align 8, !dbg !14340
  %34 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14340
  %cmp76 = icmp eq %struct.ata_link* %33, %34, !dbg !14340
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end72
  %35 = phi i1 [ false, %if.end72 ], [ %cmp76, %land.rhs ], !dbg !14342
  %lnot78 = xor i1 %35, true, !dbg !14340
  %lnot80 = xor i1 %lnot78, true, !dbg !14340
  %lnot.ext81 = zext i1 %lnot80 to i32, !dbg !14340
  %conv82 = sext i32 %lnot.ext81 to i64, !dbg !14340
  %tobool83 = icmp ne i64 %conv82, 0, !dbg !14340
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !14343

if.then84:                                        ; preds = %land.end
  %36 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14344
  %excl_link85 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %36, i32 0, i32 29, !dbg !14345
  store %struct.ata_link* null, %struct.ata_link** %excl_link85, align 8, !dbg !14346
  br label %if.end86, !dbg !14344

if.end86:                                         ; preds = %if.then84, %land.end
  %37 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14347
  %flags87 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %37, i32 0, i32 6, !dbg !14348
  %38 = load i64, i64* %flags87, align 8, !dbg !14349
  %and88 = and i64 %38, -2, !dbg !14349
  store i64 %and88, i64* %flags87, align 8, !dbg !14349
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14350
  %tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %39, i32 0, i32 7, !dbg !14351
  %40 = load i32, i32* %tag, align 8, !dbg !14351
  %sh_prom = zext i32 %40 to i64, !dbg !14352
  %shl89 = shl i64 1, %sh_prom, !dbg !14352
  %neg90 = xor i64 %shl89, -1, !dbg !14353
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14354
  %qc_active = getelementptr inbounds %struct.ata_port, %struct.ata_port* %41, i32 0, i32 21, !dbg !14355
  %42 = load i64, i64* %qc_active, align 8, !dbg !14356
  %and91 = and i64 %42, %neg90, !dbg !14356
  store i64 %and91, i64* %qc_active, align 8, !dbg !14356
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14357
  %complete_fn = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 22, !dbg !14358
  %44 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %complete_fn, align 8, !dbg !14358
  %45 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14359
  call void %44(%struct.ata_queued_cmd* %45) #12, !dbg !14357
  ret void, !dbg !14360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_sg_clean(%struct.ata_queued_cmd* %qc) #0 !dbg !14361 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %dir = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14362, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14364, metadata !DIExpression()), !dbg !14365
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14366
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !14367
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !14367
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !14365
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !14368, metadata !DIExpression()), !dbg !14369
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14370
  %sg2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 17, !dbg !14371
  %3 = load %struct.scatterlist*, %struct.scatterlist** %sg2, align 8, !dbg !14371
  store %struct.scatterlist* %3, %struct.scatterlist** %sg, align 8, !dbg !14369
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !14372, metadata !DIExpression()), !dbg !14373
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14374
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 11, !dbg !14375
  %5 = load i32, i32* %dma_dir, align 8, !dbg !14375
  store i32 %5, i32* %dir, align 4, !dbg !14373
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14376, metadata !DIExpression()), !dbg !14378
  %6 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14378
  %cmp = icmp eq %struct.scatterlist* %6, null, !dbg !14378
  %lnot = xor i1 %cmp, true, !dbg !14378
  %lnot3 = xor i1 %lnot, true, !dbg !14378
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14378
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !14378
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !14379
  %tobool = icmp ne i32 %7, 0, !dbg !14379
  %lnot4 = xor i1 %tobool, true, !dbg !14379
  %lnot6 = xor i1 %lnot4, true, !dbg !14379
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !14379
  %conv = sext i32 %lnot.ext7 to i64, !dbg !14379
  %tobool8 = icmp ne i64 %conv, 0, !dbg !14379
  br i1 %tobool8, label %if.then, label %if.end, !dbg !14378

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14379

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !14381

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !14383

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !14381

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4420, i32 2307, i64 12) #7, !dbg !14385, !srcloc !14387
  br label %do.end11, !dbg !14385

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 352) #7, !dbg !14388, !srcloc !14390
  br label %do.body12, !dbg !14381

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !14391

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !14381

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !14381

if.end:                                           ; preds = %do.end14, %entry
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !14378
  %tobool15 = icmp ne i32 %8, 0, !dbg !14378
  %lnot16 = xor i1 %tobool15, true, !dbg !14378
  %lnot18 = xor i1 %lnot16, true, !dbg !14378
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !14378
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !14378
  store i64 %conv20, i64* %tmp, align 8, !dbg !14379
  %9 = load i64, i64* %tmp, align 8, !dbg !14378
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14393
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 9, !dbg !14395
  %11 = load i32, i32* %n_elem, align 8, !dbg !14395
  %tobool21 = icmp ne i32 %11, 0, !dbg !14393
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !14396

if.then22:                                        ; preds = %if.end
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14397
  %dev = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 32, !dbg !14397
  %13 = load %struct.device*, %struct.device** %dev, align 64, !dbg !14397
  %14 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14397
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14397
  %orig_n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 10, !dbg !14397
  %16 = load i32, i32* %orig_n_elem, align 4, !dbg !14397
  %17 = load i32, i32* %dir, align 4, !dbg !14397
  call void @dma_unmap_sg_attrs(%struct.device* %13, %struct.scatterlist* %14, i32 %16, i32 %17, i64 0) #12, !dbg !14397
  br label %if.end23, !dbg !14397

if.end23:                                         ; preds = %if.then22, %if.end
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14398
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 6, !dbg !14399
  %19 = load i64, i64* %flags, align 8, !dbg !14400
  %and = and i64 %19, -3, !dbg !14400
  store i64 %and, i64* %flags, align 8, !dbg !14400
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14401
  %sg24 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %20, i32 0, i32 17, !dbg !14402
  store %struct.scatterlist* null, %struct.scatterlist** %sg24, align 8, !dbg !14403
  ret void, !dbg !14404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ledtrig_disk_activity(i1 zeroext %write) #0 !dbg !14405 {
entry:
  %write.addr = alloca i8, align 1
  %frombool = zext i1 %write to i8
  store i8 %frombool, i8* %write.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %write.addr, metadata !14409, metadata !DIExpression()), !dbg !14410
  ret void, !dbg !14411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fill_result_tf(%struct.ata_queued_cmd* %qc) #0 !dbg !14412 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14413, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14415, metadata !DIExpression()), !dbg !14416
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14417
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !14418
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !14418
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !14416
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14419
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 4, !dbg !14420
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !14421
  %3 = load i64, i64* %flags, align 8, !dbg !14421
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14422
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 21, !dbg !14423
  %flags2 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf, i32 0, i32 0, !dbg !14424
  store i64 %3, i64* %flags2, align 8, !dbg !14425
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14426
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 1, !dbg !14427
  %6 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !14427
  %qc_fill_rtf = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %6, i32 0, i32 4, !dbg !14428
  %7 = load i1 (%struct.ata_queued_cmd*)*, i1 (%struct.ata_queued_cmd*)** %qc_fill_rtf, align 8, !dbg !14428
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14429
  %call = call zeroext i1 %7(%struct.ata_queued_cmd* %8) #12, !dbg !14426
  ret void, !dbg !14430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_ata_qc_complete_internal(%struct.ata_queued_cmd* %qc) #0 !dbg !14431 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14433, metadata !DIExpression()), !dbg !14434
  ret void, !dbg !14434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_ata_qc_complete_failed(%struct.ata_queued_cmd* %qc) #0 !dbg !14435 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14436, metadata !DIExpression()), !dbg !14437
  ret void, !dbg !14437
}

; Function Attrs: noredzone
declare dso_local void @ata_qc_schedule_eh(%struct.ata_queued_cmd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_ata_qc_complete_done(%struct.ata_queued_cmd* %qc) #0 !dbg !14438 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14439, metadata !DIExpression()), !dbg !14440
  ret void, !dbg !14440
}

; Function Attrs: noredzone
declare dso_local void @ata_port_schedule_eh(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_verify_xfer(%struct.ata_queued_cmd* %qc) #0 !dbg !14441 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %dev = alloca %struct.ata_device*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14442, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !14444, metadata !DIExpression()), !dbg !14445
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14446
  %dev1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !14447
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !14447
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !14445
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14448
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 4, !dbg !14450
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !14451
  %3 = load i8, i8* %protocol, align 8, !dbg !14451
  %call = call zeroext i1 @ata_is_data(i8 zeroext %3) #12, !dbg !14452
  br i1 %call, label %if.end, label %if.then, !dbg !14453

if.then:                                          ; preds = %entry
  br label %return, !dbg !14454

if.end:                                           ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14455
  %mwdma_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 21, !dbg !14457
  %5 = load i64, i64* %mwdma_mask, align 16, !dbg !14457
  %tobool = icmp ne i64 %5, 0, !dbg !14455
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !14458

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14459
  %udma_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 22, !dbg !14460
  %7 = load i64, i64* %udma_mask, align 8, !dbg !14460
  %tobool2 = icmp ne i64 %7, 0, !dbg !14459
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !14461

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14462
  %tf3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 4, !dbg !14463
  %protocol4 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf3, i32 0, i32 1, !dbg !14464
  %9 = load i8, i8* %protocol4, align 8, !dbg !14464
  %call5 = call zeroext i1 @ata_is_pio(i8 zeroext %9) #12, !dbg !14465
  br i1 %call5, label %if.then6, label %if.end7, !dbg !14466

if.then6:                                         ; preds = %land.lhs.true
  br label %return, !dbg !14467

if.end7:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14468
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 3, !dbg !14469
  %11 = load i64, i64* %flags, align 16, !dbg !14470
  %and = and i64 %11, -65537, !dbg !14470
  store i64 %and, i64* %flags, align 16, !dbg !14470
  br label %return, !dbg !14471

return:                                           ; preds = %if.end7, %if.then6, %if.then
  ret void, !dbg !14471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_qc_get_active(%struct.ata_port* %ap) #0 !dbg !14472 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc_active = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14475, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.declare(metadata i64* %qc_active, metadata !14477, metadata !DIExpression()), !dbg !14478
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14479
  %qc_active1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 21, !dbg !14480
  %1 = load i64, i64* %qc_active1, align 8, !dbg !14480
  store i64 %1, i64* %qc_active, align 8, !dbg !14478
  %2 = load i64, i64* %qc_active, align 8, !dbg !14481
  %and = and i64 %2, 4294967296, !dbg !14483
  %tobool = icmp ne i64 %and, 0, !dbg !14483
  br i1 %tobool, label %if.then, label %if.end, !dbg !14484

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %qc_active, align 8, !dbg !14485
  %or = or i64 %3, 1, !dbg !14485
  store i64 %or, i64* %qc_active, align 8, !dbg !14485
  %4 = load i64, i64* %qc_active, align 8, !dbg !14487
  %and2 = and i64 %4, -4294967297, !dbg !14487
  store i64 %and2, i64* %qc_active, align 8, !dbg !14487
  br label %if.end, !dbg !14488

if.end:                                           ; preds = %if.then, %entry
  %5 = load i64, i64* %qc_active, align 8, !dbg !14489
  ret i64 %5, !dbg !14490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_data(i8 zeroext %prot) #0 !dbg !14491 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !14492, metadata !DIExpression()), !dbg !14493
  %0 = load i8, i8* %prot.addr, align 1, !dbg !14494
  %conv = zext i8 %0 to i32, !dbg !14494
  %and = and i32 %conv, 3, !dbg !14495
  %tobool = icmp ne i32 %and, 0, !dbg !14494
  ret i1 %tobool, !dbg !14496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_dma(i8 zeroext %prot) #0 !dbg !14497 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !14498, metadata !DIExpression()), !dbg !14499
  %0 = load i8, i8* %prot.addr, align 1, !dbg !14500
  %conv = zext i8 %0 to i32, !dbg !14500
  %and = and i32 %conv, 2, !dbg !14501
  %tobool = icmp ne i32 %and, 0, !dbg !14500
  ret i1 %tobool, !dbg !14502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_pio(i8 zeroext %prot) #0 !dbg !14503 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !14504, metadata !DIExpression()), !dbg !14505
  %0 = load i8, i8* %prot.addr, align 1, !dbg !14506
  %conv = zext i8 %0 to i32, !dbg !14506
  %and = and i32 %conv, 1, !dbg !14507
  %tobool = icmp ne i32 %and, 0, !dbg !14506
  ret i1 %tobool, !dbg !14508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_sg_setup(%struct.ata_queued_cmd* %qc) #0 !dbg !14509 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %n_elem = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14510, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14512, metadata !DIExpression()), !dbg !14513
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14514
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !14515
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !14515
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !14513
  call void @llvm.dbg.declare(metadata i32* %n_elem, metadata !14516, metadata !DIExpression()), !dbg !14517
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14518
  %dev = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 32, !dbg !14518
  %3 = load %struct.device*, %struct.device** %dev, align 64, !dbg !14518
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14518
  %sg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 17, !dbg !14518
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14518
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14518
  %n_elem2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 9, !dbg !14518
  %7 = load i32, i32* %n_elem2, align 8, !dbg !14518
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14518
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 11, !dbg !14518
  %9 = load i32, i32* %dma_dir, align 8, !dbg !14518
  %call = call i32 @dma_map_sg_attrs(%struct.device* %3, %struct.scatterlist* %5, i32 %7, i32 %9, i64 0) #12, !dbg !14518
  store i32 %call, i32* %n_elem, align 4, !dbg !14519
  %10 = load i32, i32* %n_elem, align 4, !dbg !14520
  %cmp = icmp ult i32 %10, 1, !dbg !14522
  br i1 %cmp, label %if.then, label %if.end, !dbg !14523

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14524
  br label %return, !dbg !14524

if.end:                                           ; preds = %entry
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14525
  %n_elem3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 9, !dbg !14526
  %12 = load i32, i32* %n_elem3, align 8, !dbg !14526
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14527
  %orig_n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 10, !dbg !14528
  store i32 %12, i32* %orig_n_elem, align 4, !dbg !14529
  %14 = load i32, i32* %n_elem, align 4, !dbg !14530
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14531
  %n_elem4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 9, !dbg !14532
  store i32 %14, i32* %n_elem4, align 8, !dbg !14533
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14534
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 6, !dbg !14535
  %17 = load i64, i64* %flags, align 8, !dbg !14536
  %or = or i64 %17, 2, !dbg !14536
  store i64 %or, i64* %flags, align 8, !dbg !14536
  store i32 0, i32* %retval, align 4, !dbg !14537
  br label %return, !dbg !14537

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !14538
  ret i32 %18, !dbg !14538
}

; Function Attrs: noredzone
declare dso_local void @ata_ehi_push_desc(%struct.ata_eh_info*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_link_abort(%struct.ata_link*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_ata_qc_issue(%struct.ata_queued_cmd* %qc) #0 !dbg !14539 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14540, metadata !DIExpression()), !dbg !14541
  ret void, !dbg !14541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @ata_phys_link_online(%struct.ata_link* %link) #0 !dbg !14542 {
entry:
  %retval = alloca i1, align 1
  %link.addr = alloca %struct.ata_link*, align 8
  %sstatus = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !14543, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.declare(metadata i32* %sstatus, metadata !14545, metadata !DIExpression()), !dbg !14546
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14547
  %call = call i32 @sata_scr_read(%struct.ata_link* %0, i32 0, i32* %sstatus) #12, !dbg !14549
  %cmp = icmp eq i32 %call, 0, !dbg !14550
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14551

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %sstatus, align 4, !dbg !14552
  %call1 = call zeroext i1 @ata_sstatus_online(i32 %1) #12, !dbg !14553
  br i1 %call1, label %if.then, label %if.end, !dbg !14554

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !14555
  br label %return, !dbg !14555

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !14556
  br label %return, !dbg !14556

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, i1* %retval, align 1, !dbg !14557
  ret i1 %2, !dbg !14557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sas_port_suspend(%struct.ata_port* %ap) #0 !dbg !14558 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14559, metadata !DIExpression()), !dbg !14560
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14561
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !14562
  store i32 2, i32* %event, align 4, !dbg !14562
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !14563
  %1 = load i32, i32* %coerce.dive, align 4, !dbg !14563
  call void @ata_port_suspend_async(%struct.ata_port* %0, i32 %1) #12, !dbg !14563
  ret void, !dbg !14564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_port_suspend_async(%struct.ata_port* %ap, i32 %mesg.coerce) #0 !dbg !14565 {
entry:
  %mesg = alloca %struct.pm_message, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14568, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !14570, metadata !DIExpression()), !dbg !14571
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14572
  %coerce.dive1 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0, !dbg !14573
  %1 = load i32, i32* %coerce.dive1, align 4, !dbg !14573
  call void @ata_port_request_pm(%struct.ata_port* %0, i32 %1, i32 0, i32 28, i1 zeroext true) #12, !dbg !14573
  ret void, !dbg !14574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sas_port_resume(%struct.ata_port* %ap) #0 !dbg !14575 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14576, metadata !DIExpression()), !dbg !14577
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14578
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !14579
  store i32 16, i32* %event, align 4, !dbg !14579
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !14580
  %1 = load i32, i32* %coerce.dive, align 4, !dbg !14580
  call void @ata_port_resume_async(%struct.ata_port* %0, i32 %1) #12, !dbg !14580
  ret void, !dbg !14581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_port_resume_async(%struct.ata_port* %ap, i32 %mesg.coerce) #0 !dbg !14582 {
entry:
  %mesg = alloca %struct.pm_message, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14583, metadata !DIExpression()), !dbg !14584
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !14585, metadata !DIExpression()), !dbg !14586
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14587
  %coerce.dive1 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0, !dbg !14588
  %1 = load i32, i32* %coerce.dive1, align 4, !dbg !14588
  call void @ata_port_request_pm(%struct.ata_port* %0, i32 %1, i32 6, i32 12, i1 zeroext true) #12, !dbg !14588
  ret void, !dbg !14589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_host_suspend(%struct.ata_host* %host, i32 %mesg.coerce) #0 !dbg !14590 {
entry:
  %mesg = alloca %struct.pm_message, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !14593, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !14595, metadata !DIExpression()), !dbg !14596
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !14597
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !14598
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14598
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !14599
  %power_state = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 0, !dbg !14600
  %2 = bitcast %struct.pm_message* %power_state to i8*, !dbg !14601
  %3 = bitcast %struct.pm_message* %mesg to i8*, !dbg !14601
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 4 %3, i64 4, i1 false), !dbg !14601
  ret i32 0, !dbg !14602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_host_resume(%struct.ata_host* %host) #0 !dbg !14603 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !14604, metadata !DIExpression()), !dbg !14605
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !14606
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !14607
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14607
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !14608
  %power_state = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 0, !dbg !14609
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !14610
  store i32 0, i32* %event, align 4, !dbg !14610
  %2 = bitcast %struct.pm_message* %power_state to i8*, !dbg !14610
  %3 = bitcast %struct.pm_message* %.compoundliteral to i8*, !dbg !14610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 4 %3, i64 4, i1 false), !dbg !14610
  ret void, !dbg !14611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_dev_init(%struct.ata_device* %dev) #0 !dbg !14612 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !8979, metadata !DIExpression()), !dbg !14613
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !8987, metadata !DIExpression()), !dbg !14615
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8966, metadata !DIExpression()), !dbg !14616
  %dev.addr = alloca %struct.ata_device*, align 8
  %link = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !14625, metadata !DIExpression()), !dbg !14626
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14627
  %call = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %0) #12, !dbg !14628
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !14626
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14629, metadata !DIExpression()), !dbg !14630
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14631
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !14632
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !14632
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !14630
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14633, metadata !DIExpression()), !dbg !14634
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14635
  %hw_sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 7, !dbg !14636
  %4 = load i32, i32* %hw_sata_spd_limit, align 8, !dbg !14636
  %5 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14637
  %sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 8, !dbg !14638
  store i32 %4, i32* %sata_spd_limit, align 4, !dbg !14639
  %6 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14640
  %sata_spd = getelementptr inbounds %struct.ata_link, %struct.ata_link* %6, i32 0, i32 9, !dbg !14641
  store i32 0, i32* %sata_spd, align 32, !dbg !14642
  br label %do.body, !dbg !14643

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !14644

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14645, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14648, metadata !DIExpression()), !dbg !14647
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14647
  %conv = zext i1 %cmp to i32, !dbg !14647
  store i32 1, i32* %tmp, align 4, !dbg !14647
  %7 = load i32, i32* %tmp, align 4, !dbg !14647
  br label %do.body3, !dbg !14649

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14650

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !14651

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !14653, metadata !DIExpression()), !dbg !14656
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !14657, metadata !DIExpression()), !dbg !14656
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !14656
  %conv9 = zext i1 %cmp8 to i32, !dbg !14656
  store i32 1, i32* %tmp10, align 4, !dbg !14656
  %8 = load i32, i32* %tmp10, align 4, !dbg !14656
  %call11 = call i64 @arch_local_irq_save() #12, !dbg !14658
  store i64 %call11, i64* %flags, align 8, !dbg !14658
  br label %do.end, !dbg !14658

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !14651

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !14650

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14659, !srcloc !14660
  br label %do.body14, !dbg !14659

do.body14:                                        ; preds = %do.body13
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14661
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 2, !dbg !14661
  %10 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !14661
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14662
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !14663
  %rlock.i = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !14663
  br label %do.end16, !dbg !14661

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !14659

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14650

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14649

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !14644

do.end20:                                         ; preds = %do.end19
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14664
  %flags21 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 3, !dbg !14665
  %14 = load i64, i64* %flags21, align 16, !dbg !14666
  %and = and i64 %14, -16777216, !dbg !14666
  store i64 %and, i64* %flags21, align 16, !dbg !14666
  %15 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14667
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %15, i32 0, i32 2, !dbg !14668
  store i32 0, i32* %horkage, align 4, !dbg !14669
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14670
  %lock22 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 2, !dbg !14671
  %17 = load %struct.spinlock*, %struct.spinlock** %lock22, align 16, !dbg !14671
  %18 = load i64, i64* %flags, align 8, !dbg !14672
  store %struct.spinlock* %17, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !14673
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !14673
  store i32 1, i32* %tmp.i, align 4, !dbg !14673
  %19 = load i32, i32* %tmp.i, align 4, !dbg !14673
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !14674
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !14674
  store i32 1, i32* %tmp8.i, align 4, !dbg !14674
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !14674
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !14675
  call void @arch_local_irq_restore(i64 %21) #14, !dbg !14675
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14676, !srcloc !9110
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !14677
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !14677
  %rlock.i24 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !14677
  %24 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14678
  %25 = bitcast %struct.ata_device* %24 to i8*, !dbg !14679
  %add.ptr = getelementptr i8, i8* %25, i64 752, !dbg !14680
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 0, i64 768, i1 false), !dbg !14681
  %26 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14682
  %pio_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 20, !dbg !14683
  store i64 4294967295, i64* %pio_mask, align 8, !dbg !14684
  %27 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14685
  %mwdma_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %27, i32 0, i32 21, !dbg !14686
  store i64 4294967295, i64* %mwdma_mask, align 16, !dbg !14687
  %28 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14688
  %udma_mask = getelementptr inbounds %struct.ata_device, %struct.ata_device* %28, i32 0, i32 22, !dbg !14689
  store i64 4294967295, i64* %udma_mask, align 8, !dbg !14690
  ret void, !dbg !14691
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_link_init(%struct.ata_port* %ap, %struct.ata_link* %link, i32 %pmp) #0 !dbg !14692 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %link.addr = alloca %struct.ata_link*, align 8
  %pmp.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dev = alloca %struct.ata_device*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14695, metadata !DIExpression()), !dbg !14696
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !14697, metadata !DIExpression()), !dbg !14698
  store i32 %pmp, i32* %pmp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pmp.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14701, metadata !DIExpression()), !dbg !14702
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14703
  %1 = bitcast %struct.ata_link* %0 to i8*, !dbg !14704
  %add.ptr = getelementptr i8, i8* %1, i64 712, !dbg !14705
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 0, i64 376, i1 false), !dbg !14706
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14707
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14708
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !14709
  store %struct.ata_port* %2, %struct.ata_port** %ap1, align 64, !dbg !14710
  %4 = load i32, i32* %pmp.addr, align 4, !dbg !14711
  %5 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14712
  %pmp2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 1, !dbg !14713
  store i32 %4, i32* %pmp2, align 8, !dbg !14714
  %6 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14715
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %6, i32 0, i32 3, !dbg !14716
  store i32 -84148995, i32* %active_tag, align 8, !dbg !14717
  %7 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14718
  %hw_sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 7, !dbg !14719
  store i32 -1, i32* %hw_sata_spd_limit, align 8, !dbg !14720
  store i32 0, i32* %i, align 4, !dbg !14721
  br label %for.cond, !dbg !14723

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !14724
  %cmp = icmp slt i32 %8, 2, !dbg !14726
  br i1 %cmp, label %for.body, label %for.end, !dbg !14727

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !14728, metadata !DIExpression()), !dbg !14730
  %9 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14731
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %9, i32 0, i32 14, !dbg !14732
  %10 = load i32, i32* %i, align 4, !dbg !14733
  %idxprom = sext i32 %10 to i64, !dbg !14731
  %arrayidx = getelementptr [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 %idxprom, !dbg !14731
  store %struct.ata_device* %arrayidx, %struct.ata_device** %dev, align 8, !dbg !14730
  %11 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14734
  %12 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14735
  %link3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 0, !dbg !14736
  store %struct.ata_link* %11, %struct.ata_link** %link3, align 64, !dbg !14737
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14738
  %14 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14739
  %device4 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %14, i32 0, i32 14, !dbg !14740
  %arraydecay = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device4, i64 0, i64 0, !dbg !14739
  %sub.ptr.lhs.cast = ptrtoint %struct.ata_device* %13 to i64, !dbg !14741
  %sub.ptr.rhs.cast = ptrtoint %struct.ata_device* %arraydecay to i64, !dbg !14741
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14741
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2048, !dbg !14741
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !14738
  %15 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14742
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %15, i32 0, i32 1, !dbg !14743
  store i32 %conv, i32* %devno, align 8, !dbg !14744
  %16 = load i32, i32* @ata_acpi_gtf_filter, align 4, !dbg !14745
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14746
  %gtf_filter = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 7, !dbg !14747
  store i32 %16, i32* %gtf_filter, align 16, !dbg !14748
  %18 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14749
  call void @ata_dev_init(%struct.ata_device* %18) #12, !dbg !14750
  br label %for.inc, !dbg !14751

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !14752
  %inc = add i32 %19, 1, !dbg !14752
  store i32 %inc, i32* %i, align 4, !dbg !14752
  br label %for.cond, !dbg !14753, !llvm.loop !14754

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @sata_link_init_spd(%struct.ata_link* %link) #0 !dbg !14757 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %spd = alloca i8, align 1
  %rc = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !14758, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.declare(metadata i8* %spd, metadata !14760, metadata !DIExpression()), !dbg !14761
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !14762, metadata !DIExpression()), !dbg !14763
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14764
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14765
  %saved_scontrol = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 6, !dbg !14766
  %call = call i32 @sata_scr_read(%struct.ata_link* %0, i32 2, i32* %saved_scontrol) #12, !dbg !14767
  store i32 %call, i32* %rc, align 4, !dbg !14768
  %2 = load i32, i32* %rc, align 4, !dbg !14769
  %tobool = icmp ne i32 %2, 0, !dbg !14769
  br i1 %tobool, label %if.then, label %if.end, !dbg !14771

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %rc, align 4, !dbg !14772
  store i32 %3, i32* %retval, align 4, !dbg !14773
  br label %return, !dbg !14773

if.end:                                           ; preds = %entry
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14774
  %saved_scontrol1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 6, !dbg !14775
  %5 = load i32, i32* %saved_scontrol1, align 4, !dbg !14775
  %shr = lshr i32 %5, 4, !dbg !14776
  %and = and i32 %shr, 15, !dbg !14777
  %conv = trunc i32 %and to i8, !dbg !14778
  store i8 %conv, i8* %spd, align 1, !dbg !14779
  %6 = load i8, i8* %spd, align 1, !dbg !14780
  %tobool2 = icmp ne i8 %6, 0, !dbg !14780
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !14782

if.then3:                                         ; preds = %if.end
  %7 = load i8, i8* %spd, align 1, !dbg !14783
  %conv4 = zext i8 %7 to i32, !dbg !14783
  %shl = shl i32 1, %conv4, !dbg !14784
  %sub = sub i32 %shl, 1, !dbg !14785
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14786
  %hw_sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %8, i32 0, i32 7, !dbg !14787
  %9 = load i32, i32* %hw_sata_spd_limit, align 8, !dbg !14788
  %and5 = and i32 %9, %sub, !dbg !14788
  store i32 %and5, i32* %hw_sata_spd_limit, align 8, !dbg !14788
  br label %if.end6, !dbg !14786

if.end6:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14789
  call void @ata_force_link_limits(%struct.ata_link* %10) #12, !dbg !14790
  %11 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14791
  %hw_sata_spd_limit7 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %11, i32 0, i32 7, !dbg !14792
  %12 = load i32, i32* %hw_sata_spd_limit7, align 8, !dbg !14792
  %13 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14793
  %sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %13, i32 0, i32 8, !dbg !14794
  store i32 %12, i32* %sata_spd_limit, align 4, !dbg !14795
  store i32 0, i32* %retval, align 4, !dbg !14796
  br label %return, !dbg !14796

return:                                           ; preds = %if.end6, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !14797
  ret i32 %14, !dbg !14797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_force_link_limits(%struct.ata_link* %link) #0 !dbg !14798 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %did_spd = alloca i8, align 1
  %linkno = alloca i32, align 4
  %i = alloca i32, align 4
  %fe = alloca %struct.ata_force_ent*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !14799, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.declare(metadata i8* %did_spd, metadata !14801, metadata !DIExpression()), !dbg !14802
  store i8 0, i8* %did_spd, align 1, !dbg !14802
  call void @llvm.dbg.declare(metadata i32* %linkno, metadata !14803, metadata !DIExpression()), !dbg !14804
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14805
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 1, !dbg !14806
  %1 = load i32, i32* %pmp, align 8, !dbg !14806
  store i32 %1, i32* %linkno, align 4, !dbg !14804
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14807, metadata !DIExpression()), !dbg !14808
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14809
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %2) #12, !dbg !14811
  br i1 %call, label %if.then, label %if.end, !dbg !14812

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %linkno, align 4, !dbg !14813
  %add = add i32 %3, 15, !dbg !14813
  store i32 %add, i32* %linkno, align 4, !dbg !14813
  br label %if.end, !dbg !14814

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* @ata_force_tbl_size, align 4, !dbg !14815
  %sub = sub i32 %4, 1, !dbg !14817
  store i32 %sub, i32* %i, align 4, !dbg !14818
  br label %for.cond, !dbg !14819

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !14820
  %cmp = icmp sge i32 %5, 0, !dbg !14822
  br i1 %cmp, label %for.body, label %for.end, !dbg !14823

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_force_ent** %fe, metadata !14824, metadata !DIExpression()), !dbg !14826
  %6 = load %struct.ata_force_ent*, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !14827
  %7 = load i32, i32* %i, align 4, !dbg !14828
  %idxprom = sext i32 %7 to i64, !dbg !14827
  %arrayidx = getelementptr %struct.ata_force_ent, %struct.ata_force_ent* %6, i64 %idxprom, !dbg !14827
  store %struct.ata_force_ent* %arrayidx, %struct.ata_force_ent** %fe, align 8, !dbg !14826
  %8 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14829
  %port = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %8, i32 0, i32 0, !dbg !14831
  %9 = load i32, i32* %port, align 8, !dbg !14831
  %cmp1 = icmp ne i32 %9, -1, !dbg !14832
  br i1 %cmp1, label %land.lhs.true, label %if.end5, !dbg !14833

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14834
  %port2 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %10, i32 0, i32 0, !dbg !14835
  %11 = load i32, i32* %port2, align 8, !dbg !14835
  %12 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14836
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %12, i32 0, i32 0, !dbg !14837
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !14837
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 5, !dbg !14838
  %14 = load i32, i32* %print_id, align 4, !dbg !14838
  %cmp3 = icmp ne i32 %11, %14, !dbg !14839
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !14840

if.then4:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !14841

if.end5:                                          ; preds = %land.lhs.true, %for.body
  %15 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14842
  %device = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %15, i32 0, i32 1, !dbg !14844
  %16 = load i32, i32* %device, align 4, !dbg !14844
  %cmp6 = icmp ne i32 %16, -1, !dbg !14845
  br i1 %cmp6, label %land.lhs.true7, label %if.end11, !dbg !14846

land.lhs.true7:                                   ; preds = %if.end5
  %17 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14847
  %device8 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %17, i32 0, i32 1, !dbg !14848
  %18 = load i32, i32* %device8, align 4, !dbg !14848
  %19 = load i32, i32* %linkno, align 4, !dbg !14849
  %cmp9 = icmp ne i32 %18, %19, !dbg !14850
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !14851

if.then10:                                        ; preds = %land.lhs.true7
  br label %for.inc, !dbg !14852

if.end11:                                         ; preds = %land.lhs.true7, %if.end5
  %20 = load i8, i8* %did_spd, align 1, !dbg !14853
  %tobool = trunc i8 %20 to i1, !dbg !14853
  br i1 %tobool, label %if.end20, label %land.lhs.true12, !dbg !14855

land.lhs.true12:                                  ; preds = %if.end11
  %21 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14856
  %param = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %21, i32 0, i32 2, !dbg !14857
  %spd_limit = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param, i32 0, i32 2, !dbg !14858
  %22 = load i8, i8* %spd_limit, align 1, !dbg !14858
  %conv = zext i8 %22 to i32, !dbg !14856
  %tobool13 = icmp ne i32 %conv, 0, !dbg !14856
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !14859

if.then14:                                        ; preds = %land.lhs.true12
  %23 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14860
  %param15 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %23, i32 0, i32 2, !dbg !14862
  %spd_limit16 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param15, i32 0, i32 2, !dbg !14863
  %24 = load i8, i8* %spd_limit16, align 1, !dbg !14863
  %conv17 = zext i8 %24 to i32, !dbg !14860
  %shl = shl i32 1, %conv17, !dbg !14864
  %sub18 = sub i32 %shl, 1, !dbg !14865
  %25 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14866
  %hw_sata_spd_limit = getelementptr inbounds %struct.ata_link, %struct.ata_link* %25, i32 0, i32 7, !dbg !14867
  store i32 %sub18, i32* %hw_sata_spd_limit, align 8, !dbg !14868
  %26 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14869
  %27 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14869
  %param19 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %27, i32 0, i32 2, !dbg !14869
  %name = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param19, i32 0, i32 0, !dbg !14869
  %28 = load i8*, i8** %name, align 8, !dbg !14869
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.285, i64 0, i64 0), i8* %28) #12, !dbg !14869
  store i8 1, i8* %did_spd, align 1, !dbg !14870
  br label %if.end20, !dbg !14871

if.end20:                                         ; preds = %if.then14, %land.lhs.true12, %if.end11
  %29 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14872
  %param21 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %29, i32 0, i32 2, !dbg !14874
  %lflags = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param21, i32 0, i32 6, !dbg !14875
  %30 = load i16, i16* %lflags, align 8, !dbg !14875
  %tobool22 = icmp ne i16 %30, 0, !dbg !14872
  br i1 %tobool22, label %if.then23, label %if.end31, !dbg !14876

if.then23:                                        ; preds = %if.end20
  %31 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14877
  %param24 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %31, i32 0, i32 2, !dbg !14879
  %lflags25 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param24, i32 0, i32 6, !dbg !14880
  %32 = load i16, i16* %lflags25, align 8, !dbg !14880
  %conv26 = zext i16 %32 to i32, !dbg !14877
  %33 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14881
  %flags = getelementptr inbounds %struct.ata_link, %struct.ata_link* %33, i32 0, i32 5, !dbg !14882
  %34 = load i32, i32* %flags, align 16, !dbg !14883
  %or = or i32 %34, %conv26, !dbg !14883
  store i32 %or, i32* %flags, align 16, !dbg !14883
  %35 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14884
  %36 = load %struct.ata_force_ent*, %struct.ata_force_ent** %fe, align 8, !dbg !14884
  %param27 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %36, i32 0, i32 2, !dbg !14884
  %lflags28 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %param27, i32 0, i32 6, !dbg !14884
  %37 = load i16, i16* %lflags28, align 8, !dbg !14884
  %conv29 = zext i16 %37 to i32, !dbg !14884
  %38 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !14884
  %flags30 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %38, i32 0, i32 5, !dbg !14884
  %39 = load i32, i32* %flags30, align 16, !dbg !14884
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.286, i64 0, i64 0), i32 %conv29, i32 %39) #12, !dbg !14884
  br label %if.end31, !dbg !14885

if.end31:                                         ; preds = %if.then23, %if.end20
  br label %for.inc, !dbg !14886

for.inc:                                          ; preds = %if.end31, %if.then10, %if.then4
  %40 = load i32, i32* %i, align 4, !dbg !14887
  %dec = add i32 %40, -1, !dbg !14887
  store i32 %dec, i32* %i, align 4, !dbg !14887
  br label %for.cond, !dbg !14888, !llvm.loop !14889

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_port* @ata_port_alloc(%struct.ata_host* %host) #0 !dbg !7115 {
entry:
  %retval = alloca %struct.ata_port*, align 8
  %host.addr = alloca %struct.ata_host*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral19 = alloca %struct.atomic64_t, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !14892, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !14894, metadata !DIExpression()), !dbg !14895
  %call = call i8* @kzalloc(i64 15104, i32 3264) #12, !dbg !14896
  %0 = bitcast i8* %call to %struct.ata_port*, !dbg !14896
  store %struct.ata_port* %0, %struct.ata_port** %ap, align 8, !dbg !14897
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14898
  %tobool = icmp ne %struct.ata_port* %1, null, !dbg !14898
  br i1 %tobool, label %if.end, label %if.then, !dbg !14900

if.then:                                          ; preds = %entry
  store %struct.ata_port* null, %struct.ata_port** %retval, align 8, !dbg !14901
  br label %return, !dbg !14901

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14902
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 4, !dbg !14903
  %3 = load i32, i32* %pflags, align 32, !dbg !14904
  %or = or i32 %3, 132, !dbg !14904
  store i32 %or, i32* %pflags, align 32, !dbg !14904
  %4 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !14905
  %lock = getelementptr inbounds %struct.ata_host, %struct.ata_host* %4, i32 0, i32 0, !dbg !14906
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14907
  %lock1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 2, !dbg !14908
  store %struct.spinlock* %lock, %struct.spinlock** %lock1, align 16, !dbg !14909
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14910
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 5, !dbg !14911
  store i32 -1, i32* %print_id, align 4, !dbg !14912
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14913
  %local_port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 6, !dbg !14914
  store i32 -1, i32* %local_port_no, align 8, !dbg !14915
  %8 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !14916
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14917
  %host2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 31, !dbg !14918
  store %struct.ata_host* %8, %struct.ata_host** %host2, align 8, !dbg !14919
  %10 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !14920
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 1, !dbg !14921
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14921
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14922
  %dev3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 32, !dbg !14923
  store %struct.device* %11, %struct.device** %dev3, align 64, !dbg !14924
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14925
  %msg_enable = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 38, !dbg !14926
  store i32 137, i32* %msg_enable, align 4, !dbg !14927
  br label %do.body, !dbg !14928

do.body:                                          ; preds = %if.end
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14929
  %scsi_scan_mutex = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 34, !dbg !14929
  call void @__mutex_init(%struct.mutex* %scsi_scan_mutex, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0), %struct.lock_class_key* @ata_port_alloc.__key) #12, !dbg !14929
  br label %do.end, !dbg !14929

do.end:                                           ; preds = %do.body
  br label %do.body4, !dbg !14931

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !14932

do.body5:                                         ; preds = %do.body4
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14934
  %hotplug_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 35, !dbg !14934
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hotplug_task, i32 0, i32 0, !dbg !14934
  call void @__init_work(%struct.work_struct* %work, i32 0) #12, !dbg !14934
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14934
  %hotplug_task6 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 35, !dbg !14934
  %work7 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hotplug_task6, i32 0, i32 0, !dbg !14934
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work7, i32 0, i32 0, !dbg !14934
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !14934
  store i64 68719476704, i64* %counter, align 8, !dbg !14934
  %17 = bitcast %struct.atomic64_t* %data to i8*, !dbg !14934
  %18 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !14934
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 8, i1 false), !dbg !14934
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14934
  %hotplug_task8 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 35, !dbg !14934
  %work9 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hotplug_task8, i32 0, i32 0, !dbg !14934
  %entry10 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work9, i32 0, i32 1, !dbg !14934
  call void @INIT_LIST_HEAD(%struct.list_head* %entry10) #12, !dbg !14934
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14934
  %hotplug_task11 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 35, !dbg !14934
  %work12 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hotplug_task11, i32 0, i32 0, !dbg !14934
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work12, i32 0, i32 2, !dbg !14934
  store void (%struct.work_struct*)* @ata_scsi_hotplug, void (%struct.work_struct*)** %func, align 8, !dbg !14934
  br label %do.end13, !dbg !14934

do.end13:                                         ; preds = %do.body5
  %21 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14932
  %hotplug_task14 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 35, !dbg !14932
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %hotplug_task14, i32 0, i32 1, !dbg !14932
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #12, !dbg !14932
  br label %do.end15, !dbg !14932

do.end15:                                         ; preds = %do.end13
  br label %do.body16, !dbg !14936

do.body16:                                        ; preds = %do.end15
  %22 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14937
  %scsi_rescan_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %22, i32 0, i32 36, !dbg !14937
  call void @__init_work(%struct.work_struct* %scsi_rescan_task, i32 0) #12, !dbg !14937
  %23 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14937
  %scsi_rescan_task17 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %23, i32 0, i32 36, !dbg !14937
  %data18 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %scsi_rescan_task17, i32 0, i32 0, !dbg !14937
  %counter20 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral19, i32 0, i32 0, !dbg !14937
  store i64 68719476704, i64* %counter20, align 8, !dbg !14937
  %24 = bitcast %struct.atomic64_t* %data18 to i8*, !dbg !14937
  %25 = bitcast %struct.atomic64_t* %.compoundliteral19 to i8*, !dbg !14937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %24, i8* align 8 %25, i64 8, i1 false), !dbg !14937
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14937
  %scsi_rescan_task21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 36, !dbg !14937
  %entry22 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %scsi_rescan_task21, i32 0, i32 1, !dbg !14937
  call void @INIT_LIST_HEAD(%struct.list_head* %entry22) #12, !dbg !14937
  %27 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14937
  %scsi_rescan_task23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %27, i32 0, i32 36, !dbg !14937
  %func24 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %scsi_rescan_task23, i32 0, i32 2, !dbg !14937
  store void (%struct.work_struct*)* @ata_scsi_dev_rescan, void (%struct.work_struct*)** %func24, align 8, !dbg !14937
  br label %do.end25, !dbg !14937

do.end25:                                         ; preds = %do.body16
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14939
  %eh_done_q = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 39, !dbg !14940
  call void @INIT_LIST_HEAD(%struct.list_head* %eh_done_q) #12, !dbg !14941
  br label %do.body26, !dbg !14942

do.body26:                                        ; preds = %do.end25
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14943
  %eh_wait_q = getelementptr inbounds %struct.ata_port, %struct.ata_port* %29, i32 0, i32 40, !dbg !14943
  call void @__init_waitqueue_head(%struct.wait_queue_head* %eh_wait_q, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92, i64 0, i64 0), %struct.lock_class_key* @ata_port_alloc.__key.91) #12, !dbg !14943
  br label %do.end27, !dbg !14943

do.end27:                                         ; preds = %do.body26
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14945
  %park_req_pending = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 42, !dbg !14945
  call void @__init_completion(%struct.completion* %park_req_pending) #12, !dbg !14945
  %31 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14946
  %fastdrain_timer = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 45, !dbg !14946
  call void @init_timer_key(%struct.timer_list* %fastdrain_timer, void (%struct.timer_list*)* @ata_eh_fastdrain_timerfn, i32 524288, i8* null, %struct.lock_class_key* null) #12, !dbg !14946
  %32 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14947
  %cbl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 18, !dbg !14948
  store i32 0, i32* %cbl, align 4, !dbg !14949
  %33 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14950
  %34 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14951
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %34, i32 0, i32 25, !dbg !14952
  call void @ata_link_init(%struct.ata_port* %33, %struct.ata_link* %link, i32 0) #12, !dbg !14953
  %35 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14954
  call void @ata_sff_port_init(%struct.ata_port* %35) #12, !dbg !14955
  %36 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14956
  store %struct.ata_port* %36, %struct.ata_port** %retval, align 8, !dbg !14957
  br label %return, !dbg !14957

return:                                           ; preds = %do.end27, %if.then
  %37 = load %struct.ata_port*, %struct.ata_port** %retval, align 8, !dbg !14958
  ret %struct.ata_port* %37, !dbg !14958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !14959 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !14962, metadata !DIExpression()), !dbg !14966
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !14972, metadata !DIExpression()), !dbg !14973
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !14974, metadata !DIExpression()), !dbg !14975
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !14976, metadata !DIExpression()), !dbg !14977
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !14978, metadata !DIExpression()), !dbg !14982
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !14984, metadata !DIExpression()), !dbg !14988
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !14990, metadata !DIExpression()), !dbg !14994
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !14999, metadata !DIExpression()), !dbg !15000
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !15001, metadata !DIExpression()), !dbg !15002
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15003, metadata !DIExpression()), !dbg !15004
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !15005, metadata !DIExpression()), !dbg !15006
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !15007, metadata !DIExpression()), !dbg !15008
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15009, metadata !DIExpression()), !dbg !15010
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !15011, metadata !DIExpression()), !dbg !15012
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !15013, metadata !DIExpression()), !dbg !15014
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15015, metadata !DIExpression()), !dbg !15016
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15017, metadata !DIExpression()), !dbg !15018
  %0 = load i64, i64* %size.addr, align 8, !dbg !15019
  %1 = load i32, i32* %flags.addr, align 4, !dbg !15020
  %or = or i32 %1, 256, !dbg !15021
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !15022
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !15023
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !15024

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15025
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !15026
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15027

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !15028
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !15029
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !15030
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !15031
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15008
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !15032
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15033
  %10 = load i32, i32* %order.i.i, align 4, !dbg !15034
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15035
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15036
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15037
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !15038
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15038
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15038
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15038
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !15038
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15039
  br label %kmalloc.exit, !dbg !15039

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !15040
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15041
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !15041
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15043

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15044
  br label %kmalloc_index.exit.i, !dbg !15044

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15045
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !15047
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15048

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15049
  br label %kmalloc_index.exit.i, !dbg !15049

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15050
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !15052
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15053

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15054
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !15055
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15056

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15057
  br label %kmalloc_index.exit.i, !dbg !15057

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15058
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !15060
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15061

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15062
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !15063
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15064

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15065
  br label %kmalloc_index.exit.i, !dbg !15065

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15066
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !15068
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15069

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15070
  br label %kmalloc_index.exit.i, !dbg !15070

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15071
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !15073
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15074

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15075
  br label %kmalloc_index.exit.i, !dbg !15075

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15076
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !15078
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15079

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15080
  br label %kmalloc_index.exit.i, !dbg !15080

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15081
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !15083
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15084

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15085
  br label %kmalloc_index.exit.i, !dbg !15085

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15086
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !15088
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15089

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15090
  br label %kmalloc_index.exit.i, !dbg !15090

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15091
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !15093
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15094

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15095
  br label %kmalloc_index.exit.i, !dbg !15095

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15096
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !15098
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15099

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15100
  br label %kmalloc_index.exit.i, !dbg !15100

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15101
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !15103
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15104

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15105
  br label %kmalloc_index.exit.i, !dbg !15105

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15106
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !15108
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15109

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15110
  br label %kmalloc_index.exit.i, !dbg !15110

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15111
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !15113
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15114

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15115
  br label %kmalloc_index.exit.i, !dbg !15115

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15116
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !15118
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15119

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15120
  br label %kmalloc_index.exit.i, !dbg !15120

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15121
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !15123
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15124

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15125
  br label %kmalloc_index.exit.i, !dbg !15125

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15126
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !15128
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15129

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15130
  br label %kmalloc_index.exit.i, !dbg !15130

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15131
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !15133
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15134

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15135
  br label %kmalloc_index.exit.i, !dbg !15135

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15136
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !15138
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15139

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15140
  br label %kmalloc_index.exit.i, !dbg !15140

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15141
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !15143
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15144

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15145
  br label %kmalloc_index.exit.i, !dbg !15145

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15146
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !15148
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15149

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15150
  br label %kmalloc_index.exit.i, !dbg !15150

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15151
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !15153
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15154

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15155
  br label %kmalloc_index.exit.i, !dbg !15155

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15156
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !15158
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15159

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15160
  br label %kmalloc_index.exit.i, !dbg !15160

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15161
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !15163
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15164

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15165
  br label %kmalloc_index.exit.i, !dbg !15165

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15166
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !15168
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15169

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15170
  br label %kmalloc_index.exit.i, !dbg !15170

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15171
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !15173
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15174

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15175
  br label %kmalloc_index.exit.i, !dbg !15175

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15176
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !15178
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15179

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15180
  br label %kmalloc_index.exit.i, !dbg !15180

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15181
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !15183
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15184

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15185
  br label %kmalloc_index.exit.i, !dbg !15185

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.287, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !15186, !srcloc !15189
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #7, !dbg !15190, !srcloc !15193
  unreachable, !dbg !15194

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !15195
  store i32 %45, i32* %index.i, align 4, !dbg !15196
  %46 = load i32, i32* %index.i, align 4, !dbg !15197
  %tobool.i = icmp ne i32 %46, 0, !dbg !15197
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15199

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15200
  br label %kmalloc.exit, !dbg !15200

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !15201
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15202
  %and.i.i = and i32 %48, 17, !dbg !15202
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15202
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15202
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15202
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15202
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15204

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15205
  br label %kmalloc_type.exit.i, !dbg !15205

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15206
  %and2.i.i = and i32 %49, 1, !dbg !15207
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15206
  %50 = zext i1 %tobool3.i.i to i64, !dbg !15206
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15206
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15208
  br label %kmalloc_type.exit.i, !dbg !15208

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !15209
  %idxprom.i = zext i32 %51 to i64, !dbg !15210
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15210
  %52 = load i32, i32* %index.i, align 4, !dbg !15211
  %idxprom6.i = zext i32 %52 to i64, !dbg !15210
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15210
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15210
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !15212
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !15213
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15214
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15215
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !15216
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15216
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15216
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15216
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !15216
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14977
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15217
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !15218
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15219
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15220
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !15221
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15222
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !15223
  store i8* %62, i8** %retval.i, align 8, !dbg !15224
  br label %kmalloc.exit, !dbg !15224

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !15225
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !15226
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !15227
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15227
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15227
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15227
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !15227
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15228
  br label %kmalloc.exit, !dbg !15228

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !15229
  ret i8* %65, !dbg !15230
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !15231 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !15234, metadata !DIExpression()), !dbg !15235
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !15236, metadata !DIExpression()), !dbg !15237
  ret void, !dbg !15238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !15239 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !15243, metadata !DIExpression()), !dbg !15244
  br label %do.body, !dbg !15245

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15246

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !15248

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !15246

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15250
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15250
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !15250
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !15250
  br label %do.end3, !dbg !15250

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !15246

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15252
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15253
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !15254
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !15255
  ret void, !dbg !15256
}

; Function Attrs: noredzone
declare dso_local void @ata_scsi_hotplug(%struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #1

; Function Attrs: noredzone
declare dso_local void @ata_scsi_dev_rescan(%struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #0 !dbg !7264 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !15257, metadata !DIExpression()), !dbg !15258
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !15259
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !15260
  store i32 0, i32* %done, align 8, !dbg !15261
  br label %do.body, !dbg !15262

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !15263
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !15263
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.288, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #12, !dbg !15263
  br label %do.end, !dbg !15263

do.end:                                           ; preds = %do.body
  ret void, !dbg !15265
}

; Function Attrs: noredzone
declare dso_local void @ata_eh_fastdrain_timerfn(%struct.timer_list*) #1

; Function Attrs: noredzone
declare dso_local void @ata_sff_port_init(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_host_get(%struct.ata_host* %host) #0 !dbg !15266 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !15267, metadata !DIExpression()), !dbg !15268
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15269
  %kref = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 8, !dbg !15270
  call void @kref_get(%struct.kref* %kref) #12, !dbg !15271
  ret void, !dbg !15272
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !15273 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !15277, metadata !DIExpression()), !dbg !15278
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15279
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !15280
  call void @refcount_inc(%struct.refcount_struct* %refcount) #12, !dbg !15281
  ret void, !dbg !15282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_host_put(%struct.ata_host* %host) #0 !dbg !15283 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !15284, metadata !DIExpression()), !dbg !15285
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15286
  %kref = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 8, !dbg !15287
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @ata_host_release) #12, !dbg !15288
  ret void, !dbg !15289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !15290 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !15294, metadata !DIExpression()), !dbg !15295
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !15296, metadata !DIExpression()), !dbg !15297
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15298
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !15300
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #12, !dbg !15301
  br i1 %call, label %if.then, label %if.end, !dbg !15302

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !15303
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15305
  call void %1(%struct.kref* %2) #12, !dbg !15303
  store i32 1, i32* %retval, align 4, !dbg !15306
  br label %return, !dbg !15306

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15307
  br label %return, !dbg !15307

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !15308
  ret i32 %3, !dbg !15308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_host_release(%struct.kref* %kref) #0 !dbg !15309 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %host = alloca %struct.ata_host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_host*, align 8
  %i = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !15310, metadata !DIExpression()), !dbg !15311
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !15312, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15314, metadata !DIExpression()), !dbg !15316
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15316
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !15316
  store i8* %1, i8** %__mptr, align 8, !dbg !15316
  br label %do.body, !dbg !15316

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15317

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15316
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !15316
  %3 = bitcast i8* %add.ptr to %struct.ata_host*, !dbg !15316
  store %struct.ata_host* %3, %struct.ata_host** %tmp, align 8, !dbg !15317
  %4 = load %struct.ata_host*, %struct.ata_host** %tmp, align 8, !dbg !15316
  store %struct.ata_host* %4, %struct.ata_host** %host, align 8, !dbg !15313
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15319, metadata !DIExpression()), !dbg !15320
  store i32 0, i32* %i, align 4, !dbg !15321
  br label %for.cond, !dbg !15323

for.cond:                                         ; preds = %for.inc, %do.end
  %5 = load i32, i32* %i, align 4, !dbg !15324
  %6 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15326
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %6, i32 0, i32 3, !dbg !15327
  %7 = load i32, i32* %n_ports, align 8, !dbg !15327
  %cmp = icmp ult i32 %5, %7, !dbg !15328
  br i1 %cmp, label %for.body, label %for.end, !dbg !15329

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !15330, metadata !DIExpression()), !dbg !15332
  %8 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15333
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %8, i32 0, i32 12, !dbg !15334
  %9 = load i32, i32* %i, align 4, !dbg !15335
  %idxprom = sext i32 %9 to i64, !dbg !15333
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !15333
  %10 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !15333
  store %struct.ata_port* %10, %struct.ata_port** %ap, align 8, !dbg !15332
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15336
  %pmp_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 28, !dbg !15337
  %12 = load %struct.ata_link*, %struct.ata_link** %pmp_link, align 16, !dbg !15337
  %13 = bitcast %struct.ata_link* %12 to i8*, !dbg !15336
  call void @kfree(i8* %13) #12, !dbg !15338
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15339
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 26, !dbg !15340
  %15 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !15340
  %16 = bitcast %struct.ata_link* %15 to i8*, !dbg !15339
  call void @kfree(i8* %16) #12, !dbg !15341
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15342
  %18 = bitcast %struct.ata_port* %17 to i8*, !dbg !15342
  call void @kfree(i8* %18) #12, !dbg !15343
  %19 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15344
  %ports1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %19, i32 0, i32 12, !dbg !15345
  %20 = load i32, i32* %i, align 4, !dbg !15346
  %idxprom2 = sext i32 %20 to i64, !dbg !15344
  %arrayidx3 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports1, i64 0, i64 %idxprom2, !dbg !15344
  store %struct.ata_port* null, %struct.ata_port** %arrayidx3, align 8, !dbg !15347
  br label %for.inc, !dbg !15348

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !15349
  %inc = add i32 %21, 1, !dbg !15349
  store i32 %inc, i32* %i, align 4, !dbg !15349
  br label %for.cond, !dbg !15350, !llvm.loop !15351

for.end:                                          ; preds = %for.cond
  %22 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15353
  %23 = bitcast %struct.ata_host* %22 to i8*, !dbg !15353
  call void @kfree(i8* %23) #12, !dbg !15354
  ret void, !dbg !15355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_host* @ata_host_alloc(%struct.device* %dev, i32 %max_ports) #0 !dbg !7122 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8966, metadata !DIExpression()), !dbg !15356
  %retval = alloca %struct.ata_host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %max_ports.addr = alloca i32, align 4
  %host = alloca %struct.ata_host*, align 8
  %sz = alloca i64, align 8
  %i = alloca i32, align 4
  %dr = alloca i8*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %ap = alloca %struct.ata_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15359, metadata !DIExpression()), !dbg !15360
  store i32 %max_ports, i32* %max_ports.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_ports.addr, metadata !15361, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !15363, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.declare(metadata i64* %sz, metadata !15365, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15367, metadata !DIExpression()), !dbg !15368
  call void @llvm.dbg.declare(metadata i8** %dr, metadata !15369, metadata !DIExpression()), !dbg !15370
  %0 = load i32, i32* %max_ports.addr, align 4, !dbg !15371
  %add = add i32 %0, 1, !dbg !15372
  %conv = sext i32 %add to i64, !dbg !15373
  %mul = mul i64 %conv, 8, !dbg !15374
  %add1 = add i64 96, %mul, !dbg !15375
  store i64 %add1, i64* %sz, align 8, !dbg !15376
  %1 = load i64, i64* %sz, align 8, !dbg !15377
  %call = call i8* @kzalloc(i64 %1, i32 3264) #12, !dbg !15378
  %2 = bitcast i8* %call to %struct.ata_host*, !dbg !15378
  store %struct.ata_host* %2, %struct.ata_host** %host, align 8, !dbg !15379
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15380
  %tobool = icmp ne %struct.ata_host* %3, null, !dbg !15380
  br i1 %tobool, label %if.end, label %if.then, !dbg !15382

if.then:                                          ; preds = %entry
  store %struct.ata_host* null, %struct.ata_host** %retval, align 8, !dbg !15383
  br label %return, !dbg !15383

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15384
  %call2 = call i8* @devres_open_group(%struct.device* %4, i8* null, i32 3264) #12, !dbg !15386
  %tobool3 = icmp ne i8* %call2, null, !dbg !15386
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !15387

if.then4:                                         ; preds = %if.end
  br label %err_free, !dbg !15388

if.end5:                                          ; preds = %if.end
  %call6 = call i8* @devres_alloc(void (%struct.device*, i8*)* @ata_devres_release, i64 0, i32 3264) #12, !dbg !15389
  store i8* %call6, i8** %dr, align 8, !dbg !15390
  %5 = load i8*, i8** %dr, align 8, !dbg !15391
  %tobool7 = icmp ne i8* %5, null, !dbg !15391
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !15393

if.then8:                                         ; preds = %if.end5
  br label %err_out, !dbg !15394

if.end9:                                          ; preds = %if.end5
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15395
  %7 = load i8*, i8** %dr, align 8, !dbg !15396
  call void @devres_add(%struct.device* %6, i8* %7) #12, !dbg !15397
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15398
  %9 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15399
  %10 = bitcast %struct.ata_host* %9 to i8*, !dbg !15399
  call void @dev_set_drvdata(%struct.device* %8, i8* %10) #12, !dbg !15400
  br label %do.body, !dbg !15401

do.body:                                          ; preds = %if.end9
  %11 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15402
  %lock = getelementptr inbounds %struct.ata_host, %struct.ata_host* %11, i32 0, i32 0, !dbg !15402
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15403
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !15404
  %rlock.i = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !15404
  %14 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15402
  %lock11 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %14, i32 0, i32 0, !dbg !15402
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !15402
  %rlock = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !15402
  %16 = bitcast %struct.spinlock* %lock11 to i8*, !dbg !15402
  %17 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !15402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 %17, i64 0, i1 false), !dbg !15402
  br label %do.end, !dbg !15402

do.end:                                           ; preds = %do.body
  br label %do.body12, !dbg !15405

do.body12:                                        ; preds = %do.end
  %18 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15406
  %eh_mutex = getelementptr inbounds %struct.ata_host, %struct.ata_host* %18, i32 0, i32 9, !dbg !15406
  call void @__mutex_init(%struct.mutex* %eh_mutex, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93, i64 0, i64 0), %struct.lock_class_key* @ata_host_alloc.__key) #12, !dbg !15406
  br label %do.end13, !dbg !15406

do.end13:                                         ; preds = %do.body12
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15408
  %20 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15409
  %dev14 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %20, i32 0, i32 1, !dbg !15410
  store %struct.device* %19, %struct.device** %dev14, align 8, !dbg !15411
  %21 = load i32, i32* %max_ports.addr, align 4, !dbg !15412
  %22 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15413
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %22, i32 0, i32 3, !dbg !15414
  store i32 %21, i32* %n_ports, align 8, !dbg !15415
  %23 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15416
  %kref = getelementptr inbounds %struct.ata_host, %struct.ata_host* %23, i32 0, i32 8, !dbg !15417
  call void @kref_init(%struct.kref* %kref) #12, !dbg !15418
  store i32 0, i32* %i, align 4, !dbg !15419
  br label %for.cond, !dbg !15421

for.cond:                                         ; preds = %for.inc, %do.end13
  %24 = load i32, i32* %i, align 4, !dbg !15422
  %25 = load i32, i32* %max_ports.addr, align 4, !dbg !15424
  %cmp = icmp slt i32 %24, %25, !dbg !15425
  br i1 %cmp, label %for.body, label %for.end, !dbg !15426

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !15427, metadata !DIExpression()), !dbg !15429
  %26 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15430
  %call16 = call %struct.ata_port* @ata_port_alloc(%struct.ata_host* %26) #12, !dbg !15431
  store %struct.ata_port* %call16, %struct.ata_port** %ap, align 8, !dbg !15432
  %27 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15433
  %tobool17 = icmp ne %struct.ata_port* %27, null, !dbg !15433
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !15435

if.then18:                                        ; preds = %for.body
  br label %err_out, !dbg !15436

if.end19:                                         ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !15437
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15438
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %29, i32 0, i32 7, !dbg !15439
  store i32 %28, i32* %port_no, align 4, !dbg !15440
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15441
  %31 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15442
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %31, i32 0, i32 12, !dbg !15443
  %32 = load i32, i32* %i, align 4, !dbg !15444
  %idxprom = sext i32 %32 to i64, !dbg !15442
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !15442
  store %struct.ata_port* %30, %struct.ata_port** %arrayidx, align 8, !dbg !15445
  br label %for.inc, !dbg !15446

for.inc:                                          ; preds = %if.end19
  %33 = load i32, i32* %i, align 4, !dbg !15447
  %inc = add i32 %33, 1, !dbg !15447
  store i32 %inc, i32* %i, align 4, !dbg !15447
  br label %for.cond, !dbg !15448, !llvm.loop !15449

for.end:                                          ; preds = %for.cond
  %34 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15451
  call void @devres_remove_group(%struct.device* %34, i8* null) #12, !dbg !15452
  %35 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15453
  store %struct.ata_host* %35, %struct.ata_host** %retval, align 8, !dbg !15454
  br label %return, !dbg !15454

err_out:                                          ; preds = %if.then18, %if.then8
  call void @llvm.dbg.label(metadata !15455), !dbg !15456
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15457
  %call20 = call i32 @devres_release_group(%struct.device* %36, i8* null) #12, !dbg !15458
  br label %err_free, !dbg !15458

err_free:                                         ; preds = %err_out, %if.then4
  call void @llvm.dbg.label(metadata !15459), !dbg !15460
  %37 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15461
  %38 = bitcast %struct.ata_host* %37 to i8*, !dbg !15461
  call void @kfree(i8* %38) #12, !dbg !15462
  store %struct.ata_host* null, %struct.ata_host** %retval, align 8, !dbg !15463
  br label %return, !dbg !15463

return:                                           ; preds = %err_free, %for.end, %if.then
  %39 = load %struct.ata_host*, %struct.ata_host** %retval, align 8, !dbg !15464
  ret %struct.ata_host* %39, !dbg !15464
}

; Function Attrs: noredzone
declare dso_local i8* @devres_open_group(%struct.device*, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !15465 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !15472, metadata !DIExpression()), !dbg !15473
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15474, metadata !DIExpression()), !dbg !15475
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !15476, metadata !DIExpression()), !dbg !15477
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !15478
  %1 = load i64, i64* %size.addr, align 8, !dbg !15479
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !15480
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #12, !dbg !15481
  ret i8* %call, !dbg !15482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_devres_release(%struct.device* %gendev, i8* %res) #0 !dbg !15483 {
entry:
  %gendev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %host = alloca %struct.ata_host*, align 8
  %i = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  store %struct.device* %gendev, %struct.device** %gendev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %gendev.addr, metadata !15484, metadata !DIExpression()), !dbg !15485
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !15486, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !15488, metadata !DIExpression()), !dbg !15489
  %0 = load %struct.device*, %struct.device** %gendev.addr, align 8, !dbg !15490
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !15491
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !15491
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !15489
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15492, metadata !DIExpression()), !dbg !15493
  store i32 0, i32* %i, align 4, !dbg !15494
  br label %for.cond, !dbg !15496

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !15497
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15499
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 3, !dbg !15500
  %4 = load i32, i32* %n_ports, align 8, !dbg !15500
  %cmp = icmp ult i32 %2, %4, !dbg !15501
  br i1 %cmp, label %for.body, label %for.end, !dbg !15502

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !15503, metadata !DIExpression()), !dbg !15505
  %5 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15506
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %5, i32 0, i32 12, !dbg !15507
  %6 = load i32, i32* %i, align 4, !dbg !15508
  %idxprom = sext i32 %6 to i64, !dbg !15506
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !15506
  %7 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !15506
  store %struct.ata_port* %7, %struct.ata_port** %ap, align 8, !dbg !15505
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15509
  %tobool = icmp ne %struct.ata_port* %8, null, !dbg !15509
  br i1 %tobool, label %if.end, label %if.then, !dbg !15511

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !15512

if.end:                                           ; preds = %for.body
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15513
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 0, !dbg !15515
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !15515
  %tobool1 = icmp ne %struct.Scsi_Host* %10, null, !dbg !15513
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !15516

if.then2:                                         ; preds = %if.end
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15517
  %scsi_host3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 0, !dbg !15518
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host3, align 64, !dbg !15518
  call void @scsi_host_put(%struct.Scsi_Host* %12) #12, !dbg !15519
  br label %if.end4, !dbg !15519

if.end4:                                          ; preds = %if.then2, %if.end
  br label %for.inc, !dbg !15520

for.inc:                                          ; preds = %if.end4, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !15521
  %inc = add i32 %13, 1, !dbg !15521
  store i32 %inc, i32* %i, align 4, !dbg !15521
  br label %for.cond, !dbg !15522, !llvm.loop !15523

for.end:                                          ; preds = %for.cond
  %14 = load %struct.device*, %struct.device** %gendev.addr, align 8, !dbg !15525
  call void @dev_set_drvdata(%struct.device* %14, i8* null) #12, !dbg !15526
  %15 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15527
  call void @ata_host_put(%struct.ata_host* %15) #12, !dbg !15528
  ret void, !dbg !15529
}

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !15530 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15531, metadata !DIExpression()), !dbg !15532
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15533, metadata !DIExpression()), !dbg !15534
  %0 = load i8*, i8** %data.addr, align 8, !dbg !15535
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15536
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !15537
  store i8* %0, i8** %driver_data, align 8, !dbg !15538
  ret void, !dbg !15539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !15540 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !15541, metadata !DIExpression()), !dbg !15542
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !15543
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !15544
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #12, !dbg !15545
  ret void, !dbg !15546
}

; Function Attrs: noredzone
declare dso_local void @devres_remove_group(%struct.device*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @devres_release_group(%struct.device*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_host* @ata_host_alloc_pinfo(%struct.device* %dev, %struct.ata_port_info** %ppi, i32 %n_ports) #0 !dbg !15547 {
entry:
  %retval = alloca %struct.ata_host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ppi.addr = alloca %struct.ata_port_info**, align 8
  %n_ports.addr = alloca i32, align 4
  %pi = alloca %struct.ata_port_info*, align 8
  %host = alloca %struct.ata_host*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15553, metadata !DIExpression()), !dbg !15554
  store %struct.ata_port_info** %ppi, %struct.ata_port_info*** %ppi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_info*** %ppi.addr, metadata !15555, metadata !DIExpression()), !dbg !15556
  store i32 %n_ports, i32* %n_ports.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_ports.addr, metadata !15557, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.declare(metadata %struct.ata_port_info** %pi, metadata !15559, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !15561, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15563, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15565, metadata !DIExpression()), !dbg !15566
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15567
  %1 = load i32, i32* %n_ports.addr, align 4, !dbg !15568
  %call = call %struct.ata_host* @ata_host_alloc(%struct.device* %0, i32 %1) #12, !dbg !15569
  store %struct.ata_host* %call, %struct.ata_host** %host, align 8, !dbg !15570
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15571
  %tobool = icmp ne %struct.ata_host* %2, null, !dbg !15571
  br i1 %tobool, label %if.end, label %if.then, !dbg !15573

if.then:                                          ; preds = %entry
  store %struct.ata_host* null, %struct.ata_host** %retval, align 8, !dbg !15574
  br label %return, !dbg !15574

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15575
  store i32 0, i32* %j, align 4, !dbg !15577
  store %struct.ata_port_info* null, %struct.ata_port_info** %pi, align 8, !dbg !15578
  br label %for.cond, !dbg !15579

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !15580
  %4 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15582
  %n_ports1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %4, i32 0, i32 3, !dbg !15583
  %5 = load i32, i32* %n_ports1, align 8, !dbg !15583
  %cmp = icmp ult i32 %3, %5, !dbg !15584
  br i1 %cmp, label %for.body, label %for.end, !dbg !15585

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !15586, metadata !DIExpression()), !dbg !15588
  %6 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15589
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %6, i32 0, i32 12, !dbg !15590
  %7 = load i32, i32* %i, align 4, !dbg !15591
  %idxprom = sext i32 %7 to i64, !dbg !15589
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !15589
  %8 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !15589
  store %struct.ata_port* %8, %struct.ata_port** %ap, align 8, !dbg !15588
  %9 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !15592
  %10 = load i32, i32* %j, align 4, !dbg !15594
  %idxprom2 = sext i32 %10 to i64, !dbg !15592
  %arrayidx3 = getelementptr %struct.ata_port_info*, %struct.ata_port_info** %9, i64 %idxprom2, !dbg !15592
  %11 = load %struct.ata_port_info*, %struct.ata_port_info** %arrayidx3, align 8, !dbg !15592
  %tobool4 = icmp ne %struct.ata_port_info* %11, null, !dbg !15592
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !15595

if.then5:                                         ; preds = %for.body
  %12 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !15596
  %13 = load i32, i32* %j, align 4, !dbg !15597
  %inc = add i32 %13, 1, !dbg !15597
  store i32 %inc, i32* %j, align 4, !dbg !15597
  %idxprom6 = sext i32 %13 to i64, !dbg !15596
  %arrayidx7 = getelementptr %struct.ata_port_info*, %struct.ata_port_info** %12, i64 %idxprom6, !dbg !15596
  %14 = load %struct.ata_port_info*, %struct.ata_port_info** %arrayidx7, align 8, !dbg !15596
  store %struct.ata_port_info* %14, %struct.ata_port_info** %pi, align 8, !dbg !15598
  br label %if.end8, !dbg !15599

if.end8:                                          ; preds = %if.then5, %for.body
  %15 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15600
  %pio_mask = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %15, i32 0, i32 2, !dbg !15601
  %16 = load i64, i64* %pio_mask, align 8, !dbg !15601
  %conv = trunc i64 %16 to i32, !dbg !15600
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15602
  %pio_mask9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 15, !dbg !15603
  store i32 %conv, i32* %pio_mask9, align 32, !dbg !15604
  %18 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15605
  %mwdma_mask = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %18, i32 0, i32 3, !dbg !15606
  %19 = load i64, i64* %mwdma_mask, align 8, !dbg !15606
  %conv10 = trunc i64 %19 to i32, !dbg !15605
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15607
  %mwdma_mask11 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 16, !dbg !15608
  store i32 %conv10, i32* %mwdma_mask11, align 4, !dbg !15609
  %21 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15610
  %udma_mask = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %21, i32 0, i32 4, !dbg !15611
  %22 = load i64, i64* %udma_mask, align 8, !dbg !15611
  %conv12 = trunc i64 %22 to i32, !dbg !15610
  %23 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15612
  %udma_mask13 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %23, i32 0, i32 17, !dbg !15613
  store i32 %conv12, i32* %udma_mask13, align 8, !dbg !15614
  %24 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15615
  %flags = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %24, i32 0, i32 0, !dbg !15616
  %25 = load i64, i64* %flags, align 8, !dbg !15616
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15617
  %flags14 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 3, !dbg !15618
  %27 = load i64, i64* %flags14, align 8, !dbg !15619
  %or = or i64 %27, %25, !dbg !15619
  store i64 %or, i64* %flags14, align 8, !dbg !15619
  %28 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15620
  %link_flags = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %28, i32 0, i32 1, !dbg !15621
  %29 = load i64, i64* %link_flags, align 8, !dbg !15621
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15622
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 25, !dbg !15623
  %flags15 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 5, !dbg !15624
  %31 = load i32, i32* %flags15, align 16, !dbg !15625
  %conv16 = zext i32 %31 to i64, !dbg !15625
  %or17 = or i64 %conv16, %29, !dbg !15625
  %conv18 = trunc i64 %or17 to i32, !dbg !15625
  store i32 %conv18, i32* %flags15, align 16, !dbg !15625
  %32 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15626
  %port_ops = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %32, i32 0, i32 5, !dbg !15627
  %33 = load %struct.ata_port_operations*, %struct.ata_port_operations** %port_ops, align 8, !dbg !15627
  %34 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15628
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %34, i32 0, i32 1, !dbg !15629
  store %struct.ata_port_operations* %33, %struct.ata_port_operations** %ops, align 8, !dbg !15630
  %35 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15631
  %ops19 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %35, i32 0, i32 6, !dbg !15633
  %36 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops19, align 8, !dbg !15633
  %tobool20 = icmp ne %struct.ata_port_operations* %36, null, !dbg !15631
  br i1 %tobool20, label %if.end27, label %land.lhs.true, !dbg !15634

land.lhs.true:                                    ; preds = %if.end8
  %37 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15635
  %port_ops21 = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %37, i32 0, i32 5, !dbg !15636
  %38 = load %struct.ata_port_operations*, %struct.ata_port_operations** %port_ops21, align 8, !dbg !15636
  %cmp22 = icmp ne %struct.ata_port_operations* %38, @ata_dummy_port_ops, !dbg !15637
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !15638

if.then24:                                        ; preds = %land.lhs.true
  %39 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !15639
  %port_ops25 = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %39, i32 0, i32 5, !dbg !15640
  %40 = load %struct.ata_port_operations*, %struct.ata_port_operations** %port_ops25, align 8, !dbg !15640
  %41 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15641
  %ops26 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %41, i32 0, i32 6, !dbg !15642
  store %struct.ata_port_operations* %40, %struct.ata_port_operations** %ops26, align 8, !dbg !15643
  br label %if.end27, !dbg !15641

if.end27:                                         ; preds = %if.then24, %land.lhs.true, %if.end8
  br label %for.inc, !dbg !15644

for.inc:                                          ; preds = %if.end27
  %42 = load i32, i32* %i, align 4, !dbg !15645
  %inc28 = add i32 %42, 1, !dbg !15645
  store i32 %inc28, i32* %i, align 4, !dbg !15645
  br label %for.cond, !dbg !15646, !llvm.loop !15647

for.end:                                          ; preds = %for.cond
  %43 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15649
  store %struct.ata_host* %43, %struct.ata_host** %retval, align 8, !dbg !15650
  br label %return, !dbg !15650

return:                                           ; preds = %for.end, %if.then
  %44 = load %struct.ata_host*, %struct.ata_host** %retval, align 8, !dbg !15651
  ret %struct.ata_host* %44, !dbg !15651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_host_start(%struct.ata_host* %host) #0 !dbg !15652 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %have_stop = alloca i32, align 4
  %start_dr = alloca i8*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %ap28 = alloca %struct.ata_port*, align 8
  %ap54 = alloca %struct.ata_port*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !15655, metadata !DIExpression()), !dbg !15656
  call void @llvm.dbg.declare(metadata i32* %have_stop, metadata !15657, metadata !DIExpression()), !dbg !15658
  store i32 0, i32* %have_stop, align 4, !dbg !15658
  call void @llvm.dbg.declare(metadata i8** %start_dr, metadata !15659, metadata !DIExpression()), !dbg !15660
  store i8* null, i8** %start_dr, align 8, !dbg !15660
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15661, metadata !DIExpression()), !dbg !15662
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !15663, metadata !DIExpression()), !dbg !15664
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15665
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 7, !dbg !15667
  %1 = load i64, i64* %flags, align 8, !dbg !15667
  %and = and i64 %1, 2, !dbg !15668
  %tobool = icmp ne i64 %and, 0, !dbg !15668
  br i1 %tobool, label %if.then, label %if.end, !dbg !15669

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15670
  br label %return, !dbg !15670

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15671
  %ops = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 6, !dbg !15672
  %3 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !15672
  call void @ata_finalize_port_ops(%struct.ata_port_operations* %3) #12, !dbg !15673
  store i32 0, i32* %i, align 4, !dbg !15674
  br label %for.cond, !dbg !15676

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !15677
  %5 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15679
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %5, i32 0, i32 3, !dbg !15680
  %6 = load i32, i32* %n_ports, align 8, !dbg !15680
  %cmp = icmp ult i32 %4, %6, !dbg !15681
  br i1 %cmp, label %for.body, label %for.end, !dbg !15682

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !15683, metadata !DIExpression()), !dbg !15685
  %7 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15686
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %7, i32 0, i32 12, !dbg !15687
  %8 = load i32, i32* %i, align 4, !dbg !15688
  %idxprom = sext i32 %8 to i64, !dbg !15686
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !15686
  %9 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !15686
  store %struct.ata_port* %9, %struct.ata_port** %ap, align 8, !dbg !15685
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15689
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 1, !dbg !15690
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !15690
  call void @ata_finalize_port_ops(%struct.ata_port_operations* %11) #12, !dbg !15691
  %12 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15692
  %ops2 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %12, i32 0, i32 6, !dbg !15694
  %13 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops2, align 8, !dbg !15694
  %tobool3 = icmp ne %struct.ata_port_operations* %13, null, !dbg !15692
  br i1 %tobool3, label %if.end8, label %land.lhs.true, !dbg !15695

land.lhs.true:                                    ; preds = %for.body
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15696
  %call = call i32 @ata_port_is_dummy(%struct.ata_port* %14) #12, !dbg !15697
  %tobool4 = icmp ne i32 %call, 0, !dbg !15697
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !15698

if.then5:                                         ; preds = %land.lhs.true
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15699
  %ops6 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 1, !dbg !15700
  %16 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops6, align 8, !dbg !15700
  %17 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15701
  %ops7 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %17, i32 0, i32 6, !dbg !15702
  store %struct.ata_port_operations* %16, %struct.ata_port_operations** %ops7, align 8, !dbg !15703
  br label %if.end8, !dbg !15701

if.end8:                                          ; preds = %if.then5, %land.lhs.true, %for.body
  %18 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15704
  %ops9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 1, !dbg !15706
  %19 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops9, align 8, !dbg !15706
  %port_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %19, i32 0, i32 35, !dbg !15707
  %20 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %port_stop, align 8, !dbg !15707
  %tobool10 = icmp ne void (%struct.ata_port*)* %20, null, !dbg !15704
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !15708

if.then11:                                        ; preds = %if.end8
  store i32 1, i32* %have_stop, align 4, !dbg !15709
  br label %if.end12, !dbg !15710

if.end12:                                         ; preds = %if.then11, %if.end8
  br label %for.inc, !dbg !15711

for.inc:                                          ; preds = %if.end12
  %21 = load i32, i32* %i, align 4, !dbg !15712
  %inc = add i32 %21, 1, !dbg !15712
  store i32 %inc, i32* %i, align 4, !dbg !15712
  br label %for.cond, !dbg !15713, !llvm.loop !15714

for.end:                                          ; preds = %for.cond
  %22 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15716
  %ops13 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %22, i32 0, i32 6, !dbg !15718
  %23 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops13, align 8, !dbg !15718
  %host_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %23, i32 0, i32 36, !dbg !15719
  %24 = load void (%struct.ata_host*)*, void (%struct.ata_host*)** %host_stop, align 8, !dbg !15719
  %tobool14 = icmp ne void (%struct.ata_host*)* %24, null, !dbg !15716
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !15720

if.then15:                                        ; preds = %for.end
  store i32 1, i32* %have_stop, align 4, !dbg !15721
  br label %if.end16, !dbg !15722

if.end16:                                         ; preds = %if.then15, %for.end
  %25 = load i32, i32* %have_stop, align 4, !dbg !15723
  %tobool17 = icmp ne i32 %25, 0, !dbg !15723
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !15725

if.then18:                                        ; preds = %if.end16
  %call19 = call i8* @devres_alloc(void (%struct.device*, i8*)* @ata_host_stop, i64 0, i32 3264) #12, !dbg !15726
  store i8* %call19, i8** %start_dr, align 8, !dbg !15728
  %26 = load i8*, i8** %start_dr, align 8, !dbg !15729
  %tobool20 = icmp ne i8* %26, null, !dbg !15729
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !15731

if.then21:                                        ; preds = %if.then18
  store i32 -12, i32* %retval, align 4, !dbg !15732
  br label %return, !dbg !15732

if.end22:                                         ; preds = %if.then18
  br label %if.end23, !dbg !15733

if.end23:                                         ; preds = %if.end22, %if.end16
  store i32 0, i32* %i, align 4, !dbg !15734
  br label %for.cond24, !dbg !15736

for.cond24:                                       ; preds = %for.inc45, %if.end23
  %27 = load i32, i32* %i, align 4, !dbg !15737
  %28 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15739
  %n_ports25 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %28, i32 0, i32 3, !dbg !15740
  %29 = load i32, i32* %n_ports25, align 8, !dbg !15740
  %cmp26 = icmp ult i32 %27, %29, !dbg !15741
  br i1 %cmp26, label %for.body27, label %for.end47, !dbg !15742

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap28, metadata !15743, metadata !DIExpression()), !dbg !15745
  %30 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15746
  %ports29 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %30, i32 0, i32 12, !dbg !15747
  %31 = load i32, i32* %i, align 4, !dbg !15748
  %idxprom30 = sext i32 %31 to i64, !dbg !15746
  %arrayidx31 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports29, i64 0, i64 %idxprom30, !dbg !15746
  %32 = load %struct.ata_port*, %struct.ata_port** %arrayidx31, align 8, !dbg !15746
  store %struct.ata_port* %32, %struct.ata_port** %ap28, align 8, !dbg !15745
  %33 = load %struct.ata_port*, %struct.ata_port** %ap28, align 8, !dbg !15749
  %ops32 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %33, i32 0, i32 1, !dbg !15751
  %34 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops32, align 8, !dbg !15751
  %port_start = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %34, i32 0, i32 34, !dbg !15752
  %35 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %port_start, align 8, !dbg !15752
  %tobool33 = icmp ne i32 (%struct.ata_port*)* %35, null, !dbg !15749
  br i1 %tobool33, label %if.then34, label %if.end44, !dbg !15753

if.then34:                                        ; preds = %for.body27
  %36 = load %struct.ata_port*, %struct.ata_port** %ap28, align 8, !dbg !15754
  %ops35 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %36, i32 0, i32 1, !dbg !15756
  %37 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops35, align 8, !dbg !15756
  %port_start36 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %37, i32 0, i32 34, !dbg !15757
  %38 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %port_start36, align 8, !dbg !15757
  %39 = load %struct.ata_port*, %struct.ata_port** %ap28, align 8, !dbg !15758
  %call37 = call i32 %38(%struct.ata_port* %39) #12, !dbg !15754
  store i32 %call37, i32* %rc, align 4, !dbg !15759
  %40 = load i32, i32* %rc, align 4, !dbg !15760
  %tobool38 = icmp ne i32 %40, 0, !dbg !15760
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !15762

if.then39:                                        ; preds = %if.then34
  %41 = load i32, i32* %rc, align 4, !dbg !15763
  %cmp40 = icmp ne i32 %41, -19, !dbg !15766
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !15767

if.then41:                                        ; preds = %if.then39
  %42 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15768
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %42, i32 0, i32 1, !dbg !15768
  %43 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15768
  %44 = load i32, i32* %i, align 4, !dbg !15768
  %45 = load i32, i32* %rc, align 4, !dbg !15768
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %43, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.94, i64 0, i64 0), i32 %44, i32 %45) #13, !dbg !15768
  br label %if.end42, !dbg !15768

if.end42:                                         ; preds = %if.then41, %if.then39
  br label %err_out, !dbg !15769

if.end43:                                         ; preds = %if.then34
  br label %if.end44, !dbg !15770

if.end44:                                         ; preds = %if.end43, %for.body27
  %46 = load %struct.ata_port*, %struct.ata_port** %ap28, align 8, !dbg !15771
  call void @ata_eh_freeze_port(%struct.ata_port* %46) #12, !dbg !15772
  br label %for.inc45, !dbg !15773

for.inc45:                                        ; preds = %if.end44
  %47 = load i32, i32* %i, align 4, !dbg !15774
  %inc46 = add i32 %47, 1, !dbg !15774
  store i32 %inc46, i32* %i, align 4, !dbg !15774
  br label %for.cond24, !dbg !15775, !llvm.loop !15776

for.end47:                                        ; preds = %for.cond24
  %48 = load i8*, i8** %start_dr, align 8, !dbg !15778
  %tobool48 = icmp ne i8* %48, null, !dbg !15778
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !15780

if.then49:                                        ; preds = %for.end47
  %49 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15781
  %dev50 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %49, i32 0, i32 1, !dbg !15782
  %50 = load %struct.device*, %struct.device** %dev50, align 8, !dbg !15782
  %51 = load i8*, i8** %start_dr, align 8, !dbg !15783
  call void @devres_add(%struct.device* %50, i8* %51) #12, !dbg !15784
  br label %if.end51, !dbg !15784

if.end51:                                         ; preds = %if.then49, %for.end47
  %52 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15785
  %flags52 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %52, i32 0, i32 7, !dbg !15786
  %53 = load i64, i64* %flags52, align 8, !dbg !15787
  %or = or i64 %53, 2, !dbg !15787
  store i64 %or, i64* %flags52, align 8, !dbg !15787
  store i32 0, i32* %retval, align 4, !dbg !15788
  br label %return, !dbg !15788

err_out:                                          ; preds = %if.end42
  call void @llvm.dbg.label(metadata !15789), !dbg !15790
  br label %while.cond, !dbg !15791

while.cond:                                       ; preds = %if.end64, %err_out
  %54 = load i32, i32* %i, align 4, !dbg !15792
  %dec = add i32 %54, -1, !dbg !15792
  store i32 %dec, i32* %i, align 4, !dbg !15792
  %cmp53 = icmp sge i32 %dec, 0, !dbg !15793
  br i1 %cmp53, label %while.body, label %while.end, !dbg !15791

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap54, metadata !15794, metadata !DIExpression()), !dbg !15796
  %55 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !15797
  %ports55 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %55, i32 0, i32 12, !dbg !15798
  %56 = load i32, i32* %i, align 4, !dbg !15799
  %idxprom56 = sext i32 %56 to i64, !dbg !15797
  %arrayidx57 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports55, i64 0, i64 %idxprom56, !dbg !15797
  %57 = load %struct.ata_port*, %struct.ata_port** %arrayidx57, align 8, !dbg !15797
  store %struct.ata_port* %57, %struct.ata_port** %ap54, align 8, !dbg !15796
  %58 = load %struct.ata_port*, %struct.ata_port** %ap54, align 8, !dbg !15800
  %ops58 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %58, i32 0, i32 1, !dbg !15802
  %59 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops58, align 8, !dbg !15802
  %port_stop59 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %59, i32 0, i32 35, !dbg !15803
  %60 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %port_stop59, align 8, !dbg !15803
  %tobool60 = icmp ne void (%struct.ata_port*)* %60, null, !dbg !15800
  br i1 %tobool60, label %if.then61, label %if.end64, !dbg !15804

if.then61:                                        ; preds = %while.body
  %61 = load %struct.ata_port*, %struct.ata_port** %ap54, align 8, !dbg !15805
  %ops62 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %61, i32 0, i32 1, !dbg !15806
  %62 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops62, align 8, !dbg !15806
  %port_stop63 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %62, i32 0, i32 35, !dbg !15807
  %63 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %port_stop63, align 8, !dbg !15807
  %64 = load %struct.ata_port*, %struct.ata_port** %ap54, align 8, !dbg !15808
  call void %63(%struct.ata_port* %64) #12, !dbg !15805
  br label %if.end64, !dbg !15805

if.end64:                                         ; preds = %if.then61, %while.body
  br label %while.cond, !dbg !15791, !llvm.loop !15809

while.end:                                        ; preds = %while.cond
  %65 = load i8*, i8** %start_dr, align 8, !dbg !15811
  call void @devres_free(i8* %65) #12, !dbg !15812
  %66 = load i32, i32* %rc, align 4, !dbg !15813
  store i32 %66, i32* %retval, align 4, !dbg !15814
  br label %return, !dbg !15814

return:                                           ; preds = %while.end, %if.end51, %if.then21, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !15815
  ret i32 %67, !dbg !15815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_finalize_port_ops(%struct.ata_port_operations* %ops) #0 !dbg !7269 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !15816, metadata !DIExpression()), !dbg !15820
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15822, metadata !DIExpression()), !dbg !15824
  %ops.addr = alloca %struct.ata_port_operations*, align 8
  %cur = alloca %struct.ata_port_operations*, align 8
  %begin = alloca i8**, align 8
  %end = alloca i8**, align 8
  %pp = alloca i8**, align 8
  %inherit = alloca i8**, align 8
  store %struct.ata_port_operations* %ops, %struct.ata_port_operations** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_operations** %ops.addr, metadata !15826, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.declare(metadata %struct.ata_port_operations** %cur, metadata !15828, metadata !DIExpression()), !dbg !15829
  call void @llvm.dbg.declare(metadata i8*** %begin, metadata !15830, metadata !DIExpression()), !dbg !15831
  %0 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops.addr, align 8, !dbg !15832
  %1 = bitcast %struct.ata_port_operations* %0 to i8**, !dbg !15833
  store i8** %1, i8*** %begin, align 8, !dbg !15831
  call void @llvm.dbg.declare(metadata i8*** %end, metadata !15834, metadata !DIExpression()), !dbg !15835
  %2 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops.addr, align 8, !dbg !15836
  %inherits = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %2, i32 0, i32 60, !dbg !15837
  %3 = bitcast %struct.ata_port_operations** %inherits to i8**, !dbg !15838
  store i8** %3, i8*** %end, align 8, !dbg !15835
  call void @llvm.dbg.declare(metadata i8*** %pp, metadata !15839, metadata !DIExpression()), !dbg !15840
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops.addr, align 8, !dbg !15841
  %tobool = icmp ne %struct.ata_port_operations* %4, null, !dbg !15841
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15843

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops.addr, align 8, !dbg !15844
  %inherits1 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %5, i32 0, i32 60, !dbg !15845
  %6 = load %struct.ata_port_operations*, %struct.ata_port_operations** %inherits1, align 8, !dbg !15845
  %tobool2 = icmp ne %struct.ata_port_operations* %6, null, !dbg !15844
  br i1 %tobool2, label %if.end, label %if.then, !dbg !15846

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !15847

if.end:                                           ; preds = %lor.lhs.false
  store %struct.spinlock* @ata_finalize_port_ops.lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15848, !srcloc !15850
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15851
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !15851
  %rlock.i = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !15851
  %9 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops.addr, align 8, !dbg !15853
  %inherits3 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %9, i32 0, i32 60, !dbg !15855
  %10 = load %struct.ata_port_operations*, %struct.ata_port_operations** %inherits3, align 8, !dbg !15855
  store %struct.ata_port_operations* %10, %struct.ata_port_operations** %cur, align 8, !dbg !15856
  br label %for.cond, !dbg !15857

for.cond:                                         ; preds = %for.inc11, %if.end
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %cur, align 8, !dbg !15858
  %tobool4 = icmp ne %struct.ata_port_operations* %11, null, !dbg !15860
  br i1 %tobool4, label %for.body, label %for.end13, !dbg !15860

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8*** %inherit, metadata !15861, metadata !DIExpression()), !dbg !15863
  %12 = load %struct.ata_port_operations*, %struct.ata_port_operations** %cur, align 8, !dbg !15864
  %13 = bitcast %struct.ata_port_operations* %12 to i8**, !dbg !15865
  store i8** %13, i8*** %inherit, align 8, !dbg !15863
  %14 = load i8**, i8*** %begin, align 8, !dbg !15866
  store i8** %14, i8*** %pp, align 8, !dbg !15868
  br label %for.cond5, !dbg !15869

for.cond5:                                        ; preds = %for.inc, %for.body
  %15 = load i8**, i8*** %pp, align 8, !dbg !15870
  %16 = load i8**, i8*** %end, align 8, !dbg !15872
  %cmp = icmp ult i8** %15, %16, !dbg !15873
  br i1 %cmp, label %for.body6, label %for.end, !dbg !15874

for.body6:                                        ; preds = %for.cond5
  %17 = load i8**, i8*** %pp, align 8, !dbg !15875
  %18 = load i8*, i8** %17, align 8, !dbg !15877
  %tobool7 = icmp ne i8* %18, null, !dbg !15877
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !15878

if.then8:                                         ; preds = %for.body6
  %19 = load i8**, i8*** %inherit, align 8, !dbg !15879
  %20 = load i8*, i8** %19, align 8, !dbg !15880
  %21 = load i8**, i8*** %pp, align 8, !dbg !15881
  store i8* %20, i8** %21, align 8, !dbg !15882
  br label %if.end9, !dbg !15883

if.end9:                                          ; preds = %if.then8, %for.body6
  br label %for.inc, !dbg !15875

for.inc:                                          ; preds = %if.end9
  %22 = load i8**, i8*** %pp, align 8, !dbg !15884
  %incdec.ptr = getelementptr i8*, i8** %22, i32 1, !dbg !15884
  store i8** %incdec.ptr, i8*** %pp, align 8, !dbg !15884
  %23 = load i8**, i8*** %inherit, align 8, !dbg !15885
  %incdec.ptr10 = getelementptr i8*, i8** %23, i32 1, !dbg !15885
  store i8** %incdec.ptr10, i8*** %inherit, align 8, !dbg !15885
  br label %for.cond5, !dbg !15886, !llvm.loop !15887

for.end:                                          ; preds = %for.cond5
  br label %for.inc11, !dbg !15889

for.inc11:                                        ; preds = %for.end
  %24 = load %struct.ata_port_operations*, %struct.ata_port_operations** %cur, align 8, !dbg !15890
  %inherits12 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %24, i32 0, i32 60, !dbg !15891
  %25 = load %struct.ata_port_operations*, %struct.ata_port_operations** %inherits12, align 8, !dbg !15891
  store %struct.ata_port_operations* %25, %struct.ata_port_operations** %cur, align 8, !dbg !15892
  br label %for.cond, !dbg !15893, !llvm.loop !15894

for.end13:                                        ; preds = %for.cond
  %26 = load i8**, i8*** %begin, align 8, !dbg !15896
  store i8** %26, i8*** %pp, align 8, !dbg !15898
  br label %for.cond14, !dbg !15899

for.cond14:                                       ; preds = %for.inc19, %for.end13
  %27 = load i8**, i8*** %pp, align 8, !dbg !15900
  %28 = load i8**, i8*** %end, align 8, !dbg !15902
  %cmp15 = icmp ult i8** %27, %28, !dbg !15903
  br i1 %cmp15, label %for.body16, label %for.end21, !dbg !15904

for.body16:                                       ; preds = %for.cond14
  %29 = load i8**, i8*** %pp, align 8, !dbg !15905
  %30 = load i8*, i8** %29, align 8, !dbg !15907
  %call = call zeroext i1 @IS_ERR(i8* %30) #12, !dbg !15908
  br i1 %call, label %if.then17, label %if.end18, !dbg !15909

if.then17:                                        ; preds = %for.body16
  %31 = load i8**, i8*** %pp, align 8, !dbg !15910
  store i8* null, i8** %31, align 8, !dbg !15911
  br label %if.end18, !dbg !15912

if.end18:                                         ; preds = %if.then17, %for.body16
  br label %for.inc19, !dbg !15913

for.inc19:                                        ; preds = %if.end18
  %32 = load i8**, i8*** %pp, align 8, !dbg !15914
  %incdec.ptr20 = getelementptr i8*, i8** %32, i32 1, !dbg !15914
  store i8** %incdec.ptr20, i8*** %pp, align 8, !dbg !15914
  br label %for.cond14, !dbg !15915, !llvm.loop !15916

for.end21:                                        ; preds = %for.cond14
  %33 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops.addr, align 8, !dbg !15918
  %inherits22 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %33, i32 0, i32 60, !dbg !15919
  store %struct.ata_port_operations* null, %struct.ata_port_operations** %inherits22, align 8, !dbg !15920
  store %struct.spinlock* @ata_finalize_port_ops.lock, %struct.spinlock** %lock.addr.i23, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15921, !srcloc !15923
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !15924
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !15924
  %rlock.i24 = bitcast %union.anon* %35 to %struct.raw_spinlock*, !dbg !15924
  br label %return, !dbg !15926

return:                                           ; preds = %for.end21, %if.then
  ret void, !dbg !15926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_is_dummy(%struct.ata_port* %ap) #0 !dbg !15927 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !15928, metadata !DIExpression()), !dbg !15929
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !15930
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !15931
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !15931
  %cmp = icmp eq %struct.ata_port_operations* %1, @ata_dummy_port_ops, !dbg !15932
  %conv = zext i1 %cmp to i32, !dbg !15932
  ret i32 %conv, !dbg !15933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_host_stop(%struct.device* %gendev, i8* %res) #0 !dbg !15934 {
entry:
  %gendev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %host = alloca %struct.ata_host*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  store %struct.device* %gendev, %struct.device** %gendev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %gendev.addr, metadata !15935, metadata !DIExpression()), !dbg !15936
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !15937, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !15939, metadata !DIExpression()), !dbg !15940
  %0 = load %struct.device*, %struct.device** %gendev.addr, align 8, !dbg !15941
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !15942
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !15942
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !15940
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15943, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15945, metadata !DIExpression()), !dbg !15947
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15947
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 7, !dbg !15947
  %3 = load i64, i64* %flags, align 8, !dbg !15947
  %and = and i64 %3, 2, !dbg !15947
  %tobool = icmp ne i64 %and, 0, !dbg !15947
  %lnot = xor i1 %tobool, true, !dbg !15947
  %lnot1 = xor i1 %lnot, true, !dbg !15947
  %lnot2 = xor i1 %lnot1, true, !dbg !15947
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15947
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !15947
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !15948
  %tobool3 = icmp ne i32 %4, 0, !dbg !15948
  %lnot4 = xor i1 %tobool3, true, !dbg !15948
  %lnot6 = xor i1 %lnot4, true, !dbg !15948
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !15948
  %conv = sext i32 %lnot.ext7 to i64, !dbg !15948
  %tobool8 = icmp ne i64 %conv, 0, !dbg !15948
  br i1 %tobool8, label %if.then, label %if.end, !dbg !15947

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !15948

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !15950

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !15952

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !15950

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 5474, i32 2305, i64 12) #7, !dbg !15954, !srcloc !15956
  br label %do.end11, !dbg !15954

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 372) #7, !dbg !15957, !srcloc !15959
  br label %do.body12, !dbg !15950

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !15960

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !15950

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !15950

if.end:                                           ; preds = %do.end14, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !15947
  %tobool15 = icmp ne i32 %5, 0, !dbg !15947
  %lnot16 = xor i1 %tobool15, true, !dbg !15947
  %lnot18 = xor i1 %lnot16, true, !dbg !15947
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !15947
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !15947
  store i64 %conv20, i64* %tmp, align 8, !dbg !15948
  %6 = load i64, i64* %tmp, align 8, !dbg !15947
  store i32 0, i32* %i, align 4, !dbg !15962
  br label %for.cond, !dbg !15964

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !15965
  %8 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15967
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %8, i32 0, i32 3, !dbg !15968
  %9 = load i32, i32* %n_ports, align 8, !dbg !15968
  %cmp = icmp ult i32 %7, %9, !dbg !15969
  br i1 %cmp, label %for.body, label %for.end, !dbg !15970

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !15971, metadata !DIExpression()), !dbg !15973
  %10 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15974
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 12, !dbg !15975
  %11 = load i32, i32* %i, align 4, !dbg !15976
  %idxprom = sext i32 %11 to i64, !dbg !15974
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !15974
  %12 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !15974
  store %struct.ata_port* %12, %struct.ata_port** %ap, align 8, !dbg !15973
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15977
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 1, !dbg !15979
  %14 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !15979
  %port_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %14, i32 0, i32 35, !dbg !15980
  %15 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %port_stop, align 8, !dbg !15980
  %tobool22 = icmp ne void (%struct.ata_port*)* %15, null, !dbg !15977
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !15981

if.then23:                                        ; preds = %for.body
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15982
  %ops24 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 1, !dbg !15983
  %17 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops24, align 8, !dbg !15983
  %port_stop25 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %17, i32 0, i32 35, !dbg !15984
  %18 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %port_stop25, align 8, !dbg !15984
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15985
  call void %18(%struct.ata_port* %19) #12, !dbg !15982
  br label %if.end26, !dbg !15982

if.end26:                                         ; preds = %if.then23, %for.body
  br label %for.inc, !dbg !15986

for.inc:                                          ; preds = %if.end26
  %20 = load i32, i32* %i, align 4, !dbg !15987
  %inc = add i32 %20, 1, !dbg !15987
  store i32 %inc, i32* %i, align 4, !dbg !15987
  br label %for.cond, !dbg !15988, !llvm.loop !15989

for.end:                                          ; preds = %for.cond
  %21 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15991
  %ops27 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %21, i32 0, i32 6, !dbg !15993
  %22 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops27, align 8, !dbg !15993
  %host_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %22, i32 0, i32 36, !dbg !15994
  %23 = load void (%struct.ata_host*)*, void (%struct.ata_host*)** %host_stop, align 8, !dbg !15994
  %tobool28 = icmp ne void (%struct.ata_host*)* %23, null, !dbg !15991
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !15995

if.then29:                                        ; preds = %for.end
  %24 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15996
  %ops30 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %24, i32 0, i32 6, !dbg !15997
  %25 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops30, align 8, !dbg !15997
  %host_stop31 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %25, i32 0, i32 36, !dbg !15998
  %26 = load void (%struct.ata_host*)*, void (%struct.ata_host*)** %host_stop31, align 8, !dbg !15998
  %27 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !15999
  call void %26(%struct.ata_host* %27) #12, !dbg !15996
  br label %if.end32, !dbg !15996

if.end32:                                         ; preds = %if.then29, %for.end
  ret void, !dbg !16000
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local void @ata_eh_freeze_port(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_host_init(%struct.ata_host* %host, %struct.device* %dev, %struct.ata_port_operations* %ops) #0 !dbg !7127 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8966, metadata !DIExpression()), !dbg !16001
  %host.addr = alloca %struct.ata_host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ops.addr = alloca %struct.ata_port_operations*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !16004, metadata !DIExpression()), !dbg !16005
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16006, metadata !DIExpression()), !dbg !16007
  store %struct.ata_port_operations* %ops, %struct.ata_port_operations** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_operations** %ops.addr, metadata !16008, metadata !DIExpression()), !dbg !16009
  br label %do.body, !dbg !16010

do.body:                                          ; preds = %entry
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16011
  %lock = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 0, !dbg !16011
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16012
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !16013
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !16013
  %3 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16011
  %lock1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 0, !dbg !16011
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !16011
  %rlock = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !16011
  %5 = bitcast %struct.spinlock* %lock1 to i8*, !dbg !16011
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !16011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 0, i1 false), !dbg !16011
  br label %do.end, !dbg !16011

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !16014

do.body2:                                         ; preds = %do.end
  %7 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16015
  %eh_mutex = getelementptr inbounds %struct.ata_host, %struct.ata_host* %7, i32 0, i32 9, !dbg !16015
  call void @__mutex_init(%struct.mutex* %eh_mutex, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93, i64 0, i64 0), %struct.lock_class_key* @ata_host_init.__key) #12, !dbg !16015
  br label %do.end3, !dbg !16015

do.end3:                                          ; preds = %do.body2
  %8 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16017
  %n_tags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %8, i32 0, i32 4, !dbg !16018
  store i32 32, i32* %n_tags, align 4, !dbg !16019
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16020
  %10 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16021
  %dev4 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 1, !dbg !16022
  store %struct.device* %9, %struct.device** %dev4, align 8, !dbg !16023
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops.addr, align 8, !dbg !16024
  %12 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16025
  %ops5 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %12, i32 0, i32 6, !dbg !16026
  store %struct.ata_port_operations* %11, %struct.ata_port_operations** %ops5, align 8, !dbg !16027
  %13 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16028
  %kref = getelementptr inbounds %struct.ata_host, %struct.ata_host* %13, i32 0, i32 8, !dbg !16029
  call void @kref_init(%struct.kref* %kref) #12, !dbg !16030
  ret void, !dbg !16031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__ata_port_probe(%struct.ata_port* %ap) #0 !dbg !16032 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !8979, metadata !DIExpression()), !dbg !16033
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !8987, metadata !DIExpression()), !dbg !16035
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8966, metadata !DIExpression()), !dbg !16036
  %ap.addr = alloca %struct.ata_port*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !16045, metadata !DIExpression()), !dbg !16046
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16047
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 25, !dbg !16048
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 11, !dbg !16049
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !16046
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16050, metadata !DIExpression()), !dbg !16051
  br label %do.body, !dbg !16052

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16053

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16054, metadata !DIExpression()), !dbg !16056
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16057, metadata !DIExpression()), !dbg !16056
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16056
  %conv = zext i1 %cmp to i32, !dbg !16056
  store i32 1, i32* %tmp, align 4, !dbg !16056
  %1 = load i32, i32* %tmp, align 4, !dbg !16056
  br label %do.body2, !dbg !16058

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !16059

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16060

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !16062, metadata !DIExpression()), !dbg !16065
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16066, metadata !DIExpression()), !dbg !16065
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16065
  %conv8 = zext i1 %cmp7 to i32, !dbg !16065
  store i32 1, i32* %tmp9, align 4, !dbg !16065
  %2 = load i32, i32* %tmp9, align 4, !dbg !16065
  %call = call i64 @arch_local_irq_save() #12, !dbg !16067
  store i64 %call, i64* %flags, align 8, !dbg !16067
  br label %do.end, !dbg !16067

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !16060

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !16059

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16068, !srcloc !16069
  br label %do.body12, !dbg !16068

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16070
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 2, !dbg !16070
  %4 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !16070
  store %struct.spinlock* %4, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16071
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !16072
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !16072
  br label %do.end14, !dbg !16070

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !16068

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !16059

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16058

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16053

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !16073
  %probe_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %7, i32 0, i32 6, !dbg !16074
  %8 = load i32, i32* %probe_mask, align 8, !dbg !16075
  %or = or i32 %8, 3, !dbg !16075
  store i32 %or, i32* %probe_mask, align 8, !dbg !16075
  %9 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !16076
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %9, i32 0, i32 3, !dbg !16077
  %10 = load i32, i32* %action, align 8, !dbg !16078
  %or19 = or i32 %10, 6, !dbg !16078
  store i32 %or19, i32* %action, align 8, !dbg !16078
  %11 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !16079
  %flags20 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %11, i32 0, i32 5, !dbg !16080
  %12 = load i32, i32* %flags20, align 4, !dbg !16081
  %or21 = or i32 %12, 12, !dbg !16081
  store i32 %or21, i32* %flags20, align 4, !dbg !16081
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16082
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 4, !dbg !16083
  %14 = load i32, i32* %pflags, align 32, !dbg !16084
  %and = and i32 %14, -129, !dbg !16084
  store i32 %and, i32* %pflags, align 32, !dbg !16084
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16085
  %pflags22 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 4, !dbg !16086
  %16 = load i32, i32* %pflags22, align 32, !dbg !16087
  %or23 = or i32 %16, 16, !dbg !16087
  store i32 %or23, i32* %pflags22, align 32, !dbg !16087
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16088
  call void @ata_port_schedule_eh(%struct.ata_port* %17) #12, !dbg !16089
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16090
  %lock24 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 2, !dbg !16091
  %19 = load %struct.spinlock*, %struct.spinlock** %lock24, align 16, !dbg !16091
  %20 = load i64, i64* %flags, align 8, !dbg !16092
  store %struct.spinlock* %19, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !16093
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !16093
  store i32 1, i32* %tmp.i, align 4, !dbg !16093
  %21 = load i32, i32* %tmp.i, align 4, !dbg !16093
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !16094
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !16094
  store i32 1, i32* %tmp8.i, align 4, !dbg !16094
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !16094
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !16095
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !16095
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16096, !srcloc !9110
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !16097
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !16097
  %rlock.i26 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !16097
  ret void, !dbg !16098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_port_probe(%struct.ata_port* %ap) #0 !dbg !16099 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %rc = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !16100, metadata !DIExpression()), !dbg !16101
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16102, metadata !DIExpression()), !dbg !16103
  store i32 0, i32* %rc, align 4, !dbg !16103
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16104
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !16106
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !16106
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !16107
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !16107
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !16104
  br i1 %tobool, label %if.then, label %if.else, !dbg !16108

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16109
  call void @__ata_port_probe(%struct.ata_port* %3) #12, !dbg !16111
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16112
  call void @ata_port_wait_eh(%struct.ata_port* %4) #12, !dbg !16113
  br label %if.end, !dbg !16114

if.else:                                          ; preds = %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16115
  %call = call i32 @ata_bus_probe(%struct.ata_port* %5) #12, !dbg !16117
  store i32 %call, i32* %rc, align 4, !dbg !16118
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %rc, align 4, !dbg !16119
  ret i32 %6, !dbg !16120
}

; Function Attrs: noredzone
declare dso_local void @ata_port_wait_eh(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_host_register(%struct.ata_host* %host, %struct.scsi_host_template* %sht) #0 !dbg !16121 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !16124, metadata !DIExpression()), !dbg !16130
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !16143, metadata !DIExpression()), !dbg !16144
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !16145, metadata !DIExpression()), !dbg !16147
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16148, metadata !DIExpression()), !dbg !16149
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16150, metadata !DIExpression()), !dbg !16158
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16160, metadata !DIExpression()), !dbg !16161
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16162, metadata !DIExpression()), !dbg !16163
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %sht.addr = alloca %struct.scsi_host_template*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %__UNIQUE_ID___x375 = alloca i32, align 4
  %__UNIQUE_ID___x373 = alloca i32, align 4
  %__UNIQUE_ID___y374 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y376 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp17 = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %xfer_mask = alloca i64, align 8
  %ap109 = alloca %struct.ata_port*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !16164, metadata !DIExpression()), !dbg !16165
  store %struct.scsi_host_template* %sht, %struct.scsi_host_template** %sht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %sht.addr, metadata !16166, metadata !DIExpression()), !dbg !16167
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16168, metadata !DIExpression()), !dbg !16169
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16170, metadata !DIExpression()), !dbg !16171
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x375, metadata !16172, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x373, metadata !16175, metadata !DIExpression()), !dbg !16177
  %0 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !16177
  %can_queue = getelementptr inbounds %struct.scsi_host_template, %struct.scsi_host_template* %0, i32 0, i32 31, !dbg !16177
  %1 = load i32, i32* %can_queue, align 8, !dbg !16177
  store i32 %1, i32* %__UNIQUE_ID___x373, align 4, !dbg !16177
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y374, metadata !16178, metadata !DIExpression()), !dbg !16177
  store i32 1, i32* %__UNIQUE_ID___y374, align 4, !dbg !16177
  %2 = load i32, i32* %__UNIQUE_ID___x373, align 4, !dbg !16177
  %3 = load i32, i32* %__UNIQUE_ID___y374, align 4, !dbg !16177
  %cmp = icmp sgt i32 %2, %3, !dbg !16177
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16177

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x373, align 4, !dbg !16177
  br label %cond.end, !dbg !16177

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y374, align 4, !dbg !16177
  br label %cond.end, !dbg !16177

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !16177
  store i32 %cond, i32* %tmp, align 4, !dbg !16177
  %6 = load i32, i32* %tmp, align 4, !dbg !16177
  store i32 %6, i32* %__UNIQUE_ID___x375, align 4, !dbg !16174
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y376, metadata !16179, metadata !DIExpression()), !dbg !16174
  store i32 32, i32* %__UNIQUE_ID___y376, align 4, !dbg !16174
  %7 = load i32, i32* %__UNIQUE_ID___x375, align 4, !dbg !16174
  %8 = load i32, i32* %__UNIQUE_ID___y376, align 4, !dbg !16174
  %cmp2 = icmp slt i32 %7, %8, !dbg !16174
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !16174

cond.true3:                                       ; preds = %cond.end
  %9 = load i32, i32* %__UNIQUE_ID___x375, align 4, !dbg !16174
  br label %cond.end5, !dbg !16174

cond.false4:                                      ; preds = %cond.end
  %10 = load i32, i32* %__UNIQUE_ID___y376, align 4, !dbg !16174
  br label %cond.end5, !dbg !16174

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ %9, %cond.true3 ], [ %10, %cond.false4 ], !dbg !16174
  store i32 %cond6, i32* %tmp1, align 4, !dbg !16174
  %11 = load i32, i32* %tmp1, align 4, !dbg !16174
  %12 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16180
  %n_tags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %12, i32 0, i32 4, !dbg !16181
  store i32 %11, i32* %n_tags, align 4, !dbg !16182
  %13 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16183
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %13, i32 0, i32 7, !dbg !16185
  %14 = load i64, i64* %flags, align 8, !dbg !16185
  %and = and i64 %14, 2, !dbg !16186
  %tobool = icmp ne i64 %and, 0, !dbg !16186
  br i1 %tobool, label %if.end24, label %if.then, !dbg !16187

if.then:                                          ; preds = %cond.end5
  %15 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16188
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %15, i32 0, i32 1, !dbg !16188
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16188
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.95, i64 0, i64 0)) #13, !dbg !16188
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16190, metadata !DIExpression()), !dbg !16192
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !16192
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !16193
  %tobool7 = icmp ne i32 %17, 0, !dbg !16193
  %lnot = xor i1 %tobool7, true, !dbg !16193
  %lnot8 = xor i1 %lnot, true, !dbg !16193
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !16193
  %conv = sext i32 %lnot.ext to i64, !dbg !16193
  %tobool9 = icmp ne i64 %conv, 0, !dbg !16193
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !16192

if.then10:                                        ; preds = %if.then
  br label %do.body, !dbg !16193

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !16195

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !16197

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !16195

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 5719, i32 2305, i64 12) #7, !dbg !16199, !srcloc !16201
  br label %do.end13, !dbg !16199

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 377) #7, !dbg !16202, !srcloc !16204
  br label %do.body14, !dbg !16195

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !16205

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !16195

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !16195

if.end:                                           ; preds = %do.end16, %if.then
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !16192
  %tobool18 = icmp ne i32 %18, 0, !dbg !16192
  %lnot19 = xor i1 %tobool18, true, !dbg !16192
  %lnot21 = xor i1 %lnot19, true, !dbg !16192
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !16192
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !16192
  store i64 %conv23, i64* %tmp17, align 8, !dbg !16193
  %19 = load i64, i64* %tmp17, align 8, !dbg !16192
  store i32 -22, i32* %retval, align 4, !dbg !16207
  br label %return, !dbg !16207

if.end24:                                         ; preds = %cond.end5
  %20 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16208
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %20, i32 0, i32 3, !dbg !16210
  %21 = load i32, i32* %n_ports, align 8, !dbg !16210
  store i32 %21, i32* %i, align 4, !dbg !16211
  br label %for.cond, !dbg !16212

for.cond:                                         ; preds = %for.inc, %if.end24
  %22 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16213
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %22, i32 0, i32 12, !dbg !16215
  %23 = load i32, i32* %i, align 4, !dbg !16216
  %idxprom = sext i32 %23 to i64, !dbg !16213
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !16213
  %24 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !16213
  %tobool25 = icmp ne %struct.ata_port* %24, null, !dbg !16217
  br i1 %tobool25, label %for.body, label %for.end, !dbg !16217

for.body:                                         ; preds = %for.cond
  %25 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16218
  %ports26 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %25, i32 0, i32 12, !dbg !16219
  %26 = load i32, i32* %i, align 4, !dbg !16220
  %idxprom27 = sext i32 %26 to i64, !dbg !16218
  %arrayidx28 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports26, i64 0, i64 %idxprom27, !dbg !16218
  %27 = load %struct.ata_port*, %struct.ata_port** %arrayidx28, align 8, !dbg !16218
  %28 = bitcast %struct.ata_port* %27 to i8*, !dbg !16218
  call void @kfree(i8* %28) #12, !dbg !16221
  br label %for.inc, !dbg !16221

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !16222
  %inc = add i32 %29, 1, !dbg !16222
  store i32 %inc, i32* %i, align 4, !dbg !16222
  br label %for.cond, !dbg !16223, !llvm.loop !16224

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !16226
  br label %for.cond29, !dbg !16227

for.cond29:                                       ; preds = %for.inc40, %for.end
  %30 = load i32, i32* %i, align 4, !dbg !16228
  %31 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16229
  %n_ports30 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %31, i32 0, i32 3, !dbg !16230
  %32 = load i32, i32* %n_ports30, align 8, !dbg !16230
  %cmp31 = icmp ult i32 %30, %32, !dbg !16231
  br i1 %cmp31, label %for.body33, label %for.end42, !dbg !16232

for.body33:                                       ; preds = %for.cond29
  store %struct.atomic_t* @ata_print_id, %struct.atomic_t** %v.addr.i, align 8
  %33 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16233
  %34 = bitcast %struct.atomic_t* %33 to i8*, !dbg !16233
  store i8* %34, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %35 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16234
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !16235
  %conv.i.i = trunc i64 %36 to i32, !dbg !16235
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %35, i32 %conv.i.i) #14, !dbg !16236
  %37 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16237
  %38 = load i64, i64* %size.addr.i.i, align 8, !dbg !16237
  call void @kcsan_check_access(i8* %37, i64 %38, i32 7) #14, !dbg !16237
  %39 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16238
  store %struct.atomic_t* %39, %struct.atomic_t** %v.addr.i1.i, align 8
  %40 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16239
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %40, %struct.atomic_t** %v.addr.i.i.i, align 8
  %41 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !16240
  %42 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !16147
  store i32 %42, i32* %__ret.i.i.i, align 4, !dbg !16147
  %43 = load i32, i32* %__ret.i.i.i, align 4, !dbg !16147
  %44 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !16147
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %44, i32 0, i32 0, !dbg !16147
  %45 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %43, i32* %counter.i.i.i) #7, !dbg !16147, !srcloc !16241
  store i32 %45, i32* %__ret.i.i.i, align 4, !dbg !16147
  %46 = load i32, i32* %__ret.i.i.i, align 4, !dbg !16147
  store i32 %46, i32* %tmp.i.i.i, align 4, !dbg !16147
  %47 = load i32, i32* %tmp.i.i.i, align 4, !dbg !16147
  %add.i.i.i = add i32 %41, %47, !dbg !16242
  %48 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16243
  %ports34 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %48, i32 0, i32 12, !dbg !16244
  %49 = load i32, i32* %i, align 4, !dbg !16245
  %idxprom35 = sext i32 %49 to i64, !dbg !16243
  %arrayidx36 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports34, i64 0, i64 %idxprom35, !dbg !16243
  %50 = load %struct.ata_port*, %struct.ata_port** %arrayidx36, align 8, !dbg !16243
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %50, i32 0, i32 5, !dbg !16246
  store i32 %add.i.i.i, i32* %print_id, align 4, !dbg !16247
  %51 = load i32, i32* %i, align 4, !dbg !16248
  %add = add i32 %51, 1, !dbg !16249
  %52 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16250
  %ports37 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %52, i32 0, i32 12, !dbg !16251
  %53 = load i32, i32* %i, align 4, !dbg !16252
  %idxprom38 = sext i32 %53 to i64, !dbg !16250
  %arrayidx39 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports37, i64 0, i64 %idxprom38, !dbg !16250
  %54 = load %struct.ata_port*, %struct.ata_port** %arrayidx39, align 8, !dbg !16250
  %local_port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %54, i32 0, i32 6, !dbg !16253
  store i32 %add, i32* %local_port_no, align 8, !dbg !16254
  br label %for.inc40, !dbg !16255

for.inc40:                                        ; preds = %for.body33
  %55 = load i32, i32* %i, align 4, !dbg !16256
  %inc41 = add i32 %55, 1, !dbg !16256
  store i32 %inc41, i32* %i, align 4, !dbg !16256
  br label %for.cond29, !dbg !16257, !llvm.loop !16258

for.end42:                                        ; preds = %for.cond29
  store i32 0, i32* %i, align 4, !dbg !16260
  br label %for.cond43, !dbg !16262

for.cond43:                                       ; preds = %for.inc56, %for.end42
  %56 = load i32, i32* %i, align 4, !dbg !16263
  %57 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16265
  %n_ports44 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %57, i32 0, i32 3, !dbg !16266
  %58 = load i32, i32* %n_ports44, align 8, !dbg !16266
  %cmp45 = icmp ult i32 %56, %58, !dbg !16267
  br i1 %cmp45, label %for.body47, label %for.end58, !dbg !16268

for.body47:                                       ; preds = %for.cond43
  %59 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16269
  %dev48 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %59, i32 0, i32 1, !dbg !16271
  %60 = load %struct.device*, %struct.device** %dev48, align 8, !dbg !16271
  %61 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16272
  %ports49 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %61, i32 0, i32 12, !dbg !16273
  %62 = load i32, i32* %i, align 4, !dbg !16274
  %idxprom50 = sext i32 %62 to i64, !dbg !16272
  %arrayidx51 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports49, i64 0, i64 %idxprom50, !dbg !16272
  %63 = load %struct.ata_port*, %struct.ata_port** %arrayidx51, align 8, !dbg !16272
  %call52 = call i32 @ata_tport_add(%struct.device* %60, %struct.ata_port* %63) #12, !dbg !16275
  store i32 %call52, i32* %rc, align 4, !dbg !16276
  %64 = load i32, i32* %rc, align 4, !dbg !16277
  %tobool53 = icmp ne i32 %64, 0, !dbg !16277
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !16279

if.then54:                                        ; preds = %for.body47
  br label %err_tadd, !dbg !16280

if.end55:                                         ; preds = %for.body47
  br label %for.inc56, !dbg !16282

for.inc56:                                        ; preds = %if.end55
  %65 = load i32, i32* %i, align 4, !dbg !16283
  %inc57 = add i32 %65, 1, !dbg !16283
  store i32 %inc57, i32* %i, align 4, !dbg !16283
  br label %for.cond43, !dbg !16284, !llvm.loop !16285

for.end58:                                        ; preds = %for.cond43
  %66 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16287
  %67 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !16288
  %call59 = call i32 @ata_scsi_add_hosts(%struct.ata_host* %66, %struct.scsi_host_template* %67) #12, !dbg !16289
  store i32 %call59, i32* %rc, align 4, !dbg !16290
  %68 = load i32, i32* %rc, align 4, !dbg !16291
  %tobool60 = icmp ne i32 %68, 0, !dbg !16291
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !16293

if.then61:                                        ; preds = %for.end58
  br label %err_tadd, !dbg !16294

if.end62:                                         ; preds = %for.end58
  store i32 0, i32* %i, align 4, !dbg !16295
  br label %for.cond63, !dbg !16297

for.cond63:                                       ; preds = %for.inc101, %if.end62
  %69 = load i32, i32* %i, align 4, !dbg !16298
  %70 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16300
  %n_ports64 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %70, i32 0, i32 3, !dbg !16301
  %71 = load i32, i32* %n_ports64, align 8, !dbg !16301
  %cmp65 = icmp ult i32 %69, %71, !dbg !16302
  br i1 %cmp65, label %for.body67, label %for.end103, !dbg !16303

for.body67:                                       ; preds = %for.cond63
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !16304, metadata !DIExpression()), !dbg !16306
  %72 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16307
  %ports68 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %72, i32 0, i32 12, !dbg !16308
  %73 = load i32, i32* %i, align 4, !dbg !16309
  %idxprom69 = sext i32 %73 to i64, !dbg !16307
  %arrayidx70 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports68, i64 0, i64 %idxprom69, !dbg !16307
  %74 = load %struct.ata_port*, %struct.ata_port** %arrayidx70, align 8, !dbg !16307
  store %struct.ata_port* %74, %struct.ata_port** %ap, align 8, !dbg !16306
  call void @llvm.dbg.declare(metadata i64* %xfer_mask, metadata !16310, metadata !DIExpression()), !dbg !16311
  %75 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16312
  %cbl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %75, i32 0, i32 18, !dbg !16314
  %76 = load i32, i32* %cbl, align 4, !dbg !16314
  %cmp71 = icmp eq i32 %76, 0, !dbg !16315
  br i1 %cmp71, label %land.lhs.true, label %if.end78, !dbg !16316

land.lhs.true:                                    ; preds = %for.body67
  %77 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16317
  %flags73 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %77, i32 0, i32 3, !dbg !16318
  %78 = load i64, i64* %flags73, align 8, !dbg !16318
  %and74 = and i64 %78, 2, !dbg !16319
  %tobool75 = icmp ne i64 %and74, 0, !dbg !16319
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !16320

if.then76:                                        ; preds = %land.lhs.true
  %79 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16321
  %cbl77 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %79, i32 0, i32 18, !dbg !16322
  store i32 6, i32* %cbl77, align 4, !dbg !16323
  br label %if.end78, !dbg !16321

if.end78:                                         ; preds = %if.then76, %land.lhs.true, %for.body67
  %80 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16324
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %80, i32 0, i32 25, !dbg !16325
  %call79 = call i32 @sata_link_init_spd(%struct.ata_link* %link) #12, !dbg !16326
  %81 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16327
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %81, i32 0, i32 26, !dbg !16329
  %82 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !16329
  %tobool80 = icmp ne %struct.ata_link* %82, null, !dbg !16327
  br i1 %tobool80, label %if.then81, label %if.end84, !dbg !16330

if.then81:                                        ; preds = %if.end78
  %83 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16331
  %slave_link82 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %83, i32 0, i32 26, !dbg !16332
  %84 = load %struct.ata_link*, %struct.ata_link** %slave_link82, align 64, !dbg !16332
  %call83 = call i32 @sata_link_init_spd(%struct.ata_link* %84) #12, !dbg !16333
  br label %if.end84, !dbg !16333

if.end84:                                         ; preds = %if.then81, %if.end78
  %85 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16334
  %pio_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %85, i32 0, i32 15, !dbg !16335
  %86 = load i32, i32* %pio_mask, align 32, !dbg !16335
  %conv85 = zext i32 %86 to i64, !dbg !16334
  %87 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16336
  %mwdma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %87, i32 0, i32 16, !dbg !16337
  %88 = load i32, i32* %mwdma_mask, align 4, !dbg !16337
  %conv86 = zext i32 %88 to i64, !dbg !16336
  %89 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16338
  %udma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %89, i32 0, i32 17, !dbg !16339
  %90 = load i32, i32* %udma_mask, align 8, !dbg !16339
  %conv87 = zext i32 %90 to i64, !dbg !16338
  %call88 = call i64 @ata_pack_xfermask(i64 %conv85, i64 %conv86, i64 %conv87) #12, !dbg !16340
  store i64 %call88, i64* %xfer_mask, align 8, !dbg !16341
  %91 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16342
  %call89 = call i32 @ata_port_is_dummy(%struct.ata_port* %91) #12, !dbg !16344
  %tobool90 = icmp ne i32 %call89, 0, !dbg !16344
  br i1 %tobool90, label %if.else, label %if.then91, !dbg !16345

if.then91:                                        ; preds = %if.end84
  %92 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16346
  %93 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16346
  %flags92 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %93, i32 0, i32 3, !dbg !16346
  %94 = load i64, i64* %flags92, align 8, !dbg !16346
  %and93 = and i64 %94, 2, !dbg !16346
  %tobool94 = icmp ne i64 %and93, 0, !dbg !16346
  %95 = zext i1 %tobool94 to i64, !dbg !16346
  %cond95 = select i1 %tobool94, i32 83, i32 80, !dbg !16346
  %96 = load i64, i64* %xfer_mask, align 8, !dbg !16346
  %call96 = call i8* @ata_mode_string(i64 %96) #12, !dbg !16346
  %97 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16346
  %link97 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %97, i32 0, i32 25, !dbg !16346
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link97, i32 0, i32 11, !dbg !16346
  %desc = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %eh_info, i32 0, i32 7, !dbg !16346
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %desc, i64 0, i64 0, !dbg !16346
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %92, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.96, i64 0, i64 0), i32 %cond95, i8* %call96, i8* %arraydecay) #12, !dbg !16346
  %98 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16348
  %link98 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %98, i32 0, i32 25, !dbg !16349
  %eh_info99 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link98, i32 0, i32 11, !dbg !16350
  call void @ata_ehi_clear_desc(%struct.ata_eh_info* %eh_info99) #12, !dbg !16351
  br label %if.end100, !dbg !16352

if.else:                                          ; preds = %if.end84
  %99 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16353
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %99, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.97, i64 0, i64 0)) #12, !dbg !16353
  br label %if.end100

if.end100:                                        ; preds = %if.else, %if.then91
  br label %for.inc101, !dbg !16354

for.inc101:                                       ; preds = %if.end100
  %100 = load i32, i32* %i, align 4, !dbg !16355
  %inc102 = add i32 %100, 1, !dbg !16355
  store i32 %inc102, i32* %i, align 4, !dbg !16355
  br label %for.cond63, !dbg !16356, !llvm.loop !16357

for.end103:                                       ; preds = %for.cond63
  store i32 0, i32* %i, align 4, !dbg !16359
  br label %for.cond104, !dbg !16361

for.cond104:                                      ; preds = %for.inc114, %for.end103
  %101 = load i32, i32* %i, align 4, !dbg !16362
  %102 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16364
  %n_ports105 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %102, i32 0, i32 3, !dbg !16365
  %103 = load i32, i32* %n_ports105, align 8, !dbg !16365
  %cmp106 = icmp ult i32 %101, %103, !dbg !16366
  br i1 %cmp106, label %for.body108, label %for.end116, !dbg !16367

for.body108:                                      ; preds = %for.cond104
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap109, metadata !16368, metadata !DIExpression()), !dbg !16370
  %104 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16371
  %ports110 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %104, i32 0, i32 12, !dbg !16372
  %105 = load i32, i32* %i, align 4, !dbg !16373
  %idxprom111 = sext i32 %105 to i64, !dbg !16371
  %arrayidx112 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports110, i64 0, i64 %idxprom111, !dbg !16371
  %106 = load %struct.ata_port*, %struct.ata_port** %arrayidx112, align 8, !dbg !16371
  store %struct.ata_port* %106, %struct.ata_port** %ap109, align 8, !dbg !16370
  %107 = load %struct.ata_port*, %struct.ata_port** %ap109, align 8, !dbg !16374
  %108 = bitcast %struct.ata_port* %107 to i8*, !dbg !16374
  %call113 = call i64 @async_schedule(void (i8*, i64)* @async_port_probe, i8* %108) #12, !dbg !16375
  %109 = load %struct.ata_port*, %struct.ata_port** %ap109, align 8, !dbg !16376
  %cookie = getelementptr inbounds %struct.ata_port, %struct.ata_port* %109, i32 0, i32 47, !dbg !16377
  store i64 %call113, i64* %cookie, align 16, !dbg !16378
  br label %for.inc114, !dbg !16379

for.inc114:                                       ; preds = %for.body108
  %110 = load i32, i32* %i, align 4, !dbg !16380
  %inc115 = add i32 %110, 1, !dbg !16380
  store i32 %inc115, i32* %i, align 4, !dbg !16380
  br label %for.cond104, !dbg !16381, !llvm.loop !16382

for.end116:                                       ; preds = %for.cond104
  store i32 0, i32* %retval, align 4, !dbg !16384
  br label %return, !dbg !16384

err_tadd:                                         ; preds = %if.then61, %if.then54
  call void @llvm.dbg.label(metadata !16385), !dbg !16386
  br label %while.cond, !dbg !16387

while.cond:                                       ; preds = %while.body, %err_tadd
  %111 = load i32, i32* %i, align 4, !dbg !16388
  %dec = add i32 %111, -1, !dbg !16388
  store i32 %dec, i32* %i, align 4, !dbg !16388
  %cmp117 = icmp sge i32 %dec, 0, !dbg !16389
  br i1 %cmp117, label %while.body, label %while.end, !dbg !16387

while.body:                                       ; preds = %while.cond
  %112 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16390
  %ports119 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %112, i32 0, i32 12, !dbg !16392
  %113 = load i32, i32* %i, align 4, !dbg !16393
  %idxprom120 = sext i32 %113 to i64, !dbg !16390
  %arrayidx121 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports119, i64 0, i64 %idxprom120, !dbg !16390
  %114 = load %struct.ata_port*, %struct.ata_port** %arrayidx121, align 8, !dbg !16390
  call void @ata_tport_delete(%struct.ata_port* %114) #12, !dbg !16394
  br label %while.cond, !dbg !16387, !llvm.loop !16395

while.end:                                        ; preds = %while.cond
  %115 = load i32, i32* %rc, align 4, !dbg !16397
  store i32 %115, i32* %retval, align 4, !dbg !16398
  br label %return, !dbg !16398

return:                                           ; preds = %while.end, %for.end116, %if.end
  %116 = load i32, i32* %retval, align 4, !dbg !16399
  ret i32 %116, !dbg !16399
}

; Function Attrs: noredzone
declare dso_local i32 @ata_tport_add(%struct.device*, %struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_scsi_add_hosts(%struct.ata_host*, %struct.scsi_host_template*) #1

; Function Attrs: noredzone
declare dso_local void @ata_ehi_clear_desc(%struct.ata_eh_info*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @async_schedule(void (i8*, i64)* %func, i8* %data) #0 !dbg !16400 {
entry:
  %func.addr = alloca void (i8*, i64)*, align 8
  %data.addr = alloca i8*, align 8
  store void (i8*, i64)* %func, void (i8*, i64)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i64)** %func.addr, metadata !16407, metadata !DIExpression()), !dbg !16408
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16409, metadata !DIExpression()), !dbg !16410
  %0 = load void (i8*, i64)*, void (i8*, i64)** %func.addr, align 8, !dbg !16411
  %1 = load i8*, i8** %data.addr, align 8, !dbg !16412
  %call = call i64 @async_schedule_node(void (i8*, i64)* %0, i8* %1, i32 -1) #12, !dbg !16413
  ret i64 %call, !dbg !16414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @async_port_probe(i8* %data, i64 %cookie) #0 !dbg !16415 {
entry:
  %data.addr = alloca i8*, align 8
  %cookie.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16416, metadata !DIExpression()), !dbg !16417
  store i64 %cookie, i64* %cookie.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cookie.addr, metadata !16418, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !16420, metadata !DIExpression()), !dbg !16421
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16422
  %1 = bitcast i8* %0 to %struct.ata_port*, !dbg !16422
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !16421
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16423
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 31, !dbg !16425
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !16425
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 7, !dbg !16426
  %4 = load i64, i64* %flags, align 8, !dbg !16426
  %and = and i64 %4, 4, !dbg !16427
  %tobool = icmp ne i64 %and, 0, !dbg !16427
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !16428

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16429
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 7, !dbg !16430
  %6 = load i32, i32* %port_no, align 4, !dbg !16430
  %cmp = icmp ne i32 %6, 0, !dbg !16431
  br i1 %cmp, label %if.then, label %if.end, !dbg !16432

if.then:                                          ; preds = %land.lhs.true
  %7 = load i64, i64* %cookie.addr, align 8, !dbg !16433
  call void @async_synchronize_cookie(i64 %7) #12, !dbg !16434
  br label %if.end, !dbg !16434

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16435
  %call = call i32 @ata_port_probe(%struct.ata_port* %8) #12, !dbg !16436
  %9 = load i64, i64* %cookie.addr, align 8, !dbg !16437
  call void @async_synchronize_cookie(i64 %9) #12, !dbg !16438
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16439
  call void @ata_scsi_scan_host(%struct.ata_port* %10, i32 1) #12, !dbg !16440
  ret void, !dbg !16441
}

; Function Attrs: noredzone
declare dso_local void @ata_tport_delete(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_host_activate(%struct.ata_host* %host, i32 %irq, i32 (i32, i8*)* %irq_handler, i64 %irq_flags, %struct.scsi_host_template* %sht) #0 !dbg !16442 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %irq.addr = alloca i32, align 4
  %irq_handler.addr = alloca i32 (i32, i8*)*, align 8
  %irq_flags.addr = alloca i64, align 8
  %sht.addr = alloca %struct.scsi_host_template*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %irq_desc = alloca i8*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !16450, metadata !DIExpression()), !dbg !16451
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !16452, metadata !DIExpression()), !dbg !16453
  store i32 (i32, i8*)* %irq_handler, i32 (i32, i8*)** %irq_handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %irq_handler.addr, metadata !16454, metadata !DIExpression()), !dbg !16455
  store i64 %irq_flags, i64* %irq_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irq_flags.addr, metadata !16456, metadata !DIExpression()), !dbg !16457
  store %struct.scsi_host_template* %sht, %struct.scsi_host_template** %sht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %sht.addr, metadata !16458, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16460, metadata !DIExpression()), !dbg !16461
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16462, metadata !DIExpression()), !dbg !16463
  call void @llvm.dbg.declare(metadata i8** %irq_desc, metadata !16464, metadata !DIExpression()), !dbg !16465
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16466
  %call = call i32 @ata_host_start(%struct.ata_host* %0) #12, !dbg !16467
  store i32 %call, i32* %rc, align 4, !dbg !16468
  %1 = load i32, i32* %rc, align 4, !dbg !16469
  %tobool = icmp ne i32 %1, 0, !dbg !16469
  br i1 %tobool, label %if.then, label %if.end, !dbg !16471

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !16472
  store i32 %2, i32* %retval, align 4, !dbg !16473
  br label %return, !dbg !16473

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %irq.addr, align 4, !dbg !16474
  %tobool1 = icmp ne i32 %3, 0, !dbg !16474
  br i1 %tobool1, label %if.end26, label %if.then2, !dbg !16476

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16477, metadata !DIExpression()), !dbg !16480
  %4 = load i32 (i32, i8*)*, i32 (i32, i8*)** %irq_handler.addr, align 8, !dbg !16480
  %tobool3 = icmp ne i32 (i32, i8*)* %4, null, !dbg !16480
  %lnot = xor i1 %tobool3, true, !dbg !16480
  %lnot4 = xor i1 %lnot, true, !dbg !16480
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !16480
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16480
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !16481
  %tobool5 = icmp ne i32 %5, 0, !dbg !16481
  %lnot6 = xor i1 %tobool5, true, !dbg !16481
  %lnot8 = xor i1 %lnot6, true, !dbg !16481
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !16481
  %conv = sext i32 %lnot.ext9 to i64, !dbg !16481
  %tobool10 = icmp ne i64 %conv, 0, !dbg !16481
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !16480

if.then11:                                        ; preds = %if.then2
  br label %do.body, !dbg !16481

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !16483

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !16485

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !16483

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 5829, i32 2305, i64 12) #7, !dbg !16487, !srcloc !16489
  br label %do.end14, !dbg !16487

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 378) #7, !dbg !16490, !srcloc !16492
  br label %do.body15, !dbg !16483

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !16493

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !16483

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !16483

if.end18:                                         ; preds = %do.end17, %if.then2
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !16480
  %tobool19 = icmp ne i32 %6, 0, !dbg !16480
  %lnot20 = xor i1 %tobool19, true, !dbg !16480
  %lnot22 = xor i1 %lnot20, true, !dbg !16480
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !16480
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !16480
  store i64 %conv24, i64* %tmp, align 8, !dbg !16481
  %7 = load i64, i64* %tmp, align 8, !dbg !16480
  %8 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16495
  %9 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !16496
  %call25 = call i32 @ata_host_register(%struct.ata_host* %8, %struct.scsi_host_template* %9) #12, !dbg !16497
  store i32 %call25, i32* %retval, align 4, !dbg !16498
  br label %return, !dbg !16498

if.end26:                                         ; preds = %if.end
  %10 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16499
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 1, !dbg !16500
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16500
  %12 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16501
  %dev27 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %12, i32 0, i32 1, !dbg !16502
  %13 = load %struct.device*, %struct.device** %dev27, align 8, !dbg !16502
  %call28 = call i8* @dev_driver_string(%struct.device* %13) #12, !dbg !16503
  %14 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16504
  %dev29 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %14, i32 0, i32 1, !dbg !16505
  %15 = load %struct.device*, %struct.device** %dev29, align 8, !dbg !16505
  %call30 = call i8* @dev_name(%struct.device* %15) #12, !dbg !16506
  %call31 = call noalias i8* (%struct.device*, i32, i8*, ...) @devm_kasprintf(%struct.device* %11, i32 3264, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i8* %call28, i8* %call30) #12, !dbg !16507
  store i8* %call31, i8** %irq_desc, align 8, !dbg !16508
  %16 = load i8*, i8** %irq_desc, align 8, !dbg !16509
  %tobool32 = icmp ne i8* %16, null, !dbg !16509
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !16511

if.then33:                                        ; preds = %if.end26
  store i32 -12, i32* %retval, align 4, !dbg !16512
  br label %return, !dbg !16512

if.end34:                                         ; preds = %if.end26
  %17 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16513
  %dev35 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %17, i32 0, i32 1, !dbg !16514
  %18 = load %struct.device*, %struct.device** %dev35, align 8, !dbg !16514
  %19 = load i32, i32* %irq.addr, align 4, !dbg !16515
  %20 = load i32 (i32, i8*)*, i32 (i32, i8*)** %irq_handler.addr, align 8, !dbg !16516
  %21 = load i64, i64* %irq_flags.addr, align 8, !dbg !16517
  %22 = load i8*, i8** %irq_desc, align 8, !dbg !16518
  %23 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16519
  %24 = bitcast %struct.ata_host* %23 to i8*, !dbg !16519
  %call36 = call i32 @devm_request_irq(%struct.device* %18, i32 %19, i32 (i32, i8*)* %20, i64 %21, i8* %22, i8* %24) #12, !dbg !16520
  store i32 %call36, i32* %rc, align 4, !dbg !16521
  %25 = load i32, i32* %rc, align 4, !dbg !16522
  %tobool37 = icmp ne i32 %25, 0, !dbg !16522
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !16524

if.then38:                                        ; preds = %if.end34
  %26 = load i32, i32* %rc, align 4, !dbg !16525
  store i32 %26, i32* %retval, align 4, !dbg !16526
  br label %return, !dbg !16526

if.end39:                                         ; preds = %if.end34
  store i32 0, i32* %i, align 4, !dbg !16527
  br label %for.cond, !dbg !16529

for.cond:                                         ; preds = %for.inc, %if.end39
  %27 = load i32, i32* %i, align 4, !dbg !16530
  %28 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16532
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %28, i32 0, i32 3, !dbg !16533
  %29 = load i32, i32* %n_ports, align 8, !dbg !16533
  %cmp = icmp ult i32 %27, %29, !dbg !16534
  br i1 %cmp, label %for.body, label %for.end, !dbg !16535

for.body:                                         ; preds = %for.cond
  %30 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16536
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %30, i32 0, i32 12, !dbg !16537
  %31 = load i32, i32* %i, align 4, !dbg !16538
  %idxprom = sext i32 %31 to i64, !dbg !16536
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !16536
  %32 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !16536
  %33 = load i32, i32* %irq.addr, align 4, !dbg !16539
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), i32 %33) #12, !dbg !16540
  br label %for.inc, !dbg !16540

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !16541
  %inc = add i32 %34, 1, !dbg !16541
  store i32 %inc, i32* %i, align 4, !dbg !16541
  br label %for.cond, !dbg !16542, !llvm.loop !16543

for.end:                                          ; preds = %for.cond
  %35 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16545
  %36 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !16546
  %call41 = call i32 @ata_host_register(%struct.ata_host* %35, %struct.scsi_host_template* %36) #12, !dbg !16547
  store i32 %call41, i32* %rc, align 4, !dbg !16548
  %37 = load i32, i32* %rc, align 4, !dbg !16549
  %tobool42 = icmp ne i32 %37, 0, !dbg !16549
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !16551

if.then43:                                        ; preds = %for.end
  %38 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16552
  %dev44 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %38, i32 0, i32 1, !dbg !16553
  %39 = load %struct.device*, %struct.device** %dev44, align 8, !dbg !16553
  %40 = load i32, i32* %irq.addr, align 4, !dbg !16554
  %41 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16555
  %42 = bitcast %struct.ata_host* %41 to i8*, !dbg !16555
  call void @devm_free_irq(%struct.device* %39, i32 %40, i8* %42) #12, !dbg !16556
  br label %if.end45, !dbg !16556

if.end45:                                         ; preds = %if.then43, %for.end
  %43 = load i32, i32* %rc, align 4, !dbg !16557
  store i32 %43, i32* %retval, align 4, !dbg !16558
  br label %return, !dbg !16558

return:                                           ; preds = %if.end45, %if.then38, %if.then33, %if.end18, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !16559
  ret i32 %44, !dbg !16559
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kasprintf(%struct.device*, i32, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !16560 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16563, metadata !DIExpression()), !dbg !16564
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16565
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !16567
  %1 = load i8*, i8** %init_name, align 8, !dbg !16567
  %tobool = icmp ne i8* %1, null, !dbg !16565
  br i1 %tobool, label %if.then, label %if.end, !dbg !16568

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16569
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !16570
  %3 = load i8*, i8** %init_name1, align 8, !dbg !16570
  store i8* %3, i8** %retval, align 8, !dbg !16571
  br label %return, !dbg !16571

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16572
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !16573
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !16574
  store i8* %call, i8** %retval, align 8, !dbg !16575
  br label %return, !dbg !16575

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !16576
  ret i8* %5, !dbg !16576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_request_irq(%struct.device* %dev, i32 %irq, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !16577 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16580, metadata !DIExpression()), !dbg !16581
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !16582, metadata !DIExpression()), !dbg !16583
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !16584, metadata !DIExpression()), !dbg !16585
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !16586, metadata !DIExpression()), !dbg !16587
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !16588, metadata !DIExpression()), !dbg !16589
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !16590, metadata !DIExpression()), !dbg !16591
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16592
  %1 = load i32, i32* %irq.addr, align 4, !dbg !16593
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !16594
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !16595
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !16596
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !16597
  %call = call i32 @devm_request_threaded_irq(%struct.device* %0, i32 %1, i32 (i32, i8*)* %2, i32 (i32, i8*)* null, i64 %3, i8* %4, i8* %5) #12, !dbg !16598
  ret i32 %call, !dbg !16599
}

; Function Attrs: noredzone
declare dso_local void @ata_port_desc(%struct.ata_port*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local void @devm_free_irq(%struct.device*, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_host_detach(%struct.ata_host* %host) #0 !dbg !16600 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %i = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !16601, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16603, metadata !DIExpression()), !dbg !16604
  store i32 0, i32* %i, align 4, !dbg !16605
  br label %for.cond, !dbg !16607

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16608
  %1 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16610
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 3, !dbg !16611
  %2 = load i32, i32* %n_ports, align 8, !dbg !16611
  %cmp = icmp ult i32 %0, %2, !dbg !16612
  br i1 %cmp, label %for.body, label %for.end, !dbg !16613

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16614
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 12, !dbg !16616
  %4 = load i32, i32* %i, align 4, !dbg !16617
  %idxprom = sext i32 %4 to i64, !dbg !16614
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !16614
  %5 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !16614
  %cookie = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 47, !dbg !16618
  %6 = load i64, i64* %cookie, align 16, !dbg !16618
  %add = add i64 %6, 1, !dbg !16619
  call void @async_synchronize_cookie(i64 %add) #12, !dbg !16620
  %7 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16621
  %ports1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %7, i32 0, i32 12, !dbg !16622
  %8 = load i32, i32* %i, align 4, !dbg !16623
  %idxprom2 = sext i32 %8 to i64, !dbg !16621
  %arrayidx3 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports1, i64 0, i64 %idxprom2, !dbg !16621
  %9 = load %struct.ata_port*, %struct.ata_port** %arrayidx3, align 8, !dbg !16621
  call void @ata_port_detach(%struct.ata_port* %9) #12, !dbg !16624
  br label %for.inc, !dbg !16625

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !16626
  %inc = add i32 %10, 1, !dbg !16626
  store i32 %inc, i32* %i, align 4, !dbg !16626
  br label %for.cond, !dbg !16627, !llvm.loop !16628

for.end:                                          ; preds = %for.cond
  %11 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !16630
  call void @ata_acpi_dissociate(%struct.ata_host* %11) #12, !dbg !16631
  ret void, !dbg !16632
}

; Function Attrs: noredzone
declare dso_local void @async_synchronize_cookie(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_port_detach(%struct.ata_port* %ap) #0 !dbg !16633 {
entry:
  %lock.addr.i72 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i72, metadata !8979, metadata !DIExpression()), !dbg !16634
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !8987, metadata !DIExpression()), !dbg !16636
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8966, metadata !DIExpression()), !dbg !16637
  %ap.addr = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp41 = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !16644, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16646, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !16648, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !16650, metadata !DIExpression()), !dbg !16651
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16652
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !16654
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !16654
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !16655
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !16655
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !16652
  br i1 %tobool, label %if.end, label %if.then, !dbg !16656

if.then:                                          ; preds = %entry
  br label %skip_eh, !dbg !16657

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !16658

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !16659

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16660, metadata !DIExpression()), !dbg !16662
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16663, metadata !DIExpression()), !dbg !16662
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16662
  %conv = zext i1 %cmp to i32, !dbg !16662
  store i32 1, i32* %tmp, align 4, !dbg !16662
  %3 = load i32, i32* %tmp, align 4, !dbg !16662
  br label %do.body2, !dbg !16664

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !16665

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16666

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !16668, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16672, metadata !DIExpression()), !dbg !16671
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16671
  %conv8 = zext i1 %cmp7 to i32, !dbg !16671
  store i32 1, i32* %tmp9, align 4, !dbg !16671
  %4 = load i32, i32* %tmp9, align 4, !dbg !16671
  %call = call i64 @arch_local_irq_save() #12, !dbg !16673
  store i64 %call, i64* %flags, align 8, !dbg !16673
  br label %do.end, !dbg !16673

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !16666

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !16665

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16674, !srcloc !16675
  br label %do.body12, !dbg !16674

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16676
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 2, !dbg !16676
  %6 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !16676
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16677
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !16678
  %rlock.i = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !16678
  br label %do.end14, !dbg !16676

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !16674

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !16665

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16664

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16659

do.end18:                                         ; preds = %do.end17
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16679
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 4, !dbg !16680
  %10 = load i32, i32* %pflags, align 32, !dbg !16681
  %or = or i32 %10, 512, !dbg !16681
  store i32 %or, i32* %pflags, align 32, !dbg !16681
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16682
  call void @ata_port_schedule_eh(%struct.ata_port* %11) #12, !dbg !16683
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16684
  %lock19 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 2, !dbg !16685
  %13 = load %struct.spinlock*, %struct.spinlock** %lock19, align 16, !dbg !16685
  %14 = load i64, i64* %flags, align 8, !dbg !16686
  store %struct.spinlock* %13, %struct.spinlock** %lock.addr.i72, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !16687
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !16687
  store i32 1, i32* %tmp.i, align 4, !dbg !16687
  %15 = load i32, i32* %tmp.i, align 4, !dbg !16687
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !16688
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !16688
  store i32 1, i32* %tmp8.i, align 4, !dbg !16688
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !16688
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !16689
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !16689
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16690, !srcloc !9110
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i72, align 8, !dbg !16691
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !16691
  %rlock.i73 = bitcast %union.anon* %19 to %struct.raw_spinlock*, !dbg !16691
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16692
  call void @ata_port_wait_eh(%struct.ata_port* %20) #12, !dbg !16693
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16694, metadata !DIExpression()), !dbg !16696
  %21 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16696
  %pflags20 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 4, !dbg !16696
  %22 = load i32, i32* %pflags20, align 32, !dbg !16696
  %and = and i32 %22, 1024, !dbg !16696
  %tobool21 = icmp ne i32 %and, 0, !dbg !16696
  %lnot = xor i1 %tobool21, true, !dbg !16696
  %lnot22 = xor i1 %lnot, true, !dbg !16696
  %lnot23 = xor i1 %lnot22, true, !dbg !16696
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !16696
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16696
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !16697
  %tobool24 = icmp ne i32 %23, 0, !dbg !16697
  %lnot25 = xor i1 %tobool24, true, !dbg !16697
  %lnot27 = xor i1 %lnot25, true, !dbg !16697
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !16697
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !16697
  %tobool30 = icmp ne i64 %conv29, 0, !dbg !16697
  br i1 %tobool30, label %if.then31, label %if.end40, !dbg !16696

if.then31:                                        ; preds = %do.end18
  br label %do.body32, !dbg !16697

do.body32:                                        ; preds = %if.then31
  br label %do.body33, !dbg !16699

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !16701

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !16699

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 5886, i32 2305, i64 12) #7, !dbg !16703, !srcloc !16705
  br label %do.end36, !dbg !16703

do.end36:                                         ; preds = %do.body35
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 379) #7, !dbg !16706, !srcloc !16708
  br label %do.body37, !dbg !16699

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !16709

do.end38:                                         ; preds = %do.body37
  br label %do.end39, !dbg !16699

do.end39:                                         ; preds = %do.end38
  br label %if.end40, !dbg !16699

if.end40:                                         ; preds = %do.end39, %do.end18
  %24 = load i32, i32* %__ret_warn_on, align 4, !dbg !16696
  %tobool42 = icmp ne i32 %24, 0, !dbg !16696
  %lnot43 = xor i1 %tobool42, true, !dbg !16696
  %lnot45 = xor i1 %lnot43, true, !dbg !16696
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !16696
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !16696
  store i64 %conv47, i64* %tmp41, align 8, !dbg !16697
  %25 = load i64, i64* %tmp41, align 8, !dbg !16696
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16711
  %hotplug_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 35, !dbg !16712
  %call48 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %hotplug_task) #12, !dbg !16713
  br label %skip_eh, !dbg !16713

skip_eh:                                          ; preds = %if.end40, %if.then
  call void @llvm.dbg.label(metadata !16714), !dbg !16715
  %27 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16716
  %call49 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %27, i32 1) #12, !dbg !16716
  store %struct.ata_link* %call49, %struct.ata_link** %link, align 8, !dbg !16716
  br label %for.cond, !dbg !16716

for.cond:                                         ; preds = %for.inc59, %skip_eh
  %28 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !16718
  %tobool50 = icmp ne %struct.ata_link* %28, null, !dbg !16716
  br i1 %tobool50, label %for.body, label %for.end61, !dbg !16716

for.body:                                         ; preds = %for.cond
  %29 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !16720
  %call51 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %29, i32 2) #12, !dbg !16720
  store %struct.ata_device* %call51, %struct.ata_device** %dev, align 8, !dbg !16720
  br label %for.cond52, !dbg !16720

for.cond52:                                       ; preds = %for.inc, %for.body
  %30 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !16723
  %tobool53 = icmp ne %struct.ata_device* %30, null, !dbg !16720
  br i1 %tobool53, label %for.body54, label %for.end, !dbg !16720

for.body54:                                       ; preds = %for.cond52
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !16725
  %call55 = call zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %31) #12, !dbg !16728
  br i1 %call55, label %if.then56, label %if.end57, !dbg !16729

if.then56:                                        ; preds = %for.body54
  %32 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !16730
  call void @zpodd_exit(%struct.ata_device* %32) #12, !dbg !16731
  br label %if.end57, !dbg !16731

if.end57:                                         ; preds = %if.then56, %for.body54
  br label %for.inc, !dbg !16732

for.inc:                                          ; preds = %if.end57
  %33 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !16723
  %34 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !16723
  %call58 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %33, %struct.ata_link* %34, i32 2) #12, !dbg !16723
  store %struct.ata_device* %call58, %struct.ata_device** %dev, align 8, !dbg !16723
  br label %for.cond52, !dbg !16723, !llvm.loop !16733

for.end:                                          ; preds = %for.cond52
  br label %for.inc59, !dbg !16735

for.inc59:                                        ; preds = %for.end
  %35 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !16718
  %36 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16718
  %call60 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %35, %struct.ata_port* %36, i32 1) #12, !dbg !16718
  store %struct.ata_link* %call60, %struct.ata_link** %link, align 8, !dbg !16718
  br label %for.cond, !dbg !16718, !llvm.loop !16736

for.end61:                                        ; preds = %for.cond
  %37 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16738
  %pmp_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 28, !dbg !16740
  %38 = load %struct.ata_link*, %struct.ata_link** %pmp_link, align 16, !dbg !16740
  %tobool62 = icmp ne %struct.ata_link* %38, null, !dbg !16738
  br i1 %tobool62, label %if.then63, label %if.end71, !dbg !16741

if.then63:                                        ; preds = %for.end61
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16742, metadata !DIExpression()), !dbg !16744
  store i32 0, i32* %i, align 4, !dbg !16745
  br label %for.cond64, !dbg !16747

for.cond64:                                       ; preds = %for.inc69, %if.then63
  %39 = load i32, i32* %i, align 4, !dbg !16748
  %cmp65 = icmp slt i32 %39, 15, !dbg !16750
  br i1 %cmp65, label %for.body67, label %for.end70, !dbg !16751

for.body67:                                       ; preds = %for.cond64
  %40 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16752
  %pmp_link68 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %40, i32 0, i32 28, !dbg !16753
  %41 = load %struct.ata_link*, %struct.ata_link** %pmp_link68, align 16, !dbg !16753
  %42 = load i32, i32* %i, align 4, !dbg !16754
  %idxprom = sext i32 %42 to i64, !dbg !16752
  %arrayidx = getelementptr %struct.ata_link, %struct.ata_link* %41, i64 %idxprom, !dbg !16752
  call void @ata_tlink_delete(%struct.ata_link* %arrayidx) #12, !dbg !16755
  br label %for.inc69, !dbg !16755

for.inc69:                                        ; preds = %for.body67
  %43 = load i32, i32* %i, align 4, !dbg !16756
  %inc = add i32 %43, 1, !dbg !16756
  store i32 %inc, i32* %i, align 4, !dbg !16756
  br label %for.cond64, !dbg !16757, !llvm.loop !16758

for.end70:                                        ; preds = %for.cond64
  br label %if.end71, !dbg !16760

if.end71:                                         ; preds = %for.end70, %for.end61
  %44 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16761
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %44, i32 0, i32 0, !dbg !16762
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !16762
  call void @scsi_remove_host(%struct.Scsi_Host* %45) #12, !dbg !16763
  %46 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16764
  call void @ata_tport_delete(%struct.ata_port* %46) #12, !dbg !16765
  ret void, !dbg !16766
}

; Function Attrs: noredzone
declare dso_local void @ata_acpi_dissociate(%struct.ata_host*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_pci_remove_one(%struct.pci_dev* %pdev) #0 !dbg !16767 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.ata_host*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17038, metadata !DIExpression()), !dbg !17039
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !17040, metadata !DIExpression()), !dbg !17041
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17042
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !17043
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !17043
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !17041
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !17044
  call void @ata_host_detach(%struct.ata_host* %2) #12, !dbg !17045
  ret void, !dbg !17046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #0 !dbg !17047 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17050, metadata !DIExpression()), !dbg !17051
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17052
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !17053
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !17054
  ret i8* %call, !dbg !17055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_pci_shutdown_one(%struct.pci_dev* %pdev) #0 !dbg !17056 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.ata_host*, align 8
  %i = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17057, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !17059, metadata !DIExpression()), !dbg !17060
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17061
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !17062
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !17062
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !17060
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17063, metadata !DIExpression()), !dbg !17064
  store i32 0, i32* %i, align 4, !dbg !17065
  br label %for.cond, !dbg !17067

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !17068
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !17070
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 3, !dbg !17071
  %4 = load i32, i32* %n_ports, align 8, !dbg !17071
  %cmp = icmp ult i32 %2, %4, !dbg !17072
  br i1 %cmp, label %for.body, label %for.end, !dbg !17073

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !17074, metadata !DIExpression()), !dbg !17076
  %5 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !17077
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %5, i32 0, i32 12, !dbg !17078
  %6 = load i32, i32* %i, align 4, !dbg !17079
  %idxprom = sext i32 %6 to i64, !dbg !17077
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !17077
  %7 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !17077
  store %struct.ata_port* %7, %struct.ata_port** %ap, align 8, !dbg !17076
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17080
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 4, !dbg !17081
  %9 = load i32, i32* %pflags, align 32, !dbg !17082
  %or = or i32 %9, 4, !dbg !17082
  store i32 %or, i32* %pflags, align 32, !dbg !17082
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17083
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 1, !dbg !17085
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !17085
  %freeze = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %11, i32 0, i32 12, !dbg !17086
  %12 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %freeze, align 8, !dbg !17086
  %tobool = icmp ne void (%struct.ata_port*)* %12, null, !dbg !17083
  br i1 %tobool, label %if.then, label %if.end, !dbg !17087

if.then:                                          ; preds = %for.body
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17088
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 1, !dbg !17089
  %14 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !17089
  %freeze2 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %14, i32 0, i32 12, !dbg !17090
  %15 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %freeze2, align 8, !dbg !17090
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17091
  call void %15(%struct.ata_port* %16) #12, !dbg !17088
  br label %if.end, !dbg !17088

if.end:                                           ; preds = %if.then, %for.body
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17092
  %ops3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 1, !dbg !17094
  %18 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops3, align 8, !dbg !17094
  %port_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %18, i32 0, i32 35, !dbg !17095
  %19 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %port_stop, align 8, !dbg !17095
  %tobool4 = icmp ne void (%struct.ata_port*)* %19, null, !dbg !17092
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !17096

if.then5:                                         ; preds = %if.end
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17097
  %ops6 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 1, !dbg !17098
  %21 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops6, align 8, !dbg !17098
  %port_stop7 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %21, i32 0, i32 35, !dbg !17099
  %22 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %port_stop7, align 8, !dbg !17099
  %23 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17100
  call void %22(%struct.ata_port* %23) #12, !dbg !17097
  br label %if.end8, !dbg !17097

if.end8:                                          ; preds = %if.then5, %if.end
  br label %for.inc, !dbg !17101

for.inc:                                          ; preds = %if.end8
  %24 = load i32, i32* %i, align 4, !dbg !17102
  %inc = add i32 %24, 1, !dbg !17102
  store i32 %inc, i32* %i, align 4, !dbg !17102
  br label %for.cond, !dbg !17103, !llvm.loop !17104

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_test_config_bits(%struct.pci_dev* %pdev, %struct.pci_bits* %bits) #0 !dbg !17107 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bits.addr = alloca %struct.pci_bits*, align 8
  %tmp = alloca i64, align 8
  %tmp8 = alloca i8, align 1
  %tmp16 = alloca i16, align 2
  %tmp32 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17118, metadata !DIExpression()), !dbg !17119
  store %struct.pci_bits* %bits, %struct.pci_bits** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bits** %bits.addr, metadata !17120, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !17122, metadata !DIExpression()), !dbg !17123
  store i64 0, i64* %tmp, align 8, !dbg !17123
  %0 = load %struct.pci_bits*, %struct.pci_bits** %bits.addr, align 8, !dbg !17124
  %width = getelementptr inbounds %struct.pci_bits, %struct.pci_bits* %0, i32 0, i32 1, !dbg !17125
  %1 = load i32, i32* %width, align 4, !dbg !17125
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb5
  ], !dbg !17126

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %tmp8, metadata !17127, metadata !DIExpression()), !dbg !17130
  store i8 0, i8* %tmp8, align 1, !dbg !17130
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17131
  %3 = load %struct.pci_bits*, %struct.pci_bits** %bits.addr, align 8, !dbg !17132
  %reg = getelementptr inbounds %struct.pci_bits, %struct.pci_bits* %3, i32 0, i32 0, !dbg !17133
  %4 = load i32, i32* %reg, align 8, !dbg !17133
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %2, i32 %4, i8* %tmp8) #12, !dbg !17134
  %5 = load i8, i8* %tmp8, align 1, !dbg !17135
  %conv = zext i8 %5 to i64, !dbg !17135
  store i64 %conv, i64* %tmp, align 8, !dbg !17136
  br label %sw.epilog, !dbg !17137

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %tmp16, metadata !17138, metadata !DIExpression()), !dbg !17140
  store i16 0, i16* %tmp16, align 2, !dbg !17140
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17141
  %7 = load %struct.pci_bits*, %struct.pci_bits** %bits.addr, align 8, !dbg !17142
  %reg2 = getelementptr inbounds %struct.pci_bits, %struct.pci_bits* %7, i32 0, i32 0, !dbg !17143
  %8 = load i32, i32* %reg2, align 8, !dbg !17143
  %call3 = call i32 @pci_read_config_word(%struct.pci_dev* %6, i32 %8, i16* %tmp16) #12, !dbg !17144
  %9 = load i16, i16* %tmp16, align 2, !dbg !17145
  %conv4 = zext i16 %9 to i64, !dbg !17145
  store i64 %conv4, i64* %tmp, align 8, !dbg !17146
  br label %sw.epilog, !dbg !17147

sw.bb5:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %tmp32, metadata !17148, metadata !DIExpression()), !dbg !17150
  store i32 0, i32* %tmp32, align 4, !dbg !17150
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17151
  %11 = load %struct.pci_bits*, %struct.pci_bits** %bits.addr, align 8, !dbg !17152
  %reg6 = getelementptr inbounds %struct.pci_bits, %struct.pci_bits* %11, i32 0, i32 0, !dbg !17153
  %12 = load i32, i32* %reg6, align 8, !dbg !17153
  %call7 = call i32 @pci_read_config_dword(%struct.pci_dev* %10, i32 %12, i32* %tmp32) #12, !dbg !17154
  %13 = load i32, i32* %tmp32, align 4, !dbg !17155
  %conv8 = zext i32 %13 to i64, !dbg !17155
  store i64 %conv8, i64* %tmp, align 8, !dbg !17156
  br label %sw.epilog, !dbg !17157

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17158
  br label %return, !dbg !17158

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb1, %sw.bb
  %14 = load %struct.pci_bits*, %struct.pci_bits** %bits.addr, align 8, !dbg !17159
  %mask = getelementptr inbounds %struct.pci_bits, %struct.pci_bits* %14, i32 0, i32 2, !dbg !17160
  %15 = load i64, i64* %mask, align 8, !dbg !17160
  %16 = load i64, i64* %tmp, align 8, !dbg !17161
  %and = and i64 %16, %15, !dbg !17161
  store i64 %and, i64* %tmp, align 8, !dbg !17161
  %17 = load i64, i64* %tmp, align 8, !dbg !17162
  %18 = load %struct.pci_bits*, %struct.pci_bits** %bits.addr, align 8, !dbg !17163
  %val = getelementptr inbounds %struct.pci_bits, %struct.pci_bits* %18, i32 0, i32 3, !dbg !17164
  %19 = load i64, i64* %val, align 8, !dbg !17164
  %cmp = icmp eq i64 %17, %19, !dbg !17165
  %20 = zext i1 %cmp to i64, !dbg !17166
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !17166
  store i32 %cond, i32* %retval, align 4, !dbg !17167
  br label %return, !dbg !17167

return:                                           ; preds = %sw.epilog, %sw.default
  %21 = load i32, i32* %retval, align 4, !dbg !17168
  ret i32 %21, !dbg !17168
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_pci_device_do_suspend(%struct.pci_dev* %pdev, i32 %mesg.coerce) #0 !dbg !17169 {
entry:
  %mesg = alloca %struct.pm_message, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17172, metadata !DIExpression()), !dbg !17173
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !17174, metadata !DIExpression()), !dbg !17175
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17176
  %call = call i32 @pci_save_state(%struct.pci_dev* %0) #12, !dbg !17177
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17178
  call void @pci_disable_device(%struct.pci_dev* %1) #12, !dbg !17179
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0, !dbg !17180
  %2 = load i32, i32* %event, align 4, !dbg !17180
  %and = and i32 %2, 6, !dbg !17182
  %tobool = icmp ne i32 %and, 0, !dbg !17182
  br i1 %tobool, label %if.then, label %if.end, !dbg !17183

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17184
  %call1 = call i32 @pci_set_power_state(%struct.pci_dev* %3, i32 3) #12, !dbg !17185
  br label %if.end, !dbg !17185

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17186
}

; Function Attrs: noredzone
declare dso_local i32 @pci_save_state(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_set_power_state(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_device_do_resume(%struct.pci_dev* %pdev) #0 !dbg !17187 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17188, metadata !DIExpression()), !dbg !17189
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !17190, metadata !DIExpression()), !dbg !17191
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17192
  %call = call i32 @pci_set_power_state(%struct.pci_dev* %0, i32 0) #12, !dbg !17193
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17194
  call void @pci_restore_state(%struct.pci_dev* %1) #12, !dbg !17195
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17196
  %call1 = call i32 @pcim_enable_device(%struct.pci_dev* %2) #12, !dbg !17197
  store i32 %call1, i32* %rc, align 4, !dbg !17198
  %3 = load i32, i32* %rc, align 4, !dbg !17199
  %tobool = icmp ne i32 %3, 0, !dbg !17199
  br i1 %tobool, label %if.then, label %if.end, !dbg !17201

if.then:                                          ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17202
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !17202
  %5 = load i32, i32* %rc, align 4, !dbg !17202
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.100, i64 0, i64 0), i32 %5) #13, !dbg !17202
  %6 = load i32, i32* %rc, align 4, !dbg !17204
  store i32 %6, i32* %retval, align 4, !dbg !17205
  br label %return, !dbg !17205

if.end:                                           ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17206
  call void @pci_set_master(%struct.pci_dev* %7) #12, !dbg !17207
  store i32 0, i32* %retval, align 4, !dbg !17208
  br label %return, !dbg !17208

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17209
  ret i32 %8, !dbg !17209
}

; Function Attrs: noredzone
declare dso_local void @pci_restore_state(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pcim_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_device_suspend(%struct.pci_dev* %pdev, i32 %mesg.coerce) #0 !dbg !17210 {
entry:
  %retval = alloca i32, align 4
  %mesg = alloca %struct.pm_message, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.ata_host*, align 8
  %rc = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17211, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !17213, metadata !DIExpression()), !dbg !17214
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !17215, metadata !DIExpression()), !dbg !17216
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17217
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !17218
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !17218
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !17216
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !17219, metadata !DIExpression()), !dbg !17220
  store i32 0, i32* %rc, align 4, !dbg !17220
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !17221
  %coerce.dive1 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0, !dbg !17222
  %3 = load i32, i32* %coerce.dive1, align 4, !dbg !17222
  %call2 = call i32 @ata_host_suspend(%struct.ata_host* %2, i32 %3) #12, !dbg !17222
  store i32 %call2, i32* %rc, align 4, !dbg !17223
  %4 = load i32, i32* %rc, align 4, !dbg !17224
  %tobool = icmp ne i32 %4, 0, !dbg !17224
  br i1 %tobool, label %if.then, label %if.end, !dbg !17226

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rc, align 4, !dbg !17227
  store i32 %5, i32* %retval, align 4, !dbg !17228
  br label %return, !dbg !17228

if.end:                                           ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17229
  %coerce.dive3 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0, !dbg !17230
  %7 = load i32, i32* %coerce.dive3, align 4, !dbg !17230
  call void @ata_pci_device_do_suspend(%struct.pci_dev* %6, i32 %7) #12, !dbg !17230
  store i32 0, i32* %retval, align 4, !dbg !17231
  br label %return, !dbg !17231

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17232
  ret i32 %8, !dbg !17232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_device_resume(%struct.pci_dev* %pdev) #0 !dbg !17233 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.ata_host*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !17234, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !17236, metadata !DIExpression()), !dbg !17237
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17238
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !17239
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !17239
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !17237
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !17240, metadata !DIExpression()), !dbg !17241
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !17242
  %call1 = call i32 @ata_pci_device_do_resume(%struct.pci_dev* %2) #12, !dbg !17243
  store i32 %call1, i32* %rc, align 4, !dbg !17244
  %3 = load i32, i32* %rc, align 4, !dbg !17245
  %cmp = icmp eq i32 %3, 0, !dbg !17247
  br i1 %cmp, label %if.then, label %if.end, !dbg !17248

if.then:                                          ; preds = %entry
  %4 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !17249
  call void @ata_host_resume(%struct.ata_host* %4) #12, !dbg !17250
  br label %if.end, !dbg !17250

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %rc, align 4, !dbg !17251
  ret i32 %5, !dbg !17252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_platform_remove_one(%struct.platform_device* %pdev) #0 !dbg !17253 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %host = alloca %struct.ata_host*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !17281, metadata !DIExpression()), !dbg !17282
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !17283, metadata !DIExpression()), !dbg !17284
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !17285
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #12, !dbg !17286
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !17286
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !17284
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !17287
  call void @ata_host_detach(%struct.ata_host* %2) #12, !dbg !17288
  ret i32 0, !dbg !17289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @platform_get_drvdata(%struct.platform_device* %pdev) #0 !dbg !17290 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !17295, metadata !DIExpression()), !dbg !17296
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !17297
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !17298
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !17299
  ret i8* %call, !dbg !17300
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @ata_exit() #6 section ".exit.text" !dbg !17301 {
entry:
  %0 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** @ata_scsi_transport_template, align 8, !dbg !17302
  call void @ata_release_transport(%struct.scsi_transport_template* %0) #12, !dbg !17303
  call void @libata_transport_exit() #13, !dbg !17304
  call void @ata_sff_exit() #12, !dbg !17305
  call void @ata_free_force_param() #12, !dbg !17306
  ret void, !dbg !17307
}

; Function Attrs: noredzone
declare dso_local void @ata_release_transport(%struct.scsi_transport_template*) #1

; Function Attrs: cold noredzone
declare dso_local void @libata_transport_exit() #5 section ".exit.text"

; Function Attrs: noredzone
declare dso_local void @ata_sff_exit() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_free_force_param() #0 !dbg !17308 {
entry:
  %0 = load %struct.ata_force_ent*, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !17309
  %1 = bitcast %struct.ata_force_ent* %0 to i8*, !dbg !17309
  call void @kfree(i8* %1) #12, !dbg !17310
  ret void, !dbg !17311
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_init() #6 section ".init.text" !dbg !17312 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !17315, metadata !DIExpression()), !dbg !17316
  call void @ata_parse_force_param() #13, !dbg !17317
  %call = call i32 @ata_sff_init() #12, !dbg !17318
  store i32 %call, i32* %rc, align 4, !dbg !17319
  %0 = load i32, i32* %rc, align 4, !dbg !17320
  %tobool = icmp ne i32 %0, 0, !dbg !17320
  br i1 %tobool, label %if.then, label %if.end, !dbg !17322

if.then:                                          ; preds = %entry
  call void @ata_free_force_param() #12, !dbg !17323
  %1 = load i32, i32* %rc, align 4, !dbg !17325
  store i32 %1, i32* %retval, align 4, !dbg !17326
  br label %return, !dbg !17326

if.end:                                           ; preds = %entry
  %call1 = call i32 @libata_transport_init() #13, !dbg !17327
  %call2 = call %struct.scsi_transport_template* @ata_attach_transport() #12, !dbg !17328
  store %struct.scsi_transport_template* %call2, %struct.scsi_transport_template** @ata_scsi_transport_template, align 8, !dbg !17329
  %2 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** @ata_scsi_transport_template, align 8, !dbg !17330
  %tobool3 = icmp ne %struct.scsi_transport_template* %2, null, !dbg !17330
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !17332

if.then4:                                         ; preds = %if.end
  call void @ata_sff_exit() #12, !dbg !17333
  store i32 -12, i32* %rc, align 4, !dbg !17335
  br label %err_out, !dbg !17336

if.end5:                                          ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.289, i64 0, i64 0)) #13, !dbg !17337
  store i32 0, i32* %retval, align 4, !dbg !17338
  br label %return, !dbg !17338

err_out:                                          ; preds = %if.then4
  call void @llvm.dbg.label(metadata !17339), !dbg !17340
  %3 = load i32, i32* %rc, align 4, !dbg !17341
  store i32 %3, i32* %retval, align 4, !dbg !17342
  br label %return, !dbg !17342

return:                                           ; preds = %err_out, %if.end5, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !17343
  ret i32 %4, !dbg !17343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_ratelimit() #0 !dbg !17344 {
entry:
  %call = call i32 @___ratelimit(%struct.ratelimit_state* @ratelimit, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.ata_ratelimit, i64 0, i64 0)) #12, !dbg !17345
  ret i32 %call, !dbg !17346
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #1

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_wait_register(%struct.ata_port* %ap, i8* %reg, i32 %mask, i32 %val, i64 %interval, i64 %timeout) #0 !dbg !17347 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %reg.addr = alloca i8*, align 8
  %mask.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %interval.addr = alloca i64, align 8
  %timeout.addr = alloca i64, align 8
  %deadline = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !17350, metadata !DIExpression()), !dbg !17351
  store i8* %reg, i8** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reg.addr, metadata !17352, metadata !DIExpression()), !dbg !17353
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !17354, metadata !DIExpression()), !dbg !17355
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17356, metadata !DIExpression()), !dbg !17357
  store i64 %interval, i64* %interval.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %interval.addr, metadata !17358, metadata !DIExpression()), !dbg !17359
  store i64 %timeout, i64* %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout.addr, metadata !17360, metadata !DIExpression()), !dbg !17361
  call void @llvm.dbg.declare(metadata i64* %deadline, metadata !17362, metadata !DIExpression()), !dbg !17363
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !17364, metadata !DIExpression()), !dbg !17365
  %0 = load i8*, i8** %reg.addr, align 8, !dbg !17366
  %call = call i32 @ioread32(i8* %0) #12, !dbg !17367
  store i32 %call, i32* %tmp, align 4, !dbg !17368
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !17369
  %2 = load i64, i64* %timeout.addr, align 8, !dbg !17370
  %call1 = call i64 @ata_deadline(i64 %1, i64 %2) #12, !dbg !17371
  store i64 %call1, i64* %deadline, align 8, !dbg !17372
  br label %while.cond, !dbg !17373

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %tmp, align 4, !dbg !17374
  %4 = load i32, i32* %mask.addr, align 4, !dbg !17375
  %and = and i32 %3, %4, !dbg !17376
  %5 = load i32, i32* %val.addr, align 4, !dbg !17377
  %cmp = icmp eq i32 %and, %5, !dbg !17378
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17379

land.rhs:                                         ; preds = %while.cond
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !17380
  %7 = load i64, i64* %deadline, align 8, !dbg !17380
  %sub = sub i64 %6, %7, !dbg !17380
  %cmp2 = icmp slt i64 %sub, 0, !dbg !17380
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !17381
  br i1 %8, label %while.body, label %while.end, !dbg !17373

while.body:                                       ; preds = %land.end
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !17382
  %10 = load i64, i64* %interval.addr, align 8, !dbg !17384
  %conv = trunc i64 %10 to i32, !dbg !17384
  call void @ata_msleep(%struct.ata_port* %9, i32 %conv) #12, !dbg !17385
  %11 = load i8*, i8** %reg.addr, align 8, !dbg !17386
  %call3 = call i32 @ioread32(i8* %11) #12, !dbg !17387
  store i32 %call3, i32* %tmp, align 4, !dbg !17388
  br label %while.cond, !dbg !17373, !llvm.loop !17389

while.end:                                        ; preds = %land.end
  %12 = load i32, i32* %tmp, align 4, !dbg !17391
  ret i32 %12, !dbg !17392
}

; Function Attrs: noredzone
declare dso_local i32 @ioread32(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dummy_qc_issue(%struct.ata_queued_cmd* %qc) #0 !dbg !17393 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !17394, metadata !DIExpression()), !dbg !17395
  ret i32 64, !dbg !17396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dummy_error_handler(%struct.ata_port* %ap) #0 !dbg !17397 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !17398, metadata !DIExpression()), !dbg !17399
  ret void, !dbg !17400
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_print_version(%struct.device* %dev, i8* %version) #0 !dbg !17401 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %version.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17404, metadata !DIExpression()), !dbg !17405
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17406, metadata !DIExpression()), !dbg !17407
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17408
  %1 = load i8*, i8** %version.addr, align 8, !dbg !17409
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), %struct.device* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.103, i64 0, i64 0), i8* %1) #13, !dbg !17410
  ret void, !dbg !17411
}

; Function Attrs: cold noredzone
declare dso_local void @dev_printk(i8*, %struct.device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_host_link(%struct.ata_link* %link) #0 !dbg !17412 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !17415, metadata !DIExpression()), !dbg !17416
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !17417
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !17418
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !17419
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !17419
  %link1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 25, !dbg !17420
  %cmp = icmp eq %struct.ata_link* %0, %link1, !dbg !17421
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !17422

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !17423
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !17424
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 0, !dbg !17425
  %5 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !17425
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 26, !dbg !17426
  %6 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !17426
  %cmp3 = icmp eq %struct.ata_link* %3, %6, !dbg !17427
  br label %lor.end, !dbg !17422

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %7, !dbg !17428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !17429 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !17430, metadata !DIExpression()), !dbg !17432
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !17433, metadata !DIExpression()), !dbg !17432
  %0 = load i64, i64* %__edi, align 8, !dbg !17432
  store i64 %0, i64* %__edi, align 8, !dbg !17432
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !17434, metadata !DIExpression()), !dbg !17432
  %1 = load i64, i64* %__esi, align 8, !dbg !17432
  store i64 %1, i64* %__esi, align 8, !dbg !17432
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !17435, metadata !DIExpression()), !dbg !17432
  %2 = load i64, i64* %__edx, align 8, !dbg !17432
  store i64 %2, i64* %__edx, align 8, !dbg !17432
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !17436, metadata !DIExpression()), !dbg !17432
  %3 = load i64, i64* %__ecx, align 8, !dbg !17432
  store i64 %3, i64* %__ecx, align 8, !dbg !17432
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !17437, metadata !DIExpression()), !dbg !17432
  %4 = load i64, i64* %__eax, align 8, !dbg !17432
  store i64 %4, i64* %__eax, align 8, !dbg !17432
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !17432
  %6 = call i64 @llvm.read_register.i64(metadata !7284), !dbg !17438
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !17438, !srcloc !17441
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !17438
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !17438
  store i64 %asmresult, i64* %__eax, align 8, !dbg !17438
  call void @llvm.write_register.i64(metadata !7284, i64 %asmresult1), !dbg !17438
  %8 = load i64, i64* %__eax, align 8, !dbg !17438
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !17442, metadata !DIExpression()), !dbg !17444
  store i64 -1, i64* %__mask, align 8, !dbg !17444
  %9 = load i64, i64* %__mask, align 8, !dbg !17444
  store i64 %9, i64* %tmp, align 8, !dbg !17444
  %10 = load i64, i64* %tmp, align 8, !dbg !17444
  %and = and i64 %8, %10, !dbg !17438
  store i64 %and, i64* %__ret, align 8, !dbg !17438
  %11 = load i64, i64* %__ret, align 8, !dbg !17432
  store i64 %11, i64* %tmp2, align 8, !dbg !17445
  %12 = load i64, i64* %tmp2, align 8, !dbg !17432
  ret i64 %12, !dbg !17446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !17447 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !17448, metadata !DIExpression()), !dbg !17450
  %0 = load i64, i64* %__edi, align 8, !dbg !17450
  store i64 %0, i64* %__edi, align 8, !dbg !17450
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !17451, metadata !DIExpression()), !dbg !17450
  %1 = load i64, i64* %__esi, align 8, !dbg !17450
  store i64 %1, i64* %__esi, align 8, !dbg !17450
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !17452, metadata !DIExpression()), !dbg !17450
  %2 = load i64, i64* %__edx, align 8, !dbg !17450
  store i64 %2, i64* %__edx, align 8, !dbg !17450
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !17453, metadata !DIExpression()), !dbg !17450
  %3 = load i64, i64* %__ecx, align 8, !dbg !17450
  store i64 %3, i64* %__ecx, align 8, !dbg !17450
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !17454, metadata !DIExpression()), !dbg !17450
  %4 = load i64, i64* %__eax, align 8, !dbg !17450
  store i64 %4, i64* %__eax, align 8, !dbg !17450
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !17450
  %6 = call i64 @llvm.read_register.i64(metadata !7284), !dbg !17450
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !17450, !srcloc !17455
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !17450
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !17450
  store i64 %asmresult, i64* %__eax, align 8, !dbg !17450
  call void @llvm.write_register.i64(metadata !7284, i64 %asmresult1), !dbg !17450
  ret void, !dbg !17456
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #8

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !17457 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !17460, metadata !DIExpression()), !dbg !17461
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !17462, metadata !DIExpression()), !dbg !17464
  %0 = load i64, i64* %__edi, align 8, !dbg !17464
  store i64 %0, i64* %__edi, align 8, !dbg !17464
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !17465, metadata !DIExpression()), !dbg !17464
  %1 = load i64, i64* %__esi, align 8, !dbg !17464
  store i64 %1, i64* %__esi, align 8, !dbg !17464
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !17466, metadata !DIExpression()), !dbg !17464
  %2 = load i64, i64* %__edx, align 8, !dbg !17464
  store i64 %2, i64* %__edx, align 8, !dbg !17464
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !17467, metadata !DIExpression()), !dbg !17464
  %3 = load i64, i64* %__ecx, align 8, !dbg !17464
  store i64 %3, i64* %__ecx, align 8, !dbg !17464
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !17468, metadata !DIExpression()), !dbg !17464
  %4 = load i64, i64* %__eax, align 8, !dbg !17464
  store i64 %4, i64* %__eax, align 8, !dbg !17464
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !17464
  %6 = call i64 @llvm.read_register.i64(metadata !7284), !dbg !17464
  %7 = load i64, i64* %f.addr, align 8, !dbg !17464
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !17464, !srcloc !17469
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !17464
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !17464
  store i64 %asmresult, i64* %__eax, align 8, !dbg !17464
  call void @llvm.write_register.i64(metadata !7284, i64 %asmresult1), !dbg !17464
  ret void, !dbg !17470
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !17471 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !17472, metadata !DIExpression()), !dbg !17473
  %0 = load i32, i32* %m.addr, align 4, !dbg !17474
  %conv = zext i32 %0 to i64, !dbg !17474
  %add = add i64 %conv, 4, !dbg !17475
  %sub = sub i64 %add, 1, !dbg !17476
  %div = sdiv i64 %sub, 4, !dbg !17477
  ret i64 %div, !dbg !17478
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_hpa_enabled(i16* %id) #0 !dbg !17479 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17480, metadata !DIExpression()), !dbg !17481
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17482
  %arrayidx = getelementptr i16, i16* %0, i64 83, !dbg !17482
  %1 = load i16, i16* %arrayidx, align 2, !dbg !17482
  %conv = zext i16 %1 to i32, !dbg !17482
  %and = and i32 %conv, 49152, !dbg !17484
  %cmp = icmp ne i32 %and, 16384, !dbg !17485
  br i1 %cmp, label %if.then, label %if.end, !dbg !17486

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !17487
  br label %return, !dbg !17487

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !17488
  %arrayidx2 = getelementptr i16, i16* %2, i64 87, !dbg !17488
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !17488
  %conv3 = zext i16 %3 to i32, !dbg !17488
  %and4 = and i32 %conv3, 49152, !dbg !17490
  %cmp5 = icmp ne i32 %and4, 16384, !dbg !17491
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !17492

if.then7:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !17493
  br label %return, !dbg !17493

if.end8:                                          ; preds = %if.end
  %4 = load i16*, i16** %id.addr, align 8, !dbg !17494
  %arrayidx9 = getelementptr i16, i16* %4, i64 85, !dbg !17494
  %5 = load i16, i16* %arrayidx9, align 2, !dbg !17494
  %conv10 = zext i16 %5 to i32, !dbg !17494
  %and11 = and i32 %conv10, 1024, !dbg !17496
  %cmp12 = icmp eq i32 %and11, 0, !dbg !17497
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !17498

if.then14:                                        ; preds = %if.end8
  store i1 false, i1* %retval, align 1, !dbg !17499
  br label %return, !dbg !17499

if.end15:                                         ; preds = %if.end8
  %6 = load i16*, i16** %id.addr, align 8, !dbg !17500
  %arrayidx16 = getelementptr i16, i16* %6, i64 82, !dbg !17500
  %7 = load i16, i16* %arrayidx16, align 2, !dbg !17500
  %conv17 = zext i16 %7 to i32, !dbg !17500
  %and18 = and i32 %conv17, 1024, !dbg !17501
  %tobool = icmp ne i32 %and18, 0, !dbg !17500
  store i1 %tobool, i1* %retval, align 1, !dbg !17502
  br label %return, !dbg !17502

return:                                           ; preds = %if.end15, %if.then14, %if.then7, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !17503
  ret i1 %8, !dbg !17503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_read_native_max_address(%struct.ata_device* %dev, i64* %max_sectors) #0 !dbg !17504 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %max_sectors.addr = alloca i64*, align 8
  %err_mask = alloca i32, align 4
  %tf = alloca %struct.ata_taskfile, align 8
  %lba48 = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17507, metadata !DIExpression()), !dbg !17508
  store i64* %max_sectors, i64** %max_sectors.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %max_sectors.addr, metadata !17509, metadata !DIExpression()), !dbg !17510
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !17511, metadata !DIExpression()), !dbg !17512
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !17513, metadata !DIExpression()), !dbg !17514
  call void @llvm.dbg.declare(metadata i32* %lba48, metadata !17515, metadata !DIExpression()), !dbg !17516
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17517
  %1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 27, !dbg !17518
  %id = bitcast %union.anon.83* %1 to [256 x i16]*, !dbg !17518
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !17517
  %call = call zeroext i1 @ata_id_has_lba48(i16* %arraydecay) #12, !dbg !17519
  %conv = zext i1 %call to i32, !dbg !17519
  store i32 %conv, i32* %lba48, align 4, !dbg !17516
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17520
  call void @ata_tf_init(%struct.ata_device* %2, %struct.ata_taskfile* %tf) #12, !dbg !17521
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !17522
  %3 = load i64, i64* %flags, align 8, !dbg !17523
  %or = or i64 %3, 6, !dbg !17523
  store i64 %or, i64* %flags, align 8, !dbg !17523
  %4 = load i32, i32* %lba48, align 4, !dbg !17524
  %tobool = icmp ne i32 %4, 0, !dbg !17524
  br i1 %tobool, label %if.then, label %if.else, !dbg !17526

if.then:                                          ; preds = %entry
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !17527
  store i8 39, i8* %command, align 1, !dbg !17529
  %flags1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !17530
  %5 = load i64, i64* %flags1, align 8, !dbg !17531
  %or2 = or i64 %5, 1, !dbg !17531
  store i64 %or2, i64* %flags1, align 8, !dbg !17531
  br label %if.end, !dbg !17532

if.else:                                          ; preds = %entry
  %command3 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !17533
  store i8 -8, i8* %command3, align 1, !dbg !17534
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !17535
  store i8 0, i8* %protocol, align 8, !dbg !17536
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 13, !dbg !17537
  %6 = load i8, i8* %device, align 4, !dbg !17538
  %conv4 = zext i8 %6 to i32, !dbg !17538
  %or5 = or i32 %conv4, 64, !dbg !17538
  %conv6 = trunc i32 %or5 to i8, !dbg !17538
  store i8 %conv6, i8* %device, align 4, !dbg !17538
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17539
  %call7 = call i32 @ata_exec_internal(%struct.ata_device* %7, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 0) #12, !dbg !17540
  store i32 %call7, i32* %err_mask, align 4, !dbg !17541
  %8 = load i32, i32* %err_mask, align 4, !dbg !17542
  %tobool8 = icmp ne i32 %8, 0, !dbg !17542
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !17544

if.then9:                                         ; preds = %if.end
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17545
  %10 = load i32, i32* %err_mask, align 4, !dbg !17545
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.115, i64 0, i64 0), i32 %10) #12, !dbg !17545
  %11 = load i32, i32* %err_mask, align 4, !dbg !17547
  %cmp = icmp eq i32 %11, 1, !dbg !17549
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !17550

land.lhs.true:                                    ; preds = %if.then9
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !17551
  %12 = load i8, i8* %feature, align 1, !dbg !17551
  %conv11 = zext i8 %12 to i32, !dbg !17552
  %and = and i32 %conv11, 4, !dbg !17553
  %tobool12 = icmp ne i32 %and, 0, !dbg !17553
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !17554

if.then13:                                        ; preds = %land.lhs.true
  store i32 -13, i32* %retval, align 4, !dbg !17555
  br label %return, !dbg !17555

if.end14:                                         ; preds = %land.lhs.true, %if.then9
  store i32 -5, i32* %retval, align 4, !dbg !17556
  br label %return, !dbg !17556

if.end15:                                         ; preds = %if.end
  %13 = load i32, i32* %lba48, align 4, !dbg !17557
  %tobool16 = icmp ne i32 %13, 0, !dbg !17557
  br i1 %tobool16, label %if.then17, label %if.else19, !dbg !17559

if.then17:                                        ; preds = %if.end15
  %call18 = call i64 @ata_tf_to_lba48(%struct.ata_taskfile* %tf) #12, !dbg !17560
  %add = add i64 %call18, 1, !dbg !17561
  %14 = load i64*, i64** %max_sectors.addr, align 8, !dbg !17562
  store i64 %add, i64* %14, align 8, !dbg !17563
  br label %if.end22, !dbg !17564

if.else19:                                        ; preds = %if.end15
  %call20 = call i64 @ata_tf_to_lba(%struct.ata_taskfile* %tf) #12, !dbg !17565
  %add21 = add i64 %call20, 1, !dbg !17566
  %15 = load i64*, i64** %max_sectors.addr, align 8, !dbg !17567
  store i64 %add21, i64* %15, align 8, !dbg !17568
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then17
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17569
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 2, !dbg !17571
  %17 = load i32, i32* %horkage, align 4, !dbg !17571
  %and23 = and i32 %17, 64, !dbg !17572
  %tobool24 = icmp ne i32 %and23, 0, !dbg !17572
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !17573

if.then25:                                        ; preds = %if.end22
  %18 = load i64*, i64** %max_sectors.addr, align 8, !dbg !17574
  %19 = load i64, i64* %18, align 8, !dbg !17575
  %dec = add i64 %19, -1, !dbg !17575
  store i64 %dec, i64* %18, align 8, !dbg !17575
  br label %if.end26, !dbg !17576

if.end26:                                         ; preds = %if.then25, %if.end22
  store i32 0, i32* %retval, align 4, !dbg !17577
  br label %return, !dbg !17577

return:                                           ; preds = %if.end26, %if.end14, %if.then13
  %20 = load i32, i32* %retval, align 4, !dbg !17578
  ret i32 %20, !dbg !17578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_set_max_sectors(%struct.ata_device* %dev, i64 %new_sectors) #0 !dbg !17579 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %new_sectors.addr = alloca i64, align 8
  %err_mask = alloca i32, align 4
  %tf = alloca %struct.ata_taskfile, align 8
  %lba48 = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17582, metadata !DIExpression()), !dbg !17583
  store i64 %new_sectors, i64* %new_sectors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %new_sectors.addr, metadata !17584, metadata !DIExpression()), !dbg !17585
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !17586, metadata !DIExpression()), !dbg !17587
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !17588, metadata !DIExpression()), !dbg !17589
  call void @llvm.dbg.declare(metadata i32* %lba48, metadata !17590, metadata !DIExpression()), !dbg !17591
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17592
  %1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 27, !dbg !17593
  %id = bitcast %union.anon.83* %1 to [256 x i16]*, !dbg !17593
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !17592
  %call = call zeroext i1 @ata_id_has_lba48(i16* %arraydecay) #12, !dbg !17594
  %conv = zext i1 %call to i32, !dbg !17594
  store i32 %conv, i32* %lba48, align 4, !dbg !17591
  %2 = load i64, i64* %new_sectors.addr, align 8, !dbg !17595
  %dec = add i64 %2, -1, !dbg !17595
  store i64 %dec, i64* %new_sectors.addr, align 8, !dbg !17595
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17596
  call void @ata_tf_init(%struct.ata_device* %3, %struct.ata_taskfile* %tf) #12, !dbg !17597
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !17598
  %4 = load i64, i64* %flags, align 8, !dbg !17599
  %or = or i64 %4, 6, !dbg !17599
  store i64 %or, i64* %flags, align 8, !dbg !17599
  %5 = load i32, i32* %lba48, align 4, !dbg !17600
  %tobool = icmp ne i32 %5, 0, !dbg !17600
  br i1 %tobool, label %if.then, label %if.else, !dbg !17602

if.then:                                          ; preds = %entry
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !17603
  store i8 55, i8* %command, align 1, !dbg !17605
  %flags1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !17606
  %6 = load i64, i64* %flags1, align 8, !dbg !17607
  %or2 = or i64 %6, 1, !dbg !17607
  store i64 %or2, i64* %flags1, align 8, !dbg !17607
  %7 = load i64, i64* %new_sectors.addr, align 8, !dbg !17608
  %shr = lshr i64 %7, 24, !dbg !17609
  %and = and i64 %shr, 255, !dbg !17610
  %conv3 = trunc i64 %and to i8, !dbg !17611
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 5, !dbg !17612
  store i8 %conv3, i8* %hob_lbal, align 4, !dbg !17613
  %8 = load i64, i64* %new_sectors.addr, align 8, !dbg !17614
  %shr4 = lshr i64 %8, 32, !dbg !17615
  %and5 = and i64 %shr4, 255, !dbg !17616
  %conv6 = trunc i64 %and5 to i8, !dbg !17617
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 6, !dbg !17618
  store i8 %conv6, i8* %hob_lbam, align 1, !dbg !17619
  %9 = load i64, i64* %new_sectors.addr, align 8, !dbg !17620
  %shr7 = lshr i64 %9, 40, !dbg !17621
  %and8 = and i64 %shr7, 255, !dbg !17622
  %conv9 = trunc i64 %and8 to i8, !dbg !17623
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 7, !dbg !17624
  store i8 %conv9, i8* %hob_lbah, align 2, !dbg !17625
  br label %if.end, !dbg !17626

if.else:                                          ; preds = %entry
  %command10 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !17627
  store i8 -7, i8* %command10, align 1, !dbg !17629
  %10 = load i64, i64* %new_sectors.addr, align 8, !dbg !17630
  %shr11 = lshr i64 %10, 24, !dbg !17631
  %and12 = and i64 %shr11, 15, !dbg !17632
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 13, !dbg !17633
  %11 = load i8, i8* %device, align 4, !dbg !17634
  %conv13 = zext i8 %11 to i64, !dbg !17634
  %or14 = or i64 %conv13, %and12, !dbg !17634
  %conv15 = trunc i64 %or14 to i8, !dbg !17634
  store i8 %conv15, i8* %device, align 4, !dbg !17634
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !17635
  store i8 0, i8* %protocol, align 8, !dbg !17636
  %device16 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 13, !dbg !17637
  %12 = load i8, i8* %device16, align 4, !dbg !17638
  %conv17 = zext i8 %12 to i32, !dbg !17638
  %or18 = or i32 %conv17, 64, !dbg !17638
  %conv19 = trunc i32 %or18 to i8, !dbg !17638
  store i8 %conv19, i8* %device16, align 4, !dbg !17638
  %13 = load i64, i64* %new_sectors.addr, align 8, !dbg !17639
  %shr20 = lshr i64 %13, 0, !dbg !17640
  %and21 = and i64 %shr20, 255, !dbg !17641
  %conv22 = trunc i64 %and21 to i8, !dbg !17642
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 10, !dbg !17643
  store i8 %conv22, i8* %lbal, align 1, !dbg !17644
  %14 = load i64, i64* %new_sectors.addr, align 8, !dbg !17645
  %shr23 = lshr i64 %14, 8, !dbg !17646
  %and24 = and i64 %shr23, 255, !dbg !17647
  %conv25 = trunc i64 %and24 to i8, !dbg !17648
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 11, !dbg !17649
  store i8 %conv25, i8* %lbam, align 2, !dbg !17650
  %15 = load i64, i64* %new_sectors.addr, align 8, !dbg !17651
  %shr26 = lshr i64 %15, 16, !dbg !17652
  %and27 = and i64 %shr26, 255, !dbg !17653
  %conv28 = trunc i64 %and27 to i8, !dbg !17654
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 12, !dbg !17655
  store i8 %conv28, i8* %lbah, align 1, !dbg !17656
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17657
  %call29 = call i32 @ata_exec_internal(%struct.ata_device* %16, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 0) #12, !dbg !17658
  store i32 %call29, i32* %err_mask, align 4, !dbg !17659
  %17 = load i32, i32* %err_mask, align 4, !dbg !17660
  %tobool30 = icmp ne i32 %17, 0, !dbg !17660
  br i1 %tobool30, label %if.then31, label %if.end38, !dbg !17662

if.then31:                                        ; preds = %if.end
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17663
  %19 = load i32, i32* %err_mask, align 4, !dbg !17663
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.116, i64 0, i64 0), i32 %19) #12, !dbg !17663
  %20 = load i32, i32* %err_mask, align 4, !dbg !17665
  %cmp = icmp eq i32 %20, 1, !dbg !17667
  br i1 %cmp, label %land.lhs.true, label %if.end37, !dbg !17668

land.lhs.true:                                    ; preds = %if.then31
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !17669
  %21 = load i8, i8* %feature, align 1, !dbg !17669
  %conv33 = zext i8 %21 to i32, !dbg !17670
  %and34 = and i32 %conv33, 20, !dbg !17671
  %tobool35 = icmp ne i32 %and34, 0, !dbg !17671
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !17672

if.then36:                                        ; preds = %land.lhs.true
  store i32 -13, i32* %retval, align 4, !dbg !17673
  br label %return, !dbg !17673

if.end37:                                         ; preds = %land.lhs.true, %if.then31
  store i32 -5, i32* %retval, align 4, !dbg !17674
  br label %return, !dbg !17674

if.end38:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !17675
  br label %return, !dbg !17675

return:                                           ; preds = %if.end38, %if.end37, %if.then36
  %22 = load i32, i32* %retval, align 4, !dbg !17676
  ret i32 %22, !dbg !17676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_ncq_send_and_recv(i16* %id) #0 !dbg !17677 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17678, metadata !DIExpression()), !dbg !17679
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17680
  %arrayidx = getelementptr i16, i16* %0, i64 77, !dbg !17680
  %1 = load i16, i16* %arrayidx, align 2, !dbg !17680
  %conv = zext i16 %1 to i64, !dbg !17680
  %and = and i64 %conv, 64, !dbg !17681
  %tobool = icmp ne i64 %and, 0, !dbg !17680
  ret i1 %tobool, !dbg !17682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_config_ncq_send_recv(%struct.ata_device* %dev) #0 !dbg !17683 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %err_mask = alloca i32, align 4
  %cmds = alloca i8*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17684, metadata !DIExpression()), !dbg !17685
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !17686, metadata !DIExpression()), !dbg !17687
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17688
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !17689
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !17689
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !17690
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !17690
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !17687
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !17691, metadata !DIExpression()), !dbg !17692
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17693
  %call = call zeroext i1 @ata_log_supported(%struct.ata_device* %3, i8 zeroext 19) #12, !dbg !17695
  br i1 %call, label %if.end, label %if.then, !dbg !17696

if.then:                                          ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17697
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.122, i64 0, i64 0)) #12, !dbg !17697
  br label %if.end12, !dbg !17699

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17700
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17701
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 52, !dbg !17702
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !17701
  %call2 = call i32 @ata_read_log_page(%struct.ata_device* %5, i8 zeroext 19, i8 zeroext 0, i8* %arraydecay, i32 1) #12, !dbg !17703
  store i32 %call2, i32* %err_mask, align 4, !dbg !17704
  %7 = load i32, i32* %err_mask, align 4, !dbg !17705
  %tobool = icmp ne i32 %7, 0, !dbg !17705
  br i1 %tobool, label %if.then3, label %if.else, !dbg !17707

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17708
  %9 = load i32, i32* %err_mask, align 4, !dbg !17708
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i64 0, i64 0), i32 %9) #12, !dbg !17708
  br label %if.end12, !dbg !17710

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %cmds, metadata !17711, metadata !DIExpression()), !dbg !17713
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17714
  %ncq_send_recv_cmds = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 29, !dbg !17715
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %ncq_send_recv_cmds, i64 0, i64 0, !dbg !17714
  store i8* %arraydecay4, i8** %cmds, align 8, !dbg !17713
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17716
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 3, !dbg !17717
  %12 = load i64, i64* %flags, align 16, !dbg !17718
  %or = or i64 %12, 524288, !dbg !17718
  store i64 %or, i64* %flags, align 16, !dbg !17718
  %13 = load i8*, i8** %cmds, align 8, !dbg !17719
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17720
  %sector_buf5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 52, !dbg !17721
  %arraydecay6 = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf5, i64 0, i64 0, !dbg !17722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 64 %arraydecay6, i64 20, i1 false), !dbg !17722
  %15 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17723
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %15, i32 0, i32 2, !dbg !17725
  %16 = load i32, i32* %horkage, align 4, !dbg !17725
  %and = and i32 %16, 524288, !dbg !17726
  %tobool7 = icmp ne i32 %and, 0, !dbg !17726
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !17727

if.then8:                                         ; preds = %if.else
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17728
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.124, i64 0, i64 0)) #12, !dbg !17728
  %18 = load i8*, i8** %cmds, align 8, !dbg !17730
  %arrayidx = getelementptr i8, i8* %18, i64 4, !dbg !17730
  %19 = load i8, i8* %arrayidx, align 1, !dbg !17731
  %conv = zext i8 %19 to i32, !dbg !17731
  %and9 = and i32 %conv, -2, !dbg !17731
  %conv10 = trunc i32 %and9 to i8, !dbg !17731
  store i8 %conv10, i8* %arrayidx, align 1, !dbg !17731
  br label %if.end11, !dbg !17732

if.end11:                                         ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.then, %if.end11, %if.then3
  ret void, !dbg !17733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_ncq_non_data(i16* %id) #0 !dbg !17734 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17735, metadata !DIExpression()), !dbg !17736
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17737
  %arrayidx = getelementptr i16, i16* %0, i64 77, !dbg !17737
  %1 = load i16, i16* %arrayidx, align 2, !dbg !17737
  %conv = zext i16 %1 to i64, !dbg !17737
  %and = and i64 %conv, 32, !dbg !17738
  %tobool = icmp ne i64 %and, 0, !dbg !17737
  ret i1 %tobool, !dbg !17739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_config_ncq_non_data(%struct.ata_device* %dev) #0 !dbg !17740 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %err_mask = alloca i32, align 4
  %cmds = alloca i8*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17741, metadata !DIExpression()), !dbg !17742
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !17743, metadata !DIExpression()), !dbg !17744
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17745
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !17746
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !17746
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !17747
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !17747
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !17744
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !17748, metadata !DIExpression()), !dbg !17749
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17750
  %call = call zeroext i1 @ata_log_supported(%struct.ata_device* %3, i8 zeroext 18) #12, !dbg !17752
  br i1 %call, label %if.end, label %if.then, !dbg !17753

if.then:                                          ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17754
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.122, i64 0, i64 0)) #12, !dbg !17754
  br label %if.end7, !dbg !17756

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17757
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17758
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 52, !dbg !17759
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !17758
  %call2 = call i32 @ata_read_log_page(%struct.ata_device* %5, i8 zeroext 18, i8 zeroext 0, i8* %arraydecay, i32 1) #12, !dbg !17760
  store i32 %call2, i32* %err_mask, align 4, !dbg !17761
  %7 = load i32, i32* %err_mask, align 4, !dbg !17762
  %tobool = icmp ne i32 %7, 0, !dbg !17762
  br i1 %tobool, label %if.then3, label %if.else, !dbg !17764

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17765
  %9 = load i32, i32* %err_mask, align 4, !dbg !17765
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.125, i64 0, i64 0), i32 %9) #12, !dbg !17765
  br label %if.end7, !dbg !17767

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %cmds, metadata !17768, metadata !DIExpression()), !dbg !17770
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17771
  %ncq_non_data_cmds = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 30, !dbg !17772
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %ncq_non_data_cmds, i64 0, i64 0, !dbg !17771
  store i8* %arraydecay4, i8** %cmds, align 8, !dbg !17770
  %11 = load i8*, i8** %cmds, align 8, !dbg !17773
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17774
  %sector_buf5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 52, !dbg !17775
  %arraydecay6 = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf5, i64 0, i64 0, !dbg !17776
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 64 %arraydecay6, i64 64, i1 false), !dbg !17776
  br label %if.end7

if.end7:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !17777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_ncq_prio(i16* %id) #0 !dbg !17778 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17779, metadata !DIExpression()), !dbg !17780
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17781
  %arrayidx = getelementptr i16, i16* %0, i64 76, !dbg !17781
  %1 = load i16, i16* %arrayidx, align 2, !dbg !17781
  %conv = zext i16 %1 to i64, !dbg !17781
  %and = and i64 %conv, 4096, !dbg !17782
  %tobool = icmp ne i64 %and, 0, !dbg !17781
  ret i1 %tobool, !dbg !17783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_config_ncq_prio(%struct.ata_device* %dev) #0 !dbg !17784 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17785, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !17787, metadata !DIExpression()), !dbg !17788
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17789
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !17790
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !17790
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !17791
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !17791
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !17788
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !17792, metadata !DIExpression()), !dbg !17793
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17794
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 3, !dbg !17796
  %4 = load i64, i64* %flags, align 16, !dbg !17796
  %and = and i64 %4, 2097152, !dbg !17797
  %tobool = icmp ne i64 %and, 0, !dbg !17797
  br i1 %tobool, label %if.end, label %if.then, !dbg !17798

if.then:                                          ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17799
  %flags2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 3, !dbg !17801
  %6 = load i64, i64* %flags2, align 16, !dbg !17802
  %and3 = and i64 %6, -1048577, !dbg !17802
  store i64 %and3, i64* %flags2, align 16, !dbg !17802
  br label %if.end14, !dbg !17803

if.end:                                           ; preds = %entry
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17804
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17805
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 52, !dbg !17806
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !17805
  %call = call i32 @ata_read_log_page(%struct.ata_device* %7, i8 zeroext 48, i8 zeroext 8, i8* %arraydecay, i32 1) #12, !dbg !17807
  store i32 %call, i32* %err_mask, align 4, !dbg !17808
  %9 = load i32, i32* %err_mask, align 4, !dbg !17809
  %tobool4 = icmp ne i32 %9, 0, !dbg !17809
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17811

if.then5:                                         ; preds = %if.end
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17812
  %11 = load i32, i32* %err_mask, align 4, !dbg !17812
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.126, i64 0, i64 0), i32 %11) #12, !dbg !17812
  br label %if.end14, !dbg !17814

if.end6:                                          ; preds = %if.end
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17815
  %sector_buf7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 52, !dbg !17817
  %arrayidx = getelementptr [512 x i8], [512 x i8]* %sector_buf7, i64 0, i64 9, !dbg !17815
  %13 = load i8, i8* %arrayidx, align 1, !dbg !17815
  %conv = zext i8 %13 to i64, !dbg !17815
  %and8 = and i64 %conv, 8, !dbg !17818
  %tobool9 = icmp ne i64 %and8, 0, !dbg !17818
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !17819

if.then10:                                        ; preds = %if.end6
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17820
  %flags11 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 3, !dbg !17822
  %15 = load i64, i64* %flags11, align 16, !dbg !17823
  %or = or i64 %15, 1048576, !dbg !17823
  store i64 %or, i64* %flags11, align 16, !dbg !17823
  br label %if.end14, !dbg !17824

if.else:                                          ; preds = %if.end6
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17825
  %flags12 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 3, !dbg !17827
  %17 = load i64, i64* %flags12, align 16, !dbg !17828
  %and13 = and i64 %17, -1048577, !dbg !17828
  store i64 %and13, i64* %flags12, align 16, !dbg !17828
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17829
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.127, i64 0, i64 0)) #12, !dbg !17829
  br label %if.end14

if.end14:                                         ; preds = %if.then, %if.then5, %if.else, %if.then10
  ret void, !dbg !17830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_log_supported(%struct.ata_device* %dev, i8 zeroext %log) #0 !dbg !17831 {
entry:
  %p.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i, metadata !17834, metadata !DIExpression()), !dbg !17840
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !17846, metadata !DIExpression()), !dbg !17847
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.ata_device*, align 8
  %log.addr = alloca i8, align 1
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17848, metadata !DIExpression()), !dbg !17849
  store i8 %log, i8* %log.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %log.addr, metadata !17850, metadata !DIExpression()), !dbg !17851
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !17852, metadata !DIExpression()), !dbg !17853
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17854
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !17855
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !17855
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !17856
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !17856
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !17853
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17857
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17859
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 52, !dbg !17860
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !17859
  %call = call i32 @ata_read_log_page(%struct.ata_device* %3, i8 zeroext 0, i8 zeroext 0, i8* %arraydecay, i32 1) #12, !dbg !17861
  %tobool = icmp ne i32 %call, 0, !dbg !17861
  br i1 %tobool, label %if.then, label %if.end, !dbg !17862

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !17863
  br label %return, !dbg !17863

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17864
  %sector_buf2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 52, !dbg !17865
  %6 = load i8, i8* %log.addr, align 1, !dbg !17866
  %conv = zext i8 %6 to i32, !dbg !17866
  %mul = mul i32 %conv, 2, !dbg !17867
  %idxprom = sext i32 %mul to i64, !dbg !17864
  %arrayidx = getelementptr [512 x i8], [512 x i8]* %sector_buf2, i64 0, i64 %idxprom, !dbg !17864
  store i8* %arrayidx, i8** %p.addr.i, align 8
  %7 = load i8*, i8** %p.addr.i, align 8, !dbg !17868
  %8 = bitcast i8* %7 to i16*, !dbg !17869
  store i16* %8, i16** %p.addr.i.i, align 8
  %9 = load i16*, i16** %p.addr.i.i, align 8, !dbg !17870
  %10 = load i16, i16* %9, align 2, !dbg !17871
  %conv4 = zext i16 %10 to i32, !dbg !17872
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !17872
  %11 = zext i1 %tobool5 to i64, !dbg !17872
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !17872
  %tobool6 = icmp ne i32 %cond, 0, !dbg !17872
  store i1 %tobool6, i1* %retval, align 1, !dbg !17873
  br label %return, !dbg !17873

return:                                           ; preds = %if.end, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !17874
  ret i1 %12, !dbg !17874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_sense_reporting(i16* %id) #0 !dbg !17875 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17876, metadata !DIExpression()), !dbg !17877
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17878
  %arrayidx = getelementptr i16, i16* %0, i64 86, !dbg !17878
  %1 = load i16, i16* %arrayidx, align 2, !dbg !17878
  %conv = zext i16 %1 to i32, !dbg !17878
  %and = and i32 %conv, 32768, !dbg !17880
  %tobool = icmp ne i32 %and, 0, !dbg !17880
  br i1 %tobool, label %if.end, label %if.then, !dbg !17881

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !17882
  br label %return, !dbg !17882

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !17883
  %arrayidx1 = getelementptr i16, i16* %2, i64 119, !dbg !17883
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !17883
  %conv2 = zext i16 %3 to i32, !dbg !17883
  %and3 = and i32 %conv2, 64, !dbg !17884
  %tobool4 = icmp ne i32 %and3, 0, !dbg !17883
  store i1 %tobool4, i1* %retval, align 1, !dbg !17885
  br label %return, !dbg !17885

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !17886
  ret i1 %4, !dbg !17886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_sense_reporting_enabled(i16* %id) #0 !dbg !17887 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17888, metadata !DIExpression()), !dbg !17889
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17890
  %arrayidx = getelementptr i16, i16* %0, i64 86, !dbg !17890
  %1 = load i16, i16* %arrayidx, align 2, !dbg !17890
  %conv = zext i16 %1 to i32, !dbg !17890
  %and = and i32 %conv, 32768, !dbg !17892
  %tobool = icmp ne i32 %and, 0, !dbg !17892
  br i1 %tobool, label %if.end, label %if.then, !dbg !17893

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !17894
  br label %return, !dbg !17894

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !17895
  %arrayidx1 = getelementptr i16, i16* %2, i64 120, !dbg !17895
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !17895
  %conv2 = zext i16 %3 to i32, !dbg !17895
  %and3 = and i32 %conv2, 64, !dbg !17896
  %tobool4 = icmp ne i32 %and3, 0, !dbg !17895
  store i1 %tobool4, i1* %retval, align 1, !dbg !17897
  br label %return, !dbg !17897

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !17898
  ret i1 %4, !dbg !17898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_id_zoned_cap(i16* %id) #0 !dbg !17899 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17902, metadata !DIExpression()), !dbg !17903
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17904
  %arrayidx = getelementptr i16, i16* %0, i64 69, !dbg !17904
  %1 = load i16, i16* %arrayidx, align 2, !dbg !17904
  %conv = zext i16 %1 to i32, !dbg !17904
  %and = and i32 %conv, 3, !dbg !17905
  %conv1 = trunc i32 %and to i8, !dbg !17906
  ret i8 %conv1, !dbg !17907
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_identify_page_supported(%struct.ata_device* %dev, i8 zeroext %page) #0 !dbg !17908 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.ata_device*, align 8
  %page.addr = alloca i8, align 1
  %ap = alloca %struct.ata_port*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17909, metadata !DIExpression()), !dbg !17910
  store i8 %page, i8* %page.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %page.addr, metadata !17911, metadata !DIExpression()), !dbg !17912
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !17913, metadata !DIExpression()), !dbg !17914
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17915
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !17916
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !17916
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !17917
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !17917
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !17914
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17918, metadata !DIExpression()), !dbg !17919
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17920, metadata !DIExpression()), !dbg !17921
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17922
  %call = call zeroext i1 @ata_log_supported(%struct.ata_device* %3, i8 zeroext 48) #12, !dbg !17924
  br i1 %call, label %if.end, label %if.then, !dbg !17925

if.then:                                          ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17926
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.130, i64 0, i64 0)) #12, !dbg !17926
  store i1 false, i1* %retval, align 1, !dbg !17928
  br label %return, !dbg !17928

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17929
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17930
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 52, !dbg !17931
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !17930
  %call2 = call i32 @ata_read_log_page(%struct.ata_device* %5, i8 zeroext 48, i8 zeroext 0, i8* %arraydecay, i32 1) #12, !dbg !17932
  store i32 %call2, i32* %err, align 4, !dbg !17933
  %7 = load i32, i32* %err, align 4, !dbg !17934
  %tobool = icmp ne i32 %7, 0, !dbg !17934
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !17936

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17937
  %9 = load i32, i32* %err, align 4, !dbg !17937
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.131, i64 0, i64 0), i32 %9) #12, !dbg !17937
  store i1 false, i1* %retval, align 1, !dbg !17939
  br label %return, !dbg !17939

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !17940
  br label %for.cond, !dbg !17942

for.cond:                                         ; preds = %for.inc, %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !17943
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17945
  %sector_buf5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 52, !dbg !17946
  %arrayidx = getelementptr [512 x i8], [512 x i8]* %sector_buf5, i64 0, i64 8, !dbg !17945
  %12 = load i8, i8* %arrayidx, align 8, !dbg !17945
  %conv = zext i8 %12 to i32, !dbg !17945
  %cmp = icmp ult i32 %10, %conv, !dbg !17947
  br i1 %cmp, label %for.body, label %for.end, !dbg !17948

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !17949
  %sector_buf7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 52, !dbg !17952
  %14 = load i32, i32* %i, align 4, !dbg !17953
  %add = add i32 9, %14, !dbg !17954
  %idxprom = zext i32 %add to i64, !dbg !17949
  %arrayidx8 = getelementptr [512 x i8], [512 x i8]* %sector_buf7, i64 0, i64 %idxprom, !dbg !17949
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !17949
  %conv9 = zext i8 %15 to i32, !dbg !17949
  %16 = load i8, i8* %page.addr, align 1, !dbg !17955
  %conv10 = zext i8 %16 to i32, !dbg !17955
  %cmp11 = icmp eq i32 %conv9, %conv10, !dbg !17956
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !17957

if.then13:                                        ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !17958
  br label %return, !dbg !17958

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !17959

for.inc:                                          ; preds = %if.end14
  %17 = load i32, i32* %i, align 4, !dbg !17960
  %inc = add i32 %17, 1, !dbg !17960
  store i32 %inc, i32* %i, align 4, !dbg !17960
  br label %for.cond, !dbg !17961, !llvm.loop !17962

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !17964
  br label %return, !dbg !17964

return:                                           ; preds = %for.end, %if.then13, %if.then3, %if.then
  %18 = load i1, i1* %retval, align 1, !dbg !17965
  ret i1 %18, !dbg !17965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_trusted(i16* %id) #0 !dbg !17966 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !17967, metadata !DIExpression()), !dbg !17968
  %0 = load i16*, i16** %id.addr, align 8, !dbg !17969
  %call = call i32 @ata_id_major_version(i16* %0) #12, !dbg !17971
  %cmp = icmp ule i32 %call, 7, !dbg !17972
  br i1 %cmp, label %if.then, label %if.end, !dbg !17973

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !17974
  br label %return, !dbg !17974

if.end:                                           ; preds = %entry
  %1 = load i16*, i16** %id.addr, align 8, !dbg !17975
  %arrayidx = getelementptr i16, i16* %1, i64 48, !dbg !17975
  %2 = load i16, i16* %arrayidx, align 2, !dbg !17975
  %conv = zext i16 %2 to i32, !dbg !17975
  %and = and i32 %conv, 1, !dbg !17976
  %tobool = icmp ne i32 %and, 0, !dbg !17975
  store i1 %tobool, i1* %retval, align 1, !dbg !17977
  br label %return, !dbg !17977

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !17978
  ret i1 %3, !dbg !17978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_set_xfermode(%struct.ata_device* %dev) #0 !dbg !17979 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !17982, metadata !DIExpression()), !dbg !17983
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !17984, metadata !DIExpression()), !dbg !17985
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !17986, metadata !DIExpression()), !dbg !17987
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17988
  call void @ata_tf_init(%struct.ata_device* %0, %struct.ata_taskfile* %tf) #12, !dbg !17989
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !17990
  store i8 -17, i8* %command, align 1, !dbg !17991
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !17992
  store i8 3, i8* %feature, align 1, !dbg !17993
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !17994
  %1 = load i64, i64* %flags, align 8, !dbg !17995
  %or = or i64 %1, 70, !dbg !17995
  store i64 %or, i64* %flags, align 8, !dbg !17995
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !17996
  store i8 0, i8* %protocol, align 8, !dbg !17997
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17998
  %call = call i32 @ata_pio_need_iordy(%struct.ata_device* %2) #12, !dbg !18000
  %tobool = icmp ne i32 %call, 0, !dbg !18000
  br i1 %tobool, label %if.then, label %if.else, !dbg !18001

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18002
  %xfer_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 15, !dbg !18003
  %4 = load i8, i8* %xfer_mode, align 2, !dbg !18003
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 9, !dbg !18004
  store i8 %4, i8* %nsect, align 8, !dbg !18005
  br label %if.end5, !dbg !18006

if.else:                                          ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18007
  %6 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 27, !dbg !18007
  %id = bitcast %union.anon.83* %6 to [256 x i16]*, !dbg !18007
  %arrayidx = getelementptr [256 x i16], [256 x i16]* %id, i64 0, i64 49, !dbg !18007
  %7 = load i16, i16* %arrayidx, align 2, !dbg !18007
  %conv = zext i16 %7 to i32, !dbg !18007
  %and = and i32 %conv, 2048, !dbg !18007
  %tobool1 = icmp ne i32 %and, 0, !dbg !18007
  br i1 %tobool1, label %if.then2, label %if.else4, !dbg !18009

if.then2:                                         ; preds = %if.else
  %nsect3 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 9, !dbg !18010
  store i8 1, i8* %nsect3, align 8, !dbg !18011
  br label %if.end, !dbg !18012

if.else4:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !18013
  br label %return, !dbg !18013

if.end:                                           ; preds = %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18014
  %call6 = call i32 @ata_exec_internal(%struct.ata_device* %8, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 15000) #12, !dbg !18015
  store i32 %call6, i32* %err_mask, align 4, !dbg !18016
  %9 = load i32, i32* %err_mask, align 4, !dbg !18017
  store i32 %9, i32* %retval, align 4, !dbg !18018
  br label %return, !dbg !18018

return:                                           ; preds = %if.end5, %if.else4
  %10 = load i32, i32* %retval, align 4, !dbg !18019
  ret i32 %10, !dbg !18019
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #1

; Function Attrs: noredzone nounwind readonly
declare dso_local zeroext i1 @glob_match(i8*, i8*) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dma_blacklisted(%struct.ata_device* %dev) #0 !dbg !18020 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !18023, metadata !DIExpression()), !dbg !18024
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18025
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !18027
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !18027
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !18028
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !18028
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 3, !dbg !18029
  %3 = load i64, i64* %flags, align 8, !dbg !18029
  %and = and i64 %3, 512, !dbg !18030
  %tobool = icmp ne i64 %and, 0, !dbg !18030
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !18031

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18032
  %flags1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 3, !dbg !18033
  %5 = load i64, i64* %flags1, align 16, !dbg !18033
  %and2 = and i64 %5, 4, !dbg !18034
  %tobool3 = icmp ne i64 %and2, 0, !dbg !18034
  br i1 %tobool3, label %if.then, label %if.end, !dbg !18035

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !18036
  br label %return, !dbg !18036

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18037
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 2, !dbg !18038
  %7 = load i32, i32* %horkage, align 4, !dbg !18038
  %and4 = and i32 %7, 2, !dbg !18039
  %tobool5 = icmp ne i32 %and4, 0, !dbg !18040
  %8 = zext i1 %tobool5 to i64, !dbg !18040
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !18040
  store i32 %cond, i32* %retval, align 4, !dbg !18041
  br label %return, !dbg !18041

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !18042
  ret i32 %9, !dbg !18042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_pio_mask_no_iordy(%struct.ata_device* %adev) #0 !dbg !18043 {
entry:
  %retval = alloca i32, align 4
  %adev.addr = alloca %struct.ata_device*, align 8
  %pio = alloca i16, align 2
  store %struct.ata_device* %adev, %struct.ata_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %adev.addr, metadata !18046, metadata !DIExpression()), !dbg !18047
  %0 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !18048
  %1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 27, !dbg !18050
  %id = bitcast %union.anon.83* %1 to [256 x i16]*, !dbg !18050
  %arrayidx = getelementptr [256 x i16], [256 x i16]* %id, i64 0, i64 53, !dbg !18048
  %2 = load i16, i16* %arrayidx, align 2, !dbg !18048
  %conv = zext i16 %2 to i32, !dbg !18048
  %and = and i32 %conv, 2, !dbg !18051
  %tobool = icmp ne i32 %and, 0, !dbg !18051
  br i1 %tobool, label %if.then, label %if.end9, !dbg !18052

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pio, metadata !18053, metadata !DIExpression()), !dbg !18055
  %3 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !18056
  %4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 27, !dbg !18057
  %id1 = bitcast %union.anon.83* %4 to [256 x i16]*, !dbg !18057
  %arrayidx2 = getelementptr [256 x i16], [256 x i16]* %id1, i64 0, i64 67, !dbg !18056
  %5 = load i16, i16* %arrayidx2, align 2, !dbg !18056
  store i16 %5, i16* %pio, align 2, !dbg !18055
  %6 = load i16, i16* %pio, align 2, !dbg !18058
  %tobool3 = icmp ne i16 %6, 0, !dbg !18058
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !18060

if.then4:                                         ; preds = %if.then
  %7 = load i16, i16* %pio, align 2, !dbg !18061
  %conv5 = zext i16 %7 to i32, !dbg !18061
  %cmp = icmp sgt i32 %conv5, 240, !dbg !18064
  br i1 %cmp, label %if.then7, label %if.end, !dbg !18065

if.then7:                                         ; preds = %if.then4
  store i32 3, i32* %retval, align 4, !dbg !18066
  br label %return, !dbg !18066

if.end:                                           ; preds = %if.then4
  store i32 7, i32* %retval, align 4, !dbg !18067
  br label %return, !dbg !18067

if.end8:                                          ; preds = %if.then
  br label %if.end9, !dbg !18068

if.end9:                                          ; preds = %if.end8, %entry
  store i32 3, i32* %retval, align 4, !dbg !18069
  br label %return, !dbg !18069

return:                                           ; preds = %if.end9, %if.end, %if.then7
  %8 = load i32, i32* %retval, align 4, !dbg !18070
  ret i32 %8, !dbg !18070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cable_is_40wire(%struct.ata_port* %ap) #0 !dbg !18071 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !18072, metadata !DIExpression()), !dbg !18073
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !18074, metadata !DIExpression()), !dbg !18075
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !18076, metadata !DIExpression()), !dbg !18077
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18078
  %cbl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 18, !dbg !18080
  %1 = load i32, i32* %cbl, align 4, !dbg !18080
  %cmp = icmp eq i32 %1, 1, !dbg !18081
  br i1 %cmp, label %if.then, label %if.end, !dbg !18082

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !18083
  br label %return, !dbg !18083

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18084
  %cbl1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 18, !dbg !18086
  %3 = load i32, i32* %cbl1, align 4, !dbg !18086
  %cmp2 = icmp eq i32 %3, 2, !dbg !18087
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !18088

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18089
  %cbl3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 18, !dbg !18090
  %5 = load i32, i32* %cbl3, align 4, !dbg !18090
  %cmp4 = icmp eq i32 %5, 6, !dbg !18091
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18092

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !18093
  br label %return, !dbg !18093

if.end6:                                          ; preds = %lor.lhs.false
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18094
  %cbl7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 18, !dbg !18096
  %7 = load i32, i32* %cbl7, align 4, !dbg !18096
  %cmp8 = icmp eq i32 %7, 3, !dbg !18097
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !18098

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !18099
  br label %return, !dbg !18099

if.end10:                                         ; preds = %if.end6
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18100
  %call = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %8, i32 0) #12, !dbg !18100
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !18100
  br label %for.cond, !dbg !18100

for.cond:                                         ; preds = %for.inc20, %if.end10
  %9 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18102
  %tobool = icmp ne %struct.ata_link* %9, null, !dbg !18100
  br i1 %tobool, label %for.body, label %for.end22, !dbg !18100

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18104
  %call11 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %10, i32 0) #12, !dbg !18104
  store %struct.ata_device* %call11, %struct.ata_device** %dev, align 8, !dbg !18104
  br label %for.cond12, !dbg !18104

for.cond12:                                       ; preds = %for.inc, %for.body
  %11 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !18107
  %tobool13 = icmp ne %struct.ata_device* %11, null, !dbg !18104
  br i1 %tobool13, label %for.body14, label %for.end, !dbg !18104

for.body14:                                       ; preds = %for.cond12
  %12 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !18109
  %call15 = call i32 @ata_is_40wire(%struct.ata_device* %12) #12, !dbg !18112
  %tobool16 = icmp ne i32 %call15, 0, !dbg !18112
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !18113

if.then17:                                        ; preds = %for.body14
  store i32 0, i32* %retval, align 4, !dbg !18114
  br label %return, !dbg !18114

if.end18:                                         ; preds = %for.body14
  br label %for.inc, !dbg !18115

for.inc:                                          ; preds = %if.end18
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !18107
  %14 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18107
  %call19 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %13, %struct.ata_link* %14, i32 0) #12, !dbg !18107
  store %struct.ata_device* %call19, %struct.ata_device** %dev, align 8, !dbg !18107
  br label %for.cond12, !dbg !18107, !llvm.loop !18116

for.end:                                          ; preds = %for.cond12
  br label %for.inc20, !dbg !18118

for.inc20:                                        ; preds = %for.end
  %15 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18102
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18102
  %call21 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %15, %struct.ata_port* %16, i32 0) #12, !dbg !18102
  store %struct.ata_link* %call21, %struct.ata_link** %link, align 8, !dbg !18102
  br label %for.cond, !dbg !18102, !llvm.loop !18119

for.end22:                                        ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !18121
  br label %return, !dbg !18121

return:                                           ; preds = %for.end22, %if.then17, %if.then9, %if.then5, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !18122
  ret i32 %17, !dbg !18122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_is_40wire(%struct.ata_device* %dev) #0 !dbg !18123 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !18124, metadata !DIExpression()), !dbg !18125
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18126
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 2, !dbg !18128
  %1 = load i32, i32* %horkage, align 4, !dbg !18128
  %and = and i32 %1, 256, !dbg !18129
  %tobool = icmp ne i32 %and, 0, !dbg !18129
  br i1 %tobool, label %if.then, label %if.end, !dbg !18130

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18131
  %3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 27, !dbg !18132
  %id = bitcast %union.anon.83* %3 to [256 x i16]*, !dbg !18132
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !18131
  %call = call zeroext i1 @ata_drive_40wire_relaxed(i16* %arraydecay) #12, !dbg !18133
  %conv = zext i1 %call to i32, !dbg !18133
  store i32 %conv, i32* %retval, align 4, !dbg !18134
  br label %return, !dbg !18134

if.end:                                           ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !18135
  %5 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 27, !dbg !18136
  %id1 = bitcast %union.anon.83* %5 to [256 x i16]*, !dbg !18136
  %arraydecay2 = getelementptr inbounds [256 x i16], [256 x i16]* %id1, i64 0, i64 0, !dbg !18135
  %call3 = call zeroext i1 @ata_drive_40wire(i16* %arraydecay2) #12, !dbg !18137
  %conv4 = zext i1 %call3 to i32, !dbg !18137
  store i32 %conv4, i32* %retval, align 4, !dbg !18138
  br label %return, !dbg !18138

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !18139
  ret i32 %6, !dbg !18139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_drive_40wire_relaxed(i16* %dev_id) #0 !dbg !18140 {
entry:
  %retval = alloca i1, align 1
  %dev_id.addr = alloca i16*, align 8
  store i16* %dev_id, i16** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dev_id.addr, metadata !18141, metadata !DIExpression()), !dbg !18142
  %0 = load i16*, i16** %dev_id.addr, align 8, !dbg !18143
  %arrayidx = getelementptr i16, i16* %0, i64 93, !dbg !18143
  %1 = load i16, i16* %arrayidx, align 2, !dbg !18143
  %conv = zext i16 %1 to i32, !dbg !18143
  %and = and i32 %conv, 8192, !dbg !18145
  %cmp = icmp eq i32 %and, 8192, !dbg !18146
  br i1 %cmp, label %if.then, label %if.end, !dbg !18147

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !18148
  br label %return, !dbg !18148

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !18149
  br label %return, !dbg !18149

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, i1* %retval, align 1, !dbg !18150
  ret i1 %2, !dbg !18150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_drive_40wire(i16* %dev_id) #0 !dbg !18151 {
entry:
  %retval = alloca i1, align 1
  %dev_id.addr = alloca i16*, align 8
  store i16* %dev_id, i16** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dev_id.addr, metadata !18152, metadata !DIExpression()), !dbg !18153
  %0 = load i16*, i16** %dev_id.addr, align 8, !dbg !18154
  %call = call zeroext i1 @ata_id_is_sata(i16* %0) #12, !dbg !18156
  br i1 %call, label %if.then, label %if.end, !dbg !18157

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !18158
  br label %return, !dbg !18158

if.end:                                           ; preds = %entry
  %1 = load i16*, i16** %dev_id.addr, align 8, !dbg !18159
  %arrayidx = getelementptr i16, i16* %1, i64 93, !dbg !18159
  %2 = load i16, i16* %arrayidx, align 2, !dbg !18159
  %conv = zext i16 %2 to i32, !dbg !18159
  %and = and i32 %conv, 57344, !dbg !18161
  %cmp = icmp eq i32 %and, 24576, !dbg !18162
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !18163

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !18164
  br label %return, !dbg !18164

if.end3:                                          ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !18165
  br label %return, !dbg !18165

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !18166
  ret i1 %3, !dbg !18166
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_map_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_port_request_pm(%struct.ata_port* %ap, i32 %mesg.coerce, i32 %action, i32 %ehi_flags, i1 zeroext %async) #0 !dbg !18167 {
entry:
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !8979, metadata !DIExpression()), !dbg !18170
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !8987, metadata !DIExpression()), !dbg !18172
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8966, metadata !DIExpression()), !dbg !18173
  %mesg = alloca %struct.pm_message, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %action.addr = alloca i32, align 4
  %ehi_flags.addr = alloca i32, align 4
  %async.addr = alloca i8, align 1
  %link = alloca %struct.ata_link*, align 8
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp28 = alloca i32, align 4
  %__dummy32 = alloca i64, align 8
  %__dummy233 = alloca i64, align 8
  %tmp36 = alloca i32, align 4
  %__ret_warn_on59 = alloca i32, align 4
  %tmp84 = alloca i64, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !18180, metadata !DIExpression()), !dbg !18181
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !18182, metadata !DIExpression()), !dbg !18183
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !18184, metadata !DIExpression()), !dbg !18185
  store i32 %ehi_flags, i32* %ehi_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ehi_flags.addr, metadata !18186, metadata !DIExpression()), !dbg !18187
  %frombool = zext i1 %async to i8
  store i8 %frombool, i8* %async.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %async.addr, metadata !18188, metadata !DIExpression()), !dbg !18189
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !18190, metadata !DIExpression()), !dbg !18191
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18192, metadata !DIExpression()), !dbg !18193
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18194
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 4, !dbg !18196
  %1 = load i32, i32* %pflags, align 32, !dbg !18196
  %and = and i32 %1, 262144, !dbg !18197
  %tobool = icmp ne i32 %and, 0, !dbg !18197
  br i1 %tobool, label %if.then, label %if.end24, !dbg !18198

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18199
  call void @ata_port_wait_eh(%struct.ata_port* %2) #12, !dbg !18201
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !18202, metadata !DIExpression()), !dbg !18204
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18204
  %pflags1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 4, !dbg !18204
  %4 = load i32, i32* %pflags1, align 32, !dbg !18204
  %and2 = and i32 %4, 262144, !dbg !18204
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18204
  %lnot = xor i1 %tobool3, true, !dbg !18204
  %lnot4 = xor i1 %lnot, true, !dbg !18204
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !18204
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !18204
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !18205
  %tobool5 = icmp ne i32 %5, 0, !dbg !18205
  %lnot6 = xor i1 %tobool5, true, !dbg !18205
  %lnot8 = xor i1 %lnot6, true, !dbg !18205
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !18205
  %conv = sext i32 %lnot.ext9 to i64, !dbg !18205
  %tobool10 = icmp ne i64 %conv, 0, !dbg !18205
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !18204

if.then11:                                        ; preds = %if.then
  br label %do.body, !dbg !18205

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !18207

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !18209

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !18207

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4940, i32 2305, i64 12) #7, !dbg !18211, !srcloc !18213
  br label %do.end14, !dbg !18211

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 362) #7, !dbg !18214, !srcloc !18216
  br label %do.body15, !dbg !18207

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !18217

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !18207

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !18207

if.end:                                           ; preds = %do.end17, %if.then
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !18204
  %tobool18 = icmp ne i32 %6, 0, !dbg !18204
  %lnot19 = xor i1 %tobool18, true, !dbg !18204
  %lnot21 = xor i1 %lnot19, true, !dbg !18204
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !18204
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !18204
  store i64 %conv23, i64* %tmp, align 8, !dbg !18205
  %7 = load i64, i64* %tmp, align 8, !dbg !18204
  br label %if.end24, !dbg !18219

if.end24:                                         ; preds = %if.end, %entry
  br label %do.body25, !dbg !18220

do.body25:                                        ; preds = %if.end24
  br label %do.body26, !dbg !18221

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18222, metadata !DIExpression()), !dbg !18224
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18225, metadata !DIExpression()), !dbg !18224
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18224
  %conv27 = zext i1 %cmp to i32, !dbg !18224
  store i32 1, i32* %tmp28, align 4, !dbg !18224
  %8 = load i32, i32* %tmp28, align 4, !dbg !18224
  br label %do.body29, !dbg !18226

do.body29:                                        ; preds = %do.body26
  br label %do.body30, !dbg !18227

do.body30:                                        ; preds = %do.body29
  br label %do.body31, !dbg !18228

do.body31:                                        ; preds = %do.body30
  call void @llvm.dbg.declare(metadata i64* %__dummy32, metadata !18230, metadata !DIExpression()), !dbg !18233
  call void @llvm.dbg.declare(metadata i64* %__dummy233, metadata !18234, metadata !DIExpression()), !dbg !18233
  %cmp34 = icmp eq i64* %__dummy32, %__dummy233, !dbg !18233
  %conv35 = zext i1 %cmp34 to i32, !dbg !18233
  store i32 1, i32* %tmp36, align 4, !dbg !18233
  %9 = load i32, i32* %tmp36, align 4, !dbg !18233
  %call = call i64 @arch_local_irq_save() #12, !dbg !18235
  store i64 %call, i64* %flags, align 8, !dbg !18235
  br label %do.end37, !dbg !18235

do.end37:                                         ; preds = %do.body31
  br label %do.end38, !dbg !18228

do.end38:                                         ; preds = %do.end37
  br label %do.body39, !dbg !18227

do.body39:                                        ; preds = %do.end38
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !18236, !srcloc !18237
  br label %do.body40, !dbg !18236

do.body40:                                        ; preds = %do.body39
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18238
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 2, !dbg !18238
  %11 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !18238
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18239
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !18240
  %rlock.i = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !18240
  br label %do.end42, !dbg !18238

do.end42:                                         ; preds = %do.body40
  br label %do.end43, !dbg !18236

do.end43:                                         ; preds = %do.end42
  br label %do.end44, !dbg !18227

do.end44:                                         ; preds = %do.end43
  br label %do.end45, !dbg !18226

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !18221

do.end46:                                         ; preds = %do.end45
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18241
  %pm_mesg = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 43, !dbg !18242
  %15 = bitcast %struct.pm_message* %pm_mesg to i8*, !dbg !18243
  %16 = bitcast %struct.pm_message* %mesg to i8*, !dbg !18243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 4, i1 false), !dbg !18243
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18244
  %pflags47 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 4, !dbg !18245
  %18 = load i32, i32* %pflags47, align 32, !dbg !18246
  %or = or i32 %18, 262144, !dbg !18246
  store i32 %or, i32* %pflags47, align 32, !dbg !18246
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18247
  %call48 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %19, i32 1) #12, !dbg !18247
  store %struct.ata_link* %call48, %struct.ata_link** %link, align 8, !dbg !18247
  br label %for.cond, !dbg !18247

for.cond:                                         ; preds = %for.inc, %do.end46
  %20 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18249
  %tobool49 = icmp ne %struct.ata_link* %20, null, !dbg !18247
  br i1 %tobool49, label %for.body, label %for.end, !dbg !18247

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %action.addr, align 4, !dbg !18251
  %22 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18253
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %22, i32 0, i32 11, !dbg !18254
  %action50 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %eh_info, i32 0, i32 3, !dbg !18255
  %23 = load i32, i32* %action50, align 8, !dbg !18256
  %or51 = or i32 %23, %21, !dbg !18256
  store i32 %or51, i32* %action50, align 8, !dbg !18256
  %24 = load i32, i32* %ehi_flags.addr, align 4, !dbg !18257
  %25 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18258
  %eh_info52 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %25, i32 0, i32 11, !dbg !18259
  %flags53 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %eh_info52, i32 0, i32 5, !dbg !18260
  %26 = load i32, i32* %flags53, align 4, !dbg !18261
  %or54 = or i32 %26, %24, !dbg !18261
  store i32 %or54, i32* %flags53, align 4, !dbg !18261
  br label %for.inc, !dbg !18262

for.inc:                                          ; preds = %for.body
  %27 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18249
  %28 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18249
  %call55 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %27, %struct.ata_port* %28, i32 1) #12, !dbg !18249
  store %struct.ata_link* %call55, %struct.ata_link** %link, align 8, !dbg !18249
  br label %for.cond, !dbg !18249, !llvm.loop !18263

for.end:                                          ; preds = %for.cond
  %29 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18265
  call void @ata_port_schedule_eh(%struct.ata_port* %29) #12, !dbg !18266
  %30 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18267
  %lock56 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 2, !dbg !18268
  %31 = load %struct.spinlock*, %struct.spinlock** %lock56, align 16, !dbg !18268
  %32 = load i64, i64* %flags, align 8, !dbg !18269
  store %struct.spinlock* %31, %struct.spinlock** %lock.addr.i92, align 8
  store i64 %32, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1035, metadata !9095, metadata !DIExpression()) #7, !dbg !18270
  call void @llvm.dbg.declare(metadata !1035, metadata !9099, metadata !DIExpression()) #7, !dbg !18270
  store i32 1, i32* %tmp.i, align 4, !dbg !18270
  %33 = load i32, i32* %tmp.i, align 4, !dbg !18270
  call void @llvm.dbg.declare(metadata !1035, metadata !9100, metadata !DIExpression()) #7, !dbg !18271
  call void @llvm.dbg.declare(metadata !1035, metadata !9106, metadata !DIExpression()) #7, !dbg !18271
  store i32 1, i32* %tmp8.i, align 4, !dbg !18271
  %34 = load i32, i32* %tmp8.i, align 4, !dbg !18271
  %35 = load i64, i64* %flags.addr.i, align 8, !dbg !18272
  call void @arch_local_irq_restore(i64 %35) #14, !dbg !18272
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !18273, !srcloc !9110
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !18274
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !18274
  %rlock.i93 = bitcast %union.anon* %37 to %struct.raw_spinlock*, !dbg !18274
  %38 = load i8, i8* %async.addr, align 1, !dbg !18275
  %tobool57 = trunc i8 %38 to i1, !dbg !18275
  br i1 %tobool57, label %if.end91, label %if.then58, !dbg !18277

if.then58:                                        ; preds = %for.end
  %39 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18278
  call void @ata_port_wait_eh(%struct.ata_port* %39) #12, !dbg !18280
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on59, metadata !18281, metadata !DIExpression()), !dbg !18283
  %40 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18283
  %pflags60 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %40, i32 0, i32 4, !dbg !18283
  %41 = load i32, i32* %pflags60, align 32, !dbg !18283
  %and61 = and i32 %41, 262144, !dbg !18283
  %tobool62 = icmp ne i32 %and61, 0, !dbg !18283
  %lnot63 = xor i1 %tobool62, true, !dbg !18283
  %lnot65 = xor i1 %lnot63, true, !dbg !18283
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !18283
  store i32 %lnot.ext66, i32* %__ret_warn_on59, align 4, !dbg !18283
  %42 = load i32, i32* %__ret_warn_on59, align 4, !dbg !18284
  %tobool67 = icmp ne i32 %42, 0, !dbg !18284
  %lnot68 = xor i1 %tobool67, true, !dbg !18284
  %lnot70 = xor i1 %lnot68, true, !dbg !18284
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !18284
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !18284
  %tobool73 = icmp ne i64 %conv72, 0, !dbg !18284
  br i1 %tobool73, label %if.then74, label %if.end83, !dbg !18283

if.then74:                                        ; preds = %if.then58
  br label %do.body75, !dbg !18284

do.body75:                                        ; preds = %if.then74
  br label %do.body76, !dbg !18286

do.body76:                                        ; preds = %do.body75
  br label %do.end77, !dbg !18288

do.end77:                                         ; preds = %do.body76
  br label %do.body78, !dbg !18286

do.body78:                                        ; preds = %do.end77
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 4959, i32 2305, i64 12) #7, !dbg !18290, !srcloc !18292
  br label %do.end79, !dbg !18290

do.end79:                                         ; preds = %do.body78
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 363) #7, !dbg !18293, !srcloc !18295
  br label %do.body80, !dbg !18286

do.body80:                                        ; preds = %do.end79
  br label %do.end81, !dbg !18296

do.end81:                                         ; preds = %do.body80
  br label %do.end82, !dbg !18286

do.end82:                                         ; preds = %do.end81
  br label %if.end83, !dbg !18286

if.end83:                                         ; preds = %do.end82, %if.then58
  %43 = load i32, i32* %__ret_warn_on59, align 4, !dbg !18283
  %tobool85 = icmp ne i32 %43, 0, !dbg !18283
  %lnot86 = xor i1 %tobool85, true, !dbg !18283
  %lnot88 = xor i1 %lnot86, true, !dbg !18283
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !18283
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !18283
  store i64 %conv90, i64* %tmp84, align 8, !dbg !18284
  %44 = load i64, i64* %tmp84, align 8, !dbg !18283
  br label %if.end91, !dbg !18298

if.end91:                                         ; preds = %if.end83, %for.end
  ret void, !dbg !18299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_pm_suspend(%struct.device* %dev) #0 !dbg !18300 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18301, metadata !DIExpression()), !dbg !18302
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !18303, metadata !DIExpression()), !dbg !18304
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18305, metadata !DIExpression()), !dbg !18307
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18307
  %1 = bitcast %struct.device* %0 to i8*, !dbg !18307
  store i8* %1, i8** %__mptr, align 8, !dbg !18307
  br label %do.body, !dbg !18307

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18308

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18307
  %add.ptr = getelementptr i8, i8* %2, i64 -13576, !dbg !18307
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !18307
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !18308
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !18307
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !18304
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18310
  %call = call zeroext i1 @pm_runtime_suspended(%struct.device* %5) #12, !dbg !18312
  br i1 %call, label %if.then, label %if.end, !dbg !18313

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !18314
  br label %return, !dbg !18314

if.end:                                           ; preds = %do.end
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !18315
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18316
  store i32 2, i32* %event, align 4, !dbg !18316
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18317
  %7 = load i32, i32* %coerce.dive, align 4, !dbg !18317
  call void @ata_port_suspend(%struct.ata_port* %6, i32 %7) #12, !dbg !18317
  store i32 0, i32* %retval, align 4, !dbg !18318
  br label %return, !dbg !18318

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !18319
  ret i32 %8, !dbg !18319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_pm_resume(%struct.device* %dev) #0 !dbg !18320 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18321, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18323, metadata !DIExpression()), !dbg !18325
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18325
  %1 = bitcast %struct.device* %0 to i8*, !dbg !18325
  store i8* %1, i8** %__mptr, align 8, !dbg !18325
  br label %do.body, !dbg !18325

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18326

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18325
  %add.ptr = getelementptr i8, i8* %2, i64 -13576, !dbg !18325
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !18325
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !18326
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !18325
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18328
  store i32 16, i32* %event, align 4, !dbg !18328
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18329
  %5 = load i32, i32* %coerce.dive, align 4, !dbg !18329
  call void @ata_port_resume_async(%struct.ata_port* %4, i32 %5) #12, !dbg !18329
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18330
  call void @pm_runtime_disable(%struct.device* %6) #12, !dbg !18331
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18332
  %call = call i32 @pm_runtime_set_active(%struct.device* %7) #12, !dbg !18333
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18334
  call void @pm_runtime_enable(%struct.device* %8) #12, !dbg !18335
  ret i32 0, !dbg !18336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_pm_freeze(%struct.device* %dev) #0 !dbg !18337 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18338, metadata !DIExpression()), !dbg !18339
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !18340, metadata !DIExpression()), !dbg !18341
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18342, metadata !DIExpression()), !dbg !18344
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18344
  %1 = bitcast %struct.device* %0 to i8*, !dbg !18344
  store i8* %1, i8** %__mptr, align 8, !dbg !18344
  br label %do.body, !dbg !18344

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18345

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18344
  %add.ptr = getelementptr i8, i8* %2, i64 -13576, !dbg !18344
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !18344
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !18345
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !18344
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !18341
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18347
  %call = call zeroext i1 @pm_runtime_suspended(%struct.device* %5) #12, !dbg !18349
  br i1 %call, label %if.then, label %if.end, !dbg !18350

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !18351
  br label %return, !dbg !18351

if.end:                                           ; preds = %do.end
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !18352
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18353
  store i32 1, i32* %event, align 4, !dbg !18353
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18354
  %7 = load i32, i32* %coerce.dive, align 4, !dbg !18354
  call void @ata_port_suspend(%struct.ata_port* %6, i32 %7) #12, !dbg !18354
  store i32 0, i32* %retval, align 4, !dbg !18355
  br label %return, !dbg !18355

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !18356
  ret i32 %8, !dbg !18356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_pm_poweroff(%struct.device* %dev) #0 !dbg !18357 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18358, metadata !DIExpression()), !dbg !18359
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18360, metadata !DIExpression()), !dbg !18362
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18362
  %1 = bitcast %struct.device* %0 to i8*, !dbg !18362
  store i8* %1, i8** %__mptr, align 8, !dbg !18362
  br label %do.body, !dbg !18362

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18363

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18362
  %add.ptr = getelementptr i8, i8* %2, i64 -13576, !dbg !18362
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !18362
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !18363
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !18362
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18365
  store i32 4, i32* %event, align 4, !dbg !18365
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18366
  %5 = load i32, i32* %coerce.dive, align 4, !dbg !18366
  call void @ata_port_suspend(%struct.ata_port* %4, i32 %5) #12, !dbg !18366
  ret i32 0, !dbg !18367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_runtime_suspend(%struct.device* %dev) #0 !dbg !18368 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18369, metadata !DIExpression()), !dbg !18370
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18371, metadata !DIExpression()), !dbg !18373
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18373
  %1 = bitcast %struct.device* %0 to i8*, !dbg !18373
  store i8* %1, i8** %__mptr, align 8, !dbg !18373
  br label %do.body, !dbg !18373

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18374

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18373
  %add.ptr = getelementptr i8, i8* %2, i64 -13576, !dbg !18373
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !18373
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !18374
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !18373
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18376
  store i32 1026, i32* %event, align 4, !dbg !18376
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18377
  %5 = load i32, i32* %coerce.dive, align 4, !dbg !18377
  call void @ata_port_suspend(%struct.ata_port* %4, i32 %5) #12, !dbg !18377
  ret i32 0, !dbg !18378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_runtime_resume(%struct.device* %dev) #0 !dbg !18379 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.pm_message, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18380, metadata !DIExpression()), !dbg !18381
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18382, metadata !DIExpression()), !dbg !18384
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18384
  %1 = bitcast %struct.device* %0 to i8*, !dbg !18384
  store i8* %1, i8** %__mptr, align 8, !dbg !18384
  br label %do.body, !dbg !18384

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18385

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18384
  %add.ptr = getelementptr i8, i8* %2, i64 -13576, !dbg !18384
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !18384
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !18385
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !18384
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18387
  store i32 1040, i32* %event, align 4, !dbg !18387
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %.compoundliteral, i32 0, i32 0, !dbg !18388
  %5 = load i32, i32* %coerce.dive, align 4, !dbg !18388
  call void @ata_port_resume(%struct.ata_port* %4, i32 %5) #12, !dbg !18388
  ret i32 0, !dbg !18389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_runtime_idle(%struct.device* %dev) #0 !dbg !18390 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %adev = alloca %struct.ata_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18391, metadata !DIExpression()), !dbg !18392
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !18393, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18395, metadata !DIExpression()), !dbg !18397
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18397
  %1 = bitcast %struct.device* %0 to i8*, !dbg !18397
  store i8* %1, i8** %__mptr, align 8, !dbg !18397
  br label %do.body, !dbg !18397

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18398

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !18397
  %add.ptr = getelementptr i8, i8* %2, i64 -13576, !dbg !18397
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !18397
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !18398
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !18397
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !18394
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !18400, metadata !DIExpression()), !dbg !18401
  call void @llvm.dbg.declare(metadata %struct.ata_device** %adev, metadata !18402, metadata !DIExpression()), !dbg !18403
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !18404
  %call = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %5, i32 1) #12, !dbg !18404
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !18404
  br label %for.cond, !dbg !18404

for.cond:                                         ; preds = %for.inc7, %do.end
  %6 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18406
  %tobool = icmp ne %struct.ata_link* %6, null, !dbg !18404
  br i1 %tobool, label %for.body, label %for.end9, !dbg !18404

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18408
  %call1 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %7, i32 0) #12, !dbg !18408
  store %struct.ata_device* %call1, %struct.ata_device** %adev, align 8, !dbg !18408
  br label %for.cond2, !dbg !18408

for.cond2:                                        ; preds = %for.inc, %for.body
  %8 = load %struct.ata_device*, %struct.ata_device** %adev, align 8, !dbg !18411
  %tobool3 = icmp ne %struct.ata_device* %8, null, !dbg !18408
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !18408

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.ata_device*, %struct.ata_device** %adev, align 8, !dbg !18413
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 11, !dbg !18415
  %10 = load i32, i32* %class, align 64, !dbg !18415
  %cmp = icmp eq i32 %10, 3, !dbg !18416
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18417

land.lhs.true:                                    ; preds = %for.body4
  %11 = load %struct.ata_device*, %struct.ata_device** %adev, align 8, !dbg !18418
  %call5 = call zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %11) #12, !dbg !18419
  br i1 %call5, label %if.end, label %if.then, !dbg !18420

if.then:                                          ; preds = %land.lhs.true
  store i32 -16, i32* %retval, align 4, !dbg !18421
  br label %return, !dbg !18421

if.end:                                           ; preds = %land.lhs.true, %for.body4
  br label %for.inc, !dbg !18422

for.inc:                                          ; preds = %if.end
  %12 = load %struct.ata_device*, %struct.ata_device** %adev, align 8, !dbg !18411
  %13 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18411
  %call6 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %12, %struct.ata_link* %13, i32 0) #12, !dbg !18411
  store %struct.ata_device* %call6, %struct.ata_device** %adev, align 8, !dbg !18411
  br label %for.cond2, !dbg !18411, !llvm.loop !18423

for.end:                                          ; preds = %for.cond2
  br label %for.inc7, !dbg !18425

for.inc7:                                         ; preds = %for.end
  %14 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !18406
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !18406
  %call8 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %14, %struct.ata_port* %15, i32 1) #12, !dbg !18406
  store %struct.ata_link* %call8, %struct.ata_link** %link, align 8, !dbg !18406
  br label %for.cond, !dbg !18406, !llvm.loop !18426

for.end9:                                         ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !18428
  br label %return, !dbg !18428

return:                                           ; preds = %for.end9, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !18429
  ret i32 %16, !dbg !18429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_suspended(%struct.device* %dev) #0 !dbg !18430 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18434, metadata !DIExpression()), !dbg !18435
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18436
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !18437
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !18438
  %1 = load i32, i32* %runtime_status, align 4, !dbg !18438
  %cmp = icmp eq i32 %1, 2, !dbg !18439
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18440

land.rhs:                                         ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18441
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !18442
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !18443
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !18443
  %bf.clear = and i16 %bf.load, 7, !dbg !18443
  %bf.cast = zext i16 %bf.clear to i32, !dbg !18443
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !18444
  %lnot = xor i1 %tobool, true, !dbg !18444
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !18445
  ret i1 %3, !dbg !18446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_port_suspend(%struct.ata_port* %ap, i32 %mesg.coerce) #0 !dbg !18447 {
entry:
  %mesg = alloca %struct.pm_message, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !18448, metadata !DIExpression()), !dbg !18449
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !18450, metadata !DIExpression()), !dbg !18451
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18452
  %coerce.dive1 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0, !dbg !18453
  %1 = load i32, i32* %coerce.dive1, align 4, !dbg !18453
  call void @ata_port_request_pm(%struct.ata_port* %0, i32 %1, i32 0, i32 28, i1 zeroext false) #12, !dbg !18453
  ret void, !dbg !18454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #0 !dbg !18455 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18456, metadata !DIExpression()), !dbg !18457
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18458
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #12, !dbg !18459
  ret void, !dbg !18460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_active(%struct.device* %dev) #0 !dbg !18461 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18462, metadata !DIExpression()), !dbg !18463
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18464
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 0) #12, !dbg !18465
  ret i32 %call, !dbg !18466
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #1

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_disable(%struct.device*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_set_status(%struct.device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_port_resume(%struct.ata_port* %ap, i32 %mesg.coerce) #0 !dbg !18467 {
entry:
  %mesg = alloca %struct.pm_message, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !18468, metadata !DIExpression()), !dbg !18469
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !18470, metadata !DIExpression()), !dbg !18471
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !18472
  %coerce.dive1 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0, !dbg !18473
  %1 = load i32, i32* %coerce.dive1, align 4, !dbg !18473
  call void @ata_port_request_pm(%struct.ata_port* %0, i32 %1, i32 6, i32 12, i1 zeroext false) #12, !dbg !18473
  ret void, !dbg !18474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %dev) #0 !dbg !18475 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !18478, metadata !DIExpression()), !dbg !18479
  ret i1 false, !dbg !18480
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #11

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #4 !dbg !18481 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !18483, metadata !DIExpression()), !dbg !18487
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !18489, metadata !DIExpression()), !dbg !18490
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18491, metadata !DIExpression()), !dbg !18492
  %0 = load i64, i64* %size.addr, align 8, !dbg !18493
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !18495
  br i1 %1, label %if.then, label %if.end447, !dbg !18496

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !18497
  %tobool = icmp ne i64 %2, 0, !dbg !18497
  br i1 %tobool, label %if.end, label %if.then1, !dbg !18500

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !18501
  br label %return, !dbg !18501

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !18502
  %cmp = icmp ult i64 %3, 4096, !dbg !18504
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !18505

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !18506
  br label %return, !dbg !18506

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub = sub i64 %4, 1, !dbg !18507
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !18507
  br i1 %5, label %cond.true, label %cond.false442, !dbg !18507

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub4 = sub i64 %6, 1, !dbg !18507
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !18507
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !18507

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub6 = sub i64 %8, 1, !dbg !18507
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !18507
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !18507

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !18507

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub9 = sub i64 %9, 1, !dbg !18507
  %and = and i64 %sub9, -9223372036854775808, !dbg !18507
  %tobool10 = icmp ne i64 %and, 0, !dbg !18507
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !18507

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !18507

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub13 = sub i64 %10, 1, !dbg !18507
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !18507
  %tobool15 = icmp ne i64 %and14, 0, !dbg !18507
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !18507

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !18507

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub18 = sub i64 %11, 1, !dbg !18507
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !18507
  %tobool20 = icmp ne i64 %and19, 0, !dbg !18507
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !18507

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !18507

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub23 = sub i64 %12, 1, !dbg !18507
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !18507
  %tobool25 = icmp ne i64 %and24, 0, !dbg !18507
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !18507

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !18507

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub28 = sub i64 %13, 1, !dbg !18507
  %and29 = and i64 %sub28, 576460752303423488, !dbg !18507
  %tobool30 = icmp ne i64 %and29, 0, !dbg !18507
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !18507

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !18507

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub33 = sub i64 %14, 1, !dbg !18507
  %and34 = and i64 %sub33, 288230376151711744, !dbg !18507
  %tobool35 = icmp ne i64 %and34, 0, !dbg !18507
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !18507

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !18507

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub38 = sub i64 %15, 1, !dbg !18507
  %and39 = and i64 %sub38, 144115188075855872, !dbg !18507
  %tobool40 = icmp ne i64 %and39, 0, !dbg !18507
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !18507

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !18507

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub43 = sub i64 %16, 1, !dbg !18507
  %and44 = and i64 %sub43, 72057594037927936, !dbg !18507
  %tobool45 = icmp ne i64 %and44, 0, !dbg !18507
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !18507

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !18507

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub48 = sub i64 %17, 1, !dbg !18507
  %and49 = and i64 %sub48, 36028797018963968, !dbg !18507
  %tobool50 = icmp ne i64 %and49, 0, !dbg !18507
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !18507

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !18507

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub53 = sub i64 %18, 1, !dbg !18507
  %and54 = and i64 %sub53, 18014398509481984, !dbg !18507
  %tobool55 = icmp ne i64 %and54, 0, !dbg !18507
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !18507

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !18507

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub58 = sub i64 %19, 1, !dbg !18507
  %and59 = and i64 %sub58, 9007199254740992, !dbg !18507
  %tobool60 = icmp ne i64 %and59, 0, !dbg !18507
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !18507

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !18507

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub63 = sub i64 %20, 1, !dbg !18507
  %and64 = and i64 %sub63, 4503599627370496, !dbg !18507
  %tobool65 = icmp ne i64 %and64, 0, !dbg !18507
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !18507

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !18507

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub68 = sub i64 %21, 1, !dbg !18507
  %and69 = and i64 %sub68, 2251799813685248, !dbg !18507
  %tobool70 = icmp ne i64 %and69, 0, !dbg !18507
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !18507

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !18507

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub73 = sub i64 %22, 1, !dbg !18507
  %and74 = and i64 %sub73, 1125899906842624, !dbg !18507
  %tobool75 = icmp ne i64 %and74, 0, !dbg !18507
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !18507

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !18507

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub78 = sub i64 %23, 1, !dbg !18507
  %and79 = and i64 %sub78, 562949953421312, !dbg !18507
  %tobool80 = icmp ne i64 %and79, 0, !dbg !18507
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !18507

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !18507

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub83 = sub i64 %24, 1, !dbg !18507
  %and84 = and i64 %sub83, 281474976710656, !dbg !18507
  %tobool85 = icmp ne i64 %and84, 0, !dbg !18507
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !18507

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !18507

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub88 = sub i64 %25, 1, !dbg !18507
  %and89 = and i64 %sub88, 140737488355328, !dbg !18507
  %tobool90 = icmp ne i64 %and89, 0, !dbg !18507
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !18507

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !18507

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub93 = sub i64 %26, 1, !dbg !18507
  %and94 = and i64 %sub93, 70368744177664, !dbg !18507
  %tobool95 = icmp ne i64 %and94, 0, !dbg !18507
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !18507

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !18507

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub98 = sub i64 %27, 1, !dbg !18507
  %and99 = and i64 %sub98, 35184372088832, !dbg !18507
  %tobool100 = icmp ne i64 %and99, 0, !dbg !18507
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !18507

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !18507

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub103 = sub i64 %28, 1, !dbg !18507
  %and104 = and i64 %sub103, 17592186044416, !dbg !18507
  %tobool105 = icmp ne i64 %and104, 0, !dbg !18507
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !18507

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !18507

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub108 = sub i64 %29, 1, !dbg !18507
  %and109 = and i64 %sub108, 8796093022208, !dbg !18507
  %tobool110 = icmp ne i64 %and109, 0, !dbg !18507
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !18507

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !18507

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub113 = sub i64 %30, 1, !dbg !18507
  %and114 = and i64 %sub113, 4398046511104, !dbg !18507
  %tobool115 = icmp ne i64 %and114, 0, !dbg !18507
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !18507

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !18507

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub118 = sub i64 %31, 1, !dbg !18507
  %and119 = and i64 %sub118, 2199023255552, !dbg !18507
  %tobool120 = icmp ne i64 %and119, 0, !dbg !18507
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !18507

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !18507

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub123 = sub i64 %32, 1, !dbg !18507
  %and124 = and i64 %sub123, 1099511627776, !dbg !18507
  %tobool125 = icmp ne i64 %and124, 0, !dbg !18507
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !18507

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !18507

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub128 = sub i64 %33, 1, !dbg !18507
  %and129 = and i64 %sub128, 549755813888, !dbg !18507
  %tobool130 = icmp ne i64 %and129, 0, !dbg !18507
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !18507

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !18507

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub133 = sub i64 %34, 1, !dbg !18507
  %and134 = and i64 %sub133, 274877906944, !dbg !18507
  %tobool135 = icmp ne i64 %and134, 0, !dbg !18507
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !18507

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !18507

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub138 = sub i64 %35, 1, !dbg !18507
  %and139 = and i64 %sub138, 137438953472, !dbg !18507
  %tobool140 = icmp ne i64 %and139, 0, !dbg !18507
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !18507

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !18507

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub143 = sub i64 %36, 1, !dbg !18507
  %and144 = and i64 %sub143, 68719476736, !dbg !18507
  %tobool145 = icmp ne i64 %and144, 0, !dbg !18507
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !18507

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !18507

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub148 = sub i64 %37, 1, !dbg !18507
  %and149 = and i64 %sub148, 34359738368, !dbg !18507
  %tobool150 = icmp ne i64 %and149, 0, !dbg !18507
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !18507

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !18507

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub153 = sub i64 %38, 1, !dbg !18507
  %and154 = and i64 %sub153, 17179869184, !dbg !18507
  %tobool155 = icmp ne i64 %and154, 0, !dbg !18507
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !18507

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !18507

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub158 = sub i64 %39, 1, !dbg !18507
  %and159 = and i64 %sub158, 8589934592, !dbg !18507
  %tobool160 = icmp ne i64 %and159, 0, !dbg !18507
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !18507

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !18507

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub163 = sub i64 %40, 1, !dbg !18507
  %and164 = and i64 %sub163, 4294967296, !dbg !18507
  %tobool165 = icmp ne i64 %and164, 0, !dbg !18507
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !18507

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !18507

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub168 = sub i64 %41, 1, !dbg !18507
  %and169 = and i64 %sub168, 2147483648, !dbg !18507
  %tobool170 = icmp ne i64 %and169, 0, !dbg !18507
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !18507

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !18507

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub173 = sub i64 %42, 1, !dbg !18507
  %and174 = and i64 %sub173, 1073741824, !dbg !18507
  %tobool175 = icmp ne i64 %and174, 0, !dbg !18507
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !18507

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !18507

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub178 = sub i64 %43, 1, !dbg !18507
  %and179 = and i64 %sub178, 536870912, !dbg !18507
  %tobool180 = icmp ne i64 %and179, 0, !dbg !18507
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !18507

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !18507

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub183 = sub i64 %44, 1, !dbg !18507
  %and184 = and i64 %sub183, 268435456, !dbg !18507
  %tobool185 = icmp ne i64 %and184, 0, !dbg !18507
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !18507

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !18507

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub188 = sub i64 %45, 1, !dbg !18507
  %and189 = and i64 %sub188, 134217728, !dbg !18507
  %tobool190 = icmp ne i64 %and189, 0, !dbg !18507
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !18507

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !18507

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub193 = sub i64 %46, 1, !dbg !18507
  %and194 = and i64 %sub193, 67108864, !dbg !18507
  %tobool195 = icmp ne i64 %and194, 0, !dbg !18507
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !18507

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !18507

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub198 = sub i64 %47, 1, !dbg !18507
  %and199 = and i64 %sub198, 33554432, !dbg !18507
  %tobool200 = icmp ne i64 %and199, 0, !dbg !18507
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !18507

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !18507

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub203 = sub i64 %48, 1, !dbg !18507
  %and204 = and i64 %sub203, 16777216, !dbg !18507
  %tobool205 = icmp ne i64 %and204, 0, !dbg !18507
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !18507

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !18507

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub208 = sub i64 %49, 1, !dbg !18507
  %and209 = and i64 %sub208, 8388608, !dbg !18507
  %tobool210 = icmp ne i64 %and209, 0, !dbg !18507
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !18507

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !18507

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub213 = sub i64 %50, 1, !dbg !18507
  %and214 = and i64 %sub213, 4194304, !dbg !18507
  %tobool215 = icmp ne i64 %and214, 0, !dbg !18507
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !18507

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !18507

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub218 = sub i64 %51, 1, !dbg !18507
  %and219 = and i64 %sub218, 2097152, !dbg !18507
  %tobool220 = icmp ne i64 %and219, 0, !dbg !18507
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !18507

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !18507

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub223 = sub i64 %52, 1, !dbg !18507
  %and224 = and i64 %sub223, 1048576, !dbg !18507
  %tobool225 = icmp ne i64 %and224, 0, !dbg !18507
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !18507

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !18507

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub228 = sub i64 %53, 1, !dbg !18507
  %and229 = and i64 %sub228, 524288, !dbg !18507
  %tobool230 = icmp ne i64 %and229, 0, !dbg !18507
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !18507

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !18507

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub233 = sub i64 %54, 1, !dbg !18507
  %and234 = and i64 %sub233, 262144, !dbg !18507
  %tobool235 = icmp ne i64 %and234, 0, !dbg !18507
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !18507

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !18507

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub238 = sub i64 %55, 1, !dbg !18507
  %and239 = and i64 %sub238, 131072, !dbg !18507
  %tobool240 = icmp ne i64 %and239, 0, !dbg !18507
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !18507

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !18507

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub243 = sub i64 %56, 1, !dbg !18507
  %and244 = and i64 %sub243, 65536, !dbg !18507
  %tobool245 = icmp ne i64 %and244, 0, !dbg !18507
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !18507

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !18507

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub248 = sub i64 %57, 1, !dbg !18507
  %and249 = and i64 %sub248, 32768, !dbg !18507
  %tobool250 = icmp ne i64 %and249, 0, !dbg !18507
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !18507

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !18507

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub253 = sub i64 %58, 1, !dbg !18507
  %and254 = and i64 %sub253, 16384, !dbg !18507
  %tobool255 = icmp ne i64 %and254, 0, !dbg !18507
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !18507

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !18507

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub258 = sub i64 %59, 1, !dbg !18507
  %and259 = and i64 %sub258, 8192, !dbg !18507
  %tobool260 = icmp ne i64 %and259, 0, !dbg !18507
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !18507

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !18507

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub263 = sub i64 %60, 1, !dbg !18507
  %and264 = and i64 %sub263, 4096, !dbg !18507
  %tobool265 = icmp ne i64 %and264, 0, !dbg !18507
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !18507

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !18507

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub268 = sub i64 %61, 1, !dbg !18507
  %and269 = and i64 %sub268, 2048, !dbg !18507
  %tobool270 = icmp ne i64 %and269, 0, !dbg !18507
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !18507

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !18507

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub273 = sub i64 %62, 1, !dbg !18507
  %and274 = and i64 %sub273, 1024, !dbg !18507
  %tobool275 = icmp ne i64 %and274, 0, !dbg !18507
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !18507

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !18507

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub278 = sub i64 %63, 1, !dbg !18507
  %and279 = and i64 %sub278, 512, !dbg !18507
  %tobool280 = icmp ne i64 %and279, 0, !dbg !18507
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !18507

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !18507

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub283 = sub i64 %64, 1, !dbg !18507
  %and284 = and i64 %sub283, 256, !dbg !18507
  %tobool285 = icmp ne i64 %and284, 0, !dbg !18507
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !18507

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !18507

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub288 = sub i64 %65, 1, !dbg !18507
  %and289 = and i64 %sub288, 128, !dbg !18507
  %tobool290 = icmp ne i64 %and289, 0, !dbg !18507
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !18507

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !18507

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub293 = sub i64 %66, 1, !dbg !18507
  %and294 = and i64 %sub293, 64, !dbg !18507
  %tobool295 = icmp ne i64 %and294, 0, !dbg !18507
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !18507

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !18507

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub298 = sub i64 %67, 1, !dbg !18507
  %and299 = and i64 %sub298, 32, !dbg !18507
  %tobool300 = icmp ne i64 %and299, 0, !dbg !18507
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !18507

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !18507

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub303 = sub i64 %68, 1, !dbg !18507
  %and304 = and i64 %sub303, 16, !dbg !18507
  %tobool305 = icmp ne i64 %and304, 0, !dbg !18507
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !18507

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !18507

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub308 = sub i64 %69, 1, !dbg !18507
  %and309 = and i64 %sub308, 8, !dbg !18507
  %tobool310 = icmp ne i64 %and309, 0, !dbg !18507
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !18507

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !18507

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub313 = sub i64 %70, 1, !dbg !18507
  %and314 = and i64 %sub313, 4, !dbg !18507
  %tobool315 = icmp ne i64 %and314, 0, !dbg !18507
  %71 = zext i1 %tobool315 to i64, !dbg !18507
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !18507
  br label %cond.end, !dbg !18507

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !18507
  br label %cond.end317, !dbg !18507

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !18507
  br label %cond.end319, !dbg !18507

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !18507
  br label %cond.end321, !dbg !18507

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !18507
  br label %cond.end323, !dbg !18507

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !18507
  br label %cond.end325, !dbg !18507

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !18507
  br label %cond.end327, !dbg !18507

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !18507
  br label %cond.end329, !dbg !18507

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !18507
  br label %cond.end331, !dbg !18507

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !18507
  br label %cond.end333, !dbg !18507

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !18507
  br label %cond.end335, !dbg !18507

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !18507
  br label %cond.end337, !dbg !18507

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !18507
  br label %cond.end339, !dbg !18507

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !18507
  br label %cond.end341, !dbg !18507

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !18507
  br label %cond.end343, !dbg !18507

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !18507
  br label %cond.end345, !dbg !18507

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !18507
  br label %cond.end347, !dbg !18507

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !18507
  br label %cond.end349, !dbg !18507

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !18507
  br label %cond.end351, !dbg !18507

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !18507
  br label %cond.end353, !dbg !18507

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !18507
  br label %cond.end355, !dbg !18507

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !18507
  br label %cond.end357, !dbg !18507

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !18507
  br label %cond.end359, !dbg !18507

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !18507
  br label %cond.end361, !dbg !18507

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !18507
  br label %cond.end363, !dbg !18507

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !18507
  br label %cond.end365, !dbg !18507

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !18507
  br label %cond.end367, !dbg !18507

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !18507
  br label %cond.end369, !dbg !18507

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !18507
  br label %cond.end371, !dbg !18507

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !18507
  br label %cond.end373, !dbg !18507

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !18507
  br label %cond.end375, !dbg !18507

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !18507
  br label %cond.end377, !dbg !18507

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !18507
  br label %cond.end379, !dbg !18507

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !18507
  br label %cond.end381, !dbg !18507

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !18507
  br label %cond.end383, !dbg !18507

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !18507
  br label %cond.end385, !dbg !18507

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !18507
  br label %cond.end387, !dbg !18507

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !18507
  br label %cond.end389, !dbg !18507

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !18507
  br label %cond.end391, !dbg !18507

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !18507
  br label %cond.end393, !dbg !18507

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !18507
  br label %cond.end395, !dbg !18507

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !18507
  br label %cond.end397, !dbg !18507

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !18507
  br label %cond.end399, !dbg !18507

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !18507
  br label %cond.end401, !dbg !18507

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !18507
  br label %cond.end403, !dbg !18507

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !18507
  br label %cond.end405, !dbg !18507

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !18507
  br label %cond.end407, !dbg !18507

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !18507
  br label %cond.end409, !dbg !18507

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !18507
  br label %cond.end411, !dbg !18507

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !18507
  br label %cond.end413, !dbg !18507

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !18507
  br label %cond.end415, !dbg !18507

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !18507
  br label %cond.end417, !dbg !18507

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !18507
  br label %cond.end419, !dbg !18507

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !18507
  br label %cond.end421, !dbg !18507

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !18507
  br label %cond.end423, !dbg !18507

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !18507
  br label %cond.end425, !dbg !18507

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !18507
  br label %cond.end427, !dbg !18507

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !18507
  br label %cond.end429, !dbg !18507

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !18507
  br label %cond.end431, !dbg !18507

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !18507
  br label %cond.end433, !dbg !18507

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !18507
  br label %cond.end435, !dbg !18507

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !18507
  br label %cond.end437, !dbg !18507

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !18507
  br label %cond.end440, !dbg !18507

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !18507

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !18507
  br label %cond.end444, !dbg !18507

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !18507
  %sub443 = sub i64 %72, 1, !dbg !18507
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !18507
  br label %cond.end444, !dbg !18507

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !18507
  %sub446 = sub i32 %cond445, 12, !dbg !18508
  %add = add i32 %sub446, 1, !dbg !18509
  store i32 %add, i32* %retval, align 4, !dbg !18510
  br label %return, !dbg !18510

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !18511
  %dec = add i64 %73, -1, !dbg !18511
  store i64 %dec, i64* %size.addr, align 8, !dbg !18511
  %74 = load i64, i64* %size.addr, align 8, !dbg !18512
  %shr = lshr i64 %74, 12, !dbg !18512
  store i64 %shr, i64* %size.addr, align 8, !dbg !18512
  %75 = load i64, i64* %size.addr, align 8, !dbg !18513
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !18490
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !18514
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !18515
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #8, !dbg !18514, !srcloc !18516
  store i32 %78, i32* %bitpos.i, align 4, !dbg !18514
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !18517
  %add.i = add i32 %79, 1, !dbg !18518
  store i32 %add.i, i32* %retval, align 4, !dbg !18519
  br label %return, !dbg !18519

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !18520
  ret i32 %80, !dbg !18520
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #4 !dbg !18521 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !18483, metadata !DIExpression()), !dbg !18524
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !18489, metadata !DIExpression()), !dbg !18526
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18527, metadata !DIExpression()), !dbg !18528
  %0 = load i64, i64* %n.addr, align 8, !dbg !18529
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !18526
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !18530
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !18531
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #8, !dbg !18530, !srcloc !18516
  store i32 %3, i32* %bitpos.i, align 4, !dbg !18530
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !18532
  %add.i = add i32 %4, 1, !dbg !18533
  %sub = sub i32 %add.i, 1, !dbg !18534
  ret i32 %sub, !dbg !18535
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !18536 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !18540, metadata !DIExpression()), !dbg !18541
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !18542, metadata !DIExpression()), !dbg !18543
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18544, metadata !DIExpression()), !dbg !18545
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18546, metadata !DIExpression()), !dbg !18547
  %0 = load i8*, i8** %object.addr, align 8, !dbg !18548
  ret i8* %0, !dbg !18549
}

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !18550 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !18554, metadata !DIExpression()), !dbg !18555
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18556
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #12, !dbg !18557
  ret void, !dbg !18558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !18559 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !18562, metadata !DIExpression()), !dbg !18563
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !18564, metadata !DIExpression()), !dbg !18565
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18566
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !18567
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #12, !dbg !18568
  ret void, !dbg !18569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !18570 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !18573, metadata !DIExpression()), !dbg !18575
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !18579, metadata !DIExpression()), !dbg !18580
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !18581, metadata !DIExpression()), !dbg !18583
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16150, metadata !DIExpression()), !dbg !18584
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16160, metadata !DIExpression()), !dbg !18586
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !18587, metadata !DIExpression()), !dbg !18588
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !18589, metadata !DIExpression()), !dbg !18590
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !18591, metadata !DIExpression()), !dbg !18592
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !18593, metadata !DIExpression()), !dbg !18594
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !18595, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.declare(metadata i32* %old, metadata !18597, metadata !DIExpression()), !dbg !18598
  %0 = load i32, i32* %i.addr, align 4, !dbg !18599
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18600
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !18601
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18602
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !18602
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18603
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !18604
  %conv.i.i = trunc i64 %5 to i32, !dbg !18604
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #14, !dbg !18605
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18606
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !18606
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #14, !dbg !18606
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !18607
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18608
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !18583
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !18583
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !18583
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !18583
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !18583
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #7, !dbg !18583, !srcloc !18609
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !18583
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !18583
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !18583
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !18583
  store i32 %15, i32* %old, align 4, !dbg !18598
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !18610
  %tobool = icmp ne i32* %16, null, !dbg !18610
  br i1 %tobool, label %if.then, label %if.end, !dbg !18612

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !18613
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !18614
  store i32 %17, i32* %18, align 4, !dbg !18615
  br label %if.end, !dbg !18616

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !18617
  %tobool1 = icmp ne i32 %19, 0, !dbg !18617
  %lnot = xor i1 %tobool1, true, !dbg !18617
  %lnot2 = xor i1 %lnot, true, !dbg !18617
  %lnot3 = xor i1 %lnot2, true, !dbg !18617
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !18617
  %conv = sext i32 %lnot.ext to i64, !dbg !18617
  %tobool4 = icmp ne i64 %conv, 0, !dbg !18617
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !18619

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18620
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #12, !dbg !18621
  br label %if.end17, !dbg !18621

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !18622
  %cmp = icmp slt i32 %21, 0, !dbg !18622
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !18622

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !18622
  %23 = load i32, i32* %i.addr, align 4, !dbg !18622
  %add = add i32 %22, %23, !dbg !18622
  %cmp7 = icmp slt i32 %add, 0, !dbg !18622
  br label %lor.end, !dbg !18622

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !18622
  %lnot11 = xor i1 %lnot9, true, !dbg !18622
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !18622
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !18622
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !18622
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !18624

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18625
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #12, !dbg !18626
  br label %if.end16, !dbg !18626

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !18627
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !18628 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18632, metadata !DIExpression()), !dbg !18633
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18634, metadata !DIExpression()), !dbg !18635
  ret i1 true, !dbg !18636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !18637 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !18641, metadata !DIExpression()), !dbg !18642
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18643, metadata !DIExpression()), !dbg !18644
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !18645, metadata !DIExpression()), !dbg !18646
  ret void, !dbg !18647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !18648 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !18651, metadata !DIExpression()), !dbg !18652
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18653
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #12, !dbg !18654
  ret i1 %call, !dbg !18655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !18656 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !18659, metadata !DIExpression()), !dbg !18660
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !18661, metadata !DIExpression()), !dbg !18662
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18663
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !18664
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #12, !dbg !18665
  ret i1 %call, !dbg !18666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !18667 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !18670, metadata !DIExpression()), !dbg !18672
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !18676, metadata !DIExpression()), !dbg !18677
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !18678, metadata !DIExpression()), !dbg !18680
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16150, metadata !DIExpression()), !dbg !18681
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16160, metadata !DIExpression()), !dbg !18683
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !18684, metadata !DIExpression()), !dbg !18685
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !18686, metadata !DIExpression()), !dbg !18687
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !18688, metadata !DIExpression()), !dbg !18689
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !18690, metadata !DIExpression()), !dbg !18691
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !18692, metadata !DIExpression()), !dbg !18693
  call void @llvm.dbg.declare(metadata i32* %old, metadata !18694, metadata !DIExpression()), !dbg !18695
  %0 = load i32, i32* %i.addr, align 4, !dbg !18696
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18697
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !18698
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18699
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !18699
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18700
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !18701
  %conv.i.i = trunc i64 %5 to i32, !dbg !18701
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #14, !dbg !18702
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18703
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !18703
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #14, !dbg !18703
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !18704
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18705
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !18680
  %sub.i.i = sub i32 0, %10, !dbg !18680
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !18680
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !18680
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !18680
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !18680
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #7, !dbg !18680, !srcloc !18706
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !18680
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !18680
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !18680
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !18680
  store i32 %15, i32* %old, align 4, !dbg !18695
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !18707
  %tobool = icmp ne i32* %16, null, !dbg !18707
  br i1 %tobool, label %if.then, label %if.end, !dbg !18709

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !18710
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !18711
  store i32 %17, i32* %18, align 4, !dbg !18712
  br label %if.end, !dbg !18713

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !18714
  %20 = load i32, i32* %i.addr, align 4, !dbg !18716
  %cmp = icmp eq i32 %19, %20, !dbg !18717
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !18718

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !18719, !srcloc !18721
  store i1 true, i1* %retval, align 1, !dbg !18722
  br label %return, !dbg !18722

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !18723
  %cmp3 = icmp slt i32 %21, 0, !dbg !18723
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !18723

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !18723
  %23 = load i32, i32* %i.addr, align 4, !dbg !18723
  %sub = sub i32 %22, %23, !dbg !18723
  %cmp4 = icmp slt i32 %sub, 0, !dbg !18723
  br label %lor.end, !dbg !18723

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !18723
  %lnot5 = xor i1 %lnot, true, !dbg !18723
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !18723
  %conv = sext i32 %lnot.ext to i64, !dbg !18723
  %tobool6 = icmp ne i64 %conv, 0, !dbg !18723
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !18725

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18726
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #12, !dbg !18727
  br label %if.end8, !dbg !18727

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !18728
  br label %return, !dbg !18728

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !18729
  ret i1 %26, !dbg !18729
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !18730 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18733, metadata !DIExpression()), !dbg !18734
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18735
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !18736
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18736
  ret i8* %1, !dbg !18737
}

; Function Attrs: noredzone
declare dso_local void @scsi_host_put(%struct.Scsi_Host*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !18738 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !18741, metadata !DIExpression()), !dbg !18745
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !18749, metadata !DIExpression()), !dbg !18750
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !18751, metadata !DIExpression()), !dbg !18753
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !18755, metadata !DIExpression()), !dbg !18756
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !18757, metadata !DIExpression()), !dbg !18758
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !18759, metadata !DIExpression()), !dbg !18760
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !18761, metadata !DIExpression()), !dbg !18762
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18763, metadata !DIExpression()), !dbg !18764
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !18765
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !18766
  %1 = load i32, i32* %n.addr, align 4, !dbg !18767
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18768
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !18768
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18769
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !18770
  %conv.i.i = trunc i64 %5 to i32, !dbg !18770
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #14, !dbg !18771
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18772
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !18772
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #14, !dbg !18772
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18773
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !18774
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !18775
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !18775
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !18775
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !18775
  ret void, !dbg !18777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !18778 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !18782, metadata !DIExpression()), !dbg !18783
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !18784
  %1 = ptrtoint i8* %0 to i64, !dbg !18784
  %2 = inttoptr i64 %1 to i8*, !dbg !18784
  %3 = ptrtoint i8* %2 to i64, !dbg !18784
  %cmp = icmp uge i64 %3, -4095, !dbg !18784
  %lnot = xor i1 %cmp, true, !dbg !18784
  %lnot1 = xor i1 %lnot, true, !dbg !18784
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !18784
  %conv = sext i32 %lnot.ext to i64, !dbg !18784
  %tobool = icmp ne i64 %conv, 0, !dbg !18784
  ret i1 %tobool, !dbg !18785
}

; Function Attrs: noredzone
declare dso_local i64 @async_schedule_node(void (i8*, i64)*, i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @ata_scsi_scan_host(%struct.ata_port*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !18786 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !18791, metadata !DIExpression()), !dbg !18792
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !18793
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !18794
  %1 = load i8*, i8** %name, align 8, !dbg !18794
  ret i8* %1, !dbg !18795
}

; Function Attrs: noredzone
declare dso_local i32 @devm_request_threaded_irq(%struct.device*, i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @zpodd_exit(%struct.ata_device* %dev) #0 !dbg !18796 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !18797, metadata !DIExpression()), !dbg !18798
  ret void, !dbg !18799
}

; Function Attrs: noredzone
declare dso_local void @ata_tlink_delete(%struct.ata_link*) #1

; Function Attrs: noredzone
declare dso_local void @scsi_remove_host(%struct.Scsi_Host*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @ata_parse_force_param() #6 section ".init.text" !dbg !18800 {
entry:
  %idx = alloca i32, align 4
  %size = alloca i32, align 4
  %last_port = alloca i32, align 4
  %last_device = alloca i32, align 4
  %p = alloca i8*, align 8
  %cur = alloca i8*, align 8
  %next = alloca i8*, align 8
  %reason = alloca i8*, align 8
  %te = alloca %struct.ata_force_ent, align 8
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !18801, metadata !DIExpression()), !dbg !18802
  store i32 0, i32* %idx, align 4, !dbg !18802
  call void @llvm.dbg.declare(metadata i32* %size, metadata !18803, metadata !DIExpression()), !dbg !18804
  store i32 1, i32* %size, align 4, !dbg !18804
  call void @llvm.dbg.declare(metadata i32* %last_port, metadata !18805, metadata !DIExpression()), !dbg !18806
  store i32 -1, i32* %last_port, align 4, !dbg !18806
  call void @llvm.dbg.declare(metadata i32* %last_device, metadata !18807, metadata !DIExpression()), !dbg !18808
  store i32 -1, i32* %last_device, align 4, !dbg !18808
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18809, metadata !DIExpression()), !dbg !18810
  call void @llvm.dbg.declare(metadata i8** %cur, metadata !18811, metadata !DIExpression()), !dbg !18812
  call void @llvm.dbg.declare(metadata i8** %next, metadata !18813, metadata !DIExpression()), !dbg !18814
  store i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @ata_force_param_buf, i64 0, i64 0), i8** %p, align 8, !dbg !18815
  br label %for.cond, !dbg !18817

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %p, align 8, !dbg !18818
  %1 = load i8, i8* %0, align 1, !dbg !18820
  %tobool = icmp ne i8 %1, 0, !dbg !18821
  br i1 %tobool, label %for.body, label %for.end, !dbg !18821

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %p, align 8, !dbg !18822
  %3 = load i8, i8* %2, align 1, !dbg !18824
  %conv = sext i8 %3 to i32, !dbg !18824
  %cmp = icmp eq i32 %conv, 44, !dbg !18825
  br i1 %cmp, label %if.then, label %if.end, !dbg !18826

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %size, align 4, !dbg !18827
  %inc = add i32 %4, 1, !dbg !18827
  store i32 %inc, i32* %size, align 4, !dbg !18827
  br label %if.end, !dbg !18828

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18829

for.inc:                                          ; preds = %if.end
  %5 = load i8*, i8** %p, align 8, !dbg !18830
  %incdec.ptr = getelementptr i8, i8* %5, i32 1, !dbg !18830
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !18830
  br label %for.cond, !dbg !18831, !llvm.loop !18832

for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* %size, align 4, !dbg !18834
  %conv2 = sext i32 %6 to i64, !dbg !18834
  %call = call i8* @kcalloc(i64 %conv2, i64 48, i32 3264) #12, !dbg !18835
  %7 = bitcast i8* %call to %struct.ata_force_ent*, !dbg !18835
  store %struct.ata_force_ent* %7, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !18836
  %8 = load %struct.ata_force_ent*, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !18837
  %tobool3 = icmp ne %struct.ata_force_ent* %8, null, !dbg !18837
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !18839

if.then4:                                         ; preds = %for.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.290, i64 0, i64 0)) #13, !dbg !18840
  br label %return, !dbg !18842

if.end6:                                          ; preds = %for.end
  store i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @ata_force_param_buf, i64 0, i64 0), i8** %cur, align 8, !dbg !18843
  br label %for.cond7, !dbg !18845

for.cond7:                                        ; preds = %for.inc25, %if.end6
  %9 = load i8*, i8** %cur, align 8, !dbg !18846
  %10 = load i8, i8* %9, align 1, !dbg !18848
  %conv8 = sext i8 %10 to i32, !dbg !18848
  %cmp9 = icmp ne i32 %conv8, 0, !dbg !18849
  br i1 %cmp9, label %for.body11, label %for.end26, !dbg !18850

for.body11:                                       ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata i8** %reason, metadata !18851, metadata !DIExpression()), !dbg !18853
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %reason, align 8, !dbg !18853
  call void @llvm.dbg.declare(metadata %struct.ata_force_ent* %te, metadata !18854, metadata !DIExpression()), !dbg !18855
  %11 = bitcast %struct.ata_force_ent* %te to i8*, !dbg !18855
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false), !dbg !18855
  %12 = bitcast i8* %11 to %struct.ata_force_ent*, !dbg !18855
  %13 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %12, i32 0, i32 0, !dbg !18855
  store i32 -1, i32* %13, align 8, !dbg !18855
  %14 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %12, i32 0, i32 1, !dbg !18855
  store i32 -1, i32* %14, align 4, !dbg !18855
  %15 = load i8*, i8** %cur, align 8, !dbg !18856
  store i8* %15, i8** %next, align 8, !dbg !18857
  %call12 = call i32 @ata_parse_force_one(i8** %next, %struct.ata_force_ent* %te, i8** %reason) #13, !dbg !18858
  %tobool13 = icmp ne i32 %call12, 0, !dbg !18858
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !18860

if.then14:                                        ; preds = %for.body11
  %16 = load i8*, i8** %cur, align 8, !dbg !18861
  %17 = load i8*, i8** %reason, align 8, !dbg !18863
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.291, i64 0, i64 0), i8* %16, i8* %17) #13, !dbg !18864
  br label %for.inc25, !dbg !18865

if.end16:                                         ; preds = %for.body11
  %port = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %te, i32 0, i32 0, !dbg !18866
  %18 = load i32, i32* %port, align 8, !dbg !18866
  %cmp17 = icmp eq i32 %18, -1, !dbg !18868
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !18869

if.then19:                                        ; preds = %if.end16
  %19 = load i32, i32* %last_port, align 4, !dbg !18870
  %port20 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %te, i32 0, i32 0, !dbg !18872
  store i32 %19, i32* %port20, align 8, !dbg !18873
  %20 = load i32, i32* %last_device, align 4, !dbg !18874
  %device = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %te, i32 0, i32 1, !dbg !18875
  store i32 %20, i32* %device, align 4, !dbg !18876
  br label %if.end21, !dbg !18877

if.end21:                                         ; preds = %if.then19, %if.end16
  %21 = load %struct.ata_force_ent*, %struct.ata_force_ent** @ata_force_tbl, align 8, !dbg !18878
  %22 = load i32, i32* %idx, align 4, !dbg !18879
  %inc22 = add i32 %22, 1, !dbg !18879
  store i32 %inc22, i32* %idx, align 4, !dbg !18879
  %idxprom = sext i32 %22 to i64, !dbg !18878
  %arrayidx = getelementptr %struct.ata_force_ent, %struct.ata_force_ent* %21, i64 %idxprom, !dbg !18878
  %23 = bitcast %struct.ata_force_ent* %arrayidx to i8*, !dbg !18880
  %24 = bitcast %struct.ata_force_ent* %te to i8*, !dbg !18880
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 48, i1 false), !dbg !18880
  %port23 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %te, i32 0, i32 0, !dbg !18881
  %25 = load i32, i32* %port23, align 8, !dbg !18881
  store i32 %25, i32* %last_port, align 4, !dbg !18882
  %device24 = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %te, i32 0, i32 1, !dbg !18883
  %26 = load i32, i32* %device24, align 4, !dbg !18883
  store i32 %26, i32* %last_device, align 4, !dbg !18884
  br label %for.inc25, !dbg !18885

for.inc25:                                        ; preds = %if.end21, %if.then14
  %27 = load i8*, i8** %next, align 8, !dbg !18886
  store i8* %27, i8** %cur, align 8, !dbg !18887
  br label %for.cond7, !dbg !18888, !llvm.loop !18889

for.end26:                                        ; preds = %for.cond7
  %28 = load i32, i32* %idx, align 4, !dbg !18891
  store i32 %28, i32* @ata_force_tbl_size, align 4, !dbg !18892
  br label %return, !dbg !18893

return:                                           ; preds = %for.end26, %if.then4
  ret void, !dbg !18893
}

; Function Attrs: noredzone
declare dso_local i32 @ata_sff_init() #1

; Function Attrs: cold noredzone
declare dso_local i32 @libata_transport_init() #5 section ".init.text"

; Function Attrs: noredzone
declare dso_local %struct.scsi_transport_template* @ata_attach_transport() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !18894 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18897, metadata !DIExpression()), !dbg !18898
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18899, metadata !DIExpression()), !dbg !18900
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18901, metadata !DIExpression()), !dbg !18902
  %0 = load i64, i64* %n.addr, align 8, !dbg !18903
  %1 = load i64, i64* %size.addr, align 8, !dbg !18904
  %2 = load i32, i32* %flags.addr, align 4, !dbg !18905
  %or = or i32 %2, 256, !dbg !18906
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !18907
  ret i8* %call, !dbg !18908
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_parse_force_one(i8** %cur, %struct.ata_force_ent* %force_ent, i8** %reason) #6 section ".init.text" !dbg !7274 {
entry:
  %retval = alloca i32, align 4
  %cur.addr = alloca i8**, align 8
  %force_ent.addr = alloca %struct.ata_force_ent*, align 8
  %reason.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  %p = alloca i8*, align 8
  %id = alloca i8*, align 8
  %val = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %match_fp = alloca %struct.ata_force_param*, align 8
  %nr_matches = alloca i32, align 4
  %i = alloca i32, align 4
  %fp = alloca %struct.ata_force_param*, align 8
  store i8** %cur, i8*** %cur.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %cur.addr, metadata !18909, metadata !DIExpression()), !dbg !18910
  store %struct.ata_force_ent* %force_ent, %struct.ata_force_ent** %force_ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_force_ent** %force_ent.addr, metadata !18911, metadata !DIExpression()), !dbg !18912
  store i8** %reason, i8*** %reason.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %reason.addr, metadata !18913, metadata !DIExpression()), !dbg !18914
  call void @llvm.dbg.declare(metadata i8** %start, metadata !18915, metadata !DIExpression()), !dbg !18916
  %0 = load i8**, i8*** %cur.addr, align 8, !dbg !18917
  %1 = load i8*, i8** %0, align 8, !dbg !18918
  store i8* %1, i8** %start, align 8, !dbg !18916
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18919, metadata !DIExpression()), !dbg !18920
  %2 = load i8**, i8*** %cur.addr, align 8, !dbg !18921
  %3 = load i8*, i8** %2, align 8, !dbg !18922
  store i8* %3, i8** %p, align 8, !dbg !18920
  call void @llvm.dbg.declare(metadata i8** %id, metadata !18923, metadata !DIExpression()), !dbg !18924
  call void @llvm.dbg.declare(metadata i8** %val, metadata !18925, metadata !DIExpression()), !dbg !18926
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !18927, metadata !DIExpression()), !dbg !18928
  call void @llvm.dbg.declare(metadata %struct.ata_force_param** %match_fp, metadata !18929, metadata !DIExpression()), !dbg !18931
  store %struct.ata_force_param* null, %struct.ata_force_param** %match_fp, align 8, !dbg !18931
  call void @llvm.dbg.declare(metadata i32* %nr_matches, metadata !18932, metadata !DIExpression()), !dbg !18933
  store i32 0, i32* %nr_matches, align 4, !dbg !18933
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18934, metadata !DIExpression()), !dbg !18935
  br label %while.cond, !dbg !18936

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i8*, i8** %p, align 8, !dbg !18937
  %5 = load i8, i8* %4, align 1, !dbg !18938
  %conv = sext i8 %5 to i32, !dbg !18938
  %cmp = icmp ne i32 %conv, 0, !dbg !18939
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18940

land.rhs:                                         ; preds = %while.cond
  %6 = load i8*, i8** %p, align 8, !dbg !18941
  %7 = load i8, i8* %6, align 1, !dbg !18942
  %conv2 = sext i8 %7 to i32, !dbg !18942
  %cmp3 = icmp ne i32 %conv2, 44, !dbg !18943
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !18944
  br i1 %8, label %while.body, label %while.end, !dbg !18936

while.body:                                       ; preds = %land.end
  %9 = load i8*, i8** %p, align 8, !dbg !18945
  %incdec.ptr = getelementptr i8, i8* %9, i32 1, !dbg !18945
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !18945
  br label %while.cond, !dbg !18936, !llvm.loop !18946

while.end:                                        ; preds = %land.end
  %10 = load i8*, i8** %p, align 8, !dbg !18947
  %11 = load i8, i8* %10, align 1, !dbg !18949
  %conv5 = sext i8 %11 to i32, !dbg !18949
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !18950
  br i1 %cmp6, label %if.then, label %if.else, !dbg !18951

if.then:                                          ; preds = %while.end
  %12 = load i8*, i8** %p, align 8, !dbg !18952
  %13 = load i8**, i8*** %cur.addr, align 8, !dbg !18953
  store i8* %12, i8** %13, align 8, !dbg !18954
  br label %if.end, !dbg !18955

if.else:                                          ; preds = %while.end
  %14 = load i8*, i8** %p, align 8, !dbg !18956
  %add.ptr = getelementptr i8, i8* %14, i64 1, !dbg !18957
  %15 = load i8**, i8*** %cur.addr, align 8, !dbg !18958
  store i8* %add.ptr, i8** %15, align 8, !dbg !18959
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i8*, i8** %p, align 8, !dbg !18960
  store i8 0, i8* %16, align 1, !dbg !18961
  %17 = load i8*, i8** %start, align 8, !dbg !18962
  %call = call i8* @strchr(i8* %17, i32 58) #12, !dbg !18963
  store i8* %call, i8** %p, align 8, !dbg !18964
  %18 = load i8*, i8** %p, align 8, !dbg !18965
  %tobool = icmp ne i8* %18, null, !dbg !18965
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !18967

if.then8:                                         ; preds = %if.end
  %19 = load i8*, i8** %start, align 8, !dbg !18968
  %call9 = call i8* @strstrip(i8* %19) #12, !dbg !18970
  store i8* %call9, i8** %val, align 8, !dbg !18971
  br label %parse_val, !dbg !18972

if.end10:                                         ; preds = %if.end
  %20 = load i8*, i8** %p, align 8, !dbg !18973
  store i8 0, i8* %20, align 1, !dbg !18974
  %21 = load i8*, i8** %start, align 8, !dbg !18975
  %call11 = call i8* @strstrip(i8* %21) #12, !dbg !18976
  store i8* %call11, i8** %id, align 8, !dbg !18977
  %22 = load i8*, i8** %p, align 8, !dbg !18978
  %add.ptr12 = getelementptr i8, i8* %22, i64 1, !dbg !18979
  %call13 = call i8* @strstrip(i8* %add.ptr12) #12, !dbg !18980
  store i8* %call13, i8** %val, align 8, !dbg !18981
  %23 = load i8*, i8** %id, align 8, !dbg !18982
  %call14 = call i8* @strchr(i8* %23, i32 46) #12, !dbg !18983
  store i8* %call14, i8** %p, align 8, !dbg !18984
  %24 = load i8*, i8** %p, align 8, !dbg !18985
  %tobool15 = icmp ne i8* %24, null, !dbg !18985
  br i1 %tobool15, label %if.then16, label %if.end27, !dbg !18987

if.then16:                                        ; preds = %if.end10
  %25 = load i8*, i8** %p, align 8, !dbg !18988
  %incdec.ptr17 = getelementptr i8, i8* %25, i32 1, !dbg !18988
  store i8* %incdec.ptr17, i8** %p, align 8, !dbg !18988
  store i8 0, i8* %25, align 1, !dbg !18990
  %26 = load i8*, i8** %p, align 8, !dbg !18991
  %call18 = call i64 @simple_strtoul(i8* %26, i8** %endp, i32 10) #12, !dbg !18992
  %conv19 = trunc i64 %call18 to i32, !dbg !18992
  %27 = load %struct.ata_force_ent*, %struct.ata_force_ent** %force_ent.addr, align 8, !dbg !18993
  %device = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %27, i32 0, i32 1, !dbg !18994
  store i32 %conv19, i32* %device, align 4, !dbg !18995
  %28 = load i8*, i8** %p, align 8, !dbg !18996
  %29 = load i8*, i8** %endp, align 8, !dbg !18998
  %cmp20 = icmp eq i8* %28, %29, !dbg !18999
  br i1 %cmp20, label %if.then25, label %lor.lhs.false, !dbg !19000

lor.lhs.false:                                    ; preds = %if.then16
  %30 = load i8*, i8** %endp, align 8, !dbg !19001
  %31 = load i8, i8* %30, align 1, !dbg !19002
  %conv22 = sext i8 %31 to i32, !dbg !19002
  %cmp23 = icmp ne i32 %conv22, 0, !dbg !19003
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !19004

if.then25:                                        ; preds = %lor.lhs.false, %if.then16
  %32 = load i8**, i8*** %reason.addr, align 8, !dbg !19005
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.345, i64 0, i64 0), i8** %32, align 8, !dbg !19007
  store i32 -22, i32* %retval, align 4, !dbg !19008
  br label %return, !dbg !19008

if.end26:                                         ; preds = %lor.lhs.false
  br label %if.end27, !dbg !19009

if.end27:                                         ; preds = %if.end26, %if.end10
  %33 = load i8*, i8** %id, align 8, !dbg !19010
  %call28 = call i64 @simple_strtoul(i8* %33, i8** %endp, i32 10) #12, !dbg !19011
  %conv29 = trunc i64 %call28 to i32, !dbg !19011
  %34 = load %struct.ata_force_ent*, %struct.ata_force_ent** %force_ent.addr, align 8, !dbg !19012
  %port = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %34, i32 0, i32 0, !dbg !19013
  store i32 %conv29, i32* %port, align 8, !dbg !19014
  %35 = load i8*, i8** %id, align 8, !dbg !19015
  %36 = load i8*, i8** %endp, align 8, !dbg !19017
  %cmp30 = icmp eq i8* %35, %36, !dbg !19018
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !19019

lor.lhs.false32:                                  ; preds = %if.end27
  %37 = load i8*, i8** %endp, align 8, !dbg !19020
  %38 = load i8, i8* %37, align 1, !dbg !19021
  %conv33 = sext i8 %38 to i32, !dbg !19021
  %cmp34 = icmp ne i32 %conv33, 0, !dbg !19022
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !19023

if.then36:                                        ; preds = %lor.lhs.false32, %if.end27
  %39 = load i8**, i8*** %reason.addr, align 8, !dbg !19024
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.346, i64 0, i64 0), i8** %39, align 8, !dbg !19026
  store i32 -22, i32* %retval, align 4, !dbg !19027
  br label %return, !dbg !19027

if.end37:                                         ; preds = %lor.lhs.false32
  br label %parse_val, !dbg !19028

parse_val:                                        ; preds = %if.end37, %if.then8
  call void @llvm.dbg.label(metadata !19029), !dbg !19030
  store i32 0, i32* %i, align 4, !dbg !19031
  br label %for.cond, !dbg !19033

for.cond:                                         ; preds = %for.inc, %parse_val
  %40 = load i32, i32* %i, align 4, !dbg !19034
  %conv38 = sext i32 %40 to i64, !dbg !19034
  %cmp39 = icmp ult i64 %conv38, 53, !dbg !19036
  br i1 %cmp39, label %for.body, label %for.end, !dbg !19037

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_force_param** %fp, metadata !19038, metadata !DIExpression()), !dbg !19040
  %41 = load i32, i32* %i, align 4, !dbg !19041
  %idxprom = sext i32 %41 to i64, !dbg !19042
  %arrayidx = getelementptr [53 x %struct.ata_force_param], [53 x %struct.ata_force_param]* @ata_parse_force_one.force_tbl, i64 0, i64 %idxprom, !dbg !19042
  store %struct.ata_force_param* %arrayidx, %struct.ata_force_param** %fp, align 8, !dbg !19040
  %42 = load i8*, i8** %val, align 8, !dbg !19043
  %43 = load %struct.ata_force_param*, %struct.ata_force_param** %fp, align 8, !dbg !19045
  %name = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %43, i32 0, i32 0, !dbg !19046
  %44 = load i8*, i8** %name, align 8, !dbg !19046
  %45 = load i8*, i8** %val, align 8, !dbg !19047
  %call41 = call i64 @strlen(i8* %45) #12, !dbg !19048
  %call42 = call i32 @strncasecmp(i8* %42, i8* %44, i64 %call41) #12, !dbg !19049
  %tobool43 = icmp ne i32 %call42, 0, !dbg !19049
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !19050

if.then44:                                        ; preds = %for.body
  br label %for.inc, !dbg !19051

if.end45:                                         ; preds = %for.body
  %46 = load i32, i32* %nr_matches, align 4, !dbg !19052
  %inc = add i32 %46, 1, !dbg !19052
  store i32 %inc, i32* %nr_matches, align 4, !dbg !19052
  %47 = load %struct.ata_force_param*, %struct.ata_force_param** %fp, align 8, !dbg !19053
  store %struct.ata_force_param* %47, %struct.ata_force_param** %match_fp, align 8, !dbg !19054
  %48 = load i8*, i8** %val, align 8, !dbg !19055
  %49 = load %struct.ata_force_param*, %struct.ata_force_param** %fp, align 8, !dbg !19057
  %name46 = getelementptr inbounds %struct.ata_force_param, %struct.ata_force_param* %49, i32 0, i32 0, !dbg !19058
  %50 = load i8*, i8** %name46, align 8, !dbg !19058
  %call47 = call i32 @strcasecmp(i8* %48, i8* %50) #12, !dbg !19059
  %cmp48 = icmp eq i32 %call47, 0, !dbg !19060
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !19061

if.then50:                                        ; preds = %if.end45
  store i32 1, i32* %nr_matches, align 4, !dbg !19062
  br label %for.end, !dbg !19064

if.end51:                                         ; preds = %if.end45
  br label %for.inc, !dbg !19065

for.inc:                                          ; preds = %if.end51, %if.then44
  %51 = load i32, i32* %i, align 4, !dbg !19066
  %inc52 = add i32 %51, 1, !dbg !19066
  store i32 %inc52, i32* %i, align 4, !dbg !19066
  br label %for.cond, !dbg !19067, !llvm.loop !19068

for.end:                                          ; preds = %if.then50, %for.cond
  %52 = load i32, i32* %nr_matches, align 4, !dbg !19070
  %tobool53 = icmp ne i32 %52, 0, !dbg !19070
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !19072

if.then54:                                        ; preds = %for.end
  %53 = load i8**, i8*** %reason.addr, align 8, !dbg !19073
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.347, i64 0, i64 0), i8** %53, align 8, !dbg !19075
  store i32 -22, i32* %retval, align 4, !dbg !19076
  br label %return, !dbg !19076

if.end55:                                         ; preds = %for.end
  %54 = load i32, i32* %nr_matches, align 4, !dbg !19077
  %cmp56 = icmp sgt i32 %54, 1, !dbg !19079
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !19080

if.then58:                                        ; preds = %if.end55
  %55 = load i8**, i8*** %reason.addr, align 8, !dbg !19081
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.348, i64 0, i64 0), i8** %55, align 8, !dbg !19083
  store i32 -22, i32* %retval, align 4, !dbg !19084
  br label %return, !dbg !19084

if.end59:                                         ; preds = %if.end55
  %56 = load %struct.ata_force_ent*, %struct.ata_force_ent** %force_ent.addr, align 8, !dbg !19085
  %param = getelementptr inbounds %struct.ata_force_ent, %struct.ata_force_ent* %56, i32 0, i32 2, !dbg !19086
  %57 = load %struct.ata_force_param*, %struct.ata_force_param** %match_fp, align 8, !dbg !19087
  %58 = bitcast %struct.ata_force_param* %param to i8*, !dbg !19088
  %59 = bitcast %struct.ata_force_param* %57 to i8*, !dbg !19088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false), !dbg !19088
  store i32 0, i32* %retval, align 4, !dbg !19089
  br label %return, !dbg !19089

return:                                           ; preds = %if.end59, %if.then58, %if.then54, %if.then36, %if.then25
  %60 = load i32, i32* %retval, align 4, !dbg !19090
  ret i32 %60, !dbg !19090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !19091 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !14962, metadata !DIExpression()), !dbg !19092
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !14972, metadata !DIExpression()), !dbg !19096
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !14974, metadata !DIExpression()), !dbg !19097
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !14976, metadata !DIExpression()), !dbg !19098
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !14978, metadata !DIExpression()), !dbg !19099
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !14984, metadata !DIExpression()), !dbg !19101
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !14990, metadata !DIExpression()), !dbg !19103
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !14999, metadata !DIExpression()), !dbg !19106
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !15001, metadata !DIExpression()), !dbg !19107
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15003, metadata !DIExpression()), !dbg !19108
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !15005, metadata !DIExpression()), !dbg !19109
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !15007, metadata !DIExpression()), !dbg !19110
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15009, metadata !DIExpression()), !dbg !19111
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !15011, metadata !DIExpression()), !dbg !19112
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !15013, metadata !DIExpression()), !dbg !19113
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19114, metadata !DIExpression()), !dbg !19115
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19116, metadata !DIExpression()), !dbg !19117
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !19118, metadata !DIExpression()), !dbg !19119
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !19120, metadata !DIExpression()), !dbg !19121
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !19122, metadata !DIExpression()), !dbg !19125
  %0 = load i64, i64* %n.addr, align 8, !dbg !19125
  store i64 %0, i64* %__a, align 8, !dbg !19125
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !19126, metadata !DIExpression()), !dbg !19125
  %1 = load i64, i64* %size.addr, align 8, !dbg !19125
  store i64 %1, i64* %__b, align 8, !dbg !19125
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !19127, metadata !DIExpression()), !dbg !19125
  store i64* %bytes, i64** %__d, align 8, !dbg !19125
  %cmp = icmp eq i64* %__a, %__b, !dbg !19125
  %conv = zext i1 %cmp to i32, !dbg !19125
  %2 = load i64*, i64** %__d, align 8, !dbg !19125
  %cmp1 = icmp eq i64* %__a, %2, !dbg !19125
  %conv2 = zext i1 %cmp1 to i32, !dbg !19125
  %3 = load i64, i64* %__a, align 8, !dbg !19125
  %4 = load i64, i64* %__b, align 8, !dbg !19125
  %5 = load i64*, i64** %__d, align 8, !dbg !19125
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !19125
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !19125
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !19125
  store i64 %8, i64* %5, align 8, !dbg !19125
  %frombool = zext i1 %7 to i8, !dbg !19125
  store i8 %frombool, i8* %tmp, align 1, !dbg !19125
  %9 = load i8, i8* %tmp, align 1, !dbg !19125
  %tobool = trunc i8 %9 to i1, !dbg !19125
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !19128
  %lnot = xor i1 %call, true, !dbg !19128
  %lnot3 = xor i1 %lnot, true, !dbg !19128
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !19128
  %conv4 = sext i32 %lnot.ext to i64, !dbg !19128
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !19128
  br i1 %tobool5, label %if.then, label %if.end, !dbg !19129

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !19130
  br label %return, !dbg !19130

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !19131
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !19132
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !19133

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !19134
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !19135
  br i1 %13, label %if.then6, label %if.end8, !dbg !19136

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !19137
  %15 = load i32, i32* %flags.addr, align 4, !dbg !19138
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !19139
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !19140
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !19141

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !19142
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !19143
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !19144

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !19145
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !19146
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !19147
  %call.i.i = call i32 @get_order(i64 %21) #15, !dbg !19148
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !19110
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !19149
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !19150
  %24 = load i32, i32* %order.i.i, align 4, !dbg !19151
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !19152
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !19153
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !19154
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #14, !dbg !19155
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !19155
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !19155
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !19155
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !19155
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !19156
  br label %kmalloc.exit, !dbg !19156

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !19157
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19158
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !19158
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !19159

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !19160
  br label %kmalloc_index.exit.i, !dbg !19160

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19161
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !19162
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !19163

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19164
  br label %kmalloc_index.exit.i, !dbg !19164

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19165
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !19166
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !19167

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19168
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !19169
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !19170

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !19171
  br label %kmalloc_index.exit.i, !dbg !19171

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19172
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !19173
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !19174

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19175
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !19176
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !19177

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !19178
  br label %kmalloc_index.exit.i, !dbg !19178

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19179
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !19180
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !19181

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19182
  br label %kmalloc_index.exit.i, !dbg !19182

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19183
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !19184
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !19185

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !19186
  br label %kmalloc_index.exit.i, !dbg !19186

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19187
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !19188
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !19189

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !19190
  br label %kmalloc_index.exit.i, !dbg !19190

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19191
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !19192
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !19193

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !19194
  br label %kmalloc_index.exit.i, !dbg !19194

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19195
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !19196
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !19197

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !19198
  br label %kmalloc_index.exit.i, !dbg !19198

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19199
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !19200
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !19201

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !19202
  br label %kmalloc_index.exit.i, !dbg !19202

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19203
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !19204
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !19205

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !19206
  br label %kmalloc_index.exit.i, !dbg !19206

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19207
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !19208
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !19209

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !19210
  br label %kmalloc_index.exit.i, !dbg !19210

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19211
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !19212
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !19213

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !19214
  br label %kmalloc_index.exit.i, !dbg !19214

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19215
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !19216
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !19217

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !19218
  br label %kmalloc_index.exit.i, !dbg !19218

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19219
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !19220
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !19221

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !19222
  br label %kmalloc_index.exit.i, !dbg !19222

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19223
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !19224
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !19225

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !19226
  br label %kmalloc_index.exit.i, !dbg !19226

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19227
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !19228
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !19229

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !19230
  br label %kmalloc_index.exit.i, !dbg !19230

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19231
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !19232
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !19233

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !19234
  br label %kmalloc_index.exit.i, !dbg !19234

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19235
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !19236
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !19237

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !19238
  br label %kmalloc_index.exit.i, !dbg !19238

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19239
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !19240
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !19241

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !19242
  br label %kmalloc_index.exit.i, !dbg !19242

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19243
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !19244
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !19245

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !19246
  br label %kmalloc_index.exit.i, !dbg !19246

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19247
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !19248
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !19249

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !19250
  br label %kmalloc_index.exit.i, !dbg !19250

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19251
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !19252
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !19253

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !19254
  br label %kmalloc_index.exit.i, !dbg !19254

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19255
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !19256
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !19257

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !19258
  br label %kmalloc_index.exit.i, !dbg !19258

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19259
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !19260
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !19261

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !19262
  br label %kmalloc_index.exit.i, !dbg !19262

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19263
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !19264
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !19265

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !19266
  br label %kmalloc_index.exit.i, !dbg !19266

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19267
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !19268
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !19269

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !19270
  br label %kmalloc_index.exit.i, !dbg !19270

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19271
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !19272
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !19273

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !19274
  br label %kmalloc_index.exit.i, !dbg !19274

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.287, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !19275, !srcloc !15189
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #7, !dbg !19276, !srcloc !15193
  unreachable, !dbg !19277

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !19278
  store i32 %59, i32* %index.i, align 4, !dbg !19279
  %60 = load i32, i32* %index.i, align 4, !dbg !19280
  %tobool.i = icmp ne i32 %60, 0, !dbg !19280
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !19281

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !19282
  br label %kmalloc.exit, !dbg !19282

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !19283
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19284
  %and.i.i = and i32 %62, 17, !dbg !19284
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !19284
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !19284
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !19284
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19284
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !19285

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !19286
  br label %kmalloc_type.exit.i, !dbg !19286

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19287
  %and2.i.i = and i32 %63, 1, !dbg !19288
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !19287
  %64 = zext i1 %tobool3.i.i to i64, !dbg !19287
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !19287
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !19289
  br label %kmalloc_type.exit.i, !dbg !19289

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !19290
  %idxprom.i = zext i32 %65 to i64, !dbg !19291
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !19291
  %66 = load i32, i32* %index.i, align 4, !dbg !19292
  %idxprom6.i = zext i32 %66 to i64, !dbg !19291
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !19291
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !19291
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !19293
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !19294
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19295
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19296
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #14, !dbg !19297
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !19297
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !19297
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !19297
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !19297
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !19098
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19298
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !19299
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !19300
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19301
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #14, !dbg !19302
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !19303
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !19304
  store i8* %76, i8** %retval.i, align 8, !dbg !19305
  br label %kmalloc.exit, !dbg !19305

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !19306
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !19307
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #14, !dbg !19308
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !19308
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !19308
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !19308
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !19308
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !19309
  br label %kmalloc.exit, !dbg !19309

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !19310
  store i8* %79, i8** %retval, align 8, !dbg !19311
  br label %return, !dbg !19311

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !19312
  %81 = load i32, i32* %flags.addr, align 4, !dbg !19313
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !19314
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !19314
  %maskedptr = and i64 %ptrint, 7, !dbg !19314
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !19314
  call void @llvm.assume(i1 %maskcond), !dbg !19314
  store i8* %call9, i8** %retval, align 8, !dbg !19315
  br label %return, !dbg !19315

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !19316
  ret i8* %82, !dbg !19316
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !19317 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !19321, metadata !DIExpression()), !dbg !19322
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !19323
  %tobool = trunc i8 %0 to i1, !dbg !19323
  %lnot = xor i1 %tobool, true, !dbg !19323
  %lnot1 = xor i1 %lnot, true, !dbg !19323
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19323
  %conv = sext i32 %lnot.ext to i64, !dbg !19323
  %tobool2 = icmp ne i64 %conv, 0, !dbg !19323
  ret i1 %tobool2, !dbg !19324
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @strstrip(i8* %str) #0 !dbg !19325 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !19329, metadata !DIExpression()), !dbg !19330
  %0 = load i8*, i8** %str.addr, align 8, !dbg !19331
  %call = call i8* @strim(i8* %0) #12, !dbg !19332
  ret i8* %call, !dbg !19333
}

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @strcasecmp(i8*, i8*) #1

; Function Attrs: noredzone
declare dso_local i8* @strim(i8*) #1

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind readnone willreturn }
attributes #10 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind willreturn }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }
attributes #16 = { noredzone nounwind readonly }
attributes #17 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!7284}
!llvm.module.flags = !{!7285, !7286, !7287, !7288}
!llvm.ident = !{!7289}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ata_base_port_ops", scope: !2, file: !3, line: 67, type: !6757, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !983, globals: !6856, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/ata/libata-core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !16, !25, !33, !39, !45, !51, !58, !66, !72, !86, !92, !99, !103, !115, !120, !127, !134, !140, !146, !154, !165, !172, !182, !191, !205, !210, !215, !221, !634, !871, !886, !893, !898, !908, !914, !919, !929, !962, !968, !975}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !12, line: 41, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15}
!14 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !17, line: 296, baseType: !7, size: 32, elements: !18)
!17 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!18 = !{!19, !20, !21, !22, !23, !24}
!19 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!23 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!24 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !26, line: 9, baseType: !7, size: 32, elements: !27)
!26 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!27 = !{!28, !29, !30, !31, !32}
!28 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!29 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!32 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !34, line: 54, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!35 = !{!36, !37, !38}
!36 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !40, line: 26, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44}
!42 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !46, line: 44, baseType: !7, size: 32, elements: !47)
!46 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!47 = !{!48, !49, !50}
!48 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !52, line: 343, baseType: !7, size: 32, elements: !53)
!52 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!53 = !{!54, !55, !56, !57}
!54 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !59, line: 524, baseType: !7, size: 32, elements: !60)
!59 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!60 = !{!61, !62, !63, !64, !65}
!61 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !59, line: 502, baseType: !7, size: 32, elements: !67)
!67 = !{!68, !69, !70, !71}
!68 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !73, line: 76, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85}
!75 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!84 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!85 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !87, line: 118, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!88 = !{!89, !90, !91}
!89 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !93, line: 19, baseType: !7, size: 32, elements: !94)
!93 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!94 = !{!95, !96, !97, !98}
!95 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !87, line: 293, baseType: !7, size: 32, elements: !100)
!100 = !{!101, !102}
!101 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !104, line: 49, baseType: !7, size: 32, elements: !105)
!104 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!105 = !{!106, !107, !108, !109, !110, !111, !112, !113, !114}
!106 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!110 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!111 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!112 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!113 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!114 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !87, line: 315, baseType: !7, size: 32, elements: !116)
!116 = !{!117, !118, !119}
!117 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !121, line: 15, baseType: !7, size: 32, elements: !122)
!121 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!122 = !{!123, !124, !125, !126}
!123 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!126 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !128, line: 59, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133}
!130 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !135, line: 546, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !141, line: 16, baseType: !7, size: 32, elements: !142)
!141 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!142 = !{!143, !144, !145}
!143 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!145 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !147, line: 276, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152, !153}
!149 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !147, line: 36, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157, !158, !159, !160, !161, !162, !163, !164}
!156 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!163 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!164 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !166, line: 5, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!167 = !{!168, !169, !170, !171}
!168 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!170 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!171 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !173, line: 514, baseType: !7, size: 32, elements: !174)
!173 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!174 = !{!175, !176, !177, !178, !179, !180, !181}
!175 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!176 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!177 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!178 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!179 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!180 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!181 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_lpm_policy", file: !183, line: 506, baseType: !7, size: 32, elements: !184)
!183 = !DIFile(filename: "./include/linux/libata.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !186, !187, !188, !189, !190}
!185 = !DIEnumerator(name: "ATA_LPM_UNKNOWN", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "ATA_LPM_MAX_POWER", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "ATA_LPM_MED_POWER", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "ATA_LPM_MED_POWER_WITH_DIPM", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "ATA_LPM_MIN_POWER_WITH_PARTIAL", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "ATA_LPM_MIN_POWER", value: 5, isUnsigned: true)
!191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_completion_errors", file: !183, line: 487, baseType: !7, size: 32, elements: !192)
!192 = !{!193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204}
!193 = !DIEnumerator(name: "AC_ERR_OK", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "AC_ERR_DEV", value: 1, isUnsigned: true)
!195 = !DIEnumerator(name: "AC_ERR_HSM", value: 2, isUnsigned: true)
!196 = !DIEnumerator(name: "AC_ERR_TIMEOUT", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "AC_ERR_MEDIA", value: 8, isUnsigned: true)
!198 = !DIEnumerator(name: "AC_ERR_ATA_BUS", value: 16, isUnsigned: true)
!199 = !DIEnumerator(name: "AC_ERR_HOST_BUS", value: 32, isUnsigned: true)
!200 = !DIEnumerator(name: "AC_ERR_SYSTEM", value: 64, isUnsigned: true)
!201 = !DIEnumerator(name: "AC_ERR_INVALID", value: 128, isUnsigned: true)
!202 = !DIEnumerator(name: "AC_ERR_OTHER", value: 256, isUnsigned: true)
!203 = !DIEnumerator(name: "AC_ERR_NODEV_HINT", value: 512, isUnsigned: true)
!204 = !DIEnumerator(name: "AC_ERR_NCQ", value: 1024, isUnsigned: true)
!205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sw_activity", file: !183, line: 544, baseType: !7, size: 32, elements: !206)
!206 = !{!207, !208, !209}
!207 = !DIEnumerator(name: "OFF", value: 0, isUnsigned: true)
!208 = !DIEnumerator(name: "BLINK_ON", value: 1, isUnsigned: true)
!209 = !DIEnumerator(name: "BLINK_OFF", value: 2, isUnsigned: true)
!210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_link_iter_mode", file: !183, line: 1637, baseType: !7, size: 32, elements: !211)
!211 = !{!212, !213, !214}
!212 = !DIEnumerator(name: "ATA_LITER_EDGE", value: 0, isUnsigned: true)
!213 = !DIEnumerator(name: "ATA_LITER_HOST_FIRST", value: 1, isUnsigned: true)
!214 = !DIEnumerator(name: "ATA_LITER_PMP_FIRST", value: 2, isUnsigned: true)
!215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_dev_iter_mode", file: !183, line: 1645, baseType: !7, size: 32, elements: !216)
!216 = !{!217, !218, !219, !220}
!217 = !DIEnumerator(name: "ATA_DITER_ENABLED", value: 0, isUnsigned: true)
!218 = !DIEnumerator(name: "ATA_DITER_ENABLED_REVERSE", value: 1, isUnsigned: true)
!219 = !DIEnumerator(name: "ATA_DITER_ALL", value: 2, isUnsigned: true)
!220 = !DIEnumerator(name: "ATA_DITER_ALL_REVERSE", value: 3, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !222, line: 25, baseType: !223, size: 32, elements: !224)
!222 = !DIFile(filename: "./include/linux/ata.h", directory: "/home/lizy2001/genbc/linux")
!223 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!224 = !{!225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633}
!225 = !DIEnumerator(name: "ATA_MAX_DEVICES", value: 2)
!226 = !DIEnumerator(name: "ATA_MAX_PRD", value: 256)
!227 = !DIEnumerator(name: "ATA_SECT_SIZE", value: 512)
!228 = !DIEnumerator(name: "ATA_MAX_SECTORS_128", value: 128)
!229 = !DIEnumerator(name: "ATA_MAX_SECTORS", value: 256)
!230 = !DIEnumerator(name: "ATA_MAX_SECTORS_1024", value: 1024)
!231 = !DIEnumerator(name: "ATA_MAX_SECTORS_LBA48", value: 65535)
!232 = !DIEnumerator(name: "ATA_MAX_SECTORS_TAPE", value: 65535)
!233 = !DIEnumerator(name: "ATA_MAX_TRIM_RNUM", value: 64)
!234 = !DIEnumerator(name: "ATA_ID_WORDS", value: 256)
!235 = !DIEnumerator(name: "ATA_ID_CONFIG", value: 0)
!236 = !DIEnumerator(name: "ATA_ID_CYLS", value: 1)
!237 = !DIEnumerator(name: "ATA_ID_HEADS", value: 3)
!238 = !DIEnumerator(name: "ATA_ID_SECTORS", value: 6)
!239 = !DIEnumerator(name: "ATA_ID_SERNO", value: 10)
!240 = !DIEnumerator(name: "ATA_ID_BUF_SIZE", value: 21)
!241 = !DIEnumerator(name: "ATA_ID_FW_REV", value: 23)
!242 = !DIEnumerator(name: "ATA_ID_PROD", value: 27)
!243 = !DIEnumerator(name: "ATA_ID_MAX_MULTSECT", value: 47)
!244 = !DIEnumerator(name: "ATA_ID_DWORD_IO", value: 48)
!245 = !DIEnumerator(name: "ATA_ID_TRUSTED", value: 48)
!246 = !DIEnumerator(name: "ATA_ID_CAPABILITY", value: 49)
!247 = !DIEnumerator(name: "ATA_ID_OLD_PIO_MODES", value: 51)
!248 = !DIEnumerator(name: "ATA_ID_OLD_DMA_MODES", value: 52)
!249 = !DIEnumerator(name: "ATA_ID_FIELD_VALID", value: 53)
!250 = !DIEnumerator(name: "ATA_ID_CUR_CYLS", value: 54)
!251 = !DIEnumerator(name: "ATA_ID_CUR_HEADS", value: 55)
!252 = !DIEnumerator(name: "ATA_ID_CUR_SECTORS", value: 56)
!253 = !DIEnumerator(name: "ATA_ID_MULTSECT", value: 59)
!254 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY", value: 60)
!255 = !DIEnumerator(name: "ATA_ID_SWDMA_MODES", value: 62)
!256 = !DIEnumerator(name: "ATA_ID_MWDMA_MODES", value: 63)
!257 = !DIEnumerator(name: "ATA_ID_PIO_MODES", value: 64)
!258 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_MIN", value: 65)
!259 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_TIME", value: 66)
!260 = !DIEnumerator(name: "ATA_ID_EIDE_PIO", value: 67)
!261 = !DIEnumerator(name: "ATA_ID_EIDE_PIO_IORDY", value: 68)
!262 = !DIEnumerator(name: "ATA_ID_ADDITIONAL_SUPP", value: 69)
!263 = !DIEnumerator(name: "ATA_ID_QUEUE_DEPTH", value: 75)
!264 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY", value: 76)
!265 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY_2", value: 77)
!266 = !DIEnumerator(name: "ATA_ID_FEATURE_SUPP", value: 78)
!267 = !DIEnumerator(name: "ATA_ID_MAJOR_VER", value: 80)
!268 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_1", value: 82)
!269 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_2", value: 83)
!270 = !DIEnumerator(name: "ATA_ID_CFSSE", value: 84)
!271 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_1", value: 85)
!272 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_2", value: 86)
!273 = !DIEnumerator(name: "ATA_ID_CSF_DEFAULT", value: 87)
!274 = !DIEnumerator(name: "ATA_ID_UDMA_MODES", value: 88)
!275 = !DIEnumerator(name: "ATA_ID_HW_CONFIG", value: 93)
!276 = !DIEnumerator(name: "ATA_ID_SPG", value: 98)
!277 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY_2", value: 100)
!278 = !DIEnumerator(name: "ATA_ID_SECTOR_SIZE", value: 106)
!279 = !DIEnumerator(name: "ATA_ID_WWN", value: 108)
!280 = !DIEnumerator(name: "ATA_ID_LOGICAL_SECTOR_SIZE", value: 117)
!281 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_3", value: 119)
!282 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_4", value: 120)
!283 = !DIEnumerator(name: "ATA_ID_LAST_LUN", value: 126)
!284 = !DIEnumerator(name: "ATA_ID_DLF", value: 128)
!285 = !DIEnumerator(name: "ATA_ID_CSFO", value: 129)
!286 = !DIEnumerator(name: "ATA_ID_CFA_POWER", value: 160)
!287 = !DIEnumerator(name: "ATA_ID_CFA_KEY_MGMT", value: 162)
!288 = !DIEnumerator(name: "ATA_ID_CFA_MODES", value: 163)
!289 = !DIEnumerator(name: "ATA_ID_DATA_SET_MGMT", value: 169)
!290 = !DIEnumerator(name: "ATA_ID_SCT_CMD_XPORT", value: 206)
!291 = !DIEnumerator(name: "ATA_ID_ROT_SPEED", value: 217)
!292 = !DIEnumerator(name: "ATA_ID_PIO4", value: 2)
!293 = !DIEnumerator(name: "ATA_ID_SERNO_LEN", value: 20)
!294 = !DIEnumerator(name: "ATA_ID_FW_REV_LEN", value: 8)
!295 = !DIEnumerator(name: "ATA_ID_PROD_LEN", value: 40)
!296 = !DIEnumerator(name: "ATA_ID_WWN_LEN", value: 8)
!297 = !DIEnumerator(name: "ATA_PCI_CTL_OFS", value: 2)
!298 = !DIEnumerator(name: "ATA_PIO0", value: 1)
!299 = !DIEnumerator(name: "ATA_PIO1", value: 3)
!300 = !DIEnumerator(name: "ATA_PIO2", value: 7)
!301 = !DIEnumerator(name: "ATA_PIO3", value: 15)
!302 = !DIEnumerator(name: "ATA_PIO4", value: 31)
!303 = !DIEnumerator(name: "ATA_PIO5", value: 63)
!304 = !DIEnumerator(name: "ATA_PIO6", value: 127)
!305 = !DIEnumerator(name: "ATA_PIO4_ONLY", value: 16)
!306 = !DIEnumerator(name: "ATA_SWDMA0", value: 1)
!307 = !DIEnumerator(name: "ATA_SWDMA1", value: 3)
!308 = !DIEnumerator(name: "ATA_SWDMA2", value: 7)
!309 = !DIEnumerator(name: "ATA_SWDMA2_ONLY", value: 4)
!310 = !DIEnumerator(name: "ATA_MWDMA0", value: 1)
!311 = !DIEnumerator(name: "ATA_MWDMA1", value: 3)
!312 = !DIEnumerator(name: "ATA_MWDMA2", value: 7)
!313 = !DIEnumerator(name: "ATA_MWDMA3", value: 15)
!314 = !DIEnumerator(name: "ATA_MWDMA4", value: 31)
!315 = !DIEnumerator(name: "ATA_MWDMA12_ONLY", value: 6)
!316 = !DIEnumerator(name: "ATA_MWDMA2_ONLY", value: 4)
!317 = !DIEnumerator(name: "ATA_UDMA0", value: 1)
!318 = !DIEnumerator(name: "ATA_UDMA1", value: 3)
!319 = !DIEnumerator(name: "ATA_UDMA2", value: 7)
!320 = !DIEnumerator(name: "ATA_UDMA3", value: 15)
!321 = !DIEnumerator(name: "ATA_UDMA4", value: 31)
!322 = !DIEnumerator(name: "ATA_UDMA5", value: 63)
!323 = !DIEnumerator(name: "ATA_UDMA6", value: 127)
!324 = !DIEnumerator(name: "ATA_UDMA7", value: 255)
!325 = !DIEnumerator(name: "ATA_UDMA24_ONLY", value: 20)
!326 = !DIEnumerator(name: "ATA_UDMA_MASK_40C", value: 7)
!327 = !DIEnumerator(name: "ATA_PRD_SZ", value: 8)
!328 = !DIEnumerator(name: "ATA_PRD_TBL_SZ", value: 2048)
!329 = !DIEnumerator(name: "ATA_PRD_EOT", value: -2147483648)
!330 = !DIEnumerator(name: "ATA_DMA_TABLE_OFS", value: 4)
!331 = !DIEnumerator(name: "ATA_DMA_STATUS", value: 2)
!332 = !DIEnumerator(name: "ATA_DMA_CMD", value: 0)
!333 = !DIEnumerator(name: "ATA_DMA_WR", value: 8)
!334 = !DIEnumerator(name: "ATA_DMA_START", value: 1)
!335 = !DIEnumerator(name: "ATA_DMA_INTR", value: 4)
!336 = !DIEnumerator(name: "ATA_DMA_ERR", value: 2)
!337 = !DIEnumerator(name: "ATA_DMA_ACTIVE", value: 1)
!338 = !DIEnumerator(name: "ATA_HOB", value: 128)
!339 = !DIEnumerator(name: "ATA_NIEN", value: 2)
!340 = !DIEnumerator(name: "ATA_LBA", value: 64)
!341 = !DIEnumerator(name: "ATA_DEV1", value: 16)
!342 = !DIEnumerator(name: "ATA_DEVICE_OBS", value: 160)
!343 = !DIEnumerator(name: "ATA_DEVCTL_OBS", value: 8)
!344 = !DIEnumerator(name: "ATA_BUSY", value: 128)
!345 = !DIEnumerator(name: "ATA_DRDY", value: 64)
!346 = !DIEnumerator(name: "ATA_DF", value: 32)
!347 = !DIEnumerator(name: "ATA_DSC", value: 16)
!348 = !DIEnumerator(name: "ATA_DRQ", value: 8)
!349 = !DIEnumerator(name: "ATA_CORR", value: 4)
!350 = !DIEnumerator(name: "ATA_SENSE", value: 2)
!351 = !DIEnumerator(name: "ATA_ERR", value: 1)
!352 = !DIEnumerator(name: "ATA_SRST", value: 4)
!353 = !DIEnumerator(name: "ATA_ICRC", value: 128)
!354 = !DIEnumerator(name: "ATA_BBK", value: 128)
!355 = !DIEnumerator(name: "ATA_UNC", value: 64)
!356 = !DIEnumerator(name: "ATA_MC", value: 32)
!357 = !DIEnumerator(name: "ATA_IDNF", value: 16)
!358 = !DIEnumerator(name: "ATA_MCR", value: 8)
!359 = !DIEnumerator(name: "ATA_ABORTED", value: 4)
!360 = !DIEnumerator(name: "ATA_TRK0NF", value: 2)
!361 = !DIEnumerator(name: "ATA_AMNF", value: 1)
!362 = !DIEnumerator(name: "ATAPI_LFS", value: 240)
!363 = !DIEnumerator(name: "ATAPI_EOM", value: 2)
!364 = !DIEnumerator(name: "ATAPI_ILI", value: 1)
!365 = !DIEnumerator(name: "ATAPI_IO", value: 2)
!366 = !DIEnumerator(name: "ATAPI_COD", value: 1)
!367 = !DIEnumerator(name: "ATA_REG_DATA", value: 0)
!368 = !DIEnumerator(name: "ATA_REG_ERR", value: 1)
!369 = !DIEnumerator(name: "ATA_REG_NSECT", value: 2)
!370 = !DIEnumerator(name: "ATA_REG_LBAL", value: 3)
!371 = !DIEnumerator(name: "ATA_REG_LBAM", value: 4)
!372 = !DIEnumerator(name: "ATA_REG_LBAH", value: 5)
!373 = !DIEnumerator(name: "ATA_REG_DEVICE", value: 6)
!374 = !DIEnumerator(name: "ATA_REG_STATUS", value: 7)
!375 = !DIEnumerator(name: "ATA_REG_FEATURE", value: 1)
!376 = !DIEnumerator(name: "ATA_REG_CMD", value: 7)
!377 = !DIEnumerator(name: "ATA_REG_BYTEL", value: 4)
!378 = !DIEnumerator(name: "ATA_REG_BYTEH", value: 5)
!379 = !DIEnumerator(name: "ATA_REG_DEVSEL", value: 6)
!380 = !DIEnumerator(name: "ATA_REG_IRQ", value: 2)
!381 = !DIEnumerator(name: "ATA_CMD_DEV_RESET", value: 8)
!382 = !DIEnumerator(name: "ATA_CMD_CHK_POWER", value: 229)
!383 = !DIEnumerator(name: "ATA_CMD_STANDBY", value: 226)
!384 = !DIEnumerator(name: "ATA_CMD_IDLE", value: 227)
!385 = !DIEnumerator(name: "ATA_CMD_EDD", value: 144)
!386 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO", value: 146)
!387 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO_DMA", value: 147)
!388 = !DIEnumerator(name: "ATA_CMD_NOP", value: 0)
!389 = !DIEnumerator(name: "ATA_CMD_FLUSH", value: 231)
!390 = !DIEnumerator(name: "ATA_CMD_FLUSH_EXT", value: 234)
!391 = !DIEnumerator(name: "ATA_CMD_ID_ATA", value: 236)
!392 = !DIEnumerator(name: "ATA_CMD_ID_ATAPI", value: 161)
!393 = !DIEnumerator(name: "ATA_CMD_SERVICE", value: 162)
!394 = !DIEnumerator(name: "ATA_CMD_READ", value: 200)
!395 = !DIEnumerator(name: "ATA_CMD_READ_EXT", value: 37)
!396 = !DIEnumerator(name: "ATA_CMD_READ_QUEUED", value: 38)
!397 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_EXT", value: 43)
!398 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_DMA_EXT", value: 42)
!399 = !DIEnumerator(name: "ATA_CMD_WRITE", value: 202)
!400 = !DIEnumerator(name: "ATA_CMD_WRITE_EXT", value: 53)
!401 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED", value: 54)
!402 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_EXT", value: 59)
!403 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_DMA_EXT", value: 58)
!404 = !DIEnumerator(name: "ATA_CMD_WRITE_FUA_EXT", value: 61)
!405 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED_FUA_EXT", value: 62)
!406 = !DIEnumerator(name: "ATA_CMD_FPDMA_READ", value: 96)
!407 = !DIEnumerator(name: "ATA_CMD_FPDMA_WRITE", value: 97)
!408 = !DIEnumerator(name: "ATA_CMD_NCQ_NON_DATA", value: 99)
!409 = !DIEnumerator(name: "ATA_CMD_FPDMA_SEND", value: 100)
!410 = !DIEnumerator(name: "ATA_CMD_FPDMA_RECV", value: 101)
!411 = !DIEnumerator(name: "ATA_CMD_PIO_READ", value: 32)
!412 = !DIEnumerator(name: "ATA_CMD_PIO_READ_EXT", value: 36)
!413 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE", value: 48)
!414 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE_EXT", value: 52)
!415 = !DIEnumerator(name: "ATA_CMD_READ_MULTI", value: 196)
!416 = !DIEnumerator(name: "ATA_CMD_READ_MULTI_EXT", value: 41)
!417 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI", value: 197)
!418 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_EXT", value: 57)
!419 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_FUA_EXT", value: 206)
!420 = !DIEnumerator(name: "ATA_CMD_SET_FEATURES", value: 239)
!421 = !DIEnumerator(name: "ATA_CMD_SET_MULTI", value: 198)
!422 = !DIEnumerator(name: "ATA_CMD_PACKET", value: 160)
!423 = !DIEnumerator(name: "ATA_CMD_VERIFY", value: 64)
!424 = !DIEnumerator(name: "ATA_CMD_VERIFY_EXT", value: 66)
!425 = !DIEnumerator(name: "ATA_CMD_WRITE_UNCORR_EXT", value: 69)
!426 = !DIEnumerator(name: "ATA_CMD_STANDBYNOW1", value: 224)
!427 = !DIEnumerator(name: "ATA_CMD_IDLEIMMEDIATE", value: 225)
!428 = !DIEnumerator(name: "ATA_CMD_SLEEP", value: 230)
!429 = !DIEnumerator(name: "ATA_CMD_INIT_DEV_PARAMS", value: 145)
!430 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX", value: 248)
!431 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX_EXT", value: 39)
!432 = !DIEnumerator(name: "ATA_CMD_SET_MAX", value: 249)
!433 = !DIEnumerator(name: "ATA_CMD_SET_MAX_EXT", value: 55)
!434 = !DIEnumerator(name: "ATA_CMD_READ_LOG_EXT", value: 47)
!435 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_EXT", value: 63)
!436 = !DIEnumerator(name: "ATA_CMD_READ_LOG_DMA_EXT", value: 71)
!437 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_DMA_EXT", value: 87)
!438 = !DIEnumerator(name: "ATA_CMD_TRUSTED_NONDATA", value: 91)
!439 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV", value: 92)
!440 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV_DMA", value: 93)
!441 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND", value: 94)
!442 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND_DMA", value: 95)
!443 = !DIEnumerator(name: "ATA_CMD_PMP_READ", value: 228)
!444 = !DIEnumerator(name: "ATA_CMD_PMP_READ_DMA", value: 233)
!445 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE", value: 232)
!446 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE_DMA", value: 235)
!447 = !DIEnumerator(name: "ATA_CMD_CONF_OVERLAY", value: 177)
!448 = !DIEnumerator(name: "ATA_CMD_SEC_SET_PASS", value: 241)
!449 = !DIEnumerator(name: "ATA_CMD_SEC_UNLOCK", value: 242)
!450 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_PREP", value: 243)
!451 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_UNIT", value: 244)
!452 = !DIEnumerator(name: "ATA_CMD_SEC_FREEZE_LOCK", value: 245)
!453 = !DIEnumerator(name: "ATA_CMD_SEC_DISABLE_PASS", value: 246)
!454 = !DIEnumerator(name: "ATA_CMD_CONFIG_STREAM", value: 81)
!455 = !DIEnumerator(name: "ATA_CMD_SMART", value: 176)
!456 = !DIEnumerator(name: "ATA_CMD_MEDIA_LOCK", value: 222)
!457 = !DIEnumerator(name: "ATA_CMD_MEDIA_UNLOCK", value: 223)
!458 = !DIEnumerator(name: "ATA_CMD_DSM", value: 6)
!459 = !DIEnumerator(name: "ATA_CMD_CHK_MED_CRD_TYP", value: 209)
!460 = !DIEnumerator(name: "ATA_CMD_CFA_REQ_EXT_ERR", value: 3)
!461 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_NE", value: 56)
!462 = !DIEnumerator(name: "ATA_CMD_CFA_TRANS_SECT", value: 135)
!463 = !DIEnumerator(name: "ATA_CMD_CFA_ERASE", value: 192)
!464 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_MULT_NE", value: 205)
!465 = !DIEnumerator(name: "ATA_CMD_REQ_SENSE_DATA", value: 11)
!466 = !DIEnumerator(name: "ATA_CMD_SANITIZE_DEVICE", value: 180)
!467 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_IN", value: 74)
!468 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_OUT", value: 159)
!469 = !DIEnumerator(name: "ATA_CMD_RESTORE", value: 16)
!470 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_RD_LOG_DMA_EXT", value: 1)
!471 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_ZAC_MGMT_IN", value: 2)
!472 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_DSM", value: 0)
!473 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_WR_LOG_DMA_EXT", value: 2)
!474 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ABORT_QUEUE", value: 0)
!475 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_SET_FEATURES", value: 5)
!476 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZERO_EXT", value: 6)
!477 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 7)
!478 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_IN_REPORT_ZONES", value: 0)
!479 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_CLOSE_ZONE", value: 1)
!480 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_FINISH_ZONE", value: 2)
!481 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_OPEN_ZONE", value: 3)
!482 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_RESET_WRITE_POINTER", value: 4)
!483 = !DIEnumerator(name: "ATA_LOG_DIRECTORY", value: 0)
!484 = !DIEnumerator(name: "ATA_LOG_SATA_NCQ", value: 16)
!485 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA", value: 18)
!486 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV", value: 19)
!487 = !DIEnumerator(name: "ATA_LOG_IDENTIFY_DEVICE", value: 48)
!488 = !DIEnumerator(name: "ATA_LOG_SECURITY", value: 6)
!489 = !DIEnumerator(name: "ATA_LOG_SATA_SETTINGS", value: 8)
!490 = !DIEnumerator(name: "ATA_LOG_ZONED_INFORMATION", value: 9)
!491 = !DIEnumerator(name: "ATA_LOG_DEVSLP_OFFSET", value: 48)
!492 = !DIEnumerator(name: "ATA_LOG_DEVSLP_SIZE", value: 8)
!493 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT", value: 0)
!494 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT_MASK", value: 31)
!495 = !DIEnumerator(name: "ATA_LOG_DEVSLP_DETO", value: 1)
!496 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID", value: 7)
!497 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID_MASK", value: 128)
!498 = !DIEnumerator(name: "ATA_LOG_NCQ_PRIO_OFFSET", value: 9)
!499 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_OFFSET", value: 0)
!500 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_DSM", value: 1)
!501 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_OFFSET", value: 4)
!502 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_TRIM", value: 1)
!503 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_OFFSET", value: 8)
!504 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_SUPPORTED", value: 1)
!505 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_OFFSET", value: 12)
!506 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_SUPPORTED", value: 1)
!507 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OFFSET", value: 16)
!508 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OUT_SUPPORTED", value: 1)
!509 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_IN_SUPPORTED", value: 2)
!510 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SIZE", value: 20)
!511 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SUBCMDS_OFFSET", value: 0)
!512 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_OFFSET", value: 0)
!513 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NCQ", value: 1)
!514 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_ALL", value: 2)
!515 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_STREAMING", value: 4)
!516 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NON_STREAMING", value: 8)
!517 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_SELECTED", value: 16)
!518 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OFFSET", value: 28)
!519 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 1)
!520 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SIZE", value: 64)
!521 = !DIEnumerator(name: "ATA_CMD_READ_LONG", value: 34)
!522 = !DIEnumerator(name: "ATA_CMD_READ_LONG_ONCE", value: 35)
!523 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG", value: 50)
!524 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG_ONCE", value: 51)
!525 = !DIEnumerator(name: "SETFEATURES_XFER", value: 3)
!526 = !DIEnumerator(name: "XFER_UDMA_7", value: 71)
!527 = !DIEnumerator(name: "XFER_UDMA_6", value: 70)
!528 = !DIEnumerator(name: "XFER_UDMA_5", value: 69)
!529 = !DIEnumerator(name: "XFER_UDMA_4", value: 68)
!530 = !DIEnumerator(name: "XFER_UDMA_3", value: 67)
!531 = !DIEnumerator(name: "XFER_UDMA_2", value: 66)
!532 = !DIEnumerator(name: "XFER_UDMA_1", value: 65)
!533 = !DIEnumerator(name: "XFER_UDMA_0", value: 64)
!534 = !DIEnumerator(name: "XFER_MW_DMA_4", value: 36)
!535 = !DIEnumerator(name: "XFER_MW_DMA_3", value: 35)
!536 = !DIEnumerator(name: "XFER_MW_DMA_2", value: 34)
!537 = !DIEnumerator(name: "XFER_MW_DMA_1", value: 33)
!538 = !DIEnumerator(name: "XFER_MW_DMA_0", value: 32)
!539 = !DIEnumerator(name: "XFER_SW_DMA_2", value: 18)
!540 = !DIEnumerator(name: "XFER_SW_DMA_1", value: 17)
!541 = !DIEnumerator(name: "XFER_SW_DMA_0", value: 16)
!542 = !DIEnumerator(name: "XFER_PIO_6", value: 14)
!543 = !DIEnumerator(name: "XFER_PIO_5", value: 13)
!544 = !DIEnumerator(name: "XFER_PIO_4", value: 12)
!545 = !DIEnumerator(name: "XFER_PIO_3", value: 11)
!546 = !DIEnumerator(name: "XFER_PIO_2", value: 10)
!547 = !DIEnumerator(name: "XFER_PIO_1", value: 9)
!548 = !DIEnumerator(name: "XFER_PIO_0", value: 8)
!549 = !DIEnumerator(name: "XFER_PIO_SLOW", value: 0)
!550 = !DIEnumerator(name: "SETFEATURES_WC_ON", value: 2)
!551 = !DIEnumerator(name: "SETFEATURES_WC_OFF", value: 130)
!552 = !DIEnumerator(name: "SETFEATURES_RA_ON", value: 170)
!553 = !DIEnumerator(name: "SETFEATURES_RA_OFF", value: 85)
!554 = !DIEnumerator(name: "SETFEATURES_AAM_ON", value: 66)
!555 = !DIEnumerator(name: "SETFEATURES_AAM_OFF", value: 194)
!556 = !DIEnumerator(name: "SETFEATURES_SPINUP", value: 7)
!557 = !DIEnumerator(name: "SETFEATURES_SPINUP_TIMEOUT", value: 30000)
!558 = !DIEnumerator(name: "SETFEATURES_SATA_ENABLE", value: 16)
!559 = !DIEnumerator(name: "SETFEATURES_SATA_DISABLE", value: 144)
!560 = !DIEnumerator(name: "SATA_FPDMA_OFFSET", value: 1)
!561 = !DIEnumerator(name: "SATA_FPDMA_AA", value: 2)
!562 = !DIEnumerator(name: "SATA_DIPM", value: 3)
!563 = !DIEnumerator(name: "SATA_FPDMA_IN_ORDER", value: 4)
!564 = !DIEnumerator(name: "SATA_AN", value: 5)
!565 = !DIEnumerator(name: "SATA_SSP", value: 6)
!566 = !DIEnumerator(name: "SATA_DEVSLP", value: 9)
!567 = !DIEnumerator(name: "SETFEATURE_SENSE_DATA", value: 195)
!568 = !DIEnumerator(name: "ATA_SET_MAX_ADDR", value: 0)
!569 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD", value: 1)
!570 = !DIEnumerator(name: "ATA_SET_MAX_LOCK", value: 2)
!571 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK", value: 3)
!572 = !DIEnumerator(name: "ATA_SET_MAX_FREEZE_LOCK", value: 4)
!573 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD_DMA", value: 5)
!574 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK_DMA", value: 6)
!575 = !DIEnumerator(name: "ATA_DCO_RESTORE", value: 192)
!576 = !DIEnumerator(name: "ATA_DCO_FREEZE_LOCK", value: 193)
!577 = !DIEnumerator(name: "ATA_DCO_IDENTIFY", value: 194)
!578 = !DIEnumerator(name: "ATA_DCO_SET", value: 195)
!579 = !DIEnumerator(name: "ATA_SMART_ENABLE", value: 216)
!580 = !DIEnumerator(name: "ATA_SMART_READ_VALUES", value: 208)
!581 = !DIEnumerator(name: "ATA_SMART_READ_THRESHOLDS", value: 209)
!582 = !DIEnumerator(name: "ATA_DSM_TRIM", value: 1)
!583 = !DIEnumerator(name: "ATA_SMART_LBAM_PASS", value: 79)
!584 = !DIEnumerator(name: "ATA_SMART_LBAH_PASS", value: 194)
!585 = !DIEnumerator(name: "ATAPI_PKT_DMA", value: 1)
!586 = !DIEnumerator(name: "ATAPI_DMADIR", value: 4)
!587 = !DIEnumerator(name: "ATAPI_CDB_LEN", value: 16)
!588 = !DIEnumerator(name: "SATA_PMP_MAX_PORTS", value: 15)
!589 = !DIEnumerator(name: "SATA_PMP_CTRL_PORT", value: 15)
!590 = !DIEnumerator(name: "SATA_PMP_GSCR_DWORDS", value: 128)
!591 = !DIEnumerator(name: "SATA_PMP_GSCR_PROD_ID", value: 0)
!592 = !DIEnumerator(name: "SATA_PMP_GSCR_REV", value: 1)
!593 = !DIEnumerator(name: "SATA_PMP_GSCR_PORT_INFO", value: 2)
!594 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR", value: 32)
!595 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR_EN", value: 33)
!596 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT", value: 64)
!597 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT_EN", value: 96)
!598 = !DIEnumerator(name: "SATA_PMP_PSCR_STATUS", value: 0)
!599 = !DIEnumerator(name: "SATA_PMP_PSCR_ERROR", value: 1)
!600 = !DIEnumerator(name: "SATA_PMP_PSCR_CONTROL", value: 2)
!601 = !DIEnumerator(name: "SATA_PMP_FEAT_BIST", value: 1)
!602 = !DIEnumerator(name: "SATA_PMP_FEAT_PMREQ", value: 2)
!603 = !DIEnumerator(name: "SATA_PMP_FEAT_DYNSSC", value: 4)
!604 = !DIEnumerator(name: "SATA_PMP_FEAT_NOTIFY", value: 8)
!605 = !DIEnumerator(name: "ATA_CBL_NONE", value: 0)
!606 = !DIEnumerator(name: "ATA_CBL_PATA40", value: 1)
!607 = !DIEnumerator(name: "ATA_CBL_PATA80", value: 2)
!608 = !DIEnumerator(name: "ATA_CBL_PATA40_SHORT", value: 3)
!609 = !DIEnumerator(name: "ATA_CBL_PATA_UNK", value: 4)
!610 = !DIEnumerator(name: "ATA_CBL_PATA_IGN", value: 5)
!611 = !DIEnumerator(name: "ATA_CBL_SATA", value: 6)
!612 = !DIEnumerator(name: "SCR_STATUS", value: 0)
!613 = !DIEnumerator(name: "SCR_ERROR", value: 1)
!614 = !DIEnumerator(name: "SCR_CONTROL", value: 2)
!615 = !DIEnumerator(name: "SCR_ACTIVE", value: 3)
!616 = !DIEnumerator(name: "SCR_NOTIFICATION", value: 4)
!617 = !DIEnumerator(name: "SERR_DATA_RECOVERED", value: 1)
!618 = !DIEnumerator(name: "SERR_COMM_RECOVERED", value: 2)
!619 = !DIEnumerator(name: "SERR_DATA", value: 256)
!620 = !DIEnumerator(name: "SERR_PERSISTENT", value: 512)
!621 = !DIEnumerator(name: "SERR_PROTOCOL", value: 1024)
!622 = !DIEnumerator(name: "SERR_INTERNAL", value: 2048)
!623 = !DIEnumerator(name: "SERR_PHYRDY_CHG", value: 65536)
!624 = !DIEnumerator(name: "SERR_PHY_INT_ERR", value: 131072)
!625 = !DIEnumerator(name: "SERR_COMM_WAKE", value: 262144)
!626 = !DIEnumerator(name: "SERR_10B_8B_ERR", value: 524288)
!627 = !DIEnumerator(name: "SERR_DISPARITY", value: 1048576)
!628 = !DIEnumerator(name: "SERR_CRC", value: 2097152)
!629 = !DIEnumerator(name: "SERR_HANDSHAKE", value: 4194304)
!630 = !DIEnumerator(name: "SERR_LINK_SEQ_ERR", value: 8388608)
!631 = !DIEnumerator(name: "SERR_TRANS_ST_ERROR", value: 16777216)
!632 = !DIEnumerator(name: "SERR_UNRECOG_FIS", value: 33554432)
!633 = !DIEnumerator(name: "SERR_DEV_XCHG", value: 67108864)
!634 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 106, baseType: !223, size: 32, elements: !635)
!635 = !{!636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870}
!636 = !DIEnumerator(name: "LIBATA_MAX_PRD", value: 128)
!637 = !DIEnumerator(name: "LIBATA_DUMB_MAX_PRD", value: 64)
!638 = !DIEnumerator(name: "ATA_DEF_QUEUE", value: 1)
!639 = !DIEnumerator(name: "ATA_MAX_QUEUE", value: 32)
!640 = !DIEnumerator(name: "ATA_TAG_INTERNAL", value: 32)
!641 = !DIEnumerator(name: "ATA_SHORT_PAUSE", value: 16)
!642 = !DIEnumerator(name: "ATAPI_MAX_DRAIN", value: 16384)
!643 = !DIEnumerator(name: "ATA_ALL_DEVICES", value: 3)
!644 = !DIEnumerator(name: "ATA_SHT_EMULATED", value: 1)
!645 = !DIEnumerator(name: "ATA_SHT_THIS_ID", value: -1)
!646 = !DIEnumerator(name: "ATA_TFLAG_LBA48", value: 1)
!647 = !DIEnumerator(name: "ATA_TFLAG_ISADDR", value: 2)
!648 = !DIEnumerator(name: "ATA_TFLAG_DEVICE", value: 4)
!649 = !DIEnumerator(name: "ATA_TFLAG_WRITE", value: 8)
!650 = !DIEnumerator(name: "ATA_TFLAG_LBA", value: 16)
!651 = !DIEnumerator(name: "ATA_TFLAG_FUA", value: 32)
!652 = !DIEnumerator(name: "ATA_TFLAG_POLLING", value: 64)
!653 = !DIEnumerator(name: "ATA_DFLAG_LBA", value: 1)
!654 = !DIEnumerator(name: "ATA_DFLAG_LBA48", value: 2)
!655 = !DIEnumerator(name: "ATA_DFLAG_CDB_INTR", value: 4)
!656 = !DIEnumerator(name: "ATA_DFLAG_NCQ", value: 8)
!657 = !DIEnumerator(name: "ATA_DFLAG_FLUSH_EXT", value: 16)
!658 = !DIEnumerator(name: "ATA_DFLAG_ACPI_PENDING", value: 32)
!659 = !DIEnumerator(name: "ATA_DFLAG_ACPI_FAILED", value: 64)
!660 = !DIEnumerator(name: "ATA_DFLAG_AN", value: 128)
!661 = !DIEnumerator(name: "ATA_DFLAG_TRUSTED", value: 256)
!662 = !DIEnumerator(name: "ATA_DFLAG_DMADIR", value: 1024)
!663 = !DIEnumerator(name: "ATA_DFLAG_CFG_MASK", value: 4095)
!664 = !DIEnumerator(name: "ATA_DFLAG_PIO", value: 4096)
!665 = !DIEnumerator(name: "ATA_DFLAG_NCQ_OFF", value: 8192)
!666 = !DIEnumerator(name: "ATA_DFLAG_SLEEPING", value: 32768)
!667 = !DIEnumerator(name: "ATA_DFLAG_DUBIOUS_XFER", value: 65536)
!668 = !DIEnumerator(name: "ATA_DFLAG_NO_UNLOAD", value: 131072)
!669 = !DIEnumerator(name: "ATA_DFLAG_UNLOCK_HPA", value: 262144)
!670 = !DIEnumerator(name: "ATA_DFLAG_NCQ_SEND_RECV", value: 524288)
!671 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO", value: 1048576)
!672 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO_ENABLE", value: 2097152)
!673 = !DIEnumerator(name: "ATA_DFLAG_INIT_MASK", value: 16777215)
!674 = !DIEnumerator(name: "ATA_DFLAG_DETACH", value: 16777216)
!675 = !DIEnumerator(name: "ATA_DFLAG_DETACHED", value: 33554432)
!676 = !DIEnumerator(name: "ATA_DFLAG_DA", value: 67108864)
!677 = !DIEnumerator(name: "ATA_DFLAG_DEVSLP", value: 134217728)
!678 = !DIEnumerator(name: "ATA_DFLAG_ACPI_DISABLED", value: 268435456)
!679 = !DIEnumerator(name: "ATA_DFLAG_D_SENSE", value: 536870912)
!680 = !DIEnumerator(name: "ATA_DFLAG_ZAC", value: 1073741824)
!681 = !DIEnumerator(name: "ATA_DEV_UNKNOWN", value: 0)
!682 = !DIEnumerator(name: "ATA_DEV_ATA", value: 1)
!683 = !DIEnumerator(name: "ATA_DEV_ATA_UNSUP", value: 2)
!684 = !DIEnumerator(name: "ATA_DEV_ATAPI", value: 3)
!685 = !DIEnumerator(name: "ATA_DEV_ATAPI_UNSUP", value: 4)
!686 = !DIEnumerator(name: "ATA_DEV_PMP", value: 5)
!687 = !DIEnumerator(name: "ATA_DEV_PMP_UNSUP", value: 6)
!688 = !DIEnumerator(name: "ATA_DEV_SEMB", value: 7)
!689 = !DIEnumerator(name: "ATA_DEV_SEMB_UNSUP", value: 8)
!690 = !DIEnumerator(name: "ATA_DEV_ZAC", value: 9)
!691 = !DIEnumerator(name: "ATA_DEV_ZAC_UNSUP", value: 10)
!692 = !DIEnumerator(name: "ATA_DEV_NONE", value: 11)
!693 = !DIEnumerator(name: "ATA_LFLAG_NO_HRST", value: 2)
!694 = !DIEnumerator(name: "ATA_LFLAG_NO_SRST", value: 4)
!695 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_ATA", value: 8)
!696 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_SEMB", value: 16)
!697 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_CLASS", value: 24)
!698 = !DIEnumerator(name: "ATA_LFLAG_NO_RETRY", value: 32)
!699 = !DIEnumerator(name: "ATA_LFLAG_DISABLED", value: 64)
!700 = !DIEnumerator(name: "ATA_LFLAG_SW_ACTIVITY", value: 128)
!701 = !DIEnumerator(name: "ATA_LFLAG_NO_LPM", value: 256)
!702 = !DIEnumerator(name: "ATA_LFLAG_RST_ONCE", value: 512)
!703 = !DIEnumerator(name: "ATA_LFLAG_CHANGED", value: 1024)
!704 = !DIEnumerator(name: "ATA_LFLAG_NO_DB_DELAY", value: 2048)
!705 = !DIEnumerator(name: "ATA_FLAG_SLAVE_POSS", value: 1)
!706 = !DIEnumerator(name: "ATA_FLAG_SATA", value: 2)
!707 = !DIEnumerator(name: "ATA_FLAG_NO_LPM", value: 4)
!708 = !DIEnumerator(name: "ATA_FLAG_NO_LOG_PAGE", value: 32)
!709 = !DIEnumerator(name: "ATA_FLAG_NO_ATAPI", value: 64)
!710 = !DIEnumerator(name: "ATA_FLAG_PIO_DMA", value: 128)
!711 = !DIEnumerator(name: "ATA_FLAG_PIO_LBA48", value: 256)
!712 = !DIEnumerator(name: "ATA_FLAG_PIO_POLLING", value: 512)
!713 = !DIEnumerator(name: "ATA_FLAG_NCQ", value: 1024)
!714 = !DIEnumerator(name: "ATA_FLAG_NO_POWEROFF_SPINDOWN", value: 2048)
!715 = !DIEnumerator(name: "ATA_FLAG_NO_HIBERNATE_SPINDOWN", value: 4096)
!716 = !DIEnumerator(name: "ATA_FLAG_DEBUGMSG", value: 8192)
!717 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AA", value: 16384)
!718 = !DIEnumerator(name: "ATA_FLAG_IGN_SIMPLEX", value: 32768)
!719 = !DIEnumerator(name: "ATA_FLAG_NO_IORDY", value: 65536)
!720 = !DIEnumerator(name: "ATA_FLAG_ACPI_SATA", value: 131072)
!721 = !DIEnumerator(name: "ATA_FLAG_AN", value: 262144)
!722 = !DIEnumerator(name: "ATA_FLAG_PMP", value: 524288)
!723 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AUX", value: 1048576)
!724 = !DIEnumerator(name: "ATA_FLAG_EM", value: 2097152)
!725 = !DIEnumerator(name: "ATA_FLAG_SW_ACTIVITY", value: 4194304)
!726 = !DIEnumerator(name: "ATA_FLAG_NO_DIPM", value: 8388608)
!727 = !DIEnumerator(name: "ATA_FLAG_SAS_HOST", value: 16777216)
!728 = !DIEnumerator(name: "ATA_PFLAG_EH_PENDING", value: 1)
!729 = !DIEnumerator(name: "ATA_PFLAG_EH_IN_PROGRESS", value: 2)
!730 = !DIEnumerator(name: "ATA_PFLAG_FROZEN", value: 4)
!731 = !DIEnumerator(name: "ATA_PFLAG_RECOVERED", value: 8)
!732 = !DIEnumerator(name: "ATA_PFLAG_LOADING", value: 16)
!733 = !DIEnumerator(name: "ATA_PFLAG_SCSI_HOTPLUG", value: 64)
!734 = !DIEnumerator(name: "ATA_PFLAG_INITIALIZING", value: 128)
!735 = !DIEnumerator(name: "ATA_PFLAG_RESETTING", value: 256)
!736 = !DIEnumerator(name: "ATA_PFLAG_UNLOADING", value: 512)
!737 = !DIEnumerator(name: "ATA_PFLAG_UNLOADED", value: 1024)
!738 = !DIEnumerator(name: "ATA_PFLAG_SUSPENDED", value: 131072)
!739 = !DIEnumerator(name: "ATA_PFLAG_PM_PENDING", value: 262144)
!740 = !DIEnumerator(name: "ATA_PFLAG_INIT_GTM_VALID", value: 524288)
!741 = !DIEnumerator(name: "ATA_PFLAG_PIO32", value: 1048576)
!742 = !DIEnumerator(name: "ATA_PFLAG_PIO32CHANGE", value: 2097152)
!743 = !DIEnumerator(name: "ATA_PFLAG_EXTERNAL", value: 4194304)
!744 = !DIEnumerator(name: "ATA_QCFLAG_ACTIVE", value: 1)
!745 = !DIEnumerator(name: "ATA_QCFLAG_DMAMAP", value: 2)
!746 = !DIEnumerator(name: "ATA_QCFLAG_IO", value: 8)
!747 = !DIEnumerator(name: "ATA_QCFLAG_RESULT_TF", value: 16)
!748 = !DIEnumerator(name: "ATA_QCFLAG_CLEAR_EXCL", value: 32)
!749 = !DIEnumerator(name: "ATA_QCFLAG_QUIET", value: 64)
!750 = !DIEnumerator(name: "ATA_QCFLAG_RETRY", value: 128)
!751 = !DIEnumerator(name: "ATA_QCFLAG_FAILED", value: 65536)
!752 = !DIEnumerator(name: "ATA_QCFLAG_SENSE_VALID", value: 131072)
!753 = !DIEnumerator(name: "ATA_QCFLAG_EH_SCHEDULED", value: 262144)
!754 = !DIEnumerator(name: "ATA_HOST_SIMPLEX", value: 1)
!755 = !DIEnumerator(name: "ATA_HOST_STARTED", value: 2)
!756 = !DIEnumerator(name: "ATA_HOST_PARALLEL_SCAN", value: 4)
!757 = !DIEnumerator(name: "ATA_HOST_IGNORE_ATA", value: 8)
!758 = !DIEnumerator(name: "ATA_TMOUT_BOOT", value: 30000)
!759 = !DIEnumerator(name: "ATA_TMOUT_BOOT_QUICK", value: 7000)
!760 = !DIEnumerator(name: "ATA_TMOUT_INTERNAL_QUICK", value: 5000)
!761 = !DIEnumerator(name: "ATA_TMOUT_MAX_PARK", value: 30000)
!762 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT_LONG", value: 2000)
!763 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT", value: 800)
!764 = !DIEnumerator(name: "ATA_WAIT_AFTER_RESET", value: 150)
!765 = !DIEnumerator(name: "ATA_TMOUT_PMP_SRST_WAIT", value: 5000)
!766 = !DIEnumerator(name: "ATA_TMOUT_SPURIOUS_PHY", value: 10000)
!767 = !DIEnumerator(name: "BUS_UNKNOWN", value: 0)
!768 = !DIEnumerator(name: "BUS_DMA", value: 1)
!769 = !DIEnumerator(name: "BUS_IDLE", value: 2)
!770 = !DIEnumerator(name: "BUS_NOINTR", value: 3)
!771 = !DIEnumerator(name: "BUS_NODATA", value: 4)
!772 = !DIEnumerator(name: "BUS_TIMER", value: 5)
!773 = !DIEnumerator(name: "BUS_PIO", value: 6)
!774 = !DIEnumerator(name: "BUS_EDD", value: 7)
!775 = !DIEnumerator(name: "BUS_IDENTIFY", value: 8)
!776 = !DIEnumerator(name: "BUS_PACKET", value: 9)
!777 = !DIEnumerator(name: "PORT_UNKNOWN", value: 0)
!778 = !DIEnumerator(name: "PORT_ENABLED", value: 1)
!779 = !DIEnumerator(name: "PORT_DISABLED", value: 2)
!780 = !DIEnumerator(name: "ATA_NR_PIO_MODES", value: 7)
!781 = !DIEnumerator(name: "ATA_NR_MWDMA_MODES", value: 5)
!782 = !DIEnumerator(name: "ATA_NR_UDMA_MODES", value: 8)
!783 = !DIEnumerator(name: "ATA_SHIFT_PIO", value: 0)
!784 = !DIEnumerator(name: "ATA_SHIFT_MWDMA", value: 7)
!785 = !DIEnumerator(name: "ATA_SHIFT_UDMA", value: 12)
!786 = !DIEnumerator(name: "ATA_SHIFT_PRIO", value: 6)
!787 = !DIEnumerator(name: "ATA_PRIO_HIGH", value: 2)
!788 = !DIEnumerator(name: "ATA_DMA_PAD_SZ", value: 4)
!789 = !DIEnumerator(name: "ATA_ERING_SIZE", value: 32)
!790 = !DIEnumerator(name: "ATA_DEFER_LINK", value: 1)
!791 = !DIEnumerator(name: "ATA_DEFER_PORT", value: 2)
!792 = !DIEnumerator(name: "ATA_EH_DESC_LEN", value: 80)
!793 = !DIEnumerator(name: "ATA_EH_REVALIDATE", value: 1)
!794 = !DIEnumerator(name: "ATA_EH_SOFTRESET", value: 2)
!795 = !DIEnumerator(name: "ATA_EH_HARDRESET", value: 4)
!796 = !DIEnumerator(name: "ATA_EH_RESET", value: 6)
!797 = !DIEnumerator(name: "ATA_EH_ENABLE_LINK", value: 8)
!798 = !DIEnumerator(name: "ATA_EH_PARK", value: 32)
!799 = !DIEnumerator(name: "ATA_EH_PERDEV_MASK", value: 33)
!800 = !DIEnumerator(name: "ATA_EH_ALL_ACTIONS", value: 15)
!801 = !DIEnumerator(name: "ATA_EHI_HOTPLUGGED", value: 1)
!802 = !DIEnumerator(name: "ATA_EHI_NO_AUTOPSY", value: 4)
!803 = !DIEnumerator(name: "ATA_EHI_QUIET", value: 8)
!804 = !DIEnumerator(name: "ATA_EHI_NO_RECOVERY", value: 16)
!805 = !DIEnumerator(name: "ATA_EHI_DID_SOFTRESET", value: 65536)
!806 = !DIEnumerator(name: "ATA_EHI_DID_HARDRESET", value: 131072)
!807 = !DIEnumerator(name: "ATA_EHI_PRINTINFO", value: 262144)
!808 = !DIEnumerator(name: "ATA_EHI_SETMODE", value: 524288)
!809 = !DIEnumerator(name: "ATA_EHI_POST_SETMODE", value: 1048576)
!810 = !DIEnumerator(name: "ATA_EHI_DID_RESET", value: 196608)
!811 = !DIEnumerator(name: "ATA_EHI_TO_SLAVE_MASK", value: 12)
!812 = !DIEnumerator(name: "ATA_EH_MAX_TRIES", value: 5)
!813 = !DIEnumerator(name: "ATA_LINK_RESUME_TRIES", value: 5)
!814 = !DIEnumerator(name: "ATA_PROBE_MAX_TRIES", value: 3)
!815 = !DIEnumerator(name: "ATA_EH_DEV_TRIES", value: 3)
!816 = !DIEnumerator(name: "ATA_EH_PMP_TRIES", value: 5)
!817 = !DIEnumerator(name: "ATA_EH_PMP_LINK_TRIES", value: 3)
!818 = !DIEnumerator(name: "SATA_PMP_RW_TIMEOUT", value: 3000)
!819 = !DIEnumerator(name: "ATA_EH_CMD_TIMEOUT_TABLE_SIZE", value: 6)
!820 = !DIEnumerator(name: "ATA_HORKAGE_DIAGNOSTIC", value: 1)
!821 = !DIEnumerator(name: "ATA_HORKAGE_NODMA", value: 2)
!822 = !DIEnumerator(name: "ATA_HORKAGE_NONCQ", value: 4)
!823 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_128", value: 8)
!824 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_HPA", value: 16)
!825 = !DIEnumerator(name: "ATA_HORKAGE_DISABLE", value: 32)
!826 = !DIEnumerator(name: "ATA_HORKAGE_HPA_SIZE", value: 64)
!827 = !DIEnumerator(name: "ATA_HORKAGE_IVB", value: 256)
!828 = !DIEnumerator(name: "ATA_HORKAGE_STUCK_ERR", value: 512)
!829 = !DIEnumerator(name: "ATA_HORKAGE_BRIDGE_OK", value: 1024)
!830 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_MOD16_DMA", value: 2048)
!831 = !DIEnumerator(name: "ATA_HORKAGE_FIRMWARE_WARN", value: 4096)
!832 = !DIEnumerator(name: "ATA_HORKAGE_1_5_GBPS", value: 8192)
!833 = !DIEnumerator(name: "ATA_HORKAGE_NOSETXFER", value: 16384)
!834 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_FPDMA_AA", value: 32768)
!835 = !DIEnumerator(name: "ATA_HORKAGE_DUMP_ID", value: 65536)
!836 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_LBA48", value: 131072)
!837 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_DMADIR", value: 262144)
!838 = !DIEnumerator(name: "ATA_HORKAGE_NO_NCQ_TRIM", value: 524288)
!839 = !DIEnumerator(name: "ATA_HORKAGE_NOLPM", value: 1048576)
!840 = !DIEnumerator(name: "ATA_HORKAGE_WD_BROKEN_LPM", value: 2097152)
!841 = !DIEnumerator(name: "ATA_HORKAGE_ZERO_AFTER_TRIM", value: 4194304)
!842 = !DIEnumerator(name: "ATA_HORKAGE_NO_DMA_LOG", value: 8388608)
!843 = !DIEnumerator(name: "ATA_HORKAGE_NOTRIM", value: 16777216)
!844 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_1024", value: 33554432)
!845 = !DIEnumerator(name: "ATA_HORKAGE_MAX_TRIM_128M", value: 67108864)
!846 = !DIEnumerator(name: "ATA_DMA_MASK_ATA", value: 1)
!847 = !DIEnumerator(name: "ATA_DMA_MASK_ATAPI", value: 2)
!848 = !DIEnumerator(name: "ATA_DMA_MASK_CFA", value: 4)
!849 = !DIEnumerator(name: "ATAPI_READ", value: 0)
!850 = !DIEnumerator(name: "ATAPI_WRITE", value: 1)
!851 = !DIEnumerator(name: "ATAPI_READ_CD", value: 2)
!852 = !DIEnumerator(name: "ATAPI_PASS_THRU", value: 3)
!853 = !DIEnumerator(name: "ATAPI_MISC", value: 4)
!854 = !DIEnumerator(name: "ATA_TIMING_SETUP", value: 1)
!855 = !DIEnumerator(name: "ATA_TIMING_ACT8B", value: 2)
!856 = !DIEnumerator(name: "ATA_TIMING_REC8B", value: 4)
!857 = !DIEnumerator(name: "ATA_TIMING_CYC8B", value: 8)
!858 = !DIEnumerator(name: "ATA_TIMING_8BIT", value: 14)
!859 = !DIEnumerator(name: "ATA_TIMING_ACTIVE", value: 16)
!860 = !DIEnumerator(name: "ATA_TIMING_RECOVER", value: 32)
!861 = !DIEnumerator(name: "ATA_TIMING_DMACK_HOLD", value: 64)
!862 = !DIEnumerator(name: "ATA_TIMING_CYCLE", value: 128)
!863 = !DIEnumerator(name: "ATA_TIMING_UDMA", value: 256)
!864 = !DIEnumerator(name: "ATA_TIMING_ALL", value: 511)
!865 = !DIEnumerator(name: "ATA_ACPI_FILTER_SETXFER", value: 1)
!866 = !DIEnumerator(name: "ATA_ACPI_FILTER_LOCK", value: 2)
!867 = !DIEnumerator(name: "ATA_ACPI_FILTER_DIPM", value: 4)
!868 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_OFFSET", value: 8)
!869 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_AA", value: 16)
!870 = !DIEnumerator(name: "ATA_ACPI_FILTER_DEFAULT", value: 7)
!871 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_prot_flags", file: !222, line: 520, baseType: !7, size: 32, elements: !872)
!872 = !{!873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885}
!873 = !DIEnumerator(name: "ATA_PROT_FLAG_PIO", value: 1, isUnsigned: true)
!874 = !DIEnumerator(name: "ATA_PROT_FLAG_DMA", value: 2, isUnsigned: true)
!875 = !DIEnumerator(name: "ATA_PROT_FLAG_NCQ", value: 4, isUnsigned: true)
!876 = !DIEnumerator(name: "ATA_PROT_FLAG_ATAPI", value: 8, isUnsigned: true)
!877 = !DIEnumerator(name: "ATA_PROT_UNKNOWN", value: 255, isUnsigned: true)
!878 = !DIEnumerator(name: "ATA_PROT_NODATA", value: 0, isUnsigned: true)
!879 = !DIEnumerator(name: "ATA_PROT_PIO", value: 1, isUnsigned: true)
!880 = !DIEnumerator(name: "ATA_PROT_DMA", value: 2, isUnsigned: true)
!881 = !DIEnumerator(name: "ATA_PROT_NCQ_NODATA", value: 4, isUnsigned: true)
!882 = !DIEnumerator(name: "ATA_PROT_NCQ", value: 6, isUnsigned: true)
!883 = !DIEnumerator(name: "ATAPI_PROT_NODATA", value: 8, isUnsigned: true)
!884 = !DIEnumerator(name: "ATAPI_PROT_PIO", value: 9, isUnsigned: true)
!885 = !DIEnumerator(name: "ATAPI_PROT_DMA", value: 10, isUnsigned: true)
!886 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !887, line: 27, baseType: !7, size: 32, elements: !888)
!887 = !DIFile(filename: "./include/linux/ioprio.h", directory: "/home/lizy2001/genbc/linux")
!888 = !{!889, !890, !891, !892}
!889 = !DIEnumerator(name: "IOPRIO_CLASS_NONE", value: 0, isUnsigned: true)
!890 = !DIEnumerator(name: "IOPRIO_CLASS_RT", value: 1, isUnsigned: true)
!891 = !DIEnumerator(name: "IOPRIO_CLASS_BE", value: 2, isUnsigned: true)
!892 = !DIEnumerator(name: "IOPRIO_CLASS_IDLE", value: 3, isUnsigned: true)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_xfer_mask", file: !183, line: 469, baseType: !7, size: 32, elements: !894)
!894 = !{!895, !896, !897}
!895 = !DIEnumerator(name: "ATA_MASK_PIO", value: 127, isUnsigned: true)
!896 = !DIEnumerator(name: "ATA_MASK_MWDMA", value: 3968, isUnsigned: true)
!897 = !DIEnumerator(name: "ATA_MASK_UDMA", value: 1044480, isUnsigned: true)
!898 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 74, baseType: !7, size: 32, elements: !899)
!899 = !{!900, !901, !902, !903, !904, !905, !906, !907}
!900 = !DIEnumerator(name: "ATA_MSG_DRV", value: 1, isUnsigned: true)
!901 = !DIEnumerator(name: "ATA_MSG_INFO", value: 2, isUnsigned: true)
!902 = !DIEnumerator(name: "ATA_MSG_PROBE", value: 4, isUnsigned: true)
!903 = !DIEnumerator(name: "ATA_MSG_WARN", value: 8, isUnsigned: true)
!904 = !DIEnumerator(name: "ATA_MSG_MALLOC", value: 16, isUnsigned: true)
!905 = !DIEnumerator(name: "ATA_MSG_CTL", value: 32, isUnsigned: true)
!906 = !DIEnumerator(name: "ATA_MSG_INTR", value: 64, isUnsigned: true)
!907 = !DIEnumerator(name: "ATA_MSG_ERR", value: 128, isUnsigned: true)
!908 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !909, line: 567, baseType: !7, size: 32, elements: !910)
!909 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!910 = !{!911, !912, !913}
!911 = !DIEnumerator(name: "DUMP_PREFIX_NONE", value: 0, isUnsigned: true)
!912 = !DIEnumerator(name: "DUMP_PREFIX_ADDRESS", value: 1, isUnsigned: true)
!913 = !DIEnumerator(name: "DUMP_PREFIX_OFFSET", value: 2, isUnsigned: true)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !915, line: 10, baseType: !7, size: 32, elements: !916)
!915 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!916 = !{!917, !918}
!917 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!918 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 19, baseType: !223, size: 32, elements: !921)
!920 = !DIFile(filename: "drivers/ata/libata.h", directory: "/home/lizy2001/genbc/linux")
!921 = !{!922, !923, !924, !925, !926, !927, !928}
!922 = !DIEnumerator(name: "ATA_READID_POSTRESET", value: 1)
!923 = !DIEnumerator(name: "ATA_DNXFER_PIO", value: 0)
!924 = !DIEnumerator(name: "ATA_DNXFER_DMA", value: 1)
!925 = !DIEnumerator(name: "ATA_DNXFER_40C", value: 2)
!926 = !DIEnumerator(name: "ATA_DNXFER_FORCE_PIO", value: 3)
!927 = !DIEnumerator(name: "ATA_DNXFER_FORCE_PIO0", value: 4)
!928 = !DIEnumerator(name: "ATA_DNXFER_QUIET", value: -2147483648)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !930, line: 30, baseType: !931, size: 64, elements: !932)
!930 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!931 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!932 = !{!933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961}
!933 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!934 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!935 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!936 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!937 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!938 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!939 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!940 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!941 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!942 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!943 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!944 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!945 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!946 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!947 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!948 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!949 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!950 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!951 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!952 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!953 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!954 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!955 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!956 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!957 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!958 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!959 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!960 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!961 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!962 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !963, line: 11, baseType: !7, size: 32, elements: !964)
!963 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!964 = !{!965, !966, !967}
!965 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!966 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!967 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!968 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !969, line: 305, baseType: !7, size: 32, elements: !970)
!969 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!970 = !{!971, !972, !973, !974}
!971 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!972 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!973 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!974 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!975 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !976, line: 119, baseType: !7, size: 32, elements: !977)
!976 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!977 = !{!978, !979, !980, !981, !982}
!978 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!979 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!980 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!981 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!982 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!983 = !{!984, !989, !223, !988, !7, !931, !991, !992, !994, !995, !997, !1000, !1002, !986, !1004, !1005, !6852, !6675, !6854, !1911, !6855, !1056}
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !985, line: 23, baseType: !986)
!985 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !987, line: 31, baseType: !988)
!987 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!988 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !985, line: 21, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !987, line: 27, baseType: !7)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !993, line: 148, baseType: !7)
!993 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!994 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !996, line: 155, baseType: !223)
!996 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !999, line: 29, baseType: !1000)
!999 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !987, line: 24, baseType: !1001)
!1001 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le64", file: !999, line: 33, baseType: !986)
!1004 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port", file: !183, line: 811, size: 120832, elements: !1007)
!1007 = !{!1008, !6361, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6782, !6783, !6784, !6785, !6786, !6793, !6794, !6795, !6796, !6797, !6798, !6802, !6803, !6804, !6805, !6806, !6807, !6808, !6809, !6810, !6811, !6817, !6818, !6819, !6820, !6821, !6822, !6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830, !6831, !6832, !6833, !6836, !6837, !6838, !6848}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_host", scope: !1006, file: !183, line: 812, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !173, line: 524, size: 16256, elements: !1011)
!1011 = !{!1012, !1018, !1019, !1020, !1036, !1038, !1054, !1055, !5941, !5942, !5943, !6307, !6310, !6311, !6312, !6313, !6314, !6315, !6316, !6317, !6318, !6319, !6320, !6321, !6322, !6323, !6324, !6325, !6326, !6327, !6328, !6329, !6330, !6331, !6332, !6333, !6334, !6335, !6336, !6337, !6338, !6339, !6340, !6341, !6342, !6343, !6345, !6346, !6347, !6348, !6349, !6350, !6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !1010, file: !173, line: 533, baseType: !1013, size: 128)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !993, line: 178, size: 128, elements: !1014)
!1014 = !{!1015, !1017}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1013, file: !993, line: 179, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1013, file: !993, line: 179, baseType: !1016, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !1010, file: !173, line: 534, baseType: !1013, size: 128, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !1010, file: !173, line: 536, baseType: !1013, size: 128, offset: 256)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !1010, file: !173, line: 538, baseType: !1021, offset: 384)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1022, line: 83, baseType: !1023)
!1022 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1022, line: 71, elements: !1024)
!1024 = !{!1025}
!1025 = !DIDerivedType(tag: DW_TAG_member, scope: !1023, file: !1022, line: 72, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1023, file: !1022, line: 72, elements: !1027)
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1026, file: !1022, line: 73, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1022, line: 20, elements: !1030)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1029, file: !1022, line: 21, baseType: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1033, line: 25, baseType: !1034)
!1033 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1033, line: 25, elements: !1035)
!1035 = !{}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !1010, file: !173, line: 539, baseType: !1037, size: 64, offset: 384)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !1010, file: !173, line: 541, baseType: !1039, size: 192, offset: 448)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1040, line: 53, size: 192, elements: !1041)
!1040 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1041 = !{!1042, !1052, !1053}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1039, file: !1040, line: 54, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1044, line: 13, baseType: !1045)
!1044 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !993, line: 175, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !993, line: 173, size: 64, elements: !1047)
!1047 = !{!1048}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1046, file: !993, line: 174, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !985, line: 22, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !987, line: 30, baseType: !1051)
!1051 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1039, file: !1040, line: 55, baseType: !1021, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1039, file: !1040, line: 59, baseType: !1013, size: 128, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !1010, file: !173, line: 543, baseType: !1013, size: 128, offset: 640)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !1010, file: !173, line: 544, baseType: !1056, size: 64, offset: 768)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1058, line: 640, size: 48640, elements: !1059)
!1058 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1059 = !{!1060, !1066, !1068, !1069, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1089, !1114, !1125, !1225, !1226, !1227, !1238, !1239, !1241, !1242, !5241, !5242, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5319, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5366, !5371, !5372, !5373, !5374, !5375, !5377, !5380, !5383, !5386, !5389, !5425, !5526, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5572, !5573, !5574, !5575, !5576, !5581, !5582, !5583, !5586, !5587, !5589, !5598, !5603, !5604, !5605, !5608, !5609, !5688, !5689, !5692, !5693, !5696, !5697, !5698, !5702, !5703, !5704, !5717, !5718, !5719, !5729, !5734, !5735, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5762, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1057, file: !1058, line: 646, baseType: !1061, size: 128)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1062, line: 56, size: 128, elements: !1063)
!1062 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1063 = !{!1064, !1065}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1061, file: !1062, line: 57, baseType: !994, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1061, file: !1062, line: 58, baseType: !989, size: 32, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1057, file: !1058, line: 649, baseType: !1067, size: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !931)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1057, file: !1058, line: 657, baseType: !991, size: 64, offset: 192)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1057, file: !1058, line: 658, baseType: !1070, size: 32, offset: 256)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !976, line: 113, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !976, line: 111, size: 32, elements: !1072)
!1072 = !{!1073}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1071, file: !976, line: 112, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !993, line: 168, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !993, line: 166, size: 32, elements: !1076)
!1076 = !{!1077}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1075, file: !993, line: 167, baseType: !223, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1057, file: !1058, line: 660, baseType: !7, size: 32, offset: 288)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1057, file: !1058, line: 661, baseType: !7, size: 32, offset: 320)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1057, file: !1058, line: 684, baseType: !223, size: 32, offset: 352)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1057, file: !1058, line: 686, baseType: !223, size: 32, offset: 384)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1057, file: !1058, line: 687, baseType: !223, size: 32, offset: 416)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1057, file: !1058, line: 688, baseType: !223, size: 32, offset: 448)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1057, file: !1058, line: 689, baseType: !7, size: 32, offset: 480)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1057, file: !1058, line: 691, baseType: !1086, size: 64, offset: 512)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1058, line: 691, flags: DIFlagFwdDecl)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1057, file: !1058, line: 692, baseType: !1090, size: 832, offset: 576)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1058, line: 451, size: 832, elements: !1091)
!1091 = !{!1092, !1097, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1090, file: !1058, line: 453, baseType: !1093, size: 128)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1058, line: 325, size: 128, elements: !1094)
!1094 = !{!1095, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1093, file: !1058, line: 326, baseType: !994, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1093, file: !1058, line: 327, baseType: !989, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1090, file: !1058, line: 454, baseType: !1098, size: 192, align: 64, offset: 128)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1099, line: 24, size: 192, align: 64, elements: !1100)
!1099 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1100 = !{!1101, !1102, !1104}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1098, file: !1099, line: 25, baseType: !994, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1098, file: !1099, line: 26, baseType: !1103, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1098, file: !1099, line: 27, baseType: !1103, size: 64, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1090, file: !1058, line: 455, baseType: !1013, size: 128, offset: 320)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1090, file: !1058, line: 456, baseType: !7, size: 32, offset: 448)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1090, file: !1058, line: 458, baseType: !984, size: 64, offset: 512)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1090, file: !1058, line: 459, baseType: !984, size: 64, offset: 576)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1090, file: !1058, line: 460, baseType: !984, size: 64, offset: 640)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1090, file: !1058, line: 461, baseType: !984, size: 64, offset: 704)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1090, file: !1058, line: 463, baseType: !984, size: 64, offset: 768)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1090, file: !1058, line: 465, baseType: !1113, offset: 832)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1058, line: 415, elements: !1035)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1057, file: !1058, line: 693, baseType: !1115, size: 384, offset: 1408)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1058, line: 489, size: 384, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1115, file: !1058, line: 490, baseType: !1013, size: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1115, file: !1058, line: 491, baseType: !994, size: 64, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1115, file: !1058, line: 492, baseType: !994, size: 64, offset: 192)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1115, file: !1058, line: 493, baseType: !7, size: 32, offset: 256)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1115, file: !1058, line: 494, baseType: !1001, size: 16, offset: 288)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1115, file: !1058, line: 495, baseType: !1001, size: 16, offset: 304)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1115, file: !1058, line: 497, baseType: !1124, size: 64, offset: 320)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1057, file: !1058, line: 697, baseType: !1126, size: 1792, offset: 1792)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1058, line: 507, size: 1792, elements: !1127)
!1127 = !{!1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1222, !1223}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1126, file: !1058, line: 508, baseType: !1098, size: 192, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1126, file: !1058, line: 515, baseType: !984, size: 64, offset: 192)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1126, file: !1058, line: 516, baseType: !984, size: 64, offset: 256)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1126, file: !1058, line: 517, baseType: !984, size: 64, offset: 320)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1126, file: !1058, line: 518, baseType: !984, size: 64, offset: 384)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1126, file: !1058, line: 519, baseType: !984, size: 64, offset: 448)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1126, file: !1058, line: 526, baseType: !1049, size: 64, offset: 512)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1126, file: !1058, line: 527, baseType: !984, size: 64, offset: 576)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1126, file: !1058, line: 528, baseType: !7, size: 32, offset: 640)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1126, file: !1058, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1126, file: !1058, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1126, file: !1058, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1126, file: !1058, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1126, file: !1058, line: 563, baseType: !1142, size: 512, offset: 704)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !1143)
!1143 = !{!1144, !1152, !1153, !1158, !1215, !1219, !1220, !1221}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1142, file: !6, line: 119, baseType: !1145, size: 256)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1146, line: 9, size: 256, elements: !1147)
!1146 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1147 = !{!1148, !1149}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1145, file: !1146, line: 10, baseType: !1098, size: 192, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1145, file: !1146, line: 11, baseType: !1150, size: 64, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1151, line: 29, baseType: !1049)
!1151 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1142, file: !6, line: 120, baseType: !1150, size: 64, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1142, file: !6, line: 121, baseType: !1154, size: 64, offset: 320)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!5, !1157}
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1142, file: !6, line: 122, baseType: !1159, size: 64, offset: 384)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !1161)
!1161 = !{!1162, !1183, !1184, !1188, !1198, !1199, !1210, !1214}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1160, file: !6, line: 160, baseType: !1163, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !1165)
!1165 = !{!1166, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1164, file: !6, line: 215, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1022, line: 29, baseType: !1029)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1164, file: !6, line: 216, baseType: !7, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1164, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1164, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1164, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1164, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1164, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1164, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1164, file: !6, line: 233, baseType: !1150, size: 64, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1164, file: !6, line: 234, baseType: !1157, size: 64, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1164, file: !6, line: 235, baseType: !1150, size: 64, offset: 256)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1164, file: !6, line: 236, baseType: !1157, size: 64, offset: 320)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1164, file: !6, line: 237, baseType: !1180, size: 4096, offset: 512)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1160, size: 4096, elements: !1181)
!1181 = !{!1182}
!1182 = !DISubrange(count: 8)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1160, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1160, file: !6, line: 162, baseType: !1185, size: 32, offset: 96)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !993, line: 27, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1187, line: 96, baseType: !223)
!1187 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1160, file: !6, line: 163, baseType: !1189, size: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1190, line: 276, baseType: !1191)
!1190 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1190, line: 276, size: 32, elements: !1192)
!1192 = !{!1193}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1191, file: !1190, line: 276, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1190, line: 70, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1190, line: 65, size: 32, elements: !1196)
!1196 = !{!1197}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1195, file: !1190, line: 66, baseType: !7, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1160, file: !6, line: 164, baseType: !1157, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1160, file: !6, line: 165, baseType: !1200, size: 128, offset: 256)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1146, line: 14, size: 128, elements: !1201)
!1201 = !{!1202}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1200, file: !1146, line: 15, baseType: !1203, size: 128)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1099, line: 125, size: 128, elements: !1204)
!1204 = !{!1205, !1209}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1203, file: !1099, line: 126, baseType: !1206, size: 64)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1099, line: 31, size: 64, elements: !1207)
!1207 = !{!1208}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1206, file: !1099, line: 32, baseType: !1103, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1203, file: !1099, line: 127, baseType: !1103, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1160, file: !6, line: 166, baseType: !1211, size: 64, offset: 384)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!1150}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1160, file: !6, line: 167, baseType: !1150, size: 64, offset: 448)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1142, file: !6, line: 123, baseType: !1216, size: 8, offset: 448)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !985, line: 17, baseType: !1217)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !987, line: 21, baseType: !1218)
!1218 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1142, file: !6, line: 124, baseType: !1216, size: 8, offset: 456)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1142, file: !6, line: 125, baseType: !1216, size: 8, offset: 464)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1142, file: !6, line: 126, baseType: !1216, size: 8, offset: 472)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1126, file: !1058, line: 572, baseType: !1142, size: 512, offset: 1216)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1126, file: !1058, line: 580, baseType: !1224, size: 64, offset: 1728)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1057, file: !1058, line: 721, baseType: !7, size: 32, offset: 3584)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1057, file: !1058, line: 722, baseType: !223, size: 32, offset: 3616)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1057, file: !1058, line: 723, baseType: !1228, size: 64, offset: 3648)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1231, line: 17, baseType: !1232)
!1231 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1231, line: 17, size: 64, elements: !1233)
!1233 = !{!1234}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1232, file: !1231, line: 17, baseType: !1235, size: 64)
!1235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 64, elements: !1236)
!1236 = !{!1237}
!1237 = !DISubrange(count: 1)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1057, file: !1058, line: 724, baseType: !1230, size: 64, offset: 3712)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1057, file: !1058, line: 749, baseType: !1240, offset: 3776)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1058, line: 290, elements: !1035)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1057, file: !1058, line: 751, baseType: !1013, size: 128, offset: 3776)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1057, file: !1058, line: 757, baseType: !1243, size: 64, offset: 3904)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1245, line: 388, size: 7296, elements: !1246)
!1245 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1246 = !{!1247, !5239}
!1247 = !DIDerivedType(tag: DW_TAG_member, scope: !1244, file: !1245, line: 389, baseType: !1248, size: 7296)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1244, file: !1245, line: 389, size: 7296, elements: !1249)
!1249 = !{!1250, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5162, !5168, !5171, !5210, !5211, !5223, !5224, !5227, !5228, !5229, !5232, !5233, !5234, !5237, !5238}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1248, file: !1245, line: 390, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1245, line: 305, size: 1472, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1269, !1270, !1275, !1276, !1279, !5108, !5109, !5110, !5111, !5112}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1252, file: !1245, line: 308, baseType: !994, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1252, file: !1245, line: 309, baseType: !994, size: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1252, file: !1245, line: 313, baseType: !1251, size: 64, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1252, file: !1245, line: 313, baseType: !1251, size: 64, offset: 192)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1252, file: !1245, line: 315, baseType: !1098, size: 192, align: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1252, file: !1245, line: 323, baseType: !994, size: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1252, file: !1245, line: 327, baseType: !1243, size: 64, offset: 512)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1252, file: !1245, line: 333, baseType: !1262, size: 64, offset: 576)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1263, line: 284, baseType: !1264)
!1263 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1263, line: 284, size: 64, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1264, file: !1263, line: 284, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1268, line: 19, baseType: !994)
!1268 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1252, file: !1245, line: 334, baseType: !994, size: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1252, file: !1245, line: 343, baseType: !1271, size: 256, offset: 704)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1252, file: !1245, line: 340, size: 256, elements: !1272)
!1272 = !{!1273, !1274}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1271, file: !1245, line: 341, baseType: !1098, size: 192, align: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1271, file: !1245, line: 342, baseType: !994, size: 64, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1252, file: !1245, line: 351, baseType: !1013, size: 128, offset: 960)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1252, file: !1245, line: 353, baseType: !1277, size: 64, offset: 1088)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1245, line: 353, flags: DIFlagFwdDecl)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1252, file: !1245, line: 356, baseType: !1280, size: 64, offset: 1152)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !135, line: 557, size: 832, elements: !1283)
!1283 = !{!1284, !1288, !1289, !1293, !1297, !5082, !5086, !5090, !5094, !5095, !5096, !5100, !5104}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1282, file: !135, line: 558, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{null, !1251}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1282, file: !135, line: 559, baseType: !1285, size: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1282, file: !135, line: 560, baseType: !1290, size: 64, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!223, !1251, !994}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1282, file: !135, line: 561, baseType: !1294, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!223, !1251}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1282, file: !135, line: 562, baseType: !1298, size: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1245, line: 682, baseType: !7)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !135, line: 508, size: 768, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1309, !1310, !1317, !1324, !1330, !5077, !5078, !5080, !5081}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1303, file: !135, line: 509, baseType: !1251, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1303, file: !135, line: 510, baseType: !7, size: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1303, file: !135, line: 511, baseType: !992, size: 32, offset: 96)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1303, file: !135, line: 512, baseType: !994, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1303, file: !135, line: 513, baseType: !994, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1303, file: !135, line: 514, baseType: !1311, size: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1263, line: 385, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1263, line: 385, size: 64, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1313, file: !1263, line: 385, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1268, line: 15, baseType: !994)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1303, file: !135, line: 516, baseType: !1318, size: 64, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1263, line: 359, baseType: !1320)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1263, line: 359, size: 64, elements: !1321)
!1321 = !{!1322}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1320, file: !1263, line: 359, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1268, line: 16, baseType: !994)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1303, file: !135, line: 519, baseType: !1325, size: 64, offset: 384)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1268, line: 21, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1268, line: 21, size: 64, elements: !1327)
!1327 = !{!1328}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1326, file: !1268, line: 21, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1268, line: 14, baseType: !994)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1303, file: !135, line: 521, baseType: !1331, size: 64, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1245, line: 68, size: 512, align: 128, elements: !1333)
!1333 = !{!1334, !1335, !5069, !5076}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1332, file: !1245, line: 69, baseType: !994, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, scope: !1332, file: !1245, line: 77, baseType: !1336, size: 320, offset: 64)
!1336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1332, file: !1245, line: 77, size: 320, elements: !1337)
!1337 = !{!1338, !4962, !4967, !4993, !5001, !5007, !5020, !5068}
!1338 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1245, line: 78, baseType: !1339, size: 320)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1336, file: !1245, line: 78, size: 320, elements: !1340)
!1340 = !{!1341, !1342, !4960, !4961}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1339, file: !1245, line: 84, baseType: !1013, size: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1339, file: !1245, line: 86, baseType: !1343, size: 64, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !17, line: 451, size: 1216, align: 64, elements: !1345)
!1345 = !{!1346, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4955, !4956, !4957, !4958, !4959}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1344, file: !17, line: 452, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !17, line: 610, size: 4224, elements: !1349)
!1349 = !{!1350, !1352, !1353, !1361, !1368, !1369, !4730, !4731, !4732, !4733, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4773, !4781, !4782, !4783, !4793, !4794, !4795, !4796}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1348, file: !17, line: 611, baseType: !1351, size: 16)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !993, line: 19, baseType: !1001)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1348, file: !17, line: 612, baseType: !1001, size: 16, offset: 16)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1348, file: !17, line: 613, baseType: !1354, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1355, line: 23, baseType: !1356)
!1355 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1355, line: 21, size: 32, elements: !1357)
!1357 = !{!1358}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1356, file: !1355, line: 22, baseType: !1359, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !993, line: 32, baseType: !1360)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1187, line: 49, baseType: !7)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1348, file: !17, line: 614, baseType: !1362, size: 32, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1355, line: 28, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1355, line: 26, size: 32, elements: !1364)
!1364 = !{!1365}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1363, file: !1355, line: 27, baseType: !1366, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !993, line: 33, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1187, line: 50, baseType: !7)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1348, file: !17, line: 615, baseType: !7, size: 32, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1348, file: !17, line: 622, baseType: !1370, size: 64, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !17, line: 1864, size: 1536, align: 512, elements: !1373)
!1373 = !{!1374, !4607, !4617, !4621, !4627, !4631, !4635, !4639, !4643, !4647, !4651, !4652, !4656, !4660, !4680, !4706, !4710, !4716, !4721, !4725, !4726}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1372, file: !17, line: 1865, baseType: !1375, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!1378, !1347, !1378, !7}
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1380, line: 89, size: 1536, elements: !1381)
!1380 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1381 = !{!1382, !1383, !1388, !1396, !1397, !1412, !1413, !1417, !1429, !1503, !4591, !4592, !4593, !4599, !4600, !4601}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1379, file: !1380, line: 91, baseType: !7, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1379, file: !1380, line: 92, baseType: !1384, size: 32, offset: 32)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1190, line: 277, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1190, line: 277, size: 32, elements: !1386)
!1386 = !{!1387}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1385, file: !1190, line: 277, baseType: !1194, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1379, file: !1380, line: 93, baseType: !1389, size: 128, offset: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1390, line: 38, size: 128, elements: !1391)
!1390 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1391 = !{!1392, !1394}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1389, file: !1390, line: 39, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1389, file: !1390, line: 39, baseType: !1395, size: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1379, file: !1380, line: 94, baseType: !1378, size: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1379, file: !1380, line: 95, baseType: !1398, size: 128, offset: 256)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1380, line: 47, size: 128, elements: !1399)
!1399 = !{!1400, !1409}
!1400 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !1380, line: 48, baseType: !1401, size: 64)
!1401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !1380, line: 48, size: 64, elements: !1402)
!1402 = !{!1403, !1408}
!1403 = !DIDerivedType(tag: DW_TAG_member, scope: !1401, file: !1380, line: 49, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1401, file: !1380, line: 49, size: 64, elements: !1405)
!1405 = !{!1406, !1407}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1404, file: !1380, line: 50, baseType: !989, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1404, file: !1380, line: 50, baseType: !989, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1401, file: !1380, line: 52, baseType: !984, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1398, file: !1380, line: 54, baseType: !1410, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1379, file: !1380, line: 96, baseType: !1347, size: 64, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1379, file: !1380, line: 98, baseType: !1414, size: 256, offset: 448)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 256, elements: !1415)
!1415 = !{!1416}
!1416 = !DISubrange(count: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1379, file: !1380, line: 101, baseType: !1418, size: 32, offset: 704)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !1419, line: 25, size: 32, elements: !1420)
!1419 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!1420 = !{!1421}
!1421 = !DIDerivedType(tag: DW_TAG_member, scope: !1418, file: !1419, line: 26, baseType: !1422, size: 32)
!1422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1418, file: !1419, line: 26, size: 32, elements: !1423)
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, scope: !1422, file: !1419, line: 30, baseType: !1425, size: 32)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1422, file: !1419, line: 30, size: 32, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1425, file: !1419, line: 31, baseType: !1021)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1425, file: !1419, line: 32, baseType: !223, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1379, file: !1380, line: 102, baseType: !1430, size: 64, offset: 768)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1380, line: 135, size: 1024, align: 512, elements: !1433)
!1433 = !{!1434, !1438, !1439, !1446, !1455, !1459, !1463, !1467, !1468, !1472, !1477, !1489, !1497}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !1432, file: !1380, line: 136, baseType: !1435, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!223, !1378, !7}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !1432, file: !1380, line: 137, baseType: !1435, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1432, file: !1380, line: 138, baseType: !1440, size: 64, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{!223, !1443, !1445}
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1379)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !1432, file: !1380, line: 139, baseType: !1447, size: 64, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!223, !1443, !7, !1450, !1453}
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1452)
!1452 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !1432, file: !1380, line: 141, baseType: !1456, size: 64, offset: 256)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!223, !1443}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !1432, file: !1380, line: 142, baseType: !1460, size: 64, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!223, !1378}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !1432, file: !1380, line: 143, baseType: !1464, size: 64, offset: 384)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{null, !1378}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !1432, file: !1380, line: 144, baseType: !1464, size: 64, offset: 448)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !1432, file: !1380, line: 145, baseType: !1469, size: 64, offset: 512)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{null, !1378, !1347}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !1432, file: !1380, line: 146, baseType: !1473, size: 64, offset: 576)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!1476, !1378, !1476, !223}
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !1432, file: !1380, line: 147, baseType: !1478, size: 64, offset: 640)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!1481, !1483}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1380, line: 18, flags: DIFlagFwdDecl)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1485, line: 8, size: 128, elements: !1486)
!1485 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1486 = !{!1487, !1488}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1484, file: !1485, line: 9, baseType: !1481, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1484, file: !1485, line: 10, baseType: !1378, size: 64, offset: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !1432, file: !1380, line: 148, baseType: !1490, size: 64, offset: 704)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!223, !1493, !1495}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !993, line: 30, baseType: !1496)
!1496 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !1432, file: !1380, line: 149, baseType: !1498, size: 64, offset: 768)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!1378, !1378, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1348)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1379, file: !1380, line: 103, baseType: !1504, size: 64, offset: 832)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !17, line: 1416, size: 9472, elements: !1506)
!1506 = !{!1507, !1508, !1511, !1512, !1513, !1516, !1568, !2421, !2503, !2586, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2602, !2606, !2607, !4450, !4451, !4454, !4455, !4456, !4497, !4523, !4524, !4525, !4526, !4527, !4528, !4531, !4532, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1505, file: !17, line: 1417, baseType: !1013, size: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1505, file: !17, line: 1418, baseType: !1509, size: 32, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !993, line: 16, baseType: !1510)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !993, line: 13, baseType: !989)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1505, file: !17, line: 1419, baseType: !1218, size: 8, offset: 160)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1505, file: !17, line: 1420, baseType: !994, size: 64, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1505, file: !17, line: 1421, baseType: !1514, size: 64, offset: 256)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !993, line: 46, baseType: !1515)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1187, line: 88, baseType: !1051)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1505, file: !17, line: 1422, baseType: !1517, size: 64, offset: 320)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !17, line: 2228, size: 576, elements: !1519)
!1519 = !{!1520, !1521, !1522, !1529, !1533, !1537, !1541, !1545, !1546, !1556, !1559, !1560, !1561, !1565, !1566, !1567}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1518, file: !17, line: 2229, baseType: !1450, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1518, file: !17, line: 2230, baseType: !223, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1518, file: !17, line: 2238, baseType: !1523, size: 64, offset: 128)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!223, !1526}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1528, line: 28, flags: DIFlagFwdDecl)
!1528 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1518, file: !17, line: 2239, baseType: !1530, size: 64, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !17, line: 70, flags: DIFlagFwdDecl)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1518, file: !17, line: 2240, baseType: !1534, size: 64, offset: 256)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!1378, !1517, !223, !1450, !991}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1518, file: !17, line: 2242, baseType: !1538, size: 64, offset: 320)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{null, !1504}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1518, file: !17, line: 2243, baseType: !1542, size: 64, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1544, line: 76, flags: DIFlagFwdDecl)
!1544 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1518, file: !17, line: 2244, baseType: !1517, size: 64, offset: 448)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1518, file: !17, line: 2245, baseType: !1547, size: 64, offset: 512)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !993, line: 182, size: 64, elements: !1548)
!1548 = !{!1549}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1547, file: !993, line: 183, baseType: !1550, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !993, line: 186, size: 128, elements: !1552)
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1551, file: !993, line: 187, baseType: !1550, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1551, file: !993, line: 187, baseType: !1555, size: 64, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1518, file: !17, line: 2247, baseType: !1557, offset: 576)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1558, line: 187, elements: !1035)
!1558 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1518, file: !17, line: 2248, baseType: !1557, offset: 576)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1518, file: !17, line: 2249, baseType: !1557, offset: 576)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1518, file: !17, line: 2250, baseType: !1562, offset: 576)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1557, elements: !1563)
!1563 = !{!1564}
!1564 = !DISubrange(count: 3)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1518, file: !17, line: 2252, baseType: !1557, offset: 576)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1518, file: !17, line: 2253, baseType: !1557, offset: 576)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1518, file: !17, line: 2254, baseType: !1557, offset: 576)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1505, file: !17, line: 1423, baseType: !1569, size: 64, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !17, line: 1935, size: 1472, elements: !1572)
!1572 = !{!1573, !1577, !1581, !1582, !1586, !1606, !1610, !1611, !1612, !1616, !1620, !1621, !1622, !1623, !1629, !1634, !1635, !2398, !2399, !2400, !2401, !2405, !2420}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1571, file: !17, line: 1936, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!1347, !1504}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1571, file: !17, line: 1937, baseType: !1578, size: 64, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{null, !1347}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1571, file: !17, line: 1938, baseType: !1578, size: 64, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1571, file: !17, line: 1940, baseType: !1583, size: 64, offset: 192)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !1347, !223}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1571, file: !17, line: 1941, baseType: !1587, size: 64, offset: 256)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!223, !1347, !1590}
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !12, line: 51, size: 320, elements: !1592)
!1592 = !{!1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1591, file: !12, line: 52, baseType: !931, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1591, file: !12, line: 54, baseType: !931, size: 64, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1591, file: !12, line: 61, baseType: !1514, size: 64, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1591, file: !12, line: 62, baseType: !1514, size: 64, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1591, file: !12, line: 64, baseType: !11, size: 32, offset: 256)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1591, file: !12, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1591, file: !12, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1591, file: !12, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1591, file: !12, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1591, file: !12, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1591, file: !12, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1591, file: !12, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1591, file: !12, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1571, file: !17, line: 1942, baseType: !1607, size: 64, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!223, !1347}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1571, file: !17, line: 1943, baseType: !1578, size: 64, offset: 384)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1571, file: !17, line: 1944, baseType: !1538, size: 64, offset: 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1571, file: !17, line: 1945, baseType: !1613, size: 64, offset: 512)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!223, !1504, !223}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1571, file: !17, line: 1946, baseType: !1617, size: 64, offset: 576)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!223, !1504}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1571, file: !17, line: 1947, baseType: !1617, size: 64, offset: 640)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1571, file: !17, line: 1948, baseType: !1617, size: 64, offset: 704)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1571, file: !17, line: 1949, baseType: !1617, size: 64, offset: 768)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1571, file: !17, line: 1950, baseType: !1624, size: 64, offset: 832)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!223, !1378, !1627}
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !17, line: 57, flags: DIFlagFwdDecl)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1571, file: !17, line: 1951, baseType: !1630, size: 64, offset: 896)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!223, !1504, !1633, !1476}
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1571, file: !17, line: 1952, baseType: !1538, size: 64, offset: 960)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1571, file: !17, line: 1954, baseType: !1636, size: 64, offset: 1024)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!223, !1639, !1378}
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1641, line: 16, size: 896, elements: !1642)
!1641 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1642 = !{!1643, !1644, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1676, !1677, !2397}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1640, file: !1641, line: 17, baseType: !1476, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1640, file: !1641, line: 18, baseType: !1645, size: 64, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !993, line: 55, baseType: !1646)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1187, line: 72, baseType: !1647)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1187, line: 16, baseType: !994)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1640, file: !1641, line: 19, baseType: !1645, size: 64, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1640, file: !1641, line: 20, baseType: !1645, size: 64, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1640, file: !1641, line: 21, baseType: !1645, size: 64, offset: 256)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1640, file: !1641, line: 22, baseType: !1514, size: 64, offset: 320)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1640, file: !1641, line: 23, baseType: !1514, size: 64, offset: 384)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1640, file: !1641, line: 24, baseType: !1039, size: 192, offset: 448)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1640, file: !1641, line: 25, baseType: !1655, size: 64, offset: 640)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1641, line: 31, size: 256, elements: !1658)
!1658 = !{!1659, !1664, !1668, !1672}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1657, file: !1641, line: 32, baseType: !1660, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!991, !1639, !1663}
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1657, file: !1641, line: 33, baseType: !1665, size: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{null, !1639, !991}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1657, file: !1641, line: 34, baseType: !1669, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{!991, !1639, !991, !1663}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1657, file: !1641, line: 35, baseType: !1673, size: 64, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!223, !1639, !991}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1640, file: !1641, line: 26, baseType: !223, size: 32, offset: 704)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1640, file: !1641, line: 27, baseType: !1678, size: 64, offset: 768)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !17, line: 916, size: 1856, align: 32, elements: !1681)
!1681 = !{!1682, !1700, !1701, !1702, !1982, !1983, !1984, !1985, !1986, !1988, !1989, !1990, !2020, !2379, !2388, !2389, !2390, !2391, !2392, !2393, !2396}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1680, file: !17, line: 920, baseType: !1683, size: 128)
!1683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1680, file: !17, line: 917, size: 128, elements: !1684)
!1684 = !{!1685, !1691}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1683, file: !17, line: 918, baseType: !1686, size: 64)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1687, line: 58, size: 64, elements: !1688)
!1687 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1688 = !{!1689}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1686, file: !1687, line: 59, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1683, file: !17, line: 919, baseType: !1692, size: 128, align: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !993, line: 216, size: 128, align: 64, elements: !1693)
!1693 = !{!1694, !1696}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1692, file: !993, line: 217, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1692, file: !993, line: 218, baseType: !1697, size: 64, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{null, !1695}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1680, file: !17, line: 921, baseType: !1484, size: 128, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1680, file: !17, line: 922, baseType: !1347, size: 64, offset: 256)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1680, file: !17, line: 923, baseType: !1703, size: 64, offset: 320)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !17, line: 1822, size: 2048, elements: !1706)
!1706 = !{!1707, !1708, !1713, !1720, !1724, !1769, !1770, !1774, !1787, !1788, !1795, !1799, !1800, !1804, !1805, !1809, !1814, !1815, !1819, !1823, !1937, !1941, !1945, !1949, !1950, !1956, !1960, !1965, !1969, !1973, !1977, !1981}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1705, file: !17, line: 1823, baseType: !1542, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1705, file: !17, line: 1824, baseType: !1709, size: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!1514, !1712, !1514, !223}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1705, file: !17, line: 1825, baseType: !1714, size: 64, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!1717, !1712, !1476, !1645, !1663}
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !993, line: 60, baseType: !1718)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1187, line: 73, baseType: !1719)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1187, line: 15, baseType: !931)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1705, file: !17, line: 1826, baseType: !1721, size: 64, offset: 192)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!1717, !1712, !1450, !1645, !1663}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1705, file: !17, line: 1827, baseType: !1725, size: 64, offset: 256)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!1717, !1728, !1767}
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !17, line: 320, size: 384, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1737, !1738, !1739, !1741, !1742}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1729, file: !17, line: 321, baseType: !1712, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1729, file: !17, line: 326, baseType: !1514, size: 64, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1729, file: !17, line: 327, baseType: !1734, size: 64, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{null, !1728, !931, !931}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1729, file: !17, line: 328, baseType: !991, size: 64, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1729, file: !17, line: 329, baseType: !223, size: 32, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1729, file: !17, line: 330, baseType: !1740, size: 16, offset: 288)
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !985, line: 19, baseType: !1000)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1729, file: !17, line: 331, baseType: !1740, size: 16, offset: 304)
!1742 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !17, line: 332, baseType: !1743, size: 64, offset: 320)
!1743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1729, file: !17, line: 332, size: 64, elements: !1744)
!1744 = !{!1745, !1746}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1743, file: !17, line: 333, baseType: !7, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1743, file: !17, line: 334, baseType: !1747, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1749, line: 569, size: 448, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1748, file: !1749, line: 570, baseType: !1331, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1748, file: !1749, line: 571, baseType: !223, size: 32, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1748, file: !1749, line: 572, baseType: !1754, size: 320, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1755, line: 14, baseType: !1756)
!1755 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1755, line: 29, size: 320, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1766}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1756, file: !1755, line: 30, baseType: !7, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1756, file: !1755, line: 31, baseType: !991, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1756, file: !1755, line: 32, baseType: !1761, size: 64, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1755, line: 16, baseType: !1762)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{!223, !1765, !7, !223, !991}
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1756, file: !1755, line: 33, baseType: !1013, size: 128, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !17, line: 64, flags: DIFlagFwdDecl)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1705, file: !17, line: 1828, baseType: !1725, size: 64, offset: 320)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1705, file: !17, line: 1829, baseType: !1771, size: 64, offset: 384)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!223, !1728, !1495}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1705, file: !17, line: 1830, baseType: !1775, size: 64, offset: 448)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!223, !1712, !1778}
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !17, line: 1776, size: 128, elements: !1780)
!1780 = !{!1781, !1786}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1779, file: !17, line: 1777, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !17, line: 1773, baseType: !1783)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!223, !1778, !1450, !223, !1514, !984, !7}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1779, file: !17, line: 1778, baseType: !1514, size: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1705, file: !17, line: 1831, baseType: !1775, size: 64, offset: 512)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1705, file: !17, line: 1832, baseType: !1789, size: 64, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!1792, !1712, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !999, line: 52, baseType: !7)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1528, line: 27, flags: DIFlagFwdDecl)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1705, file: !17, line: 1833, baseType: !1796, size: 64, offset: 640)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!931, !1712, !7, !994}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1705, file: !17, line: 1834, baseType: !1796, size: 64, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1705, file: !17, line: 1835, baseType: !1801, size: 64, offset: 768)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!223, !1712, !1251}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1705, file: !17, line: 1836, baseType: !994, size: 64, offset: 832)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1705, file: !17, line: 1837, baseType: !1806, size: 64, offset: 896)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!223, !1347, !1712}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1705, file: !17, line: 1838, baseType: !1810, size: 64, offset: 960)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!223, !1712, !1813}
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !17, line: 1007, baseType: !991)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1705, file: !17, line: 1839, baseType: !1806, size: 64, offset: 1024)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1705, file: !17, line: 1840, baseType: !1816, size: 64, offset: 1088)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!223, !1712, !1514, !1514, !223}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1705, file: !17, line: 1841, baseType: !1820, size: 64, offset: 1152)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!223, !223, !1712, !223}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1705, file: !17, line: 1842, baseType: !1824, size: 64, offset: 1216)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!223, !1712, !223, !1827}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !17, line: 1062, size: 1664, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1846, !1847, !1848, !1849, !1866, !1867, !1868, !1881, !1913}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1828, file: !17, line: 1063, baseType: !1827, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1828, file: !17, line: 1064, baseType: !1013, size: 128, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1828, file: !17, line: 1065, baseType: !1551, size: 128, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1828, file: !17, line: 1066, baseType: !1013, size: 128, offset: 320)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1828, file: !17, line: 1069, baseType: !1013, size: 128, offset: 448)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1828, file: !17, line: 1072, baseType: !1813, size: 64, offset: 576)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1828, file: !17, line: 1073, baseType: !7, size: 32, offset: 640)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1828, file: !17, line: 1074, baseType: !1218, size: 8, offset: 672)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1828, file: !17, line: 1075, baseType: !7, size: 32, offset: 704)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1828, file: !17, line: 1076, baseType: !223, size: 32, offset: 736)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1828, file: !17, line: 1077, baseType: !1841, size: 128, offset: 768)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1755, line: 40, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1755, line: 36, size: 128, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1842, file: !1755, line: 37, baseType: !1021)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1842, file: !1755, line: 38, baseType: !1013, size: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1828, file: !17, line: 1078, baseType: !1712, size: 64, offset: 896)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1828, file: !17, line: 1079, baseType: !1514, size: 64, offset: 960)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1828, file: !17, line: 1080, baseType: !1514, size: 64, offset: 1024)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1828, file: !17, line: 1082, baseType: !1850, size: 64, offset: 1088)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !17, line: 1314, size: 320, elements: !1852)
!1852 = !{!1853, !1861, !1862, !1863, !1864, !1865}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1851, file: !17, line: 1315, baseType: !1854)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1855, line: 20, baseType: !1856)
!1855 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1855, line: 11, elements: !1857)
!1857 = !{!1858}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1856, file: !1855, line: 12, baseType: !1859)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1033, line: 33, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1033, line: 31, elements: !1035)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1851, file: !17, line: 1316, baseType: !223, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1851, file: !17, line: 1317, baseType: !223, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1851, file: !17, line: 1318, baseType: !1850, size: 64, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1851, file: !17, line: 1319, baseType: !1712, size: 64, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1851, file: !17, line: 1320, baseType: !1692, size: 128, align: 64, offset: 192)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1828, file: !17, line: 1084, baseType: !994, size: 64, offset: 1152)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1828, file: !17, line: 1085, baseType: !994, size: 64, offset: 1216)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1828, file: !17, line: 1087, baseType: !1869, size: 64, offset: 1280)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !17, line: 1011, size: 128, elements: !1872)
!1872 = !{!1873, !1877}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1871, file: !17, line: 1012, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !1827, !1827}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1871, file: !17, line: 1013, baseType: !1878, size: 64, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{null, !1827}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1828, file: !17, line: 1088, baseType: !1882, size: 64, offset: 1344)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !17, line: 1016, size: 512, elements: !1885)
!1885 = !{!1886, !1890, !1894, !1895, !1899, !1903, !1907, !1912}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1884, file: !17, line: 1017, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!1813, !1813}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1884, file: !17, line: 1018, baseType: !1891, size: 64, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{null, !1813}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1884, file: !17, line: 1019, baseType: !1878, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1884, file: !17, line: 1020, baseType: !1896, size: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!223, !1827, !223}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1884, file: !17, line: 1021, baseType: !1900, size: 64, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!1495, !1827}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1884, file: !17, line: 1022, baseType: !1904, size: 64, offset: 320)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!223, !1827, !223, !1016}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1884, file: !17, line: 1023, baseType: !1908, size: 64, offset: 384)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{null, !1827, !1911}
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1884, file: !17, line: 1024, baseType: !1900, size: 64, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1828, file: !17, line: 1097, baseType: !1914, size: 256, offset: 1408)
!1914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1828, file: !17, line: 1089, size: 256, elements: !1915)
!1915 = !{!1916, !1925, !1931}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1914, file: !17, line: 1090, baseType: !1917, size: 256)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1918, line: 10, size: 256, elements: !1919)
!1918 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1919 = !{!1920, !1921, !1924}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1917, file: !1918, line: 11, baseType: !989, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1917, file: !1918, line: 12, baseType: !1922, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1918, line: 5, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1917, file: !1918, line: 13, baseType: !1013, size: 128, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1914, file: !17, line: 1091, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1918, line: 17, size: 64, elements: !1927)
!1927 = !{!1928}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1926, file: !1918, line: 18, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1918, line: 16, flags: DIFlagFwdDecl)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1914, file: !17, line: 1096, baseType: !1932, size: 192)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1914, file: !17, line: 1092, size: 192, elements: !1933)
!1933 = !{!1934, !1935, !1936}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1932, file: !17, line: 1093, baseType: !1013, size: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1932, file: !17, line: 1094, baseType: !223, size: 32, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1932, file: !17, line: 1095, baseType: !7, size: 32, offset: 160)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1705, file: !17, line: 1843, baseType: !1938, size: 64, offset: 1280)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!1717, !1712, !1331, !223, !1645, !1663, !223}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1705, file: !17, line: 1844, baseType: !1942, size: 64, offset: 1344)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!994, !1712, !994, !994, !994, !994}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1705, file: !17, line: 1845, baseType: !1946, size: 64, offset: 1408)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!223, !223}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1705, file: !17, line: 1846, baseType: !1824, size: 64, offset: 1472)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1705, file: !17, line: 1847, baseType: !1951, size: 64, offset: 1536)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!1717, !1954, !1712, !1663, !1645, !7}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1058, line: 53, flags: DIFlagFwdDecl)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1705, file: !17, line: 1848, baseType: !1957, size: 64, offset: 1600)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!1717, !1712, !1663, !1954, !1645, !7}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1705, file: !17, line: 1849, baseType: !1961, size: 64, offset: 1664)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!223, !1712, !931, !1964, !1911}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1705, file: !17, line: 1850, baseType: !1966, size: 64, offset: 1728)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DISubroutineType(types: !1968)
!1968 = !{!931, !1712, !223, !1514, !1514}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1705, file: !17, line: 1852, baseType: !1970, size: 64, offset: 1792)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !1639, !1712}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1705, file: !17, line: 1856, baseType: !1974, size: 64, offset: 1856)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!1717, !1712, !1514, !1712, !1514, !1645, !7}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1705, file: !17, line: 1858, baseType: !1978, size: 64, offset: 1920)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!1514, !1712, !1514, !1712, !1514, !1514, !7}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1705, file: !17, line: 1861, baseType: !1816, size: 64, offset: 1984)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1680, file: !17, line: 929, baseType: !1021, offset: 384)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1680, file: !17, line: 930, baseType: !16, size: 32, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1680, file: !17, line: 931, baseType: !1043, size: 64, offset: 448)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1680, file: !17, line: 932, baseType: !7, size: 32, offset: 512)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1680, file: !17, line: 933, baseType: !1987, size: 32, offset: 544)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !993, line: 150, baseType: !7)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1680, file: !17, line: 934, baseType: !1039, size: 192, offset: 576)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1680, file: !17, line: 935, baseType: !1514, size: 64, offset: 768)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1680, file: !17, line: 936, baseType: !1991, size: 192, offset: 832)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !17, line: 885, size: 192, elements: !1992)
!1992 = !{!1993, !1994, !2016, !2017, !2018, !2019}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1991, file: !17, line: 886, baseType: !1854)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1991, file: !17, line: 887, baseType: !1995, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !26, line: 59, size: 768, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2005, !2006, !2007, !2008}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1996, file: !26, line: 61, baseType: !1070, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1996, file: !26, line: 62, baseType: !7, size: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1996, file: !26, line: 63, baseType: !1021, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1996, file: !26, line: 65, baseType: !2002, size: 256, offset: 64)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1547, size: 256, elements: !2003)
!2003 = !{!2004}
!2004 = !DISubrange(count: 4)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1996, file: !26, line: 66, baseType: !1547, size: 64, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1996, file: !26, line: 68, baseType: !1841, size: 128, offset: 384)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1996, file: !26, line: 69, baseType: !1692, size: 128, align: 64, offset: 512)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1996, file: !26, line: 70, baseType: !2009, size: 128, offset: 640)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2010, size: 128, elements: !1236)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !26, line: 54, size: 128, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2010, file: !26, line: 55, baseType: !223, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2010, file: !26, line: 56, baseType: !2014, size: 64, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !26, line: 56, flags: DIFlagFwdDecl)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1991, file: !17, line: 888, baseType: !25, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1991, file: !17, line: 889, baseType: !1354, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1991, file: !17, line: 889, baseType: !1354, size: 32, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1991, file: !17, line: 890, baseType: !223, size: 32, offset: 160)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1680, file: !17, line: 937, baseType: !2021, size: 64, offset: 1024)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2024, line: 111, size: 1280, elements: !2025)
!2024 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2045, !2046, !2047, !2048, !2049, !2050, !2169, !2170, !2171, !2172, !2198, !2364, !2374}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2023, file: !2024, line: 112, baseType: !1074, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2023, file: !2024, line: 120, baseType: !1354, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2023, file: !2024, line: 121, baseType: !1362, size: 32, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2023, file: !2024, line: 122, baseType: !1354, size: 32, offset: 96)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2023, file: !2024, line: 123, baseType: !1362, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2023, file: !2024, line: 124, baseType: !1354, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2023, file: !2024, line: 125, baseType: !1362, size: 32, offset: 192)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2023, file: !2024, line: 126, baseType: !1354, size: 32, offset: 224)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2023, file: !2024, line: 127, baseType: !1362, size: 32, offset: 256)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2023, file: !2024, line: 128, baseType: !7, size: 32, offset: 288)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2023, file: !2024, line: 129, baseType: !2037, size: 64, offset: 320)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2038, line: 26, baseType: !2039)
!2038 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2038, line: 24, size: 64, elements: !2040)
!2040 = !{!2041}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2039, file: !2038, line: 25, baseType: !2042, size: 64)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !990, size: 64, elements: !2043)
!2043 = !{!2044}
!2044 = !DISubrange(count: 2)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2023, file: !2024, line: 130, baseType: !2037, size: 64, offset: 384)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2023, file: !2024, line: 131, baseType: !2037, size: 64, offset: 448)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2023, file: !2024, line: 132, baseType: !2037, size: 64, offset: 512)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2023, file: !2024, line: 133, baseType: !2037, size: 64, offset: 576)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2023, file: !2024, line: 135, baseType: !1218, size: 8, offset: 640)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2023, file: !2024, line: 137, baseType: !2051, size: 64, offset: 704)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2053, line: 189, size: 1664, elements: !2054)
!2053 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2054 = !{!2055, !2056, !2061, !2066, !2074, !2077, !2078, !2085, !2086, !2087, !2088, !2091, !2092, !2093, !2094, !2095, !2133, !2154}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2052, file: !2053, line: 190, baseType: !1070, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2052, file: !2053, line: 191, baseType: !2057, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2053, line: 28, baseType: !2058)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !993, line: 98, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !985, line: 20, baseType: !2060)
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !987, line: 26, baseType: !223)
!2061 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !2053, line: 192, baseType: !2062, size: 192, offset: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !2053, line: 192, size: 192, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2062, file: !2053, line: 193, baseType: !1013, size: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2062, file: !2053, line: 194, baseType: !1098, size: 192, align: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2052, file: !2053, line: 199, baseType: !2067, size: 256, offset: 256)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !2068, line: 35, size: 256, elements: !2069)
!2068 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2069 = !{!2070, !2071, !2072, !2073}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2067, file: !2068, line: 36, baseType: !1043, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2067, file: !2068, line: 42, baseType: !1043, size: 64, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !2067, file: !2068, line: 46, baseType: !1167, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !2067, file: !2068, line: 47, baseType: !1013, size: 128, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2052, file: !2053, line: 200, baseType: !2075, size: 64, offset: 512)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2053, line: 200, flags: DIFlagFwdDecl)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2052, file: !2053, line: 201, baseType: !991, size: 64, offset: 576)
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !2053, line: 202, baseType: !2079, size: 64, offset: 640)
!2079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !2053, line: 202, size: 64, elements: !2080)
!2080 = !{!2081, !2084}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2079, file: !2053, line: 203, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !2083, line: 8, baseType: !1050)
!2083 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2079, file: !2053, line: 204, baseType: !2082, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2052, file: !2053, line: 206, baseType: !2082, size: 64, offset: 704)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2052, file: !2053, line: 207, baseType: !1354, size: 32, offset: 768)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2052, file: !2053, line: 208, baseType: !1362, size: 32, offset: 800)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2052, file: !2053, line: 209, baseType: !2089, size: 32, offset: 832)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2053, line: 31, baseType: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !993, line: 104, baseType: !989)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2052, file: !2053, line: 210, baseType: !1001, size: 16, offset: 864)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2052, file: !2053, line: 211, baseType: !1001, size: 16, offset: 880)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2052, file: !2053, line: 215, baseType: !1004, size: 16, offset: 896)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2052, file: !2053, line: 222, baseType: !994, size: 64, offset: 960)
!2095 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !2053, line: 239, baseType: !2096, size: 320, offset: 1024)
!2096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !2053, line: 239, size: 320, elements: !2097)
!2097 = !{!2098, !2125}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2096, file: !2053, line: 240, baseType: !2099, size: 320)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2053, line: 108, size: 320, elements: !2100)
!2100 = !{!2101, !2102, !2114, !2117, !2124}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2099, file: !2053, line: 110, baseType: !994, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, scope: !2099, file: !2053, line: 111, baseType: !2103, size: 64, offset: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2099, file: !2053, line: 111, size: 64, elements: !2104)
!2104 = !{!2105, !2113}
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2103, file: !2053, line: 112, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2103, file: !2053, line: 112, size: 64, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2106, file: !2053, line: 114, baseType: !1740, size: 16)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2106, file: !2053, line: 115, baseType: !2110, size: 48, offset: 16)
!2110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 48, elements: !2111)
!2111 = !{!2112}
!2112 = !DISubrange(count: 6)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2103, file: !2053, line: 121, baseType: !994, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2099, file: !2053, line: 123, baseType: !2115, size: 64, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2053, line: 96, flags: DIFlagFwdDecl)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2099, file: !2053, line: 124, baseType: !2118, size: 64, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2053, line: 102, size: 192, elements: !2120)
!2120 = !{!2121, !2122, !2123}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2119, file: !2053, line: 103, baseType: !1692, size: 128, align: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2119, file: !2053, line: 104, baseType: !1070, size: 32, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2119, file: !2053, line: 105, baseType: !1495, size: 8, offset: 160)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2099, file: !2053, line: 125, baseType: !1450, size: 64, offset: 256)
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !2053, line: 241, baseType: !2126, size: 320)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2053, line: 241, size: 320, elements: !2127)
!2127 = !{!2128, !2129, !2130, !2131, !2132}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2126, file: !2053, line: 242, baseType: !994, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2126, file: !2053, line: 243, baseType: !994, size: 64, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2126, file: !2053, line: 244, baseType: !2115, size: 64, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2126, file: !2053, line: 245, baseType: !2118, size: 64, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2126, file: !2053, line: 246, baseType: !1476, size: 64, offset: 256)
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !2053, line: 254, baseType: !2134, size: 256, offset: 1344)
!2134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !2053, line: 254, size: 256, elements: !2135)
!2135 = !{!2136, !2142}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2134, file: !2053, line: 255, baseType: !2137, size: 256)
!2137 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2053, line: 128, size: 256, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2137, file: !2053, line: 129, baseType: !991, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2137, file: !2053, line: 130, baseType: !2141, size: 256)
!2141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 256, elements: !2003)
!2142 = !DIDerivedType(tag: DW_TAG_member, scope: !2134, file: !2053, line: 256, baseType: !2143, size: 256)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2134, file: !2053, line: 256, size: 256, elements: !2144)
!2144 = !{!2145, !2146}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2143, file: !2053, line: 258, baseType: !1013, size: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2143, file: !2053, line: 259, baseType: !2147, size: 128, offset: 128)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2148, line: 22, size: 128, elements: !2149)
!2148 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2149 = !{!2150, !2153}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2147, file: !2148, line: 23, baseType: !2151, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2148, line: 23, flags: DIFlagFwdDecl)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2147, file: !2148, line: 24, baseType: !994, size: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2052, file: !2053, line: 274, baseType: !2155, size: 64, offset: 1600)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2053, line: 170, size: 192, elements: !2157)
!2157 = !{!2158, !2167, !2168}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2156, file: !2053, line: 171, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2053, line: 165, baseType: !2160)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{!223, !2051, !2163, !2165, !2051}
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2116)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2137)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2156, file: !2053, line: 172, baseType: !2051, size: 64, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2156, file: !2053, line: 173, baseType: !2115, size: 64, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2023, file: !2024, line: 138, baseType: !2051, size: 64, offset: 768)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2023, file: !2024, line: 139, baseType: !2051, size: 64, offset: 832)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2023, file: !2024, line: 140, baseType: !2051, size: 64, offset: 896)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2023, file: !2024, line: 145, baseType: !2173, size: 64, offset: 960)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2175, line: 13, size: 896, elements: !2176)
!2175 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2176 = !{!2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2174, file: !2175, line: 14, baseType: !1070, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2174, file: !2175, line: 15, baseType: !1074, size: 32, offset: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2174, file: !2175, line: 16, baseType: !1074, size: 32, offset: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2174, file: !2175, line: 21, baseType: !1043, size: 64, offset: 128)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2174, file: !2175, line: 27, baseType: !994, size: 64, offset: 192)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2174, file: !2175, line: 28, baseType: !994, size: 64, offset: 256)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2174, file: !2175, line: 29, baseType: !1043, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2174, file: !2175, line: 32, baseType: !1551, size: 128, offset: 384)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2174, file: !2175, line: 33, baseType: !1354, size: 32, offset: 512)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2174, file: !2175, line: 37, baseType: !1043, size: 64, offset: 576)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2174, file: !2175, line: 44, baseType: !2188, size: 256, offset: 640)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2189, line: 15, size: 256, elements: !2190)
!2189 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2196, !2197}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2188, file: !2189, line: 16, baseType: !1167)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2188, file: !2189, line: 18, baseType: !223, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2188, file: !2189, line: 19, baseType: !223, size: 32, offset: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2188, file: !2189, line: 20, baseType: !223, size: 32, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2188, file: !2189, line: 21, baseType: !223, size: 32, offset: 96)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2188, file: !2189, line: 22, baseType: !994, size: 64, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2188, file: !2189, line: 23, baseType: !994, size: 64, offset: 192)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2023, file: !2024, line: 146, baseType: !2199, size: 64, offset: 1024)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2201, line: 56, size: 4160, elements: !2202)
!2201 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2202 = !{!2203, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2242, !2243, !2244, !2245, !2246, !2257, !2349, !2350, !2362}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2200, file: !2201, line: 57, baseType: !2204, size: 576)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2201, line: 23, size: 576, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2204, file: !2201, line: 24, baseType: !989, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !2201, line: 25, baseType: !2208, size: 512, offset: 64)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !2201, line: 25, size: 512, elements: !2209)
!2209 = !{!2210, !2219}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2208, file: !2201, line: 26, baseType: !2211, size: 480)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 480, elements: !2217)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2201, line: 17, size: 96, elements: !2213)
!2213 = !{!2214, !2215, !2216}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2212, file: !2201, line: 18, baseType: !989, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2212, file: !2201, line: 19, baseType: !989, size: 32, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2212, file: !2201, line: 20, baseType: !989, size: 32, offset: 64)
!2217 = !{!2218}
!2218 = !DISubrange(count: 5)
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2208, file: !2201, line: 27, baseType: !2220, size: 128)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2201, line: 27, size: 128, elements: !2221)
!2221 = !{!2222, !2224}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2220, file: !2201, line: 28, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2220, file: !2201, line: 29, baseType: !2223, size: 64, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2200, file: !2201, line: 58, baseType: !2204, size: 576, offset: 576)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2200, file: !2201, line: 59, baseType: !2204, size: 576, offset: 1152)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2200, file: !2201, line: 60, baseType: !1074, size: 32, offset: 1728)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2200, file: !2201, line: 61, baseType: !2199, size: 64, offset: 1792)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2200, file: !2201, line: 62, baseType: !223, size: 32, offset: 1856)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2200, file: !2201, line: 63, baseType: !1354, size: 32, offset: 1888)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2200, file: !2201, line: 64, baseType: !1362, size: 32, offset: 1920)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2200, file: !2201, line: 65, baseType: !2233, size: 192, offset: 1984)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2234, line: 7, size: 192, elements: !2235)
!2234 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2235 = !{!2236, !2237, !2241}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2233, file: !2234, line: 8, baseType: !1043, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2233, file: !2234, line: 9, baseType: !2238, size: 64, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2240)
!2240 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2234, line: 5, flags: DIFlagFwdDecl)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2233, file: !2234, line: 10, baseType: !7, size: 32, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2200, file: !2201, line: 66, baseType: !994, size: 64, offset: 2176)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2200, file: !2201, line: 74, baseType: !1013, size: 128, offset: 2240)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2200, file: !2201, line: 75, baseType: !2051, size: 64, offset: 2368)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2200, file: !2201, line: 76, baseType: !2067, size: 256, offset: 2432)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2200, file: !2201, line: 83, baseType: !2247, size: 256, offset: 2688)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !930, line: 102, size: 256, elements: !2248)
!2248 = !{!2249, !2250, !2251}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2247, file: !930, line: 103, baseType: !1043, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2247, file: !930, line: 104, baseType: !1013, size: 128, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2247, file: !930, line: 105, baseType: !2252, size: 64, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !930, line: 21, baseType: !2253)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{null, !2256}
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2200, file: !2201, line: 85, baseType: !2258, size: 768, offset: 2944)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2259, line: 156, size: 768, elements: !2260)
!2259 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2260 = !{!2261, !2266}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2258, file: !2259, line: 157, baseType: !2262, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!223, !2265}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2258, file: !2259, line: 158, baseType: !2267, size: 704, offset: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2259, line: 150, size: 704, elements: !2268)
!2268 = !{!2269, !2348}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2267, file: !2259, line: 152, baseType: !2270, size: 640)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2259, line: 131, size: 640, elements: !2271)
!2271 = !{!2272, !2305, !2317, !2318, !2338, !2339, !2341, !2347}
!2272 = !DIDerivedType(tag: DW_TAG_member, scope: !2270, file: !2259, line: 132, baseType: !2273, size: 192)
!2273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2270, file: !2259, line: 132, size: 192, elements: !2274)
!2274 = !{!2275, !2304}
!2275 = !DIDerivedType(tag: DW_TAG_member, scope: !2273, file: !2259, line: 133, baseType: !2276, size: 192)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2273, file: !2259, line: 133, size: 192, elements: !2277)
!2277 = !{!2278, !2301, !2302, !2303}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2276, file: !2259, line: 134, baseType: !2279, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2259, line: 112, size: 512, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2293, !2299, !2300}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2280, file: !2259, line: 113, baseType: !1450, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2280, file: !2259, line: 114, baseType: !991, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2280, file: !2259, line: 115, baseType: !223, size: 32, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2280, file: !2259, line: 116, baseType: !1351, size: 16, offset: 160)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2280, file: !2259, line: 117, baseType: !2279, size: 64, offset: 192)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2280, file: !2259, line: 118, baseType: !2288, size: 64, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2259, line: 47, baseType: !2290)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!223, !2279, !223, !991, !2292, !1663}
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2280, file: !2259, line: 119, baseType: !2294, size: 64, offset: 320)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2259, line: 94, size: 192, elements: !2296)
!2296 = !{!2297, !2298}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2295, file: !2259, line: 95, baseType: !1074, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2295, file: !2259, line: 96, baseType: !1841, size: 128, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2280, file: !2259, line: 120, baseType: !991, size: 64, offset: 384)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2280, file: !2259, line: 121, baseType: !991, size: 64, offset: 448)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2276, file: !2259, line: 135, baseType: !223, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2276, file: !2259, line: 136, baseType: !223, size: 32, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2276, file: !2259, line: 137, baseType: !223, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2273, file: !2259, line: 139, baseType: !1692, size: 128, align: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2270, file: !2259, line: 141, baseType: !2306, size: 64, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2308, line: 26, size: 192, elements: !2309)
!2308 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2307, file: !2308, line: 27, baseType: !7, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2307, file: !2308, line: 28, baseType: !2312, size: 128, offset: 64)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2313, line: 43, size: 128, elements: !2314)
!2313 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2314 = !{!2315, !2316}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2312, file: !2313, line: 44, baseType: !1167)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2312, file: !2313, line: 45, baseType: !1013, size: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2270, file: !2259, line: 142, baseType: !2279, size: 64, offset: 256)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2270, file: !2259, line: 143, baseType: !2319, size: 64, offset: 320)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2259, line: 161, size: 960, elements: !2321)
!2321 = !{!2322, !2323, !2327, !2334}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2320, file: !2259, line: 162, baseType: !2258, size: 768)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2320, file: !2259, line: 163, baseType: !2324, size: 64, offset: 768)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!2265, !2319}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2320, file: !2259, line: 164, baseType: !2328, size: 64, offset: 832)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{null, !2331, !2279, !2332, !2333}
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2320, file: !2259, line: 167, baseType: !2335, size: 64, offset: 896)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!223, !2331, !2279}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2270, file: !2259, line: 144, baseType: !2265, size: 64, offset: 384)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2270, file: !2259, line: 145, baseType: !2340, size: 64, offset: 448)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2270, file: !2259, line: 146, baseType: !2342, size: 64, offset: 512)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2259, line: 124, size: 256, elements: !2344)
!2344 = !{!2345, !2346}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2343, file: !2259, line: 125, baseType: !1098, size: 192, align: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2343, file: !2259, line: 126, baseType: !2331, size: 64, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2270, file: !2259, line: 147, baseType: !1547, size: 64, offset: 576)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2267, file: !2259, line: 153, baseType: !1206, size: 64, offset: 640)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2200, file: !2201, line: 86, baseType: !2331, size: 64, offset: 3712)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2200, file: !2201, line: 88, baseType: !2351, size: 64, offset: 3776)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2201, line: 92, size: 576, elements: !2353)
!2353 = !{!2354, !2355, !2356, !2357, !2358}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2352, file: !2201, line: 93, baseType: !1551, size: 128)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2352, file: !2201, line: 94, baseType: !2199, size: 64, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2352, file: !2201, line: 95, baseType: !1354, size: 32, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2352, file: !2201, line: 96, baseType: !223, size: 32, offset: 224)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2352, file: !2201, line: 97, baseType: !2359, size: 320, offset: 256)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1074, size: 320, elements: !2360)
!2360 = !{!2361}
!2361 = !DISubrange(count: 10)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2200, file: !2201, line: 89, baseType: !2363, size: 320, offset: 3840)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 320, elements: !2360)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2023, file: !2024, line: 147, baseType: !2365, size: 64, offset: 1088)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2024, line: 25, size: 64, elements: !2367)
!2367 = !{!2368, !2369, !2370}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2366, file: !2024, line: 26, baseType: !1074, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2366, file: !2024, line: 27, baseType: !223, size: 32, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2366, file: !2024, line: 28, baseType: !2371, offset: 64)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, elements: !2372)
!2372 = !{!2373}
!2373 = !DISubrange(count: 0)
!2374 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !2024, line: 149, baseType: !2375, size: 128, offset: 1152)
!2375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2023, file: !2024, line: 149, size: 128, elements: !2376)
!2376 = !{!2377, !2378}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2375, file: !2024, line: 150, baseType: !223, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2375, file: !2024, line: 151, baseType: !1692, size: 128, align: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1680, file: !17, line: 938, baseType: !2380, size: 256, offset: 1088)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !17, line: 896, size: 256, elements: !2381)
!2381 = !{!2382, !2383, !2384, !2385, !2386, !2387}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2380, file: !17, line: 897, baseType: !994, size: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2380, file: !17, line: 898, baseType: !7, size: 32, offset: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !2380, file: !17, line: 899, baseType: !7, size: 32, offset: 96)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2380, file: !17, line: 902, baseType: !7, size: 32, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !2380, file: !17, line: 903, baseType: !7, size: 32, offset: 160)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !2380, file: !17, line: 904, baseType: !1514, size: 64, offset: 192)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1680, file: !17, line: 940, baseType: !984, size: 64, offset: 1344)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1680, file: !17, line: 945, baseType: !991, size: 64, offset: 1408)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1680, file: !17, line: 949, baseType: !1013, size: 128, offset: 1472)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1680, file: !17, line: 950, baseType: !1013, size: 128, offset: 1600)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1680, file: !17, line: 952, baseType: !1343, size: 64, offset: 1728)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1680, file: !17, line: 953, baseType: !2394, size: 32, offset: 1792)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2395, line: 8, baseType: !989)
!2395 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1680, file: !17, line: 954, baseType: !2394, size: 32, offset: 1824)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1640, file: !1641, line: 28, baseType: !991, size: 64, offset: 832)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1571, file: !17, line: 1955, baseType: !1636, size: 64, offset: 1088)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1571, file: !17, line: 1956, baseType: !1636, size: 64, offset: 1152)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1571, file: !17, line: 1957, baseType: !1636, size: 64, offset: 1216)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1571, file: !17, line: 1963, baseType: !2402, size: 64, offset: 1280)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!223, !1504, !1331, !992}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1571, file: !17, line: 1964, baseType: !2406, size: 64, offset: 1344)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!931, !1504, !2409}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2411, line: 12, size: 256, elements: !2412)
!2411 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2412 = !{!2413, !2414, !2415, !2416, !2417}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2410, file: !2411, line: 13, baseType: !992, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2410, file: !2411, line: 16, baseType: !223, size: 32, offset: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2410, file: !2411, line: 23, baseType: !994, size: 64, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2410, file: !2411, line: 30, baseType: !994, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2410, file: !2411, line: 33, baseType: !2418, size: 64, offset: 192)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1245, line: 27, flags: DIFlagFwdDecl)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1571, file: !17, line: 1966, baseType: !2406, size: 64, offset: 1408)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1505, file: !17, line: 1424, baseType: !2422, size: 64, offset: 448)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !34, line: 322, size: 704, elements: !2425)
!2425 = !{!2426, !2472, !2476, !2480, !2481, !2482, !2483, !2484, !2489, !2494, !2498}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2424, file: !34, line: 323, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!223, !2430}
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !34, line: 294, size: 1600, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2457, !2458, !2459}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2431, file: !34, line: 295, baseType: !1551, size: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2431, file: !34, line: 296, baseType: !1013, size: 128, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2431, file: !34, line: 297, baseType: !1013, size: 128, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2431, file: !34, line: 298, baseType: !1013, size: 128, offset: 384)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2431, file: !34, line: 299, baseType: !1039, size: 192, offset: 512)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2431, file: !34, line: 300, baseType: !1021, offset: 704)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2431, file: !34, line: 301, baseType: !1074, size: 32, offset: 704)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2431, file: !34, line: 302, baseType: !1504, size: 64, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2431, file: !34, line: 303, baseType: !2442, size: 64, offset: 832)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !34, line: 68, size: 64, elements: !2443)
!2443 = !{!2444, !2456}
!2444 = !DIDerivedType(tag: DW_TAG_member, scope: !2442, file: !34, line: 69, baseType: !2445, size: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2442, file: !34, line: 69, size: 32, elements: !2446)
!2446 = !{!2447, !2448, !2449}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2445, file: !34, line: 70, baseType: !1354, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2445, file: !34, line: 71, baseType: !1362, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2445, file: !34, line: 72, baseType: !2450, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2451, line: 24, baseType: !2452)
!2451 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2451, line: 22, size: 32, elements: !2453)
!2453 = !{!2454}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2452, file: !2451, line: 23, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2451, line: 20, baseType: !1360)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2442, file: !34, line: 74, baseType: !33, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2431, file: !34, line: 304, baseType: !1514, size: 64, offset: 896)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2431, file: !34, line: 305, baseType: !994, size: 64, offset: 960)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2431, file: !34, line: 306, baseType: !2460, size: 576, offset: 1024)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !34, line: 205, size: 576, elements: !2461)
!2461 = !{!2462, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2460, file: !34, line: 206, baseType: !2463, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !34, line: 66, baseType: !1051)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2460, file: !34, line: 207, baseType: !2463, size: 64, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2460, file: !34, line: 208, baseType: !2463, size: 64, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2460, file: !34, line: 209, baseType: !2463, size: 64, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2460, file: !34, line: 210, baseType: !2463, size: 64, offset: 256)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2460, file: !34, line: 211, baseType: !2463, size: 64, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2460, file: !34, line: 212, baseType: !2463, size: 64, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2460, file: !34, line: 213, baseType: !2082, size: 64, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2460, file: !34, line: 214, baseType: !2082, size: 64, offset: 512)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2424, file: !34, line: 324, baseType: !2473, size: 64, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!2430, !1504, !223}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2424, file: !34, line: 325, baseType: !2477, size: 64, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{null, !2430}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2424, file: !34, line: 326, baseType: !2427, size: 64, offset: 192)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2424, file: !34, line: 327, baseType: !2427, size: 64, offset: 256)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2424, file: !34, line: 328, baseType: !2427, size: 64, offset: 320)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2424, file: !34, line: 329, baseType: !1613, size: 64, offset: 384)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2424, file: !34, line: 332, baseType: !2485, size: 64, offset: 448)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!2488, !1347}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2424, file: !34, line: 333, baseType: !2490, size: 64, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!223, !1347, !2493}
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2424, file: !34, line: 335, baseType: !2495, size: 64, offset: 576)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{!223, !1347, !2488}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2424, file: !34, line: 337, baseType: !2499, size: 64, offset: 640)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!223, !1504, !2502}
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1505, file: !17, line: 1425, baseType: !2504, size: 64, offset: 512)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2506)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !34, line: 428, size: 704, elements: !2507)
!2507 = !{!2508, !2512, !2513, !2517, !2518, !2519, !2534, !2557, !2561, !2562, !2585}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2506, file: !34, line: 429, baseType: !2509, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = !DISubroutineType(types: !2511)
!2511 = !{!223, !1504, !223, !223, !1493}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2506, file: !34, line: 430, baseType: !1613, size: 64, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2506, file: !34, line: 431, baseType: !2514, size: 64, offset: 128)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!223, !1504, !7}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2506, file: !34, line: 432, baseType: !2514, size: 64, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2506, file: !34, line: 433, baseType: !1613, size: 64, offset: 256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2506, file: !34, line: 434, baseType: !2520, size: 64, offset: 320)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!223, !1504, !223, !2523}
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !34, line: 415, size: 256, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2524, file: !34, line: 416, baseType: !223, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2524, file: !34, line: 417, baseType: !7, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2524, file: !34, line: 418, baseType: !7, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2524, file: !34, line: 420, baseType: !7, size: 32, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2524, file: !34, line: 421, baseType: !7, size: 32, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2524, file: !34, line: 422, baseType: !7, size: 32, offset: 160)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2524, file: !34, line: 423, baseType: !7, size: 32, offset: 192)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2524, file: !34, line: 424, baseType: !7, size: 32, offset: 224)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2506, file: !34, line: 435, baseType: !2535, size: 64, offset: 384)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!223, !1504, !2442, !2538}
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !34, line: 343, size: 960, elements: !2540)
!2540 = !{!2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2539, file: !34, line: 344, baseType: !223, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2539, file: !34, line: 345, baseType: !984, size: 64, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2539, file: !34, line: 346, baseType: !984, size: 64, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2539, file: !34, line: 347, baseType: !984, size: 64, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2539, file: !34, line: 348, baseType: !984, size: 64, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2539, file: !34, line: 349, baseType: !984, size: 64, offset: 320)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2539, file: !34, line: 350, baseType: !984, size: 64, offset: 384)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2539, file: !34, line: 351, baseType: !1049, size: 64, offset: 448)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2539, file: !34, line: 353, baseType: !1049, size: 64, offset: 512)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2539, file: !34, line: 354, baseType: !223, size: 32, offset: 576)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2539, file: !34, line: 355, baseType: !223, size: 32, offset: 608)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2539, file: !34, line: 356, baseType: !984, size: 64, offset: 640)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2539, file: !34, line: 357, baseType: !984, size: 64, offset: 704)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2539, file: !34, line: 358, baseType: !984, size: 64, offset: 768)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2539, file: !34, line: 359, baseType: !1049, size: 64, offset: 832)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2539, file: !34, line: 360, baseType: !223, size: 32, offset: 896)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2506, file: !34, line: 436, baseType: !2558, size: 64, offset: 448)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!223, !1504, !2502, !2538}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2506, file: !34, line: 438, baseType: !2535, size: 64, offset: 512)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2506, file: !34, line: 439, baseType: !2563, size: 64, offset: 576)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DISubroutineType(types: !2565)
!2565 = !{!223, !1504, !2566}
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !34, line: 409, size: 1408, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2567, file: !34, line: 410, baseType: !7, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2567, file: !34, line: 411, baseType: !2571, size: 1344, offset: 64)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2572, size: 1344, elements: !1563)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !34, line: 395, size: 448, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2584}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2572, file: !34, line: 396, baseType: !7, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2572, file: !34, line: 397, baseType: !7, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2572, file: !34, line: 399, baseType: !7, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2572, file: !34, line: 400, baseType: !7, size: 32, offset: 96)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2572, file: !34, line: 401, baseType: !7, size: 32, offset: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2572, file: !34, line: 402, baseType: !7, size: 32, offset: 160)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2572, file: !34, line: 403, baseType: !7, size: 32, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2572, file: !34, line: 404, baseType: !988, size: 64, offset: 256)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2572, file: !34, line: 405, baseType: !2583, size: 64, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !993, line: 126, baseType: !984)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2572, file: !34, line: 406, baseType: !2583, size: 64, offset: 384)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2506, file: !34, line: 440, baseType: !2514, size: 64, offset: 640)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1505, file: !17, line: 1426, baseType: !2587, size: 64, offset: 576)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2589)
!2589 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !17, line: 49, flags: DIFlagFwdDecl)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1505, file: !17, line: 1427, baseType: !994, size: 64, offset: 640)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1505, file: !17, line: 1428, baseType: !994, size: 64, offset: 704)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1505, file: !17, line: 1429, baseType: !994, size: 64, offset: 768)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1505, file: !17, line: 1430, baseType: !1378, size: 64, offset: 832)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1505, file: !17, line: 1431, baseType: !2067, size: 256, offset: 896)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1505, file: !17, line: 1432, baseType: !223, size: 32, offset: 1152)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1505, file: !17, line: 1433, baseType: !1074, size: 32, offset: 1184)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1505, file: !17, line: 1437, baseType: !2598, size: 64, offset: 1216)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2601)
!2601 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !17, line: 1437, flags: DIFlagFwdDecl)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1505, file: !17, line: 1449, baseType: !2603, size: 64, offset: 1280)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1390, line: 34, size: 64, elements: !2604)
!2604 = !{!2605}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2603, file: !1390, line: 35, baseType: !1393, size: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1505, file: !17, line: 1450, baseType: !1013, size: 128, offset: 1344)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1505, file: !17, line: 1451, baseType: !2608, size: 64, offset: 1472)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2610, line: 22, size: 1344, elements: !2611)
!2610 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2611 = !{!2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !3530, !3531, !3532, !4447, !4448, !4449}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2609, file: !2610, line: 23, baseType: !1509, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2609, file: !2610, line: 24, baseType: !223, size: 32, offset: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2609, file: !2610, line: 25, baseType: !1347, size: 64, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2609, file: !2610, line: 26, baseType: !1504, size: 64, offset: 128)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2609, file: !2610, line: 27, baseType: !1039, size: 192, offset: 192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2609, file: !2610, line: 28, baseType: !991, size: 64, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2609, file: !2610, line: 29, baseType: !991, size: 64, offset: 448)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2609, file: !2610, line: 30, baseType: !223, size: 32, offset: 512)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2609, file: !2610, line: 31, baseType: !1495, size: 8, offset: 544)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2609, file: !2610, line: 33, baseType: !1013, size: 128, offset: 576)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2609, file: !2610, line: 35, baseType: !2608, size: 64, offset: 704)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2609, file: !2610, line: 36, baseType: !1216, size: 8, offset: 768)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2609, file: !2610, line: 37, baseType: !2625, size: 64, offset: 832)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2627, line: 53, size: 6592, elements: !2628)
!2627 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2628 = !{!2629, !2631, !2632, !2633, !2636, !2657, !3509, !3510, !3511, !3512, !3522}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2626, file: !2627, line: 54, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !993, line: 125, baseType: !984)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2626, file: !2627, line: 60, baseType: !2630, size: 64, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2626, file: !2627, line: 64, baseType: !994, size: 64, offset: 128)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2626, file: !2627, line: 65, baseType: !2634, size: 64, offset: 192)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2627, line: 65, flags: DIFlagFwdDecl)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2626, file: !2627, line: 66, baseType: !2637, size: 128, offset: 256)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2638, line: 105, size: 128, elements: !2639)
!2638 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2637, file: !2638, line: 110, baseType: !994, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2637, file: !2638, line: 118, baseType: !2642, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2638, line: 95, size: 448, elements: !2644)
!2644 = !{!2645, !2646, !2652, !2653, !2654, !2655, !2656}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2643, file: !2638, line: 96, baseType: !1043, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2643, file: !2638, line: 97, baseType: !2647, size: 64, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2638, line: 60, baseType: !2649)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{null, !2651}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2643, file: !2638, line: 98, baseType: !2647, size: 64, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2643, file: !2638, line: 99, baseType: !1495, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2643, file: !2638, line: 100, baseType: !1495, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2643, file: !2638, line: 101, baseType: !1692, size: 128, align: 64, offset: 256)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2643, file: !2638, line: 102, baseType: !2651, size: 64, offset: 384)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2626, file: !2627, line: 68, baseType: !2658, size: 5568, offset: 384)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !52, line: 461, size: 5568, elements: !2659)
!2659 = !{!2660, !2956, !2958, !2961, !2962, !3013, !3105, !3106, !3107, !3108, !3109, !3118, !3223, !3236, !3436, !3437, !3441, !3443, !3444, !3445, !3449, !3455, !3456, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3497, !3498, !3499, !3502, !3505, !3506, !3507, !3508}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2658, file: !52, line: 462, baseType: !2661, size: 512)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !2662, line: 64, size: 512, elements: !2663)
!2662 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!2663 = !{!2664, !2665, !2666, !2668, !2710, !2813, !2946, !2951, !2952, !2953, !2954, !2955}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2661, file: !2662, line: 65, baseType: !1450, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2661, file: !2662, line: 66, baseType: !1013, size: 128, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2661, file: !2662, line: 67, baseType: !2667, size: 64, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !2661, file: !2662, line: 68, baseType: !2669, size: 64, offset: 256)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !2662, line: 192, size: 704, elements: !2671)
!2671 = !{!2672, !2673, !2674, !2675}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2670, file: !2662, line: 193, baseType: !1013, size: 128)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2670, file: !2662, line: 194, baseType: !1021, offset: 128)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2670, file: !2662, line: 195, baseType: !2661, size: 512, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !2670, file: !2662, line: 196, baseType: !2676, size: 64, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2678)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !2662, line: 156, size: 192, elements: !2679)
!2679 = !{!2680, !2685, !2690}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2678, file: !2662, line: 157, baseType: !2681, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2682)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!223, !2669, !2667}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2678, file: !2662, line: 158, baseType: !2686, size: 64, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2687)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!1450, !2669, !2667}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2678, file: !2662, line: 159, baseType: !2691, size: 64, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2692)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!223, !2669, !2667, !2695}
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !2662, line: 148, size: 20736, elements: !2697)
!2697 = !{!2698, !2700, !2704, !2705, !2709}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2696, file: !2662, line: 149, baseType: !2699, size: 192)
!2699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 192, elements: !1563)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !2696, file: !2662, line: 150, baseType: !2701, size: 4096, offset: 192)
!2701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 4096, elements: !2702)
!2702 = !{!2703}
!2703 = !DISubrange(count: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !2696, file: !2662, line: 151, baseType: !223, size: 32, offset: 4288)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2696, file: !2662, line: 152, baseType: !2706, size: 16384, offset: 4320)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 16384, elements: !2707)
!2707 = !{!2708}
!2708 = !DISubrange(count: 2048)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !2696, file: !2662, line: 153, baseType: !223, size: 32, offset: 20704)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !2661, file: !2662, line: 69, baseType: !2711, size: 64, offset: 320)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !2662, line: 138, size: 448, elements: !2713)
!2713 = !{!2714, !2718, !2737, !2739, !2772, !2805, !2809}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2712, file: !2662, line: 139, baseType: !2715, size: 64)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{null, !2667}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !2712, file: !2662, line: 140, baseType: !2719, size: 64, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2721)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !2722, line: 230, size: 128, elements: !2723)
!2722 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!2723 = !{!2724, !2733}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2721, file: !2722, line: 231, baseType: !2725, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!1717, !2667, !2728, !1476}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !2722, line: 30, size: 128, elements: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2729, file: !2722, line: 31, baseType: !1450, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2729, file: !2722, line: 32, baseType: !1351, size: 16, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2721, file: !2722, line: 232, baseType: !2734, size: 64, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!1717, !2667, !2728, !1450, !1645}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !2712, file: !2662, line: 141, baseType: !2738, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !2712, file: !2662, line: 142, baseType: !2740, size: 64, offset: 192)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !2722, line: 84, size: 320, elements: !2744)
!2744 = !{!2745, !2746, !2750, !2769, !2770}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2743, file: !2722, line: 85, baseType: !1450, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !2743, file: !2722, line: 86, baseType: !2747, size: 64, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!1351, !2667, !2728, !223}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !2743, file: !2722, line: 88, baseType: !2751, size: 64, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!1351, !2667, !2754, !223}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !2722, line: 168, size: 448, elements: !2756)
!2756 = !{!2757, !2758, !2759, !2760, !2764, !2765}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2755, file: !2722, line: 169, baseType: !2729, size: 128)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2755, file: !2722, line: 170, baseType: !1645, size: 64, offset: 128)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2755, file: !2722, line: 171, baseType: !991, size: 64, offset: 192)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2755, file: !2722, line: 172, baseType: !2761, size: 64, offset: 256)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!1717, !1712, !2667, !2754, !1476, !1514, !1645}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2755, file: !2722, line: 174, baseType: !2761, size: 64, offset: 320)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2755, file: !2722, line: 176, baseType: !2766, size: 64, offset: 384)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!223, !1712, !2667, !2754, !1251}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2743, file: !2722, line: 90, baseType: !2738, size: 64, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !2743, file: !2722, line: 91, baseType: !2771, size: 64, offset: 256)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !2712, file: !2662, line: 143, baseType: !2773, size: 64, offset: 256)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!2776, !2667}
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2778)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !40, line: 39, size: 384, elements: !2779)
!2779 = !{!2780, !2781, !2785, !2789, !2797, !2801}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2778, file: !40, line: 40, baseType: !39, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2778, file: !40, line: 41, baseType: !2782, size: 64, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!1495}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2778, file: !40, line: 42, baseType: !2786, size: 64, offset: 128)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!991}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2778, file: !40, line: 43, baseType: !2790, size: 64, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!2793, !2795}
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !40, line: 19, flags: DIFlagFwdDecl)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2778, file: !40, line: 44, baseType: !2798, size: 64, offset: 256)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!2793}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2778, file: !40, line: 45, baseType: !2802, size: 64, offset: 320)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{null, !991}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2712, file: !2662, line: 144, baseType: !2806, size: 64, offset: 320)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!2793, !2667}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2712, file: !2662, line: 145, baseType: !2810, size: 64, offset: 384)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{null, !2667, !2332, !2333}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !2661, file: !2662, line: 70, baseType: !2814, size: 64, offset: 384)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1528, line: 123, size: 1024, elements: !2816)
!2816 = !{!2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2939, !2940, !2941, !2942, !2943}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2815, file: !1528, line: 124, baseType: !1074, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2815, file: !1528, line: 125, baseType: !1074, size: 32, offset: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2815, file: !1528, line: 135, baseType: !2814, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2815, file: !1528, line: 136, baseType: !1450, size: 64, offset: 128)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2815, file: !1528, line: 138, baseType: !1098, size: 192, align: 64, offset: 192)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2815, file: !1528, line: 140, baseType: !2793, size: 64, offset: 384)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2815, file: !1528, line: 141, baseType: !7, size: 32, offset: 448)
!2824 = !DIDerivedType(tag: DW_TAG_member, scope: !2815, file: !1528, line: 142, baseType: !2825, size: 256, offset: 512)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2815, file: !1528, line: 142, size: 256, elements: !2826)
!2826 = !{!2827, !2879, !2883}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2825, file: !1528, line: 143, baseType: !2828, size: 192)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1528, line: 91, size: 192, elements: !2829)
!2829 = !{!2830, !2831, !2832}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !2828, file: !1528, line: 92, baseType: !994, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2828, file: !1528, line: 94, baseType: !1206, size: 64, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2828, file: !1528, line: 100, baseType: !2833, size: 64, offset: 128)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1528, line: 180, size: 704, elements: !2835)
!2835 = !{!2836, !2837, !2838, !2851, !2852, !2853, !2877, !2878}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2834, file: !1528, line: 182, baseType: !2814, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2834, file: !1528, line: 183, baseType: !7, size: 32, offset: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !2834, file: !1528, line: 186, baseType: !2839, size: 192, offset: 128)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2840, line: 19, size: 192, elements: !2841)
!2840 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2841 = !{!2842, !2849, !2850}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2839, file: !2840, line: 20, baseType: !2843, size: 128)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2844, line: 292, size: 128, elements: !2845)
!2844 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2845 = !{!2846, !2847, !2848}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2843, file: !2844, line: 293, baseType: !1021)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2843, file: !2844, line: 295, baseType: !992, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2843, file: !2844, line: 296, baseType: !991, size: 64, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2839, file: !2840, line: 21, baseType: !7, size: 32, offset: 128)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2839, file: !2840, line: 22, baseType: !7, size: 32, offset: 160)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !2834, file: !1528, line: 187, baseType: !989, size: 32, offset: 320)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !2834, file: !1528, line: 188, baseType: !989, size: 32, offset: 352)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !2834, file: !1528, line: 189, baseType: !2854, size: 64, offset: 384)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1528, line: 168, size: 320, elements: !2856)
!2856 = !{!2857, !2861, !2865, !2869, !2873}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !2855, file: !1528, line: 169, baseType: !2858, size: 64)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!223, !1639, !2833}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !2855, file: !1528, line: 171, baseType: !2862, size: 64, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!223, !2814, !1450, !1351}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !2855, file: !1528, line: 173, baseType: !2866, size: 64, offset: 128)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!223, !2814}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !2855, file: !1528, line: 174, baseType: !2870, size: 64, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!223, !2814, !2814, !1450}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !2855, file: !1528, line: 176, baseType: !2874, size: 64, offset: 256)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!223, !1639, !2814, !2833}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !2834, file: !1528, line: 192, baseType: !1013, size: 128, offset: 448)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !2834, file: !1528, line: 194, baseType: !1841, size: 128, offset: 576)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2825, file: !1528, line: 144, baseType: !2880, size: 64)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1528, line: 103, size: 64, elements: !2881)
!2881 = !{!2882}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2880, file: !1528, line: 104, baseType: !2814, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2825, file: !1528, line: 145, baseType: !2884, size: 256)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1528, line: 107, size: 256, elements: !2885)
!2885 = !{!2886, !2934, !2937, !2938}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2884, file: !1528, line: 108, baseType: !2887, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1528, line: 217, size: 768, elements: !2890)
!2890 = !{!2891, !2911, !2915, !2916, !2917, !2918, !2919, !2923, !2924, !2925, !2926, !2930}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2889, file: !1528, line: 222, baseType: !2892, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!223, !2895}
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1528, line: 197, size: 1088, elements: !2897)
!2897 = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2896, file: !1528, line: 199, baseType: !2814, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2896, file: !1528, line: 200, baseType: !1712, size: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2896, file: !1528, line: 201, baseType: !1639, size: 64, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2896, file: !1528, line: 202, baseType: !991, size: 64, offset: 192)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2896, file: !1528, line: 205, baseType: !1039, size: 192, offset: 256)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2896, file: !1528, line: 206, baseType: !1039, size: 192, offset: 448)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2896, file: !1528, line: 207, baseType: !223, size: 32, offset: 640)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2896, file: !1528, line: 208, baseType: !1013, size: 128, offset: 704)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2896, file: !1528, line: 209, baseType: !1476, size: 64, offset: 832)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2896, file: !1528, line: 211, baseType: !1645, size: 64, offset: 896)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2896, file: !1528, line: 212, baseType: !1495, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2896, file: !1528, line: 213, baseType: !1495, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2896, file: !1528, line: 214, baseType: !1280, size: 64, offset: 1024)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2889, file: !1528, line: 223, baseType: !2912, size: 64, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{null, !2895}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2889, file: !1528, line: 236, baseType: !1673, size: 64, offset: 128)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2889, file: !1528, line: 238, baseType: !1660, size: 64, offset: 192)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2889, file: !1528, line: 239, baseType: !1669, size: 64, offset: 256)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2889, file: !1528, line: 240, baseType: !1665, size: 64, offset: 320)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2889, file: !1528, line: 242, baseType: !2920, size: 64, offset: 384)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!1717, !2895, !1476, !1645, !1514}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2889, file: !1528, line: 252, baseType: !1645, size: 64, offset: 448)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2889, file: !1528, line: 259, baseType: !1495, size: 8, offset: 512)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2889, file: !1528, line: 260, baseType: !2920, size: 64, offset: 576)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2889, file: !1528, line: 263, baseType: !2927, size: 64, offset: 640)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!1792, !2895, !1793}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2889, file: !1528, line: 266, baseType: !2931, size: 64, offset: 704)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!223, !2895, !1251}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2884, file: !1528, line: 109, baseType: !2935, size: 64, offset: 64)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1528, line: 31, flags: DIFlagFwdDecl)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2884, file: !1528, line: 110, baseType: !1514, size: 64, offset: 128)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2884, file: !1528, line: 111, baseType: !2814, size: 64, offset: 192)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2815, file: !1528, line: 148, baseType: !991, size: 64, offset: 768)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2815, file: !1528, line: 154, baseType: !984, size: 64, offset: 832)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2815, file: !1528, line: 156, baseType: !1001, size: 16, offset: 896)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2815, file: !1528, line: 157, baseType: !1351, size: 16, offset: 912)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2815, file: !1528, line: 158, baseType: !2944, size: 64, offset: 960)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1528, line: 32, flags: DIFlagFwdDecl)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2661, file: !2662, line: 71, baseType: !2947, size: 32, offset: 448)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2948, line: 19, size: 32, elements: !2949)
!2948 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2949 = !{!2950}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2947, file: !2948, line: 20, baseType: !1070, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !2661, file: !2662, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !2661, file: !2662, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !2661, file: !2662, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !2661, file: !2662, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !2661, file: !2662, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2658, file: !52, line: 463, baseType: !2957, size: 64, offset: 512)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2658, file: !52, line: 465, baseType: !2959, size: 64, offset: 576)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !52, line: 36, flags: DIFlagFwdDecl)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !2658, file: !52, line: 467, baseType: !1450, size: 64, offset: 640)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2658, file: !52, line: 468, baseType: !2963, size: 64, offset: 704)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2965)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !52, line: 87, size: 384, elements: !2966)
!2966 = !{!2967, !2968, !2969, !2973, !2978, !2982}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2965, file: !52, line: 88, baseType: !1450, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2965, file: !52, line: 89, baseType: !2740, size: 64, offset: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2965, file: !52, line: 90, baseType: !2970, size: 64, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{!223, !2957, !2695}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2965, file: !52, line: 91, baseType: !2974, size: 64, offset: 192)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!1476, !2957, !2977, !2332, !2333}
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2965, file: !52, line: 93, baseType: !2979, size: 64, offset: 256)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{null, !2957}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2965, file: !52, line: 95, baseType: !2983, size: 64, offset: 320)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2985)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !59, line: 278, size: 1472, elements: !2986)
!2986 = !{!2987, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2985, file: !59, line: 279, baseType: !2988, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!223, !2957}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2985, file: !59, line: 280, baseType: !2979, size: 64, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2985, file: !59, line: 281, baseType: !2988, size: 64, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2985, file: !59, line: 282, baseType: !2988, size: 64, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2985, file: !59, line: 283, baseType: !2988, size: 64, offset: 256)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2985, file: !59, line: 284, baseType: !2988, size: 64, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2985, file: !59, line: 285, baseType: !2988, size: 64, offset: 384)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2985, file: !59, line: 286, baseType: !2988, size: 64, offset: 448)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2985, file: !59, line: 287, baseType: !2988, size: 64, offset: 512)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2985, file: !59, line: 288, baseType: !2988, size: 64, offset: 576)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2985, file: !59, line: 289, baseType: !2988, size: 64, offset: 640)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2985, file: !59, line: 290, baseType: !2988, size: 64, offset: 704)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2985, file: !59, line: 291, baseType: !2988, size: 64, offset: 768)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2985, file: !59, line: 292, baseType: !2988, size: 64, offset: 832)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2985, file: !59, line: 293, baseType: !2988, size: 64, offset: 896)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2985, file: !59, line: 294, baseType: !2988, size: 64, offset: 960)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2985, file: !59, line: 295, baseType: !2988, size: 64, offset: 1024)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2985, file: !59, line: 296, baseType: !2988, size: 64, offset: 1088)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2985, file: !59, line: 297, baseType: !2988, size: 64, offset: 1152)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2985, file: !59, line: 298, baseType: !2988, size: 64, offset: 1216)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2985, file: !59, line: 299, baseType: !2988, size: 64, offset: 1280)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2985, file: !59, line: 300, baseType: !2988, size: 64, offset: 1344)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2985, file: !59, line: 301, baseType: !2988, size: 64, offset: 1408)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2658, file: !52, line: 470, baseType: !3014, size: 64, offset: 768)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3016, line: 82, size: 1408, elements: !3017)
!3016 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3017 = !{!3018, !3019, !3020, !3021, !3022, !3023, !3024, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3100, !3103, !3104}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3015, file: !3016, line: 83, baseType: !1450, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3015, file: !3016, line: 84, baseType: !1450, size: 64, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3015, file: !3016, line: 85, baseType: !2957, size: 64, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3015, file: !3016, line: 86, baseType: !2740, size: 64, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3015, file: !3016, line: 87, baseType: !2740, size: 64, offset: 256)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3015, file: !3016, line: 88, baseType: !2740, size: 64, offset: 320)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3015, file: !3016, line: 90, baseType: !3025, size: 64, offset: 384)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!223, !2957, !3028}
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !46, line: 95, size: 1152, elements: !3030)
!3030 = !{!3031, !3032, !3033, !3034, !3035, !3036, !3037, !3051, !3064, !3065, !3066, !3067, !3068, !3076, !3077, !3078, !3079, !3080, !3081}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3029, file: !46, line: 96, baseType: !1450, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3029, file: !46, line: 97, baseType: !3014, size: 64, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3029, file: !46, line: 99, baseType: !1542, size: 64, offset: 128)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3029, file: !46, line: 100, baseType: !1450, size: 64, offset: 192)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3029, file: !46, line: 102, baseType: !1495, size: 8, offset: 256)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3029, file: !46, line: 103, baseType: !45, size: 32, offset: 288)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3029, file: !46, line: 105, baseType: !3038, size: 64, offset: 320)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3041, line: 262, size: 1600, elements: !3042)
!3041 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3042 = !{!3043, !3045, !3046, !3050}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3040, file: !3041, line: 263, baseType: !3044, size: 256)
!3044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 256, elements: !1415)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3040, file: !3041, line: 264, baseType: !3044, size: 256, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3040, file: !3041, line: 265, baseType: !3047, size: 1024, offset: 512)
!3047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 1024, elements: !3048)
!3048 = !{!3049}
!3049 = !DISubrange(count: 128)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3040, file: !3041, line: 266, baseType: !2793, size: 64, offset: 1536)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3029, file: !46, line: 106, baseType: !3052, size: 64, offset: 384)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3041, line: 210, size: 256, elements: !3055)
!3055 = !{!3056, !3060, !3062, !3063}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3054, file: !3041, line: 211, baseType: !3057, size: 72)
!3057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1217, size: 72, elements: !3058)
!3058 = !{!3059}
!3059 = !DISubrange(count: 9)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3054, file: !3041, line: 212, baseType: !3061, size: 64, offset: 128)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3041, line: 14, baseType: !994)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3054, file: !3041, line: 213, baseType: !990, size: 32, offset: 192)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3054, file: !3041, line: 214, baseType: !990, size: 32, offset: 224)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3029, file: !46, line: 108, baseType: !2988, size: 64, offset: 448)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3029, file: !46, line: 109, baseType: !2979, size: 64, offset: 512)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3029, file: !46, line: 110, baseType: !2988, size: 64, offset: 576)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3029, file: !46, line: 111, baseType: !2979, size: 64, offset: 640)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3029, file: !46, line: 112, baseType: !3069, size: 64, offset: 704)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!223, !2957, !3072}
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !59, line: 52, baseType: !3073)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !59, line: 50, size: 32, elements: !3074)
!3074 = !{!3075}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3073, file: !59, line: 51, baseType: !223, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3029, file: !46, line: 113, baseType: !2988, size: 64, offset: 768)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3029, file: !46, line: 114, baseType: !2740, size: 64, offset: 832)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3029, file: !46, line: 115, baseType: !2740, size: 64, offset: 896)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3029, file: !46, line: 117, baseType: !2983, size: 64, offset: 960)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3029, file: !46, line: 118, baseType: !2979, size: 64, offset: 1024)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3029, file: !46, line: 120, baseType: !3082, size: 64, offset: 1088)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !46, line: 120, flags: DIFlagFwdDecl)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3015, file: !3016, line: 91, baseType: !2970, size: 64, offset: 448)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3015, file: !3016, line: 92, baseType: !2988, size: 64, offset: 512)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3015, file: !3016, line: 93, baseType: !2979, size: 64, offset: 576)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3015, file: !3016, line: 94, baseType: !2988, size: 64, offset: 640)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3015, file: !3016, line: 95, baseType: !2979, size: 64, offset: 704)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3015, file: !3016, line: 97, baseType: !2988, size: 64, offset: 768)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3015, file: !3016, line: 98, baseType: !2988, size: 64, offset: 832)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3015, file: !3016, line: 100, baseType: !3069, size: 64, offset: 896)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3015, file: !3016, line: 101, baseType: !2988, size: 64, offset: 960)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3015, file: !3016, line: 103, baseType: !2988, size: 64, offset: 1024)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3015, file: !3016, line: 105, baseType: !2988, size: 64, offset: 1088)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3015, file: !3016, line: 107, baseType: !2983, size: 64, offset: 1152)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3015, file: !3016, line: 109, baseType: !3097, size: 64, offset: 1216)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3099)
!3099 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3016, line: 109, flags: DIFlagFwdDecl)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3015, file: !3016, line: 111, baseType: !3101, size: 64, offset: 1280)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3016, line: 111, flags: DIFlagFwdDecl)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3015, file: !3016, line: 112, baseType: !1557, offset: 1344)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3015, file: !3016, line: 114, baseType: !1495, size: 8, offset: 1344)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !2658, file: !52, line: 471, baseType: !3028, size: 64, offset: 832)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !2658, file: !52, line: 473, baseType: !991, size: 64, offset: 896)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2658, file: !52, line: 475, baseType: !991, size: 64, offset: 960)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2658, file: !52, line: 480, baseType: !1039, size: 192, offset: 1024)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2658, file: !52, line: 484, baseType: !3110, size: 576, offset: 1216)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !52, line: 361, size: 576, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3115, !3116, !3117}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3110, file: !52, line: 362, baseType: !1013, size: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3110, file: !52, line: 363, baseType: !1013, size: 128, offset: 128)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3110, file: !52, line: 364, baseType: !1013, size: 128, offset: 256)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3110, file: !52, line: 365, baseType: !1013, size: 128, offset: 384)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3110, file: !52, line: 366, baseType: !1495, size: 8, offset: 512)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3110, file: !52, line: 367, baseType: !51, size: 32, offset: 544)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !2658, file: !52, line: 485, baseType: !3119, size: 2304, offset: 1792)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !59, line: 565, size: 2304, elements: !3120)
!3120 = !{!3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3216, !3220}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3119, file: !59, line: 566, baseType: !3072, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3119, file: !59, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3119, file: !59, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3119, file: !59, line: 569, baseType: !1495, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3119, file: !59, line: 570, baseType: !1495, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3119, file: !59, line: 571, baseType: !1495, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3119, file: !59, line: 572, baseType: !1495, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3119, file: !59, line: 573, baseType: !1495, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3119, file: !59, line: 574, baseType: !1495, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3119, file: !59, line: 575, baseType: !1495, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3119, file: !59, line: 576, baseType: !1495, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3119, file: !59, line: 577, baseType: !989, size: 32, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3119, file: !59, line: 578, baseType: !1021, offset: 96)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3119, file: !59, line: 580, baseType: !1013, size: 128, offset: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3119, file: !59, line: 581, baseType: !2307, size: 192, offset: 256)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3119, file: !59, line: 582, baseType: !3137, size: 64, offset: 448)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3139, line: 43, size: 1472, elements: !3140)
!3139 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3140 = !{!3141, !3142, !3143, !3144, !3145, !3148, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3138, file: !3139, line: 44, baseType: !1450, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3138, file: !3139, line: 45, baseType: !223, size: 32, offset: 64)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3138, file: !3139, line: 46, baseType: !1013, size: 128, offset: 128)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3138, file: !3139, line: 47, baseType: !1021, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3138, file: !3139, line: 48, baseType: !3146, size: 64, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !59, line: 533, flags: DIFlagFwdDecl)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3138, file: !3139, line: 49, baseType: !3149, size: 320, offset: 320)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3150, line: 11, size: 320, elements: !3151)
!3150 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3151 = !{!3152, !3153, !3154, !3159}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3149, file: !3150, line: 16, baseType: !1551, size: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3149, file: !3150, line: 17, baseType: !994, size: 64, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3149, file: !3150, line: 18, baseType: !3155, size: 64, offset: 192)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{null, !3158}
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3149, file: !3150, line: 19, baseType: !989, size: 32, offset: 256)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3138, file: !3139, line: 50, baseType: !994, size: 64, offset: 640)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3138, file: !3139, line: 51, baseType: !1150, size: 64, offset: 704)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3138, file: !3139, line: 52, baseType: !1150, size: 64, offset: 768)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3138, file: !3139, line: 53, baseType: !1150, size: 64, offset: 832)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3138, file: !3139, line: 54, baseType: !1150, size: 64, offset: 896)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3138, file: !3139, line: 55, baseType: !1150, size: 64, offset: 960)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3138, file: !3139, line: 56, baseType: !994, size: 64, offset: 1024)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3138, file: !3139, line: 57, baseType: !994, size: 64, offset: 1088)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3138, file: !3139, line: 58, baseType: !994, size: 64, offset: 1152)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3138, file: !3139, line: 59, baseType: !994, size: 64, offset: 1216)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3138, file: !3139, line: 60, baseType: !994, size: 64, offset: 1280)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3138, file: !3139, line: 61, baseType: !2957, size: 64, offset: 1344)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3138, file: !3139, line: 62, baseType: !1495, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3138, file: !3139, line: 63, baseType: !1495, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3119, file: !59, line: 583, baseType: !1495, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3119, file: !59, line: 584, baseType: !1495, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3119, file: !59, line: 585, baseType: !1495, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3119, file: !59, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3119, file: !59, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3119, file: !59, line: 592, baseType: !1142, size: 512, offset: 576)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3119, file: !59, line: 593, baseType: !984, size: 64, offset: 1088)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3119, file: !59, line: 594, baseType: !2247, size: 256, offset: 1152)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3119, file: !59, line: 595, baseType: !1841, size: 128, offset: 1408)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3119, file: !59, line: 596, baseType: !3146, size: 64, offset: 1536)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3119, file: !59, line: 597, baseType: !1074, size: 32, offset: 1600)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3119, file: !59, line: 598, baseType: !1074, size: 32, offset: 1632)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3119, file: !59, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3119, file: !59, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3119, file: !59, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3119, file: !59, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3119, file: !59, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3119, file: !59, line: 604, baseType: !1495, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3119, file: !59, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3119, file: !59, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3119, file: !59, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3119, file: !59, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3119, file: !59, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3119, file: !59, line: 610, baseType: !7, size: 32, offset: 1696)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3119, file: !59, line: 611, baseType: !58, size: 32, offset: 1728)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3119, file: !59, line: 612, baseType: !66, size: 32, offset: 1760)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3119, file: !59, line: 613, baseType: !223, size: 32, offset: 1792)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3119, file: !59, line: 614, baseType: !223, size: 32, offset: 1824)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3119, file: !59, line: 615, baseType: !984, size: 64, offset: 1856)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3119, file: !59, line: 616, baseType: !984, size: 64, offset: 1920)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3119, file: !59, line: 617, baseType: !984, size: 64, offset: 1984)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3119, file: !59, line: 618, baseType: !984, size: 64, offset: 2048)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3119, file: !59, line: 620, baseType: !3207, size: 64, offset: 2112)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !59, line: 536, size: 256, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3208, file: !59, line: 537, baseType: !1021)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3208, file: !59, line: 538, baseType: !7, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3208, file: !59, line: 540, baseType: !1013, size: 128, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3208, file: !59, line: 543, baseType: !3214, size: 64, offset: 192)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !59, line: 534, flags: DIFlagFwdDecl)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3119, file: !59, line: 621, baseType: !3217, size: 64, offset: 2176)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{null, !2957, !2059}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3119, file: !59, line: 622, baseType: !3221, size: 64, offset: 2240)
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !59, line: 622, flags: DIFlagFwdDecl)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !2658, file: !52, line: 486, baseType: !3224, size: 64, offset: 4096)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !59, line: 642, size: 1792, elements: !3226)
!3226 = !{!3227, !3228, !3229, !3233, !3234, !3235}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3225, file: !59, line: 643, baseType: !2985, size: 1472)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3225, file: !59, line: 644, baseType: !2988, size: 64, offset: 1472)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3225, file: !59, line: 645, baseType: !3230, size: 64, offset: 1536)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{null, !2957, !1495}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3225, file: !59, line: 646, baseType: !2988, size: 64, offset: 1600)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3225, file: !59, line: 647, baseType: !2979, size: 64, offset: 1664)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3225, file: !59, line: 648, baseType: !2979, size: 64, offset: 1728)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !2658, file: !52, line: 493, baseType: !3237, size: 64, offset: 4160)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 162, size: 1088, elements: !3239)
!3239 = !{!3240, !3241, !3242, !3418, !3419, !3420, !3421, !3422, !3423, !3426, !3427, !3428, !3429, !3430, !3431, !3432}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3238, file: !73, line: 163, baseType: !1013, size: 128)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3238, file: !73, line: 164, baseType: !1450, size: 64, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3238, file: !73, line: 165, baseType: !3243, size: 64, offset: 192)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3245)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !73, line: 105, size: 640, elements: !3246)
!3246 = !{!3247, !3365, !3378, !3383, !3387, !3395, !3399, !3403, !3410, !3414}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3245, file: !73, line: 106, baseType: !3248, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!223, !3237, !3251, !72}
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3253, line: 51, size: 1344, elements: !3254)
!3253 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3254 = !{!3255, !3256, !3258, !3259, !3349, !3358, !3359, !3360, !3361, !3362, !3363, !3364}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3252, file: !3253, line: 52, baseType: !1450, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3252, file: !3253, line: 53, baseType: !3257, size: 32, offset: 64)
!3257 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3253, line: 28, baseType: !989)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3252, file: !3253, line: 54, baseType: !1450, size: 64, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3252, file: !3253, line: 55, baseType: !3260, size: 192, offset: 192)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3261, line: 17, size: 192, elements: !3262)
!3261 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3262 = !{!3263, !3265, !3348}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3260, file: !3261, line: 18, baseType: !3264, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3260, file: !3261, line: 19, baseType: !3266, size: 64, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3268)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3261, line: 110, size: 1152, elements: !3269)
!3269 = !{!3270, !3274, !3278, !3284, !3290, !3294, !3298, !3303, !3307, !3308, !3312, !3316, !3320, !3331, !3332, !3333, !3334, !3344}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3268, file: !3261, line: 111, baseType: !3271, size: 64)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!3264, !3264}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3268, file: !3261, line: 112, baseType: !3275, size: 64, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{null, !3264}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3268, file: !3261, line: 113, baseType: !3279, size: 64, offset: 128)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!1495, !3282}
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3260)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3268, file: !3261, line: 114, baseType: !3285, size: 64, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!2793, !3282, !3288}
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2658)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3268, file: !3261, line: 116, baseType: !3291, size: 64, offset: 256)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!1495, !3282, !1450}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3268, file: !3261, line: 118, baseType: !3295, size: 64, offset: 320)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!223, !3282, !1450, !7, !991, !1645}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3268, file: !3261, line: 123, baseType: !3299, size: 64, offset: 384)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!223, !3282, !1450, !3302, !1645}
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3268, file: !3261, line: 126, baseType: !3304, size: 64, offset: 448)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!1450, !3282}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3268, file: !3261, line: 127, baseType: !3304, size: 64, offset: 512)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3268, file: !3261, line: 128, baseType: !3309, size: 64, offset: 576)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!3264, !3282}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3268, file: !3261, line: 130, baseType: !3313, size: 64, offset: 640)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{!3264, !3282, !3264}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3268, file: !3261, line: 133, baseType: !3317, size: 64, offset: 704)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!3264, !3282, !1450}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3268, file: !3261, line: 135, baseType: !3321, size: 64, offset: 768)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!223, !3282, !1450, !1450, !7, !7, !3324}
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3261, line: 43, size: 640, elements: !3326)
!3326 = !{!3327, !3328, !3329}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3325, file: !3261, line: 44, baseType: !3264, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3325, file: !3261, line: 45, baseType: !7, size: 32, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3325, file: !3261, line: 46, baseType: !3330, size: 512, offset: 128)
!3330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 512, elements: !1181)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3268, file: !3261, line: 140, baseType: !3313, size: 64, offset: 832)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3268, file: !3261, line: 143, baseType: !3309, size: 64, offset: 896)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3268, file: !3261, line: 145, baseType: !3271, size: 64, offset: 960)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3268, file: !3261, line: 146, baseType: !3335, size: 64, offset: 1024)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!223, !3282, !3338}
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3261, line: 29, size: 128, elements: !3340)
!3340 = !{!3341, !3342, !3343}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3339, file: !3261, line: 30, baseType: !7, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3339, file: !3261, line: 31, baseType: !7, size: 32, offset: 32)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3339, file: !3261, line: 32, baseType: !3282, size: 64, offset: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3268, file: !3261, line: 148, baseType: !3345, size: 64, offset: 1088)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!223, !3282, !2957}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3260, file: !3261, line: 20, baseType: !2957, size: 64, offset: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3252, file: !3253, line: 57, baseType: !3350, size: 64, offset: 384)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3253, line: 31, size: 704, elements: !3352)
!3352 = !{!3353, !3354, !3355, !3356, !3357}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3351, file: !3253, line: 32, baseType: !1476, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3351, file: !3253, line: 33, baseType: !223, size: 32, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3351, file: !3253, line: 34, baseType: !991, size: 64, offset: 128)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3351, file: !3253, line: 35, baseType: !3350, size: 64, offset: 192)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3351, file: !3253, line: 43, baseType: !2755, size: 448, offset: 256)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3252, file: !3253, line: 58, baseType: !3350, size: 64, offset: 448)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3252, file: !3253, line: 59, baseType: !3251, size: 64, offset: 512)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3252, file: !3253, line: 60, baseType: !3251, size: 64, offset: 576)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3252, file: !3253, line: 61, baseType: !3251, size: 64, offset: 640)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3252, file: !3253, line: 63, baseType: !2661, size: 512, offset: 704)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3252, file: !3253, line: 65, baseType: !994, size: 64, offset: 1216)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3252, file: !3253, line: 66, baseType: !991, size: 64, offset: 1280)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3245, file: !73, line: 108, baseType: !3366, size: 64, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!223, !3237, !3369, !72}
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !73, line: 63, size: 640, elements: !3371)
!3371 = !{!3372, !3373, !3374}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3370, file: !73, line: 64, baseType: !3264, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3370, file: !73, line: 65, baseType: !223, size: 32, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3370, file: !73, line: 66, baseType: !3375, size: 512, offset: 96)
!3375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 512, elements: !3376)
!3376 = !{!3377}
!3377 = !DISubrange(count: 16)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3245, file: !73, line: 110, baseType: !3379, size: 64, offset: 128)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!223, !3237, !7, !3382}
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !993, line: 164, baseType: !994)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3245, file: !73, line: 111, baseType: !3384, size: 64, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{null, !3237, !7}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3245, file: !73, line: 112, baseType: !3388, size: 64, offset: 256)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!223, !3237, !3251, !3391, !7, !3393, !3394}
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3245, file: !73, line: 117, baseType: !3396, size: 64, offset: 320)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!223, !3237, !7, !7, !991}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3245, file: !73, line: 119, baseType: !3400, size: 64, offset: 384)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{null, !3237, !7, !7}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3245, file: !73, line: 121, baseType: !3404, size: 64, offset: 448)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!223, !3237, !3407, !1495}
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3409, line: 11, flags: DIFlagFwdDecl)
!3409 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3245, file: !73, line: 122, baseType: !3411, size: 64, offset: 512)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{null, !3237, !3407}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3245, file: !73, line: 123, baseType: !3415, size: 64, offset: 576)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!223, !3237, !3369, !3393, !3394}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3238, file: !73, line: 166, baseType: !991, size: 64, offset: 256)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3238, file: !73, line: 167, baseType: !7, size: 32, offset: 320)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3238, file: !73, line: 168, baseType: !7, size: 32, offset: 352)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3238, file: !73, line: 171, baseType: !3264, size: 64, offset: 384)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3238, file: !73, line: 172, baseType: !72, size: 32, offset: 448)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3238, file: !73, line: 173, baseType: !3424, size: 64, offset: 512)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !73, line: 134, flags: DIFlagFwdDecl)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3238, file: !73, line: 175, baseType: !3237, size: 64, offset: 576)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3238, file: !73, line: 182, baseType: !3382, size: 64, offset: 640)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3238, file: !73, line: 183, baseType: !7, size: 32, offset: 704)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3238, file: !73, line: 184, baseType: !7, size: 32, offset: 736)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3238, file: !73, line: 185, baseType: !2843, size: 128, offset: 768)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3238, file: !73, line: 186, baseType: !1039, size: 192, offset: 896)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3238, file: !73, line: 187, baseType: !3433, offset: 1088)
!3433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !3434)
!3434 = !{!3435}
!3435 = !DISubrange(count: -1)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !2658, file: !52, line: 499, baseType: !1013, size: 128, offset: 4224)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !2658, file: !52, line: 502, baseType: !3438, size: 64, offset: 4352)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3440)
!3440 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !52, line: 502, flags: DIFlagFwdDecl)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !2658, file: !52, line: 504, baseType: !3442, size: 64, offset: 4416)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !2658, file: !52, line: 505, baseType: !984, size: 64, offset: 4480)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !2658, file: !52, line: 510, baseType: !984, size: 64, offset: 4544)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !2658, file: !52, line: 511, baseType: !3446, size: 64, offset: 4608)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3448)
!3448 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !52, line: 511, flags: DIFlagFwdDecl)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !2658, file: !52, line: 513, baseType: !3450, size: 64, offset: 4672)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !52, line: 288, size: 128, elements: !3452)
!3452 = !{!3453, !3454}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3451, file: !52, line: 293, baseType: !7, size: 32)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3451, file: !52, line: 294, baseType: !994, size: 64, offset: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !2658, file: !52, line: 515, baseType: !1013, size: 128, offset: 4736)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !2658, file: !52, line: 526, baseType: !3457, offset: 4864)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3458, line: 5, elements: !1035)
!3458 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !2658, file: !52, line: 528, baseType: !3251, size: 64, offset: 4864)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2658, file: !52, line: 529, baseType: !3264, size: 64, offset: 4928)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !2658, file: !52, line: 534, baseType: !1509, size: 32, offset: 4992)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2658, file: !52, line: 535, baseType: !989, size: 32, offset: 5024)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !2658, file: !52, line: 537, baseType: !1021, offset: 5056)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !2658, file: !52, line: 538, baseType: !1013, size: 128, offset: 5056)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2658, file: !52, line: 540, baseType: !3466, size: 64, offset: 5184)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3468, line: 54, size: 960, elements: !3469)
!3468 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3469 = !{!3470, !3471, !3472, !3473, !3474, !3475, !3476, !3480, !3484, !3485, !3486, !3487, !3491, !3495, !3496}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3467, file: !3468, line: 55, baseType: !1450, size: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3467, file: !3468, line: 56, baseType: !1542, size: 64, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3467, file: !3468, line: 58, baseType: !2740, size: 64, offset: 128)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3467, file: !3468, line: 59, baseType: !2740, size: 64, offset: 192)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3467, file: !3468, line: 60, baseType: !2667, size: 64, offset: 256)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3467, file: !3468, line: 62, baseType: !2970, size: 64, offset: 320)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3467, file: !3468, line: 63, baseType: !3477, size: 64, offset: 384)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!1476, !2957, !2977}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3467, file: !3468, line: 65, baseType: !3481, size: 64, offset: 448)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{null, !3466}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3467, file: !3468, line: 66, baseType: !2979, size: 64, offset: 512)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3467, file: !3468, line: 68, baseType: !2988, size: 64, offset: 576)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3467, file: !3468, line: 70, baseType: !2776, size: 64, offset: 640)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3467, file: !3468, line: 71, baseType: !3488, size: 64, offset: 704)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!2793, !2957}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3467, file: !3468, line: 73, baseType: !3492, size: 64, offset: 768)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{null, !2957, !2332, !2333}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3467, file: !3468, line: 75, baseType: !2983, size: 64, offset: 832)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3467, file: !3468, line: 77, baseType: !3101, size: 64, offset: 896)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2658, file: !52, line: 541, baseType: !2740, size: 64, offset: 5248)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2658, file: !52, line: 543, baseType: !2979, size: 64, offset: 5312)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !2658, file: !52, line: 544, baseType: !3500, size: 64, offset: 5376)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !52, line: 45, flags: DIFlagFwdDecl)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !2658, file: !52, line: 545, baseType: !3503, size: 64, offset: 5440)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !52, line: 47, flags: DIFlagFwdDecl)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !2658, file: !52, line: 547, baseType: !1495, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2658, file: !52, line: 548, baseType: !1495, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !2658, file: !52, line: 549, baseType: !1495, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !2658, file: !52, line: 550, baseType: !1495, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2626, file: !2627, line: 69, baseType: !2667, size: 64, offset: 5952)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2626, file: !2627, line: 70, baseType: !223, size: 32, offset: 6016)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2626, file: !2627, line: 70, baseType: !223, size: 32, offset: 6048)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2626, file: !2627, line: 71, baseType: !3513, size: 64, offset: 6080)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2627, line: 48, size: 808, elements: !3515)
!3515 = !{!3516, !3520}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !3514, file: !2627, line: 49, baseType: !3517, size: 296)
!3517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 296, elements: !3518)
!3518 = !{!3519}
!3519 = !DISubrange(count: 37)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !3514, file: !2627, line: 50, baseType: !3521, size: 512, offset: 296)
!3521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 512, elements: !2702)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2626, file: !2627, line: 75, baseType: !3523, size: 448, offset: 6144)
!3523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !930, line: 124, size: 448, elements: !3524)
!3524 = !{!3525, !3526, !3527}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3523, file: !930, line: 125, baseType: !2247, size: 256)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3523, file: !930, line: 126, baseType: !1692, size: 128, align: 64, offset: 256)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3523, file: !930, line: 129, baseType: !3528, size: 64, offset: 384)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !930, line: 18, flags: DIFlagFwdDecl)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2609, file: !2610, line: 39, baseType: !7, size: 32, offset: 896)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2609, file: !2610, line: 41, baseType: !1021, offset: 928)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2609, file: !2610, line: 42, baseType: !3533, size: 64, offset: 960)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2627, line: 167, size: 8512, elements: !3535)
!3535 = !{!3536, !3537, !3538, !3539, !3540, !3541, !3542, !3551, !3552, !3733, !4428, !4429, !4430, !4431, !4432, !4433, !4436, !4437, !4440, !4441, !4442, !4445}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3534, file: !2627, line: 171, baseType: !223, size: 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3534, file: !2627, line: 172, baseType: !223, size: 32, offset: 32)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3534, file: !2627, line: 173, baseType: !223, size: 32, offset: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3534, file: !2627, line: 176, baseType: !3044, size: 256, offset: 96)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3534, file: !2627, line: 178, baseType: !1001, size: 16, offset: 352)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3534, file: !2627, line: 179, baseType: !1001, size: 16, offset: 368)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3534, file: !2627, line: 186, baseType: !3543, size: 64, offset: 384)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2627, line: 149, size: 256, elements: !3545)
!3545 = !{!3546, !3547, !3548, !3549}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3544, file: !2627, line: 150, baseType: !1692, size: 128, align: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3544, file: !2627, line: 151, baseType: !223, size: 32, offset: 128)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3544, file: !2627, line: 152, baseType: !2625, size: 64, offset: 192)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3544, file: !2627, line: 153, baseType: !3550, offset: 256)
!3550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2625, elements: !3434)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3534, file: !2627, line: 187, baseType: !2626, size: 6592, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3534, file: !2627, line: 189, baseType: !3553, size: 64, offset: 7040)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3555)
!3555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !87, line: 1844, size: 960, elements: !3556)
!3556 = !{!3557, !3659, !3663, !3667, !3671, !3675, !3676, !3680, !3684, !3688, !3694, !3698, !3724, !3728, !3729}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !3555, file: !87, line: 1845, baseType: !3558, size: 64)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!3561, !3562}
!3561 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2610, line: 515, baseType: !7)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2610, line: 203, size: 832, elements: !3564)
!3564 = !{!3565, !3566, !3567, !3568, !3569, !3570, !3571, !3573, !3574, !3575, !3583, !3588, !3589, !3614, !3615, !3616, !3617, !3618, !3658}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3563, file: !2610, line: 204, baseType: !3562, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3563, file: !2610, line: 205, baseType: !3533, size: 64, offset: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3563, file: !2610, line: 206, baseType: !7, size: 32, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3563, file: !2610, line: 210, baseType: !1001, size: 16, offset: 160)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3563, file: !2610, line: 211, baseType: !1001, size: 16, offset: 176)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3563, file: !2610, line: 212, baseType: !1001, size: 16, offset: 192)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3563, file: !2610, line: 213, baseType: !3572, size: 8, offset: 208)
!3572 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2610, line: 58, baseType: !1216)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3563, file: !2610, line: 214, baseType: !1216, size: 8, offset: 216)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3563, file: !2610, line: 215, baseType: !1074, size: 32, offset: 224)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3563, file: !2610, line: 217, baseType: !3576, size: 192, offset: 256)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !3577, line: 37, size: 192, elements: !3578)
!3577 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!3578 = !{!3579, !3580, !3581, !3582}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3576, file: !3577, line: 38, baseType: !2630, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3576, file: !3577, line: 40, baseType: !7, size: 32, offset: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3576, file: !3577, line: 42, baseType: !7, size: 32, offset: 96)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3576, file: !3577, line: 44, baseType: !7, size: 32, offset: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3563, file: !2610, line: 219, baseType: !3584, size: 64, offset: 448)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2610, line: 19, baseType: !3586)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !3562}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3563, file: !2610, line: 221, baseType: !991, size: 64, offset: 512)
!3589 = !DIDerivedType(tag: DW_TAG_member, scope: !3563, file: !2610, line: 240, baseType: !3590, size: 64, offset: 576)
!3590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3563, file: !2610, line: 240, size: 64, elements: !3591)
!3591 = !{!3592}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3590, file: !2610, line: 242, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3595, line: 313, size: 832, elements: !3596)
!3595 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3596 = !{!3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3612}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3594, file: !3595, line: 314, baseType: !3562, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3594, file: !3595, line: 316, baseType: !3576, size: 192, offset: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3594, file: !3595, line: 318, baseType: !1001, size: 16, offset: 256)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3594, file: !3595, line: 319, baseType: !1001, size: 16, offset: 272)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3594, file: !3595, line: 320, baseType: !1001, size: 16, offset: 288)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3594, file: !3595, line: 321, baseType: !1001, size: 16, offset: 304)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3594, file: !3595, line: 323, baseType: !3576, size: 192, offset: 320)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3594, file: !3595, line: 325, baseType: !2247, size: 256, offset: 512)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3594, file: !3595, line: 327, baseType: !3606, size: 64, offset: 768)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !3577, line: 31, size: 128, elements: !3608)
!3608 = !{!3609, !3610, !3611}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !3607, file: !3577, line: 32, baseType: !1331, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !3607, file: !3577, line: 33, baseType: !7, size: 32, offset: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !3607, file: !3577, line: 34, baseType: !7, size: 32, offset: 96)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3594, file: !3595, line: 328, baseType: !3613, offset: 832)
!3613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3607, elements: !3434)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3563, file: !2610, line: 246, baseType: !1001, size: 16, offset: 640)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3563, file: !2610, line: 252, baseType: !1001, size: 16, offset: 656)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3563, file: !2610, line: 254, baseType: !1074, size: 32, offset: 672)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3563, file: !2610, line: 256, baseType: !3606, size: 64, offset: 704)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3563, file: !2610, line: 258, baseType: !3619, size: 64, offset: 768)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3595, line: 682, size: 2368, elements: !3621)
!3621 = !{!3622, !3625, !3626, !3647, !3648, !3649, !3650, !3651, !3656, !3657}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3620, file: !3595, line: 683, baseType: !3623, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1245, line: 117, flags: DIFlagFwdDecl)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3620, file: !3595, line: 684, baseType: !7, size: 32, offset: 64)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3620, file: !3595, line: 686, baseType: !3627, size: 448, offset: 128)
!3627 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3628, line: 26, baseType: !3629)
!3628 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3628, line: 16, size: 448, elements: !3630)
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3636, !3641, !3646}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3629, file: !3628, line: 17, baseType: !1021)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3629, file: !3628, line: 18, baseType: !223, size: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3629, file: !3628, line: 19, baseType: !223, size: 32, offset: 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3629, file: !3628, line: 20, baseType: !1911, size: 64, offset: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3629, file: !3628, line: 22, baseType: !991, size: 64, offset: 128)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3629, file: !3628, line: 23, baseType: !3637, size: 64, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3628, line: 13, baseType: !3639)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!991, !992, !991}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3629, file: !3628, line: 24, baseType: !3642, size: 64, offset: 256)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3628, line: 14, baseType: !3644)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{null, !991, !991}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3629, file: !3628, line: 25, baseType: !1841, size: 128, offset: 320)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3620, file: !3595, line: 687, baseType: !3627, size: 448, offset: 576)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3620, file: !3595, line: 689, baseType: !3627, size: 448, offset: 1024)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3620, file: !3595, line: 690, baseType: !3627, size: 448, offset: 1472)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3620, file: !3595, line: 697, baseType: !1021, offset: 1920)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3620, file: !3595, line: 698, baseType: !3652, size: 128, offset: 1920)
!3652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3595, line: 554, size: 128, elements: !3653)
!3653 = !{!3654, !3655}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3652, file: !3595, line: 555, baseType: !3562, size: 64)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3652, file: !3595, line: 556, baseType: !3562, size: 64, offset: 64)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3620, file: !3595, line: 699, baseType: !2247, size: 256, offset: 2048)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3620, file: !3595, line: 700, baseType: !3528, size: 64, offset: 2304)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3563, file: !2610, line: 265, baseType: !3613, offset: 832)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3555, file: !87, line: 1846, baseType: !3660, size: 64, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{!223, !2608, !1987}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3555, file: !87, line: 1847, baseType: !3664, size: 64, offset: 128)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{null, !3533, !1987}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !3555, file: !87, line: 1848, baseType: !3668, size: 64, offset: 192)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!223, !2608, !2630, !1331, !7}
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3555, file: !87, line: 1849, baseType: !3672, size: 64, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{!223, !2608, !1987, !7, !994}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3555, file: !87, line: 1850, baseType: !3672, size: 64, offset: 320)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !3555, file: !87, line: 1851, baseType: !3677, size: 64, offset: 384)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!7, !3533, !7}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !3555, file: !87, line: 1853, baseType: !3681, size: 64, offset: 448)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{null, !3533}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !3555, file: !87, line: 1854, baseType: !3685, size: 64, offset: 512)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{!223, !3533}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !3555, file: !87, line: 1855, baseType: !3689, size: 64, offset: 576)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 64)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!223, !2608, !3692}
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3693 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !17, line: 51, flags: DIFlagFwdDecl)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !3555, file: !87, line: 1857, baseType: !3695, size: 64, offset: 640)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{null, !2608, !994}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !3555, file: !87, line: 1858, baseType: !3699, size: 64, offset: 704)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DISubroutineType(types: !3701)
!3701 = !{!223, !3533, !2630, !7, !3702, !991}
!3702 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !87, line: 354, baseType: !3703)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!223, !3706, !7, !991}
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !3708, line: 106, size: 512, elements: !3709)
!3708 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!3709 = !{!3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3719, !3720}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3707, file: !3708, line: 107, baseType: !986, size: 64)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3707, file: !3708, line: 108, baseType: !986, size: 64, offset: 64)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !3707, file: !3708, line: 109, baseType: !986, size: 64, offset: 128)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3707, file: !3708, line: 110, baseType: !1217, size: 8, offset: 192)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !3707, file: !3708, line: 111, baseType: !1217, size: 8, offset: 200)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !3707, file: !3708, line: 112, baseType: !1217, size: 8, offset: 208)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3707, file: !3708, line: 113, baseType: !1217, size: 8, offset: 216)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !3707, file: !3708, line: 114, baseType: !3718, size: 32, offset: 224)
!3718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1217, size: 32, elements: !2003)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !3707, file: !3708, line: 115, baseType: !986, size: 64, offset: 256)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3707, file: !3708, line: 116, baseType: !3721, size: 192, offset: 320)
!3721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1217, size: 192, elements: !3722)
!3722 = !{!3723}
!3723 = !DISubrange(count: 24)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3555, file: !87, line: 1860, baseType: !3725, size: 64, offset: 768)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!1476, !3533, !2977}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3555, file: !87, line: 1861, baseType: !1542, size: 64, offset: 832)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !3555, file: !87, line: 1862, baseType: !3730, size: 64, offset: 896)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3732)
!3732 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !87, line: 41, flags: DIFlagFwdDecl)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3534, file: !2627, line: 190, baseType: !3734, size: 64, offset: 7104)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !87, line: 399, size: 14464, elements: !3736)
!3736 = !{!3737, !3953, !4075, !4076, !4079, !4082, !4177, !4178, !4179, !4181, !4182, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4298, !4307, !4308, !4309, !4310, !4311, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !3735, file: !87, line: 400, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !87, line: 130, size: 2176, elements: !3740)
!3740 = !{!3741, !3742, !3745, !3835, !3836, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3850, !3857, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3951, !3952}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3739, file: !87, line: 131, baseType: !3734, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !3739, file: !87, line: 132, baseType: !3743, size: 64, offset: 64)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !87, line: 132, flags: DIFlagFwdDecl)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !3739, file: !87, line: 133, baseType: !3746, size: 64, offset: 128)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !3748, line: 16, size: 4032, elements: !3749)
!3748 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!3749 = !{!3750, !3756, !3763, !3766, !3767, !3768, !3769, !3770, !3771, !3774, !3775, !3790, !3791, !3792, !3793, !3794, !3796, !3797, !3798, !3799, !3802, !3803, !3804, !3805, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820}
!3750 = !DIDerivedType(tag: DW_TAG_member, scope: !3747, file: !3748, line: 17, baseType: !3751, size: 192)
!3751 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3747, file: !3748, line: 17, size: 192, elements: !3752)
!3752 = !{!3753, !3754, !3755}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3751, file: !3748, line: 19, baseType: !1021)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !3751, file: !3748, line: 27, baseType: !1013, size: 128)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3751, file: !3748, line: 32, baseType: !994, size: 64, offset: 128)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3747, file: !3748, line: 38, baseType: !3757, size: 704, offset: 192)
!3757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !930, line: 115, size: 704, elements: !3758)
!3758 = !{!3759, !3760, !3761, !3762}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3757, file: !930, line: 116, baseType: !2247, size: 256)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3757, file: !930, line: 117, baseType: !3149, size: 320, offset: 256)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3757, file: !930, line: 120, baseType: !3528, size: 64, offset: 576)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3757, file: !930, line: 121, baseType: !223, size: 32, offset: 640)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3747, file: !3748, line: 40, baseType: !3764, size: 64, offset: 896)
!3764 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1231, line: 756, baseType: !3765)
!3765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1232, size: 64, elements: !1236)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !3747, file: !3748, line: 45, baseType: !223, size: 32, offset: 960)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !3747, file: !3748, line: 50, baseType: !223, size: 32, offset: 992)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3747, file: !3748, line: 53, baseType: !994, size: 64, offset: 1024)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !3747, file: !3748, line: 59, baseType: !991, size: 64, offset: 1088)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3747, file: !3748, line: 63, baseType: !3734, size: 64, offset: 1152)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3747, file: !3748, line: 65, baseType: !3772, size: 64, offset: 1216)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !87, line: 40, flags: DIFlagFwdDecl)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3747, file: !3748, line: 71, baseType: !991, size: 64, offset: 1280)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !3747, file: !3748, line: 77, baseType: !3776, size: 192, offset: 1344)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !3777, line: 48, size: 192, elements: !3778)
!3777 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!3778 = !{!3779, !3780, !3781, !3782}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3776, file: !3777, line: 52, baseType: !7, size: 32)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3776, file: !3777, line: 57, baseType: !7, size: 32, offset: 32)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !3776, file: !3777, line: 62, baseType: !7, size: 32, offset: 64)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3776, file: !3777, line: 67, baseType: !3783, size: 64, offset: 128)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !3777, line: 20, size: 192, elements: !3785)
!3785 = !{!3786, !3787, !3788, !3789}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3784, file: !3777, line: 24, baseType: !994, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3784, file: !3777, line: 29, baseType: !994, size: 64, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !3784, file: !3777, line: 34, baseType: !994, size: 64, offset: 128)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !3784, file: !3777, line: 39, baseType: !1021, offset: 192)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !3747, file: !3748, line: 83, baseType: !3743, size: 64, offset: 1536)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !3747, file: !3748, line: 89, baseType: !7, size: 32, offset: 1600)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3747, file: !3748, line: 92, baseType: !1001, size: 16, offset: 1632)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !3747, file: !3748, line: 94, baseType: !1001, size: 16, offset: 1648)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !3747, file: !3748, line: 96, baseType: !3795, size: 64, offset: 1664)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !3747, file: !3748, line: 99, baseType: !1021, offset: 1728)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !3747, file: !3748, line: 104, baseType: !1754, size: 320, offset: 1728)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !3747, file: !3748, line: 110, baseType: !1074, size: 32, offset: 2048)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3747, file: !3748, line: 116, baseType: !3800, size: 64, offset: 2112)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !3748, line: 9, flags: DIFlagFwdDecl)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !3747, file: !3748, line: 122, baseType: !3800, size: 64, offset: 2176)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !3747, file: !3748, line: 125, baseType: !994, size: 64, offset: 2240)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !3747, file: !3748, line: 127, baseType: !994, size: 64, offset: 2304)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !3747, file: !3748, line: 130, baseType: !3806, size: 448, offset: 2368)
!3806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 448, elements: !3807)
!3807 = !{!3808}
!3808 = !DISubrange(count: 7)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3747, file: !3748, line: 133, baseType: !7, size: 32, offset: 2816)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !3747, file: !3748, line: 135, baseType: !7, size: 32, offset: 2848)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !3747, file: !3748, line: 141, baseType: !1074, size: 32, offset: 2880)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !3747, file: !3748, line: 145, baseType: !1074, size: 32, offset: 2912)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !3747, file: !3748, line: 148, baseType: !1551, size: 128, offset: 2944)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !3747, file: !3748, line: 150, baseType: !1551, size: 128, offset: 3072)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3747, file: !3748, line: 152, baseType: !2661, size: 512, offset: 3200)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !3747, file: !3748, line: 155, baseType: !994, size: 64, offset: 3712)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !3747, file: !3748, line: 157, baseType: !994, size: 64, offset: 3776)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !3747, file: !3748, line: 159, baseType: !994, size: 64, offset: 3840)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !3747, file: !3748, line: 175, baseType: !1013, size: 128, offset: 3904)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !3747, file: !3748, line: 182, baseType: !3821, offset: 4032)
!3821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3822, elements: !3434)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !3823, line: 16, size: 576, elements: !3824)
!3823 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!3824 = !{!3825, !3827, !3828, !3829, !3830, !3831, !3832, !3834}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !3822, file: !3823, line: 17, baseType: !3826, size: 32)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 32, elements: !2043)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !3822, file: !3823, line: 18, baseType: !1004, size: 16, offset: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !3822, file: !3823, line: 19, baseType: !1216, size: 8, offset: 48)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !3822, file: !3823, line: 20, baseType: !1216, size: 8, offset: 56)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !3822, file: !3823, line: 21, baseType: !2312, size: 128, offset: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !3822, file: !3823, line: 23, baseType: !1695, size: 64, offset: 192)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !3822, file: !3823, line: 24, baseType: !3833, size: 64, offset: 256)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !3822, file: !3823, line: 25, baseType: !2247, size: 256, offset: 320)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !3739, file: !87, line: 135, baseType: !7, size: 32, offset: 192)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !3739, file: !87, line: 136, baseType: !3837, size: 32, offset: 224)
!3837 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !87, line: 66, baseType: !990)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3739, file: !87, line: 138, baseType: !223, size: 32, offset: 256)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !3739, file: !87, line: 139, baseType: !223, size: 32, offset: 288)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !3739, file: !87, line: 142, baseType: !7, size: 32, offset: 320)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !3739, file: !87, line: 143, baseType: !2630, size: 64, offset: 384)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !3739, file: !87, line: 145, baseType: !3562, size: 64, offset: 448)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !3739, file: !87, line: 146, baseType: !3562, size: 64, offset: 512)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !3739, file: !87, line: 148, baseType: !1013, size: 128, offset: 576)
!3845 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !87, line: 157, baseType: !3846, size: 128, offset: 704)
!3846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !87, line: 157, size: 128, elements: !3847)
!3847 = !{!3848, !3849}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3846, file: !87, line: 158, baseType: !1551, size: 128)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3846, file: !87, line: 159, baseType: !1013, size: 128)
!3850 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !87, line: 167, baseType: !3851, size: 192, offset: 832)
!3851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !87, line: 167, size: 192, elements: !3852)
!3852 = !{!3853, !3854, !3855, !3856}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3851, file: !87, line: 168, baseType: !1098, size: 192, align: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3851, file: !87, line: 169, baseType: !3607, size: 128)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3851, file: !87, line: 170, baseType: !991, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3851, file: !87, line: 171, baseType: !223, size: 32)
!3857 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !87, line: 180, baseType: !3858, size: 256, offset: 1024)
!3858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !87, line: 180, size: 256, elements: !3859)
!3859 = !{!3860, !3895}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3858, file: !87, line: 184, baseType: !3861, size: 192)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3858, file: !87, line: 181, size: 192, elements: !3862)
!3862 = !{!3863, !3893}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3861, file: !87, line: 182, baseType: !3864, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3866, line: 73, size: 448, elements: !3867)
!3866 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3867 = !{!3868, !3869, !3882, !3887, !3892}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3865, file: !3866, line: 74, baseType: !3734, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3865, file: !3866, line: 75, baseType: !3870, size: 64, offset: 64)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3866, line: 99, size: 704, elements: !3872)
!3872 = !{!3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3871, file: !3866, line: 100, baseType: !1043, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3871, file: !3866, line: 101, baseType: !1074, size: 32, offset: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3871, file: !3866, line: 102, baseType: !1074, size: 32, offset: 96)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3871, file: !3866, line: 105, baseType: !1021, offset: 128)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3871, file: !3866, line: 107, baseType: !1001, size: 16, offset: 128)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3871, file: !3866, line: 109, baseType: !2843, size: 128, offset: 192)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3871, file: !3866, line: 110, baseType: !3864, size: 64, offset: 320)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3871, file: !3866, line: 111, baseType: !1547, size: 64, offset: 384)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3871, file: !3866, line: 113, baseType: !2247, size: 256, offset: 448)
!3882 = !DIDerivedType(tag: DW_TAG_member, scope: !3865, file: !3866, line: 83, baseType: !3883, size: 128, offset: 128)
!3883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3865, file: !3866, line: 83, size: 128, elements: !3884)
!3884 = !{!3885, !3886}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3883, file: !3866, line: 84, baseType: !1013, size: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3883, file: !3866, line: 85, baseType: !3623, size: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, scope: !3865, file: !3866, line: 87, baseType: !3888, size: 128, offset: 256)
!3888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3865, file: !3866, line: 87, size: 128, elements: !3889)
!3889 = !{!3890, !3891}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3888, file: !3866, line: 88, baseType: !1551, size: 128)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3888, file: !3866, line: 89, baseType: !1692, size: 128, align: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3865, file: !3866, line: 92, baseType: !7, size: 32, offset: 384)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3861, file: !87, line: 183, baseType: !3894, size: 128, offset: 64)
!3894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 128, elements: !2043)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3858, file: !87, line: 190, baseType: !3896, size: 256)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3858, file: !87, line: 186, size: 256, elements: !3897)
!3897 = !{!3898, !3899, !3900}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3896, file: !87, line: 187, baseType: !7, size: 32)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3896, file: !87, line: 188, baseType: !1013, size: 128, offset: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3896, file: !87, line: 189, baseType: !3901, size: 64, offset: 192)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !87, line: 62, baseType: !3903)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{null, !3738, !3572}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !3739, file: !87, line: 193, baseType: !3533, size: 64, offset: 1280)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3739, file: !87, line: 194, baseType: !2625, size: 64, offset: 1344)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !3739, file: !87, line: 200, baseType: !984, size: 64, offset: 1408)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !3739, file: !87, line: 202, baseType: !984, size: 64, offset: 1472)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !3739, file: !87, line: 212, baseType: !1001, size: 16, offset: 1536)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !3739, file: !87, line: 218, baseType: !1001, size: 16, offset: 1552)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !3739, file: !87, line: 221, baseType: !1001, size: 16, offset: 1568)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !3739, file: !87, line: 229, baseType: !1001, size: 16, offset: 1584)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3739, file: !87, line: 230, baseType: !1001, size: 16, offset: 1600)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3739, file: !87, line: 232, baseType: !86, size: 32, offset: 1632)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3739, file: !87, line: 233, baseType: !1070, size: 32, offset: 1664)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3739, file: !87, line: 235, baseType: !7, size: 32, offset: 1696)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3739, file: !87, line: 236, baseType: !994, size: 64, offset: 1728)
!3918 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !87, line: 238, baseType: !3919, size: 256, offset: 1792)
!3919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !87, line: 238, size: 256, elements: !3920)
!3920 = !{!3921, !3950}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3919, file: !87, line: 239, baseType: !3922, size: 256)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3923, line: 23, size: 256, elements: !3924)
!3923 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3924 = !{!3925, !3947, !3949}
!3925 = !DIDerivedType(tag: DW_TAG_member, scope: !3922, file: !3923, line: 24, baseType: !3926, size: 128)
!3926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3922, file: !3923, line: 24, size: 128, elements: !3927)
!3927 = !{!3928, !3940}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3926, file: !3923, line: 25, baseType: !3929, size: 128)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3930, line: 58, size: 128, elements: !3931)
!3930 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3931 = !{!3932, !3933, !3938, !3939}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3929, file: !3930, line: 59, baseType: !1686, size: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, scope: !3929, file: !3930, line: 60, baseType: !3934, size: 32, offset: 64)
!3934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3929, file: !3930, line: 60, size: 32, elements: !3935)
!3935 = !{!3936, !3937}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3934, file: !3930, line: 61, baseType: !7, size: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3934, file: !3930, line: 62, baseType: !1074, size: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3929, file: !3930, line: 65, baseType: !1740, size: 16, offset: 96)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3929, file: !3930, line: 65, baseType: !1740, size: 16, offset: 112)
!3940 = !DIDerivedType(tag: DW_TAG_member, scope: !3926, file: !3923, line: 26, baseType: !3941, size: 128)
!3941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3926, file: !3923, line: 26, size: 128, elements: !3942)
!3942 = !{!3943, !3944, !3945, !3946}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3941, file: !3923, line: 27, baseType: !1686, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3941, file: !3923, line: 28, baseType: !7, size: 32, offset: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3941, file: !3923, line: 30, baseType: !1740, size: 16, offset: 96)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3941, file: !3923, line: 30, baseType: !1740, size: 16, offset: 112)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3922, file: !3923, line: 34, baseType: !3948, size: 64, offset: 128)
!3948 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3923, line: 17, baseType: !2802)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3922, file: !3923, line: 35, baseType: !991, size: 64, offset: 192)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3919, file: !87, line: 240, baseType: !984, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !3739, file: !87, line: 246, baseType: !3901, size: 64, offset: 2048)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !3739, file: !87, line: 247, baseType: !991, size: 64, offset: 2112)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !3735, file: !87, line: 401, baseType: !3954, size: 64, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !93, line: 101, size: 4992, elements: !3956)
!3956 = !{!3957, !4069, !4070, !4071, !4072, !4073}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3955, file: !93, line: 103, baseType: !3958, size: 64)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !93, line: 66, size: 2240, elements: !3960)
!3960 = !{!3961, !3962, !4044, !4045, !4046, !4059, !4060, !4061, !4063, !4064, !4068}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3959, file: !93, line: 69, baseType: !3623, size: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3959, file: !93, line: 72, baseType: !3963, size: 1408, offset: 64)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !93, line: 29, size: 1408, elements: !3964)
!3964 = !{!3965, !3969, !3973, !3977, !3981, !3985, !3989, !3993, !3998, !4002, !4006, !4012, !4016, !4017, !4021, !4025, !4029, !4033, !4034, !4038, !4039, !4043}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3963, file: !93, line: 30, baseType: !3966, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!223, !3734, !3958}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3963, file: !93, line: 31, baseType: !3970, size: 64, offset: 64)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{null, !3954}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3963, file: !93, line: 32, baseType: !3974, size: 64, offset: 128)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!223, !3746, !7}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3963, file: !93, line: 33, baseType: !3978, size: 64, offset: 192)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{null, !3746, !7}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3963, file: !93, line: 34, baseType: !3982, size: 64, offset: 256)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{null, !3746}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3963, file: !93, line: 36, baseType: !3986, size: 64, offset: 320)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!1495, !3734, !3738, !3562}
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3963, file: !93, line: 37, baseType: !3990, size: 64, offset: 384)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!1495, !3746, !3562, !7}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3963, file: !93, line: 38, baseType: !3994, size: 64, offset: 448)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!223, !3734, !3997, !3562}
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3963, file: !93, line: 39, baseType: !3999, size: 64, offset: 512)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !3734, !3738, !92}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3963, file: !93, line: 40, baseType: !4003, size: 64, offset: 576)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{null, !3734, !3738, !3738}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3963, file: !93, line: 41, baseType: !4007, size: 64, offset: 640)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{null, !7, !4010}
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !93, line: 26, flags: DIFlagFwdDecl)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3963, file: !93, line: 42, baseType: !4013, size: 64, offset: 704)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{null, !3738}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3963, file: !93, line: 43, baseType: !4013, size: 64, offset: 768)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3963, file: !93, line: 44, baseType: !4018, size: 64, offset: 832)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !3746, !1016, !1495}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3963, file: !93, line: 45, baseType: !4022, size: 64, offset: 896)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!3738, !3746}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3963, file: !93, line: 46, baseType: !4026, size: 64, offset: 960)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!1495, !3746}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3963, file: !93, line: 47, baseType: !4030, size: 64, offset: 1024)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{null, !3738, !984}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3963, file: !93, line: 48, baseType: !4013, size: 64, offset: 1088)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3963, file: !93, line: 49, baseType: !4035, size: 64, offset: 1152)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!3738, !3734, !3738}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3963, file: !93, line: 50, baseType: !4035, size: 64, offset: 1216)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3963, file: !93, line: 51, baseType: !4040, size: 64, offset: 1280)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{null, !3864}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3963, file: !93, line: 52, baseType: !4040, size: 64, offset: 1344)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3959, file: !93, line: 74, baseType: !1645, size: 64, offset: 1472)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3959, file: !93, line: 75, baseType: !1645, size: 64, offset: 1536)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3959, file: !93, line: 76, baseType: !4047, size: 64, offset: 1600)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !93, line: 57, size: 256, elements: !4049)
!4049 = !{!4050, !4051, !4055}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4048, file: !93, line: 58, baseType: !2729, size: 128)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4048, file: !93, line: 59, baseType: !4052, size: 64, offset: 128)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!1717, !3954, !1476}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4048, file: !93, line: 60, baseType: !4056, size: 64, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!1717, !3954, !1450, !1645}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3959, file: !93, line: 77, baseType: !1450, size: 64, offset: 1664)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3959, file: !93, line: 78, baseType: !1450, size: 64, offset: 1728)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3959, file: !93, line: 79, baseType: !4062, size: 32, offset: 1792)
!4062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3959, file: !93, line: 80, baseType: !1542, size: 64, offset: 1856)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3959, file: !93, line: 87, baseType: !4065, size: 176, offset: 1920)
!4065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 176, elements: !4066)
!4066 = !{!4067}
!4067 = !DISubrange(count: 22)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3959, file: !93, line: 88, baseType: !1013, size: 128, offset: 2112)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3955, file: !93, line: 104, baseType: !991, size: 64, offset: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3955, file: !93, line: 105, baseType: !2661, size: 512, offset: 128)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3955, file: !93, line: 106, baseType: !1039, size: 192, offset: 640)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3955, file: !93, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3955, file: !93, line: 108, baseType: !4074, size: 4096, offset: 896)
!4074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1547, size: 4096, elements: !2702)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !3735, file: !87, line: 403, baseType: !2637, size: 128, offset: 128)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3735, file: !87, line: 405, baseType: !4077, size: 64, offset: 256)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !87, line: 43, flags: DIFlagFwdDecl)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !3735, file: !87, line: 406, baseType: !4080, size: 64, offset: 320)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !87, line: 42, flags: DIFlagFwdDecl)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !3735, file: !87, line: 408, baseType: !4083, size: 64, offset: 384)
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4085)
!4085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !3748, line: 290, size: 960, elements: !4086)
!4086 = !{!4087, !4097, !4098, !4102, !4106, !4110, !4114, !4115, !4119, !4120, !4166, !4170, !4171, !4172, !4173}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !4085, file: !3748, line: 294, baseType: !4088, size: 64)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{!3572, !3746, !4091}
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4093)
!4093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !3748, line: 277, size: 128, elements: !4094)
!4094 = !{!4095, !4096}
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !4093, file: !3748, line: 278, baseType: !3738, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4093, file: !3748, line: 279, baseType: !1495, size: 8, offset: 64)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !4085, file: !3748, line: 304, baseType: !3982, size: 64, offset: 64)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !4085, file: !3748, line: 312, baseType: !4099, size: 64, offset: 128)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!1495, !3734}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !4085, file: !3748, line: 317, baseType: !4103, size: 64, offset: 192)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{null, !3734}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4085, file: !3748, line: 322, baseType: !4107, size: 64, offset: 256)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!99, !3738, !1495}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4085, file: !3748, line: 327, baseType: !4111, size: 64, offset: 320)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!223, !3746}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4085, file: !3748, line: 332, baseType: !4013, size: 64, offset: 384)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !4085, file: !3748, line: 339, baseType: !4116, size: 64, offset: 448)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!223, !3746, !991, !7}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !4085, file: !3748, line: 343, baseType: !3978, size: 64, offset: 512)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !4085, file: !3748, line: 352, baseType: !4121, size: 64, offset: 576)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!223, !4124, !3738, !7, !7}
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !3748, line: 249, size: 2304, elements: !4126)
!4126 = !{!4127, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4161, !4162, !4164, !4165}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4125, file: !3748, line: 250, baseType: !4128, size: 384)
!4128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4129, size: 384, elements: !1563)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !3748, line: 195, size: 128, elements: !4130)
!4130 = !{!4131, !4132, !4133}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !4129, file: !3748, line: 196, baseType: !3394, size: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !4129, file: !3748, line: 197, baseType: !7, size: 32, offset: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !4129, file: !3748, line: 198, baseType: !7, size: 32, offset: 96)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !4125, file: !3748, line: 251, baseType: !7, size: 32, offset: 384)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4125, file: !3748, line: 252, baseType: !4083, size: 64, offset: 448)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !4125, file: !3748, line: 253, baseType: !7, size: 32, offset: 512)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !4125, file: !3748, line: 254, baseType: !7, size: 32, offset: 544)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !4125, file: !3748, line: 255, baseType: !7, size: 32, offset: 576)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4125, file: !3748, line: 256, baseType: !7, size: 32, offset: 608)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !4125, file: !3748, line: 257, baseType: !223, size: 32, offset: 640)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4125, file: !3748, line: 258, baseType: !7, size: 32, offset: 672)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4125, file: !3748, line: 259, baseType: !7, size: 32, offset: 704)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4125, file: !3748, line: 260, baseType: !991, size: 64, offset: 768)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !4125, file: !3748, line: 261, baseType: !1074, size: 32, offset: 832)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !4125, file: !3748, line: 263, baseType: !4146, size: 512, offset: 896)
!4146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !3777, line: 97, size: 512, elements: !4147)
!4147 = !{!4148, !4149, !4150, !4151, !4152, !4158, !4159, !4160}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !4146, file: !3777, line: 101, baseType: !3776, size: 192)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !4146, file: !3777, line: 109, baseType: !3394, size: 64, offset: 192)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !4146, file: !3777, line: 115, baseType: !7, size: 32, offset: 256)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !4146, file: !3777, line: 120, baseType: !1074, size: 32, offset: 288)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4146, file: !3777, line: 125, baseType: !4153, size: 64, offset: 320)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !3777, line: 76, size: 192, elements: !4155)
!4155 = !{!4156, !4157}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !4154, file: !3777, line: 80, baseType: !1074, size: 32)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4154, file: !3777, line: 85, baseType: !1841, size: 128, offset: 64)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !4146, file: !3777, line: 130, baseType: !1074, size: 32, offset: 384)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !4146, file: !3777, line: 135, baseType: !1495, size: 8, offset: 416)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !4146, file: !3777, line: 141, baseType: !7, size: 32, offset: 448)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !4125, file: !3748, line: 264, baseType: !4146, size: 512, offset: 1408)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !4125, file: !3748, line: 265, baseType: !4163, size: 64, offset: 1920)
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !4125, file: !3748, line: 267, baseType: !1039, size: 192, offset: 1984)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !4125, file: !3748, line: 268, baseType: !1013, size: 128, offset: 2176)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !4085, file: !3748, line: 357, baseType: !4167, size: 64, offset: 640)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{null, !4124, !3738, !7}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !4085, file: !3748, line: 363, baseType: !4013, size: 64, offset: 704)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !4085, file: !3748, line: 369, baseType: !4013, size: 64, offset: 768)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !4085, file: !3748, line: 374, baseType: !4099, size: 64, offset: 832)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !4085, file: !3748, line: 380, baseType: !4174, size: 64, offset: 896)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!223, !4124}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !3735, file: !87, line: 411, baseType: !3743, size: 64, offset: 448)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3735, file: !87, line: 413, baseType: !7, size: 32, offset: 512)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !3735, file: !87, line: 416, baseType: !4180, size: 64, offset: 576)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3735, file: !87, line: 417, baseType: !7, size: 32, offset: 640)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3735, file: !87, line: 419, baseType: !4183, size: 64, offset: 704)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !104, line: 165, size: 4672, elements: !4185)
!4185 = !{!4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4236, !4237, !4238, !4239, !4241, !4242}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4184, file: !104, line: 166, baseType: !984, size: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4184, file: !104, line: 167, baseType: !1098, size: 192, align: 64, offset: 64)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !4184, file: !104, line: 168, baseType: !1013, size: 128, offset: 256)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4184, file: !104, line: 169, baseType: !994, size: 64, offset: 384)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !4184, file: !104, line: 170, baseType: !994, size: 64, offset: 448)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4184, file: !104, line: 172, baseType: !2947, size: 32, offset: 512)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4184, file: !104, line: 173, baseType: !7, size: 32, offset: 544)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !4184, file: !104, line: 174, baseType: !7, size: 32, offset: 576)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !4184, file: !104, line: 175, baseType: !7, size: 32, offset: 608)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !4184, file: !104, line: 175, baseType: !7, size: 32, offset: 640)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !4184, file: !104, line: 181, baseType: !1043, size: 64, offset: 704)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !4184, file: !104, line: 183, baseType: !4198, size: 2688, offset: 768)
!4198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !104, line: 107, size: 2688, elements: !4199)
!4199 = !{!4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4229, !4230, !4231, !4232, !4233, !4234, !4235}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !4198, file: !104, line: 108, baseType: !4183, size: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4198, file: !104, line: 110, baseType: !994, size: 64, offset: 64)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !4198, file: !104, line: 111, baseType: !994, size: 64, offset: 128)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !4198, file: !104, line: 113, baseType: !1013, size: 128, offset: 192)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !4198, file: !104, line: 114, baseType: !1013, size: 128, offset: 320)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !4198, file: !104, line: 115, baseType: !1013, size: 128, offset: 448)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !4198, file: !104, line: 116, baseType: !1013, size: 128, offset: 576)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4198, file: !104, line: 117, baseType: !1021, offset: 704)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4198, file: !104, line: 119, baseType: !4209, size: 256, offset: 704)
!4209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4210, size: 256, elements: !2003)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !4211, line: 97, size: 64, elements: !4212)
!4211 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!4212 = !{!4213}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4210, file: !4211, line: 98, baseType: !1049, size: 64)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !4198, file: !104, line: 121, baseType: !994, size: 64, offset: 960)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !4198, file: !104, line: 123, baseType: !994, size: 64, offset: 1024)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !4198, file: !104, line: 124, baseType: !994, size: 64, offset: 1088)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !4198, file: !104, line: 125, baseType: !994, size: 64, offset: 1152)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !4198, file: !104, line: 126, baseType: !994, size: 64, offset: 1216)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !4198, file: !104, line: 127, baseType: !994, size: 64, offset: 1280)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !4198, file: !104, line: 135, baseType: !994, size: 64, offset: 1344)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !4198, file: !104, line: 136, baseType: !994, size: 64, offset: 1408)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !4198, file: !104, line: 138, baseType: !4223, size: 128, offset: 1472)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !4224, line: 76, size: 128, elements: !4225)
!4224 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!4225 = !{!4226, !4227, !4228}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4223, file: !4224, line: 78, baseType: !4210, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4223, file: !4224, line: 80, baseType: !7, size: 32, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4223, file: !4224, line: 81, baseType: !1167, offset: 96)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !4198, file: !104, line: 139, baseType: !223, size: 32, offset: 1600)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !4198, file: !104, line: 140, baseType: !103, size: 32, offset: 1632)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !4198, file: !104, line: 142, baseType: !1021, offset: 1664)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4198, file: !104, line: 143, baseType: !1013, size: 128, offset: 1664)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !4198, file: !104, line: 144, baseType: !3757, size: 704, offset: 1792)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !4198, file: !104, line: 146, baseType: !994, size: 64, offset: 2496)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !4198, file: !104, line: 148, baseType: !1013, size: 128, offset: 2560)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !4184, file: !104, line: 184, baseType: !1013, size: 128, offset: 3456)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !4184, file: !104, line: 190, baseType: !1841, size: 128, offset: 3584)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4184, file: !104, line: 192, baseType: !2957, size: 64, offset: 3712)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4184, file: !104, line: 193, baseType: !4240, size: 512, offset: 3776)
!4240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 512, elements: !2702)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4184, file: !104, line: 194, baseType: !2957, size: 64, offset: 4288)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !4184, file: !104, line: 196, baseType: !3149, size: 320, offset: 4352)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !3735, file: !87, line: 425, baseType: !991, size: 64, offset: 768)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !3735, file: !87, line: 430, baseType: !994, size: 64, offset: 832)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !3735, file: !87, line: 436, baseType: !1074, size: 32, offset: 896)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3735, file: !87, line: 442, baseType: !223, size: 32, offset: 928)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !3735, file: !87, line: 447, baseType: !992, size: 32, offset: 960)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !3735, file: !87, line: 449, baseType: !1021, offset: 992)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3735, file: !87, line: 454, baseType: !2661, size: 512, offset: 1024)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !3735, file: !87, line: 459, baseType: !2667, size: 64, offset: 1536)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !3735, file: !87, line: 462, baseType: !4252, size: 128, offset: 1600)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2627, line: 159, size: 128, elements: !4253)
!4253 = !{!4254, !4283, !4284, !4285, !4286}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !4252, file: !2627, line: 160, baseType: !4255, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4257)
!4257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !87, line: 1664, size: 320, elements: !4258)
!4258 = !{!4259, !4273, !4274, !4277, !4282}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !4257, file: !87, line: 1665, baseType: !4260, size: 64)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !87, line: 1660, baseType: !4262)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!3572, !4264}
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !87, line: 1651, size: 320, elements: !4266)
!4266 = !{!4267, !4268, !4269, !4270, !4271, !4272}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !4265, file: !87, line: 1652, baseType: !991, size: 64)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !4265, file: !87, line: 1653, baseType: !991, size: 64, offset: 64)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !4265, file: !87, line: 1654, baseType: !2630, size: 64, offset: 128)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !4265, file: !87, line: 1655, baseType: !7, size: 32, offset: 192)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4265, file: !87, line: 1656, baseType: !1001, size: 16, offset: 224)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !4265, file: !87, line: 1657, baseType: !1450, size: 64, offset: 256)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !4257, file: !87, line: 1666, baseType: !4260, size: 64, offset: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !4257, file: !87, line: 1667, baseType: !4275, size: 64, offset: 128)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !87, line: 1661, baseType: !4014)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !4257, file: !87, line: 1668, baseType: !4278, size: 64, offset: 192)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !87, line: 1662, baseType: !4280)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{null, !3738, !7}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4257, file: !87, line: 1669, baseType: !1450, size: 64, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4252, file: !2627, line: 161, baseType: !1218, size: 8, offset: 64)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !4252, file: !2627, line: 162, baseType: !1218, size: 8, offset: 72)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !4252, file: !2627, line: 163, baseType: !1218, size: 8, offset: 80)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !4252, file: !2627, line: 164, baseType: !1218, size: 8, offset: 88)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3735, file: !87, line: 466, baseType: !2957, size: 64, offset: 1728)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !3735, file: !87, line: 467, baseType: !66, size: 32, offset: 1792)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !3735, file: !87, line: 468, baseType: !7, size: 32, offset: 1824)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !3735, file: !87, line: 474, baseType: !994, size: 64, offset: 1856)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !3735, file: !87, line: 476, baseType: !7, size: 32, offset: 1920)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !3735, file: !87, line: 477, baseType: !7, size: 32, offset: 1952)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !3735, file: !87, line: 484, baseType: !7, size: 32, offset: 1984)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !3735, file: !87, line: 485, baseType: !223, size: 32, offset: 2016)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !3735, file: !87, line: 487, baseType: !4296, size: 64, offset: 2048)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !87, line: 44, flags: DIFlagFwdDecl)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !3735, file: !87, line: 488, baseType: !4299, size: 5120, offset: 2112)
!4299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4300, size: 5120, elements: !3376)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2610, line: 540, size: 320, elements: !4301)
!4301 = !{!4302, !4303, !4304, !4305, !4306}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !4300, file: !2610, line: 541, baseType: !984, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4300, file: !2610, line: 542, baseType: !984, size: 64, offset: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4300, file: !2610, line: 543, baseType: !984, size: 64, offset: 128)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !4300, file: !2610, line: 544, baseType: !989, size: 32, offset: 192)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4300, file: !2610, line: 545, baseType: !984, size: 64, offset: 256)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3735, file: !87, line: 490, baseType: !3149, size: 320, offset: 7232)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !3735, file: !87, line: 491, baseType: !2247, size: 256, offset: 7552)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !3735, file: !87, line: 493, baseType: !1074, size: 32, offset: 7808)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3735, file: !87, line: 495, baseType: !1013, size: 128, offset: 7872)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !3735, file: !87, line: 502, baseType: !4312, size: 896, offset: 8000)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !87, line: 321, size: 896, elements: !4313)
!4313 = !{!4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !4312, file: !87, line: 322, baseType: !994, size: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !4312, file: !87, line: 323, baseType: !994, size: 64, offset: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !4312, file: !87, line: 324, baseType: !994, size: 64, offset: 128)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !4312, file: !87, line: 326, baseType: !7, size: 32, offset: 192)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !4312, file: !87, line: 327, baseType: !7, size: 32, offset: 224)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !4312, file: !87, line: 328, baseType: !7, size: 32, offset: 256)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !4312, file: !87, line: 329, baseType: !7, size: 32, offset: 288)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4312, file: !87, line: 330, baseType: !7, size: 32, offset: 320)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !4312, file: !87, line: 331, baseType: !7, size: 32, offset: 352)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !4312, file: !87, line: 332, baseType: !7, size: 32, offset: 384)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !4312, file: !87, line: 333, baseType: !7, size: 32, offset: 416)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !4312, file: !87, line: 334, baseType: !7, size: 32, offset: 448)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !4312, file: !87, line: 335, baseType: !7, size: 32, offset: 480)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !4312, file: !87, line: 336, baseType: !7, size: 32, offset: 512)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !4312, file: !87, line: 337, baseType: !7, size: 32, offset: 544)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !4312, file: !87, line: 338, baseType: !7, size: 32, offset: 576)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !4312, file: !87, line: 339, baseType: !7, size: 32, offset: 608)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !4312, file: !87, line: 340, baseType: !7, size: 32, offset: 640)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !4312, file: !87, line: 341, baseType: !7, size: 32, offset: 672)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !4312, file: !87, line: 342, baseType: !7, size: 32, offset: 704)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !4312, file: !87, line: 344, baseType: !1001, size: 16, offset: 736)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !4312, file: !87, line: 345, baseType: !1001, size: 16, offset: 752)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !4312, file: !87, line: 346, baseType: !1001, size: 16, offset: 768)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !4312, file: !87, line: 348, baseType: !1218, size: 8, offset: 784)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !4312, file: !87, line: 349, baseType: !1218, size: 8, offset: 792)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !4312, file: !87, line: 350, baseType: !1218, size: 8, offset: 800)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !4312, file: !87, line: 351, baseType: !115, size: 32, offset: 832)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !3735, file: !87, line: 504, baseType: !7, size: 32, offset: 8896)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !3735, file: !87, line: 534, baseType: !7, size: 32, offset: 8928)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !3735, file: !87, line: 535, baseType: !7, size: 32, offset: 8960)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3735, file: !87, line: 536, baseType: !223, size: 32, offset: 8992)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !3735, file: !87, line: 537, baseType: !1039, size: 192, offset: 9024)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3735, file: !87, line: 544, baseType: !3772, size: 64, offset: 9216)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !3735, file: !87, line: 546, baseType: !1013, size: 128, offset: 9280)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !3735, file: !87, line: 547, baseType: !1021, offset: 9408)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !3735, file: !87, line: 548, baseType: !3757, size: 704, offset: 9408)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3735, file: !87, line: 550, baseType: !1039, size: 192, offset: 10112)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !3735, file: !87, line: 551, baseType: !1039, size: 192, offset: 10304)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !3735, file: !87, line: 557, baseType: !1013, size: 128, offset: 10496)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !3735, file: !87, line: 558, baseType: !1021, offset: 10624)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !3735, file: !87, line: 560, baseType: !223, size: 32, offset: 10624)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !3735, file: !87, line: 563, baseType: !4356, size: 256, offset: 10688)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !4357, line: 18, size: 256, elements: !4358)
!4357 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!4358 = !{!4359, !4360, !4361, !4362}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !4356, file: !4357, line: 19, baseType: !2957, size: 64)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4356, file: !4357, line: 20, baseType: !223, size: 32, offset: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4356, file: !4357, line: 21, baseType: !3734, size: 64, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4356, file: !4357, line: 22, baseType: !4363, size: 64, offset: 192)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 64)
!4364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4365)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !4357, line: 10, size: 256, elements: !4366)
!4366 = !{!4367, !4408, !4412, !4416}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !4365, file: !4357, line: 11, baseType: !4368, size: 64)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!223, !4371}
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !4373, line: 22, size: 1280, elements: !4374)
!4373 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !{!4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !4372, file: !4373, line: 23, baseType: !2060, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !4372, file: !4373, line: 24, baseType: !990, size: 32, offset: 32)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !4372, file: !4373, line: 25, baseType: !990, size: 32, offset: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !4372, file: !4373, line: 28, baseType: !990, size: 32, offset: 96)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4372, file: !4373, line: 29, baseType: !986, size: 64, offset: 128)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !4372, file: !4373, line: 30, baseType: !986, size: 64, offset: 192)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !4372, file: !4373, line: 31, baseType: !990, size: 32, offset: 256)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !4372, file: !4373, line: 32, baseType: !990, size: 32, offset: 288)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !4372, file: !4373, line: 33, baseType: !990, size: 32, offset: 320)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !4372, file: !4373, line: 34, baseType: !990, size: 32, offset: 352)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !4372, file: !4373, line: 35, baseType: !986, size: 64, offset: 384)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !4372, file: !4373, line: 38, baseType: !990, size: 32, offset: 448)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !4372, file: !4373, line: 40, baseType: !990, size: 32, offset: 480)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !4372, file: !4373, line: 41, baseType: !990, size: 32, offset: 512)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !4372, file: !4373, line: 42, baseType: !990, size: 32, offset: 544)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !4372, file: !4373, line: 43, baseType: !986, size: 64, offset: 576)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !4372, file: !4373, line: 44, baseType: !986, size: 64, offset: 640)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4372, file: !4373, line: 46, baseType: !990, size: 32, offset: 704)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4372, file: !4373, line: 47, baseType: !990, size: 32, offset: 736)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !4372, file: !4373, line: 48, baseType: !986, size: 64, offset: 768)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !4372, file: !4373, line: 49, baseType: !990, size: 32, offset: 832)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !4372, file: !4373, line: 51, baseType: !990, size: 32, offset: 864)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !4372, file: !4373, line: 52, baseType: !990, size: 32, offset: 896)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !4372, file: !4373, line: 53, baseType: !990, size: 32, offset: 928)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !4372, file: !4373, line: 54, baseType: !990, size: 32, offset: 960)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4372, file: !4373, line: 55, baseType: !990, size: 32, offset: 992)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !4372, file: !4373, line: 56, baseType: !990, size: 32, offset: 1024)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !4372, file: !4373, line: 57, baseType: !990, size: 32, offset: 1056)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !4372, file: !4373, line: 58, baseType: !2060, size: 32, offset: 1088)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !4372, file: !4373, line: 59, baseType: !2060, size: 32, offset: 1120)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !4372, file: !4373, line: 60, baseType: !986, size: 64, offset: 1152)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !4372, file: !4373, line: 61, baseType: !990, size: 32, offset: 1216)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4372, file: !4373, line: 63, baseType: !990, size: 32, offset: 1248)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !4365, file: !4357, line: 12, baseType: !4409, size: 64, offset: 64)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!223, !3738, !4371, !1987}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !4365, file: !4357, line: 14, baseType: !4413, size: 64, offset: 128)
!4413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4414, size: 64)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!223, !3738, !4371}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !4365, file: !4357, line: 15, baseType: !4013, size: 64, offset: 192)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3735, file: !87, line: 570, baseType: !1692, size: 128, align: 64, offset: 10944)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !3735, file: !87, line: 571, baseType: !1841, size: 128, offset: 11072)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !3735, file: !87, line: 576, baseType: !1039, size: 192, offset: 11200)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !3735, file: !87, line: 578, baseType: !4124, size: 64, offset: 11392)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !3735, file: !87, line: 579, baseType: !1013, size: 128, offset: 11456)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !3735, file: !87, line: 580, baseType: !3620, size: 2368, offset: 11584)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !3735, file: !87, line: 582, baseType: !1378, size: 64, offset: 13952)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !3735, file: !87, line: 589, baseType: !1495, size: 8, offset: 14016)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3735, file: !87, line: 591, baseType: !1645, size: 64, offset: 14080)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !3735, file: !87, line: 594, baseType: !4427, size: 320, offset: 14144)
!4427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 320, elements: !2217)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3534, file: !2627, line: 191, baseType: !991, size: 64, offset: 7168)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3534, file: !2627, line: 193, baseType: !223, size: 32, offset: 7232)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3534, file: !2627, line: 194, baseType: !994, size: 64, offset: 7296)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3534, file: !2627, line: 196, baseType: !2067, size: 256, offset: 7360)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3534, file: !2627, line: 197, baseType: !2667, size: 64, offset: 7616)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3534, file: !2627, line: 199, baseType: !4434, size: 64, offset: 7680)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2627, line: 199, flags: DIFlagFwdDecl)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3534, file: !2627, line: 200, baseType: !1074, size: 32, offset: 7744)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3534, file: !2627, line: 201, baseType: !4438, size: 64, offset: 7808)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2627, line: 156, flags: DIFlagFwdDecl)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3534, file: !2627, line: 203, baseType: !2661, size: 512, offset: 7872)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3534, file: !2627, line: 208, baseType: !223, size: 32, offset: 8384)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3534, file: !2627, line: 209, baseType: !4443, size: 64, offset: 8448)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 64)
!4444 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2627, line: 157, flags: DIFlagFwdDecl)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3534, file: !2627, line: 210, baseType: !4446, offset: 8512)
!4446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1558, line: 192, elements: !1035)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2609, file: !2610, line: 43, baseType: !4183, size: 64, offset: 1024)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2609, file: !2610, line: 46, baseType: !223, size: 32, offset: 1088)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2609, file: !2610, line: 48, baseType: !1039, size: 192, offset: 1152)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1505, file: !17, line: 1452, baseType: !4183, size: 64, offset: 1536)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1505, file: !17, line: 1453, baseType: !4452, size: 64, offset: 1600)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !17, line: 1453, flags: DIFlagFwdDecl)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1505, file: !17, line: 1454, baseType: !1551, size: 128, offset: 1664)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1505, file: !17, line: 1455, baseType: !7, size: 32, offset: 1792)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1505, file: !17, line: 1456, baseType: !4457, size: 2432, offset: 1856)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !34, line: 518, size: 2432, elements: !4458)
!4458 = !{!4459, !4460, !4461, !4463, !4495}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4457, file: !34, line: 519, baseType: !7, size: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4457, file: !34, line: 520, baseType: !2067, size: 256, offset: 64)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4457, file: !34, line: 521, baseType: !4462, size: 192, offset: 320)
!4462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1347, size: 192, elements: !1563)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4457, file: !34, line: 522, baseType: !4464, size: 1728, offset: 512)
!4464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4465, size: 1728, elements: !1563)
!4465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !34, line: 222, size: 576, elements: !4466)
!4466 = !{!4467, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4465, file: !34, line: 223, baseType: !4468, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !34, line: 443, size: 256, elements: !4470)
!4470 = !{!4471, !4472, !4485, !4486}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4469, file: !34, line: 444, baseType: !223, size: 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4469, file: !34, line: 445, baseType: !4473, size: 64, offset: 64)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4475)
!4475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !34, line: 310, size: 512, elements: !4476)
!4476 = !{!4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4475, file: !34, line: 311, baseType: !1613, size: 64)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4475, file: !34, line: 312, baseType: !1613, size: 64, offset: 64)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4475, file: !34, line: 313, baseType: !1613, size: 64, offset: 128)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4475, file: !34, line: 314, baseType: !1613, size: 64, offset: 192)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4475, file: !34, line: 315, baseType: !2427, size: 64, offset: 256)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4475, file: !34, line: 316, baseType: !2427, size: 64, offset: 320)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4475, file: !34, line: 317, baseType: !2427, size: 64, offset: 384)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4475, file: !34, line: 318, baseType: !2499, size: 64, offset: 448)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4469, file: !34, line: 446, baseType: !1542, size: 64, offset: 128)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4469, file: !34, line: 447, baseType: !4468, size: 64, offset: 192)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4465, file: !34, line: 224, baseType: !223, size: 32, offset: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4465, file: !34, line: 226, baseType: !1013, size: 128, offset: 128)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4465, file: !34, line: 227, baseType: !994, size: 64, offset: 256)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4465, file: !34, line: 228, baseType: !7, size: 32, offset: 320)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4465, file: !34, line: 229, baseType: !7, size: 32, offset: 352)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4465, file: !34, line: 230, baseType: !2463, size: 64, offset: 384)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4465, file: !34, line: 231, baseType: !2463, size: 64, offset: 448)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4465, file: !34, line: 232, baseType: !991, size: 64, offset: 512)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4457, file: !34, line: 523, baseType: !4496, size: 192, offset: 2240)
!4496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4473, size: 192, elements: !1563)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1505, file: !17, line: 1458, baseType: !4498, size: 2112, offset: 4288)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !17, line: 1410, size: 2112, elements: !4499)
!4499 = !{!4500, !4501, !4502}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4498, file: !17, line: 1411, baseType: !223, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4498, file: !17, line: 1412, baseType: !1841, size: 128, offset: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4498, file: !17, line: 1413, baseType: !4503, size: 1920, offset: 192)
!4503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4504, size: 1920, elements: !1563)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4505, line: 12, size: 640, elements: !4506)
!4505 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4506 = !{!4507, !4515, !4516, !4521, !4522}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4504, file: !4505, line: 13, baseType: !4508, size: 320)
!4508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4509, line: 17, size: 320, elements: !4510)
!4509 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4510 = !{!4511, !4512, !4513, !4514}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4508, file: !4509, line: 18, baseType: !223, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4508, file: !4509, line: 19, baseType: !223, size: 32, offset: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4508, file: !4509, line: 20, baseType: !1841, size: 128, offset: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4508, file: !4509, line: 22, baseType: !1692, size: 128, align: 64, offset: 192)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4504, file: !4505, line: 14, baseType: !3394, size: 64, offset: 320)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4504, file: !4505, line: 15, baseType: !4517, size: 64, offset: 384)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4518, line: 16, size: 64, elements: !4519)
!4518 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4519 = !{!4520}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4517, file: !4518, line: 17, baseType: !1056, size: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4504, file: !4505, line: 16, baseType: !1841, size: 128, offset: 448)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4504, file: !4505, line: 17, baseType: !1074, size: 32, offset: 576)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1505, file: !17, line: 1465, baseType: !991, size: 64, offset: 6400)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1505, file: !17, line: 1468, baseType: !989, size: 32, offset: 6464)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1505, file: !17, line: 1470, baseType: !2082, size: 64, offset: 6528)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1505, file: !17, line: 1471, baseType: !2082, size: 64, offset: 6592)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1505, file: !17, line: 1473, baseType: !990, size: 32, offset: 6656)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1505, file: !17, line: 1474, baseType: !4529, size: 64, offset: 6720)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !17, line: 603, flags: DIFlagFwdDecl)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1505, file: !17, line: 1477, baseType: !3044, size: 256, offset: 6784)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1505, file: !17, line: 1478, baseType: !4533, size: 128, offset: 7040)
!4533 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4534, line: 18, baseType: !4535)
!4534 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4534, line: 16, size: 128, elements: !4536)
!4536 = !{!4537}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4535, file: !4534, line: 17, baseType: !4538, size: 128)
!4538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1217, size: 128, elements: !3376)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1505, file: !17, line: 1480, baseType: !7, size: 32, offset: 7168)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1505, file: !17, line: 1481, baseType: !1987, size: 32, offset: 7200)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1505, file: !17, line: 1487, baseType: !1039, size: 192, offset: 7232)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1505, file: !17, line: 1493, baseType: !1450, size: 64, offset: 7424)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1505, file: !17, line: 1495, baseType: !1430, size: 64, offset: 7488)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1505, file: !17, line: 1500, baseType: !223, size: 32, offset: 7552)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1505, file: !17, line: 1502, baseType: !4546, size: 448, offset: 7616)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2411, line: 60, size: 448, elements: !4547)
!4547 = !{!4548, !4553, !4554, !4555, !4556, !4557, !4558}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4546, file: !2411, line: 61, baseType: !4549, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{!994, !4552, !2409}
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4546, file: !2411, line: 63, baseType: !4549, size: 64, offset: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4546, file: !2411, line: 66, baseType: !931, size: 64, offset: 128)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4546, file: !2411, line: 67, baseType: !223, size: 32, offset: 192)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4546, file: !2411, line: 68, baseType: !7, size: 32, offset: 224)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4546, file: !2411, line: 71, baseType: !1013, size: 128, offset: 256)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4546, file: !2411, line: 77, baseType: !4559, size: 64, offset: 384)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1505, file: !17, line: 1505, baseType: !1043, size: 64, offset: 8064)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1505, file: !17, line: 1508, baseType: !1043, size: 64, offset: 8128)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1505, file: !17, line: 1511, baseType: !223, size: 32, offset: 8192)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1505, file: !17, line: 1514, baseType: !2394, size: 32, offset: 8224)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1505, file: !17, line: 1517, baseType: !3528, size: 64, offset: 8256)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1505, file: !17, line: 1518, baseType: !1547, size: 64, offset: 8320)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1505, file: !17, line: 1525, baseType: !2199, size: 64, offset: 8384)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1505, file: !17, line: 1532, baseType: !4568, size: 64, offset: 8448)
!4568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4569, line: 52, size: 64, elements: !4570)
!4569 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4570 = !{!4571}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4568, file: !4569, line: 53, baseType: !4572, size: 64)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4569, line: 40, size: 256, elements: !4574)
!4574 = !{!4575, !4576, !4581}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4573, file: !4569, line: 42, baseType: !1021)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4573, file: !4569, line: 44, baseType: !4577, size: 192)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4569, line: 28, size: 192, elements: !4578)
!4578 = !{!4579, !4580}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4577, file: !4569, line: 29, baseType: !1013, size: 128)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4577, file: !4569, line: 31, baseType: !931, size: 64, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4573, file: !4569, line: 49, baseType: !931, size: 64, offset: 192)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1505, file: !17, line: 1533, baseType: !4568, size: 64, offset: 8512)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1505, file: !17, line: 1534, baseType: !1692, size: 128, align: 64, offset: 8576)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1505, file: !17, line: 1535, baseType: !2247, size: 256, offset: 8704)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1505, file: !17, line: 1537, baseType: !1039, size: 192, offset: 8960)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1505, file: !17, line: 1542, baseType: !223, size: 32, offset: 9152)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1505, file: !17, line: 1545, baseType: !1021, offset: 9184)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1505, file: !17, line: 1546, baseType: !1013, size: 128, offset: 9216)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1505, file: !17, line: 1548, baseType: !1021, offset: 9344)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1505, file: !17, line: 1549, baseType: !1013, size: 128, offset: 9344)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1379, file: !1380, line: 104, baseType: !994, size: 64, offset: 896)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1379, file: !1380, line: 105, baseType: !991, size: 64, offset: 960)
!4593 = !DIDerivedType(tag: DW_TAG_member, scope: !1379, file: !1380, line: 107, baseType: !4594, size: 128, offset: 1024)
!4594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1379, file: !1380, line: 107, size: 128, elements: !4595)
!4595 = !{!4596, !4597}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4594, file: !1380, line: 108, baseType: !1013, size: 128)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4594, file: !1380, line: 109, baseType: !4598, size: 64)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1379, file: !1380, line: 111, baseType: !1013, size: 128, offset: 1152)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1379, file: !1380, line: 112, baseType: !1013, size: 128, offset: 1280)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1379, file: !1380, line: 120, baseType: !4602, size: 128, offset: 1408)
!4602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1379, file: !1380, line: 116, size: 128, elements: !4603)
!4603 = !{!4604, !4605, !4606}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4602, file: !1380, line: 117, baseType: !1551, size: 128)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4602, file: !1380, line: 118, baseType: !1389, size: 128)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4602, file: !1380, line: 119, baseType: !1692, size: 128, align: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1372, file: !17, line: 1866, baseType: !4608, size: 64, offset: 64)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4609, size: 64)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{!1450, !1378, !1347, !4611}
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !4613, line: 10, size: 128, elements: !4614)
!4613 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!4614 = !{!4615, !4616}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4612, file: !4613, line: 11, baseType: !2802, size: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4612, file: !4613, line: 12, baseType: !991, size: 64, offset: 64)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1372, file: !17, line: 1867, baseType: !4618, size: 64, offset: 128)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!223, !1347, !223}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1372, file: !17, line: 1868, baseType: !4622, size: 64, offset: 192)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!4625, !1347, !223}
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !17, line: 581, flags: DIFlagFwdDecl)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1372, file: !17, line: 1870, baseType: !4628, size: 64, offset: 256)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 64)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!223, !1378, !1476, !223}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1372, file: !17, line: 1872, baseType: !4632, size: 64, offset: 320)
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 64)
!4633 = !DISubroutineType(types: !4634)
!4634 = !{!223, !1347, !1378, !1351, !1495}
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1372, file: !17, line: 1873, baseType: !4636, size: 64, offset: 384)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DISubroutineType(types: !4638)
!4638 = !{!223, !1378, !1347, !1378}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1372, file: !17, line: 1874, baseType: !4640, size: 64, offset: 448)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!223, !1347, !1378}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1372, file: !17, line: 1875, baseType: !4644, size: 64, offset: 512)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!223, !1347, !1378, !1450}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1372, file: !17, line: 1876, baseType: !4648, size: 64, offset: 576)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!223, !1347, !1378, !1351}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1372, file: !17, line: 1877, baseType: !4640, size: 64, offset: 640)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1372, file: !17, line: 1878, baseType: !4653, size: 64, offset: 704)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!223, !1347, !1378, !1351, !1509}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1372, file: !17, line: 1879, baseType: !4657, size: 64, offset: 768)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!223, !1347, !1378, !1347, !1378, !7}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1372, file: !17, line: 1881, baseType: !4661, size: 64, offset: 832)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!223, !1378, !4664}
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !17, line: 219, size: 640, elements: !4666)
!4666 = !{!4667, !4668, !4669, !4670, !4671, !4672, !4677, !4678, !4679}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !4665, file: !17, line: 220, baseType: !7, size: 32)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !4665, file: !17, line: 221, baseType: !1351, size: 16, offset: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !4665, file: !17, line: 222, baseType: !1354, size: 32, offset: 64)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !4665, file: !17, line: 223, baseType: !1362, size: 32, offset: 96)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !4665, file: !17, line: 224, baseType: !1514, size: 64, offset: 128)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !4665, file: !17, line: 225, baseType: !4673, size: 128, offset: 192)
!4673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !2083, line: 13, size: 128, elements: !4674)
!4674 = !{!4675, !4676}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4673, file: !2083, line: 14, baseType: !2082, size: 64)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4673, file: !2083, line: 15, baseType: !931, size: 64, offset: 64)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !4665, file: !17, line: 226, baseType: !4673, size: 128, offset: 320)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !4665, file: !17, line: 227, baseType: !4673, size: 128, offset: 448)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !4665, file: !17, line: 234, baseType: !1712, size: 64, offset: 576)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1372, file: !17, line: 1882, baseType: !4681, size: 64, offset: 896)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!223, !1493, !4684, !989, !7}
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !4686, line: 22, size: 1152, elements: !4687)
!4686 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!4687 = !{!4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !4685, file: !4686, line: 23, baseType: !989, size: 32)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4685, file: !4686, line: 24, baseType: !1351, size: 16, offset: 32)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !4685, file: !4686, line: 25, baseType: !7, size: 32, offset: 64)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !4685, file: !4686, line: 26, baseType: !2090, size: 32, offset: 96)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !4685, file: !4686, line: 27, baseType: !984, size: 64, offset: 128)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !4685, file: !4686, line: 28, baseType: !984, size: 64, offset: 192)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4685, file: !4686, line: 37, baseType: !984, size: 64, offset: 256)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4685, file: !4686, line: 38, baseType: !1509, size: 32, offset: 320)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !4685, file: !4686, line: 39, baseType: !1509, size: 32, offset: 352)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4685, file: !4686, line: 40, baseType: !1354, size: 32, offset: 384)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4685, file: !4686, line: 41, baseType: !1362, size: 32, offset: 416)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4685, file: !4686, line: 42, baseType: !1514, size: 64, offset: 448)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !4685, file: !4686, line: 43, baseType: !4673, size: 128, offset: 512)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !4685, file: !4686, line: 44, baseType: !4673, size: 128, offset: 640)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !4685, file: !4686, line: 45, baseType: !4673, size: 128, offset: 768)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !4685, file: !4686, line: 46, baseType: !4673, size: 128, offset: 896)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4685, file: !4686, line: 47, baseType: !984, size: 64, offset: 1024)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !4685, file: !4686, line: 48, baseType: !984, size: 64, offset: 1088)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1372, file: !17, line: 1883, baseType: !4707, size: 64, offset: 960)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!1717, !1378, !1476, !1645}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1372, file: !17, line: 1884, baseType: !4711, size: 64, offset: 1024)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DISubroutineType(types: !4713)
!4713 = !{!223, !1347, !4714, !984, !984}
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !17, line: 50, flags: DIFlagFwdDecl)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1372, file: !17, line: 1886, baseType: !4717, size: 64, offset: 1088)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!223, !1347, !4720, !223}
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1372, file: !17, line: 1887, baseType: !4722, size: 64, offset: 1152)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{!223, !1347, !1378, !1712, !7, !1351}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1372, file: !17, line: 1890, baseType: !4648, size: 64, offset: 1216)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1372, file: !17, line: 1891, baseType: !4727, size: 64, offset: 1280)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!223, !1347, !4625, !223}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1348, file: !17, line: 623, baseType: !1504, size: 64, offset: 192)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1348, file: !17, line: 624, baseType: !1343, size: 64, offset: 256)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1348, file: !17, line: 631, baseType: !994, size: 64, offset: 320)
!4733 = !DIDerivedType(tag: DW_TAG_member, scope: !1348, file: !17, line: 639, baseType: !4734, size: 32, offset: 384)
!4734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1348, file: !17, line: 639, size: 32, elements: !4735)
!4735 = !{!4736, !4737}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4734, file: !17, line: 640, baseType: !4062, size: 32)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4734, file: !17, line: 641, baseType: !7, size: 32)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1348, file: !17, line: 643, baseType: !1509, size: 32, offset: 416)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1348, file: !17, line: 644, baseType: !1514, size: 64, offset: 448)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1348, file: !17, line: 645, baseType: !4673, size: 128, offset: 512)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1348, file: !17, line: 646, baseType: !4673, size: 128, offset: 640)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1348, file: !17, line: 647, baseType: !4673, size: 128, offset: 768)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1348, file: !17, line: 648, baseType: !1021, offset: 896)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1348, file: !17, line: 649, baseType: !1001, size: 16, offset: 896)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1348, file: !17, line: 650, baseType: !1216, size: 8, offset: 912)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1348, file: !17, line: 651, baseType: !1216, size: 8, offset: 920)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1348, file: !17, line: 652, baseType: !2583, size: 64, offset: 960)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1348, file: !17, line: 659, baseType: !994, size: 64, offset: 1024)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1348, file: !17, line: 660, baseType: !2067, size: 256, offset: 1088)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1348, file: !17, line: 662, baseType: !994, size: 64, offset: 1344)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1348, file: !17, line: 663, baseType: !994, size: 64, offset: 1408)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1348, file: !17, line: 665, baseType: !1551, size: 128, offset: 1472)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1348, file: !17, line: 666, baseType: !1013, size: 128, offset: 1600)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1348, file: !17, line: 675, baseType: !1013, size: 128, offset: 1728)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1348, file: !17, line: 676, baseType: !1013, size: 128, offset: 1856)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1348, file: !17, line: 677, baseType: !1013, size: 128, offset: 1984)
!4757 = !DIDerivedType(tag: DW_TAG_member, scope: !1348, file: !17, line: 678, baseType: !4758, size: 128, offset: 2112)
!4758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1348, file: !17, line: 678, size: 128, elements: !4759)
!4759 = !{!4760, !4761}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4758, file: !17, line: 679, baseType: !1547, size: 64)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4758, file: !17, line: 680, baseType: !1692, size: 128, align: 64)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1348, file: !17, line: 682, baseType: !1045, size: 64, offset: 2240)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1348, file: !17, line: 683, baseType: !1045, size: 64, offset: 2304)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1348, file: !17, line: 684, baseType: !1074, size: 32, offset: 2368)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1348, file: !17, line: 685, baseType: !1074, size: 32, offset: 2400)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1348, file: !17, line: 686, baseType: !1074, size: 32, offset: 2432)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1348, file: !17, line: 688, baseType: !1074, size: 32, offset: 2464)
!4768 = !DIDerivedType(tag: DW_TAG_member, scope: !1348, file: !17, line: 690, baseType: !4769, size: 64, offset: 2496)
!4769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1348, file: !17, line: 690, size: 64, elements: !4770)
!4770 = !{!4771, !4772}
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4769, file: !17, line: 691, baseType: !1703, size: 64)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4769, file: !17, line: 692, baseType: !1578, size: 64)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1348, file: !17, line: 694, baseType: !4774, size: 64, offset: 2560)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !17, line: 1100, size: 384, elements: !4776)
!4776 = !{!4777, !4778, !4779, !4780}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4775, file: !17, line: 1101, baseType: !1021)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4775, file: !17, line: 1102, baseType: !1013, size: 128)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4775, file: !17, line: 1103, baseType: !1013, size: 128, offset: 128)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4775, file: !17, line: 1104, baseType: !1013, size: 128, offset: 256)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1348, file: !17, line: 695, baseType: !1344, size: 1216, align: 64, offset: 2624)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1348, file: !17, line: 696, baseType: !1013, size: 128, offset: 3840)
!4783 = !DIDerivedType(tag: DW_TAG_member, scope: !1348, file: !17, line: 697, baseType: !4784, size: 64, offset: 3968)
!4784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1348, file: !17, line: 697, size: 64, elements: !4785)
!4785 = !{!4786, !4787, !4788, !4791, !4792}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4784, file: !17, line: 698, baseType: !1954, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4784, file: !17, line: 699, baseType: !2608, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4784, file: !17, line: 700, baseType: !4789, size: 64)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !17, line: 700, flags: DIFlagFwdDecl)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4784, file: !17, line: 701, baseType: !1476, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4784, file: !17, line: 702, baseType: !7, size: 32)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1348, file: !17, line: 705, baseType: !990, size: 32, offset: 4032)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1348, file: !17, line: 708, baseType: !990, size: 32, offset: 4064)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1348, file: !17, line: 709, baseType: !4529, size: 64, offset: 4096)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1348, file: !17, line: 720, baseType: !991, size: 64, offset: 4160)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1344, file: !17, line: 453, baseType: !2843, size: 128, offset: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1344, file: !17, line: 454, baseType: !992, size: 32, offset: 192)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1344, file: !17, line: 455, baseType: !1074, size: 32, offset: 224)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1344, file: !17, line: 460, baseType: !1203, size: 128, offset: 256)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1344, file: !17, line: 461, baseType: !2067, size: 256, offset: 384)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1344, file: !17, line: 462, baseType: !994, size: 64, offset: 640)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1344, file: !17, line: 463, baseType: !994, size: 64, offset: 704)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1344, file: !17, line: 464, baseType: !994, size: 64, offset: 768)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1344, file: !17, line: 465, baseType: !4806, size: 64, offset: 832)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4808)
!4808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !17, line: 367, size: 1408, elements: !4809)
!4809 = !{!4810, !4814, !4818, !4822, !4826, !4830, !4842, !4847, !4851, !4855, !4859, !4863, !4867, !4868, !4872, !4878, !4879, !4880, !4884, !4889, !4893, !4951}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !4808, file: !17, line: 368, baseType: !4811, size: 64)
!4811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 64)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!223, !1331, !1590}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !4808, file: !17, line: 369, baseType: !4815, size: 64, offset: 64)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!223, !1712, !1331}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !4808, file: !17, line: 372, baseType: !4819, size: 64, offset: 128)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!223, !1343, !1590}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !4808, file: !17, line: 375, baseType: !4823, size: 64, offset: 192)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!223, !1331}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !4808, file: !17, line: 381, baseType: !4827, size: 64, offset: 256)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!223, !1712, !1343, !1016, !7}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !4808, file: !17, line: 383, baseType: !4831, size: 64, offset: 320)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{null, !4834}
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1749, line: 795, size: 256, elements: !4836)
!4836 = !{!4837, !4838, !4839, !4840, !4841}
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4835, file: !1749, line: 796, baseType: !1712, size: 64)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !4835, file: !1749, line: 797, baseType: !1343, size: 64, offset: 64)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !4835, file: !1749, line: 799, baseType: !994, size: 64, offset: 128)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !4835, file: !1749, line: 800, baseType: !7, size: 32, offset: 192)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !4835, file: !1749, line: 801, baseType: !7, size: 32, offset: 224)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !4808, file: !17, line: 385, baseType: !4843, size: 64, offset: 384)
!4843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4844, size: 64)
!4844 = !DISubroutineType(types: !4845)
!4845 = !{!223, !1712, !1343, !1514, !7, !7, !4846, !1911}
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !4808, file: !17, line: 388, baseType: !4848, size: 64, offset: 448)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!223, !1712, !1343, !1514, !7, !7, !1331, !991}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !4808, file: !17, line: 393, baseType: !4852, size: 64, offset: 512)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!2630, !1343, !2630}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !4808, file: !17, line: 394, baseType: !4856, size: 64, offset: 576)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{null, !1331, !7, !7}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !4808, file: !17, line: 395, baseType: !4860, size: 64, offset: 640)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!223, !1331, !992}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !4808, file: !17, line: 396, baseType: !4864, size: 64, offset: 704)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{null, !1331}
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !4808, file: !17, line: 397, baseType: !1725, size: 64, offset: 768)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !4808, file: !17, line: 402, baseType: !4869, size: 64, offset: 832)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{!223, !1343, !1331, !1331, !120}
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !4808, file: !17, line: 404, baseType: !4873, size: 64, offset: 896)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!1495, !1331, !4876}
!4876 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !4877, line: 305, baseType: !7)
!4877 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !4808, file: !17, line: 405, baseType: !4864, size: 64, offset: 960)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !4808, file: !17, line: 406, baseType: !4823, size: 64, offset: 1024)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !4808, file: !17, line: 407, baseType: !4881, size: 64, offset: 1088)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DISubroutineType(types: !4883)
!4883 = !{!223, !1331, !994, !994}
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !4808, file: !17, line: 409, baseType: !4885, size: 64, offset: 1152)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{null, !1331, !4888, !4888}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !4808, file: !17, line: 410, baseType: !4890, size: 64, offset: 1216)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!223, !1343, !1331}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !4808, file: !17, line: 413, baseType: !4894, size: 64, offset: 1280)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!223, !4897, !1712, !4950}
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !4899, line: 240, size: 1600, elements: !4900)
!4899 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!4900 = !{!4901, !4902, !4903, !4910, !4912, !4913, !4915, !4922, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4898, file: !4899, line: 241, baseType: !994, size: 64)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4898, file: !4899, line: 242, baseType: !1004, size: 16, offset: 64)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4898, file: !4899, line: 243, baseType: !4904, size: 320, offset: 128)
!4904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !4905, line: 83, size: 320, elements: !4906)
!4905 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!4906 = !{!4907, !4908, !4909}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4904, file: !4905, line: 84, baseType: !223, size: 32)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !4904, file: !4905, line: 85, baseType: !1013, size: 128, offset: 64)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !4904, file: !4905, line: 86, baseType: !1013, size: 128, offset: 192)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4898, file: !4899, line: 244, baseType: !4911, size: 8, offset: 448)
!4911 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4898, file: !4899, line: 245, baseType: !7, size: 32, offset: 480)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !4898, file: !4899, line: 246, baseType: !4914, size: 64, offset: 512)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !4898, file: !4899, line: 247, baseType: !4916, size: 64, offset: 576)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !4899, line: 208, size: 32, elements: !4918)
!4918 = !{!4919, !4920, !4921}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4917, file: !4899, line: 209, baseType: !1021)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4917, file: !4899, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4917, file: !4899, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !4898, file: !4899, line: 248, baseType: !4923, size: 64, offset: 640)
!4923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !4899, line: 232, size: 64, elements: !4924)
!4924 = !{!4925, !4926}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4923, file: !4899, line: 233, baseType: !4917, size: 32)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4923, file: !4899, line: 234, baseType: !4917, size: 32, offset: 32)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !4898, file: !4899, line: 249, baseType: !7, size: 32, offset: 704)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !4898, file: !4899, line: 250, baseType: !7, size: 32, offset: 736)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4898, file: !4899, line: 251, baseType: !7, size: 32, offset: 768)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !4898, file: !4899, line: 252, baseType: !7, size: 32, offset: 800)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !4898, file: !4899, line: 253, baseType: !7, size: 32, offset: 832)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !4898, file: !4899, line: 254, baseType: !7, size: 32, offset: 864)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !4898, file: !4899, line: 255, baseType: !3394, size: 64, offset: 896)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !4898, file: !4899, line: 256, baseType: !4935, size: 64, offset: 960)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !4899, line: 227, size: 64, elements: !4937)
!4937 = !{!4938, !4939}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4936, file: !4899, line: 228, baseType: !4917, size: 32)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4936, file: !4899, line: 229, baseType: !7, size: 32, offset: 32)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !4898, file: !4899, line: 257, baseType: !1206, size: 64, offset: 1024)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !4898, file: !4899, line: 258, baseType: !2608, size: 64, offset: 1088)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !4898, file: !4899, line: 259, baseType: !1712, size: 64, offset: 1152)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !4898, file: !4899, line: 260, baseType: !7, size: 32, offset: 1216)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4898, file: !4899, line: 265, baseType: !1021, offset: 1248)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !4898, file: !4899, line: 278, baseType: !1021, offset: 1248)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !4898, file: !4899, line: 282, baseType: !2247, size: 256, offset: 1280)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !4898, file: !4899, line: 283, baseType: !4923, size: 64, offset: 1536)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !4898, file: !4899, line: 284, baseType: !4949, offset: 1600)
!4949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4904, elements: !3434)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !4808, file: !17, line: 415, baseType: !4952, size: 64, offset: 1344)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{null, !1712}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1344, file: !17, line: 466, baseType: !994, size: 64, offset: 896)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1344, file: !17, line: 467, baseType: !2394, size: 32, offset: 960)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1344, file: !17, line: 468, baseType: !1021, offset: 992)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1344, file: !17, line: 469, baseType: !1013, size: 128, offset: 1024)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1344, file: !17, line: 470, baseType: !991, size: 64, offset: 1152)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1339, file: !1245, line: 87, baseType: !994, size: 64, offset: 192)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1339, file: !1245, line: 94, baseType: !994, size: 64, offset: 256)
!4962 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1245, line: 96, baseType: !4963, size: 64)
!4963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1336, file: !1245, line: 96, size: 64, elements: !4964)
!4964 = !{!4965}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !4963, file: !1245, line: 101, baseType: !4966, size: 64)
!4966 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !993, line: 143, baseType: !984)
!4967 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1245, line: 103, baseType: !4968, size: 320)
!4968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1336, file: !1245, line: 103, size: 320, elements: !4969)
!4969 = !{!4970, !4980, !4981, !4982}
!4970 = !DIDerivedType(tag: DW_TAG_member, scope: !4968, file: !1245, line: 104, baseType: !4971, size: 128)
!4971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4968, file: !1245, line: 104, size: 128, elements: !4972)
!4972 = !{!4973, !4974}
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !4971, file: !1245, line: 105, baseType: !1013, size: 128)
!4974 = !DIDerivedType(tag: DW_TAG_member, scope: !4971, file: !1245, line: 106, baseType: !4975, size: 128)
!4975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4971, file: !1245, line: 106, size: 128, elements: !4976)
!4976 = !{!4977, !4978, !4979}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4975, file: !1245, line: 107, baseType: !1331, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4975, file: !1245, line: 109, baseType: !223, size: 32, offset: 64)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !4975, file: !1245, line: 110, baseType: !223, size: 32, offset: 96)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !4968, file: !1245, line: 117, baseType: !3623, size: 64, offset: 128)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !4968, file: !1245, line: 119, baseType: !991, size: 64, offset: 192)
!4982 = !DIDerivedType(tag: DW_TAG_member, scope: !4968, file: !1245, line: 120, baseType: !4983, size: 64, offset: 256)
!4983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4968, file: !1245, line: 120, size: 64, elements: !4984)
!4984 = !{!4985, !4986, !4987}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !4983, file: !1245, line: 121, baseType: !991, size: 64)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !4983, file: !1245, line: 122, baseType: !994, size: 64)
!4987 = !DIDerivedType(tag: DW_TAG_member, scope: !4983, file: !1245, line: 123, baseType: !4988, size: 32)
!4988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4983, file: !1245, line: 123, size: 32, elements: !4989)
!4989 = !{!4990, !4991, !4992}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !4988, file: !1245, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !4988, file: !1245, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4988, file: !1245, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!4993 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1245, line: 130, baseType: !4994, size: 192)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1336, file: !1245, line: 130, size: 192, elements: !4995)
!4995 = !{!4996, !4997, !4998, !4999, !5000}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !4994, file: !1245, line: 131, baseType: !994, size: 64)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !4994, file: !1245, line: 134, baseType: !1218, size: 8, offset: 64)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !4994, file: !1245, line: 135, baseType: !1218, size: 8, offset: 72)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !4994, file: !1245, line: 136, baseType: !1074, size: 32, offset: 96)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !4994, file: !1245, line: 137, baseType: !7, size: 32, offset: 128)
!5001 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1245, line: 139, baseType: !5002, size: 256)
!5002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1336, file: !1245, line: 139, size: 256, elements: !5003)
!5003 = !{!5004, !5005, !5006}
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !5002, file: !1245, line: 140, baseType: !994, size: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !5002, file: !1245, line: 141, baseType: !1074, size: 32, offset: 64)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !5002, file: !1245, line: 143, baseType: !1013, size: 128, offset: 128)
!5007 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1245, line: 145, baseType: !5008, size: 256)
!5008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1336, file: !1245, line: 145, size: 256, elements: !5009)
!5009 = !{!5010, !5011, !5013, !5014, !5019}
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !5008, file: !1245, line: 146, baseType: !994, size: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !5008, file: !1245, line: 147, baseType: !5012, size: 64, offset: 64)
!5012 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1263, line: 509, baseType: !1331)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !5008, file: !1245, line: 148, baseType: !994, size: 64, offset: 128)
!5014 = !DIDerivedType(tag: DW_TAG_member, scope: !5008, file: !1245, line: 149, baseType: !5015, size: 64, offset: 192)
!5015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5008, file: !1245, line: 149, size: 64, elements: !5016)
!5016 = !{!5017, !5018}
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !5015, file: !1245, line: 150, baseType: !1243, size: 64)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !5015, file: !1245, line: 151, baseType: !1074, size: 32)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !5008, file: !1245, line: 156, baseType: !1021, offset: 256)
!5020 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1245, line: 159, baseType: !5021, size: 128)
!5021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1336, file: !1245, line: 159, size: 128, elements: !5022)
!5022 = !{!5023, !5067}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !5021, file: !1245, line: 161, baseType: !5024, size: 64)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 64)
!5025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !128, line: 110, size: 1152, elements: !5026)
!5026 = !{!5027, !5037, !5038, !5039, !5040, !5041, !5042, !5054, !5055, !5056}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !5025, file: !128, line: 111, baseType: !5028, size: 384)
!5028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !128, line: 19, size: 384, elements: !5029)
!5029 = !{!5030, !5032, !5033, !5034, !5035, !5036}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !5028, file: !128, line: 20, baseType: !5031, size: 64)
!5031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !5028, file: !128, line: 21, baseType: !5031, size: 64, offset: 64)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !5028, file: !128, line: 22, baseType: !5031, size: 64, offset: 128)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5028, file: !128, line: 23, baseType: !994, size: 64, offset: 192)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5028, file: !128, line: 24, baseType: !994, size: 64, offset: 256)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5028, file: !128, line: 25, baseType: !994, size: 64, offset: 320)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5025, file: !128, line: 112, baseType: !2651, size: 64, offset: 384)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !5025, file: !128, line: 113, baseType: !2637, size: 128, offset: 448)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5025, file: !128, line: 114, baseType: !2307, size: 192, offset: 576)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5025, file: !128, line: 115, baseType: !127, size: 32, offset: 768)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5025, file: !128, line: 116, baseType: !7, size: 32, offset: 800)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5025, file: !128, line: 117, baseType: !5043, size: 64, offset: 832)
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5045)
!5045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !128, line: 67, size: 256, elements: !5046)
!5046 = !{!5047, !5048, !5052, !5053}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !5045, file: !128, line: 73, baseType: !4864, size: 64)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !5045, file: !128, line: 78, baseType: !5049, size: 64, offset: 64)
!5049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5050, size: 64)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{null, !5024}
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !5045, file: !128, line: 83, baseType: !5049, size: 64, offset: 128)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !5045, file: !128, line: 89, baseType: !1298, size: 64, offset: 192)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5025, file: !128, line: 118, baseType: !991, size: 64, offset: 896)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !5025, file: !128, line: 119, baseType: !223, size: 32, offset: 960)
!5056 = !DIDerivedType(tag: DW_TAG_member, scope: !5025, file: !128, line: 120, baseType: !5057, size: 128, offset: 1024)
!5057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5025, file: !128, line: 120, size: 128, elements: !5058)
!5058 = !{!5059, !5065}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !5057, file: !128, line: 121, baseType: !5060, size: 128)
!5060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !5061, line: 6, size: 128, elements: !5062)
!5061 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!5062 = !{!5063, !5064}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5060, file: !5061, line: 7, baseType: !984, size: 64)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5060, file: !5061, line: 8, baseType: !984, size: 64, offset: 64)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !5057, file: !128, line: 122, baseType: !5066)
!5066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5060, elements: !2372)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !5021, file: !1245, line: 162, baseType: !991, size: 64, offset: 64)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1336, file: !1245, line: 176, baseType: !1692, size: 128, align: 64)
!5069 = !DIDerivedType(tag: DW_TAG_member, scope: !1332, file: !1245, line: 179, baseType: !5070, size: 32, offset: 384)
!5070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1332, file: !1245, line: 179, size: 32, elements: !5071)
!5071 = !{!5072, !5073, !5074, !5075}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !5070, file: !1245, line: 184, baseType: !1074, size: 32)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !5070, file: !1245, line: 192, baseType: !7, size: 32)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5070, file: !1245, line: 194, baseType: !7, size: 32)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !5070, file: !1245, line: 195, baseType: !223, size: 32)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1332, file: !1245, line: 199, baseType: !1074, size: 32, offset: 416)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1303, file: !135, line: 522, baseType: !1331, size: 64, offset: 512)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1303, file: !135, line: 528, baseType: !5079, size: 64, offset: 576)
!5079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1303, file: !135, line: 532, baseType: !1037, size: 64, offset: 640)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1303, file: !135, line: 536, baseType: !5012, size: 64, offset: 704)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1282, file: !135, line: 563, baseType: !5083, size: 64, offset: 320)
!5083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5084, size: 64)
!5084 = !DISubroutineType(types: !5085)
!5085 = !{!1301, !1302, !134}
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1282, file: !135, line: 565, baseType: !5087, size: 64, offset: 384)
!5087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5088, size: 64)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{null, !1302, !994, !994}
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1282, file: !135, line: 567, baseType: !5091, size: 64, offset: 448)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 64)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{!994, !1251}
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1282, file: !135, line: 571, baseType: !1298, size: 64, offset: 512)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1282, file: !135, line: 574, baseType: !1298, size: 64, offset: 576)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1282, file: !135, line: 579, baseType: !5097, size: 64, offset: 640)
!5097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5098, size: 64)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{!223, !1251, !994, !991, !223, !223}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1282, file: !135, line: 585, baseType: !5101, size: 64, offset: 704)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!1450, !1251}
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1282, file: !135, line: 615, baseType: !5105, size: 64, offset: 768)
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5106, size: 64)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!1331, !1251, !994}
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1252, file: !1245, line: 359, baseType: !994, size: 64, offset: 1216)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1252, file: !1245, line: 361, baseType: !1712, size: 64, offset: 1280)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1252, file: !1245, line: 362, baseType: !991, size: 64, offset: 1344)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1252, file: !1245, line: 365, baseType: !1043, size: 64, offset: 1408)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1252, file: !1245, line: 373, baseType: !5113, offset: 1472)
!5113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1245, line: 296, elements: !1035)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1248, file: !1245, line: 391, baseType: !1206, size: 64, offset: 64)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1248, file: !1245, line: 392, baseType: !984, size: 64, offset: 128)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1248, file: !1245, line: 394, baseType: !1942, size: 64, offset: 192)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1248, file: !1245, line: 398, baseType: !994, size: 64, offset: 256)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1248, file: !1245, line: 399, baseType: !994, size: 64, offset: 320)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1248, file: !1245, line: 405, baseType: !994, size: 64, offset: 384)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1248, file: !1245, line: 406, baseType: !994, size: 64, offset: 448)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1248, file: !1245, line: 407, baseType: !5122, size: 64, offset: 512)
!5122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5123, size: 64)
!5123 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1263, line: 286, baseType: !5124)
!5124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1263, line: 286, size: 64, elements: !5125)
!5125 = !{!5126}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !5124, file: !1263, line: 286, baseType: !5127, size: 64)
!5127 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1268, line: 18, baseType: !994)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1248, file: !1245, line: 416, baseType: !1074, size: 32, offset: 576)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1248, file: !1245, line: 428, baseType: !1074, size: 32, offset: 608)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1248, file: !1245, line: 437, baseType: !1074, size: 32, offset: 640)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1248, file: !1245, line: 447, baseType: !1074, size: 32, offset: 672)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1248, file: !1245, line: 450, baseType: !1043, size: 64, offset: 704)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1248, file: !1245, line: 452, baseType: !223, size: 32, offset: 768)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1248, file: !1245, line: 454, baseType: !1021, offset: 800)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1248, file: !1245, line: 457, baseType: !2067, size: 256, offset: 832)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1248, file: !1245, line: 459, baseType: !1013, size: 128, offset: 1088)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1248, file: !1245, line: 466, baseType: !994, size: 64, offset: 1216)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1248, file: !1245, line: 467, baseType: !994, size: 64, offset: 1280)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1248, file: !1245, line: 469, baseType: !994, size: 64, offset: 1344)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1248, file: !1245, line: 470, baseType: !994, size: 64, offset: 1408)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1248, file: !1245, line: 471, baseType: !1045, size: 64, offset: 1472)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1248, file: !1245, line: 472, baseType: !994, size: 64, offset: 1536)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1248, file: !1245, line: 473, baseType: !994, size: 64, offset: 1600)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1248, file: !1245, line: 474, baseType: !994, size: 64, offset: 1664)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1248, file: !1245, line: 475, baseType: !994, size: 64, offset: 1728)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1248, file: !1245, line: 477, baseType: !1021, offset: 1792)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1248, file: !1245, line: 478, baseType: !994, size: 64, offset: 1792)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1248, file: !1245, line: 478, baseType: !994, size: 64, offset: 1856)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1248, file: !1245, line: 478, baseType: !994, size: 64, offset: 1920)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1248, file: !1245, line: 478, baseType: !994, size: 64, offset: 1984)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1248, file: !1245, line: 479, baseType: !994, size: 64, offset: 2048)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1248, file: !1245, line: 479, baseType: !994, size: 64, offset: 2112)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1248, file: !1245, line: 479, baseType: !994, size: 64, offset: 2176)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1248, file: !1245, line: 480, baseType: !994, size: 64, offset: 2240)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1248, file: !1245, line: 480, baseType: !994, size: 64, offset: 2304)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1248, file: !1245, line: 480, baseType: !994, size: 64, offset: 2368)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1248, file: !1245, line: 480, baseType: !994, size: 64, offset: 2432)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1248, file: !1245, line: 482, baseType: !5159, size: 2816, offset: 2496)
!5159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 2816, elements: !5160)
!5160 = !{!5161}
!5161 = !DISubrange(count: 44)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1248, file: !1245, line: 488, baseType: !5163, size: 256, offset: 5312)
!5163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !5164, line: 60, size: 256, elements: !5165)
!5164 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!5165 = !{!5166}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5163, file: !5164, line: 61, baseType: !5167, size: 256)
!5167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 256, elements: !2003)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1248, file: !1245, line: 490, baseType: !5169, size: 64, offset: 5568)
!5169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 64)
!5170 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1245, line: 490, flags: DIFlagFwdDecl)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1248, file: !1245, line: 493, baseType: !5172, size: 896, offset: 5632)
!5172 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !5173, line: 53, baseType: !5174)
!5173 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!5174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5173, line: 13, size: 896, elements: !5175)
!5175 = !{!5176, !5177, !5178, !5179, !5182, !5183, !5184, !5185, !5205, !5206, !5207}
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !5174, file: !5173, line: 18, baseType: !984, size: 64)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !5174, file: !5173, line: 28, baseType: !1045, size: 64, offset: 64)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !5174, file: !5173, line: 31, baseType: !2067, size: 256, offset: 128)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !5174, file: !5173, line: 32, baseType: !5180, size: 64, offset: 384)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !5173, line: 32, flags: DIFlagFwdDecl)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !5174, file: !5173, line: 37, baseType: !1001, size: 16, offset: 448)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5174, file: !5173, line: 40, baseType: !1039, size: 192, offset: 512)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !5174, file: !5173, line: 41, baseType: !991, size: 64, offset: 704)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !5174, file: !5173, line: 42, baseType: !5186, size: 64, offset: 768)
!5186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 64)
!5187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5188)
!5188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !5189, line: 13, size: 896, elements: !5190)
!5189 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!5190 = !{!5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204}
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5188, file: !5189, line: 14, baseType: !991, size: 64)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5188, file: !5189, line: 15, baseType: !994, size: 64, offset: 64)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !5188, file: !5189, line: 17, baseType: !994, size: 64, offset: 128)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !5188, file: !5189, line: 17, baseType: !994, size: 64, offset: 192)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !5188, file: !5189, line: 19, baseType: !931, size: 64, offset: 256)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !5188, file: !5189, line: 21, baseType: !931, size: 64, offset: 320)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !5188, file: !5189, line: 22, baseType: !931, size: 64, offset: 384)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !5188, file: !5189, line: 23, baseType: !931, size: 64, offset: 448)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !5188, file: !5189, line: 24, baseType: !931, size: 64, offset: 512)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !5188, file: !5189, line: 25, baseType: !931, size: 64, offset: 576)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !5188, file: !5189, line: 26, baseType: !931, size: 64, offset: 640)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !5188, file: !5189, line: 27, baseType: !931, size: 64, offset: 704)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !5188, file: !5189, line: 28, baseType: !931, size: 64, offset: 768)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !5188, file: !5189, line: 29, baseType: !931, size: 64, offset: 832)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !5174, file: !5173, line: 44, baseType: !1074, size: 32, offset: 832)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !5174, file: !5173, line: 50, baseType: !1740, size: 16, offset: 864)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !5174, file: !5173, line: 51, baseType: !5208, size: 16, offset: 880)
!5208 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !985, line: 18, baseType: !5209)
!5209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !987, line: 23, baseType: !1004)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1248, file: !1245, line: 495, baseType: !994, size: 64, offset: 6528)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1248, file: !1245, line: 497, baseType: !5212, size: 64, offset: 6592)
!5212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5213, size: 64)
!5213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1245, line: 381, size: 384, elements: !5214)
!5214 = !{!5215, !5216, !5222}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !5213, file: !1245, line: 382, baseType: !1074, size: 32)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !5213, file: !1245, line: 383, baseType: !5217, size: 128, offset: 64)
!5217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1245, line: 376, size: 128, elements: !5218)
!5218 = !{!5219, !5220}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5217, file: !1245, line: 377, baseType: !1056, size: 64)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5217, file: !1245, line: 378, baseType: !5221, size: 64, offset: 64)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5217, size: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !5213, file: !1245, line: 384, baseType: !2307, size: 192, offset: 192)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1248, file: !1245, line: 500, baseType: !1021, offset: 6656)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1248, file: !1245, line: 501, baseType: !5225, size: 64, offset: 6656)
!5225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5226, size: 64)
!5226 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1245, line: 387, flags: DIFlagFwdDecl)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1248, file: !1245, line: 516, baseType: !2199, size: 64, offset: 6720)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1248, file: !1245, line: 519, baseType: !1712, size: 64, offset: 6784)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1248, file: !1245, line: 521, baseType: !5230, size: 64, offset: 6848)
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 64)
!5231 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1245, line: 521, flags: DIFlagFwdDecl)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1248, file: !1245, line: 545, baseType: !1074, size: 32, offset: 6912)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1248, file: !1245, line: 548, baseType: !1495, size: 8, offset: 6944)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1248, file: !1245, line: 550, baseType: !5235, offset: 6952)
!5235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !5236, line: 142, elements: !1035)
!5236 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1248, file: !1245, line: 554, baseType: !2247, size: 256, offset: 6976)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1248, file: !1245, line: 557, baseType: !989, size: 32, offset: 7232)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1244, file: !1245, line: 565, baseType: !5240, offset: 7296)
!5240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, elements: !3434)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1057, file: !1058, line: 758, baseType: !1243, size: 64, offset: 3968)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1057, file: !1058, line: 761, baseType: !5243, size: 320, offset: 4032)
!5243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !5164, line: 34, size: 320, elements: !5244)
!5244 = !{!5245, !5246}
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !5243, file: !5164, line: 35, baseType: !984, size: 64)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !5243, file: !5164, line: 36, baseType: !5247, size: 256, offset: 64)
!5247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1251, size: 256, elements: !2003)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1057, file: !1058, line: 766, baseType: !223, size: 32, offset: 4352)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1057, file: !1058, line: 767, baseType: !223, size: 32, offset: 4384)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1057, file: !1058, line: 768, baseType: !223, size: 32, offset: 4416)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1057, file: !1058, line: 770, baseType: !223, size: 32, offset: 4448)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1057, file: !1058, line: 772, baseType: !994, size: 64, offset: 4480)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1057, file: !1058, line: 775, baseType: !7, size: 32, offset: 4544)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1057, file: !1058, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1057, file: !1058, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1057, file: !1058, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1057, file: !1058, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1057, file: !1058, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1057, file: !1058, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1057, file: !1058, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1057, file: !1058, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1057, file: !1058, line: 831, baseType: !994, size: 64, offset: 4672)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1057, file: !1058, line: 833, baseType: !5264, size: 384, offset: 4736)
!5264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !141, line: 25, size: 384, elements: !5265)
!5265 = !{!5266, !5271}
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5264, file: !141, line: 26, baseType: !5267, size: 64)
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 64)
!5268 = !DISubroutineType(types: !5269)
!5269 = !{!931, !5270}
!5270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5264, size: 64)
!5271 = !DIDerivedType(tag: DW_TAG_member, scope: !5264, file: !141, line: 27, baseType: !5272, size: 320, offset: 64)
!5272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5264, file: !141, line: 27, size: 320, elements: !5273)
!5273 = !{!5274, !5284, !5309}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !5272, file: !141, line: 36, baseType: !5275, size: 320)
!5275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5272, file: !141, line: 29, size: 320, elements: !5276)
!5276 = !{!5277, !5279, !5280, !5281, !5282, !5283}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !5275, file: !141, line: 30, baseType: !5278, size: 64)
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5275, file: !141, line: 31, baseType: !989, size: 32, offset: 64)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5275, file: !141, line: 32, baseType: !989, size: 32, offset: 96)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !5275, file: !141, line: 33, baseType: !989, size: 32, offset: 128)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5275, file: !141, line: 34, baseType: !984, size: 64, offset: 192)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !5275, file: !141, line: 35, baseType: !5278, size: 64, offset: 256)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !5272, file: !141, line: 46, baseType: !5285, size: 192)
!5285 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5272, file: !141, line: 38, size: 192, elements: !5286)
!5286 = !{!5287, !5288, !5289, !5308}
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !5285, file: !141, line: 39, baseType: !1185, size: 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5285, file: !141, line: 40, baseType: !140, size: 32, offset: 32)
!5289 = !DIDerivedType(tag: DW_TAG_member, scope: !5285, file: !141, line: 41, baseType: !5290, size: 64, offset: 64)
!5290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5285, file: !141, line: 41, size: 64, elements: !5291)
!5291 = !{!5292, !5300}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !5290, file: !141, line: 42, baseType: !5293, size: 64)
!5293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 64)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !5295, line: 7, size: 128, elements: !5296)
!5295 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!5296 = !{!5297, !5299}
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5294, file: !5295, line: 8, baseType: !5298, size: 64)
!5298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1187, line: 93, baseType: !1051)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !5294, file: !5295, line: 9, baseType: !1051, size: 64, offset: 64)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !5290, file: !141, line: 43, baseType: !5301, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !5303, line: 7, size: 64, elements: !5304)
!5303 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!5304 = !{!5305, !5307}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5302, file: !5303, line: 8, baseType: !5306, size: 32)
!5306 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !5303, line: 5, baseType: !2059)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !5302, file: !5303, line: 9, baseType: !2059, size: 32, offset: 32)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !5285, file: !141, line: 45, baseType: !984, size: 64, offset: 128)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5272, file: !141, line: 54, baseType: !5310, size: 256)
!5310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5272, file: !141, line: 48, size: 256, elements: !5311)
!5311 = !{!5312, !5315, !5316, !5317, !5318}
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !5310, file: !141, line: 49, baseType: !5313, size: 64)
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 64)
!5314 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !141, line: 14, flags: DIFlagFwdDecl)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !5310, file: !141, line: 50, baseType: !223, size: 32, offset: 64)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !5310, file: !141, line: 51, baseType: !223, size: 32, offset: 96)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5310, file: !141, line: 52, baseType: !994, size: 64, offset: 128)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !5310, file: !141, line: 53, baseType: !994, size: 64, offset: 192)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1057, file: !1058, line: 835, baseType: !5320, size: 32, offset: 5120)
!5320 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !993, line: 22, baseType: !5321)
!5321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1187, line: 28, baseType: !223)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1057, file: !1058, line: 836, baseType: !5320, size: 32, offset: 5152)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1057, file: !1058, line: 840, baseType: !994, size: 64, offset: 5184)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1057, file: !1058, line: 849, baseType: !1056, size: 64, offset: 5248)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1057, file: !1058, line: 852, baseType: !1056, size: 64, offset: 5312)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1057, file: !1058, line: 857, baseType: !1013, size: 128, offset: 5376)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1057, file: !1058, line: 858, baseType: !1013, size: 128, offset: 5504)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1057, file: !1058, line: 859, baseType: !1056, size: 64, offset: 5632)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1057, file: !1058, line: 867, baseType: !1013, size: 128, offset: 5696)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1057, file: !1058, line: 868, baseType: !1013, size: 128, offset: 5824)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1057, file: !1058, line: 871, baseType: !1995, size: 64, offset: 5952)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1057, file: !1058, line: 872, baseType: !5333, size: 512, offset: 6016)
!5333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 512, elements: !2003)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1057, file: !1058, line: 873, baseType: !1013, size: 128, offset: 6528)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1057, file: !1058, line: 874, baseType: !1013, size: 128, offset: 6656)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1057, file: !1058, line: 876, baseType: !2306, size: 64, offset: 6784)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1057, file: !1058, line: 879, baseType: !1633, size: 64, offset: 6848)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1057, file: !1058, line: 882, baseType: !1633, size: 64, offset: 6912)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1057, file: !1058, line: 884, baseType: !984, size: 64, offset: 6976)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1057, file: !1058, line: 885, baseType: !984, size: 64, offset: 7040)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1057, file: !1058, line: 890, baseType: !984, size: 64, offset: 7104)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1057, file: !1058, line: 891, baseType: !5343, size: 128, offset: 7168)
!5343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1058, line: 242, size: 128, elements: !5344)
!5344 = !{!5345, !5346, !5347}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !5343, file: !1058, line: 244, baseType: !984, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !5343, file: !1058, line: 245, baseType: !984, size: 64, offset: 64)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5343, file: !1058, line: 246, baseType: !1167, offset: 128)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1057, file: !1058, line: 900, baseType: !994, size: 64, offset: 7296)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1057, file: !1058, line: 901, baseType: !994, size: 64, offset: 7360)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1057, file: !1058, line: 904, baseType: !984, size: 64, offset: 7424)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1057, file: !1058, line: 907, baseType: !984, size: 64, offset: 7488)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1057, file: !1058, line: 910, baseType: !994, size: 64, offset: 7552)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1057, file: !1058, line: 911, baseType: !994, size: 64, offset: 7616)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1057, file: !1058, line: 914, baseType: !5355, size: 640, offset: 7680)
!5355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !5356, line: 123, size: 640, elements: !5357)
!5356 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!5357 = !{!5358, !5364, !5365}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !5355, file: !5356, line: 124, baseType: !5359, size: 576)
!5359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5360, size: 576, elements: !1563)
!5360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !5356, line: 108, size: 192, elements: !5361)
!5361 = !{!5362, !5363}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !5360, file: !5356, line: 109, baseType: !984, size: 64)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !5360, file: !5356, line: 110, baseType: !1200, size: 128, offset: 64)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !5355, file: !5356, line: 125, baseType: !7, size: 32, offset: 576)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !5355, file: !5356, line: 126, baseType: !7, size: 32, offset: 608)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1057, file: !1058, line: 917, baseType: !5367, size: 192, offset: 8320)
!5367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !5356, line: 134, size: 192, elements: !5368)
!5368 = !{!5369, !5370}
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5367, file: !5356, line: 135, baseType: !1692, size: 128, align: 64)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !5367, file: !5356, line: 136, baseType: !7, size: 32, offset: 128)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1057, file: !1058, line: 923, baseType: !2021, size: 64, offset: 8512)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1057, file: !1058, line: 926, baseType: !2021, size: 64, offset: 8576)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1057, file: !1058, line: 929, baseType: !2021, size: 64, offset: 8640)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1057, file: !1058, line: 933, baseType: !2051, size: 64, offset: 8704)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1057, file: !1058, line: 943, baseType: !5376, size: 128, offset: 8768)
!5376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 128, elements: !3376)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1057, file: !1058, line: 945, baseType: !5378, size: 64, offset: 8896)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1058, line: 49, flags: DIFlagFwdDecl)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1057, file: !1058, line: 956, baseType: !5381, size: 64, offset: 8960)
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 64)
!5382 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1058, line: 45, flags: DIFlagFwdDecl)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1057, file: !1058, line: 959, baseType: !5384, size: 64, offset: 9024)
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5385 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1058, line: 959, flags: DIFlagFwdDecl)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1057, file: !1058, line: 962, baseType: !5387, size: 64, offset: 9088)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1058, line: 66, flags: DIFlagFwdDecl)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1057, file: !1058, line: 966, baseType: !5390, size: 64, offset: 9152)
!5390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5391, size: 64)
!5391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !5392, line: 31, size: 576, elements: !5393)
!5392 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!5393 = !{!5394, !5395, !5398, !5401, !5404, !5405, !5408, !5411, !5412}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5391, file: !5392, line: 32, baseType: !1074, size: 32)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !5391, file: !5392, line: 33, baseType: !5396, size: 64, offset: 64)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !5392, line: 9, flags: DIFlagFwdDecl)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !5391, file: !5392, line: 34, baseType: !5399, size: 64, offset: 128)
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !5392, line: 10, flags: DIFlagFwdDecl)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !5391, file: !5392, line: 35, baseType: !5402, size: 64, offset: 192)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !5392, line: 8, flags: DIFlagFwdDecl)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !5391, file: !5392, line: 36, baseType: !2014, size: 64, offset: 256)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !5391, file: !5392, line: 37, baseType: !5406, size: 64, offset: 320)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2053, line: 34, flags: DIFlagFwdDecl)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !5391, file: !5392, line: 38, baseType: !5409, size: 64, offset: 384)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5410, size: 64)
!5410 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !5392, line: 38, flags: DIFlagFwdDecl)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !5391, file: !5392, line: 39, baseType: !5409, size: 64, offset: 448)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !5391, file: !5392, line: 40, baseType: !5413, size: 64, offset: 512)
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !5415, line: 856, size: 448, elements: !5416)
!5415 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!5416 = !{!5417, !5418, !5419, !5420, !5421}
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5414, file: !5415, line: 857, baseType: !1070, size: 32)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5414, file: !5415, line: 858, baseType: !2233, size: 192, offset: 64)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !5414, file: !5415, line: 859, baseType: !2199, size: 64, offset: 256)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !5414, file: !5415, line: 860, baseType: !2351, size: 64, offset: 320)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !5414, file: !5415, line: 861, baseType: !5422, size: 64, offset: 384)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !5424, line: 16, flags: DIFlagFwdDecl)
!5424 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1057, file: !1058, line: 969, baseType: !5426, size: 64, offset: 9216)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !5428, line: 82, size: 7296, elements: !5429)
!5428 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!5429 = !{!5430, !5431, !5432, !5433, !5434, !5435, !5436, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5465, !5474, !5475, !5477, !5478, !5479, !5482, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5512, !5513, !5520, !5521, !5522, !5523, !5524, !5525}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !5427, file: !5428, line: 83, baseType: !1070, size: 32)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !5427, file: !5428, line: 84, baseType: !1074, size: 32, offset: 32)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !5427, file: !5428, line: 85, baseType: !223, size: 32, offset: 64)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !5427, file: !5428, line: 86, baseType: !1013, size: 128, offset: 128)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !5427, file: !5428, line: 88, baseType: !1841, size: 128, offset: 256)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !5427, file: !5428, line: 91, baseType: !1056, size: 64, offset: 384)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !5427, file: !5428, line: 94, baseType: !5437, size: 192, offset: 448)
!5437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !5438, line: 30, size: 192, elements: !5439)
!5438 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!5439 = !{!5440, !5441}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5437, file: !5438, line: 31, baseType: !1013, size: 128)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !5437, file: !5438, line: 32, baseType: !5442, size: 64, offset: 128)
!5442 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !5443, line: 25, baseType: !5444)
!5443 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!5444 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5443, line: 23, size: 64, elements: !5445)
!5445 = !{!5446}
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !5444, file: !5443, line: 24, baseType: !1235, size: 64)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !5427, file: !5428, line: 97, baseType: !1547, size: 64, offset: 640)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !5427, file: !5428, line: 100, baseType: !223, size: 32, offset: 704)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !5427, file: !5428, line: 106, baseType: !223, size: 32, offset: 736)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !5427, file: !5428, line: 107, baseType: !1056, size: 64, offset: 768)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !5427, file: !5428, line: 110, baseType: !223, size: 32, offset: 832)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5427, file: !5428, line: 111, baseType: !7, size: 32, offset: 864)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !5427, file: !5428, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !5427, file: !5428, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !5427, file: !5428, line: 128, baseType: !223, size: 32, offset: 928)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !5427, file: !5428, line: 129, baseType: !1013, size: 128, offset: 960)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !5427, file: !5428, line: 132, baseType: !1142, size: 512, offset: 1088)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !5427, file: !5428, line: 133, baseType: !1150, size: 64, offset: 1600)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !5427, file: !5428, line: 140, baseType: !5460, size: 256, offset: 1664)
!5460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5461, size: 256, elements: !2043)
!5461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !5428, line: 38, size: 128, elements: !5462)
!5462 = !{!5463, !5464}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !5461, file: !5428, line: 39, baseType: !984, size: 64)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !5461, file: !5428, line: 40, baseType: !984, size: 64, offset: 64)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !5427, file: !5428, line: 146, baseType: !5466, size: 192, offset: 1920)
!5466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !5428, line: 66, size: 192, elements: !5467)
!5467 = !{!5468}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !5466, file: !5428, line: 67, baseType: !5469, size: 192)
!5469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !5428, line: 47, size: 192, elements: !5470)
!5470 = !{!5471, !5472, !5473}
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !5469, file: !5428, line: 48, baseType: !1045, size: 64)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !5469, file: !5428, line: 49, baseType: !1045, size: 64, offset: 64)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !5469, file: !5428, line: 50, baseType: !1045, size: 64, offset: 128)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !5427, file: !5428, line: 150, baseType: !5355, size: 640, offset: 2112)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !5427, file: !5428, line: 153, baseType: !5476, size: 256, offset: 2752)
!5476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1995, size: 256, elements: !2003)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !5427, file: !5428, line: 159, baseType: !1995, size: 64, offset: 3008)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !5427, file: !5428, line: 162, baseType: !223, size: 32, offset: 3072)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !5427, file: !5428, line: 164, baseType: !5480, size: 64, offset: 3136)
!5480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5481, size: 64)
!5481 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !5428, line: 164, flags: DIFlagFwdDecl)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !5427, file: !5428, line: 175, baseType: !5483, size: 32, offset: 3200)
!5483 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1190, line: 805, baseType: !5484)
!5484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1190, line: 798, size: 32, elements: !5485)
!5485 = !{!5486, !5487}
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !5484, file: !1190, line: 803, baseType: !1384, size: 32)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5484, file: !1190, line: 804, baseType: !1021, offset: 32)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !5427, file: !5428, line: 176, baseType: !984, size: 64, offset: 3264)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !5427, file: !5428, line: 176, baseType: !984, size: 64, offset: 3328)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !5427, file: !5428, line: 176, baseType: !984, size: 64, offset: 3392)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !5427, file: !5428, line: 176, baseType: !984, size: 64, offset: 3456)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !5427, file: !5428, line: 177, baseType: !984, size: 64, offset: 3520)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !5427, file: !5428, line: 178, baseType: !984, size: 64, offset: 3584)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !5427, file: !5428, line: 179, baseType: !5343, size: 128, offset: 3648)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !5427, file: !5428, line: 180, baseType: !994, size: 64, offset: 3776)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !5427, file: !5428, line: 180, baseType: !994, size: 64, offset: 3840)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !5427, file: !5428, line: 180, baseType: !994, size: 64, offset: 3904)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !5427, file: !5428, line: 180, baseType: !994, size: 64, offset: 3968)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !5427, file: !5428, line: 181, baseType: !994, size: 64, offset: 4032)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !5427, file: !5428, line: 181, baseType: !994, size: 64, offset: 4096)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !5427, file: !5428, line: 181, baseType: !994, size: 64, offset: 4160)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !5427, file: !5428, line: 181, baseType: !994, size: 64, offset: 4224)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !5427, file: !5428, line: 182, baseType: !994, size: 64, offset: 4288)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !5427, file: !5428, line: 182, baseType: !994, size: 64, offset: 4352)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !5427, file: !5428, line: 182, baseType: !994, size: 64, offset: 4416)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !5427, file: !5428, line: 182, baseType: !994, size: 64, offset: 4480)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !5427, file: !5428, line: 183, baseType: !994, size: 64, offset: 4544)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !5427, file: !5428, line: 183, baseType: !994, size: 64, offset: 4608)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !5427, file: !5428, line: 184, baseType: !5510, offset: 4672)
!5510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !5511, line: 12, elements: !1035)
!5511 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !5427, file: !5428, line: 192, baseType: !988, size: 64, offset: 4672)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !5427, file: !5428, line: 203, baseType: !5514, size: 2048, offset: 4736)
!5514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5515, size: 2048, elements: !3376)
!5515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !5516, line: 43, size: 128, elements: !5517)
!5516 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!5517 = !{!5518, !5519}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !5515, file: !5516, line: 44, baseType: !1647, size: 64)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !5515, file: !5516, line: 45, baseType: !1647, size: 64, offset: 64)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !5427, file: !5428, line: 220, baseType: !1495, size: 8, offset: 6784)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !5427, file: !5428, line: 221, baseType: !1004, size: 16, offset: 6800)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !5427, file: !5428, line: 222, baseType: !1004, size: 16, offset: 6816)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !5427, file: !5428, line: 224, baseType: !1243, size: 64, offset: 6848)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !5427, file: !5428, line: 227, baseType: !1039, size: 192, offset: 6912)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !5427, file: !5428, line: 233, baseType: !1039, size: 192, offset: 7104)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1057, file: !1058, line: 970, baseType: !5527, size: 64, offset: 9280)
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 64)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !5428, line: 20, size: 16576, elements: !5529)
!5529 = !{!5530, !5531, !5532, !5533}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !5528, file: !5428, line: 21, baseType: !1021)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5528, file: !5428, line: 22, baseType: !1070, size: 32)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !5528, file: !5428, line: 23, baseType: !1841, size: 128, offset: 64)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5528, file: !5428, line: 24, baseType: !5534, size: 16384, offset: 192)
!5534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5535, size: 16384, elements: !2702)
!5535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !5438, line: 49, size: 256, elements: !5536)
!5536 = !{!5537}
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !5535, file: !5438, line: 50, baseType: !5538, size: 256)
!5538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !5438, line: 35, size: 256, elements: !5539)
!5539 = !{!5540, !5547, !5548, !5554}
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !5538, file: !5438, line: 37, baseType: !5541, size: 64)
!5541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !5542, line: 19, baseType: !5543)
!5542 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !5542, line: 18, baseType: !5545)
!5545 = !DISubroutineType(types: !5546)
!5546 = !{null, !223}
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !5538, file: !5438, line: 38, baseType: !994, size: 64, offset: 64)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !5538, file: !5438, line: 44, baseType: !5549, size: 64, offset: 128)
!5549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !5542, line: 22, baseType: !5550)
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5551, size: 64)
!5551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !5542, line: 21, baseType: !5552)
!5552 = !DISubroutineType(types: !5553)
!5553 = !{null}
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !5538, file: !5438, line: 46, baseType: !5442, size: 64, offset: 192)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1057, file: !1058, line: 971, baseType: !5442, size: 64, offset: 9344)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1057, file: !1058, line: 972, baseType: !5442, size: 64, offset: 9408)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1057, file: !1058, line: 974, baseType: !5442, size: 64, offset: 9472)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1057, file: !1058, line: 975, baseType: !5437, size: 192, offset: 9536)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1057, file: !1058, line: 976, baseType: !994, size: 64, offset: 9728)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1057, file: !1058, line: 977, baseType: !1645, size: 64, offset: 9792)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1057, file: !1058, line: 978, baseType: !7, size: 32, offset: 9856)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1057, file: !1058, line: 980, baseType: !1695, size: 64, offset: 9920)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1057, file: !1058, line: 989, baseType: !5564, size: 128, offset: 9984)
!5564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !5565, line: 35, size: 128, elements: !5566)
!5565 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!5566 = !{!5567, !5568, !5569}
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5564, file: !5565, line: 36, baseType: !223, size: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !5564, file: !5565, line: 37, baseType: !1074, size: 32, offset: 32)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5564, file: !5565, line: 38, baseType: !5570, size: 64, offset: 64)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !5565, line: 23, flags: DIFlagFwdDecl)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1057, file: !1058, line: 992, baseType: !984, size: 64, offset: 10112)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1057, file: !1058, line: 993, baseType: !984, size: 64, offset: 10176)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1057, file: !1058, line: 996, baseType: !1021, offset: 10240)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1057, file: !1058, line: 999, baseType: !1167, offset: 10240)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1057, file: !1058, line: 1001, baseType: !5577, size: 64, offset: 10240)
!5577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1058, line: 636, size: 64, elements: !5578)
!5578 = !{!5579}
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5577, file: !1058, line: 637, baseType: !5580, size: 64)
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1057, file: !1058, line: 1005, baseType: !1203, size: 128, offset: 10304)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1057, file: !1058, line: 1007, baseType: !1056, size: 64, offset: 10432)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1057, file: !1058, line: 1009, baseType: !5584, size: 64, offset: 10496)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1058, line: 1009, flags: DIFlagFwdDecl)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1057, file: !1058, line: 1043, baseType: !991, size: 64, offset: 10560)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1057, file: !1058, line: 1046, baseType: !5588, size: 64, offset: 10624)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1057, file: !1058, line: 1050, baseType: !5590, size: 64, offset: 10688)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !87, line: 1236, size: 320, elements: !5592)
!5592 = !{!5593, !5594, !5595, !5596, !5597}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5591, file: !87, line: 1237, baseType: !1013, size: 128)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5591, file: !87, line: 1238, baseType: !1013, size: 128, offset: 128)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5591, file: !87, line: 1239, baseType: !1001, size: 16, offset: 256)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5591, file: !87, line: 1240, baseType: !1495, size: 8, offset: 272)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5591, file: !87, line: 1241, baseType: !1495, size: 8, offset: 280)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1057, file: !1058, line: 1054, baseType: !5599, size: 64, offset: 10752)
!5599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5600, size: 64)
!5600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !4899, line: 131, size: 64, elements: !5601)
!5601 = !{!5602}
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !5600, file: !4899, line: 132, baseType: !994, size: 64)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1057, file: !1058, line: 1056, baseType: !4183, size: 64, offset: 10816)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1057, file: !1058, line: 1058, baseType: !3870, size: 64, offset: 10880)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1057, file: !1058, line: 1061, baseType: !5606, size: 64, offset: 10944)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1058, line: 43, flags: DIFlagFwdDecl)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1057, file: !1058, line: 1064, baseType: !994, size: 64, offset: 11008)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1057, file: !1058, line: 1065, baseType: !5610, size: 64, offset: 11072)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5611 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !5438, line: 14, baseType: !5612)
!5612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !5438, line: 12, size: 384, elements: !5613)
!5613 = !{!5614}
!5614 = !DIDerivedType(tag: DW_TAG_member, scope: !5612, file: !5438, line: 13, baseType: !5615, size: 384)
!5615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5612, file: !5438, line: 13, size: 384, elements: !5616)
!5616 = !{!5617, !5618, !5619, !5620}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5615, file: !5438, line: 13, baseType: !223, size: 32)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5615, file: !5438, line: 13, baseType: !223, size: 32, offset: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5615, file: !5438, line: 13, baseType: !223, size: 32, offset: 64)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5615, file: !5438, line: 13, baseType: !5621, size: 256, offset: 128)
!5621 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5622, line: 32, size: 256, elements: !5623)
!5622 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5623 = !{!5624, !5629, !5642, !5648, !5657, !5677, !5682}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5621, file: !5622, line: 37, baseType: !5625, size: 64)
!5625 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 34, size: 64, elements: !5626)
!5626 = !{!5627, !5628}
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5625, file: !5622, line: 35, baseType: !5321, size: 32)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5625, file: !5622, line: 36, baseType: !1360, size: 32, offset: 32)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5621, file: !5622, line: 45, baseType: !5630, size: 192)
!5630 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 40, size: 192, elements: !5631)
!5631 = !{!5632, !5634, !5635, !5641}
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5630, file: !5622, line: 41, baseType: !5633, size: 32)
!5633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1187, line: 95, baseType: !223)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5630, file: !5622, line: 42, baseType: !223, size: 32, offset: 32)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5630, file: !5622, line: 43, baseType: !5636, size: 64, offset: 64)
!5636 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5622, line: 11, baseType: !5637)
!5637 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5622, line: 8, size: 64, elements: !5638)
!5638 = !{!5639, !5640}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5637, file: !5622, line: 9, baseType: !223, size: 32)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5637, file: !5622, line: 10, baseType: !991, size: 64)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5630, file: !5622, line: 44, baseType: !223, size: 32, offset: 128)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5621, file: !5622, line: 52, baseType: !5643, size: 128)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 48, size: 128, elements: !5644)
!5644 = !{!5645, !5646, !5647}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5643, file: !5622, line: 49, baseType: !5321, size: 32)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5643, file: !5622, line: 50, baseType: !1360, size: 32, offset: 32)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5643, file: !5622, line: 51, baseType: !5636, size: 64, offset: 64)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5621, file: !5622, line: 61, baseType: !5649, size: 256)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 55, size: 256, elements: !5650)
!5650 = !{!5651, !5652, !5653, !5654, !5656}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5649, file: !5622, line: 56, baseType: !5321, size: 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5649, file: !5622, line: 57, baseType: !1360, size: 32, offset: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5649, file: !5622, line: 58, baseType: !223, size: 32, offset: 64)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5649, file: !5622, line: 59, baseType: !5655, size: 64, offset: 128)
!5655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1187, line: 94, baseType: !1719)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5649, file: !5622, line: 60, baseType: !5655, size: 64, offset: 192)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5621, file: !5622, line: 95, baseType: !5658, size: 256)
!5658 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 64, size: 256, elements: !5659)
!5659 = !{!5660, !5661}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5658, file: !5622, line: 65, baseType: !991, size: 64)
!5661 = !DIDerivedType(tag: DW_TAG_member, scope: !5658, file: !5622, line: 77, baseType: !5662, size: 192, offset: 64)
!5662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5658, file: !5622, line: 77, size: 192, elements: !5663)
!5663 = !{!5664, !5665, !5672}
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5662, file: !5622, line: 82, baseType: !1004, size: 16)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5662, file: !5622, line: 88, baseType: !5666, size: 192)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5662, file: !5622, line: 84, size: 192, elements: !5667)
!5667 = !{!5668, !5670, !5671}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5666, file: !5622, line: 85, baseType: !5669, size: 64)
!5669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 64, elements: !1181)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5666, file: !5622, line: 86, baseType: !991, size: 64, offset: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5666, file: !5622, line: 87, baseType: !991, size: 64, offset: 128)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5662, file: !5622, line: 93, baseType: !5673, size: 96)
!5673 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5662, file: !5622, line: 90, size: 96, elements: !5674)
!5674 = !{!5675, !5676}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5673, file: !5622, line: 91, baseType: !5669, size: 64)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5673, file: !5622, line: 92, baseType: !990, size: 32, offset: 64)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5621, file: !5622, line: 101, baseType: !5678, size: 128)
!5678 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 98, size: 128, elements: !5679)
!5679 = !{!5680, !5681}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5678, file: !5622, line: 99, baseType: !931, size: 64)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5678, file: !5622, line: 100, baseType: !223, size: 32, offset: 64)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5621, file: !5622, line: 108, baseType: !5683, size: 128)
!5683 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5621, file: !5622, line: 104, size: 128, elements: !5684)
!5684 = !{!5685, !5686, !5687}
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5683, file: !5622, line: 105, baseType: !991, size: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5683, file: !5622, line: 106, baseType: !223, size: 32, offset: 64)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5683, file: !5622, line: 107, baseType: !7, size: 32, offset: 96)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1057, file: !1058, line: 1067, baseType: !5510, offset: 11136)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1057, file: !1058, line: 1099, baseType: !5690, size: 64, offset: 11136)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1058, line: 56, flags: DIFlagFwdDecl)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1057, file: !1058, line: 1103, baseType: !1013, size: 128, offset: 11200)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1057, file: !1058, line: 1104, baseType: !5694, size: 64, offset: 11328)
!5694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5695, size: 64)
!5695 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1058, line: 46, flags: DIFlagFwdDecl)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1057, file: !1058, line: 1105, baseType: !1039, size: 192, offset: 11392)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1057, file: !1058, line: 1106, baseType: !7, size: 32, offset: 11584)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1057, file: !1058, line: 1109, baseType: !5699, size: 128, offset: 11648)
!5699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5700, size: 128, elements: !2043)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1058, line: 51, flags: DIFlagFwdDecl)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1057, file: !1058, line: 1110, baseType: !1039, size: 192, offset: 11776)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1057, file: !1058, line: 1111, baseType: !1013, size: 128, offset: 11968)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1057, file: !1058, line: 1173, baseType: !5705, size: 64, offset: 12096)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5707, line: 62, size: 256, align: 256, elements: !5708)
!5707 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5708 = !{!5709, !5710, !5711, !5716}
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5706, file: !5707, line: 75, baseType: !990, size: 32)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5706, file: !5707, line: 90, baseType: !990, size: 32, offset: 32)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5706, file: !5707, line: 124, baseType: !5712, size: 64, offset: 64)
!5712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5706, file: !5707, line: 109, size: 64, elements: !5713)
!5713 = !{!5714, !5715}
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5712, file: !5707, line: 110, baseType: !986, size: 64)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5712, file: !5707, line: 112, baseType: !986, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5706, file: !5707, line: 144, baseType: !990, size: 32, offset: 128)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1057, file: !1058, line: 1174, baseType: !989, size: 32, offset: 12160)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1057, file: !1058, line: 1179, baseType: !994, size: 64, offset: 12224)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1057, file: !1058, line: 1182, baseType: !5720, size: 128, offset: 12288)
!5720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !5164, line: 76, size: 128, elements: !5721)
!5721 = !{!5722, !5727, !5728}
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5720, file: !5164, line: 85, baseType: !5723, size: 64)
!5723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5724, line: 7, size: 64, elements: !5725)
!5724 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5725 = !{!5726}
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5723, file: !5724, line: 12, baseType: !1232, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5720, file: !5164, line: 88, baseType: !1495, size: 8, offset: 64)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5720, file: !5164, line: 95, baseType: !1495, size: 8, offset: 72)
!5729 = !DIDerivedType(tag: DW_TAG_member, scope: !1057, file: !1058, line: 1184, baseType: !5730, size: 128, offset: 12416)
!5730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1057, file: !1058, line: 1184, size: 128, elements: !5731)
!5731 = !{!5732, !5733}
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5730, file: !1058, line: 1185, baseType: !1070, size: 32)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5730, file: !1058, line: 1186, baseType: !1692, size: 128, align: 64)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1057, file: !1058, line: 1190, baseType: !1954, size: 64, offset: 12544)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1057, file: !1058, line: 1192, baseType: !5736, size: 128, offset: 12608)
!5736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !5164, line: 64, size: 128, elements: !5737)
!5737 = !{!5738, !5739, !5740}
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5736, file: !5164, line: 65, baseType: !1331, size: 64)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5736, file: !5164, line: 67, baseType: !990, size: 32, offset: 64)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5736, file: !5164, line: 68, baseType: !990, size: 32, offset: 96)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1057, file: !1058, line: 1206, baseType: !223, size: 32, offset: 12736)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1057, file: !1058, line: 1207, baseType: !223, size: 32, offset: 12768)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1057, file: !1058, line: 1209, baseType: !994, size: 64, offset: 12800)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1057, file: !1058, line: 1219, baseType: !984, size: 64, offset: 12864)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1057, file: !1058, line: 1220, baseType: !984, size: 64, offset: 12928)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1057, file: !1058, line: 1317, baseType: !223, size: 32, offset: 12992)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1057, file: !1058, line: 1319, baseType: !1056, size: 64, offset: 13056)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1057, file: !1058, line: 1322, baseType: !5749, size: 64, offset: 13120)
!5749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5750, size: 64)
!5750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5751, line: 56, size: 512, elements: !5752)
!5751 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5752 = !{!5753, !5754, !5755, !5756, !5757, !5758, !5759, !5761}
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5750, file: !5751, line: 57, baseType: !5749, size: 64)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5750, file: !5751, line: 58, baseType: !991, size: 64, offset: 64)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5750, file: !5751, line: 59, baseType: !994, size: 64, offset: 128)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5750, file: !5751, line: 60, baseType: !994, size: 64, offset: 192)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5750, file: !5751, line: 61, baseType: !4846, size: 64, offset: 256)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5750, file: !5751, line: 62, baseType: !7, size: 32, offset: 320)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5750, file: !5751, line: 63, baseType: !5760, size: 64, offset: 384)
!5760 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !993, line: 153, baseType: !984)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5750, file: !5751, line: 64, baseType: !2793, size: 64, offset: 448)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1057, file: !1058, line: 1326, baseType: !1070, size: 32, offset: 13184)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1057, file: !1058, line: 1342, baseType: !991, size: 64, offset: 13248)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1057, file: !1058, line: 1343, baseType: !986, size: 64, offset: 13312)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1057, file: !1058, line: 1344, baseType: !984, size: 64, offset: 13376)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1057, file: !1058, line: 1345, baseType: !986, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1057, file: !1058, line: 1346, baseType: !986, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1057, file: !1058, line: 1347, baseType: !986, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1057, file: !1058, line: 1348, baseType: !1692, size: 128, align: 64, offset: 13504)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1057, file: !1058, line: 1358, baseType: !5771, size: 34816, offset: 13824)
!5771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5772, line: 485, size: 34816, elements: !5773)
!5772 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5773 = !{!5774, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5803, !5804, !5805, !5806, !5807, !5808, !5811, !5812, !5813}
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5771, file: !5772, line: 487, baseType: !5775, size: 192)
!5775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5776, size: 192, elements: !1563)
!5776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5777, line: 16, size: 64, elements: !5778)
!5777 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5778 = !{!5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5776, file: !5777, line: 17, baseType: !1740, size: 16)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5776, file: !5777, line: 18, baseType: !1740, size: 16, offset: 16)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5776, file: !5777, line: 19, baseType: !1740, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5776, file: !5777, line: 19, baseType: !1740, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5776, file: !5777, line: 19, baseType: !1740, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5776, file: !5777, line: 19, baseType: !1740, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5776, file: !5777, line: 19, baseType: !1740, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5776, file: !5777, line: 20, baseType: !1740, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5776, file: !5777, line: 20, baseType: !1740, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5776, file: !5777, line: 20, baseType: !1740, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5776, file: !5777, line: 20, baseType: !1740, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5776, file: !5777, line: 20, baseType: !1740, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5776, file: !5777, line: 20, baseType: !1740, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5771, file: !5772, line: 491, baseType: !994, size: 64, offset: 192)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5771, file: !5772, line: 495, baseType: !1001, size: 16, offset: 256)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5771, file: !5772, line: 496, baseType: !1001, size: 16, offset: 272)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5771, file: !5772, line: 497, baseType: !1001, size: 16, offset: 288)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5771, file: !5772, line: 498, baseType: !1001, size: 16, offset: 304)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5771, file: !5772, line: 502, baseType: !994, size: 64, offset: 320)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5771, file: !5772, line: 503, baseType: !994, size: 64, offset: 384)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5771, file: !5772, line: 514, baseType: !5800, size: 256, offset: 448)
!5800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5801, size: 256, elements: !2003)
!5801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5802, size: 64)
!5802 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5772, line: 483, flags: DIFlagFwdDecl)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5771, file: !5772, line: 516, baseType: !994, size: 64, offset: 704)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5771, file: !5772, line: 518, baseType: !994, size: 64, offset: 768)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5771, file: !5772, line: 520, baseType: !994, size: 64, offset: 832)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5771, file: !5772, line: 521, baseType: !994, size: 64, offset: 896)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5771, file: !5772, line: 522, baseType: !994, size: 64, offset: 960)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5771, file: !5772, line: 528, baseType: !5809, size: 64, offset: 1024)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5772, line: 10, flags: DIFlagFwdDecl)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5771, file: !5772, line: 535, baseType: !994, size: 64, offset: 1088)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5771, file: !5772, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5771, file: !5772, line: 540, baseType: !5814, size: 33280, offset: 1536)
!5814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5815, line: 317, size: 33280, elements: !5816)
!5815 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5816 = !{!5817, !5818, !5819}
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5814, file: !5815, line: 330, baseType: !7, size: 32)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5814, file: !5815, line: 337, baseType: !994, size: 64, offset: 64)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5814, file: !5815, line: 348, baseType: !5820, size: 32768, offset: 512)
!5820 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5815, line: 304, size: 32768, elements: !5821)
!5821 = !{!5822, !5837, !5874, !5924, !5937}
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5820, file: !5815, line: 305, baseType: !5823, size: 896)
!5823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5815, line: 12, size: 896, elements: !5824)
!5824 = !{!5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5836}
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5823, file: !5815, line: 13, baseType: !989, size: 32)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5823, file: !5815, line: 14, baseType: !989, size: 32, offset: 32)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5823, file: !5815, line: 15, baseType: !989, size: 32, offset: 64)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5823, file: !5815, line: 16, baseType: !989, size: 32, offset: 96)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5823, file: !5815, line: 17, baseType: !989, size: 32, offset: 128)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5823, file: !5815, line: 18, baseType: !989, size: 32, offset: 160)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5823, file: !5815, line: 19, baseType: !989, size: 32, offset: 192)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5823, file: !5815, line: 22, baseType: !5833, size: 640, offset: 224)
!5833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 640, elements: !5834)
!5834 = !{!5835}
!5835 = !DISubrange(count: 20)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5823, file: !5815, line: 25, baseType: !989, size: 32, offset: 864)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5820, file: !5815, line: 306, baseType: !5838, size: 4096, align: 128)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5815, line: 34, size: 4096, align: 128, elements: !5839)
!5839 = !{!5840, !5841, !5842, !5843, !5844, !5859, !5860, !5861, !5863, !5865, !5869}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5838, file: !5815, line: 35, baseType: !1740, size: 16)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5838, file: !5815, line: 36, baseType: !1740, size: 16, offset: 16)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5838, file: !5815, line: 37, baseType: !1740, size: 16, offset: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5838, file: !5815, line: 38, baseType: !1740, size: 16, offset: 48)
!5844 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !5815, line: 39, baseType: !5845, size: 128, offset: 64)
!5845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !5815, line: 39, size: 128, elements: !5846)
!5846 = !{!5847, !5852}
!5847 = !DIDerivedType(tag: DW_TAG_member, scope: !5845, file: !5815, line: 40, baseType: !5848, size: 128)
!5848 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5845, file: !5815, line: 40, size: 128, elements: !5849)
!5849 = !{!5850, !5851}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5848, file: !5815, line: 41, baseType: !984, size: 64)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5848, file: !5815, line: 42, baseType: !984, size: 64, offset: 64)
!5852 = !DIDerivedType(tag: DW_TAG_member, scope: !5845, file: !5815, line: 44, baseType: !5853, size: 128)
!5853 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5845, file: !5815, line: 44, size: 128, elements: !5854)
!5854 = !{!5855, !5856, !5857, !5858}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5853, file: !5815, line: 45, baseType: !989, size: 32)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5853, file: !5815, line: 46, baseType: !989, size: 32, offset: 32)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5853, file: !5815, line: 47, baseType: !989, size: 32, offset: 64)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5853, file: !5815, line: 48, baseType: !989, size: 32, offset: 96)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5838, file: !5815, line: 51, baseType: !989, size: 32, offset: 192)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5838, file: !5815, line: 52, baseType: !989, size: 32, offset: 224)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5838, file: !5815, line: 55, baseType: !5862, size: 1024, offset: 256)
!5862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 1024, elements: !1415)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5838, file: !5815, line: 58, baseType: !5864, size: 2048, offset: 1280)
!5864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 2048, elements: !2702)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5838, file: !5815, line: 60, baseType: !5866, size: 384, offset: 3328)
!5866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 384, elements: !5867)
!5867 = !{!5868}
!5868 = !DISubrange(count: 12)
!5869 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !5815, line: 62, baseType: !5870, size: 384, offset: 3712)
!5870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !5815, line: 62, size: 384, elements: !5871)
!5871 = !{!5872, !5873}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5870, file: !5815, line: 63, baseType: !5866, size: 384)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5870, file: !5815, line: 64, baseType: !5866, size: 384)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5820, file: !5815, line: 307, baseType: !5875, size: 1088)
!5875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5815, line: 79, size: 1088, elements: !5876)
!5876 = !{!5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5923}
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5875, file: !5815, line: 80, baseType: !989, size: 32)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5875, file: !5815, line: 81, baseType: !989, size: 32, offset: 32)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5875, file: !5815, line: 82, baseType: !989, size: 32, offset: 64)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5875, file: !5815, line: 83, baseType: !989, size: 32, offset: 96)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5875, file: !5815, line: 84, baseType: !989, size: 32, offset: 128)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5875, file: !5815, line: 85, baseType: !989, size: 32, offset: 160)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5875, file: !5815, line: 86, baseType: !989, size: 32, offset: 192)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5875, file: !5815, line: 88, baseType: !5833, size: 640, offset: 224)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5875, file: !5815, line: 89, baseType: !1216, size: 8, offset: 864)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5875, file: !5815, line: 90, baseType: !1216, size: 8, offset: 872)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5875, file: !5815, line: 91, baseType: !1216, size: 8, offset: 880)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5875, file: !5815, line: 92, baseType: !1216, size: 8, offset: 888)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5875, file: !5815, line: 93, baseType: !1216, size: 8, offset: 896)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5875, file: !5815, line: 94, baseType: !1216, size: 8, offset: 904)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5875, file: !5815, line: 95, baseType: !5892, size: 64, offset: 960)
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 64)
!5893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5894, line: 11, size: 128, elements: !5895)
!5894 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5895 = !{!5896, !5897}
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5893, file: !5894, line: 12, baseType: !931, size: 64)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5893, file: !5894, line: 13, baseType: !5898, size: 64, offset: 64)
!5898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5899, size: 64)
!5899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5900, line: 56, size: 1344, elements: !5901)
!5900 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5901 = !{!5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5919, !5920, !5921, !5922}
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5899, file: !5900, line: 61, baseType: !994, size: 64)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5899, file: !5900, line: 62, baseType: !994, size: 64, offset: 64)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5899, file: !5900, line: 63, baseType: !994, size: 64, offset: 128)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5899, file: !5900, line: 64, baseType: !994, size: 64, offset: 192)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5899, file: !5900, line: 65, baseType: !994, size: 64, offset: 256)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5899, file: !5900, line: 66, baseType: !994, size: 64, offset: 320)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5899, file: !5900, line: 68, baseType: !994, size: 64, offset: 384)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5899, file: !5900, line: 69, baseType: !994, size: 64, offset: 448)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5899, file: !5900, line: 70, baseType: !994, size: 64, offset: 512)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5899, file: !5900, line: 71, baseType: !994, size: 64, offset: 576)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5899, file: !5900, line: 72, baseType: !994, size: 64, offset: 640)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5899, file: !5900, line: 73, baseType: !994, size: 64, offset: 704)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5899, file: !5900, line: 74, baseType: !994, size: 64, offset: 768)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5899, file: !5900, line: 75, baseType: !994, size: 64, offset: 832)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5899, file: !5900, line: 76, baseType: !994, size: 64, offset: 896)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5899, file: !5900, line: 81, baseType: !994, size: 64, offset: 960)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5899, file: !5900, line: 83, baseType: !994, size: 64, offset: 1024)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5899, file: !5900, line: 84, baseType: !994, size: 64, offset: 1088)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5899, file: !5900, line: 85, baseType: !994, size: 64, offset: 1152)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5899, file: !5900, line: 86, baseType: !994, size: 64, offset: 1216)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5899, file: !5900, line: 87, baseType: !994, size: 64, offset: 1280)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5875, file: !5815, line: 96, baseType: !989, size: 32, offset: 1024)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5820, file: !5815, line: 308, baseType: !5925, size: 4608, align: 512)
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5815, line: 289, size: 4608, align: 512, elements: !5926)
!5926 = !{!5927, !5928, !5935}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5925, file: !5815, line: 290, baseType: !5838, size: 4096, align: 128)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5925, file: !5815, line: 291, baseType: !5929, size: 512, offset: 4096)
!5929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5815, line: 268, size: 512, elements: !5930)
!5930 = !{!5931, !5932, !5933}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5929, file: !5815, line: 269, baseType: !984, size: 64)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5929, file: !5815, line: 270, baseType: !984, size: 64, offset: 64)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5929, file: !5815, line: 271, baseType: !5934, size: 384, offset: 128)
!5934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 384, elements: !2111)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5925, file: !5815, line: 292, baseType: !5936, offset: 4608)
!5936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, elements: !2372)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5820, file: !5815, line: 309, baseType: !5938, size: 32768)
!5938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 32768, elements: !5939)
!5939 = !{!5940}
!5940 = !DISubrange(count: 4096)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !1010, file: !173, line: 545, baseType: !2306, size: 64, offset: 832)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !1010, file: !173, line: 547, baseType: !1841, size: 128, offset: 896)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !1010, file: !173, line: 548, baseType: !5944, size: 64, offset: 1024)
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5945, size: 64)
!5945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !173, line: 32, size: 2880, elements: !5946)
!5946 = !{!5947, !5948, !5949, !5953, !6105, !6189, !6190, !6191, !6195, !6199, !6200, !6201, !6202, !6203, !6207, !6208, !6212, !6216, !6220, !6224, !6228, !6232, !6236, !6240, !6244, !6245, !6249, !6253, !6257, !6261, !6262, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6299, !6300, !6301, !6302, !6303, !6306}
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5945, file: !173, line: 33, baseType: !1542, size: 64)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5945, file: !173, line: 34, baseType: !1450, size: 64, offset: 64)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5945, file: !173, line: 43, baseType: !5950, size: 64, offset: 128)
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!1450, !1009}
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5945, file: !173, line: 50, baseType: !5954, size: 64, offset: 192)
!5954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5955, size: 64)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{!223, !5957, !7, !991}
!5957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5958, size: 64)
!5958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !147, line: 101, size: 15232, align: 64, elements: !5959)
!5959 = !{!5960, !5961, !5962, !5963, !5964, !5965, !5966, !5967, !5968, !5969, !5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !5982, !5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5999, !6000, !6001, !6002, !6003, !6027, !6029, !6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6093, !6094, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104}
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5958, file: !147, line: 102, baseType: !1009, size: 64)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !5958, file: !147, line: 103, baseType: !3734, size: 64, offset: 64)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5958, file: !147, line: 106, baseType: !1013, size: 128, offset: 128)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !5958, file: !147, line: 107, baseType: !1013, size: 128, offset: 256)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !5958, file: !147, line: 109, baseType: !1074, size: 32, offset: 384)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !5958, file: !147, line: 110, baseType: !1074, size: 32, offset: 416)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !5958, file: !147, line: 112, baseType: !1074, size: 32, offset: 448)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5958, file: !147, line: 113, baseType: !1021, offset: 480)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !5958, file: !147, line: 114, baseType: !1013, size: 128, offset: 512)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5958, file: !147, line: 115, baseType: !1001, size: 16, offset: 640)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !5958, file: !147, line: 116, baseType: !1001, size: 16, offset: 656)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !5958, file: !147, line: 117, baseType: !1001, size: 16, offset: 672)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !5958, file: !147, line: 118, baseType: !1001, size: 16, offset: 688)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !5958, file: !147, line: 119, baseType: !994, size: 64, offset: 704)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !5958, file: !147, line: 120, baseType: !994, size: 64, offset: 768)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !5958, file: !147, line: 123, baseType: !994, size: 64, offset: 832)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5958, file: !147, line: 125, baseType: !7, size: 32, offset: 896)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5958, file: !147, line: 125, baseType: !7, size: 32, offset: 928)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !5958, file: !147, line: 126, baseType: !984, size: 64, offset: 960)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5958, file: !147, line: 127, baseType: !7, size: 32, offset: 1024)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !5958, file: !147, line: 129, baseType: !7, size: 32, offset: 1056)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5958, file: !147, line: 131, baseType: !991, size: 64, offset: 1088)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5958, file: !147, line: 132, baseType: !1218, size: 8, offset: 1152)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5958, file: !147, line: 133, baseType: !1452, size: 8, offset: 1160)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !5958, file: !147, line: 134, baseType: !1452, size: 8, offset: 1168)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !5958, file: !147, line: 135, baseType: !1039, size: 192, offset: 1216)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !5958, file: !147, line: 136, baseType: !1218, size: 8, offset: 1408)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !5958, file: !147, line: 137, baseType: !4914, size: 64, offset: 1472)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5958, file: !147, line: 138, baseType: !1450, size: 64, offset: 1536)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5958, file: !147, line: 139, baseType: !1450, size: 64, offset: 1600)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5958, file: !147, line: 140, baseType: !1450, size: 64, offset: 1664)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !5958, file: !147, line: 143, baseType: !5992, size: 64, offset: 1728)
!5992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5993, size: 64)
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !147, line: 95, size: 192, elements: !5994)
!5994 = !{!5995, !5996, !5997}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5993, file: !147, line: 96, baseType: !1692, size: 128, align: 64)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5993, file: !147, line: 97, baseType: !223, size: 32, offset: 128)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5993, file: !147, line: 98, baseType: !5998, offset: 160)
!5998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, elements: !3434)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !5958, file: !147, line: 144, baseType: !5992, size: 64, offset: 1792)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !5958, file: !147, line: 145, baseType: !5992, size: 64, offset: 1856)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !5958, file: !147, line: 146, baseType: !5992, size: 64, offset: 1920)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !5958, file: !147, line: 147, baseType: !1218, size: 8, offset: 1984)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !5958, file: !147, line: 148, baseType: !6004, size: 64, offset: 2048)
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 64)
!6005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !147, line: 289, size: 6272, align: 64, elements: !6006)
!6006 = !{!6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025, !6026}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !6005, file: !147, line: 290, baseType: !5957, size: 64)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !6005, file: !147, line: 291, baseType: !1013, size: 128, offset: 64)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !6005, file: !147, line: 292, baseType: !1013, size: 128, offset: 192)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6005, file: !147, line: 293, baseType: !2658, size: 5568, offset: 320)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !6005, file: !147, line: 294, baseType: !2947, size: 32, offset: 5888)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !6005, file: !147, line: 295, baseType: !7, size: 32, offset: 5920)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6005, file: !147, line: 296, baseType: !7, size: 32, offset: 5952)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6005, file: !147, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !6005, file: !147, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !6005, file: !147, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !6005, file: !147, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !6005, file: !147, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !6005, file: !147, line: 310, baseType: !1074, size: 32, offset: 6016)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !6005, file: !147, line: 311, baseType: !1074, size: 32, offset: 6048)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !6005, file: !147, line: 317, baseType: !7, size: 32, offset: 6080)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !6005, file: !147, line: 318, baseType: !7, size: 32, offset: 6112)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !6005, file: !147, line: 321, baseType: !1452, size: 8, offset: 6144)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6005, file: !147, line: 322, baseType: !146, size: 32, offset: 6176)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !6005, file: !147, line: 323, baseType: !991, size: 64, offset: 6208)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !6005, file: !147, line: 324, baseType: !5240, offset: 6272)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !5958, file: !147, line: 150, baseType: !6028, size: 64, offset: 2112)
!6028 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !147, line: 18, baseType: !986)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !5958, file: !147, line: 154, baseType: !7, size: 32, offset: 2176)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5958, file: !147, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5958, file: !147, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !5958, file: !147, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !5958, file: !147, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5958, file: !147, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !5958, file: !147, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5958, file: !147, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !5958, file: !147, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !5958, file: !147, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !5958, file: !147, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !5958, file: !147, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !5958, file: !147, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !5958, file: !147, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !5958, file: !147, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !5958, file: !147, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !5958, file: !147, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !5958, file: !147, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !5958, file: !147, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !5958, file: !147, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5958, file: !147, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !5958, file: !147, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !5958, file: !147, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !5958, file: !147, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !5958, file: !147, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !5958, file: !147, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !5958, file: !147, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !5958, file: !147, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !5958, file: !147, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !5958, file: !147, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !5958, file: !147, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !5958, file: !147, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !5958, file: !147, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !5958, file: !147, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !5958, file: !147, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !5958, file: !147, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !5958, file: !147, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !5958, file: !147, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !5958, file: !147, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !5958, file: !147, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !5958, file: !147, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5958, file: !147, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !5958, file: !147, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !5958, file: !147, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !5958, file: !147, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !5958, file: !147, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !5958, file: !147, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !5958, file: !147, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !5958, file: !147, line: 208, baseType: !1495, size: 8, offset: 2256)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !5958, file: !147, line: 210, baseType: !1074, size: 32, offset: 2272)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !5958, file: !147, line: 212, baseType: !1235, size: 64, offset: 2304)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !5958, file: !147, line: 213, baseType: !1235, size: 64, offset: 2368)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !5958, file: !147, line: 214, baseType: !1013, size: 128, offset: 2432)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !5958, file: !147, line: 215, baseType: !2247, size: 256, offset: 2560)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !5958, file: !147, line: 217, baseType: !7, size: 32, offset: 2816)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !5958, file: !147, line: 220, baseType: !1074, size: 32, offset: 2848)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !5958, file: !147, line: 221, baseType: !1074, size: 32, offset: 2880)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !5958, file: !147, line: 222, baseType: !1074, size: 32, offset: 2912)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !5958, file: !147, line: 224, baseType: !2658, size: 5568, offset: 2944)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !5958, file: !147, line: 225, baseType: !2658, size: 5568, offset: 8512)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !5958, file: !147, line: 227, baseType: !6090, size: 256, offset: 14080)
!6090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !930, line: 168, size: 256, elements: !6091)
!6091 = !{!6092}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6090, file: !930, line: 169, baseType: !2247, size: 256)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5958, file: !147, line: 228, baseType: !2247, size: 256, offset: 14336)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5958, file: !147, line: 230, baseType: !6095, size: 64, offset: 14592)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !147, line: 230, flags: DIFlagFwdDecl)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5958, file: !147, line: 231, baseType: !991, size: 64, offset: 14656)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !5958, file: !147, line: 233, baseType: !1645, size: 64, offset: 14720)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !5958, file: !147, line: 234, baseType: !991, size: 64, offset: 14784)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !5958, file: !147, line: 236, baseType: !1218, size: 8, offset: 14848)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !5958, file: !147, line: 237, baseType: !1039, size: 192, offset: 14912)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !5958, file: !147, line: 238, baseType: !154, size: 32, offset: 15104)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !5958, file: !147, line: 239, baseType: !1056, size: 64, offset: 15168)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !5958, file: !147, line: 240, baseType: !5240, offset: 15232)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5945, file: !173, line: 65, baseType: !6106, size: 64, offset: 256)
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6107, size: 64)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!223, !1009, !6109}
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6110, size: 64)
!6110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !6111, line: 68, size: 3136, elements: !6112)
!6111 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!6112 = !{!6113, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6159, !6161, !6162, !6163, !6164, !6165, !6169, !6183, !6184, !6185, !6186, !6187, !6188}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !6110, file: !6111, line: 69, baseType: !6114, size: 448)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !6115, line: 9, size: 448, elements: !6116)
!6115 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!6116 = !{!6117, !6119, !6120, !6121, !6122, !6123, !6124, !6125}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !6114, file: !6115, line: 10, baseType: !6118, size: 128)
!6118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 128, elements: !3376)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6114, file: !6115, line: 11, baseType: !4914, size: 64, offset: 128)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !6114, file: !6115, line: 12, baseType: !1001, size: 16, offset: 192)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !6114, file: !6115, line: 13, baseType: !223, size: 32, offset: 224)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !6114, file: !6115, line: 14, baseType: !7, size: 32, offset: 256)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !6114, file: !6115, line: 15, baseType: !7, size: 32, offset: 288)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !6114, file: !6115, line: 16, baseType: !223, size: 32, offset: 320)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !6114, file: !6115, line: 17, baseType: !991, size: 64, offset: 384)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6110, file: !6111, line: 70, baseType: !5957, size: 64, offset: 448)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !6110, file: !6111, line: 71, baseType: !1013, size: 128, offset: 512)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !6110, file: !6111, line: 72, baseType: !3757, size: 704, offset: 640)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6110, file: !6111, line: 74, baseType: !1692, size: 128, align: 64, offset: 1344)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !6110, file: !6111, line: 76, baseType: !223, size: 32, offset: 1472)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !6110, file: !6111, line: 83, baseType: !994, size: 64, offset: 1536)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !6110, file: !6111, line: 85, baseType: !223, size: 32, offset: 1600)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !6110, file: !6111, line: 86, baseType: !223, size: 32, offset: 1632)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !6110, file: !6111, line: 88, baseType: !1218, size: 8, offset: 1664)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !6110, file: !6111, line: 89, baseType: !1218, size: 8, offset: 1672)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !6110, file: !6111, line: 90, baseType: !1218, size: 8, offset: 1680)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !6110, file: !6111, line: 92, baseType: !1001, size: 16, offset: 1696)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !6110, file: !6111, line: 93, baseType: !165, size: 32, offset: 1728)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !6110, file: !6111, line: 96, baseType: !4914, size: 64, offset: 1792)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !6110, file: !6111, line: 100, baseType: !6141, size: 192, offset: 1856)
!6141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !6111, line: 35, size: 192, elements: !6142)
!6142 = !{!6143, !6158}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !6141, file: !6111, line: 36, baseType: !6144, size: 128)
!6144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !6145, line: 42, size: 128, elements: !6146)
!6145 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!6146 = !{!6147, !6156, !6157}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !6144, file: !6145, line: 43, baseType: !6148, size: 64)
!6148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6149, size: 64)
!6149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !6145, line: 11, size: 256, elements: !6150)
!6150 = !{!6151, !6152, !6153, !6154, !6155}
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !6149, file: !6145, line: 12, baseType: !994, size: 64)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6149, file: !6145, line: 13, baseType: !7, size: 32, offset: 64)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6149, file: !6145, line: 14, baseType: !7, size: 32, offset: 96)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !6149, file: !6145, line: 15, baseType: !4966, size: 64, offset: 128)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !6149, file: !6145, line: 17, baseType: !7, size: 32, offset: 192)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !6144, file: !6145, line: 44, baseType: !7, size: 32, offset: 64)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !6144, file: !6145, line: 45, baseType: !7, size: 32, offset: 96)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6141, file: !6111, line: 37, baseType: !7, size: 32, offset: 128)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !6110, file: !6111, line: 101, baseType: !6160, size: 64, offset: 2048)
!6160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6141, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !6110, file: !6111, line: 103, baseType: !7, size: 32, offset: 2112)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !6110, file: !6111, line: 106, baseType: !7, size: 32, offset: 2144)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6110, file: !6111, line: 112, baseType: !3738, size: 64, offset: 2176)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !6110, file: !6111, line: 115, baseType: !4914, size: 64, offset: 2240)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !6110, file: !6111, line: 123, baseType: !6166, size: 64, offset: 2304)
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6167, size: 64)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{null, !6109}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !6110, file: !6111, line: 129, baseType: !6170, size: 512, offset: 2368)
!6170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !6111, line: 41, size: 512, elements: !6171)
!6171 = !{!6172, !6173, !6174, !6175, !6176, !6177, !6179, !6180, !6181, !6182}
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6170, file: !6111, line: 42, baseType: !1476, size: 64)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !6170, file: !6111, line: 43, baseType: !223, size: 32, offset: 64)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6170, file: !6111, line: 44, baseType: !6148, size: 64, offset: 128)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !6170, file: !6111, line: 45, baseType: !223, size: 32, offset: 192)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !6170, file: !6111, line: 47, baseType: !4966, size: 64, offset: 256)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !6170, file: !6111, line: 49, baseType: !6178, size: 32, offset: 320)
!6178 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !223)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !6170, file: !6111, line: 50, baseType: !6178, size: 32, offset: 352)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !6170, file: !6111, line: 51, baseType: !6178, size: 32, offset: 384)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !6170, file: !6111, line: 52, baseType: !6178, size: 32, offset: 416)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6170, file: !6111, line: 53, baseType: !6178, size: 32, offset: 448)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !6110, file: !6111, line: 131, baseType: !4914, size: 64, offset: 2880)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !6110, file: !6111, line: 139, baseType: !223, size: 32, offset: 2944)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6110, file: !6111, line: 140, baseType: !223, size: 32, offset: 2976)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6110, file: !6111, line: 141, baseType: !994, size: 64, offset: 3008)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6110, file: !6111, line: 143, baseType: !1218, size: 8, offset: 3072)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !6110, file: !6111, line: 144, baseType: !7, size: 32, offset: 3104)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5945, file: !173, line: 66, baseType: !6106, size: 64, offset: 320)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5945, file: !173, line: 102, baseType: !6106, size: 64, offset: 384)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5945, file: !173, line: 112, baseType: !6192, size: 64, offset: 448)
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 64)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{null, !1009, !1740}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5945, file: !173, line: 132, baseType: !6196, size: 64, offset: 512)
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6197, size: 64)
!6197 = !DISubroutineType(types: !6198)
!6198 = !{!223, !6109}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5945, file: !173, line: 133, baseType: !6196, size: 64, offset: 576)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5945, file: !173, line: 134, baseType: !6196, size: 64, offset: 640)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5945, file: !173, line: 135, baseType: !6196, size: 64, offset: 704)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5945, file: !173, line: 136, baseType: !6196, size: 64, offset: 768)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5945, file: !173, line: 164, baseType: !6204, size: 64, offset: 832)
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 64)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!223, !5957}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5945, file: !173, line: 195, baseType: !6204, size: 64, offset: 896)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5945, file: !173, line: 206, baseType: !6209, size: 64, offset: 960)
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6210, size: 64)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{null, !5957}
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5945, file: !173, line: 220, baseType: !6213, size: 64, offset: 1024)
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6214, size: 64)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!223, !6004}
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5945, file: !173, line: 230, baseType: !6217, size: 64, offset: 1088)
!6217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6218, size: 64)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{null, !6004}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5945, file: !173, line: 241, baseType: !6221, size: 64, offset: 1152)
!6221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6222, size: 64)
!6222 = !DISubroutineType(types: !6223)
!6223 = !{!223, !1009, !994}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5945, file: !173, line: 250, baseType: !6225, size: 64, offset: 1216)
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 64)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{null, !1009}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5945, file: !173, line: 263, baseType: !6229, size: 64, offset: 1280)
!6229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6230, size: 64)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!223, !5957, !223}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5945, file: !173, line: 271, baseType: !6233, size: 64, offset: 1344)
!6233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6234, size: 64)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!223, !1009}
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5945, file: !173, line: 278, baseType: !6237, size: 64, offset: 1408)
!6237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6238, size: 64)
!6238 = !DISubroutineType(types: !6239)
!6239 = !{!1495, !3738}
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5945, file: !173, line: 288, baseType: !6241, size: 64, offset: 1472)
!6241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 64)
!6242 = !DISubroutineType(types: !6243)
!6243 = !{!223, !5957, !2608, !2630, !1633}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5945, file: !173, line: 297, baseType: !6209, size: 64, offset: 1536)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5945, file: !173, line: 306, baseType: !6246, size: 64, offset: 1600)
!6246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6247, size: 64)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{!223, !1639, !1009}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5945, file: !173, line: 307, baseType: !6250, size: 64, offset: 1664)
!6250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6251, size: 64)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{!223, !1009, !1476, !223}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5945, file: !173, line: 316, baseType: !6254, size: 64, offset: 1728)
!6254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6255, size: 64)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{!99, !6109}
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5945, file: !173, line: 326, baseType: !6258, size: 64, offset: 1792)
!6258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6259, size: 64)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{!223, !1009, !223}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5945, file: !173, line: 334, baseType: !1450, size: 64, offset: 1856)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5945, file: !173, line: 340, baseType: !6263, size: 64, offset: 1920)
!6263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 64)
!6264 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !6265, line: 123, flags: DIFlagFwdDecl)
!6265 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5945, file: !173, line: 347, baseType: !223, size: 32, offset: 1984)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5945, file: !173, line: 356, baseType: !223, size: 32, offset: 2016)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5945, file: !173, line: 362, baseType: !1001, size: 16, offset: 2048)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5945, file: !173, line: 363, baseType: !1001, size: 16, offset: 2064)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5945, file: !173, line: 368, baseType: !7, size: 32, offset: 2080)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5945, file: !173, line: 373, baseType: !7, size: 32, offset: 2112)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5945, file: !173, line: 379, baseType: !994, size: 64, offset: 2176)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5945, file: !173, line: 381, baseType: !994, size: 64, offset: 2240)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5945, file: !173, line: 400, baseType: !1004, size: 16, offset: 2304)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5945, file: !173, line: 406, baseType: !1218, size: 8, offset: 2320)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5945, file: !173, line: 409, baseType: !223, size: 32, offset: 2336)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5945, file: !173, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5945, file: !173, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5945, file: !173, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5945, file: !173, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5945, file: !173, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5945, file: !173, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5945, file: !173, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5945, file: !173, line: 445, baseType: !7, size: 32, offset: 2400)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5945, file: !173, line: 459, baseType: !6286, size: 64, offset: 2432)
!6286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6287, size: 64)
!6287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6288, size: 64)
!6288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !52, line: 99, size: 256, elements: !6289)
!6289 = !{!6290, !6291, !6295}
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6288, file: !52, line: 100, baseType: !2729, size: 128)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6288, file: !52, line: 101, baseType: !6292, size: 64, offset: 128)
!6292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6293, size: 64)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!1717, !2957, !6287, !1476}
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6288, file: !52, line: 103, baseType: !6296, size: 64, offset: 192)
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6297, size: 64)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{!1717, !2957, !6287, !1450, !1645}
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5945, file: !173, line: 464, baseType: !6286, size: 64, offset: 2496)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5945, file: !173, line: 470, baseType: !2740, size: 64, offset: 2560)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5945, file: !173, line: 479, baseType: !984, size: 64, offset: 2624)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5945, file: !173, line: 484, baseType: !7, size: 32, offset: 2688)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5945, file: !173, line: 485, baseType: !6304, size: 64, offset: 2752)
!6304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6305, size: 64)
!6305 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !173, line: 19, flags: DIFlagFwdDecl)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5945, file: !173, line: 488, baseType: !223, size: 32, offset: 2816)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !1010, file: !173, line: 549, baseType: !6308, size: 64, offset: 1088)
!6308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6309, size: 64)
!6309 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !173, line: 23, flags: DIFlagFwdDecl)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !1010, file: !173, line: 552, baseType: !4125, size: 2304, offset: 1152)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !1010, file: !173, line: 554, baseType: !1074, size: 32, offset: 3456)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !1010, file: !173, line: 556, baseType: !7, size: 32, offset: 3488)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !1010, file: !173, line: 558, baseType: !7, size: 32, offset: 3520)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !1010, file: !173, line: 560, baseType: !7, size: 32, offset: 3552)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !1010, file: !173, line: 563, baseType: !223, size: 32, offset: 3584)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !1010, file: !173, line: 564, baseType: !994, size: 64, offset: 3648)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !1010, file: !173, line: 573, baseType: !7, size: 32, offset: 3712)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !1010, file: !173, line: 574, baseType: !7, size: 32, offset: 3744)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !1010, file: !173, line: 575, baseType: !984, size: 64, offset: 3776)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !1010, file: !173, line: 584, baseType: !7, size: 32, offset: 3840)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !1010, file: !173, line: 593, baseType: !1001, size: 16, offset: 3872)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !1010, file: !173, line: 595, baseType: !223, size: 32, offset: 3904)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !1010, file: !173, line: 596, baseType: !223, size: 32, offset: 3936)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !1010, file: !173, line: 597, baseType: !1004, size: 16, offset: 3968)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !1010, file: !173, line: 598, baseType: !1001, size: 16, offset: 3984)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !1010, file: !173, line: 599, baseType: !1001, size: 16, offset: 4000)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !1010, file: !173, line: 600, baseType: !7, size: 32, offset: 4032)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1010, file: !173, line: 601, baseType: !7, size: 32, offset: 4064)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !1010, file: !173, line: 602, baseType: !994, size: 64, offset: 4096)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !1010, file: !173, line: 603, baseType: !994, size: 64, offset: 4160)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !1010, file: !173, line: 612, baseType: !7, size: 32, offset: 4224)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !1010, file: !173, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !1010, file: !173, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !1010, file: !173, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !1010, file: !173, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !1010, file: !173, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !1010, file: !173, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !1010, file: !173, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !1010, file: !173, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !1010, file: !173, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !1010, file: !173, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !1010, file: !173, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !1010, file: !173, line: 653, baseType: !6344, size: 160, offset: 4272)
!6344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 160, elements: !5834)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !1010, file: !173, line: 654, baseType: !3528, size: 64, offset: 4480)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !1010, file: !173, line: 659, baseType: !3528, size: 64, offset: 4544)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !1010, file: !173, line: 664, baseType: !7, size: 32, offset: 4608)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !1010, file: !173, line: 667, baseType: !7, size: 32, offset: 4640)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !1010, file: !173, line: 668, baseType: !1218, size: 8, offset: 4672)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1010, file: !173, line: 671, baseType: !994, size: 64, offset: 4736)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !1010, file: !173, line: 672, baseType: !994, size: 64, offset: 4800)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !1010, file: !173, line: 673, baseType: !1218, size: 8, offset: 4864)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !1010, file: !173, line: 674, baseType: !1218, size: 8, offset: 4872)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1010, file: !173, line: 675, baseType: !7, size: 32, offset: 4896)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !1010, file: !173, line: 678, baseType: !172, size: 32, offset: 4928)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !1010, file: !173, line: 681, baseType: !2658, size: 5568, offset: 4992)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !1010, file: !173, line: 681, baseType: !2658, size: 5568, offset: 10560)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !1010, file: !173, line: 687, baseType: !991, size: 64, offset: 16128)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !1010, file: !173, line: 693, baseType: !2957, size: 64, offset: 16192)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !1010, file: !173, line: 700, baseType: !5240, align: 64, offset: 16256)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1006, file: !183, line: 813, baseType: !6362, size: 64, offset: 64)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_operations", file: !183, line: 896, size: 3904, elements: !6364)
!6364 = !{!6365, !6579, !6580, !6584, !6588, !6592, !6596, !6600, !6604, !6605, !6610, !6616, !6620, !6624, !6625, !6630, !6635, !6636, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6654, !6658, !6659, !6660, !6664, !6668, !6669, !6670, !6671, !6694, !6698, !6702, !6706, !6707, !6713, !6717, !6718, !6722, !6723, !6727, !6728, !6729, !6730, !6731, !6732, !6733, !6737, !6741, !6745, !6749, !6753, !6754, !6755}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "qc_defer", scope: !6363, file: !183, line: 900, baseType: !6366, size: 64)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!223, !6369}
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6370, size: 64)
!6370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_queued_cmd", file: !183, line: 617, size: 1920, elements: !6371)
!6371 = !{!6372, !6373, !6533, !6534, !6535, !6554, !6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570, !6571, !6572, !6577, !6578}
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6370, file: !183, line: 618, baseType: !1005, size: 64)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6370, file: !183, line: 619, baseType: !6374, size: 64, offset: 64)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 64)
!6375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_device", file: !183, line: 673, size: 16384, elements: !6376)
!6376 = !{!6377, !6427, !6428, !6429, !6430, !6431, !6432, !6484, !6485, !6486, !6487, !6488, !6489, !6490, !6491, !6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499, !6500, !6501, !6502, !6503, !6512, !6514, !6516, !6517, !6518, !6519, !6520, !6521, !6522}
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6375, file: !183, line: 674, baseType: !6378, size: 64)
!6378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6379, size: 64)
!6379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_link", file: !183, line: 783, size: 41984, elements: !6380)
!6380 = !{!6381, !6382, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6408, !6424, !6426}
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6379, file: !183, line: 784, baseType: !1005, size: 64)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "pmp", scope: !6379, file: !183, line: 785, baseType: !223, size: 32, offset: 64)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6379, file: !183, line: 787, baseType: !2658, size: 5568, offset: 128)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "active_tag", scope: !6379, file: !183, line: 788, baseType: !7, size: 32, offset: 5696)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "sactive", scope: !6379, file: !183, line: 789, baseType: !989, size: 32, offset: 5728)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6379, file: !183, line: 791, baseType: !7, size: 32, offset: 5760)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "saved_scontrol", scope: !6379, file: !183, line: 793, baseType: !989, size: 32, offset: 5792)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "hw_sata_spd_limit", scope: !6379, file: !183, line: 794, baseType: !7, size: 32, offset: 5824)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd_limit", scope: !6379, file: !183, line: 795, baseType: !7, size: 32, offset: 5856)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd", scope: !6379, file: !183, line: 796, baseType: !7, size: 32, offset: 5888)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_policy", scope: !6379, file: !183, line: 797, baseType: !182, size: 32, offset: 5920)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "eh_info", scope: !6379, file: !183, line: 800, baseType: !6393, size: 960, offset: 5952)
!6393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_info", file: !183, line: 744, size: 960, elements: !6394)
!6394 = !{!6395, !6396, !6397, !6398, !6399, !6401, !6402, !6403, !6407}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6393, file: !183, line: 745, baseType: !6374, size: 64)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "serror", scope: !6393, file: !183, line: 746, baseType: !989, size: 32, offset: 64)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6393, file: !183, line: 747, baseType: !7, size: 32, offset: 96)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6393, file: !183, line: 748, baseType: !7, size: 32, offset: 128)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "dev_action", scope: !6393, file: !183, line: 749, baseType: !6400, size: 64, offset: 160)
!6400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2043)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6393, file: !183, line: 750, baseType: !7, size: 32, offset: 224)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "probe_mask", scope: !6393, file: !183, line: 752, baseType: !7, size: 32, offset: 256)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !6393, file: !183, line: 754, baseType: !6404, size: 640, offset: 288)
!6404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 640, elements: !6405)
!6405 = !{!6406}
!6406 = !DISubrange(count: 80)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !6393, file: !183, line: 755, baseType: !223, size: 32, offset: 928)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "eh_context", scope: !6379, file: !183, line: 802, baseType: !6409, size: 1664, offset: 6912)
!6409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_context", file: !183, line: 758, size: 1664, elements: !6410)
!6410 = !{!6411, !6412, !6414, !6417, !6418, !6419, !6420, !6421, !6423}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6409, file: !183, line: 759, baseType: !6393, size: 960)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "tries", scope: !6409, file: !183, line: 760, baseType: !6413, size: 64, offset: 960)
!6413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 64, elements: !2043)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_timeout_idx", scope: !6409, file: !183, line: 761, baseType: !6415, size: 384, offset: 1024)
!6415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 384, elements: !6416)
!6416 = !{!2044, !2112}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "classes", scope: !6409, file: !183, line: 763, baseType: !6400, size: 64, offset: 1408)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "did_probe_mask", scope: !6409, file: !183, line: 764, baseType: !7, size: 32, offset: 1472)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "unloaded_mask", scope: !6409, file: !183, line: 765, baseType: !7, size: 32, offset: 1504)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "saved_ncq_enabled", scope: !6409, file: !183, line: 766, baseType: !7, size: 32, offset: 1536)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "saved_xfer_mode", scope: !6409, file: !183, line: 767, baseType: !6422, size: 16, offset: 1568)
!6422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 16, elements: !2043)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !6409, file: !183, line: 769, baseType: !994, size: 64, offset: 1600)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6379, file: !183, line: 804, baseType: !6425, size: 32768, offset: 8704)
!6425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6375, size: 32768, elements: !2043)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "last_lpm_change", scope: !6379, file: !183, line: 806, baseType: !994, size: 64, offset: 41472)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "devno", scope: !6375, file: !183, line: 675, baseType: !7, size: 32, offset: 64)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "horkage", scope: !6375, file: !183, line: 676, baseType: !7, size: 32, offset: 96)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6375, file: !183, line: 677, baseType: !994, size: 64, offset: 128)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "sdev", scope: !6375, file: !183, line: 678, baseType: !5957, size: 64, offset: 192)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6375, file: !183, line: 679, baseType: !991, size: 64, offset: 256)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_cache", scope: !6375, file: !183, line: 681, baseType: !6433, size: 64, offset: 320)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64)
!6434 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !6435, line: 899, size: 192, elements: !6436)
!6435 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!6436 = !{!6437, !6439, !6444, !6450, !6457, !6463, !6470, !6478}
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6434, file: !6435, line: 900, baseType: !6438, size: 32)
!6438 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !6435, line: 635, baseType: !989)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !6434, file: !6435, line: 904, baseType: !6440, size: 128)
!6440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6434, file: !6435, line: 901, size: 128, elements: !6441)
!6441 = !{!6442, !6443}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6440, file: !6435, line: 902, baseType: !6438, size: 32)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6440, file: !6435, line: 903, baseType: !984, size: 64, offset: 64)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6434, file: !6435, line: 910, baseType: !6445, size: 128)
!6445 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6434, file: !6435, line: 906, size: 128, elements: !6446)
!6446 = !{!6447, !6448, !6449}
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6445, file: !6435, line: 907, baseType: !6438, size: 32)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6445, file: !6435, line: 908, baseType: !989, size: 32, offset: 32)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6445, file: !6435, line: 909, baseType: !1476, size: 64, offset: 64)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6434, file: !6435, line: 916, baseType: !6451, size: 128)
!6451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6434, file: !6435, line: 912, size: 128, elements: !6452)
!6452 = !{!6453, !6454, !6455}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6451, file: !6435, line: 913, baseType: !6438, size: 32)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6451, file: !6435, line: 914, baseType: !989, size: 32, offset: 32)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6451, file: !6435, line: 915, baseType: !6456, size: 64, offset: 64)
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !6434, file: !6435, line: 922, baseType: !6458, size: 128)
!6458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6434, file: !6435, line: 918, size: 128, elements: !6459)
!6459 = !{!6460, !6461, !6462}
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6458, file: !6435, line: 919, baseType: !6438, size: 32)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6458, file: !6435, line: 920, baseType: !989, size: 32, offset: 32)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !6458, file: !6435, line: 921, baseType: !6433, size: 64, offset: 64)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !6434, file: !6435, line: 928, baseType: !6464, size: 128)
!6464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6434, file: !6435, line: 924, size: 128, elements: !6465)
!6465 = !{!6466, !6467, !6468}
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6464, file: !6435, line: 925, baseType: !6438, size: 32)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !6464, file: !6435, line: 926, baseType: !6438, size: 32, offset: 32)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !6464, file: !6435, line: 927, baseType: !6469, size: 64, offset: 64)
!6469 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !6435, line: 424, baseType: !991)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !6434, file: !6435, line: 935, baseType: !6471, size: 192)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6434, file: !6435, line: 930, size: 192, elements: !6472)
!6472 = !{!6473, !6474, !6475, !6477}
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6471, file: !6435, line: 931, baseType: !6438, size: 32)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !6471, file: !6435, line: 932, baseType: !989, size: 32, offset: 32)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !6471, file: !6435, line: 933, baseType: !6476, size: 64, offset: 64)
!6476 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !6435, line: 128, baseType: !984)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !6471, file: !6435, line: 934, baseType: !989, size: 32, offset: 128)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !6434, file: !6435, line: 941, baseType: !6479, size: 96)
!6479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6434, file: !6435, line: 937, size: 96, elements: !6480)
!6480 = !{!6481, !6482, !6483}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6479, file: !6435, line: 938, baseType: !6438, size: 32)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !6479, file: !6435, line: 939, baseType: !989, size: 32, offset: 32)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !6479, file: !6435, line: 940, baseType: !989, size: 32, offset: 64)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_filter", scope: !6375, file: !183, line: 682, baseType: !7, size: 32, offset: 384)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6375, file: !183, line: 687, baseType: !2658, size: 5568, offset: 448)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "n_sectors", scope: !6375, file: !183, line: 689, baseType: !984, size: 64, offset: 6016)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "n_native_sectors", scope: !6375, file: !183, line: 690, baseType: !984, size: 64, offset: 6080)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6375, file: !183, line: 691, baseType: !7, size: 32, offset: 6144)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "unpark_deadline", scope: !6375, file: !183, line: 692, baseType: !994, size: 64, offset: 6208)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mode", scope: !6375, file: !183, line: 694, baseType: !1216, size: 8, offset: 6272)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mode", scope: !6375, file: !183, line: 695, baseType: !1216, size: 8, offset: 6280)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_mode", scope: !6375, file: !183, line: 696, baseType: !1216, size: 8, offset: 6288)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_shift", scope: !6375, file: !183, line: 697, baseType: !7, size: 32, offset: 6304)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "multi_count", scope: !6375, file: !183, line: 699, baseType: !7, size: 32, offset: 6336)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !6375, file: !183, line: 701, baseType: !7, size: 32, offset: 6368)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !6375, file: !183, line: 702, baseType: !7, size: 32, offset: 6400)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !6375, file: !183, line: 705, baseType: !994, size: 64, offset: 6464)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !6375, file: !183, line: 706, baseType: !994, size: 64, offset: 6528)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !6375, file: !183, line: 707, baseType: !994, size: 64, offset: 6592)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !6375, file: !183, line: 710, baseType: !1740, size: 16, offset: 6656)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !6375, file: !183, line: 711, baseType: !1740, size: 16, offset: 6672)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !6375, file: !183, line: 712, baseType: !1740, size: 16, offset: 6688)
!6503 = !DIDerivedType(tag: DW_TAG_member, scope: !6375, file: !183, line: 714, baseType: !6504, size: 4096, align: 512, offset: 7168)
!6504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6375, file: !183, line: 714, size: 4096, align: 512, elements: !6505)
!6505 = !{!6506, !6510}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6504, file: !183, line: 715, baseType: !6507, size: 4096)
!6507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1740, size: 4096, elements: !6508)
!6508 = !{!6509}
!6509 = !DISubrange(count: 256)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "gscr", scope: !6504, file: !183, line: 716, baseType: !6511, size: 4096)
!6511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 4096, elements: !3048)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "devslp_timing", scope: !6375, file: !183, line: 720, baseType: !6513, size: 64, offset: 11264)
!6513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 64, elements: !1181)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_send_recv_cmds", scope: !6375, file: !183, line: 723, baseType: !6515, size: 160, offset: 11328)
!6515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 160, elements: !5834)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_non_data_cmds", scope: !6375, file: !183, line: 724, baseType: !3521, size: 512, offset: 11488)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zoned_cap", scope: !6375, file: !183, line: 727, baseType: !989, size: 32, offset: 12000)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_open", scope: !6375, file: !183, line: 728, baseType: !989, size: 32, offset: 12032)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_nonseq", scope: !6375, file: !183, line: 729, baseType: !989, size: 32, offset: 12064)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_max_open", scope: !6375, file: !183, line: 730, baseType: !989, size: 32, offset: 12096)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "spdn_cnt", scope: !6375, file: !183, line: 733, baseType: !223, size: 32, offset: 12128)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "ering", scope: !6375, file: !183, line: 735, baseType: !6523, size: 4160, offset: 12160)
!6523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering", file: !183, line: 668, size: 4160, elements: !6524)
!6524 = !{!6525, !6526}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !6523, file: !183, line: 669, baseType: !223, size: 32)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !6523, file: !183, line: 670, baseType: !6527, size: 4096, offset: 64)
!6527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6528, size: 4096, elements: !1415)
!6528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering_entry", file: !183, line: 662, size: 128, elements: !6529)
!6529 = !{!6530, !6531, !6532}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "eflags", scope: !6528, file: !183, line: 663, baseType: !7, size: 32)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6528, file: !183, line: 664, baseType: !7, size: 32, offset: 32)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !6528, file: !183, line: 665, baseType: !984, size: 64, offset: 64)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "scsicmd", scope: !6370, file: !183, line: 621, baseType: !6109, size: 64, offset: 128)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "scsidone", scope: !6370, file: !183, line: 622, baseType: !6166, size: 64, offset: 192)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !6370, file: !183, line: 624, baseType: !6536, size: 256, offset: 256)
!6536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_taskfile", file: !183, line: 550, size: 256, elements: !6537)
!6537 = !{!6538, !6539, !6540, !6541, !6542, !6543, !6544, !6545, !6546, !6547, !6548, !6549, !6550, !6551, !6552, !6553}
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6536, file: !183, line: 551, baseType: !994, size: 64)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !6536, file: !183, line: 552, baseType: !1216, size: 8, offset: 64)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6536, file: !183, line: 554, baseType: !1216, size: 8, offset: 72)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "hob_feature", scope: !6536, file: !183, line: 556, baseType: !1216, size: 8, offset: 80)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "hob_nsect", scope: !6536, file: !183, line: 557, baseType: !1216, size: 8, offset: 88)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbal", scope: !6536, file: !183, line: 558, baseType: !1216, size: 8, offset: 96)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbam", scope: !6536, file: !183, line: 559, baseType: !1216, size: 8, offset: 104)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbah", scope: !6536, file: !183, line: 560, baseType: !1216, size: 8, offset: 112)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "feature", scope: !6536, file: !183, line: 562, baseType: !1216, size: 8, offset: 120)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "nsect", scope: !6536, file: !183, line: 563, baseType: !1216, size: 8, offset: 128)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "lbal", scope: !6536, file: !183, line: 564, baseType: !1216, size: 8, offset: 136)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "lbam", scope: !6536, file: !183, line: 565, baseType: !1216, size: 8, offset: 144)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "lbah", scope: !6536, file: !183, line: 566, baseType: !1216, size: 8, offset: 152)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6536, file: !183, line: 568, baseType: !1216, size: 8, offset: 160)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !6536, file: !183, line: 570, baseType: !1216, size: 8, offset: 168)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "auxiliary", scope: !6536, file: !183, line: 572, baseType: !989, size: 32, offset: 192)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !6370, file: !183, line: 625, baseType: !6555, size: 128, offset: 512)
!6555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 128, elements: !3376)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6370, file: !183, line: 627, baseType: !994, size: 64, offset: 640)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6370, file: !183, line: 628, baseType: !7, size: 32, offset: 704)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "hw_tag", scope: !6370, file: !183, line: 629, baseType: !7, size: 32, offset: 736)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "n_elem", scope: !6370, file: !183, line: 630, baseType: !7, size: 32, offset: 768)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "orig_n_elem", scope: !6370, file: !183, line: 631, baseType: !7, size: 32, offset: 800)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !6370, file: !183, line: 633, baseType: !223, size: 32, offset: 832)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "sect_size", scope: !6370, file: !183, line: 635, baseType: !7, size: 32, offset: 864)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !6370, file: !183, line: 637, baseType: !7, size: 32, offset: 896)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "extrabytes", scope: !6370, file: !183, line: 638, baseType: !7, size: 32, offset: 928)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "curbytes", scope: !6370, file: !183, line: 639, baseType: !7, size: 32, offset: 960)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "sgent", scope: !6370, file: !183, line: 641, baseType: !6149, size: 256, offset: 1024)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !6370, file: !183, line: 643, baseType: !6148, size: 64, offset: 1280)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "cursg", scope: !6370, file: !183, line: 645, baseType: !6148, size: 64, offset: 1344)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "cursg_ofs", scope: !6370, file: !183, line: 646, baseType: !7, size: 32, offset: 1408)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6370, file: !183, line: 648, baseType: !7, size: 32, offset: 1440)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "result_tf", scope: !6370, file: !183, line: 649, baseType: !6536, size: 256, offset: 1472)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !6370, file: !183, line: 650, baseType: !6573, size: 64, offset: 1728)
!6573 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_qc_cb_t", file: !183, line: 529, baseType: !6574)
!6574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 64)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{null, !6369}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6370, file: !183, line: 652, baseType: !991, size: 64, offset: 1792)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "lldd_task", scope: !6370, file: !183, line: 653, baseType: !991, size: 64, offset: 1856)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "check_atapi_dma", scope: !6363, file: !183, line: 901, baseType: !6366, size: 64, offset: 64)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "qc_prep", scope: !6363, file: !183, line: 902, baseType: !6581, size: 64, offset: 128)
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6582, size: 64)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{!191, !6369}
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "qc_issue", scope: !6363, file: !183, line: 903, baseType: !6585, size: 64, offset: 192)
!6585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6586, size: 64)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{!7, !6369}
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "qc_fill_rtf", scope: !6363, file: !183, line: 904, baseType: !6589, size: 64, offset: 256)
!6589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6590, size: 64)
!6590 = !DISubroutineType(types: !6591)
!6591 = !{!1495, !6369}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "cable_detect", scope: !6363, file: !183, line: 909, baseType: !6593, size: 64, offset: 320)
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 64)
!6594 = !DISubroutineType(types: !6595)
!6595 = !{!223, !1005}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "mode_filter", scope: !6363, file: !183, line: 910, baseType: !6597, size: 64, offset: 384)
!6597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6598, size: 64)
!6598 = !DISubroutineType(types: !6599)
!6599 = !{!994, !6374, !994}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "set_piomode", scope: !6363, file: !183, line: 911, baseType: !6601, size: 64, offset: 448)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 64)
!6602 = !DISubroutineType(types: !6603)
!6603 = !{null, !1005, !6374}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "set_dmamode", scope: !6363, file: !183, line: 912, baseType: !6601, size: 64, offset: 512)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !6363, file: !183, line: 913, baseType: !6606, size: 64, offset: 576)
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 64)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!223, !6378, !6609}
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6374, size: 64)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "read_id", scope: !6363, file: !183, line: 914, baseType: !6611, size: 64, offset: 640)
!6611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6612, size: 64)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!7, !6374, !6614, !6615}
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6536, size: 64)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "dev_config", scope: !6363, file: !183, line: 916, baseType: !6617, size: 64, offset: 704)
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{null, !6374}
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6363, file: !183, line: 918, baseType: !6621, size: 64, offset: 768)
!6621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6622, size: 64)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{null, !1005}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6363, file: !183, line: 919, baseType: !6621, size: 64, offset: 832)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "prereset", scope: !6363, file: !183, line: 920, baseType: !6626, size: 64, offset: 896)
!6626 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_prereset_fn_t", file: !183, line: 530, baseType: !6627)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6628, size: 64)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!223, !6378, !994}
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "softreset", scope: !6363, file: !183, line: 921, baseType: !6631, size: 64, offset: 960)
!6631 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_reset_fn_t", file: !183, line: 531, baseType: !6632)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6633, size: 64)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{!223, !6378, !3394, !994}
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "hardreset", scope: !6363, file: !183, line: 922, baseType: !6631, size: 64, offset: 1024)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "postreset", scope: !6363, file: !183, line: 923, baseType: !6637, size: 64, offset: 1088)
!6637 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_postreset_fn_t", file: !183, line: 533, baseType: !6638)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 64)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{null, !6378, !3394}
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_prereset", scope: !6363, file: !183, line: 924, baseType: !6626, size: 64, offset: 1152)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_softreset", scope: !6363, file: !183, line: 925, baseType: !6631, size: 64, offset: 1216)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_hardreset", scope: !6363, file: !183, line: 926, baseType: !6631, size: 64, offset: 1280)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_postreset", scope: !6363, file: !183, line: 927, baseType: !6637, size: 64, offset: 1344)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "error_handler", scope: !6363, file: !183, line: 928, baseType: !6621, size: 64, offset: 1408)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "lost_interrupt", scope: !6363, file: !183, line: 929, baseType: !6621, size: 64, offset: 1472)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "post_internal_cmd", scope: !6363, file: !183, line: 930, baseType: !6574, size: 64, offset: 1536)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "sched_eh", scope: !6363, file: !183, line: 931, baseType: !6621, size: 64, offset: 1600)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "end_eh", scope: !6363, file: !183, line: 932, baseType: !6621, size: 64, offset: 1664)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "scr_read", scope: !6363, file: !183, line: 937, baseType: !6651, size: 64, offset: 1728)
!6651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6652, size: 64)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{!223, !6378, !7, !5278}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "scr_write", scope: !6363, file: !183, line: 938, baseType: !6655, size: 64, offset: 1792)
!6655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6656, size: 64)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{!223, !6378, !7, !989}
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_attach", scope: !6363, file: !183, line: 939, baseType: !6621, size: 64, offset: 1856)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_detach", scope: !6363, file: !183, line: 940, baseType: !6621, size: 64, offset: 1920)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "set_lpm", scope: !6363, file: !183, line: 941, baseType: !6661, size: 64, offset: 1984)
!6661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6662, size: 64)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!223, !6378, !182, !7}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "port_suspend", scope: !6363, file: !183, line: 947, baseType: !6665, size: 64, offset: 2048)
!6665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 64)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!223, !1005, !3072}
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "port_resume", scope: !6363, file: !183, line: 948, baseType: !6593, size: 64, offset: 2112)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "port_start", scope: !6363, file: !183, line: 949, baseType: !6593, size: 64, offset: 2176)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "port_stop", scope: !6363, file: !183, line: 950, baseType: !6621, size: 64, offset: 2240)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "host_stop", scope: !6363, file: !183, line: 951, baseType: !6672, size: 64, offset: 2304)
!6672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6673, size: 64)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{null, !6675}
!6675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6676, size: 64)
!6676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_host", file: !183, line: 599, size: 768, elements: !6677)
!6677 = !{!6678, !6679, !6680, !6683, !6684, !6685, !6686, !6687, !6688, !6689, !6690, !6691, !6692}
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6676, file: !183, line: 600, baseType: !1021)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6676, file: !183, line: 601, baseType: !2957, size: 64)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "iomap", scope: !6676, file: !183, line: 602, baseType: !6681, size: 64, offset: 64)
!6681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6682, size: 64)
!6682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "n_ports", scope: !6676, file: !183, line: 603, baseType: !7, size: 32, offset: 128)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "n_tags", scope: !6676, file: !183, line: 604, baseType: !7, size: 32, offset: 160)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6676, file: !183, line: 605, baseType: !991, size: 64, offset: 192)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6676, file: !183, line: 606, baseType: !6362, size: 64, offset: 256)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6676, file: !183, line: 607, baseType: !994, size: 64, offset: 320)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6676, file: !183, line: 608, baseType: !2947, size: 32, offset: 384)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "eh_mutex", scope: !6676, file: !183, line: 610, baseType: !1039, size: 192, offset: 448)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "eh_owner", scope: !6676, file: !183, line: 611, baseType: !1056, size: 64, offset: 640)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "simplex_claimed", scope: !6676, file: !183, line: 613, baseType: !1005, size: 64, offset: 704)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !6676, file: !183, line: 614, baseType: !6693, offset: 768)
!6693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1005, elements: !3434)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "sff_dev_select", scope: !6363, file: !183, line: 957, baseType: !6695, size: 64, offset: 2368)
!6695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6696, size: 64)
!6696 = !DISubroutineType(types: !6697)
!6697 = !{null, !1005, !7}
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "sff_set_devctl", scope: !6363, file: !183, line: 958, baseType: !6699, size: 64, offset: 2432)
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6700, size: 64)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{null, !1005, !1216}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_status", scope: !6363, file: !183, line: 959, baseType: !6703, size: 64, offset: 2496)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6704, size: 64)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{!1216, !1005}
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_altstatus", scope: !6363, file: !183, line: 960, baseType: !6703, size: 64, offset: 2560)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_load", scope: !6363, file: !183, line: 961, baseType: !6708, size: 64, offset: 2624)
!6708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6709, size: 64)
!6709 = !DISubroutineType(types: !6710)
!6710 = !{null, !1005, !6711}
!6711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6712, size: 64)
!6712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6536)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_read", scope: !6363, file: !183, line: 962, baseType: !6714, size: 64, offset: 2688)
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{null, !1005, !6614}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "sff_exec_command", scope: !6363, file: !183, line: 963, baseType: !6708, size: 64, offset: 2752)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "sff_data_xfer", scope: !6363, file: !183, line: 965, baseType: !6719, size: 64, offset: 2816)
!6719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6720, size: 64)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{!7, !6369, !4914, !7, !223}
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_on", scope: !6363, file: !183, line: 967, baseType: !6621, size: 64, offset: 2880)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_check", scope: !6363, file: !183, line: 968, baseType: !6724, size: 64, offset: 2944)
!6724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6725, size: 64)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{!1495, !1005}
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_clear", scope: !6363, file: !183, line: 969, baseType: !6621, size: 64, offset: 3008)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "sff_drain_fifo", scope: !6363, file: !183, line: 970, baseType: !6574, size: 64, offset: 3072)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_setup", scope: !6363, file: !183, line: 973, baseType: !6574, size: 64, offset: 3136)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_start", scope: !6363, file: !183, line: 974, baseType: !6574, size: 64, offset: 3200)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_stop", scope: !6363, file: !183, line: 975, baseType: !6574, size: 64, offset: 3264)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_status", scope: !6363, file: !183, line: 976, baseType: !6703, size: 64, offset: 3328)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "em_show", scope: !6363, file: !183, line: 980, baseType: !6734, size: 64, offset: 3392)
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 64)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{!1717, !1005, !1476}
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "em_store", scope: !6363, file: !183, line: 981, baseType: !6738, size: 64, offset: 3456)
!6738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6739, size: 64)
!6739 = !DISubroutineType(types: !6740)
!6740 = !{!1717, !1005, !1450, !1645}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_show", scope: !6363, file: !183, line: 983, baseType: !6742, size: 64, offset: 3520)
!6742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6743, size: 64)
!6743 = !DISubroutineType(types: !6744)
!6744 = !{!1717, !6374, !1476}
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_store", scope: !6363, file: !183, line: 984, baseType: !6746, size: 64, offset: 3584)
!6746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6747, size: 64)
!6747 = !DISubroutineType(types: !6748)
!6748 = !{!1717, !6374, !205}
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_led_message", scope: !6363, file: !183, line: 986, baseType: !6750, size: 64, offset: 3648)
!6750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6751, size: 64)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{!1717, !1005, !989, !1717}
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "phy_reset", scope: !6363, file: !183, line: 992, baseType: !6621, size: 64, offset: 3712)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "eng_timeout", scope: !6363, file: !183, line: 993, baseType: !6621, size: 64, offset: 3776)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "inherits", scope: !6363, file: !183, line: 999, baseType: !6756, size: 64, offset: 3840)
!6756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6757, size: 64)
!6757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6363)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1006, file: !183, line: 814, baseType: !1037, size: 64, offset: 128)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1006, file: !183, line: 817, baseType: !994, size: 64, offset: 192)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "pflags", scope: !1006, file: !183, line: 819, baseType: !7, size: 32, offset: 256)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "print_id", scope: !1006, file: !183, line: 820, baseType: !7, size: 32, offset: 288)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "local_port_no", scope: !1006, file: !183, line: 821, baseType: !7, size: 32, offset: 320)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "port_no", scope: !1006, file: !183, line: 822, baseType: !7, size: 32, offset: 352)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !1006, file: !183, line: 825, baseType: !6765, size: 960, offset: 384)
!6765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ioports", file: !183, line: 578, size: 960, elements: !6766)
!6766 = !{!6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781}
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_addr", scope: !6765, file: !183, line: 579, baseType: !991, size: 64)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !6765, file: !183, line: 580, baseType: !991, size: 64, offset: 64)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "error_addr", scope: !6765, file: !183, line: 581, baseType: !991, size: 64, offset: 128)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "feature_addr", scope: !6765, file: !183, line: 582, baseType: !991, size: 64, offset: 192)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "nsect_addr", scope: !6765, file: !183, line: 583, baseType: !991, size: 64, offset: 256)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "lbal_addr", scope: !6765, file: !183, line: 584, baseType: !991, size: 64, offset: 320)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "lbam_addr", scope: !6765, file: !183, line: 585, baseType: !991, size: 64, offset: 384)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "lbah_addr", scope: !6765, file: !183, line: 586, baseType: !991, size: 64, offset: 448)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "device_addr", scope: !6765, file: !183, line: 587, baseType: !991, size: 64, offset: 512)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "status_addr", scope: !6765, file: !183, line: 588, baseType: !991, size: 64, offset: 576)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "command_addr", scope: !6765, file: !183, line: 589, baseType: !991, size: 64, offset: 640)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "altstatus_addr", scope: !6765, file: !183, line: 590, baseType: !991, size: 64, offset: 704)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_addr", scope: !6765, file: !183, line: 591, baseType: !991, size: 64, offset: 768)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_addr", scope: !6765, file: !183, line: 593, baseType: !991, size: 64, offset: 832)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "scr_addr", scope: !6765, file: !183, line: 595, baseType: !991, size: 64, offset: 896)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !1006, file: !183, line: 826, baseType: !1216, size: 8, offset: 1344)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "last_ctl", scope: !1006, file: !183, line: 827, baseType: !1216, size: 8, offset: 1352)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task_link", scope: !1006, file: !183, line: 828, baseType: !6378, size: 64, offset: 1408)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task", scope: !1006, file: !183, line: 829, baseType: !3757, size: 704, offset: 1472)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd", scope: !1006, file: !183, line: 831, baseType: !6787, size: 64, offset: 2176)
!6787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6788, size: 64)
!6788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_bmdma_prd", file: !222, line: 546, size: 64, elements: !6789)
!6789 = !{!6790, !6792}
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6788, file: !222, line: 547, baseType: !6791, size: 32)
!6791 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !999, line: 31, baseType: !990)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "flags_len", scope: !6788, file: !222, line: 548, baseType: !6791, size: 32, offset: 32)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd_dma", scope: !1006, file: !183, line: 832, baseType: !4966, size: 64, offset: 2240)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !1006, file: !183, line: 836, baseType: !7, size: 32, offset: 2304)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !1006, file: !183, line: 837, baseType: !7, size: 32, offset: 2336)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !1006, file: !183, line: 838, baseType: !7, size: 32, offset: 2368)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "cbl", scope: !1006, file: !183, line: 839, baseType: !7, size: 32, offset: 2400)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "qcmd", scope: !1006, file: !183, line: 841, baseType: !6799, size: 63360, offset: 2432)
!6799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6370, size: 63360, elements: !6800)
!6800 = !{!6801}
!6801 = !DISubrange(count: 33)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "sas_tag_allocated", scope: !1006, file: !183, line: 842, baseType: !994, size: 64, offset: 65792)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "qc_active", scope: !1006, file: !183, line: 843, baseType: !984, size: 64, offset: 65856)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_links", scope: !1006, file: !183, line: 844, baseType: !223, size: 32, offset: 65920)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "sas_last_tag", scope: !1006, file: !183, line: 845, baseType: !7, size: 32, offset: 65952)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1006, file: !183, line: 847, baseType: !6379, size: 41984, offset: 66048)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "slave_link", scope: !1006, file: !183, line: 848, baseType: !6378, size: 64, offset: 108032)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pmp_links", scope: !1006, file: !183, line: 850, baseType: !223, size: 32, offset: 108096)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_link", scope: !1006, file: !183, line: 851, baseType: !6378, size: 64, offset: 108160)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "excl_link", scope: !1006, file: !183, line: 852, baseType: !6378, size: 64, offset: 108224)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1006, file: !183, line: 854, baseType: !6812, size: 192, offset: 108288)
!6812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_stats", file: !183, line: 656, size: 192, elements: !6813)
!6813 = !{!6814, !6815, !6816}
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "unhandled_irq", scope: !6812, file: !183, line: 657, baseType: !994, size: 64)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "idle_irq", scope: !6812, file: !183, line: 658, baseType: !994, size: 64, offset: 64)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "rw_reqbuf", scope: !6812, file: !183, line: 659, baseType: !994, size: 64, offset: 128)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1006, file: !183, line: 855, baseType: !6675, size: 64, offset: 108480)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1006, file: !183, line: 856, baseType: !2957, size: 64, offset: 108544)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !1006, file: !183, line: 857, baseType: !2658, size: 5568, offset: 108608)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_scan_mutex", scope: !1006, file: !183, line: 859, baseType: !1039, size: 192, offset: 114176)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_task", scope: !1006, file: !183, line: 860, baseType: !3757, size: 704, offset: 114368)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_rescan_task", scope: !1006, file: !183, line: 861, baseType: !2247, size: 256, offset: 115072)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "hsm_task_state", scope: !1006, file: !183, line: 863, baseType: !7, size: 32, offset: 115328)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !1006, file: !183, line: 865, baseType: !989, size: 32, offset: 115360)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "eh_done_q", scope: !1006, file: !183, line: 866, baseType: !1013, size: 128, offset: 115392)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "eh_wait_q", scope: !1006, file: !183, line: 867, baseType: !1841, size: 128, offset: 115520)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "eh_tries", scope: !1006, file: !183, line: 868, baseType: !223, size: 32, offset: 115648)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "park_req_pending", scope: !1006, file: !183, line: 869, baseType: !2307, size: 192, offset: 115712)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "pm_mesg", scope: !1006, file: !183, line: 871, baseType: !3072, size: 32, offset: 115904)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "target_lpm_policy", scope: !1006, file: !183, line: 872, baseType: !182, size: 32, offset: 115936)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_timer", scope: !1006, file: !183, line: 874, baseType: !3149, size: 320, offset: 115968)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_cnt", scope: !1006, file: !183, line: 875, baseType: !994, size: 64, offset: 116288)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !1006, file: !183, line: 877, baseType: !6834, size: 64, offset: 116352)
!6834 = !DIDerivedType(tag: DW_TAG_typedef, name: "async_cookie_t", file: !6835, line: 16, baseType: !984)
!6835 = !DIFile(filename: "./include/linux/async.h", directory: "/home/lizy2001/genbc/linux")
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "em_message_type", scope: !1006, file: !183, line: 879, baseType: !223, size: 32, offset: 116416)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1006, file: !183, line: 880, baseType: !991, size: 64, offset: 116480)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "__acpi_init_gtm", scope: !1006, file: !183, line: 883, baseType: !6839, size: 160, offset: 116544)
!6839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_gtm", file: !183, line: 778, size: 160, elements: !6840)
!6840 = !{!6841, !6847}
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "drive", scope: !6839, file: !183, line: 779, baseType: !6842, size: 128)
!6842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6843, size: 128, elements: !2043)
!6843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_drive", file: !183, line: 772, size: 64, elements: !6844)
!6844 = !{!6845, !6846}
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "pio", scope: !6843, file: !183, line: 774, baseType: !989, size: 32)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !6843, file: !183, line: 775, baseType: !989, size: 32, offset: 32)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6839, file: !183, line: 780, baseType: !989, size: 32, offset: 128)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "sector_buf", scope: !1006, file: !183, line: 886, baseType: !6849, size: 4096, align: 512, offset: 116736)
!6849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 4096, elements: !6850)
!6850 = !{!6851}
!6851 = !DISubrange(count: 512)
!6852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6853, size: 64)
!6853 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1016)
!6854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6178, size: 64)
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!6856 = !{!0, !6857, !6859, !6861, !6912, !6917, !6922, !6924, !6929, !6934, !6936, !6939, !6941, !6943, !6945, !6948, !6953, !6955, !6957, !6960, !6965, !6967, !6972, !6977, !6979, !6981, !6986, !6988, !6993, !6996, !6998, !7000, !7005, !7010, !7012, !7014, !7019, !7024, !7026, !7028, !7033, !7038, !7043, !7045, !7050, !7053, !7098, !7105, !7111, !7113, !7118, !7120, !7125, !7130, !7132, !7137, !7139, !7151, !7168, !7170, !7172, !7174, !7176, !7181, !7183, !7185, !7190, !7192, !7194, !7196, !7198, !7203, !7208, !7210, !7212, !7217, !7222, !7227, !7230, !7232, !7236, !7245, !7256, !7258, !7260, !7262, !7267, !7272, !7282}
!6857 = !DIGlobalVariableExpression(var: !6858, expr: !DIExpression())
!6858 = distinct !DIGlobalVariable(name: "sata_port_ops", scope: !2, file: !3, line: 75, type: !6757, isLocal: false, isDefinition: true)
!6859 = !DIGlobalVariableExpression(var: !6860, expr: !DIExpression())
!6860 = distinct !DIGlobalVariable(name: "ata_print_id", scope: !2, file: !3, line: 89, type: !1074, isLocal: false, isDefinition: true)
!6861 = !DIGlobalVariableExpression(var: !6862, expr: !DIExpression())
!6862 = distinct !DIGlobalVariable(name: "__param_force", scope: !2, file: !3, line: 113, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6864)
!6864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !6865, line: 69, size: 320, elements: !6866)
!6865 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!6866 = !{!6867, !6868, !6869, !6885, !6887, !6890, !6891}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6864, file: !6865, line: 70, baseType: !1450, size: 64)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !6864, file: !6865, line: 71, baseType: !1542, size: 64, offset: 64)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6864, file: !6865, line: 72, baseType: !6870, size: 64, offset: 128)
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6872)
!6872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !6865, line: 47, size: 256, elements: !6873)
!6873 = !{!6874, !6875, !6880, !6884}
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6872, file: !6865, line: 49, baseType: !7, size: 32)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !6872, file: !6865, line: 51, baseType: !6876, size: 64, offset: 64)
!6876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6877, size: 64)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{!223, !1450, !6879}
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6863, size: 64)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6872, file: !6865, line: 53, baseType: !6881, size: 64, offset: 128)
!6881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6882, size: 64)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!223, !1476, !6879}
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6872, file: !6865, line: 55, baseType: !2802, size: 64, offset: 192)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !6864, file: !6865, line: 73, baseType: !6886, size: 16, offset: 192)
!6886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !6864, file: !6865, line: 74, baseType: !6888, size: 8, offset: 208)
!6888 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !985, line: 16, baseType: !6889)
!6889 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !987, line: 20, baseType: !4911)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6864, file: !6865, line: 75, baseType: !1216, size: 8, offset: 216)
!6891 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !6865, line: 76, baseType: !6892, size: 64, offset: 256)
!6892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6864, file: !6865, line: 76, size: 64, elements: !6893)
!6893 = !{!6894, !6895, !6902}
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6892, file: !6865, line: 77, baseType: !991, size: 64)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6892, file: !6865, line: 78, baseType: !6896, size: 64)
!6896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6897, size: 64)
!6897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6898)
!6898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !6865, line: 86, size: 128, elements: !6899)
!6899 = !{!6900, !6901}
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !6898, file: !6865, line: 87, baseType: !7, size: 32)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6898, file: !6865, line: 88, baseType: !1476, size: 64, offset: 64)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !6892, file: !6865, line: 79, baseType: !6903, size: 64)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6904, size: 64)
!6904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6905)
!6905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !6865, line: 92, size: 256, elements: !6906)
!6906 = !{!6907, !6908, !6909, !6910, !6911}
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !6905, file: !6865, line: 94, baseType: !7, size: 32)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !6905, file: !6865, line: 95, baseType: !7, size: 32, offset: 32)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6905, file: !6865, line: 96, baseType: !3394, size: 64, offset: 64)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6905, file: !6865, line: 97, baseType: !6870, size: 64, offset: 128)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !6905, file: !6865, line: 98, baseType: !991, size: 64, offset: 192)
!6912 = !DIGlobalVariableExpression(var: !6913, expr: !DIExpression())
!6913 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_forcetype311", scope: !2, file: !3, line: 113, type: !6914, isLocal: true, isDefinition: true, align: 8)
!6914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 232, elements: !6915)
!6915 = !{!6916}
!6916 = !DISubrange(count: 29)
!6917 = !DIGlobalVariableExpression(var: !6918, expr: !DIExpression())
!6918 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_force312", scope: !2, file: !3, line: 114, type: !6919, isLocal: true, isDefinition: true, align: 8)
!6919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 1280, elements: !6920)
!6920 = !{!6921}
!6921 = !DISubrange(count: 160)
!6922 = !DIGlobalVariableExpression(var: !6923, expr: !DIExpression())
!6923 = distinct !DIGlobalVariable(name: "__param_atapi_enabled", scope: !2, file: !3, line: 118, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6924 = !DIGlobalVariableExpression(var: !6925, expr: !DIExpression())
!6925 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_enabledtype313", scope: !2, file: !3, line: 118, type: !6926, isLocal: true, isDefinition: true, align: 8)
!6926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 272, elements: !6927)
!6927 = !{!6928}
!6928 = !DISubrange(count: 34)
!6929 = !DIGlobalVariableExpression(var: !6930, expr: !DIExpression())
!6930 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_enabled314", scope: !2, file: !3, line: 119, type: !6931, isLocal: true, isDefinition: true, align: 8)
!6931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 672, elements: !6932)
!6932 = !{!6933}
!6933 = !DISubrange(count: 84)
!6934 = !DIGlobalVariableExpression(var: !6935, expr: !DIExpression())
!6935 = distinct !DIGlobalVariable(name: "__param_atapi_dmadir", scope: !2, file: !3, line: 122, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6936 = !DIGlobalVariableExpression(var: !6937, expr: !DIExpression())
!6937 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_dmadirtype315", scope: !2, file: !3, line: 122, type: !6938, isLocal: true, isDefinition: true, align: 8)
!6938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 264, elements: !6800)
!6939 = !DIGlobalVariableExpression(var: !6940, expr: !DIExpression())
!6940 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_dmadir316", scope: !2, file: !3, line: 123, type: !6931, isLocal: true, isDefinition: true, align: 8)
!6941 = !DIGlobalVariableExpression(var: !6942, expr: !DIExpression())
!6942 = distinct !DIGlobalVariable(name: "atapi_passthru16", scope: !2, file: !3, line: 125, type: !223, isLocal: false, isDefinition: true)
!6943 = !DIGlobalVariableExpression(var: !6944, expr: !DIExpression())
!6944 = distinct !DIGlobalVariable(name: "__param_atapi_passthru16", scope: !2, file: !3, line: 126, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6945 = !DIGlobalVariableExpression(var: !6946, expr: !DIExpression())
!6946 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_passthru16type317", scope: !2, file: !3, line: 126, type: !6947, isLocal: true, isDefinition: true, align: 8)
!6947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 296, elements: !3518)
!6948 = !DIGlobalVariableExpression(var: !6949, expr: !DIExpression())
!6949 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_passthru16318", scope: !2, file: !3, line: 127, type: !6950, isLocal: true, isDefinition: true, align: 8)
!6950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 752, elements: !6951)
!6951 = !{!6952}
!6952 = !DISubrange(count: 94)
!6953 = !DIGlobalVariableExpression(var: !6954, expr: !DIExpression())
!6954 = distinct !DIGlobalVariable(name: "libata_fua", scope: !2, file: !3, line: 129, type: !223, isLocal: false, isDefinition: true)
!6955 = !DIGlobalVariableExpression(var: !6956, expr: !DIExpression())
!6956 = distinct !DIGlobalVariable(name: "__param_fua", scope: !2, file: !3, line: 130, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6957 = !DIGlobalVariableExpression(var: !6958, expr: !DIExpression())
!6958 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fuatype319", scope: !2, file: !3, line: 130, type: !6959, isLocal: true, isDefinition: true, align: 8)
!6959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 192, elements: !3722)
!6960 = !DIGlobalVariableExpression(var: !6961, expr: !DIExpression())
!6961 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fua320", scope: !2, file: !3, line: 131, type: !6962, isLocal: true, isDefinition: true, align: 8)
!6962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 416, elements: !6963)
!6963 = !{!6964}
!6964 = !DISubrange(count: 52)
!6965 = !DIGlobalVariableExpression(var: !6966, expr: !DIExpression())
!6966 = distinct !DIGlobalVariable(name: "__param_ignore_hpa", scope: !2, file: !3, line: 134, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6967 = !DIGlobalVariableExpression(var: !6968, expr: !DIExpression())
!6968 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ignore_hpatype321", scope: !2, file: !3, line: 134, type: !6969, isLocal: true, isDefinition: true, align: 8)
!6969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 248, elements: !6970)
!6970 = !{!6971}
!6971 = !DISubrange(count: 31)
!6972 = !DIGlobalVariableExpression(var: !6973, expr: !DIExpression())
!6973 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ignore_hpa322", scope: !2, file: !3, line: 135, type: !6974, isLocal: true, isDefinition: true, align: 8)
!6974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 760, elements: !6975)
!6975 = !{!6976}
!6976 = !DISubrange(count: 95)
!6977 = !DIGlobalVariableExpression(var: !6978, expr: !DIExpression())
!6978 = distinct !DIGlobalVariable(name: "__param_dma", scope: !2, file: !3, line: 138, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6979 = !DIGlobalVariableExpression(var: !6980, expr: !DIExpression())
!6980 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dmatype323", scope: !2, file: !3, line: 138, type: !6959, isLocal: true, isDefinition: true, align: 8)
!6981 = !DIGlobalVariableExpression(var: !6982, expr: !DIExpression())
!6982 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dma324", scope: !2, file: !3, line: 139, type: !6983, isLocal: true, isDefinition: true, align: 8)
!6983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 536, elements: !6984)
!6984 = !{!6985}
!6985 = !DISubrange(count: 67)
!6986 = !DIGlobalVariableExpression(var: !6987, expr: !DIExpression())
!6987 = distinct !DIGlobalVariable(name: "__param_ata_probe_timeout", scope: !2, file: !3, line: 142, type: !6863, isLocal: true, isDefinition: true, align: 64)
!6988 = !DIGlobalVariableExpression(var: !6989, expr: !DIExpression())
!6989 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ata_probe_timeouttype325", scope: !2, file: !3, line: 142, type: !6990, isLocal: true, isDefinition: true, align: 8)
!6990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 304, elements: !6991)
!6991 = !{!6992}
!6992 = !DISubrange(count: 38)
!6993 = !DIGlobalVariableExpression(var: !6994, expr: !DIExpression())
!6994 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ata_probe_timeout326", scope: !2, file: !3, line: 143, type: !6995, isLocal: true, isDefinition: true, align: 8)
!6995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 512, elements: !2702)
!6996 = !DIGlobalVariableExpression(var: !6997, expr: !DIExpression())
!6997 = distinct !DIGlobalVariable(name: "libata_noacpi", scope: !2, file: !3, line: 145, type: !223, isLocal: false, isDefinition: true)
!6998 = !DIGlobalVariableExpression(var: !6999, expr: !DIExpression())
!6999 = distinct !DIGlobalVariable(name: "__param_noacpi", scope: !2, file: !3, line: 146, type: !6863, isLocal: true, isDefinition: true, align: 64)
!7000 = !DIGlobalVariableExpression(var: !7001, expr: !DIExpression())
!7001 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_noacpitype327", scope: !2, file: !3, line: 146, type: !7002, isLocal: true, isDefinition: true, align: 8)
!7002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 216, elements: !7003)
!7003 = !{!7004}
!7004 = !DISubrange(count: 27)
!7005 = !DIGlobalVariableExpression(var: !7006, expr: !DIExpression())
!7006 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_noacpi328", scope: !2, file: !3, line: 147, type: !7007, isLocal: true, isDefinition: true, align: 8)
!7007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 728, elements: !7008)
!7008 = !{!7009}
!7009 = !DISubrange(count: 91)
!7010 = !DIGlobalVariableExpression(var: !7011, expr: !DIExpression())
!7011 = distinct !DIGlobalVariable(name: "libata_allow_tpm", scope: !2, file: !3, line: 149, type: !223, isLocal: false, isDefinition: true)
!7012 = !DIGlobalVariableExpression(var: !7013, expr: !DIExpression())
!7013 = distinct !DIGlobalVariable(name: "__param_allow_tpm", scope: !2, file: !3, line: 150, type: !6863, isLocal: true, isDefinition: true, align: 64)
!7014 = !DIGlobalVariableExpression(var: !7015, expr: !DIExpression())
!7015 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_allow_tpmtype329", scope: !2, file: !3, line: 150, type: !7016, isLocal: true, isDefinition: true, align: 8)
!7016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 240, elements: !7017)
!7017 = !{!7018}
!7018 = !DISubrange(count: 30)
!7019 = !DIGlobalVariableExpression(var: !7020, expr: !DIExpression())
!7020 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_allow_tpm330", scope: !2, file: !3, line: 151, type: !7021, isLocal: true, isDefinition: true, align: 8)
!7021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 616, elements: !7022)
!7022 = !{!7023}
!7023 = !DISubrange(count: 77)
!7024 = !DIGlobalVariableExpression(var: !7025, expr: !DIExpression())
!7025 = distinct !DIGlobalVariable(name: "__param_atapi_an", scope: !2, file: !3, line: 154, type: !6863, isLocal: true, isDefinition: true, align: 64)
!7026 = !DIGlobalVariableExpression(var: !7027, expr: !DIExpression())
!7027 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_antype331", scope: !2, file: !3, line: 154, type: !6914, isLocal: true, isDefinition: true, align: 8)
!7028 = !DIGlobalVariableExpression(var: !7029, expr: !DIExpression())
!7029 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_atapi_an332", scope: !2, file: !3, line: 155, type: !7030, isLocal: true, isDefinition: true, align: 8)
!7030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 712, elements: !7031)
!7031 = !{!7032}
!7032 = !DISubrange(count: 89)
!7033 = !DIGlobalVariableExpression(var: !7034, expr: !DIExpression())
!7034 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author333", scope: !2, file: !3, line: 157, type: !7035, isLocal: true, isDefinition: true, align: 8)
!7035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 208, elements: !7036)
!7036 = !{!7037}
!7037 = !DISubrange(count: 26)
!7038 = !DIGlobalVariableExpression(var: !7039, expr: !DIExpression())
!7039 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description334", scope: !2, file: !3, line: 158, type: !7040, isLocal: true, isDefinition: true, align: 8)
!7040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 400, elements: !7041)
!7041 = !{!7042}
!7042 = !DISubrange(count: 50)
!7043 = !DIGlobalVariableExpression(var: !7044, expr: !DIExpression())
!7044 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file335", scope: !2, file: !3, line: 159, type: !6969, isLocal: true, isDefinition: true, align: 8)
!7045 = !DIGlobalVariableExpression(var: !7046, expr: !DIExpression())
!7046 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license336", scope: !2, file: !3, line: 159, type: !7047, isLocal: true, isDefinition: true, align: 8)
!7047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 152, elements: !7048)
!7048 = !{!7049}
!7049 = !DISubrange(count: 19)
!7050 = !DIGlobalVariableExpression(var: !7051, expr: !DIExpression())
!7051 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version337", scope: !2, file: !3, line: 160, type: !7052, isLocal: true, isDefinition: true, align: 8)
!7052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 160, elements: !5834)
!7053 = !DIGlobalVariableExpression(var: !7054, expr: !DIExpression())
!7054 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 160, type: !7055, isLocal: true, isDefinition: true)
!7055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7056)
!7056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7057, size: 64)
!7057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7058)
!7058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !7059, line: 65, size: 576, align: 64, elements: !7060)
!7059 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!7060 = !{!7061, !7096, !7097}
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !7058, file: !7059, line: 66, baseType: !7062, size: 448)
!7062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !7059, line: 54, size: 448, elements: !7063)
!7063 = !{!7064, !7065, !7080, !7084, !7088, !7092}
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7062, file: !7059, line: 55, baseType: !2729, size: 128)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !7062, file: !7059, line: 56, baseType: !7066, size: 64, offset: 128)
!7066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7067, size: 64)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{!1717, !7069, !7070, !1476}
!7069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7062, size: 64)
!7070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7071, size: 64)
!7071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !7059, line: 46, size: 768, elements: !7072)
!7072 = !{!7073, !7074, !7075, !7076, !7079}
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7071, file: !7059, line: 47, baseType: !2661, size: 512)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !7071, file: !7059, line: 48, baseType: !1542, size: 64, offset: 512)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !7071, file: !7059, line: 49, baseType: !2667, size: 64, offset: 576)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !7071, file: !7059, line: 50, baseType: !7077, size: 64, offset: 640)
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 64)
!7078 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !7059, line: 50, flags: DIFlagFwdDecl)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !7071, file: !7059, line: 51, baseType: !2306, size: 64, offset: 704)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !7062, file: !7059, line: 58, baseType: !7081, size: 64, offset: 192)
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 64)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{!1717, !7069, !7070, !1450, !1645}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !7062, file: !7059, line: 60, baseType: !7085, size: 64, offset: 256)
!7085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7086, size: 64)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{null, !1542, !1450}
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !7062, file: !7059, line: 61, baseType: !7089, size: 64, offset: 320)
!7089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7090, size: 64)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!223, !1542}
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7062, file: !7059, line: 62, baseType: !7093, size: 64, offset: 384)
!7093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7094, size: 64)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{null, !1542}
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !7058, file: !7059, line: 67, baseType: !1450, size: 64, offset: 448)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7058, file: !7059, line: 68, baseType: !1450, size: 64, offset: 512)
!7098 = !DIGlobalVariableExpression(var: !7099, expr: !DIExpression())
!7099 = distinct !DIGlobalVariable(name: "xfer_mode_str", scope: !7100, file: !3, line: 927, type: !7103, isLocal: true, isDefinition: true)
!7100 = distinct !DISubprogram(name: "ata_mode_string", scope: !3, file: !3, line: 925, type: !7101, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!1450, !994}
!7103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7104, size: 1280, elements: !5834)
!7104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1450)
!7105 = !DIGlobalVariableExpression(var: !7106, expr: !DIExpression())
!7106 = distinct !DIGlobalVariable(name: "spd_str", scope: !7107, file: !3, line: 960, type: !7110, isLocal: true, isDefinition: true)
!7107 = distinct !DISubprogram(name: "sata_spd_string", scope: !3, file: !3, line: 958, type: !7108, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!1450, !7}
!7110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7104, size: 192, elements: !1563)
!7111 = !DIGlobalVariableExpression(var: !7112, expr: !DIExpression())
!7112 = distinct !DIGlobalVariable(name: "ata_port_type", scope: !2, file: !3, line: 5127, type: !2964, isLocal: false, isDefinition: true)
!7113 = !DIGlobalVariableExpression(var: !7114, expr: !DIExpression())
!7114 = distinct !DIGlobalVariable(name: "__key", scope: !7115, file: !3, line: 5277, type: !1557, isLocal: true, isDefinition: true)
!7115 = distinct !DISubprogram(name: "ata_port_alloc", scope: !3, file: !3, line: 5251, type: !7116, scopeLine: 5252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7116 = !DISubroutineType(types: !7117)
!7117 = !{!1005, !6675}
!7118 = !DIGlobalVariableExpression(var: !7119, expr: !DIExpression())
!7119 = distinct !DIGlobalVariable(name: "__key", scope: !7115, file: !3, line: 5281, type: !1557, isLocal: true, isDefinition: true)
!7120 = !DIGlobalVariableExpression(var: !7121, expr: !DIExpression())
!7121 = distinct !DIGlobalVariable(name: "__key", scope: !7122, file: !3, line: 5392, type: !1557, isLocal: true, isDefinition: true)
!7122 = distinct !DISubprogram(name: "ata_host_alloc", scope: !3, file: !3, line: 5366, type: !7123, scopeLine: 5367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!6675, !2957, !223}
!7125 = !DIGlobalVariableExpression(var: !7126, expr: !DIExpression())
!7126 = distinct !DIGlobalVariable(name: "__key", scope: !7127, file: !3, line: 5629, type: !1557, isLocal: true, isDefinition: true)
!7127 = distinct !DISubprogram(name: "ata_host_init", scope: !3, file: !3, line: 5625, type: !7128, scopeLine: 5627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{null, !6675, !2957, !6362}
!7130 = !DIGlobalVariableExpression(var: !7131, expr: !DIExpression())
!7131 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_ata_init380", scope: !2, file: !3, line: 6313, type: !991, isLocal: true, isDefinition: true)
!7132 = !DIGlobalVariableExpression(var: !7133, expr: !DIExpression())
!7133 = distinct !DIGlobalVariable(name: "__exitcall_ata_exit", scope: !2, file: !3, line: 6314, type: !7134, isLocal: true, isDefinition: true)
!7134 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !7135, line: 117, baseType: !7136)
!7135 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!7136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5552, size: 64)
!7137 = !DIGlobalVariableExpression(var: !7138, expr: !DIExpression())
!7138 = distinct !DIGlobalVariable(name: "ata_dummy_port_ops", scope: !2, file: !3, line: 6417, type: !6363, isLocal: false, isDefinition: true)
!7139 = !DIGlobalVariableExpression(var: !7140, expr: !DIExpression())
!7140 = distinct !DIGlobalVariable(name: "ata_dummy_port_info", scope: !2, file: !3, line: 6426, type: !7141, isLocal: false, isDefinition: true)
!7141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7142)
!7142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_info", file: !183, line: 1002, size: 448, elements: !7143)
!7143 = !{!7144, !7145, !7146, !7147, !7148, !7149, !7150}
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7142, file: !183, line: 1003, baseType: !994, size: 64)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "link_flags", scope: !7142, file: !183, line: 1004, baseType: !994, size: 64, offset: 64)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !7142, file: !183, line: 1005, baseType: !994, size: 64, offset: 128)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !7142, file: !183, line: 1006, baseType: !994, size: 64, offset: 192)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !7142, file: !183, line: 1007, baseType: !994, size: 64, offset: 256)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "port_ops", scope: !7142, file: !183, line: 1008, baseType: !6362, size: 64, offset: 320)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !7142, file: !183, line: 1009, baseType: !991, size: 64, offset: 384)
!7151 = !DIGlobalVariableExpression(var: !7152, expr: !DIExpression())
!7152 = distinct !DIGlobalVariable(name: "ata_force_tbl", scope: !2, file: !3, line: 108, type: !7153, isLocal: true, isDefinition: true)
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7154, size: 64)
!7154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_force_ent", file: !3, line: 102, size: 384, elements: !7155)
!7155 = !{!7156, !7157, !7158}
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7154, file: !3, line: 103, baseType: !223, size: 32)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7154, file: !3, line: 104, baseType: !223, size: 32, offset: 32)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !7154, file: !3, line: 105, baseType: !7159, size: 320, offset: 64)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_force_param", file: !3, line: 92, size: 320, elements: !7160)
!7160 = !{!7161, !7162, !7163, !7164, !7165, !7166, !7167}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7159, file: !3, line: 93, baseType: !1450, size: 64)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "cbl", scope: !7159, file: !3, line: 94, baseType: !1216, size: 8, offset: 64)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "spd_limit", scope: !7159, file: !3, line: 95, baseType: !1216, size: 8, offset: 72)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_mask", scope: !7159, file: !3, line: 96, baseType: !994, size: 64, offset: 128)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "horkage_on", scope: !7159, file: !3, line: 97, baseType: !7, size: 32, offset: 192)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "horkage_off", scope: !7159, file: !3, line: 98, baseType: !7, size: 32, offset: 224)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "lflags", scope: !7159, file: !3, line: 99, baseType: !1740, size: 16, offset: 256)
!7168 = !DIGlobalVariableExpression(var: !7169, expr: !DIExpression())
!7169 = distinct !DIGlobalVariable(name: "ata_force_tbl_size", scope: !2, file: !3, line: 109, type: !223, isLocal: true, isDefinition: true)
!7170 = !DIGlobalVariableExpression(var: !7171, expr: !DIExpression())
!7171 = distinct !DIGlobalVariable(name: "ata_ignore_hpa", scope: !2, file: !3, line: 133, type: !223, isLocal: true, isDefinition: true)
!7172 = !DIGlobalVariableExpression(var: !7173, expr: !DIExpression())
!7173 = distinct !DIGlobalVariable(name: "ata_probe_timeout", scope: !2, file: !3, line: 141, type: !223, isLocal: true, isDefinition: true)
!7174 = !DIGlobalVariableExpression(var: !7175, expr: !DIExpression())
!7175 = distinct !DIGlobalVariable(name: "atapi_an", scope: !2, file: !3, line: 153, type: !223, isLocal: true, isDefinition: true)
!7176 = !DIGlobalVariableExpression(var: !7177, expr: !DIExpression())
!7177 = distinct !DIGlobalVariable(name: "__param_str_force", scope: !2, file: !3, line: 113, type: !7178, isLocal: true, isDefinition: true)
!7178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 104, elements: !7179)
!7179 = !{!7180}
!7180 = !DISubrange(count: 13)
!7181 = !DIGlobalVariableExpression(var: !7182, expr: !DIExpression())
!7182 = distinct !DIGlobalVariable(name: "__param_string_force", scope: !2, file: !3, line: 113, type: !6897, isLocal: true, isDefinition: true)
!7183 = !DIGlobalVariableExpression(var: !7184, expr: !DIExpression())
!7184 = distinct !DIGlobalVariable(name: "ata_force_param_buf", scope: !2, file: !3, line: 111, type: !2706, isLocal: true, isDefinition: true)
!7185 = !DIGlobalVariableExpression(var: !7186, expr: !DIExpression())
!7186 = distinct !DIGlobalVariable(name: "__param_str_atapi_enabled", scope: !2, file: !3, line: 118, type: !7187, isLocal: true, isDefinition: true)
!7187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 168, elements: !7188)
!7188 = !{!7189}
!7189 = !DISubrange(count: 21)
!7190 = !DIGlobalVariableExpression(var: !7191, expr: !DIExpression())
!7191 = distinct !DIGlobalVariable(name: "atapi_enabled", scope: !2, file: !3, line: 117, type: !223, isLocal: true, isDefinition: true)
!7192 = !DIGlobalVariableExpression(var: !7193, expr: !DIExpression())
!7193 = distinct !DIGlobalVariable(name: "__param_str_atapi_dmadir", scope: !2, file: !3, line: 122, type: !7052, isLocal: true, isDefinition: true)
!7194 = !DIGlobalVariableExpression(var: !7195, expr: !DIExpression())
!7195 = distinct !DIGlobalVariable(name: "atapi_dmadir", scope: !2, file: !3, line: 121, type: !223, isLocal: true, isDefinition: true)
!7196 = !DIGlobalVariableExpression(var: !7197, expr: !DIExpression())
!7197 = distinct !DIGlobalVariable(name: "__param_str_atapi_passthru16", scope: !2, file: !3, line: 126, type: !6959, isLocal: true, isDefinition: true)
!7198 = !DIGlobalVariableExpression(var: !7199, expr: !DIExpression())
!7199 = distinct !DIGlobalVariable(name: "__param_str_fua", scope: !2, file: !3, line: 130, type: !7200, isLocal: true, isDefinition: true)
!7200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 88, elements: !7201)
!7201 = !{!7202}
!7202 = !DISubrange(count: 11)
!7203 = !DIGlobalVariableExpression(var: !7204, expr: !DIExpression())
!7204 = distinct !DIGlobalVariable(name: "__param_str_ignore_hpa", scope: !2, file: !3, line: 134, type: !7205, isLocal: true, isDefinition: true)
!7205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 144, elements: !7206)
!7206 = !{!7207}
!7207 = !DISubrange(count: 18)
!7208 = !DIGlobalVariableExpression(var: !7209, expr: !DIExpression())
!7209 = distinct !DIGlobalVariable(name: "__param_str_dma", scope: !2, file: !3, line: 138, type: !7200, isLocal: true, isDefinition: true)
!7210 = !DIGlobalVariableExpression(var: !7211, expr: !DIExpression())
!7211 = distinct !DIGlobalVariable(name: "libata_dma_mask", scope: !2, file: !3, line: 137, type: !223, isLocal: true, isDefinition: true)
!7212 = !DIGlobalVariableExpression(var: !7213, expr: !DIExpression())
!7213 = distinct !DIGlobalVariable(name: "__param_str_ata_probe_timeout", scope: !2, file: !3, line: 142, type: !7214, isLocal: true, isDefinition: true)
!7214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 200, elements: !7215)
!7215 = !{!7216}
!7216 = !DISubrange(count: 25)
!7217 = !DIGlobalVariableExpression(var: !7218, expr: !DIExpression())
!7218 = distinct !DIGlobalVariable(name: "__param_str_noacpi", scope: !2, file: !3, line: 146, type: !7219, isLocal: true, isDefinition: true)
!7219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 112, elements: !7220)
!7220 = !{!7221}
!7221 = !DISubrange(count: 14)
!7222 = !DIGlobalVariableExpression(var: !7223, expr: !DIExpression())
!7223 = distinct !DIGlobalVariable(name: "__param_str_allow_tpm", scope: !2, file: !3, line: 150, type: !7224, isLocal: true, isDefinition: true)
!7224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 136, elements: !7225)
!7225 = !{!7226}
!7226 = !DISubrange(count: 17)
!7227 = !DIGlobalVariableExpression(var: !7228, expr: !DIExpression())
!7228 = distinct !DIGlobalVariable(name: "__param_str_atapi_an", scope: !2, file: !3, line: 154, type: !7229, isLocal: true, isDefinition: true)
!7229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 128, elements: !3376)
!7230 = !DIGlobalVariableExpression(var: !7231, expr: !DIExpression())
!7231 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 160, type: !7058, isLocal: true, isDefinition: true)
!7232 = !DIGlobalVariableExpression(var: !7233, expr: !DIExpression())
!7233 = distinct !DIGlobalVariable(name: "ata_rw_cmds", scope: !2, file: !3, line: 533, type: !7234, isLocal: true, isDefinition: true)
!7234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7235, size: 192, elements: !3722)
!7235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1216)
!7236 = !DIGlobalVariableExpression(var: !7237, expr: !DIExpression())
!7237 = distinct !DIGlobalVariable(name: "ata_xfer_tbl", scope: !2, file: !3, line: 832, type: !7238, isLocal: true, isDefinition: true)
!7238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7239, size: 384, elements: !2003)
!7239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7240)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_xfer_ent", file: !3, line: 829, size: 96, elements: !7241)
!7241 = !{!7242, !7243, !7244}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !7240, file: !3, line: 830, baseType: !223, size: 32)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !7240, file: !3, line: 830, baseType: !223, size: 32, offset: 32)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7240, file: !3, line: 831, baseType: !1216, size: 8, offset: 64)
!7245 = !DIGlobalVariableExpression(var: !7246, expr: !DIExpression())
!7246 = distinct !DIGlobalVariable(name: "ata_device_blacklist", scope: !2, file: !3, line: 3774, type: !7247, isLocal: true, isDefinition: true)
!7247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7248, size: 21504, elements: !7254)
!7248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7249)
!7249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_blacklist_entry", file: !3, line: 3768, size: 192, elements: !7250)
!7250 = !{!7251, !7252, !7253}
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "model_num", scope: !7249, file: !3, line: 3769, baseType: !1450, size: 64)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "model_rev", scope: !7249, file: !3, line: 3770, baseType: !1450, size: 64, offset: 64)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "horkage", scope: !7249, file: !3, line: 3771, baseType: !994, size: 64, offset: 128)
!7254 = !{!7255}
!7255 = !DISubrange(count: 112)
!7256 = !DIGlobalVariableExpression(var: !7257, expr: !DIExpression(DW_OP_constu, 28, DW_OP_stack_value))
!7257 = distinct !DIGlobalVariable(name: "ata_port_suspend_ehi", scope: !2, file: !3, line: 4970, type: !4062, isLocal: true, isDefinition: true)
!7258 = !DIGlobalVariableExpression(var: !7259, expr: !DIExpression(DW_OP_constu, 12, DW_OP_stack_value))
!7259 = distinct !DIGlobalVariable(name: "ata_port_resume_ehi", scope: !2, file: !3, line: 5012, type: !4062, isLocal: true, isDefinition: true)
!7260 = !DIGlobalVariableExpression(var: !7261, expr: !DIExpression())
!7261 = distinct !DIGlobalVariable(name: "ata_port_pm_ops", scope: !2, file: !3, line: 5070, type: !2984, isLocal: true, isDefinition: true)
!7262 = !DIGlobalVariableExpression(var: !7263, expr: !DIExpression())
!7263 = distinct !DIGlobalVariable(name: "__key", scope: !7264, file: !2308, line: 88, type: !1557, isLocal: true, isDefinition: true)
!7264 = distinct !DISubprogram(name: "__init_completion", scope: !2308, file: !2308, line: 85, type: !7265, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{null, !2306}
!7267 = !DIGlobalVariableExpression(var: !7268, expr: !DIExpression())
!7268 = distinct !DIGlobalVariable(name: "lock", scope: !7269, file: !3, line: 5509, type: !1021, isLocal: true, isDefinition: true)
!7269 = distinct !DISubprogram(name: "ata_finalize_port_ops", scope: !3, file: !3, line: 5507, type: !7270, scopeLine: 5508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{null, !6362}
!7272 = !DIGlobalVariableExpression(var: !7273, expr: !DIExpression())
!7273 = distinct !DIGlobalVariable(name: "force_tbl", scope: !7274, file: !3, line: 6094, type: !7278, isLocal: true, isDefinition: true)
!7274 = distinct !DISubprogram(name: "ata_parse_force_one", scope: !3, file: !3, line: 6090, type: !7275, scopeLine: 6093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7275 = !DISubroutineType(types: !7276)
!7276 = !{!223, !7277, !7153, !3302}
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!7278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7279, size: 16960, elements: !7280)
!7279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7159)
!7280 = !{!7281}
!7281 = !DISubrange(count: 53)
!7282 = !DIGlobalVariableExpression(var: !7283, expr: !DIExpression())
!7283 = distinct !DIGlobalVariable(name: "ratelimit", scope: !2, file: !3, line: 6316, type: !2188, isLocal: true, isDefinition: true)
!7284 = !{!"rsp"}
!7285 = !{i32 7, !"Dwarf Version", i32 4}
!7286 = !{i32 2, !"Debug Info Version", i32 3}
!7287 = !{i32 1, !"wchar_size", i32 2}
!7288 = !{i32 1, !"Code Model", i32 2}
!7289 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7290 = distinct !DISubprogram(name: "ata_std_prereset", scope: !3, file: !3, line: 3504, type: !6628, scopeLine: 3505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7291 = !DILocalVariable(name: "link", arg: 1, scope: !7290, file: !3, line: 3504, type: !6378)
!7292 = !DILocation(line: 3504, column: 39, scope: !7290)
!7293 = !DILocalVariable(name: "deadline", arg: 2, scope: !7290, file: !3, line: 3504, type: !994)
!7294 = !DILocation(line: 3504, column: 59, scope: !7290)
!7295 = !DILocalVariable(name: "ap", scope: !7290, file: !3, line: 3506, type: !1005)
!7296 = !DILocation(line: 3506, column: 19, scope: !7290)
!7297 = !DILocation(line: 3506, column: 24, scope: !7290)
!7298 = !DILocation(line: 3506, column: 30, scope: !7290)
!7299 = !DILocalVariable(name: "ehc", scope: !7290, file: !3, line: 3507, type: !7300)
!7300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!7301 = !DILocation(line: 3507, column: 25, scope: !7290)
!7302 = !DILocation(line: 3507, column: 32, scope: !7290)
!7303 = !DILocation(line: 3507, column: 38, scope: !7290)
!7304 = !DILocalVariable(name: "timing", scope: !7290, file: !3, line: 3508, type: !7305)
!7305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5031, size: 64)
!7306 = !DILocation(line: 3508, column: 23, scope: !7290)
!7307 = !DILocation(line: 3508, column: 52, scope: !7290)
!7308 = !DILocation(line: 3508, column: 32, scope: !7290)
!7309 = !DILocalVariable(name: "rc", scope: !7290, file: !3, line: 3509, type: !223)
!7310 = !DILocation(line: 3509, column: 6, scope: !7290)
!7311 = !DILocation(line: 3512, column: 6, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 3512, column: 6)
!7313 = !DILocation(line: 3512, column: 11, scope: !7312)
!7314 = !DILocation(line: 3512, column: 13, scope: !7312)
!7315 = !DILocation(line: 3512, column: 20, scope: !7312)
!7316 = !DILocation(line: 3512, column: 6, scope: !7290)
!7317 = !DILocation(line: 3513, column: 3, scope: !7312)
!7318 = !DILocation(line: 3516, column: 6, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 3516, column: 6)
!7320 = !DILocation(line: 3516, column: 10, scope: !7319)
!7321 = !DILocation(line: 3516, column: 16, scope: !7319)
!7322 = !DILocation(line: 3516, column: 6, scope: !7290)
!7323 = !DILocation(line: 3517, column: 25, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 3516, column: 33)
!7325 = !DILocation(line: 3517, column: 31, scope: !7324)
!7326 = !DILocation(line: 3517, column: 39, scope: !7324)
!7327 = !DILocation(line: 3517, column: 8, scope: !7324)
!7328 = !DILocation(line: 3517, column: 6, scope: !7324)
!7329 = !DILocation(line: 3519, column: 7, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 3519, column: 7)
!7331 = !DILocation(line: 3519, column: 10, scope: !7330)
!7332 = !DILocation(line: 3519, column: 13, scope: !7330)
!7333 = !DILocation(line: 3519, column: 16, scope: !7330)
!7334 = !DILocation(line: 3519, column: 7, scope: !7324)
!7335 = !DILocation(line: 3520, column: 4, scope: !7330)
!7336 = !DILocation(line: 3523, column: 2, scope: !7324)
!7337 = !DILocation(line: 3526, column: 28, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 3526, column: 6)
!7339 = !DILocation(line: 3526, column: 6, scope: !7338)
!7340 = !DILocation(line: 3526, column: 6, scope: !7290)
!7341 = !DILocation(line: 3527, column: 3, scope: !7338)
!7342 = !DILocation(line: 3527, column: 8, scope: !7338)
!7343 = !DILocation(line: 3527, column: 10, scope: !7338)
!7344 = !DILocation(line: 3527, column: 17, scope: !7338)
!7345 = !DILocation(line: 3529, column: 2, scope: !7290)
!7346 = !DILocation(line: 3530, column: 1, scope: !7290)
!7347 = distinct !DISubprogram(name: "ata_std_postreset", scope: !3, file: !3, line: 3572, type: !6639, scopeLine: 3573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7348 = !DILocalVariable(name: "link", arg: 1, scope: !7347, file: !3, line: 3572, type: !6378)
!7349 = !DILocation(line: 3572, column: 41, scope: !7347)
!7350 = !DILocalVariable(name: "classes", arg: 2, scope: !7347, file: !3, line: 3572, type: !3394)
!7351 = !DILocation(line: 3572, column: 61, scope: !7347)
!7352 = !DILocalVariable(name: "serror", scope: !7347, file: !3, line: 3574, type: !989)
!7353 = !DILocation(line: 3574, column: 6, scope: !7347)
!7354 = !DILocation(line: 3579, column: 21, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 3579, column: 6)
!7356 = !DILocation(line: 3579, column: 7, scope: !7355)
!7357 = !DILocation(line: 3579, column: 6, scope: !7347)
!7358 = !DILocation(line: 3580, column: 18, scope: !7355)
!7359 = !DILocation(line: 3580, column: 35, scope: !7355)
!7360 = !DILocation(line: 3580, column: 3, scope: !7355)
!7361 = !DILocation(line: 3583, column: 25, scope: !7347)
!7362 = !DILocation(line: 3583, column: 2, scope: !7347)
!7363 = !DILocation(line: 3586, column: 1, scope: !7347)
!7364 = distinct !DISubprogram(name: "ata_std_qc_defer", scope: !3, file: !3, line: 4360, type: !6367, scopeLine: 4361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7365 = !DILocalVariable(name: "qc", arg: 1, scope: !7364, file: !3, line: 4360, type: !6369)
!7366 = !DILocation(line: 4360, column: 45, scope: !7364)
!7367 = !DILocalVariable(name: "link", scope: !7364, file: !3, line: 4362, type: !6378)
!7368 = !DILocation(line: 4362, column: 19, scope: !7364)
!7369 = !DILocation(line: 4362, column: 26, scope: !7364)
!7370 = !DILocation(line: 4362, column: 30, scope: !7364)
!7371 = !DILocation(line: 4362, column: 35, scope: !7364)
!7372 = !DILocation(line: 4364, column: 17, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 4364, column: 6)
!7374 = !DILocation(line: 4364, column: 21, scope: !7373)
!7375 = !DILocation(line: 4364, column: 24, scope: !7373)
!7376 = !DILocation(line: 4364, column: 6, scope: !7373)
!7377 = !DILocation(line: 4364, column: 6, scope: !7364)
!7378 = !DILocation(line: 4365, column: 22, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 4365, column: 7)
!7380 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 4364, column: 35)
!7381 = !DILocation(line: 4365, column: 28, scope: !7379)
!7382 = !DILocation(line: 4365, column: 8, scope: !7379)
!7383 = !DILocation(line: 4365, column: 7, scope: !7380)
!7384 = !DILocation(line: 4366, column: 4, scope: !7379)
!7385 = !DILocation(line: 4367, column: 2, scope: !7380)
!7386 = !DILocation(line: 4368, column: 22, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 4368, column: 7)
!7388 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 4367, column: 9)
!7389 = !DILocation(line: 4368, column: 28, scope: !7387)
!7390 = !DILocation(line: 4368, column: 8, scope: !7387)
!7391 = !DILocation(line: 4368, column: 40, scope: !7387)
!7392 = !DILocation(line: 4368, column: 44, scope: !7387)
!7393 = !DILocation(line: 4368, column: 50, scope: !7387)
!7394 = !DILocation(line: 4368, column: 7, scope: !7388)
!7395 = !DILocation(line: 4369, column: 4, scope: !7387)
!7396 = !DILocation(line: 4372, column: 2, scope: !7364)
!7397 = !DILocation(line: 4373, column: 1, scope: !7364)
!7398 = distinct !DISubprogram(name: "sata_std_hardreset", scope: !3, file: !3, line: 3547, type: !6633, scopeLine: 3549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7399 = !DILocalVariable(name: "link", arg: 1, scope: !7398, file: !3, line: 3547, type: !6378)
!7400 = !DILocation(line: 3547, column: 41, scope: !7398)
!7401 = !DILocalVariable(name: "class", arg: 2, scope: !7398, file: !3, line: 3547, type: !3394)
!7402 = !DILocation(line: 3547, column: 61, scope: !7398)
!7403 = !DILocalVariable(name: "deadline", arg: 3, scope: !7398, file: !3, line: 3548, type: !994)
!7404 = !DILocation(line: 3548, column: 24, scope: !7398)
!7405 = !DILocalVariable(name: "timing", scope: !7398, file: !3, line: 3550, type: !7305)
!7406 = !DILocation(line: 3550, column: 23, scope: !7398)
!7407 = !DILocation(line: 3550, column: 53, scope: !7398)
!7408 = !DILocation(line: 3550, column: 59, scope: !7398)
!7409 = !DILocation(line: 3550, column: 32, scope: !7398)
!7410 = !DILocalVariable(name: "online", scope: !7398, file: !3, line: 3551, type: !1495)
!7411 = !DILocation(line: 3551, column: 7, scope: !7398)
!7412 = !DILocalVariable(name: "rc", scope: !7398, file: !3, line: 3552, type: !223)
!7413 = !DILocation(line: 3552, column: 6, scope: !7398)
!7414 = !DILocation(line: 3555, column: 27, scope: !7398)
!7415 = !DILocation(line: 3555, column: 33, scope: !7398)
!7416 = !DILocation(line: 3555, column: 41, scope: !7398)
!7417 = !DILocation(line: 3555, column: 7, scope: !7398)
!7418 = !DILocation(line: 3555, column: 5, scope: !7398)
!7419 = !DILocation(line: 3556, column: 9, scope: !7398)
!7420 = !DILocation(line: 3556, column: 28, scope: !7398)
!7421 = !DILocation(line: 3556, column: 2, scope: !7398)
!7422 = distinct !DISubprogram(name: "ata_link_next", scope: !3, file: !3, line: 180, type: !7423, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{!6378, !6378, !1005, !210}
!7425 = !DILocalVariable(name: "link", arg: 1, scope: !7422, file: !3, line: 180, type: !6378)
!7426 = !DILocation(line: 180, column: 49, scope: !7422)
!7427 = !DILocalVariable(name: "ap", arg: 2, scope: !7422, file: !3, line: 180, type: !1005)
!7428 = !DILocation(line: 180, column: 72, scope: !7422)
!7429 = !DILocalVariable(name: "mode", arg: 3, scope: !7422, file: !3, line: 181, type: !210)
!7430 = !DILocation(line: 181, column: 35, scope: !7422)
!7431 = !DILocation(line: 183, column: 2, scope: !7422)
!7432 = !DILocation(line: 183, column: 2, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 183, column: 2)
!7434 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 183, column: 2)
!7435 = !DILocation(line: 0, scope: !7433)
!7436 = !DILocation(line: 183, column: 2, scope: !7434)
!7437 = !DILocation(line: 183, column: 2, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 183, column: 2)
!7439 = !DILocation(line: 183, column: 2, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 183, column: 2)
!7441 = !DILocation(line: 183, column: 2, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 183, column: 2)
!7443 = !{i32 -2139267747, i32 -2139267718, i32 -2139267672, i32 -2139267614, i32 -2139267560, i32 -2139267506, i32 -2139267451, i32 -2139267420}
!7444 = !DILocation(line: 183, column: 2, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 183, column: 2)
!7446 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 183, column: 2)
!7447 = !{i32 -2139266972, i32 -2139266965, i32 -2139266911, i32 -2139266880, i32 -2139266850}
!7448 = !DILocation(line: 183, column: 2, scope: !7446)
!7449 = !DILocation(line: 187, column: 7, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 187, column: 6)
!7451 = !DILocation(line: 187, column: 6, scope: !7422)
!7452 = !DILocation(line: 188, column: 11, scope: !7450)
!7453 = !DILocation(line: 188, column: 3, scope: !7450)
!7454 = !DILocation(line: 191, column: 26, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 191, column: 8)
!7456 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 188, column: 17)
!7457 = !DILocation(line: 191, column: 8, scope: !7455)
!7458 = !DILocation(line: 191, column: 8, scope: !7456)
!7459 = !DILocation(line: 192, column: 12, scope: !7455)
!7460 = !DILocation(line: 192, column: 16, scope: !7455)
!7461 = !DILocation(line: 192, column: 5, scope: !7455)
!7462 = !DILocation(line: 191, column: 28, scope: !7455)
!7463 = !DILocation(line: 195, column: 12, scope: !7456)
!7464 = !DILocation(line: 195, column: 16, scope: !7456)
!7465 = !DILocation(line: 195, column: 4, scope: !7456)
!7466 = !DILocation(line: 196, column: 3, scope: !7456)
!7467 = !DILocation(line: 199, column: 6, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 199, column: 6)
!7469 = !DILocation(line: 199, column: 15, scope: !7468)
!7470 = !DILocation(line: 199, column: 19, scope: !7468)
!7471 = !DILocation(line: 199, column: 11, scope: !7468)
!7472 = !DILocation(line: 199, column: 6, scope: !7422)
!7473 = !DILocation(line: 200, column: 11, scope: !7468)
!7474 = !DILocation(line: 200, column: 3, scope: !7468)
!7475 = !DILocation(line: 202, column: 26, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !3, line: 202, column: 8)
!7477 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 200, column: 17)
!7478 = !DILocation(line: 202, column: 8, scope: !7476)
!7479 = !DILocation(line: 202, column: 8, scope: !7477)
!7480 = !DILocation(line: 203, column: 12, scope: !7476)
!7481 = !DILocation(line: 203, column: 16, scope: !7476)
!7482 = !DILocation(line: 203, column: 5, scope: !7476)
!7483 = !DILocation(line: 202, column: 28, scope: !7476)
!7484 = !DILocation(line: 206, column: 8, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7477, file: !3, line: 206, column: 8)
!7486 = !DILocation(line: 206, column: 8, scope: !7477)
!7487 = !DILocation(line: 207, column: 12, scope: !7485)
!7488 = !DILocation(line: 207, column: 16, scope: !7485)
!7489 = !DILocation(line: 207, column: 5, scope: !7485)
!7490 = !DILocation(line: 210, column: 4, scope: !7477)
!7491 = !DILocation(line: 211, column: 3, scope: !7477)
!7492 = !DILocation(line: 214, column: 6, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 214, column: 6)
!7494 = !DILocation(line: 214, column: 6, scope: !7422)
!7495 = !DILocation(line: 215, column: 3, scope: !7493)
!7496 = !DILocation(line: 218, column: 6, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 218, column: 6)
!7498 = !DILocation(line: 218, column: 15, scope: !7497)
!7499 = !DILocation(line: 218, column: 19, scope: !7497)
!7500 = !DILocation(line: 218, column: 30, scope: !7497)
!7501 = !DILocation(line: 218, column: 34, scope: !7497)
!7502 = !DILocation(line: 218, column: 28, scope: !7497)
!7503 = !DILocation(line: 218, column: 13, scope: !7497)
!7504 = !DILocation(line: 218, column: 6, scope: !7422)
!7505 = !DILocation(line: 219, column: 10, scope: !7497)
!7506 = !DILocation(line: 219, column: 3, scope: !7497)
!7507 = !DILocation(line: 221, column: 6, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 221, column: 6)
!7509 = !DILocation(line: 221, column: 11, scope: !7508)
!7510 = !DILocation(line: 221, column: 6, scope: !7422)
!7511 = !DILocation(line: 222, column: 11, scope: !7508)
!7512 = !DILocation(line: 222, column: 15, scope: !7508)
!7513 = !DILocation(line: 222, column: 3, scope: !7508)
!7514 = !DILocation(line: 224, column: 2, scope: !7422)
!7515 = !DILocation(line: 225, column: 1, scope: !7422)
!7516 = distinct !DISubprogram(name: "sata_pmp_attached", scope: !183, file: !183, line: 1432, type: !6725, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7517 = !DILocalVariable(name: "ap", arg: 1, scope: !7516, file: !183, line: 1432, type: !1005)
!7518 = !DILocation(line: 1432, column: 55, scope: !7516)
!7519 = !DILocation(line: 1434, column: 9, scope: !7516)
!7520 = !DILocation(line: 1434, column: 13, scope: !7516)
!7521 = !DILocation(line: 1434, column: 26, scope: !7516)
!7522 = !DILocation(line: 1434, column: 2, scope: !7516)
!7523 = distinct !DISubprogram(name: "ata_dev_next", scope: !3, file: !3, line: 240, type: !7524, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{!6374, !6374, !6378, !215}
!7526 = !DILocalVariable(name: "dev", arg: 1, scope: !7523, file: !3, line: 240, type: !6374)
!7527 = !DILocation(line: 240, column: 52, scope: !7523)
!7528 = !DILocalVariable(name: "link", arg: 2, scope: !7523, file: !3, line: 240, type: !6378)
!7529 = !DILocation(line: 240, column: 74, scope: !7523)
!7530 = !DILocalVariable(name: "mode", arg: 3, scope: !7523, file: !3, line: 241, type: !215)
!7531 = !DILocation(line: 241, column: 28, scope: !7523)
!7532 = !DILocation(line: 243, column: 2, scope: !7523)
!7533 = !DILocation(line: 243, column: 2, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 243, column: 2)
!7535 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 243, column: 2)
!7536 = !DILocation(line: 0, scope: !7534)
!7537 = !DILocation(line: 243, column: 2, scope: !7535)
!7538 = !DILocation(line: 243, column: 2, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 243, column: 2)
!7540 = !DILocation(line: 243, column: 2, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 243, column: 2)
!7542 = !DILocation(line: 243, column: 2, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 243, column: 2)
!7544 = !{i32 -2139265991, i32 -2139265962, i32 -2139265916, i32 -2139265858, i32 -2139265804, i32 -2139265750, i32 -2139265695, i32 -2139265664}
!7545 = !DILocation(line: 243, column: 2, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 243, column: 2)
!7547 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 243, column: 2)
!7548 = !{i32 -2139265216, i32 -2139265209, i32 -2139265155, i32 -2139265124, i32 -2139265094}
!7549 = !DILocation(line: 243, column: 2, scope: !7547)
!7550 = !DILocation(line: 247, column: 7, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 247, column: 6)
!7552 = !DILocation(line: 247, column: 6, scope: !7523)
!7553 = !DILocation(line: 248, column: 11, scope: !7551)
!7554 = !DILocation(line: 248, column: 3, scope: !7551)
!7555 = !DILocation(line: 251, column: 10, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7551, file: !3, line: 248, column: 17)
!7557 = !DILocation(line: 251, column: 16, scope: !7556)
!7558 = !DILocation(line: 251, column: 8, scope: !7556)
!7559 = !DILocation(line: 252, column: 4, scope: !7556)
!7560 = !DILocation(line: 255, column: 10, scope: !7556)
!7561 = !DILocation(line: 255, column: 16, scope: !7556)
!7562 = !DILocation(line: 255, column: 46, scope: !7556)
!7563 = !DILocation(line: 255, column: 25, scope: !7556)
!7564 = !DILocation(line: 255, column: 23, scope: !7556)
!7565 = !DILocation(line: 255, column: 52, scope: !7556)
!7566 = !DILocation(line: 255, column: 8, scope: !7556)
!7567 = !DILocation(line: 256, column: 4, scope: !7556)
!7568 = !DILocation(line: 257, column: 3, scope: !7556)
!7569 = !DILabel(scope: !7523, name: "next", file: !3, line: 259)
!7570 = !DILocation(line: 259, column: 2, scope: !7523)
!7571 = !DILocation(line: 261, column: 10, scope: !7523)
!7572 = !DILocation(line: 261, column: 2, scope: !7523)
!7573 = !DILocation(line: 264, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 264, column: 7)
!7575 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 261, column: 16)
!7576 = !DILocation(line: 264, column: 15, scope: !7574)
!7577 = !DILocation(line: 264, column: 21, scope: !7574)
!7578 = !DILocation(line: 264, column: 51, scope: !7574)
!7579 = !DILocation(line: 264, column: 30, scope: !7574)
!7580 = !DILocation(line: 264, column: 28, scope: !7574)
!7581 = !DILocation(line: 264, column: 13, scope: !7574)
!7582 = !DILocation(line: 264, column: 7, scope: !7575)
!7583 = !DILocation(line: 265, column: 4, scope: !7574)
!7584 = !DILocation(line: 266, column: 3, scope: !7575)
!7585 = !DILocation(line: 269, column: 7, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 269, column: 7)
!7587 = !DILocation(line: 269, column: 16, scope: !7586)
!7588 = !DILocation(line: 269, column: 22, scope: !7586)
!7589 = !DILocation(line: 269, column: 13, scope: !7586)
!7590 = !DILocation(line: 269, column: 7, scope: !7575)
!7591 = !DILocation(line: 270, column: 4, scope: !7586)
!7592 = !DILocation(line: 271, column: 3, scope: !7575)
!7593 = !DILocation(line: 272, column: 2, scope: !7575)
!7594 = !DILabel(scope: !7523, name: "check", file: !3, line: 274)
!7595 = !DILocation(line: 274, column: 2, scope: !7523)
!7596 = !DILocation(line: 275, column: 7, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 275, column: 6)
!7598 = !DILocation(line: 275, column: 12, scope: !7597)
!7599 = !DILocation(line: 275, column: 33, scope: !7597)
!7600 = !DILocation(line: 275, column: 36, scope: !7597)
!7601 = !DILocation(line: 275, column: 41, scope: !7597)
!7602 = !DILocation(line: 275, column: 71, scope: !7597)
!7603 = !DILocation(line: 276, column: 23, scope: !7597)
!7604 = !DILocation(line: 276, column: 7, scope: !7597)
!7605 = !DILocation(line: 275, column: 6, scope: !7523)
!7606 = !DILocation(line: 277, column: 3, scope: !7597)
!7607 = !DILocation(line: 278, column: 9, scope: !7523)
!7608 = !DILocation(line: 278, column: 2, scope: !7523)
!7609 = !DILocation(line: 279, column: 1, scope: !7523)
!7610 = distinct !DISubprogram(name: "ata_link_max_devices", scope: !183, file: !183, line: 1613, type: !7611, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7611 = !DISubroutineType(types: !7612)
!7612 = !{!223, !7613}
!7613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7614, size: 64)
!7614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6379)
!7615 = !DILocalVariable(name: "link", arg: 1, scope: !7610, file: !183, line: 1613, type: !7613)
!7616 = !DILocation(line: 1613, column: 63, scope: !7610)
!7617 = !DILocation(line: 1615, column: 23, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7610, file: !183, line: 1615, column: 6)
!7619 = !DILocation(line: 1615, column: 6, scope: !7618)
!7620 = !DILocation(line: 1615, column: 29, scope: !7618)
!7621 = !DILocation(line: 1615, column: 32, scope: !7618)
!7622 = !DILocation(line: 1615, column: 38, scope: !7618)
!7623 = !DILocation(line: 1615, column: 42, scope: !7618)
!7624 = !DILocation(line: 1615, column: 48, scope: !7618)
!7625 = !DILocation(line: 1615, column: 6, scope: !7610)
!7626 = !DILocation(line: 1616, column: 3, scope: !7618)
!7627 = !DILocation(line: 1617, column: 2, scope: !7610)
!7628 = !DILocation(line: 1618, column: 1, scope: !7610)
!7629 = distinct !DISubprogram(name: "ata_dev_enabled", scope: !183, file: !183, line: 1595, type: !7630, scopeLine: 1596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{!7, !7632}
!7632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 64)
!7633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6375)
!7634 = !DILocalVariable(name: "dev", arg: 1, scope: !7629, file: !183, line: 1595, type: !7632)
!7635 = !DILocation(line: 1595, column: 69, scope: !7629)
!7636 = !DILocation(line: 1597, column: 27, scope: !7629)
!7637 = !DILocation(line: 1597, column: 32, scope: !7629)
!7638 = !DILocation(line: 1597, column: 9, scope: !7629)
!7639 = !DILocation(line: 1597, column: 2, scope: !7629)
!7640 = distinct !DISubprogram(name: "ata_dev_phys_link", scope: !3, file: !3, line: 296, type: !7641, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{!6378, !6374}
!7643 = !DILocalVariable(name: "dev", arg: 1, scope: !7640, file: !3, line: 296, type: !6374)
!7644 = !DILocation(line: 296, column: 55, scope: !7640)
!7645 = !DILocalVariable(name: "ap", scope: !7640, file: !3, line: 298, type: !1005)
!7646 = !DILocation(line: 298, column: 19, scope: !7640)
!7647 = !DILocation(line: 298, column: 24, scope: !7640)
!7648 = !DILocation(line: 298, column: 29, scope: !7640)
!7649 = !DILocation(line: 298, column: 35, scope: !7640)
!7650 = !DILocation(line: 300, column: 7, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 300, column: 6)
!7652 = !DILocation(line: 300, column: 11, scope: !7651)
!7653 = !DILocation(line: 300, column: 6, scope: !7640)
!7654 = !DILocation(line: 301, column: 10, scope: !7651)
!7655 = !DILocation(line: 301, column: 15, scope: !7651)
!7656 = !DILocation(line: 301, column: 3, scope: !7651)
!7657 = !DILocation(line: 302, column: 7, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 302, column: 6)
!7659 = !DILocation(line: 302, column: 12, scope: !7658)
!7660 = !DILocation(line: 302, column: 6, scope: !7640)
!7661 = !DILocation(line: 303, column: 11, scope: !7658)
!7662 = !DILocation(line: 303, column: 15, scope: !7658)
!7663 = !DILocation(line: 303, column: 3, scope: !7658)
!7664 = !DILocation(line: 304, column: 9, scope: !7640)
!7665 = !DILocation(line: 304, column: 13, scope: !7640)
!7666 = !DILocation(line: 304, column: 2, scope: !7640)
!7667 = !DILocation(line: 305, column: 1, scope: !7640)
!7668 = distinct !DISubprogram(name: "ata_force_cbl", scope: !3, file: !3, line: 321, type: !6622, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7669 = !DILocalVariable(name: "ap", arg: 1, scope: !7668, file: !3, line: 321, type: !1005)
!7670 = !DILocation(line: 321, column: 37, scope: !7668)
!7671 = !DILocalVariable(name: "i", scope: !7668, file: !3, line: 323, type: !223)
!7672 = !DILocation(line: 323, column: 6, scope: !7668)
!7673 = !DILocation(line: 325, column: 11, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 325, column: 2)
!7675 = !DILocation(line: 325, column: 30, scope: !7674)
!7676 = !DILocation(line: 325, column: 9, scope: !7674)
!7677 = !DILocation(line: 325, column: 7, scope: !7674)
!7678 = !DILocation(line: 325, column: 35, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 325, column: 2)
!7680 = !DILocation(line: 325, column: 37, scope: !7679)
!7681 = !DILocation(line: 325, column: 2, scope: !7674)
!7682 = !DILocalVariable(name: "fe", scope: !7683, file: !3, line: 326, type: !7684)
!7683 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 325, column: 48)
!7684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7685, size: 64)
!7685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7154)
!7686 = !DILocation(line: 326, column: 31, scope: !7683)
!7687 = !DILocation(line: 326, column: 37, scope: !7683)
!7688 = !DILocation(line: 326, column: 51, scope: !7683)
!7689 = !DILocation(line: 328, column: 7, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 328, column: 7)
!7691 = !DILocation(line: 328, column: 11, scope: !7690)
!7692 = !DILocation(line: 328, column: 16, scope: !7690)
!7693 = !DILocation(line: 328, column: 22, scope: !7690)
!7694 = !DILocation(line: 328, column: 25, scope: !7690)
!7695 = !DILocation(line: 328, column: 29, scope: !7690)
!7696 = !DILocation(line: 328, column: 37, scope: !7690)
!7697 = !DILocation(line: 328, column: 41, scope: !7690)
!7698 = !DILocation(line: 328, column: 34, scope: !7690)
!7699 = !DILocation(line: 328, column: 7, scope: !7683)
!7700 = !DILocation(line: 329, column: 4, scope: !7690)
!7701 = !DILocation(line: 331, column: 7, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 331, column: 7)
!7703 = !DILocation(line: 331, column: 11, scope: !7702)
!7704 = !DILocation(line: 331, column: 17, scope: !7702)
!7705 = !DILocation(line: 331, column: 21, scope: !7702)
!7706 = !DILocation(line: 331, column: 7, scope: !7683)
!7707 = !DILocation(line: 332, column: 4, scope: !7702)
!7708 = !DILocation(line: 334, column: 13, scope: !7683)
!7709 = !DILocation(line: 334, column: 17, scope: !7683)
!7710 = !DILocation(line: 334, column: 23, scope: !7683)
!7711 = !DILocation(line: 334, column: 3, scope: !7683)
!7712 = !DILocation(line: 334, column: 7, scope: !7683)
!7713 = !DILocation(line: 334, column: 11, scope: !7683)
!7714 = !DILocation(line: 335, column: 3, scope: !7683)
!7715 = !DILocation(line: 336, column: 3, scope: !7683)
!7716 = !DILocation(line: 325, column: 44, scope: !7679)
!7717 = !DILocation(line: 325, column: 2, scope: !7679)
!7718 = distinct !{!7718, !7681, !7719}
!7719 = !DILocation(line: 337, column: 2, scope: !7674)
!7720 = !DILocation(line: 338, column: 1, scope: !7668)
!7721 = distinct !DISubprogram(name: "ata_port_printk", scope: !3, file: !3, line: 6434, type: !7722, scopeLine: 6436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{null, !7724, !1450, !1450, null}
!7724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7725, size: 64)
!7725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!7726 = !DILocalVariable(name: "ap", arg: 1, scope: !7721, file: !3, line: 6434, type: !7724)
!7727 = !DILocation(line: 6434, column: 45, scope: !7721)
!7728 = !DILocalVariable(name: "level", arg: 2, scope: !7721, file: !3, line: 6434, type: !1450)
!7729 = !DILocation(line: 6434, column: 61, scope: !7721)
!7730 = !DILocalVariable(name: "fmt", arg: 3, scope: !7721, file: !3, line: 6435, type: !1450)
!7731 = !DILocation(line: 6435, column: 20, scope: !7721)
!7732 = !DILocalVariable(name: "vaf", scope: !7721, file: !3, line: 6437, type: !7733)
!7733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "va_format", file: !909, line: 90, size: 128, elements: !7734)
!7734 = !{!7735, !7736}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !7733, file: !909, line: 91, baseType: !1450, size: 64)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "va", scope: !7733, file: !909, line: 92, baseType: !7737, size: 64, offset: 64)
!7737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7738, size: 64)
!7738 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7739, line: 99, baseType: !7740)
!7739 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!7740 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !7739, line: 40, baseType: !7741)
!7741 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 6437, baseType: !7742)
!7742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7743, size: 192, elements: !1236)
!7743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 6437, size: 192, elements: !7744)
!7744 = !{!7745, !7746, !7747, !7748}
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7743, file: !3, line: 6437, baseType: !7, size: 32)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7743, file: !3, line: 6437, baseType: !7, size: 32, offset: 32)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7743, file: !3, line: 6437, baseType: !991, size: 64, offset: 64)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7743, file: !3, line: 6437, baseType: !991, size: 64, offset: 128)
!7749 = !DILocation(line: 6437, column: 19, scope: !7721)
!7750 = !DILocalVariable(name: "args", scope: !7721, file: !3, line: 6438, type: !7738)
!7751 = !DILocation(line: 6438, column: 10, scope: !7721)
!7752 = !DILocation(line: 6440, column: 2, scope: !7721)
!7753 = !DILocation(line: 6442, column: 12, scope: !7721)
!7754 = !DILocation(line: 6442, column: 6, scope: !7721)
!7755 = !DILocation(line: 6442, column: 10, scope: !7721)
!7756 = !DILocation(line: 6443, column: 6, scope: !7721)
!7757 = !DILocation(line: 6443, column: 9, scope: !7721)
!7758 = !DILocation(line: 6445, column: 25, scope: !7721)
!7759 = !DILocation(line: 6445, column: 32, scope: !7721)
!7760 = !DILocation(line: 6445, column: 36, scope: !7721)
!7761 = !DILocation(line: 6445, column: 2, scope: !7721)
!7762 = !DILocation(line: 6447, column: 2, scope: !7721)
!7763 = !DILocation(line: 6448, column: 1, scope: !7721)
!7764 = distinct !DISubprogram(name: "atapi_cmd_type", scope: !3, file: !3, line: 506, type: !7765, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7765 = !DISubroutineType(types: !7766)
!7766 = !{!223, !1216}
!7767 = !DILocalVariable(name: "opcode", arg: 1, scope: !7764, file: !3, line: 506, type: !1216)
!7768 = !DILocation(line: 506, column: 23, scope: !7764)
!7769 = !DILocation(line: 508, column: 10, scope: !7764)
!7770 = !DILocation(line: 508, column: 2, scope: !7764)
!7771 = !DILocation(line: 511, column: 3, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 508, column: 18)
!7773 = !DILocation(line: 516, column: 3, scope: !7772)
!7774 = !DILocation(line: 520, column: 3, scope: !7772)
!7775 = !DILocation(line: 524, column: 7, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 524, column: 7)
!7777 = !DILocation(line: 524, column: 7, scope: !7772)
!7778 = !DILocation(line: 525, column: 4, scope: !7776)
!7779 = !DILocation(line: 528, column: 3, scope: !7772)
!7780 = !DILocation(line: 530, column: 1, scope: !7764)
!7781 = distinct !DISubprogram(name: "ata_tf_read_block", scope: !3, file: !3, line: 619, type: !7782, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{!984, !6711, !6374}
!7784 = !DILocalVariable(name: "tf", arg: 1, scope: !7781, file: !3, line: 619, type: !6711)
!7785 = !DILocation(line: 619, column: 50, scope: !7781)
!7786 = !DILocalVariable(name: "dev", arg: 2, scope: !7781, file: !3, line: 619, type: !6374)
!7787 = !DILocation(line: 619, column: 73, scope: !7781)
!7788 = !DILocalVariable(name: "block", scope: !7781, file: !3, line: 621, type: !984)
!7789 = !DILocation(line: 621, column: 6, scope: !7781)
!7790 = !DILocation(line: 623, column: 6, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 623, column: 6)
!7792 = !DILocation(line: 623, column: 10, scope: !7791)
!7793 = !DILocation(line: 623, column: 16, scope: !7791)
!7794 = !DILocation(line: 623, column: 6, scope: !7781)
!7795 = !DILocation(line: 624, column: 7, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 624, column: 7)
!7797 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 623, column: 33)
!7798 = !DILocation(line: 624, column: 11, scope: !7796)
!7799 = !DILocation(line: 624, column: 17, scope: !7796)
!7800 = !DILocation(line: 624, column: 7, scope: !7797)
!7801 = !DILocation(line: 625, column: 18, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 624, column: 36)
!7803 = !DILocation(line: 625, column: 22, scope: !7802)
!7804 = !DILocation(line: 625, column: 13, scope: !7802)
!7805 = !DILocation(line: 625, column: 31, scope: !7802)
!7806 = !DILocation(line: 625, column: 10, scope: !7802)
!7807 = !DILocation(line: 626, column: 18, scope: !7802)
!7808 = !DILocation(line: 626, column: 22, scope: !7802)
!7809 = !DILocation(line: 626, column: 13, scope: !7802)
!7810 = !DILocation(line: 626, column: 31, scope: !7802)
!7811 = !DILocation(line: 626, column: 10, scope: !7802)
!7812 = !DILocation(line: 627, column: 18, scope: !7802)
!7813 = !DILocation(line: 627, column: 22, scope: !7802)
!7814 = !DILocation(line: 627, column: 13, scope: !7802)
!7815 = !DILocation(line: 627, column: 31, scope: !7802)
!7816 = !DILocation(line: 627, column: 10, scope: !7802)
!7817 = !DILocation(line: 628, column: 3, scope: !7802)
!7818 = !DILocation(line: 629, column: 14, scope: !7796)
!7819 = !DILocation(line: 629, column: 18, scope: !7796)
!7820 = !DILocation(line: 629, column: 25, scope: !7796)
!7821 = !DILocation(line: 629, column: 32, scope: !7796)
!7822 = !DILocation(line: 629, column: 13, scope: !7796)
!7823 = !DILocation(line: 629, column: 10, scope: !7796)
!7824 = !DILocation(line: 631, column: 12, scope: !7797)
!7825 = !DILocation(line: 631, column: 16, scope: !7797)
!7826 = !DILocation(line: 631, column: 21, scope: !7797)
!7827 = !DILocation(line: 631, column: 9, scope: !7797)
!7828 = !DILocation(line: 632, column: 12, scope: !7797)
!7829 = !DILocation(line: 632, column: 16, scope: !7797)
!7830 = !DILocation(line: 632, column: 21, scope: !7797)
!7831 = !DILocation(line: 632, column: 9, scope: !7797)
!7832 = !DILocation(line: 633, column: 12, scope: !7797)
!7833 = !DILocation(line: 633, column: 16, scope: !7797)
!7834 = !DILocation(line: 633, column: 9, scope: !7797)
!7835 = !DILocation(line: 634, column: 2, scope: !7797)
!7836 = !DILocalVariable(name: "cyl", scope: !7837, file: !3, line: 635, type: !989)
!7837 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 634, column: 9)
!7838 = !DILocation(line: 635, column: 7, scope: !7837)
!7839 = !DILocalVariable(name: "head", scope: !7837, file: !3, line: 635, type: !989)
!7840 = !DILocation(line: 635, column: 12, scope: !7837)
!7841 = !DILocalVariable(name: "sect", scope: !7837, file: !3, line: 635, type: !989)
!7842 = !DILocation(line: 635, column: 18, scope: !7837)
!7843 = !DILocation(line: 637, column: 9, scope: !7837)
!7844 = !DILocation(line: 637, column: 13, scope: !7837)
!7845 = !DILocation(line: 637, column: 21, scope: !7837)
!7846 = !DILocation(line: 637, column: 25, scope: !7837)
!7847 = !DILocation(line: 637, column: 30, scope: !7837)
!7848 = !DILocation(line: 637, column: 18, scope: !7837)
!7849 = !DILocation(line: 637, column: 7, scope: !7837)
!7850 = !DILocation(line: 638, column: 10, scope: !7837)
!7851 = !DILocation(line: 638, column: 14, scope: !7837)
!7852 = !DILocation(line: 638, column: 21, scope: !7837)
!7853 = !DILocation(line: 638, column: 8, scope: !7837)
!7854 = !DILocation(line: 639, column: 10, scope: !7837)
!7855 = !DILocation(line: 639, column: 14, scope: !7837)
!7856 = !DILocation(line: 639, column: 8, scope: !7837)
!7857 = !DILocation(line: 641, column: 8, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 641, column: 7)
!7859 = !DILocation(line: 641, column: 7, scope: !7837)
!7860 = !DILocation(line: 642, column: 4, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 641, column: 14)
!7862 = !DILocation(line: 644, column: 4, scope: !7861)
!7863 = !DILocation(line: 647, column: 12, scope: !7837)
!7864 = !DILocation(line: 647, column: 18, scope: !7837)
!7865 = !DILocation(line: 647, column: 23, scope: !7837)
!7866 = !DILocation(line: 647, column: 16, scope: !7837)
!7867 = !DILocation(line: 647, column: 31, scope: !7837)
!7868 = !DILocation(line: 647, column: 29, scope: !7837)
!7869 = !DILocation(line: 647, column: 39, scope: !7837)
!7870 = !DILocation(line: 647, column: 44, scope: !7837)
!7871 = !DILocation(line: 647, column: 37, scope: !7837)
!7872 = !DILocation(line: 647, column: 54, scope: !7837)
!7873 = !DILocation(line: 647, column: 52, scope: !7837)
!7874 = !DILocation(line: 647, column: 59, scope: !7837)
!7875 = !DILocation(line: 647, column: 11, scope: !7837)
!7876 = !DILocation(line: 647, column: 9, scope: !7837)
!7877 = !DILocation(line: 650, column: 9, scope: !7781)
!7878 = !DILocation(line: 650, column: 2, scope: !7781)
!7879 = !DILocation(line: 651, column: 1, scope: !7781)
!7880 = distinct !DISubprogram(name: "ata_dev_printk", scope: !3, file: !3, line: 6473, type: !7881, scopeLine: 6475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{null, !7632, !1450, !1450, null}
!7883 = !DILocalVariable(name: "dev", arg: 1, scope: !7880, file: !3, line: 6473, type: !7632)
!7884 = !DILocation(line: 6473, column: 46, scope: !7880)
!7885 = !DILocalVariable(name: "level", arg: 2, scope: !7880, file: !3, line: 6473, type: !1450)
!7886 = !DILocation(line: 6473, column: 63, scope: !7880)
!7887 = !DILocalVariable(name: "fmt", arg: 3, scope: !7880, file: !3, line: 6474, type: !1450)
!7888 = !DILocation(line: 6474, column: 19, scope: !7880)
!7889 = !DILocalVariable(name: "vaf", scope: !7880, file: !3, line: 6476, type: !7733)
!7890 = !DILocation(line: 6476, column: 19, scope: !7880)
!7891 = !DILocalVariable(name: "args", scope: !7880, file: !3, line: 6477, type: !7738)
!7892 = !DILocation(line: 6477, column: 10, scope: !7880)
!7893 = !DILocation(line: 6479, column: 2, scope: !7880)
!7894 = !DILocation(line: 6481, column: 12, scope: !7880)
!7895 = !DILocation(line: 6481, column: 6, scope: !7880)
!7896 = !DILocation(line: 6481, column: 10, scope: !7880)
!7897 = !DILocation(line: 6482, column: 6, scope: !7880)
!7898 = !DILocation(line: 6482, column: 9, scope: !7880)
!7899 = !DILocation(line: 6485, column: 9, scope: !7880)
!7900 = !DILocation(line: 6485, column: 16, scope: !7880)
!7901 = !DILocation(line: 6485, column: 21, scope: !7880)
!7902 = !DILocation(line: 6485, column: 27, scope: !7880)
!7903 = !DILocation(line: 6485, column: 31, scope: !7880)
!7904 = !DILocation(line: 6485, column: 41, scope: !7880)
!7905 = !DILocation(line: 6485, column: 46, scope: !7880)
!7906 = !DILocation(line: 6485, column: 52, scope: !7880)
!7907 = !DILocation(line: 6485, column: 58, scope: !7880)
!7908 = !DILocation(line: 6485, column: 63, scope: !7880)
!7909 = !DILocation(line: 6485, column: 56, scope: !7880)
!7910 = !DILocation(line: 6484, column: 2, scope: !7880)
!7911 = !DILocation(line: 6488, column: 2, scope: !7880)
!7912 = !DILocation(line: 6489, column: 1, scope: !7880)
!7913 = distinct !DISubprogram(name: "ata_build_rw_tf", scope: !3, file: !3, line: 674, type: !7914, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{!223, !6614, !6374, !984, !989, !7, !7, !223}
!7916 = !DILocalVariable(name: "tf", arg: 1, scope: !7913, file: !3, line: 674, type: !6614)
!7917 = !DILocation(line: 674, column: 42, scope: !7913)
!7918 = !DILocalVariable(name: "dev", arg: 2, scope: !7913, file: !3, line: 674, type: !6374)
!7919 = !DILocation(line: 674, column: 65, scope: !7913)
!7920 = !DILocalVariable(name: "block", arg: 3, scope: !7913, file: !3, line: 675, type: !984)
!7921 = !DILocation(line: 675, column: 11, scope: !7913)
!7922 = !DILocalVariable(name: "n_block", arg: 4, scope: !7913, file: !3, line: 675, type: !989)
!7923 = !DILocation(line: 675, column: 22, scope: !7913)
!7924 = !DILocalVariable(name: "tf_flags", arg: 5, scope: !7913, file: !3, line: 675, type: !7)
!7925 = !DILocation(line: 675, column: 44, scope: !7913)
!7926 = !DILocalVariable(name: "tag", arg: 6, scope: !7913, file: !3, line: 676, type: !7)
!7927 = !DILocation(line: 676, column: 20, scope: !7913)
!7928 = !DILocalVariable(name: "class", arg: 7, scope: !7913, file: !3, line: 676, type: !223)
!7929 = !DILocation(line: 676, column: 29, scope: !7913)
!7930 = !DILocation(line: 678, column: 2, scope: !7913)
!7931 = !DILocation(line: 678, column: 6, scope: !7913)
!7932 = !DILocation(line: 678, column: 12, scope: !7913)
!7933 = !DILocation(line: 679, column: 15, scope: !7913)
!7934 = !DILocation(line: 679, column: 2, scope: !7913)
!7935 = !DILocation(line: 679, column: 6, scope: !7913)
!7936 = !DILocation(line: 679, column: 12, scope: !7913)
!7937 = !DILocation(line: 681, column: 22, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 681, column: 6)
!7939 = !DILocation(line: 681, column: 6, scope: !7938)
!7940 = !DILocation(line: 681, column: 27, scope: !7938)
!7941 = !DILocation(line: 681, column: 48, scope: !7938)
!7942 = !DILocation(line: 681, column: 31, scope: !7938)
!7943 = !DILocation(line: 681, column: 6, scope: !7913)
!7944 = !DILocation(line: 683, column: 18, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 683, column: 7)
!7946 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 681, column: 54)
!7947 = !DILocation(line: 683, column: 25, scope: !7945)
!7948 = !DILocation(line: 683, column: 8, scope: !7945)
!7949 = !DILocation(line: 683, column: 7, scope: !7946)
!7950 = !DILocation(line: 684, column: 4, scope: !7945)
!7951 = !DILocation(line: 686, column: 3, scope: !7946)
!7952 = !DILocation(line: 686, column: 7, scope: !7946)
!7953 = !DILocation(line: 686, column: 16, scope: !7946)
!7954 = !DILocation(line: 687, column: 3, scope: !7946)
!7955 = !DILocation(line: 687, column: 7, scope: !7946)
!7956 = !DILocation(line: 687, column: 13, scope: !7946)
!7957 = !DILocation(line: 689, column: 7, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 689, column: 7)
!7959 = !DILocation(line: 689, column: 11, scope: !7958)
!7960 = !DILocation(line: 689, column: 17, scope: !7958)
!7961 = !DILocation(line: 689, column: 7, scope: !7946)
!7962 = !DILocation(line: 690, column: 4, scope: !7958)
!7963 = !DILocation(line: 690, column: 8, scope: !7958)
!7964 = !DILocation(line: 690, column: 16, scope: !7958)
!7965 = !DILocation(line: 692, column: 4, scope: !7958)
!7966 = !DILocation(line: 692, column: 8, scope: !7958)
!7967 = !DILocation(line: 692, column: 16, scope: !7958)
!7968 = !DILocation(line: 694, column: 15, scope: !7946)
!7969 = !DILocation(line: 694, column: 19, scope: !7946)
!7970 = !DILocation(line: 694, column: 3, scope: !7946)
!7971 = !DILocation(line: 694, column: 7, scope: !7946)
!7972 = !DILocation(line: 694, column: 13, scope: !7946)
!7973 = !DILocation(line: 695, column: 22, scope: !7946)
!7974 = !DILocation(line: 695, column: 30, scope: !7946)
!7975 = !DILocation(line: 695, column: 36, scope: !7946)
!7976 = !DILocation(line: 695, column: 21, scope: !7946)
!7977 = !DILocation(line: 695, column: 3, scope: !7946)
!7978 = !DILocation(line: 695, column: 7, scope: !7946)
!7979 = !DILocation(line: 695, column: 19, scope: !7946)
!7980 = !DILocation(line: 696, column: 17, scope: !7946)
!7981 = !DILocation(line: 696, column: 25, scope: !7946)
!7982 = !DILocation(line: 696, column: 3, scope: !7946)
!7983 = !DILocation(line: 696, column: 7, scope: !7946)
!7984 = !DILocation(line: 696, column: 15, scope: !7946)
!7985 = !DILocation(line: 698, column: 19, scope: !7946)
!7986 = !DILocation(line: 698, column: 25, scope: !7946)
!7987 = !DILocation(line: 698, column: 32, scope: !7946)
!7988 = !DILocation(line: 698, column: 18, scope: !7946)
!7989 = !DILocation(line: 698, column: 3, scope: !7946)
!7990 = !DILocation(line: 698, column: 7, scope: !7946)
!7991 = !DILocation(line: 698, column: 16, scope: !7946)
!7992 = !DILocation(line: 699, column: 19, scope: !7946)
!7993 = !DILocation(line: 699, column: 25, scope: !7946)
!7994 = !DILocation(line: 699, column: 32, scope: !7946)
!7995 = !DILocation(line: 699, column: 18, scope: !7946)
!7996 = !DILocation(line: 699, column: 3, scope: !7946)
!7997 = !DILocation(line: 699, column: 7, scope: !7946)
!7998 = !DILocation(line: 699, column: 16, scope: !7946)
!7999 = !DILocation(line: 700, column: 19, scope: !7946)
!8000 = !DILocation(line: 700, column: 25, scope: !7946)
!8001 = !DILocation(line: 700, column: 32, scope: !7946)
!8002 = !DILocation(line: 700, column: 18, scope: !7946)
!8003 = !DILocation(line: 700, column: 3, scope: !7946)
!8004 = !DILocation(line: 700, column: 7, scope: !7946)
!8005 = !DILocation(line: 700, column: 16, scope: !7946)
!8006 = !DILocation(line: 701, column: 15, scope: !7946)
!8007 = !DILocation(line: 701, column: 21, scope: !7946)
!8008 = !DILocation(line: 701, column: 28, scope: !7946)
!8009 = !DILocation(line: 701, column: 14, scope: !7946)
!8010 = !DILocation(line: 701, column: 3, scope: !7946)
!8011 = !DILocation(line: 701, column: 7, scope: !7946)
!8012 = !DILocation(line: 701, column: 12, scope: !7946)
!8013 = !DILocation(line: 702, column: 15, scope: !7946)
!8014 = !DILocation(line: 702, column: 21, scope: !7946)
!8015 = !DILocation(line: 702, column: 27, scope: !7946)
!8016 = !DILocation(line: 702, column: 14, scope: !7946)
!8017 = !DILocation(line: 702, column: 3, scope: !7946)
!8018 = !DILocation(line: 702, column: 7, scope: !7946)
!8019 = !DILocation(line: 702, column: 12, scope: !7946)
!8020 = !DILocation(line: 703, column: 14, scope: !7946)
!8021 = !DILocation(line: 703, column: 20, scope: !7946)
!8022 = !DILocation(line: 703, column: 3, scope: !7946)
!8023 = !DILocation(line: 703, column: 7, scope: !7946)
!8024 = !DILocation(line: 703, column: 12, scope: !7946)
!8025 = !DILocation(line: 705, column: 3, scope: !7946)
!8026 = !DILocation(line: 705, column: 7, scope: !7946)
!8027 = !DILocation(line: 705, column: 14, scope: !7946)
!8028 = !DILocation(line: 706, column: 7, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 706, column: 7)
!8030 = !DILocation(line: 706, column: 11, scope: !8029)
!8031 = !DILocation(line: 706, column: 17, scope: !8029)
!8032 = !DILocation(line: 706, column: 7, scope: !7946)
!8033 = !DILocation(line: 707, column: 4, scope: !8029)
!8034 = !DILocation(line: 707, column: 8, scope: !8029)
!8035 = !DILocation(line: 707, column: 15, scope: !8029)
!8036 = !DILocation(line: 709, column: 7, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 709, column: 7)
!8038 = !DILocation(line: 709, column: 12, scope: !8037)
!8039 = !DILocation(line: 709, column: 18, scope: !8037)
!8040 = !DILocation(line: 709, column: 7, scope: !7946)
!8041 = !DILocation(line: 710, column: 8, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 710, column: 8)
!8043 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 709, column: 40)
!8044 = !DILocation(line: 710, column: 14, scope: !8042)
!8045 = !DILocation(line: 710, column: 8, scope: !8043)
!8046 = !DILocation(line: 711, column: 5, scope: !8042)
!8047 = !DILocation(line: 711, column: 9, scope: !8042)
!8048 = !DILocation(line: 711, column: 19, scope: !8042)
!8049 = !DILocation(line: 713, column: 3, scope: !8043)
!8050 = !DILocation(line: 714, column: 2, scope: !7946)
!8051 = !DILocation(line: 714, column: 13, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 714, column: 13)
!8053 = !DILocation(line: 714, column: 18, scope: !8052)
!8054 = !DILocation(line: 714, column: 24, scope: !8052)
!8055 = !DILocation(line: 714, column: 13, scope: !7938)
!8056 = !DILocation(line: 715, column: 3, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 714, column: 41)
!8058 = !DILocation(line: 715, column: 7, scope: !8057)
!8059 = !DILocation(line: 715, column: 13, scope: !8057)
!8060 = !DILocation(line: 717, column: 17, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 717, column: 7)
!8062 = !DILocation(line: 717, column: 24, scope: !8061)
!8063 = !DILocation(line: 717, column: 7, scope: !8061)
!8064 = !DILocation(line: 717, column: 7, scope: !8057)
!8065 = !DILocation(line: 719, column: 19, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 717, column: 34)
!8067 = !DILocation(line: 719, column: 25, scope: !8066)
!8068 = !DILocation(line: 719, column: 32, scope: !8066)
!8069 = !DILocation(line: 719, column: 4, scope: !8066)
!8070 = !DILocation(line: 719, column: 8, scope: !8066)
!8071 = !DILocation(line: 719, column: 15, scope: !8066)
!8072 = !DILocation(line: 720, column: 3, scope: !8066)
!8073 = !DILocation(line: 720, column: 24, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 720, column: 14)
!8075 = !DILocation(line: 720, column: 31, scope: !8074)
!8076 = !DILocation(line: 720, column: 14, scope: !8074)
!8077 = !DILocation(line: 720, column: 14, scope: !8061)
!8078 = !DILocation(line: 721, column: 10, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 721, column: 8)
!8080 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 720, column: 41)
!8081 = !DILocation(line: 721, column: 15, scope: !8079)
!8082 = !DILocation(line: 721, column: 21, scope: !8079)
!8083 = !DILocation(line: 721, column: 8, scope: !8080)
!8084 = !DILocation(line: 722, column: 5, scope: !8079)
!8085 = !DILocation(line: 725, column: 4, scope: !8080)
!8086 = !DILocation(line: 725, column: 8, scope: !8080)
!8087 = !DILocation(line: 725, column: 14, scope: !8080)
!8088 = !DILocation(line: 727, column: 21, scope: !8080)
!8089 = !DILocation(line: 727, column: 29, scope: !8080)
!8090 = !DILocation(line: 727, column: 35, scope: !8080)
!8091 = !DILocation(line: 727, column: 20, scope: !8080)
!8092 = !DILocation(line: 727, column: 4, scope: !8080)
!8093 = !DILocation(line: 727, column: 8, scope: !8080)
!8094 = !DILocation(line: 727, column: 18, scope: !8080)
!8095 = !DILocation(line: 729, column: 20, scope: !8080)
!8096 = !DILocation(line: 729, column: 26, scope: !8080)
!8097 = !DILocation(line: 729, column: 33, scope: !8080)
!8098 = !DILocation(line: 729, column: 19, scope: !8080)
!8099 = !DILocation(line: 729, column: 4, scope: !8080)
!8100 = !DILocation(line: 729, column: 8, scope: !8080)
!8101 = !DILocation(line: 729, column: 17, scope: !8080)
!8102 = !DILocation(line: 730, column: 20, scope: !8080)
!8103 = !DILocation(line: 730, column: 26, scope: !8080)
!8104 = !DILocation(line: 730, column: 33, scope: !8080)
!8105 = !DILocation(line: 730, column: 19, scope: !8080)
!8106 = !DILocation(line: 730, column: 4, scope: !8080)
!8107 = !DILocation(line: 730, column: 8, scope: !8080)
!8108 = !DILocation(line: 730, column: 17, scope: !8080)
!8109 = !DILocation(line: 731, column: 20, scope: !8080)
!8110 = !DILocation(line: 731, column: 26, scope: !8080)
!8111 = !DILocation(line: 731, column: 33, scope: !8080)
!8112 = !DILocation(line: 731, column: 19, scope: !8080)
!8113 = !DILocation(line: 731, column: 4, scope: !8080)
!8114 = !DILocation(line: 731, column: 8, scope: !8080)
!8115 = !DILocation(line: 731, column: 17, scope: !8080)
!8116 = !DILocation(line: 732, column: 3, scope: !8080)
!8117 = !DILocation(line: 734, column: 4, scope: !8074)
!8118 = !DILocation(line: 736, column: 7, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 736, column: 7)
!8120 = !DILocation(line: 736, column: 7, scope: !8057)
!8121 = !DILocation(line: 737, column: 4, scope: !8119)
!8122 = !DILocation(line: 739, column: 15, scope: !8057)
!8123 = !DILocation(line: 739, column: 23, scope: !8057)
!8124 = !DILocation(line: 739, column: 3, scope: !8057)
!8125 = !DILocation(line: 739, column: 7, scope: !8057)
!8126 = !DILocation(line: 739, column: 13, scope: !8057)
!8127 = !DILocation(line: 741, column: 15, scope: !8057)
!8128 = !DILocation(line: 741, column: 21, scope: !8057)
!8129 = !DILocation(line: 741, column: 28, scope: !8057)
!8130 = !DILocation(line: 741, column: 14, scope: !8057)
!8131 = !DILocation(line: 741, column: 3, scope: !8057)
!8132 = !DILocation(line: 741, column: 7, scope: !8057)
!8133 = !DILocation(line: 741, column: 12, scope: !8057)
!8134 = !DILocation(line: 742, column: 15, scope: !8057)
!8135 = !DILocation(line: 742, column: 21, scope: !8057)
!8136 = !DILocation(line: 742, column: 27, scope: !8057)
!8137 = !DILocation(line: 742, column: 14, scope: !8057)
!8138 = !DILocation(line: 742, column: 3, scope: !8057)
!8139 = !DILocation(line: 742, column: 7, scope: !8057)
!8140 = !DILocation(line: 742, column: 12, scope: !8057)
!8141 = !DILocation(line: 743, column: 14, scope: !8057)
!8142 = !DILocation(line: 743, column: 20, scope: !8057)
!8143 = !DILocation(line: 743, column: 3, scope: !8057)
!8144 = !DILocation(line: 743, column: 7, scope: !8057)
!8145 = !DILocation(line: 743, column: 12, scope: !8057)
!8146 = !DILocation(line: 745, column: 3, scope: !8057)
!8147 = !DILocation(line: 745, column: 7, scope: !8057)
!8148 = !DILocation(line: 745, column: 14, scope: !8057)
!8149 = !DILocation(line: 746, column: 2, scope: !8057)
!8150 = !DILocalVariable(name: "sect", scope: !8151, file: !3, line: 748, type: !989)
!8151 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 746, column: 9)
!8152 = !DILocation(line: 748, column: 7, scope: !8151)
!8153 = !DILocalVariable(name: "head", scope: !8151, file: !3, line: 748, type: !989)
!8154 = !DILocation(line: 748, column: 13, scope: !8151)
!8155 = !DILocalVariable(name: "cyl", scope: !8151, file: !3, line: 748, type: !989)
!8156 = !DILocation(line: 748, column: 19, scope: !8151)
!8157 = !DILocalVariable(name: "track", scope: !8151, file: !3, line: 748, type: !989)
!8158 = !DILocation(line: 748, column: 24, scope: !8151)
!8159 = !DILocation(line: 751, column: 18, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 751, column: 7)
!8161 = !DILocation(line: 751, column: 25, scope: !8160)
!8162 = !DILocation(line: 751, column: 8, scope: !8160)
!8163 = !DILocation(line: 751, column: 7, scope: !8151)
!8164 = !DILocation(line: 752, column: 4, scope: !8160)
!8165 = !DILocation(line: 754, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 754, column: 7)
!8167 = !DILocation(line: 754, column: 7, scope: !8151)
!8168 = !DILocation(line: 755, column: 4, scope: !8166)
!8169 = !DILocation(line: 758, column: 16, scope: !8151)
!8170 = !DILocation(line: 758, column: 11, scope: !8151)
!8171 = !DILocation(line: 758, column: 24, scope: !8151)
!8172 = !DILocation(line: 758, column: 29, scope: !8151)
!8173 = !DILocation(line: 758, column: 22, scope: !8151)
!8174 = !DILocation(line: 758, column: 9, scope: !8151)
!8175 = !DILocation(line: 759, column: 11, scope: !8151)
!8176 = !DILocation(line: 759, column: 19, scope: !8151)
!8177 = !DILocation(line: 759, column: 24, scope: !8151)
!8178 = !DILocation(line: 759, column: 17, scope: !8151)
!8179 = !DILocation(line: 759, column: 9, scope: !8151)
!8180 = !DILocation(line: 760, column: 11, scope: !8151)
!8181 = !DILocation(line: 760, column: 19, scope: !8151)
!8182 = !DILocation(line: 760, column: 24, scope: !8151)
!8183 = !DILocation(line: 760, column: 17, scope: !8151)
!8184 = !DILocation(line: 760, column: 9, scope: !8151)
!8185 = !DILocation(line: 761, column: 16, scope: !8151)
!8186 = !DILocation(line: 761, column: 11, scope: !8151)
!8187 = !DILocation(line: 761, column: 24, scope: !8151)
!8188 = !DILocation(line: 761, column: 29, scope: !8151)
!8189 = !DILocation(line: 761, column: 22, scope: !8151)
!8190 = !DILocation(line: 761, column: 37, scope: !8151)
!8191 = !DILocation(line: 761, column: 9, scope: !8151)
!8192 = !DILocation(line: 770, column: 8, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 770, column: 7)
!8194 = !DILocation(line: 770, column: 12, scope: !8193)
!8195 = !DILocation(line: 770, column: 19, scope: !8193)
!8196 = !DILocation(line: 770, column: 23, scope: !8193)
!8197 = !DILocation(line: 770, column: 28, scope: !8193)
!8198 = !DILocation(line: 770, column: 34, scope: !8193)
!8199 = !DILocation(line: 770, column: 38, scope: !8193)
!8200 = !DILocation(line: 770, column: 43, scope: !8193)
!8201 = !DILocation(line: 770, column: 49, scope: !8193)
!8202 = !DILocation(line: 770, column: 54, scope: !8193)
!8203 = !DILocation(line: 770, column: 7, scope: !8151)
!8204 = !DILocation(line: 771, column: 4, scope: !8193)
!8205 = !DILocation(line: 773, column: 15, scope: !8151)
!8206 = !DILocation(line: 773, column: 23, scope: !8151)
!8207 = !DILocation(line: 773, column: 3, scope: !8151)
!8208 = !DILocation(line: 773, column: 7, scope: !8151)
!8209 = !DILocation(line: 773, column: 13, scope: !8151)
!8210 = !DILocation(line: 774, column: 14, scope: !8151)
!8211 = !DILocation(line: 774, column: 3, scope: !8151)
!8212 = !DILocation(line: 774, column: 7, scope: !8151)
!8213 = !DILocation(line: 774, column: 12, scope: !8151)
!8214 = !DILocation(line: 775, column: 14, scope: !8151)
!8215 = !DILocation(line: 775, column: 3, scope: !8151)
!8216 = !DILocation(line: 775, column: 7, scope: !8151)
!8217 = !DILocation(line: 775, column: 12, scope: !8151)
!8218 = !DILocation(line: 776, column: 14, scope: !8151)
!8219 = !DILocation(line: 776, column: 18, scope: !8151)
!8220 = !DILocation(line: 776, column: 3, scope: !8151)
!8221 = !DILocation(line: 776, column: 7, scope: !8151)
!8222 = !DILocation(line: 776, column: 12, scope: !8151)
!8223 = !DILocation(line: 777, column: 17, scope: !8151)
!8224 = !DILocation(line: 777, column: 3, scope: !8151)
!8225 = !DILocation(line: 777, column: 7, scope: !8151)
!8226 = !DILocation(line: 777, column: 14, scope: !8151)
!8227 = !DILocation(line: 780, column: 2, scope: !7913)
!8228 = !DILocation(line: 781, column: 1, scope: !7913)
!8229 = distinct !DISubprogram(name: "ata_ncq_enabled", scope: !183, file: !183, line: 1692, type: !8230, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{!223, !6374}
!8232 = !DILocalVariable(name: "dev", arg: 1, scope: !8229, file: !183, line: 1692, type: !6374)
!8233 = !DILocation(line: 1692, column: 54, scope: !8229)
!8234 = !DILocation(line: 1696, column: 10, scope: !8229)
!8235 = !DILocation(line: 1696, column: 15, scope: !8229)
!8236 = !DILocation(line: 1696, column: 21, scope: !8229)
!8237 = !DILocation(line: 1697, column: 26, scope: !8229)
!8238 = !DILocation(line: 1696, column: 2, scope: !8229)
!8239 = distinct !DISubprogram(name: "ata_tag_internal", scope: !183, file: !183, line: 1540, type: !8240, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{!1495, !7}
!8242 = !DILocalVariable(name: "tag", arg: 1, scope: !8239, file: !183, line: 1540, type: !7)
!8243 = !DILocation(line: 1540, column: 50, scope: !8239)
!8244 = !DILocation(line: 1542, column: 9, scope: !8239)
!8245 = !DILocation(line: 1542, column: 13, scope: !8239)
!8246 = !DILocation(line: 1542, column: 2, scope: !8239)
!8247 = distinct !DISubprogram(name: "lba_48_ok", scope: !222, file: !222, line: 1129, type: !8248, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{!1495, !984, !989}
!8250 = !DILocalVariable(name: "block", arg: 1, scope: !8247, file: !222, line: 1129, type: !984)
!8251 = !DILocation(line: 1129, column: 34, scope: !8247)
!8252 = !DILocalVariable(name: "n_block", arg: 2, scope: !8247, file: !222, line: 1129, type: !989)
!8253 = !DILocation(line: 1129, column: 45, scope: !8247)
!8254 = !DILocation(line: 1132, column: 11, scope: !8247)
!8255 = !DILocation(line: 1132, column: 19, scope: !8247)
!8256 = !DILocation(line: 1132, column: 17, scope: !8247)
!8257 = !DILocation(line: 1132, column: 27, scope: !8247)
!8258 = !DILocation(line: 1132, column: 32, scope: !8247)
!8259 = !DILocation(line: 1132, column: 50, scope: !8247)
!8260 = !DILocation(line: 1132, column: 54, scope: !8247)
!8261 = !DILocation(line: 1132, column: 62, scope: !8247)
!8262 = !DILocation(line: 0, scope: !8247)
!8263 = !DILocation(line: 1132, column: 2, scope: !8247)
!8264 = distinct !DISubprogram(name: "lba_28_ok", scope: !222, file: !222, line: 1123, type: !8248, scopeLine: 1124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8265 = !DILocalVariable(name: "block", arg: 1, scope: !8264, file: !222, line: 1123, type: !984)
!8266 = !DILocation(line: 1123, column: 34, scope: !8264)
!8267 = !DILocalVariable(name: "n_block", arg: 2, scope: !8264, file: !222, line: 1123, type: !989)
!8268 = !DILocation(line: 1123, column: 45, scope: !8264)
!8269 = !DILocation(line: 1126, column: 11, scope: !8264)
!8270 = !DILocation(line: 1126, column: 19, scope: !8264)
!8271 = !DILocation(line: 1126, column: 17, scope: !8264)
!8272 = !DILocation(line: 1126, column: 28, scope: !8264)
!8273 = !DILocation(line: 1126, column: 47, scope: !8264)
!8274 = !DILocation(line: 1126, column: 51, scope: !8264)
!8275 = !DILocation(line: 1126, column: 59, scope: !8264)
!8276 = !DILocation(line: 0, scope: !8264)
!8277 = !DILocation(line: 1126, column: 2, scope: !8264)
!8278 = distinct !DISubprogram(name: "ata_rwcmd_protocol", scope: !3, file: !3, line: 574, type: !8279, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!223, !6614, !6374}
!8281 = !DILocalVariable(name: "tf", arg: 1, scope: !8278, file: !3, line: 574, type: !6614)
!8282 = !DILocation(line: 574, column: 52, scope: !8278)
!8283 = !DILocalVariable(name: "dev", arg: 2, scope: !8278, file: !3, line: 574, type: !6374)
!8284 = !DILocation(line: 574, column: 75, scope: !8278)
!8285 = !DILocalVariable(name: "cmd", scope: !8278, file: !3, line: 576, type: !1216)
!8286 = !DILocation(line: 576, column: 5, scope: !8278)
!8287 = !DILocalVariable(name: "index", scope: !8278, file: !3, line: 578, type: !223)
!8288 = !DILocation(line: 578, column: 6, scope: !8278)
!8289 = !DILocalVariable(name: "fua", scope: !8278, file: !3, line: 578, type: !223)
!8290 = !DILocation(line: 578, column: 13, scope: !8278)
!8291 = !DILocalVariable(name: "lba48", scope: !8278, file: !3, line: 578, type: !223)
!8292 = !DILocation(line: 578, column: 18, scope: !8278)
!8293 = !DILocalVariable(name: "write", scope: !8278, file: !3, line: 578, type: !223)
!8294 = !DILocation(line: 578, column: 25, scope: !8278)
!8295 = !DILocation(line: 580, column: 9, scope: !8278)
!8296 = !DILocation(line: 580, column: 13, scope: !8278)
!8297 = !DILocation(line: 580, column: 19, scope: !8278)
!8298 = !DILocation(line: 580, column: 8, scope: !8278)
!8299 = !DILocation(line: 580, column: 6, scope: !8278)
!8300 = !DILocation(line: 581, column: 11, scope: !8278)
!8301 = !DILocation(line: 581, column: 15, scope: !8278)
!8302 = !DILocation(line: 581, column: 21, scope: !8278)
!8303 = !DILocation(line: 581, column: 10, scope: !8278)
!8304 = !DILocation(line: 581, column: 8, scope: !8278)
!8305 = !DILocation(line: 582, column: 11, scope: !8278)
!8306 = !DILocation(line: 582, column: 15, scope: !8278)
!8307 = !DILocation(line: 582, column: 21, scope: !8278)
!8308 = !DILocation(line: 582, column: 10, scope: !8278)
!8309 = !DILocation(line: 582, column: 8, scope: !8278)
!8310 = !DILocation(line: 584, column: 6, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 584, column: 6)
!8312 = !DILocation(line: 584, column: 11, scope: !8311)
!8313 = !DILocation(line: 584, column: 17, scope: !8311)
!8314 = !DILocation(line: 584, column: 6, scope: !8278)
!8315 = !DILocation(line: 585, column: 3, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 584, column: 34)
!8317 = !DILocation(line: 585, column: 7, scope: !8316)
!8318 = !DILocation(line: 585, column: 16, scope: !8316)
!8319 = !DILocation(line: 586, column: 11, scope: !8316)
!8320 = !DILocation(line: 586, column: 16, scope: !8316)
!8321 = !DILocation(line: 586, column: 9, scope: !8316)
!8322 = !DILocation(line: 587, column: 2, scope: !8316)
!8323 = !DILocation(line: 587, column: 13, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 587, column: 13)
!8325 = !DILocation(line: 587, column: 19, scope: !8324)
!8326 = !DILocation(line: 587, column: 23, scope: !8324)
!8327 = !DILocation(line: 587, column: 28, scope: !8324)
!8328 = !DILocation(line: 587, column: 34, scope: !8324)
!8329 = !DILocation(line: 587, column: 38, scope: !8324)
!8330 = !DILocation(line: 587, column: 44, scope: !8324)
!8331 = !DILocation(line: 587, column: 13, scope: !8311)
!8332 = !DILocation(line: 589, column: 3, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 587, column: 67)
!8334 = !DILocation(line: 589, column: 7, scope: !8333)
!8335 = !DILocation(line: 589, column: 16, scope: !8333)
!8336 = !DILocation(line: 590, column: 11, scope: !8333)
!8337 = !DILocation(line: 590, column: 16, scope: !8333)
!8338 = !DILocation(line: 590, column: 9, scope: !8333)
!8339 = !DILocation(line: 591, column: 2, scope: !8333)
!8340 = !DILocation(line: 592, column: 3, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 591, column: 9)
!8342 = !DILocation(line: 592, column: 7, scope: !8341)
!8343 = !DILocation(line: 592, column: 16, scope: !8341)
!8344 = !DILocation(line: 593, column: 9, scope: !8341)
!8345 = !DILocation(line: 596, column: 20, scope: !8278)
!8346 = !DILocation(line: 596, column: 28, scope: !8278)
!8347 = !DILocation(line: 596, column: 26, scope: !8278)
!8348 = !DILocation(line: 596, column: 34, scope: !8278)
!8349 = !DILocation(line: 596, column: 32, scope: !8278)
!8350 = !DILocation(line: 596, column: 42, scope: !8278)
!8351 = !DILocation(line: 596, column: 40, scope: !8278)
!8352 = !DILocation(line: 596, column: 8, scope: !8278)
!8353 = !DILocation(line: 596, column: 6, scope: !8278)
!8354 = !DILocation(line: 597, column: 6, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 597, column: 6)
!8356 = !DILocation(line: 597, column: 6, scope: !8278)
!8357 = !DILocation(line: 598, column: 17, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 597, column: 11)
!8359 = !DILocation(line: 598, column: 3, scope: !8358)
!8360 = !DILocation(line: 598, column: 7, scope: !8358)
!8361 = !DILocation(line: 598, column: 15, scope: !8358)
!8362 = !DILocation(line: 599, column: 3, scope: !8358)
!8363 = !DILocation(line: 601, column: 2, scope: !8278)
!8364 = !DILocation(line: 602, column: 1, scope: !8278)
!8365 = distinct !DISubprogram(name: "ata_pack_xfermask", scope: !3, file: !3, line: 798, type: !8366, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8366 = !DISubroutineType(types: !8367)
!8367 = !{!994, !994, !994, !994}
!8368 = !DILocalVariable(name: "pio_mask", arg: 1, scope: !8365, file: !3, line: 798, type: !994)
!8369 = !DILocation(line: 798, column: 47, scope: !8365)
!8370 = !DILocalVariable(name: "mwdma_mask", arg: 2, scope: !8365, file: !3, line: 799, type: !994)
!8371 = !DILocation(line: 799, column: 19, scope: !8365)
!8372 = !DILocalVariable(name: "udma_mask", arg: 3, scope: !8365, file: !3, line: 800, type: !994)
!8373 = !DILocation(line: 800, column: 19, scope: !8365)
!8374 = !DILocation(line: 802, column: 11, scope: !8365)
!8375 = !DILocation(line: 802, column: 20, scope: !8365)
!8376 = !DILocation(line: 802, column: 38, scope: !8365)
!8377 = !DILocation(line: 803, column: 5, scope: !8365)
!8378 = !DILocation(line: 803, column: 16, scope: !8365)
!8379 = !DILocation(line: 803, column: 36, scope: !8365)
!8380 = !DILocation(line: 802, column: 54, scope: !8365)
!8381 = !DILocation(line: 804, column: 5, scope: !8365)
!8382 = !DILocation(line: 804, column: 15, scope: !8365)
!8383 = !DILocation(line: 804, column: 34, scope: !8365)
!8384 = !DILocation(line: 803, column: 54, scope: !8365)
!8385 = !DILocation(line: 802, column: 2, scope: !8365)
!8386 = distinct !DISubprogram(name: "ata_unpack_xfermask", scope: !3, file: !3, line: 818, type: !8387, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{null, !994, !3393, !3393, !3393}
!8389 = !DILocalVariable(name: "xfer_mask", arg: 1, scope: !8386, file: !3, line: 818, type: !994)
!8390 = !DILocation(line: 818, column: 40, scope: !8386)
!8391 = !DILocalVariable(name: "pio_mask", arg: 2, scope: !8386, file: !3, line: 818, type: !3393)
!8392 = !DILocation(line: 818, column: 66, scope: !8386)
!8393 = !DILocalVariable(name: "mwdma_mask", arg: 3, scope: !8386, file: !3, line: 819, type: !3393)
!8394 = !DILocation(line: 819, column: 20, scope: !8386)
!8395 = !DILocalVariable(name: "udma_mask", arg: 4, scope: !8386, file: !3, line: 819, type: !3393)
!8396 = !DILocation(line: 819, column: 47, scope: !8386)
!8397 = !DILocation(line: 821, column: 6, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 821, column: 6)
!8399 = !DILocation(line: 821, column: 6, scope: !8386)
!8400 = !DILocation(line: 822, column: 16, scope: !8398)
!8401 = !DILocation(line: 822, column: 26, scope: !8398)
!8402 = !DILocation(line: 822, column: 42, scope: !8398)
!8403 = !DILocation(line: 822, column: 4, scope: !8398)
!8404 = !DILocation(line: 822, column: 13, scope: !8398)
!8405 = !DILocation(line: 822, column: 3, scope: !8398)
!8406 = !DILocation(line: 823, column: 6, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 823, column: 6)
!8408 = !DILocation(line: 823, column: 6, scope: !8386)
!8409 = !DILocation(line: 824, column: 18, scope: !8407)
!8410 = !DILocation(line: 824, column: 28, scope: !8407)
!8411 = !DILocation(line: 824, column: 46, scope: !8407)
!8412 = !DILocation(line: 824, column: 4, scope: !8407)
!8413 = !DILocation(line: 824, column: 15, scope: !8407)
!8414 = !DILocation(line: 824, column: 3, scope: !8407)
!8415 = !DILocation(line: 825, column: 6, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 825, column: 6)
!8417 = !DILocation(line: 825, column: 6, scope: !8386)
!8418 = !DILocation(line: 826, column: 17, scope: !8416)
!8419 = !DILocation(line: 826, column: 27, scope: !8416)
!8420 = !DILocation(line: 826, column: 44, scope: !8416)
!8421 = !DILocation(line: 826, column: 4, scope: !8416)
!8422 = !DILocation(line: 826, column: 14, scope: !8416)
!8423 = !DILocation(line: 826, column: 3, scope: !8416)
!8424 = !DILocation(line: 827, column: 1, scope: !8386)
!8425 = distinct !DISubprogram(name: "ata_xfer_mask2mode", scope: !3, file: !3, line: 852, type: !8426, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8426 = !DISubroutineType(types: !8427)
!8427 = !{!1216, !994}
!8428 = !DILocalVariable(name: "x", arg: 1, scope: !8429, file: !8430, line: 324, type: !7)
!8429 = distinct !DISubprogram(name: "fls", scope: !8430, file: !8430, line: 324, type: !8431, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8430 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8431 = !DISubroutineType(types: !8432)
!8432 = !{!223, !7}
!8433 = !DILocation(line: 324, column: 45, scope: !8429, inlinedAt: !8434)
!8434 = distinct !DILocation(line: 854, column: 16, scope: !8425)
!8435 = !DILocalVariable(name: "r", scope: !8429, file: !8430, line: 326, type: !223)
!8436 = !DILocation(line: 326, column: 6, scope: !8429, inlinedAt: !8434)
!8437 = !DILocalVariable(name: "xfer_mask", arg: 1, scope: !8425, file: !3, line: 852, type: !994)
!8438 = !DILocation(line: 852, column: 37, scope: !8425)
!8439 = !DILocalVariable(name: "highbit", scope: !8425, file: !3, line: 854, type: !223)
!8440 = !DILocation(line: 854, column: 6, scope: !8425)
!8441 = !DILocation(line: 854, column: 20, scope: !8425)
!8442 = !DILocation(line: 340, column: 14, scope: !8429, inlinedAt: !8434)
!8443 = !DILocation(line: 338, column: 2, scope: !8429, inlinedAt: !8434)
!8444 = !{i32 406597}
!8445 = !DILocation(line: 351, column: 9, scope: !8429, inlinedAt: !8434)
!8446 = !DILocation(line: 351, column: 11, scope: !8429, inlinedAt: !8434)
!8447 = !DILocation(line: 854, column: 31, scope: !8425)
!8448 = !DILocalVariable(name: "ent", scope: !8425, file: !3, line: 855, type: !8449)
!8449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7239, size: 64)
!8450 = !DILocation(line: 855, column: 29, scope: !8425)
!8451 = !DILocation(line: 857, column: 11, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 857, column: 2)
!8453 = !DILocation(line: 857, column: 7, scope: !8452)
!8454 = !DILocation(line: 857, column: 27, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 857, column: 2)
!8456 = !DILocation(line: 857, column: 32, scope: !8455)
!8457 = !DILocation(line: 857, column: 38, scope: !8455)
!8458 = !DILocation(line: 857, column: 2, scope: !8452)
!8459 = !DILocation(line: 858, column: 7, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 858, column: 7)
!8461 = !DILocation(line: 858, column: 18, scope: !8460)
!8462 = !DILocation(line: 858, column: 23, scope: !8460)
!8463 = !DILocation(line: 858, column: 15, scope: !8460)
!8464 = !DILocation(line: 858, column: 29, scope: !8460)
!8465 = !DILocation(line: 858, column: 32, scope: !8460)
!8466 = !DILocation(line: 858, column: 42, scope: !8460)
!8467 = !DILocation(line: 858, column: 47, scope: !8460)
!8468 = !DILocation(line: 858, column: 55, scope: !8460)
!8469 = !DILocation(line: 858, column: 60, scope: !8460)
!8470 = !DILocation(line: 858, column: 53, scope: !8460)
!8471 = !DILocation(line: 858, column: 40, scope: !8460)
!8472 = !DILocation(line: 858, column: 7, scope: !8455)
!8473 = !DILocation(line: 859, column: 11, scope: !8460)
!8474 = !DILocation(line: 859, column: 16, scope: !8460)
!8475 = !DILocation(line: 859, column: 23, scope: !8460)
!8476 = !DILocation(line: 859, column: 21, scope: !8460)
!8477 = !DILocation(line: 859, column: 33, scope: !8460)
!8478 = !DILocation(line: 859, column: 38, scope: !8460)
!8479 = !DILocation(line: 859, column: 31, scope: !8460)
!8480 = !DILocation(line: 859, column: 4, scope: !8460)
!8481 = !DILocation(line: 857, column: 47, scope: !8455)
!8482 = !DILocation(line: 857, column: 2, scope: !8455)
!8483 = distinct !{!8483, !8458, !8484}
!8484 = !DILocation(line: 859, column: 38, scope: !8452)
!8485 = !DILocation(line: 860, column: 2, scope: !8425)
!8486 = !DILocation(line: 861, column: 1, scope: !8425)
!8487 = distinct !DISubprogram(name: "ata_xfer_mode2mask", scope: !3, file: !3, line: 876, type: !8488, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!994, !1216}
!8490 = !DILocalVariable(name: "xfer_mode", arg: 1, scope: !8487, file: !3, line: 876, type: !1216)
!8491 = !DILocation(line: 876, column: 37, scope: !8487)
!8492 = !DILocalVariable(name: "ent", scope: !8487, file: !3, line: 878, type: !8449)
!8493 = !DILocation(line: 878, column: 29, scope: !8487)
!8494 = !DILocation(line: 880, column: 11, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 880, column: 2)
!8496 = !DILocation(line: 880, column: 7, scope: !8495)
!8497 = !DILocation(line: 880, column: 27, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 880, column: 2)
!8499 = !DILocation(line: 880, column: 32, scope: !8498)
!8500 = !DILocation(line: 880, column: 38, scope: !8498)
!8501 = !DILocation(line: 880, column: 2, scope: !8495)
!8502 = !DILocation(line: 881, column: 7, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 881, column: 7)
!8504 = !DILocation(line: 881, column: 20, scope: !8503)
!8505 = !DILocation(line: 881, column: 25, scope: !8503)
!8506 = !DILocation(line: 881, column: 17, scope: !8503)
!8507 = !DILocation(line: 881, column: 30, scope: !8503)
!8508 = !DILocation(line: 881, column: 33, scope: !8503)
!8509 = !DILocation(line: 881, column: 45, scope: !8503)
!8510 = !DILocation(line: 881, column: 50, scope: !8503)
!8511 = !DILocation(line: 881, column: 57, scope: !8503)
!8512 = !DILocation(line: 881, column: 62, scope: !8503)
!8513 = !DILocation(line: 881, column: 55, scope: !8503)
!8514 = !DILocation(line: 881, column: 43, scope: !8503)
!8515 = !DILocation(line: 881, column: 7, scope: !8498)
!8516 = !DILocation(line: 882, column: 19, scope: !8503)
!8517 = !DILocation(line: 882, column: 24, scope: !8503)
!8518 = !DILocation(line: 882, column: 32, scope: !8503)
!8519 = !DILocation(line: 882, column: 30, scope: !8503)
!8520 = !DILocation(line: 882, column: 44, scope: !8503)
!8521 = !DILocation(line: 882, column: 49, scope: !8503)
!8522 = !DILocation(line: 882, column: 42, scope: !8503)
!8523 = !DILocation(line: 882, column: 15, scope: !8503)
!8524 = !DILocation(line: 882, column: 56, scope: !8503)
!8525 = !DILocation(line: 883, column: 15, scope: !8503)
!8526 = !DILocation(line: 883, column: 20, scope: !8503)
!8527 = !DILocation(line: 883, column: 12, scope: !8503)
!8528 = !DILocation(line: 883, column: 27, scope: !8503)
!8529 = !DILocation(line: 883, column: 7, scope: !8503)
!8530 = !DILocation(line: 883, column: 5, scope: !8503)
!8531 = !DILocation(line: 882, column: 11, scope: !8503)
!8532 = !DILocation(line: 882, column: 4, scope: !8503)
!8533 = !DILocation(line: 880, column: 47, scope: !8498)
!8534 = !DILocation(line: 880, column: 2, scope: !8498)
!8535 = distinct !{!8535, !8501, !8536}
!8536 = !DILocation(line: 883, column: 30, scope: !8495)
!8537 = !DILocation(line: 884, column: 2, scope: !8487)
!8538 = !DILocation(line: 885, column: 1, scope: !8487)
!8539 = distinct !DISubprogram(name: "ata_xfer_mode2shift", scope: !3, file: !3, line: 900, type: !8540, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{!223, !994}
!8542 = !DILocalVariable(name: "xfer_mode", arg: 1, scope: !8539, file: !3, line: 900, type: !994)
!8543 = !DILocation(line: 900, column: 39, scope: !8539)
!8544 = !DILocalVariable(name: "ent", scope: !8539, file: !3, line: 902, type: !8449)
!8545 = !DILocation(line: 902, column: 29, scope: !8539)
!8546 = !DILocation(line: 904, column: 11, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 904, column: 2)
!8548 = !DILocation(line: 904, column: 7, scope: !8547)
!8549 = !DILocation(line: 904, column: 27, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 904, column: 2)
!8551 = !DILocation(line: 904, column: 32, scope: !8550)
!8552 = !DILocation(line: 904, column: 38, scope: !8550)
!8553 = !DILocation(line: 904, column: 2, scope: !8547)
!8554 = !DILocation(line: 905, column: 7, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 905, column: 7)
!8556 = !DILocation(line: 905, column: 20, scope: !8555)
!8557 = !DILocation(line: 905, column: 25, scope: !8555)
!8558 = !DILocation(line: 905, column: 17, scope: !8555)
!8559 = !DILocation(line: 905, column: 30, scope: !8555)
!8560 = !DILocation(line: 905, column: 33, scope: !8555)
!8561 = !DILocation(line: 905, column: 45, scope: !8555)
!8562 = !DILocation(line: 905, column: 50, scope: !8555)
!8563 = !DILocation(line: 905, column: 57, scope: !8555)
!8564 = !DILocation(line: 905, column: 62, scope: !8555)
!8565 = !DILocation(line: 905, column: 55, scope: !8555)
!8566 = !DILocation(line: 905, column: 43, scope: !8555)
!8567 = !DILocation(line: 905, column: 7, scope: !8550)
!8568 = !DILocation(line: 906, column: 11, scope: !8555)
!8569 = !DILocation(line: 906, column: 16, scope: !8555)
!8570 = !DILocation(line: 906, column: 4, scope: !8555)
!8571 = !DILocation(line: 904, column: 47, scope: !8550)
!8572 = !DILocation(line: 904, column: 2, scope: !8550)
!8573 = distinct !{!8573, !8553, !8574}
!8574 = !DILocation(line: 906, column: 16, scope: !8547)
!8575 = !DILocation(line: 907, column: 2, scope: !8539)
!8576 = !DILocation(line: 908, column: 1, scope: !8539)
!8577 = !DILocation(line: 324, column: 45, scope: !8429, inlinedAt: !8578)
!8578 = distinct !DILocation(line: 951, column: 12, scope: !7100)
!8579 = !DILocation(line: 326, column: 6, scope: !8429, inlinedAt: !8578)
!8580 = !DILocalVariable(name: "xfer_mask", arg: 1, scope: !7100, file: !3, line: 925, type: !994)
!8581 = !DILocation(line: 925, column: 43, scope: !7100)
!8582 = !DILocalVariable(name: "highbit", scope: !7100, file: !3, line: 949, type: !223)
!8583 = !DILocation(line: 949, column: 6, scope: !7100)
!8584 = !DILocation(line: 951, column: 16, scope: !7100)
!8585 = !DILocation(line: 340, column: 14, scope: !8429, inlinedAt: !8578)
!8586 = !DILocation(line: 338, column: 2, scope: !8429, inlinedAt: !8578)
!8587 = !DILocation(line: 351, column: 9, scope: !8429, inlinedAt: !8578)
!8588 = !DILocation(line: 351, column: 11, scope: !8429, inlinedAt: !8578)
!8589 = !DILocation(line: 951, column: 27, scope: !7100)
!8590 = !DILocation(line: 951, column: 10, scope: !7100)
!8591 = !DILocation(line: 952, column: 6, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 952, column: 6)
!8593 = !DILocation(line: 952, column: 14, scope: !8592)
!8594 = !DILocation(line: 952, column: 19, scope: !8592)
!8595 = !DILocation(line: 952, column: 22, scope: !8592)
!8596 = !DILocation(line: 952, column: 30, scope: !8592)
!8597 = !DILocation(line: 952, column: 6, scope: !7100)
!8598 = !DILocation(line: 953, column: 24, scope: !8592)
!8599 = !DILocation(line: 953, column: 10, scope: !8592)
!8600 = !DILocation(line: 953, column: 3, scope: !8592)
!8601 = !DILocation(line: 954, column: 2, scope: !7100)
!8602 = !DILocation(line: 955, column: 1, scope: !7100)
!8603 = !DILocalVariable(name: "spd", arg: 1, scope: !7107, file: !3, line: 958, type: !7)
!8604 = !DILocation(line: 958, column: 42, scope: !7107)
!8605 = !DILocation(line: 966, column: 6, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 966, column: 6)
!8607 = !DILocation(line: 966, column: 10, scope: !8606)
!8608 = !DILocation(line: 966, column: 15, scope: !8606)
!8609 = !DILocation(line: 966, column: 19, scope: !8606)
!8610 = !DILocation(line: 966, column: 23, scope: !8606)
!8611 = !DILocation(line: 966, column: 18, scope: !8606)
!8612 = !DILocation(line: 966, column: 28, scope: !8606)
!8613 = !DILocation(line: 966, column: 6, scope: !7107)
!8614 = !DILocation(line: 967, column: 3, scope: !8606)
!8615 = !DILocation(line: 968, column: 17, scope: !7107)
!8616 = !DILocation(line: 968, column: 21, scope: !7107)
!8617 = !DILocation(line: 968, column: 9, scope: !7107)
!8618 = !DILocation(line: 968, column: 2, scope: !7107)
!8619 = !DILocation(line: 969, column: 1, scope: !7107)
!8620 = distinct !DISubprogram(name: "ata_dev_classify", scope: !3, file: !3, line: 986, type: !8621, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8621 = !DISubroutineType(types: !8622)
!8622 = !{!7, !6711}
!8623 = !DILocalVariable(name: "tf", arg: 1, scope: !8620, file: !3, line: 986, type: !6711)
!8624 = !DILocation(line: 986, column: 58, scope: !8620)
!8625 = !DILocation(line: 1009, column: 7, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1009, column: 6)
!8627 = !DILocation(line: 1009, column: 11, scope: !8626)
!8628 = !DILocation(line: 1009, column: 16, scope: !8626)
!8629 = !DILocation(line: 1009, column: 22, scope: !8626)
!8630 = !DILocation(line: 1009, column: 26, scope: !8626)
!8631 = !DILocation(line: 1009, column: 30, scope: !8626)
!8632 = !DILocation(line: 1009, column: 35, scope: !8626)
!8633 = !DILocation(line: 1009, column: 6, scope: !8620)
!8634 = !DILocation(line: 1011, column: 3, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1009, column: 42)
!8636 = !DILocation(line: 1014, column: 7, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1014, column: 6)
!8638 = !DILocation(line: 1014, column: 11, scope: !8637)
!8639 = !DILocation(line: 1014, column: 16, scope: !8637)
!8640 = !DILocation(line: 1014, column: 25, scope: !8637)
!8641 = !DILocation(line: 1014, column: 29, scope: !8637)
!8642 = !DILocation(line: 1014, column: 33, scope: !8637)
!8643 = !DILocation(line: 1014, column: 38, scope: !8637)
!8644 = !DILocation(line: 1014, column: 6, scope: !8620)
!8645 = !DILocation(line: 1016, column: 3, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 1014, column: 48)
!8647 = !DILocation(line: 1019, column: 7, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1019, column: 6)
!8649 = !DILocation(line: 1019, column: 11, scope: !8648)
!8650 = !DILocation(line: 1019, column: 16, scope: !8648)
!8651 = !DILocation(line: 1019, column: 25, scope: !8648)
!8652 = !DILocation(line: 1019, column: 29, scope: !8648)
!8653 = !DILocation(line: 1019, column: 33, scope: !8648)
!8654 = !DILocation(line: 1019, column: 38, scope: !8648)
!8655 = !DILocation(line: 1019, column: 6, scope: !8620)
!8656 = !DILocation(line: 1021, column: 3, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1019, column: 48)
!8658 = !DILocation(line: 1024, column: 7, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1024, column: 6)
!8660 = !DILocation(line: 1024, column: 11, scope: !8659)
!8661 = !DILocation(line: 1024, column: 16, scope: !8659)
!8662 = !DILocation(line: 1024, column: 25, scope: !8659)
!8663 = !DILocation(line: 1024, column: 29, scope: !8659)
!8664 = !DILocation(line: 1024, column: 33, scope: !8659)
!8665 = !DILocation(line: 1024, column: 38, scope: !8659)
!8666 = !DILocation(line: 1024, column: 6, scope: !8620)
!8667 = !DILocation(line: 1026, column: 3, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 1024, column: 48)
!8669 = !DILocation(line: 1029, column: 7, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1029, column: 6)
!8671 = !DILocation(line: 1029, column: 11, scope: !8670)
!8672 = !DILocation(line: 1029, column: 16, scope: !8670)
!8673 = !DILocation(line: 1029, column: 25, scope: !8670)
!8674 = !DILocation(line: 1029, column: 29, scope: !8670)
!8675 = !DILocation(line: 1029, column: 33, scope: !8670)
!8676 = !DILocation(line: 1029, column: 38, scope: !8670)
!8677 = !DILocation(line: 1029, column: 6, scope: !8620)
!8678 = !DILocation(line: 1031, column: 3, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 1029, column: 48)
!8680 = !DILocation(line: 1035, column: 2, scope: !8620)
!8681 = !DILocation(line: 1036, column: 1, scope: !8620)
!8682 = distinct !DISubprogram(name: "ata_id_string", scope: !3, file: !3, line: 1054, type: !8683, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8683 = !DISubroutineType(types: !8684)
!8684 = !{null, !8685, !4914, !7, !7}
!8685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!8686 = !DILocalVariable(name: "id", arg: 1, scope: !8682, file: !3, line: 1054, type: !8685)
!8687 = !DILocation(line: 1054, column: 31, scope: !8682)
!8688 = !DILocalVariable(name: "s", arg: 2, scope: !8682, file: !3, line: 1054, type: !4914)
!8689 = !DILocation(line: 1054, column: 50, scope: !8682)
!8690 = !DILocalVariable(name: "ofs", arg: 3, scope: !8682, file: !3, line: 1055, type: !7)
!8691 = !DILocation(line: 1055, column: 19, scope: !8682)
!8692 = !DILocalVariable(name: "len", arg: 4, scope: !8682, file: !3, line: 1055, type: !7)
!8693 = !DILocation(line: 1055, column: 37, scope: !8682)
!8694 = !DILocalVariable(name: "c", scope: !8682, file: !3, line: 1057, type: !7)
!8695 = !DILocation(line: 1057, column: 15, scope: !8682)
!8696 = !DILocation(line: 1059, column: 2, scope: !8682)
!8697 = !DILocation(line: 1059, column: 2, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 1059, column: 2)
!8699 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 1059, column: 2)
!8700 = !DILocation(line: 1059, column: 2, scope: !8699)
!8701 = !DILocation(line: 1059, column: 2, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 1059, column: 2)
!8703 = !DILocation(line: 1059, column: 2, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1059, column: 2)
!8705 = !DILocation(line: 1059, column: 2, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1059, column: 2)
!8707 = !{i32 -2139262247, i32 -2139262218, i32 -2139262172, i32 -2139262114, i32 -2139262060, i32 -2139262006, i32 -2139261951, i32 -2139261920}
!8708 = !DILocation(line: 1059, column: 2, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 1059, column: 2)
!8710 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1059, column: 2)
!8711 = !{i32 -2139261471, i32 -2139261464, i32 -2139261410, i32 -2139261379, i32 -2139261349}
!8712 = !DILocation(line: 1059, column: 2, scope: !8710)
!8713 = !DILocation(line: 1061, column: 2, scope: !8682)
!8714 = !DILocation(line: 1061, column: 9, scope: !8682)
!8715 = !DILocation(line: 1061, column: 13, scope: !8682)
!8716 = !DILocation(line: 1062, column: 7, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 1061, column: 18)
!8718 = !DILocation(line: 1062, column: 10, scope: !8717)
!8719 = !DILocation(line: 1062, column: 15, scope: !8717)
!8720 = !DILocation(line: 1062, column: 5, scope: !8717)
!8721 = !DILocation(line: 1063, column: 8, scope: !8717)
!8722 = !DILocation(line: 1063, column: 4, scope: !8717)
!8723 = !DILocation(line: 1063, column: 6, scope: !8717)
!8724 = !DILocation(line: 1064, column: 4, scope: !8717)
!8725 = !DILocation(line: 1066, column: 7, scope: !8717)
!8726 = !DILocation(line: 1066, column: 10, scope: !8717)
!8727 = !DILocation(line: 1066, column: 15, scope: !8717)
!8728 = !DILocation(line: 1066, column: 5, scope: !8717)
!8729 = !DILocation(line: 1067, column: 8, scope: !8717)
!8730 = !DILocation(line: 1067, column: 4, scope: !8717)
!8731 = !DILocation(line: 1067, column: 6, scope: !8717)
!8732 = !DILocation(line: 1068, column: 4, scope: !8717)
!8733 = !DILocation(line: 1070, column: 6, scope: !8717)
!8734 = !DILocation(line: 1071, column: 7, scope: !8717)
!8735 = distinct !{!8735, !8713, !8736}
!8736 = !DILocation(line: 1072, column: 2, scope: !8682)
!8737 = !DILocation(line: 1073, column: 1, scope: !8682)
!8738 = distinct !DISubprogram(name: "ata_id_c_string", scope: !3, file: !3, line: 1090, type: !8683, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8739 = !DILocalVariable(name: "id", arg: 1, scope: !8738, file: !3, line: 1090, type: !8685)
!8740 = !DILocation(line: 1090, column: 33, scope: !8738)
!8741 = !DILocalVariable(name: "s", arg: 2, scope: !8738, file: !3, line: 1090, type: !4914)
!8742 = !DILocation(line: 1090, column: 52, scope: !8738)
!8743 = !DILocalVariable(name: "ofs", arg: 3, scope: !8738, file: !3, line: 1091, type: !7)
!8744 = !DILocation(line: 1091, column: 21, scope: !8738)
!8745 = !DILocalVariable(name: "len", arg: 4, scope: !8738, file: !3, line: 1091, type: !7)
!8746 = !DILocation(line: 1091, column: 39, scope: !8738)
!8747 = !DILocalVariable(name: "p", scope: !8738, file: !3, line: 1093, type: !4914)
!8748 = !DILocation(line: 1093, column: 17, scope: !8738)
!8749 = !DILocation(line: 1095, column: 16, scope: !8738)
!8750 = !DILocation(line: 1095, column: 20, scope: !8738)
!8751 = !DILocation(line: 1095, column: 23, scope: !8738)
!8752 = !DILocation(line: 1095, column: 28, scope: !8738)
!8753 = !DILocation(line: 1095, column: 32, scope: !8738)
!8754 = !DILocation(line: 1095, column: 2, scope: !8738)
!8755 = !DILocation(line: 1097, column: 6, scope: !8738)
!8756 = !DILocation(line: 1097, column: 18, scope: !8738)
!8757 = !DILocation(line: 1097, column: 21, scope: !8738)
!8758 = !DILocation(line: 1097, column: 25, scope: !8738)
!8759 = !DILocation(line: 1097, column: 10, scope: !8738)
!8760 = !DILocation(line: 1097, column: 8, scope: !8738)
!8761 = !DILocation(line: 1097, column: 4, scope: !8738)
!8762 = !DILocation(line: 1098, column: 2, scope: !8738)
!8763 = !DILocation(line: 1098, column: 9, scope: !8738)
!8764 = !DILocation(line: 1098, column: 13, scope: !8738)
!8765 = !DILocation(line: 1098, column: 11, scope: !8738)
!8766 = !DILocation(line: 1098, column: 15, scope: !8738)
!8767 = !DILocation(line: 1098, column: 18, scope: !8738)
!8768 = !DILocation(line: 1098, column: 24, scope: !8738)
!8769 = !DILocation(line: 0, scope: !8738)
!8770 = !DILocation(line: 1099, column: 4, scope: !8738)
!8771 = distinct !{!8771, !8762, !8770}
!8772 = !DILocation(line: 1100, column: 3, scope: !8738)
!8773 = !DILocation(line: 1100, column: 5, scope: !8738)
!8774 = !DILocation(line: 1101, column: 1, scope: !8738)
!8775 = distinct !DISubprogram(name: "ata_tf_to_lba48", scope: !3, file: !3, line: 1121, type: !8776, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8776 = !DISubroutineType(types: !8777)
!8777 = !{!984, !6711}
!8778 = !DILocalVariable(name: "tf", arg: 1, scope: !8775, file: !3, line: 1121, type: !6711)
!8779 = !DILocation(line: 1121, column: 48, scope: !8775)
!8780 = !DILocalVariable(name: "sectors", scope: !8775, file: !3, line: 1123, type: !984)
!8781 = !DILocation(line: 1123, column: 6, scope: !8775)
!8782 = !DILocation(line: 1125, column: 20, scope: !8775)
!8783 = !DILocation(line: 1125, column: 24, scope: !8775)
!8784 = !DILocation(line: 1125, column: 33, scope: !8775)
!8785 = !DILocation(line: 1125, column: 14, scope: !8775)
!8786 = !DILocation(line: 1125, column: 42, scope: !8775)
!8787 = !DILocation(line: 1125, column: 10, scope: !8775)
!8788 = !DILocation(line: 1126, column: 20, scope: !8775)
!8789 = !DILocation(line: 1126, column: 24, scope: !8775)
!8790 = !DILocation(line: 1126, column: 33, scope: !8775)
!8791 = !DILocation(line: 1126, column: 14, scope: !8775)
!8792 = !DILocation(line: 1126, column: 42, scope: !8775)
!8793 = !DILocation(line: 1126, column: 10, scope: !8775)
!8794 = !DILocation(line: 1127, column: 20, scope: !8775)
!8795 = !DILocation(line: 1127, column: 24, scope: !8775)
!8796 = !DILocation(line: 1127, column: 33, scope: !8775)
!8797 = !DILocation(line: 1127, column: 14, scope: !8775)
!8798 = !DILocation(line: 1127, column: 42, scope: !8775)
!8799 = !DILocation(line: 1127, column: 10, scope: !8775)
!8800 = !DILocation(line: 1128, column: 14, scope: !8775)
!8801 = !DILocation(line: 1128, column: 18, scope: !8775)
!8802 = !DILocation(line: 1128, column: 23, scope: !8775)
!8803 = !DILocation(line: 1128, column: 31, scope: !8775)
!8804 = !DILocation(line: 1128, column: 13, scope: !8775)
!8805 = !DILocation(line: 1128, column: 10, scope: !8775)
!8806 = !DILocation(line: 1129, column: 14, scope: !8775)
!8807 = !DILocation(line: 1129, column: 18, scope: !8775)
!8808 = !DILocation(line: 1129, column: 23, scope: !8775)
!8809 = !DILocation(line: 1129, column: 31, scope: !8775)
!8810 = !DILocation(line: 1129, column: 13, scope: !8775)
!8811 = !DILocation(line: 1129, column: 10, scope: !8775)
!8812 = !DILocation(line: 1130, column: 14, scope: !8775)
!8813 = !DILocation(line: 1130, column: 18, scope: !8775)
!8814 = !DILocation(line: 1130, column: 23, scope: !8775)
!8815 = !DILocation(line: 1130, column: 13, scope: !8775)
!8816 = !DILocation(line: 1130, column: 10, scope: !8775)
!8817 = !DILocation(line: 1132, column: 9, scope: !8775)
!8818 = !DILocation(line: 1132, column: 2, scope: !8775)
!8819 = distinct !DISubprogram(name: "ata_tf_to_lba", scope: !3, file: !3, line: 1135, type: !8776, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8820 = !DILocalVariable(name: "tf", arg: 1, scope: !8819, file: !3, line: 1135, type: !6711)
!8821 = !DILocation(line: 1135, column: 46, scope: !8819)
!8822 = !DILocalVariable(name: "sectors", scope: !8819, file: !3, line: 1137, type: !984)
!8823 = !DILocation(line: 1137, column: 6, scope: !8819)
!8824 = !DILocation(line: 1139, column: 14, scope: !8819)
!8825 = !DILocation(line: 1139, column: 18, scope: !8819)
!8826 = !DILocation(line: 1139, column: 25, scope: !8819)
!8827 = !DILocation(line: 1139, column: 33, scope: !8819)
!8828 = !DILocation(line: 1139, column: 13, scope: !8819)
!8829 = !DILocation(line: 1139, column: 10, scope: !8819)
!8830 = !DILocation(line: 1140, column: 14, scope: !8819)
!8831 = !DILocation(line: 1140, column: 18, scope: !8819)
!8832 = !DILocation(line: 1140, column: 23, scope: !8819)
!8833 = !DILocation(line: 1140, column: 31, scope: !8819)
!8834 = !DILocation(line: 1140, column: 13, scope: !8819)
!8835 = !DILocation(line: 1140, column: 10, scope: !8819)
!8836 = !DILocation(line: 1141, column: 14, scope: !8819)
!8837 = !DILocation(line: 1141, column: 18, scope: !8819)
!8838 = !DILocation(line: 1141, column: 23, scope: !8819)
!8839 = !DILocation(line: 1141, column: 31, scope: !8819)
!8840 = !DILocation(line: 1141, column: 13, scope: !8819)
!8841 = !DILocation(line: 1141, column: 10, scope: !8819)
!8842 = !DILocation(line: 1142, column: 14, scope: !8819)
!8843 = !DILocation(line: 1142, column: 18, scope: !8819)
!8844 = !DILocation(line: 1142, column: 23, scope: !8819)
!8845 = !DILocation(line: 1142, column: 13, scope: !8819)
!8846 = !DILocation(line: 1142, column: 10, scope: !8819)
!8847 = !DILocation(line: 1144, column: 9, scope: !8819)
!8848 = !DILocation(line: 1144, column: 2, scope: !8819)
!8849 = distinct !DISubprogram(name: "ata_id_xfermask", scope: !3, file: !3, line: 1407, type: !8850, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{!994, !8685}
!8852 = !DILocalVariable(name: "id", arg: 1, scope: !8849, file: !3, line: 1407, type: !8685)
!8853 = !DILocation(line: 1407, column: 42, scope: !8849)
!8854 = !DILocalVariable(name: "pio_mask", scope: !8849, file: !3, line: 1409, type: !994)
!8855 = !DILocation(line: 1409, column: 16, scope: !8849)
!8856 = !DILocalVariable(name: "mwdma_mask", scope: !8849, file: !3, line: 1409, type: !994)
!8857 = !DILocation(line: 1409, column: 26, scope: !8849)
!8858 = !DILocalVariable(name: "udma_mask", scope: !8849, file: !3, line: 1409, type: !994)
!8859 = !DILocation(line: 1409, column: 38, scope: !8849)
!8860 = !DILocation(line: 1412, column: 6, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 1412, column: 6)
!8862 = !DILocation(line: 1412, column: 29, scope: !8861)
!8863 = !DILocation(line: 1412, column: 6, scope: !8849)
!8864 = !DILocation(line: 1413, column: 14, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 1412, column: 41)
!8866 = !DILocation(line: 1413, column: 35, scope: !8865)
!8867 = !DILocation(line: 1413, column: 12, scope: !8865)
!8868 = !DILocation(line: 1414, column: 12, scope: !8865)
!8869 = !DILocation(line: 1415, column: 12, scope: !8865)
!8870 = !DILocation(line: 1416, column: 2, scope: !8865)
!8871 = !DILocalVariable(name: "mode", scope: !8872, file: !3, line: 1421, type: !1216)
!8872 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 1416, column: 9)
!8873 = !DILocation(line: 1421, column: 6, scope: !8872)
!8874 = !DILocation(line: 1421, column: 14, scope: !8872)
!8875 = !DILocation(line: 1421, column: 39, scope: !8872)
!8876 = !DILocation(line: 1421, column: 45, scope: !8872)
!8877 = !DILocation(line: 1421, column: 13, scope: !8872)
!8878 = !DILocation(line: 1422, column: 7, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 1422, column: 7)
!8880 = !DILocation(line: 1422, column: 12, scope: !8879)
!8881 = !DILocation(line: 1422, column: 7, scope: !8872)
!8882 = !DILocation(line: 1423, column: 21, scope: !8879)
!8883 = !DILocation(line: 1423, column: 18, scope: !8879)
!8884 = !DILocation(line: 1423, column: 27, scope: !8879)
!8885 = !DILocation(line: 1423, column: 15, scope: !8879)
!8886 = !DILocation(line: 1423, column: 13, scope: !8879)
!8887 = !DILocation(line: 1423, column: 4, scope: !8879)
!8888 = !DILocation(line: 1425, column: 13, scope: !8879)
!8889 = !DILocation(line: 1435, column: 15, scope: !8849)
!8890 = !DILocation(line: 1435, column: 38, scope: !8849)
!8891 = !DILocation(line: 1435, column: 13, scope: !8849)
!8892 = !DILocation(line: 1437, column: 20, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 1437, column: 6)
!8894 = !DILocation(line: 1437, column: 6, scope: !8893)
!8895 = !DILocation(line: 1437, column: 6, scope: !8849)
!8896 = !DILocalVariable(name: "pio", scope: !8897, file: !3, line: 1441, type: !223)
!8897 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 1437, column: 25)
!8898 = !DILocation(line: 1441, column: 7, scope: !8897)
!8899 = !DILocation(line: 1441, column: 14, scope: !8897)
!8900 = !DILocation(line: 1441, column: 35, scope: !8897)
!8901 = !DILocation(line: 1441, column: 41, scope: !8897)
!8902 = !DILocalVariable(name: "dma", scope: !8897, file: !3, line: 1442, type: !223)
!8903 = !DILocation(line: 1442, column: 7, scope: !8897)
!8904 = !DILocation(line: 1442, column: 14, scope: !8897)
!8905 = !DILocation(line: 1442, column: 35, scope: !8897)
!8906 = !DILocation(line: 1442, column: 41, scope: !8897)
!8907 = !DILocation(line: 1444, column: 7, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 1444, column: 7)
!8909 = !DILocation(line: 1444, column: 7, scope: !8897)
!8910 = !DILocation(line: 1445, column: 13, scope: !8908)
!8911 = !DILocation(line: 1445, column: 4, scope: !8908)
!8912 = !DILocation(line: 1446, column: 7, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 1446, column: 7)
!8914 = !DILocation(line: 1446, column: 11, scope: !8913)
!8915 = !DILocation(line: 1446, column: 7, scope: !8897)
!8916 = !DILocation(line: 1447, column: 13, scope: !8913)
!8917 = !DILocation(line: 1447, column: 4, scope: !8913)
!8918 = !DILocation(line: 1448, column: 7, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 1448, column: 7)
!8920 = !DILocation(line: 1448, column: 7, scope: !8897)
!8921 = !DILocation(line: 1449, column: 15, scope: !8919)
!8922 = !DILocation(line: 1449, column: 4, scope: !8919)
!8923 = !DILocation(line: 1450, column: 7, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 1450, column: 7)
!8925 = !DILocation(line: 1450, column: 11, scope: !8924)
!8926 = !DILocation(line: 1450, column: 7, scope: !8897)
!8927 = !DILocation(line: 1451, column: 15, scope: !8924)
!8928 = !DILocation(line: 1451, column: 4, scope: !8924)
!8929 = !DILocation(line: 1452, column: 2, scope: !8897)
!8930 = !DILocation(line: 1454, column: 12, scope: !8849)
!8931 = !DILocation(line: 1455, column: 6, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 1455, column: 6)
!8933 = !DILocation(line: 1455, column: 29, scope: !8932)
!8934 = !DILocation(line: 1455, column: 6, scope: !8849)
!8935 = !DILocation(line: 1456, column: 15, scope: !8932)
!8936 = !DILocation(line: 1456, column: 37, scope: !8932)
!8937 = !DILocation(line: 1456, column: 13, scope: !8932)
!8938 = !DILocation(line: 1456, column: 3, scope: !8932)
!8939 = !DILocation(line: 1458, column: 27, scope: !8849)
!8940 = !DILocation(line: 1458, column: 37, scope: !8849)
!8941 = !DILocation(line: 1458, column: 49, scope: !8849)
!8942 = !DILocation(line: 1458, column: 9, scope: !8849)
!8943 = !DILocation(line: 1458, column: 2, scope: !8849)
!8944 = distinct !DISubprogram(name: "ata_id_is_cfa", scope: !222, file: !222, line: 973, type: !8945, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!1495, !8685}
!8947 = !DILocalVariable(name: "id", arg: 1, scope: !8944, file: !222, line: 973, type: !8685)
!8948 = !DILocation(line: 973, column: 45, scope: !8944)
!8949 = !DILocation(line: 975, column: 7, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8944, file: !222, line: 975, column: 6)
!8951 = !DILocation(line: 975, column: 25, scope: !8950)
!8952 = !DILocation(line: 975, column: 36, scope: !8950)
!8953 = !DILocation(line: 976, column: 7, scope: !8950)
!8954 = !DILocation(line: 976, column: 25, scope: !8950)
!8955 = !DILocation(line: 975, column: 6, scope: !8944)
!8956 = !DILocation(line: 977, column: 3, scope: !8950)
!8957 = !DILocation(line: 986, column: 10, scope: !8944)
!8958 = !DILocation(line: 986, column: 35, scope: !8944)
!8959 = !DILocation(line: 986, column: 45, scope: !8944)
!8960 = !DILocation(line: 986, column: 2, scope: !8944)
!8961 = !DILocation(line: 987, column: 1, scope: !8944)
!8962 = distinct !DISubprogram(name: "ata_exec_internal_sg", scope: !3, file: !3, line: 1491, type: !8963, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{!7, !6374, !6614, !8965, !223, !6148, !7, !994}
!8965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7235, size: 64)
!8966 = !DILocalVariable(name: "lock", arg: 1, scope: !8967, file: !8968, line: 327, type: !1037)
!8967 = distinct !DISubprogram(name: "spinlock_check", scope: !8968, file: !8968, line: 327, type: !8969, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8968 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8969 = !DISubroutineType(types: !8970)
!8970 = !{!8971, !1037}
!8971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!8972 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !8973)
!8973 = distinct !DILocation(line: 1629, column: 2, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 1629, column: 2)
!8975 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1629, column: 2)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 1629, column: 2)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !3, line: 1629, column: 2)
!8978 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1629, column: 2)
!8979 = !DILocalVariable(name: "lock", arg: 1, scope: !8980, file: !8968, line: 407, type: !1037)
!8980 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !8968, file: !8968, line: 407, type: !8981, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8981 = !DISubroutineType(types: !8982)
!8982 = !{null, !1037, !994}
!8983 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !8984)
!8984 = distinct !DILocation(line: 1607, column: 3, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1586, column: 11)
!8986 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1586, column: 6)
!8987 = !DILocalVariable(name: "flags", arg: 2, scope: !8980, file: !8968, line: 407, type: !994)
!8988 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !8984)
!8989 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !8990)
!8990 = distinct !DILocation(line: 1587, column: 3, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 1587, column: 3)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1587, column: 3)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 1587, column: 3)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 1587, column: 3)
!8995 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 1587, column: 3)
!8996 = !DILocalVariable(name: "m", arg: 1, scope: !8997, file: !8998, line: 363, type: !4062)
!8997 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !8998, file: !8998, line: 363, type: !8999, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!8998 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!8999 = !DISubroutineType(types: !9000)
!9000 = !{!994, !4062}
!9001 = !DILocation(line: 363, column: 74, scope: !8997, inlinedAt: !9002)
!9002 = distinct !DILocation(line: 1579, column: 42, scope: !8962)
!9003 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !9004)
!9004 = distinct !DILocation(line: 1565, column: 2, scope: !8962)
!9005 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !9004)
!9006 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !9007)
!9007 = distinct !DILocation(line: 1514, column: 3, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 1513, column: 37)
!9009 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1513, column: 6)
!9010 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !9007)
!9011 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !9012)
!9012 = distinct !DILocation(line: 1640, column: 2, scope: !8962)
!9013 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !9012)
!9014 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !9015)
!9015 = distinct !DILocation(line: 1510, column: 2, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1510, column: 2)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 1510, column: 2)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 1510, column: 2)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 1510, column: 2)
!9020 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1510, column: 2)
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !8962, file: !3, line: 1491, type: !6374)
!9022 = !DILocation(line: 1491, column: 50, scope: !8962)
!9023 = !DILocalVariable(name: "tf", arg: 2, scope: !8962, file: !3, line: 1492, type: !6614)
!9024 = !DILocation(line: 1492, column: 31, scope: !8962)
!9025 = !DILocalVariable(name: "cdb", arg: 3, scope: !8962, file: !3, line: 1492, type: !8965)
!9026 = !DILocation(line: 1492, column: 45, scope: !8962)
!9027 = !DILocalVariable(name: "dma_dir", arg: 4, scope: !8962, file: !3, line: 1493, type: !223)
!9028 = !DILocation(line: 1493, column: 14, scope: !8962)
!9029 = !DILocalVariable(name: "sgl", arg: 5, scope: !8962, file: !3, line: 1493, type: !6148)
!9030 = !DILocation(line: 1493, column: 43, scope: !8962)
!9031 = !DILocalVariable(name: "n_elem", arg: 6, scope: !8962, file: !3, line: 1494, type: !7)
!9032 = !DILocation(line: 1494, column: 23, scope: !8962)
!9033 = !DILocalVariable(name: "timeout", arg: 7, scope: !8962, file: !3, line: 1494, type: !994)
!9034 = !DILocation(line: 1494, column: 45, scope: !8962)
!9035 = !DILocalVariable(name: "link", scope: !8962, file: !3, line: 1496, type: !6378)
!9036 = !DILocation(line: 1496, column: 19, scope: !8962)
!9037 = !DILocation(line: 1496, column: 26, scope: !8962)
!9038 = !DILocation(line: 1496, column: 31, scope: !8962)
!9039 = !DILocalVariable(name: "ap", scope: !8962, file: !3, line: 1497, type: !1005)
!9040 = !DILocation(line: 1497, column: 19, scope: !8962)
!9041 = !DILocation(line: 1497, column: 24, scope: !8962)
!9042 = !DILocation(line: 1497, column: 30, scope: !8962)
!9043 = !DILocalVariable(name: "command", scope: !8962, file: !3, line: 1498, type: !1216)
!9044 = !DILocation(line: 1498, column: 5, scope: !8962)
!9045 = !DILocation(line: 1498, column: 15, scope: !8962)
!9046 = !DILocation(line: 1498, column: 19, scope: !8962)
!9047 = !DILocalVariable(name: "auto_timeout", scope: !8962, file: !3, line: 1499, type: !223)
!9048 = !DILocation(line: 1499, column: 6, scope: !8962)
!9049 = !DILocalVariable(name: "qc", scope: !8962, file: !3, line: 1500, type: !6369)
!9050 = !DILocation(line: 1500, column: 25, scope: !8962)
!9051 = !DILocalVariable(name: "preempted_tag", scope: !8962, file: !3, line: 1501, type: !7)
!9052 = !DILocation(line: 1501, column: 15, scope: !8962)
!9053 = !DILocalVariable(name: "preempted_sactive", scope: !8962, file: !3, line: 1502, type: !989)
!9054 = !DILocation(line: 1502, column: 6, scope: !8962)
!9055 = !DILocalVariable(name: "preempted_qc_active", scope: !8962, file: !3, line: 1503, type: !984)
!9056 = !DILocation(line: 1503, column: 6, scope: !8962)
!9057 = !DILocalVariable(name: "preempted_nr_active_links", scope: !8962, file: !3, line: 1504, type: !223)
!9058 = !DILocation(line: 1504, column: 6, scope: !8962)
!9059 = !DILocalVariable(name: "wait", scope: !8962, file: !3, line: 1505, type: !2307)
!9060 = !DILocation(line: 1505, column: 2, scope: !8962)
!9061 = !DILocalVariable(name: "flags", scope: !8962, file: !3, line: 1506, type: !994)
!9062 = !DILocation(line: 1506, column: 16, scope: !8962)
!9063 = !DILocalVariable(name: "err_mask", scope: !8962, file: !3, line: 1507, type: !7)
!9064 = !DILocation(line: 1507, column: 15, scope: !8962)
!9065 = !DILocalVariable(name: "rc", scope: !8962, file: !3, line: 1508, type: !223)
!9066 = !DILocation(line: 1508, column: 6, scope: !8962)
!9067 = !DILocation(line: 1510, column: 2, scope: !8962)
!9068 = !DILocation(line: 1510, column: 2, scope: !9020)
!9069 = !DILocalVariable(name: "__dummy", scope: !9070, file: !3, line: 1510, type: !994)
!9070 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 1510, column: 2)
!9071 = !DILocation(line: 1510, column: 2, scope: !9070)
!9072 = !DILocalVariable(name: "__dummy2", scope: !9070, file: !3, line: 1510, type: !994)
!9073 = !DILocation(line: 1510, column: 2, scope: !9019)
!9074 = !DILocation(line: 1510, column: 2, scope: !9018)
!9075 = !DILocation(line: 1510, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 1510, column: 2)
!9077 = !DILocalVariable(name: "__dummy", scope: !9078, file: !3, line: 1510, type: !994)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 1510, column: 2)
!9079 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1510, column: 2)
!9080 = !DILocation(line: 1510, column: 2, scope: !9078)
!9081 = !DILocalVariable(name: "__dummy2", scope: !9078, file: !3, line: 1510, type: !994)
!9082 = !DILocation(line: 1510, column: 2, scope: !9079)
!9083 = !DILocation(line: 1510, column: 2, scope: !9017)
!9084 = !{i32 -2139257551}
!9085 = !DILocation(line: 1510, column: 2, scope: !9016)
!9086 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !9015)
!9087 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !9015)
!9088 = !DILocation(line: 1513, column: 6, scope: !9009)
!9089 = !DILocation(line: 1513, column: 10, scope: !9009)
!9090 = !DILocation(line: 1513, column: 17, scope: !9009)
!9091 = !DILocation(line: 1513, column: 6, scope: !8962)
!9092 = !DILocation(line: 1514, column: 26, scope: !9008)
!9093 = !DILocation(line: 1514, column: 30, scope: !9008)
!9094 = !DILocation(line: 1514, column: 36, scope: !9008)
!9095 = !DILocalVariable(name: "__dummy", scope: !9096, file: !8968, line: 409, type: !994)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !8968, line: 409, column: 2)
!9097 = distinct !DILexicalBlock(scope: !8980, file: !8968, line: 409, column: 2)
!9098 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !9007)
!9099 = !DILocalVariable(name: "__dummy2", scope: !9096, file: !8968, line: 409, type: !994)
!9100 = !DILocalVariable(name: "__dummy", scope: !9101, file: !8968, line: 409, type: !994)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !8968, line: 409, column: 2)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !8968, line: 409, column: 2)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !8968, line: 409, column: 2)
!9104 = distinct !DILexicalBlock(scope: !9097, file: !8968, line: 409, column: 2)
!9105 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !9007)
!9106 = !DILocalVariable(name: "__dummy2", scope: !9101, file: !8968, line: 409, type: !994)
!9107 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !9007)
!9108 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !9007)
!9109 = distinct !DILexicalBlock(scope: !9104, file: !8968, line: 409, column: 2)
!9110 = !{i32 -2145309258}
!9111 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !9007)
!9112 = distinct !DILexicalBlock(scope: !9109, file: !8968, line: 409, column: 2)
!9113 = !DILocation(line: 1515, column: 3, scope: !9008)
!9114 = !DILocation(line: 1519, column: 25, scope: !8962)
!9115 = !DILocation(line: 1519, column: 7, scope: !8962)
!9116 = !DILocation(line: 1519, column: 5, scope: !8962)
!9117 = !DILocation(line: 1521, column: 2, scope: !8962)
!9118 = !DILocation(line: 1521, column: 6, scope: !8962)
!9119 = !DILocation(line: 1521, column: 10, scope: !8962)
!9120 = !DILocation(line: 1522, column: 2, scope: !8962)
!9121 = !DILocation(line: 1522, column: 6, scope: !8962)
!9122 = !DILocation(line: 1522, column: 13, scope: !8962)
!9123 = !DILocation(line: 1523, column: 2, scope: !8962)
!9124 = !DILocation(line: 1523, column: 6, scope: !8962)
!9125 = !DILocation(line: 1523, column: 14, scope: !8962)
!9126 = !DILocation(line: 1524, column: 11, scope: !8962)
!9127 = !DILocation(line: 1524, column: 2, scope: !8962)
!9128 = !DILocation(line: 1524, column: 6, scope: !8962)
!9129 = !DILocation(line: 1524, column: 9, scope: !8962)
!9130 = !DILocation(line: 1525, column: 12, scope: !8962)
!9131 = !DILocation(line: 1525, column: 2, scope: !8962)
!9132 = !DILocation(line: 1525, column: 6, scope: !8962)
!9133 = !DILocation(line: 1525, column: 10, scope: !8962)
!9134 = !DILocation(line: 1526, column: 16, scope: !8962)
!9135 = !DILocation(line: 1526, column: 2, scope: !8962)
!9136 = !DILocation(line: 1528, column: 18, scope: !8962)
!9137 = !DILocation(line: 1528, column: 24, scope: !8962)
!9138 = !DILocation(line: 1528, column: 16, scope: !8962)
!9139 = !DILocation(line: 1529, column: 22, scope: !8962)
!9140 = !DILocation(line: 1529, column: 28, scope: !8962)
!9141 = !DILocation(line: 1529, column: 20, scope: !8962)
!9142 = !DILocation(line: 1530, column: 24, scope: !8962)
!9143 = !DILocation(line: 1530, column: 28, scope: !8962)
!9144 = !DILocation(line: 1530, column: 22, scope: !8962)
!9145 = !DILocation(line: 1531, column: 30, scope: !8962)
!9146 = !DILocation(line: 1531, column: 34, scope: !8962)
!9147 = !DILocation(line: 1531, column: 28, scope: !8962)
!9148 = !DILocation(line: 1532, column: 2, scope: !8962)
!9149 = !DILocation(line: 1532, column: 8, scope: !8962)
!9150 = !DILocation(line: 1532, column: 19, scope: !8962)
!9151 = !DILocation(line: 1533, column: 2, scope: !8962)
!9152 = !DILocation(line: 1533, column: 8, scope: !8962)
!9153 = !DILocation(line: 1533, column: 16, scope: !8962)
!9154 = !DILocation(line: 1534, column: 2, scope: !8962)
!9155 = !DILocation(line: 1534, column: 6, scope: !8962)
!9156 = !DILocation(line: 1534, column: 16, scope: !8962)
!9157 = !DILocation(line: 1535, column: 2, scope: !8962)
!9158 = !DILocation(line: 1535, column: 6, scope: !8962)
!9159 = !DILocation(line: 1535, column: 22, scope: !8962)
!9160 = !DILocation(line: 1538, column: 2, scope: !8962)
!9161 = !DILocation(line: 1538, column: 6, scope: !8962)
!9162 = !DILocation(line: 1538, column: 12, scope: !8962)
!9163 = !DILocation(line: 1538, column: 11, scope: !8962)
!9164 = !DILocation(line: 1539, column: 6, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1539, column: 6)
!9166 = !DILocation(line: 1539, column: 6, scope: !8962)
!9167 = !DILocation(line: 1540, column: 10, scope: !9165)
!9168 = !DILocation(line: 1540, column: 14, scope: !9165)
!9169 = !DILocation(line: 1540, column: 3, scope: !9165)
!9170 = !DILocation(line: 1540, column: 19, scope: !9165)
!9171 = !DILocation(line: 1543, column: 6, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1543, column: 6)
!9173 = !DILocation(line: 1543, column: 10, scope: !9172)
!9174 = !DILocation(line: 1543, column: 19, scope: !9172)
!9175 = !DILocation(line: 1543, column: 37, scope: !9172)
!9176 = !DILocation(line: 1543, column: 41, scope: !9172)
!9177 = !DILocation(line: 1543, column: 46, scope: !9172)
!9178 = !DILocation(line: 1543, column: 52, scope: !9172)
!9179 = !DILocation(line: 1543, column: 72, scope: !9172)
!9180 = !DILocation(line: 1544, column: 6, scope: !9172)
!9181 = !DILocation(line: 1544, column: 14, scope: !9172)
!9182 = !DILocation(line: 1543, column: 6, scope: !8962)
!9183 = !DILocation(line: 1545, column: 3, scope: !9172)
!9184 = !DILocation(line: 1545, column: 7, scope: !9172)
!9185 = !DILocation(line: 1545, column: 10, scope: !9172)
!9186 = !DILocation(line: 1545, column: 18, scope: !9172)
!9187 = !DILocation(line: 1547, column: 2, scope: !8962)
!9188 = !DILocation(line: 1547, column: 6, scope: !8962)
!9189 = !DILocation(line: 1547, column: 12, scope: !8962)
!9190 = !DILocation(line: 1548, column: 16, scope: !8962)
!9191 = !DILocation(line: 1548, column: 2, scope: !8962)
!9192 = !DILocation(line: 1548, column: 6, scope: !8962)
!9193 = !DILocation(line: 1548, column: 14, scope: !8962)
!9194 = !DILocation(line: 1549, column: 6, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1549, column: 6)
!9196 = !DILocation(line: 1549, column: 14, scope: !9195)
!9197 = !DILocation(line: 1549, column: 6, scope: !8962)
!9198 = !DILocalVariable(name: "i", scope: !9199, file: !3, line: 1550, type: !7)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 1549, column: 27)
!9200 = !DILocation(line: 1550, column: 16, scope: !9199)
!9201 = !DILocalVariable(name: "buflen", scope: !9199, file: !3, line: 1550, type: !7)
!9202 = !DILocation(line: 1550, column: 19, scope: !9199)
!9203 = !DILocalVariable(name: "sg", scope: !9199, file: !3, line: 1551, type: !6148)
!9204 = !DILocation(line: 1551, column: 23, scope: !9199)
!9205 = !DILocation(line: 1553, column: 3, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1553, column: 3)
!9207 = !DILocation(line: 1553, column: 3, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 1553, column: 3)
!9209 = !DILocation(line: 1554, column: 14, scope: !9208)
!9210 = !DILocation(line: 1554, column: 18, scope: !9208)
!9211 = !DILocation(line: 1554, column: 11, scope: !9208)
!9212 = !DILocation(line: 1554, column: 4, scope: !9208)
!9213 = distinct !{!9213, !9205, !9214}
!9214 = !DILocation(line: 1554, column: 18, scope: !9206)
!9215 = !DILocation(line: 1556, column: 15, scope: !9199)
!9216 = !DILocation(line: 1556, column: 19, scope: !9199)
!9217 = !DILocation(line: 1556, column: 24, scope: !9199)
!9218 = !DILocation(line: 1556, column: 3, scope: !9199)
!9219 = !DILocation(line: 1557, column: 16, scope: !9199)
!9220 = !DILocation(line: 1557, column: 3, scope: !9199)
!9221 = !DILocation(line: 1557, column: 7, scope: !9199)
!9222 = !DILocation(line: 1557, column: 14, scope: !9199)
!9223 = !DILocation(line: 1558, column: 2, scope: !9199)
!9224 = !DILocation(line: 1560, column: 21, scope: !8962)
!9225 = !DILocation(line: 1560, column: 2, scope: !8962)
!9226 = !DILocation(line: 1560, column: 6, scope: !8962)
!9227 = !DILocation(line: 1560, column: 19, scope: !8962)
!9228 = !DILocation(line: 1561, column: 2, scope: !8962)
!9229 = !DILocation(line: 1561, column: 6, scope: !8962)
!9230 = !DILocation(line: 1561, column: 18, scope: !8962)
!9231 = !DILocation(line: 1563, column: 15, scope: !8962)
!9232 = !DILocation(line: 1563, column: 2, scope: !8962)
!9233 = !DILocation(line: 1565, column: 25, scope: !8962)
!9234 = !DILocation(line: 1565, column: 29, scope: !8962)
!9235 = !DILocation(line: 1565, column: 35, scope: !8962)
!9236 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !9004)
!9237 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !9004)
!9238 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !9004)
!9239 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !9004)
!9240 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !9004)
!9241 = !DILocation(line: 1567, column: 7, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1567, column: 6)
!9243 = !DILocation(line: 1567, column: 6, scope: !8962)
!9244 = !DILocation(line: 1568, column: 7, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1568, column: 7)
!9246 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1567, column: 16)
!9247 = !DILocation(line: 1568, column: 7, scope: !9246)
!9248 = !DILocation(line: 1569, column: 14, scope: !9245)
!9249 = !DILocation(line: 1569, column: 32, scope: !9245)
!9250 = !DILocation(line: 1569, column: 12, scope: !9245)
!9251 = !DILocation(line: 1569, column: 4, scope: !9245)
!9252 = !DILocation(line: 1571, column: 39, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 1570, column: 8)
!9254 = !DILocation(line: 1571, column: 44, scope: !9253)
!9255 = !DILocation(line: 1571, column: 14, scope: !9253)
!9256 = !DILocation(line: 1571, column: 12, scope: !9253)
!9257 = !DILocation(line: 1572, column: 17, scope: !9253)
!9258 = !DILocation(line: 1574, column: 2, scope: !9246)
!9259 = !DILocation(line: 1576, column: 6, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1576, column: 6)
!9261 = !DILocation(line: 1576, column: 10, scope: !9260)
!9262 = !DILocation(line: 1576, column: 15, scope: !9260)
!9263 = !DILocation(line: 1576, column: 6, scope: !8962)
!9264 = !DILocation(line: 1577, column: 18, scope: !9260)
!9265 = !DILocation(line: 1577, column: 3, scope: !9260)
!9266 = !DILocation(line: 1579, column: 59, scope: !8962)
!9267 = !DILocation(line: 365, column: 27, scope: !9268, inlinedAt: !9002)
!9268 = distinct !DILexicalBlock(scope: !8997, file: !8998, line: 365, column: 6)
!9269 = !DILocation(line: 365, column: 6, scope: !9268, inlinedAt: !9002)
!9270 = !DILocation(line: 365, column: 6, scope: !8997, inlinedAt: !9002)
!9271 = !DILocation(line: 366, column: 12, scope: !9272, inlinedAt: !9002)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !8998, line: 366, column: 7)
!9273 = distinct !DILexicalBlock(scope: !9268, file: !8998, line: 365, column: 31)
!9274 = !DILocation(line: 366, column: 14, scope: !9272, inlinedAt: !9002)
!9275 = !DILocation(line: 366, column: 7, scope: !9273, inlinedAt: !9002)
!9276 = !DILocation(line: 367, column: 4, scope: !9272, inlinedAt: !9002)
!9277 = !DILocation(line: 368, column: 28, scope: !9273, inlinedAt: !9002)
!9278 = !DILocation(line: 368, column: 10, scope: !9273, inlinedAt: !9002)
!9279 = !DILocation(line: 368, column: 3, scope: !9273, inlinedAt: !9002)
!9280 = !DILocation(line: 370, column: 29, scope: !9281, inlinedAt: !9002)
!9281 = distinct !DILexicalBlock(scope: !9268, file: !8998, line: 369, column: 9)
!9282 = !DILocation(line: 370, column: 10, scope: !9281, inlinedAt: !9002)
!9283 = !DILocation(line: 370, column: 3, scope: !9281, inlinedAt: !9002)
!9284 = !DILocation(line: 372, column: 1, scope: !8997, inlinedAt: !9002)
!9285 = !DILocation(line: 1579, column: 7, scope: !8962)
!9286 = !DILocation(line: 1579, column: 5, scope: !8962)
!9287 = !DILocation(line: 1581, column: 6, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1581, column: 6)
!9289 = !DILocation(line: 1581, column: 10, scope: !9288)
!9290 = !DILocation(line: 1581, column: 15, scope: !9288)
!9291 = !DILocation(line: 1581, column: 6, scope: !8962)
!9292 = !DILocation(line: 1582, column: 18, scope: !9288)
!9293 = !DILocation(line: 1582, column: 3, scope: !9288)
!9294 = !DILocation(line: 1584, column: 25, scope: !8962)
!9295 = !DILocation(line: 1584, column: 2, scope: !8962)
!9296 = !DILocation(line: 1586, column: 7, scope: !8986)
!9297 = !DILocation(line: 1586, column: 6, scope: !8962)
!9298 = !DILocation(line: 1587, column: 3, scope: !8985)
!9299 = !DILocation(line: 1587, column: 3, scope: !8995)
!9300 = !DILocalVariable(name: "__dummy", scope: !9301, file: !3, line: 1587, type: !994)
!9301 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 1587, column: 3)
!9302 = !DILocation(line: 1587, column: 3, scope: !9301)
!9303 = !DILocalVariable(name: "__dummy2", scope: !9301, file: !3, line: 1587, type: !994)
!9304 = !DILocation(line: 1587, column: 3, scope: !8994)
!9305 = !DILocation(line: 1587, column: 3, scope: !8993)
!9306 = !DILocation(line: 1587, column: 3, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1587, column: 3)
!9308 = !DILocalVariable(name: "__dummy", scope: !9309, file: !3, line: 1587, type: !994)
!9309 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 1587, column: 3)
!9310 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 1587, column: 3)
!9311 = !DILocation(line: 1587, column: 3, scope: !9309)
!9312 = !DILocalVariable(name: "__dummy2", scope: !9309, file: !3, line: 1587, type: !994)
!9313 = !DILocation(line: 1587, column: 3, scope: !9310)
!9314 = !DILocation(line: 1587, column: 3, scope: !8992)
!9315 = !{i32 -2139256437}
!9316 = !DILocation(line: 1587, column: 3, scope: !8991)
!9317 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !8990)
!9318 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !8990)
!9319 = !DILocation(line: 1594, column: 7, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 1594, column: 7)
!9321 = !DILocation(line: 1594, column: 11, scope: !9320)
!9322 = !DILocation(line: 1594, column: 17, scope: !9320)
!9323 = !DILocation(line: 1594, column: 7, scope: !8985)
!9324 = !DILocation(line: 1595, column: 4, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 1594, column: 38)
!9326 = !DILocation(line: 1595, column: 8, scope: !9325)
!9327 = !DILocation(line: 1595, column: 17, scope: !9325)
!9328 = !DILocation(line: 1597, column: 8, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9325, file: !3, line: 1597, column: 8)
!9330 = !DILocation(line: 1597, column: 12, scope: !9329)
!9331 = !DILocation(line: 1597, column: 17, scope: !9329)
!9332 = !DILocation(line: 1597, column: 8, scope: !9325)
!9333 = !DILocation(line: 1598, column: 21, scope: !9329)
!9334 = !DILocation(line: 1598, column: 5, scope: !9329)
!9335 = !DILocation(line: 1600, column: 21, scope: !9329)
!9336 = !DILocation(line: 1600, column: 5, scope: !9329)
!9337 = !DILocation(line: 1602, column: 8, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9325, file: !3, line: 1602, column: 8)
!9339 = !DILocation(line: 1602, column: 8, scope: !9325)
!9340 = !DILocation(line: 1603, column: 5, scope: !9338)
!9341 = !DILocation(line: 1605, column: 3, scope: !9325)
!9342 = !DILocation(line: 1607, column: 26, scope: !8985)
!9343 = !DILocation(line: 1607, column: 30, scope: !8985)
!9344 = !DILocation(line: 1607, column: 36, scope: !8985)
!9345 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !8984)
!9346 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !8984)
!9347 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !8984)
!9348 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !8984)
!9349 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !8984)
!9350 = !DILocation(line: 1608, column: 2, scope: !8985)
!9351 = !DILocation(line: 1611, column: 6, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1611, column: 6)
!9353 = !DILocation(line: 1611, column: 10, scope: !9352)
!9354 = !DILocation(line: 1611, column: 15, scope: !9352)
!9355 = !DILocation(line: 1611, column: 6, scope: !8962)
!9356 = !DILocation(line: 1612, column: 3, scope: !9352)
!9357 = !DILocation(line: 1612, column: 7, scope: !9352)
!9358 = !DILocation(line: 1612, column: 12, scope: !9352)
!9359 = !DILocation(line: 1612, column: 30, scope: !9352)
!9360 = !DILocation(line: 1615, column: 6, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1615, column: 6)
!9362 = !DILocation(line: 1615, column: 10, scope: !9361)
!9363 = !DILocation(line: 1615, column: 16, scope: !9361)
!9364 = !DILocation(line: 1615, column: 6, scope: !8962)
!9365 = !DILocation(line: 1616, column: 7, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 1616, column: 7)
!9367 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1615, column: 37)
!9368 = !DILocation(line: 1616, column: 11, scope: !9366)
!9369 = !DILocation(line: 1616, column: 21, scope: !9366)
!9370 = !DILocation(line: 1616, column: 29, scope: !9366)
!9371 = !DILocation(line: 1616, column: 7, scope: !9367)
!9372 = !DILocation(line: 1617, column: 4, scope: !9366)
!9373 = !DILocation(line: 1617, column: 8, scope: !9366)
!9374 = !DILocation(line: 1617, column: 17, scope: !9366)
!9375 = !DILocation(line: 1619, column: 8, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 1619, column: 7)
!9377 = !DILocation(line: 1619, column: 12, scope: !9376)
!9378 = !DILocation(line: 1619, column: 7, scope: !9367)
!9379 = !DILocation(line: 1620, column: 4, scope: !9376)
!9380 = !DILocation(line: 1620, column: 8, scope: !9376)
!9381 = !DILocation(line: 1620, column: 17, scope: !9376)
!9382 = !DILocation(line: 1622, column: 7, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 1622, column: 7)
!9384 = !DILocation(line: 1622, column: 11, scope: !9383)
!9385 = !DILocation(line: 1622, column: 20, scope: !9383)
!9386 = !DILocation(line: 1622, column: 7, scope: !9367)
!9387 = !DILocation(line: 1623, column: 4, scope: !9383)
!9388 = !DILocation(line: 1623, column: 8, scope: !9383)
!9389 = !DILocation(line: 1623, column: 17, scope: !9383)
!9390 = !DILocation(line: 1624, column: 2, scope: !9367)
!9391 = !DILocation(line: 1624, column: 13, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1624, column: 13)
!9393 = !DILocation(line: 1624, column: 17, scope: !9392)
!9394 = !DILocation(line: 1624, column: 20, scope: !9392)
!9395 = !DILocation(line: 1624, column: 28, scope: !9392)
!9396 = !DILocation(line: 1624, column: 13, scope: !9361)
!9397 = !DILocation(line: 1625, column: 3, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9392, file: !3, line: 1624, column: 55)
!9399 = !DILocation(line: 1625, column: 7, scope: !9398)
!9400 = !DILocation(line: 1625, column: 17, scope: !9398)
!9401 = !DILocation(line: 1625, column: 25, scope: !9398)
!9402 = !DILocation(line: 1626, column: 2, scope: !9398)
!9403 = !DILocation(line: 1629, column: 2, scope: !8962)
!9404 = !DILocation(line: 1629, column: 2, scope: !8978)
!9405 = !DILocalVariable(name: "__dummy", scope: !9406, file: !3, line: 1629, type: !994)
!9406 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 1629, column: 2)
!9407 = !DILocation(line: 1629, column: 2, scope: !9406)
!9408 = !DILocalVariable(name: "__dummy2", scope: !9406, file: !3, line: 1629, type: !994)
!9409 = !DILocation(line: 1629, column: 2, scope: !8977)
!9410 = !DILocation(line: 1629, column: 2, scope: !8976)
!9411 = !DILocation(line: 1629, column: 2, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1629, column: 2)
!9413 = !DILocalVariable(name: "__dummy", scope: !9414, file: !3, line: 1629, type: !994)
!9414 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1629, column: 2)
!9415 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 1629, column: 2)
!9416 = !DILocation(line: 1629, column: 2, scope: !9414)
!9417 = !DILocalVariable(name: "__dummy2", scope: !9414, file: !3, line: 1629, type: !994)
!9418 = !DILocation(line: 1629, column: 2, scope: !9415)
!9419 = !DILocation(line: 1629, column: 2, scope: !8975)
!9420 = !{i32 -2139255291}
!9421 = !DILocation(line: 1629, column: 2, scope: !8974)
!9422 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !8973)
!9423 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !8973)
!9424 = !DILocation(line: 1631, column: 3, scope: !8962)
!9425 = !DILocation(line: 1631, column: 8, scope: !8962)
!9426 = !DILocation(line: 1631, column: 12, scope: !8962)
!9427 = !DILocation(line: 1632, column: 13, scope: !8962)
!9428 = !DILocation(line: 1632, column: 17, scope: !8962)
!9429 = !DILocation(line: 1632, column: 11, scope: !8962)
!9430 = !DILocation(line: 1634, column: 14, scope: !8962)
!9431 = !DILocation(line: 1634, column: 2, scope: !8962)
!9432 = !DILocation(line: 1635, column: 21, scope: !8962)
!9433 = !DILocation(line: 1635, column: 2, scope: !8962)
!9434 = !DILocation(line: 1635, column: 8, scope: !8962)
!9435 = !DILocation(line: 1635, column: 19, scope: !8962)
!9436 = !DILocation(line: 1636, column: 18, scope: !8962)
!9437 = !DILocation(line: 1636, column: 2, scope: !8962)
!9438 = !DILocation(line: 1636, column: 8, scope: !8962)
!9439 = !DILocation(line: 1636, column: 16, scope: !8962)
!9440 = !DILocation(line: 1637, column: 18, scope: !8962)
!9441 = !DILocation(line: 1637, column: 2, scope: !8962)
!9442 = !DILocation(line: 1637, column: 6, scope: !8962)
!9443 = !DILocation(line: 1637, column: 16, scope: !8962)
!9444 = !DILocation(line: 1638, column: 24, scope: !8962)
!9445 = !DILocation(line: 1638, column: 2, scope: !8962)
!9446 = !DILocation(line: 1638, column: 6, scope: !8962)
!9447 = !DILocation(line: 1638, column: 22, scope: !8962)
!9448 = !DILocation(line: 1640, column: 25, scope: !8962)
!9449 = !DILocation(line: 1640, column: 29, scope: !8962)
!9450 = !DILocation(line: 1640, column: 35, scope: !8962)
!9451 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !9012)
!9452 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !9012)
!9453 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !9012)
!9454 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !9012)
!9455 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !9012)
!9456 = !DILocation(line: 1642, column: 7, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1642, column: 6)
!9458 = !DILocation(line: 1642, column: 16, scope: !9457)
!9459 = !DILocation(line: 1642, column: 34, scope: !9457)
!9460 = !DILocation(line: 1642, column: 37, scope: !9457)
!9461 = !DILocation(line: 1642, column: 6, scope: !8962)
!9462 = !DILocation(line: 1643, column: 30, scope: !9457)
!9463 = !DILocation(line: 1643, column: 35, scope: !9457)
!9464 = !DILocation(line: 1643, column: 3, scope: !9457)
!9465 = !DILocation(line: 1645, column: 9, scope: !8962)
!9466 = !DILocation(line: 1645, column: 2, scope: !8962)
!9467 = !DILocation(line: 1646, column: 1, scope: !8962)
!9468 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !9469, file: !9469, line: 666, type: !9470, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9469 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!9470 = !DISubroutineType(types: !9471)
!9471 = !{!994}
!9472 = !DILocalVariable(name: "f", scope: !9468, file: !9469, line: 668, type: !994)
!9473 = !DILocation(line: 668, column: 16, scope: !9468)
!9474 = !DILocation(line: 670, column: 6, scope: !9468)
!9475 = !DILocation(line: 670, column: 4, scope: !9468)
!9476 = !DILocation(line: 671, column: 2, scope: !9468)
!9477 = !DILocation(line: 672, column: 9, scope: !9468)
!9478 = !DILocation(line: 672, column: 2, scope: !9468)
!9479 = distinct !DISubprogram(name: "__ata_qc_from_tag", scope: !183, file: !183, line: 1732, type: !9480, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9480 = !DISubroutineType(types: !9481)
!9481 = !{!6369, !1005, !7}
!9482 = !DILocalVariable(name: "ap", arg: 1, scope: !9479, file: !183, line: 1732, type: !1005)
!9483 = !DILocation(line: 1732, column: 73, scope: !9479)
!9484 = !DILocalVariable(name: "tag", arg: 2, scope: !9479, file: !183, line: 1733, type: !7)
!9485 = !DILocation(line: 1733, column: 27, scope: !9479)
!9486 = !DILocation(line: 1735, column: 20, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9479, file: !183, line: 1735, column: 6)
!9488 = !DILocation(line: 1735, column: 6, scope: !9487)
!9489 = !DILocation(line: 1735, column: 6, scope: !9479)
!9490 = !DILocation(line: 1736, column: 11, scope: !9487)
!9491 = !DILocation(line: 1736, column: 15, scope: !9487)
!9492 = !DILocation(line: 1736, column: 20, scope: !9487)
!9493 = !DILocation(line: 1736, column: 3, scope: !9487)
!9494 = !DILocation(line: 1737, column: 2, scope: !9479)
!9495 = !DILocation(line: 1738, column: 1, scope: !9479)
!9496 = distinct !DISubprogram(name: "ata_qc_reinit", scope: !183, file: !183, line: 1775, type: !6575, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9497 = !DILocalVariable(name: "qc", arg: 1, scope: !9496, file: !183, line: 1775, type: !6369)
!9498 = !DILocation(line: 1775, column: 57, scope: !9496)
!9499 = !DILocation(line: 1777, column: 2, scope: !9496)
!9500 = !DILocation(line: 1777, column: 6, scope: !9496)
!9501 = !DILocation(line: 1777, column: 14, scope: !9496)
!9502 = !DILocation(line: 1778, column: 2, scope: !9496)
!9503 = !DILocation(line: 1778, column: 6, scope: !9496)
!9504 = !DILocation(line: 1778, column: 9, scope: !9496)
!9505 = !DILocation(line: 1779, column: 2, scope: !9496)
!9506 = !DILocation(line: 1779, column: 6, scope: !9496)
!9507 = !DILocation(line: 1779, column: 12, scope: !9496)
!9508 = !DILocation(line: 1780, column: 2, scope: !9496)
!9509 = !DILocation(line: 1780, column: 6, scope: !9496)
!9510 = !DILocation(line: 1780, column: 12, scope: !9496)
!9511 = !DILocation(line: 1781, column: 2, scope: !9496)
!9512 = !DILocation(line: 1781, column: 6, scope: !9496)
!9513 = !DILocation(line: 1781, column: 16, scope: !9496)
!9514 = !DILocation(line: 1782, column: 32, scope: !9496)
!9515 = !DILocation(line: 1782, column: 36, scope: !9496)
!9516 = !DILocation(line: 1782, column: 45, scope: !9496)
!9517 = !DILocation(line: 1782, column: 15, scope: !9496)
!9518 = !DILocation(line: 1782, column: 19, scope: !9496)
!9519 = !DILocation(line: 1782, column: 30, scope: !9496)
!9520 = !DILocation(line: 1782, column: 2, scope: !9496)
!9521 = !DILocation(line: 1782, column: 6, scope: !9496)
!9522 = !DILocation(line: 1782, column: 13, scope: !9496)
!9523 = !DILocation(line: 1783, column: 2, scope: !9496)
!9524 = !DILocation(line: 1783, column: 6, scope: !9496)
!9525 = !DILocation(line: 1783, column: 13, scope: !9496)
!9526 = !DILocation(line: 1784, column: 2, scope: !9496)
!9527 = !DILocation(line: 1784, column: 6, scope: !9496)
!9528 = !DILocation(line: 1784, column: 15, scope: !9496)
!9529 = !DILocation(line: 1785, column: 2, scope: !9496)
!9530 = !DILocation(line: 1785, column: 6, scope: !9496)
!9531 = !DILocation(line: 1785, column: 16, scope: !9496)
!9532 = !DILocation(line: 1787, column: 14, scope: !9496)
!9533 = !DILocation(line: 1787, column: 18, scope: !9496)
!9534 = !DILocation(line: 1787, column: 24, scope: !9496)
!9535 = !DILocation(line: 1787, column: 28, scope: !9496)
!9536 = !DILocation(line: 1787, column: 2, scope: !9496)
!9537 = !DILocation(line: 1790, column: 2, scope: !9496)
!9538 = !DILocation(line: 1790, column: 6, scope: !9496)
!9539 = !DILocation(line: 1790, column: 16, scope: !9496)
!9540 = !DILocation(line: 1790, column: 24, scope: !9496)
!9541 = !DILocation(line: 1791, column: 2, scope: !9496)
!9542 = !DILocation(line: 1791, column: 6, scope: !9496)
!9543 = !DILocation(line: 1791, column: 16, scope: !9496)
!9544 = !DILocation(line: 1791, column: 24, scope: !9496)
!9545 = !DILocation(line: 1792, column: 1, scope: !9496)
!9546 = distinct !DISubprogram(name: "ata_sg_init", scope: !3, file: !3, line: 4395, type: !9547, scopeLine: 4397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9547 = !DISubroutineType(types: !9548)
!9548 = !{null, !6369, !6148, !7}
!9549 = !DILocalVariable(name: "qc", arg: 1, scope: !9546, file: !3, line: 4395, type: !6369)
!9550 = !DILocation(line: 4395, column: 41, scope: !9546)
!9551 = !DILocalVariable(name: "sg", arg: 2, scope: !9546, file: !3, line: 4395, type: !6148)
!9552 = !DILocation(line: 4395, column: 65, scope: !9546)
!9553 = !DILocalVariable(name: "n_elem", arg: 3, scope: !9546, file: !3, line: 4396, type: !7)
!9554 = !DILocation(line: 4396, column: 17, scope: !9546)
!9555 = !DILocation(line: 4398, column: 11, scope: !9546)
!9556 = !DILocation(line: 4398, column: 2, scope: !9546)
!9557 = !DILocation(line: 4398, column: 6, scope: !9546)
!9558 = !DILocation(line: 4398, column: 9, scope: !9546)
!9559 = !DILocation(line: 4399, column: 15, scope: !9546)
!9560 = !DILocation(line: 4399, column: 2, scope: !9546)
!9561 = !DILocation(line: 4399, column: 6, scope: !9546)
!9562 = !DILocation(line: 4399, column: 13, scope: !9546)
!9563 = !DILocation(line: 4400, column: 14, scope: !9546)
!9564 = !DILocation(line: 4400, column: 18, scope: !9546)
!9565 = !DILocation(line: 4400, column: 2, scope: !9546)
!9566 = !DILocation(line: 4400, column: 6, scope: !9546)
!9567 = !DILocation(line: 4400, column: 12, scope: !9546)
!9568 = !DILocation(line: 4401, column: 1, scope: !9546)
!9569 = distinct !DISubprogram(name: "ata_qc_complete_internal", scope: !3, file: !3, line: 1462, type: !6575, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9570 = !DILocalVariable(name: "qc", arg: 1, scope: !9569, file: !3, line: 1462, type: !6369)
!9571 = !DILocation(line: 1462, column: 61, scope: !9569)
!9572 = !DILocalVariable(name: "waiting", scope: !9569, file: !3, line: 1464, type: !2306)
!9573 = !DILocation(line: 1464, column: 21, scope: !9569)
!9574 = !DILocation(line: 1464, column: 31, scope: !9569)
!9575 = !DILocation(line: 1464, column: 35, scope: !9569)
!9576 = !DILocation(line: 1466, column: 11, scope: !9569)
!9577 = !DILocation(line: 1466, column: 2, scope: !9569)
!9578 = !DILocation(line: 1467, column: 1, scope: !9569)
!9579 = distinct !DISubprogram(name: "ata_qc_issue", scope: !3, file: !3, line: 4762, type: !6575, scopeLine: 4763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9580 = !DILocalVariable(name: "qc", arg: 1, scope: !9579, file: !3, line: 4762, type: !6369)
!9581 = !DILocation(line: 4762, column: 42, scope: !9579)
!9582 = !DILocalVariable(name: "ap", scope: !9579, file: !3, line: 4764, type: !1005)
!9583 = !DILocation(line: 4764, column: 19, scope: !9579)
!9584 = !DILocation(line: 4764, column: 24, scope: !9579)
!9585 = !DILocation(line: 4764, column: 28, scope: !9579)
!9586 = !DILocalVariable(name: "link", scope: !9579, file: !3, line: 4765, type: !6378)
!9587 = !DILocation(line: 4765, column: 19, scope: !9579)
!9588 = !DILocation(line: 4765, column: 26, scope: !9579)
!9589 = !DILocation(line: 4765, column: 30, scope: !9579)
!9590 = !DILocation(line: 4765, column: 35, scope: !9579)
!9591 = !DILocalVariable(name: "prot", scope: !9579, file: !3, line: 4766, type: !1216)
!9592 = !DILocation(line: 4766, column: 5, scope: !9579)
!9593 = !DILocation(line: 4766, column: 12, scope: !9579)
!9594 = !DILocation(line: 4766, column: 16, scope: !9579)
!9595 = !DILocation(line: 4766, column: 19, scope: !9579)
!9596 = !DILocalVariable(name: "__ret_warn_on", scope: !9597, file: !3, line: 4772, type: !223)
!9597 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 4772, column: 2)
!9598 = !DILocation(line: 4772, column: 2, scope: !9597)
!9599 = !DILocation(line: 0, scope: !9597)
!9600 = !DILocation(line: 4772, column: 2, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 4772, column: 2)
!9602 = !DILocation(line: 4772, column: 2, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 4772, column: 2)
!9604 = !DILocation(line: 4772, column: 2, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 4772, column: 2)
!9606 = !DILocation(line: 4772, column: 2, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 4772, column: 2)
!9608 = !{i32 -2139212164, i32 -2139212135, i32 -2139212089, i32 -2139212031, i32 -2139211977, i32 -2139211923, i32 -2139211868, i32 -2139211837}
!9609 = !DILocation(line: 4772, column: 2, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 4772, column: 2)
!9611 = !{i32 -2139211418, i32 -2139211411, i32 -2139211359, i32 -2139211328, i32 -2139211298}
!9612 = !DILocation(line: 4772, column: 2, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 4772, column: 2)
!9614 = !DILocation(line: 4774, column: 17, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 4774, column: 6)
!9616 = !DILocation(line: 4774, column: 6, scope: !9615)
!9617 = !DILocation(line: 4774, column: 6, scope: !9579)
!9618 = !DILocalVariable(name: "__ret_warn_on", scope: !9619, file: !3, line: 4775, type: !223)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 4775, column: 3)
!9620 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 4774, column: 24)
!9621 = !DILocation(line: 4775, column: 3, scope: !9619)
!9622 = !DILocation(line: 4775, column: 3, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 4775, column: 3)
!9624 = !DILocation(line: 4775, column: 3, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9623, file: !3, line: 4775, column: 3)
!9626 = !DILocation(line: 4775, column: 3, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4775, column: 3)
!9628 = !DILocation(line: 4775, column: 3, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4775, column: 3)
!9630 = !{i32 -2139210665, i32 -2139210636, i32 -2139210590, i32 -2139210532, i32 -2139210478, i32 -2139210424, i32 -2139210369, i32 -2139210338}
!9631 = !DILocation(line: 4775, column: 3, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4775, column: 3)
!9633 = !{i32 -2139209919, i32 -2139209912, i32 -2139209860, i32 -2139209829, i32 -2139209799}
!9634 = !DILocation(line: 4775, column: 3, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4775, column: 3)
!9636 = !DILocation(line: 4777, column: 8, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 4777, column: 7)
!9638 = !DILocation(line: 4777, column: 14, scope: !9637)
!9639 = !DILocation(line: 4777, column: 7, scope: !9620)
!9640 = !DILocation(line: 4778, column: 4, scope: !9637)
!9641 = !DILocation(line: 4778, column: 8, scope: !9637)
!9642 = !DILocation(line: 4778, column: 23, scope: !9637)
!9643 = !DILocation(line: 4779, column: 25, scope: !9620)
!9644 = !DILocation(line: 4779, column: 29, scope: !9620)
!9645 = !DILocation(line: 4779, column: 22, scope: !9620)
!9646 = !DILocation(line: 4779, column: 3, scope: !9620)
!9647 = !DILocation(line: 4779, column: 9, scope: !9620)
!9648 = !DILocation(line: 4779, column: 17, scope: !9620)
!9649 = !DILocation(line: 4780, column: 2, scope: !9620)
!9650 = !DILocalVariable(name: "__ret_warn_on", scope: !9651, file: !3, line: 4781, type: !223)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 4781, column: 3)
!9652 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 4780, column: 9)
!9653 = !DILocation(line: 4781, column: 3, scope: !9651)
!9654 = !DILocation(line: 4781, column: 3, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 4781, column: 3)
!9656 = !DILocation(line: 4781, column: 3, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 4781, column: 3)
!9658 = !DILocation(line: 4781, column: 3, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 4781, column: 3)
!9660 = !DILocation(line: 4781, column: 3, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 4781, column: 3)
!9662 = !{i32 -2139209186, i32 -2139209157, i32 -2139209111, i32 -2139209053, i32 -2139208999, i32 -2139208945, i32 -2139208890, i32 -2139208859}
!9663 = !DILocation(line: 4781, column: 3, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 4781, column: 3)
!9665 = !{i32 -2139208440, i32 -2139208433, i32 -2139208381, i32 -2139208350, i32 -2139208320}
!9666 = !DILocation(line: 4781, column: 3, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 4781, column: 3)
!9668 = !DILocation(line: 4783, column: 3, scope: !9652)
!9669 = !DILocation(line: 4783, column: 7, scope: !9652)
!9670 = !DILocation(line: 4783, column: 22, scope: !9652)
!9671 = !DILocation(line: 4784, column: 22, scope: !9652)
!9672 = !DILocation(line: 4784, column: 26, scope: !9652)
!9673 = !DILocation(line: 4784, column: 3, scope: !9652)
!9674 = !DILocation(line: 4784, column: 9, scope: !9652)
!9675 = !DILocation(line: 4784, column: 20, scope: !9652)
!9676 = !DILocation(line: 4787, column: 2, scope: !9579)
!9677 = !DILocation(line: 4787, column: 6, scope: !9579)
!9678 = !DILocation(line: 4787, column: 12, scope: !9579)
!9679 = !DILocation(line: 4788, column: 27, scope: !9579)
!9680 = !DILocation(line: 4788, column: 31, scope: !9579)
!9681 = !DILocation(line: 4788, column: 24, scope: !9579)
!9682 = !DILocation(line: 4788, column: 2, scope: !9579)
!9683 = !DILocation(line: 4788, column: 6, scope: !9579)
!9684 = !DILocation(line: 4788, column: 16, scope: !9579)
!9685 = !DILocation(line: 4794, column: 18, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 4794, column: 6)
!9687 = !DILocation(line: 4794, column: 6, scope: !9686)
!9688 = !DILocation(line: 4794, column: 24, scope: !9686)
!9689 = !DILocation(line: 4794, column: 29, scope: !9686)
!9690 = !DILocation(line: 4794, column: 33, scope: !9686)
!9691 = !DILocation(line: 4794, column: 36, scope: !9686)
!9692 = !DILocation(line: 4794, column: 40, scope: !9686)
!9693 = !DILocation(line: 4794, column: 44, scope: !9686)
!9694 = !DILocation(line: 4794, column: 51, scope: !9686)
!9695 = !DILocation(line: 4794, column: 55, scope: !9686)
!9696 = !DILocation(line: 4794, column: 59, scope: !9686)
!9697 = !DILocation(line: 4794, column: 6, scope: !9579)
!9698 = !DILocation(line: 4795, column: 3, scope: !9686)
!9699 = !DILocation(line: 4797, column: 17, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 4797, column: 6)
!9701 = !DILocation(line: 4797, column: 6, scope: !9700)
!9702 = !DILocation(line: 4797, column: 23, scope: !9700)
!9703 = !DILocation(line: 4797, column: 38, scope: !9700)
!9704 = !DILocation(line: 4797, column: 27, scope: !9700)
!9705 = !DILocation(line: 4797, column: 44, scope: !9700)
!9706 = !DILocation(line: 4798, column: 7, scope: !9700)
!9707 = !DILocation(line: 4798, column: 11, scope: !9700)
!9708 = !DILocation(line: 4798, column: 17, scope: !9700)
!9709 = !DILocation(line: 4797, column: 6, scope: !9579)
!9710 = !DILocation(line: 4799, column: 20, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 4799, column: 7)
!9712 = !DILocation(line: 4799, column: 7, scope: !9711)
!9713 = !DILocation(line: 4799, column: 7, scope: !9700)
!9714 = !DILocation(line: 4800, column: 4, scope: !9711)
!9715 = !DILocation(line: 4799, column: 22, scope: !9711)
!9716 = !DILocation(line: 4803, column: 6, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 4803, column: 6)
!9718 = !DILocation(line: 4803, column: 6, scope: !9579)
!9719 = !DILocation(line: 4804, column: 3, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 4803, column: 53)
!9721 = !DILocation(line: 4804, column: 9, scope: !9720)
!9722 = !DILocation(line: 4804, column: 17, scope: !9720)
!9723 = !DILocation(line: 4804, column: 24, scope: !9720)
!9724 = !DILocation(line: 4805, column: 22, scope: !9720)
!9725 = !DILocation(line: 4805, column: 28, scope: !9720)
!9726 = !DILocation(line: 4805, column: 3, scope: !9720)
!9727 = !DILocation(line: 4806, column: 18, scope: !9720)
!9728 = !DILocation(line: 4806, column: 3, scope: !9720)
!9729 = !DILocation(line: 4807, column: 3, scope: !9720)
!9730 = !DILocation(line: 4810, column: 18, scope: !9579)
!9731 = !DILocation(line: 4810, column: 22, scope: !9579)
!9732 = !DILocation(line: 4810, column: 27, scope: !9579)
!9733 = !DILocation(line: 4810, column: 35, scope: !9579)
!9734 = !DILocation(line: 4810, column: 2, scope: !9579)
!9735 = !DILocation(line: 4810, column: 6, scope: !9579)
!9736 = !DILocation(line: 4810, column: 15, scope: !9579)
!9737 = !DILocation(line: 4811, column: 6, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 4811, column: 6)
!9739 = !DILocation(line: 4811, column: 6, scope: !9579)
!9740 = !DILocation(line: 4812, column: 3, scope: !9738)
!9741 = !DILocation(line: 4813, column: 21, scope: !9579)
!9742 = !DILocation(line: 4813, column: 2, scope: !9579)
!9743 = !DILocation(line: 4814, column: 18, scope: !9579)
!9744 = !DILocation(line: 4814, column: 22, scope: !9579)
!9745 = !DILocation(line: 4814, column: 27, scope: !9579)
!9746 = !DILocation(line: 4814, column: 36, scope: !9579)
!9747 = !DILocation(line: 4814, column: 2, scope: !9579)
!9748 = !DILocation(line: 4814, column: 6, scope: !9579)
!9749 = !DILocation(line: 4814, column: 15, scope: !9579)
!9750 = !DILocation(line: 4815, column: 6, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 4815, column: 6)
!9752 = !DILocation(line: 4815, column: 6, scope: !9579)
!9753 = !DILocation(line: 4816, column: 3, scope: !9751)
!9754 = !DILocation(line: 4817, column: 2, scope: !9579)
!9755 = !DILabel(scope: !9579, name: "sys_err", file: !3, line: 4819)
!9756 = !DILocation(line: 4819, column: 1, scope: !9579)
!9757 = !DILocation(line: 4820, column: 2, scope: !9579)
!9758 = !DILocation(line: 4820, column: 6, scope: !9579)
!9759 = !DILocation(line: 4820, column: 15, scope: !9579)
!9760 = !DILabel(scope: !9579, name: "err", file: !3, line: 4821)
!9761 = !DILocation(line: 4821, column: 1, scope: !9579)
!9762 = !DILocation(line: 4822, column: 18, scope: !9579)
!9763 = !DILocation(line: 4822, column: 2, scope: !9579)
!9764 = !DILocation(line: 4823, column: 1, scope: !9579)
!9765 = distinct !DISubprogram(name: "ata_qc_complete", scope: !3, file: !3, line: 4630, type: !6575, scopeLine: 4631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9766 = !DILocalVariable(name: "qc", arg: 1, scope: !9765, file: !3, line: 4630, type: !6369)
!9767 = !DILocation(line: 4630, column: 45, scope: !9765)
!9768 = !DILocalVariable(name: "ap", scope: !9765, file: !3, line: 4632, type: !1005)
!9769 = !DILocation(line: 4632, column: 19, scope: !9765)
!9770 = !DILocation(line: 4632, column: 24, scope: !9765)
!9771 = !DILocation(line: 4632, column: 28, scope: !9765)
!9772 = !DILocation(line: 4635, column: 27, scope: !9765)
!9773 = !DILocation(line: 4635, column: 31, scope: !9765)
!9774 = !DILocation(line: 4635, column: 34, scope: !9765)
!9775 = !DILocation(line: 4635, column: 40, scope: !9765)
!9776 = !DILocation(line: 4635, column: 25, scope: !9765)
!9777 = !DILocation(line: 4635, column: 24, scope: !9765)
!9778 = !DILocation(line: 4635, column: 2, scope: !9765)
!9779 = !DILocation(line: 4650, column: 6, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 4650, column: 6)
!9781 = !DILocation(line: 4650, column: 10, scope: !9780)
!9782 = !DILocation(line: 4650, column: 15, scope: !9780)
!9783 = !DILocation(line: 4650, column: 6, scope: !9765)
!9784 = !DILocalVariable(name: "dev", scope: !9785, file: !3, line: 4651, type: !6374)
!9785 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 4650, column: 30)
!9786 = !DILocation(line: 4651, column: 22, scope: !9785)
!9787 = !DILocation(line: 4651, column: 28, scope: !9785)
!9788 = !DILocation(line: 4651, column: 32, scope: !9785)
!9789 = !DILocalVariable(name: "ehi", scope: !9785, file: !3, line: 4652, type: !9790)
!9790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6393, size: 64)
!9791 = !DILocation(line: 4652, column: 23, scope: !9785)
!9792 = !DILocation(line: 4652, column: 30, scope: !9785)
!9793 = !DILocation(line: 4652, column: 35, scope: !9785)
!9794 = !DILocation(line: 4652, column: 41, scope: !9785)
!9795 = !DILocation(line: 4654, column: 7, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 4654, column: 7)
!9797 = !DILocation(line: 4654, column: 7, scope: !9785)
!9798 = !DILocation(line: 4655, column: 4, scope: !9796)
!9799 = !DILocation(line: 4655, column: 8, scope: !9796)
!9800 = !DILocation(line: 4655, column: 14, scope: !9796)
!9801 = !DILocation(line: 4661, column: 7, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 4661, column: 7)
!9803 = !DILocation(line: 4661, column: 7, scope: !9785)
!9804 = !DILocation(line: 4662, column: 19, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 4661, column: 44)
!9806 = !DILocation(line: 4662, column: 4, scope: !9805)
!9807 = !DILocation(line: 4663, column: 35, scope: !9805)
!9808 = !DILocation(line: 4663, column: 4, scope: !9805)
!9809 = !DILocation(line: 4664, column: 22, scope: !9805)
!9810 = !DILocation(line: 4664, column: 4, scope: !9805)
!9811 = !DILocation(line: 4665, column: 4, scope: !9805)
!9812 = !DILocation(line: 4672, column: 7, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 4672, column: 7)
!9814 = !DILocation(line: 4672, column: 7, scope: !9785)
!9815 = !DILocation(line: 4673, column: 19, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 4672, column: 48)
!9817 = !DILocation(line: 4673, column: 4, scope: !9816)
!9818 = !DILocation(line: 4674, column: 33, scope: !9816)
!9819 = !DILocation(line: 4674, column: 4, scope: !9816)
!9820 = !DILocation(line: 4675, column: 23, scope: !9816)
!9821 = !DILocation(line: 4675, column: 4, scope: !9816)
!9822 = !DILocation(line: 4676, column: 4, scope: !9816)
!9823 = !DILocalVariable(name: "__ret_warn_on", scope: !9824, file: !3, line: 4679, type: !223)
!9824 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 4679, column: 3)
!9825 = !DILocation(line: 4679, column: 3, scope: !9824)
!9826 = !DILocation(line: 4679, column: 3, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 4679, column: 3)
!9828 = !DILocation(line: 4679, column: 3, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 4679, column: 3)
!9830 = !DILocation(line: 4679, column: 3, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4679, column: 3)
!9832 = !DILocation(line: 4679, column: 3, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4679, column: 3)
!9834 = !{i32 -2139213981, i32 -2139213952, i32 -2139213906, i32 -2139213848, i32 -2139213794, i32 -2139213740, i32 -2139213685, i32 -2139213654}
!9835 = !DILocation(line: 4679, column: 3, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4679, column: 3)
!9837 = !{i32 -2139213235, i32 -2139213228, i32 -2139213176, i32 -2139213145, i32 -2139213115}
!9838 = !DILocation(line: 4679, column: 3, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4679, column: 3)
!9840 = !DILocation(line: 4682, column: 7, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 4682, column: 7)
!9842 = !DILocation(line: 4682, column: 11, scope: !9841)
!9843 = !DILocation(line: 4682, column: 17, scope: !9841)
!9844 = !DILocation(line: 4682, column: 7, scope: !9785)
!9845 = !DILocation(line: 4683, column: 19, scope: !9841)
!9846 = !DILocation(line: 4683, column: 4, scope: !9841)
!9847 = !DILocation(line: 4685, column: 30, scope: !9785)
!9848 = !DILocation(line: 4685, column: 3, scope: !9785)
!9849 = !DILocation(line: 4689, column: 11, scope: !9785)
!9850 = !DILocation(line: 4689, column: 15, scope: !9785)
!9851 = !DILocation(line: 4689, column: 18, scope: !9785)
!9852 = !DILocation(line: 4689, column: 3, scope: !9785)
!9853 = !DILocation(line: 4691, column: 8, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 4691, column: 8)
!9855 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 4689, column: 27)
!9856 = !DILocation(line: 4691, column: 12, scope: !9854)
!9857 = !DILocation(line: 4691, column: 15, scope: !9854)
!9858 = !DILocation(line: 4691, column: 23, scope: !9854)
!9859 = !DILocation(line: 4691, column: 44, scope: !9854)
!9860 = !DILocation(line: 4692, column: 8, scope: !9854)
!9861 = !DILocation(line: 4692, column: 12, scope: !9854)
!9862 = !DILocation(line: 4692, column: 15, scope: !9854)
!9863 = !DILocation(line: 4692, column: 23, scope: !9854)
!9864 = !DILocation(line: 4692, column: 45, scope: !9854)
!9865 = !DILocation(line: 4693, column: 8, scope: !9854)
!9866 = !DILocation(line: 4693, column: 12, scope: !9854)
!9867 = !DILocation(line: 4693, column: 15, scope: !9854)
!9868 = !DILocation(line: 4693, column: 23, scope: !9854)
!9869 = !DILocation(line: 4693, column: 44, scope: !9854)
!9870 = !DILocation(line: 4694, column: 8, scope: !9854)
!9871 = !DILocation(line: 4694, column: 12, scope: !9854)
!9872 = !DILocation(line: 4694, column: 15, scope: !9854)
!9873 = !DILocation(line: 4694, column: 23, scope: !9854)
!9874 = !DILocation(line: 4691, column: 8, scope: !9855)
!9875 = !DILocation(line: 4695, column: 5, scope: !9854)
!9876 = !DILocation(line: 4694, column: 26, scope: !9854)
!9877 = !DILocation(line: 4700, column: 4, scope: !9855)
!9878 = !DILocation(line: 4700, column: 9, scope: !9855)
!9879 = !DILocation(line: 4700, column: 20, scope: !9855)
!9880 = !DILocation(line: 4700, column: 25, scope: !9855)
!9881 = !DILocation(line: 4700, column: 32, scope: !9855)
!9882 = !DILocation(line: 4701, column: 25, scope: !9855)
!9883 = !DILocation(line: 4701, column: 4, scope: !9855)
!9884 = !DILocation(line: 4702, column: 4, scope: !9855)
!9885 = !DILocation(line: 4705, column: 4, scope: !9855)
!9886 = !DILocation(line: 4705, column: 9, scope: !9855)
!9887 = !DILocation(line: 4705, column: 15, scope: !9855)
!9888 = !DILocation(line: 4706, column: 4, scope: !9855)
!9889 = !DILocation(line: 4709, column: 7, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 4709, column: 7)
!9891 = !DILocation(line: 4709, column: 7, scope: !9785)
!9892 = !DILocation(line: 4710, column: 20, scope: !9890)
!9893 = !DILocation(line: 4710, column: 4, scope: !9890)
!9894 = !DILocation(line: 4712, column: 21, scope: !9785)
!9895 = !DILocation(line: 4712, column: 3, scope: !9785)
!9896 = !DILocation(line: 4713, column: 2, scope: !9785)
!9897 = !DILocation(line: 4714, column: 7, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 4714, column: 7)
!9899 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 4713, column: 9)
!9900 = !DILocation(line: 4714, column: 11, scope: !9898)
!9901 = !DILocation(line: 4714, column: 17, scope: !9898)
!9902 = !DILocation(line: 4714, column: 7, scope: !9899)
!9903 = !DILocation(line: 4715, column: 4, scope: !9898)
!9904 = !DILocation(line: 4718, column: 7, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 4718, column: 7)
!9906 = !DILocation(line: 4718, column: 11, scope: !9905)
!9907 = !DILocation(line: 4718, column: 20, scope: !9905)
!9908 = !DILocation(line: 4718, column: 23, scope: !9905)
!9909 = !DILocation(line: 4718, column: 27, scope: !9905)
!9910 = !DILocation(line: 4718, column: 33, scope: !9905)
!9911 = !DILocation(line: 4718, column: 7, scope: !9899)
!9912 = !DILocation(line: 4719, column: 19, scope: !9905)
!9913 = !DILocation(line: 4719, column: 4, scope: !9905)
!9914 = !DILocation(line: 4721, column: 21, scope: !9899)
!9915 = !DILocation(line: 4721, column: 3, scope: !9899)
!9916 = !DILocation(line: 4723, column: 1, scope: !9765)
!9917 = distinct !DISubprogram(name: "ata_qc_free", scope: !3, file: !3, line: 4538, type: !6575, scopeLine: 4539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9918 = !DILocalVariable(name: "qc", arg: 1, scope: !9917, file: !3, line: 4538, type: !6369)
!9919 = !DILocation(line: 4538, column: 41, scope: !9917)
!9920 = !DILocalVariable(name: "ap", scope: !9917, file: !3, line: 4540, type: !1005)
!9921 = !DILocation(line: 4540, column: 19, scope: !9917)
!9922 = !DILocalVariable(name: "tag", scope: !9917, file: !3, line: 4541, type: !7)
!9923 = !DILocation(line: 4541, column: 15, scope: !9917)
!9924 = !DILocalVariable(name: "__ret_warn_on", scope: !9925, file: !3, line: 4543, type: !223)
!9925 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 4543, column: 2)
!9926 = !DILocation(line: 4543, column: 2, scope: !9925)
!9927 = !DILocation(line: 4543, column: 2, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 4543, column: 2)
!9929 = !DILocation(line: 4543, column: 2, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 4543, column: 2)
!9931 = !DILocation(line: 4543, column: 2, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4543, column: 2)
!9933 = !DILocation(line: 4543, column: 2, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4543, column: 2)
!9935 = !{i32 -2139218805, i32 -2139218776, i32 -2139218730, i32 -2139218672, i32 -2139218618, i32 -2139218564, i32 -2139218509, i32 -2139218478}
!9936 = !DILocation(line: 4543, column: 2, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4543, column: 2)
!9938 = !{i32 -2139218059, i32 -2139218052, i32 -2139218000, i32 -2139217969, i32 -2139217939}
!9939 = !DILocation(line: 4543, column: 2, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4543, column: 2)
!9941 = !DILocation(line: 4544, column: 7, scope: !9917)
!9942 = !DILocation(line: 4544, column: 11, scope: !9917)
!9943 = !DILocation(line: 4544, column: 5, scope: !9917)
!9944 = !DILocation(line: 4546, column: 2, scope: !9917)
!9945 = !DILocation(line: 4546, column: 6, scope: !9917)
!9946 = !DILocation(line: 4546, column: 12, scope: !9917)
!9947 = !DILocation(line: 4547, column: 8, scope: !9917)
!9948 = !DILocation(line: 4547, column: 12, scope: !9917)
!9949 = !DILocation(line: 4547, column: 6, scope: !9917)
!9950 = !DILocation(line: 4548, column: 20, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 4548, column: 6)
!9952 = !DILocation(line: 4548, column: 6, scope: !9951)
!9953 = !DILocation(line: 4548, column: 6, scope: !9917)
!9954 = !DILocation(line: 4549, column: 3, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 4548, column: 26)
!9956 = !DILocation(line: 4549, column: 7, scope: !9955)
!9957 = !DILocation(line: 4549, column: 11, scope: !9955)
!9958 = !DILocation(line: 4550, column: 7, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 4550, column: 7)
!9960 = !DILocation(line: 4550, column: 11, scope: !9959)
!9961 = !DILocation(line: 4550, column: 17, scope: !9959)
!9962 = !DILocation(line: 4550, column: 7, scope: !9955)
!9963 = !DILocation(line: 4551, column: 21, scope: !9959)
!9964 = !DILocation(line: 4551, column: 26, scope: !9959)
!9965 = !DILocation(line: 4551, column: 4, scope: !9959)
!9966 = !DILocation(line: 4552, column: 2, scope: !9955)
!9967 = !DILocation(line: 4553, column: 1, scope: !9917)
!9968 = distinct !DISubprogram(name: "ata_exec_internal", scope: !3, file: !3, line: 1667, type: !9969, scopeLine: 1671, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!9969 = !DISubroutineType(types: !9970)
!9970 = !{!7, !6374, !6614, !8965, !223, !991, !7, !994}
!9971 = !DILocalVariable(name: "dev", arg: 1, scope: !9968, file: !3, line: 1667, type: !6374)
!9972 = !DILocation(line: 1667, column: 47, scope: !9968)
!9973 = !DILocalVariable(name: "tf", arg: 2, scope: !9968, file: !3, line: 1668, type: !6614)
!9974 = !DILocation(line: 1668, column: 28, scope: !9968)
!9975 = !DILocalVariable(name: "cdb", arg: 3, scope: !9968, file: !3, line: 1668, type: !8965)
!9976 = !DILocation(line: 1668, column: 42, scope: !9968)
!9977 = !DILocalVariable(name: "dma_dir", arg: 4, scope: !9968, file: !3, line: 1669, type: !223)
!9978 = !DILocation(line: 1669, column: 11, scope: !9968)
!9979 = !DILocalVariable(name: "buf", arg: 5, scope: !9968, file: !3, line: 1669, type: !991)
!9980 = !DILocation(line: 1669, column: 26, scope: !9968)
!9981 = !DILocalVariable(name: "buflen", arg: 6, scope: !9968, file: !3, line: 1669, type: !7)
!9982 = !DILocation(line: 1669, column: 44, scope: !9968)
!9983 = !DILocalVariable(name: "timeout", arg: 7, scope: !9968, file: !3, line: 1670, type: !994)
!9984 = !DILocation(line: 1670, column: 21, scope: !9968)
!9985 = !DILocalVariable(name: "psg", scope: !9968, file: !3, line: 1672, type: !6148)
!9986 = !DILocation(line: 1672, column: 22, scope: !9968)
!9987 = !DILocalVariable(name: "sg", scope: !9968, file: !3, line: 1672, type: !6149)
!9988 = !DILocation(line: 1672, column: 34, scope: !9968)
!9989 = !DILocalVariable(name: "n_elem", scope: !9968, file: !3, line: 1673, type: !7)
!9990 = !DILocation(line: 1673, column: 15, scope: !9968)
!9991 = !DILocation(line: 1675, column: 6, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 1675, column: 6)
!9993 = !DILocation(line: 1675, column: 14, scope: !9992)
!9994 = !DILocation(line: 1675, column: 6, scope: !9968)
!9995 = !DILocalVariable(name: "__ret_warn_on", scope: !9996, file: !3, line: 1676, type: !223)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1676, column: 3)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 1675, column: 27)
!9998 = !DILocation(line: 1676, column: 3, scope: !9996)
!9999 = !DILocation(line: 1676, column: 3, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 1676, column: 3)
!10001 = !DILocation(line: 1676, column: 3, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 1676, column: 3)
!10003 = !DILocation(line: 1676, column: 3, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 1676, column: 3)
!10005 = !DILocation(line: 1676, column: 3, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 1676, column: 3)
!10007 = !{i32 -2139254671, i32 -2139254642, i32 -2139254596, i32 -2139254538, i32 -2139254484, i32 -2139254430, i32 -2139254375, i32 -2139254344}
!10008 = !DILocation(line: 1676, column: 3, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 1676, column: 3)
!10010 = !{i32 -2139253936, i32 -2139253929, i32 -2139253877, i32 -2139253846, i32 -2139253816}
!10011 = !DILocation(line: 1676, column: 3, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 1676, column: 3)
!10013 = !DILocation(line: 1677, column: 20, scope: !9997)
!10014 = !DILocation(line: 1677, column: 25, scope: !9997)
!10015 = !DILocation(line: 1677, column: 3, scope: !9997)
!10016 = !DILocation(line: 1678, column: 7, scope: !9997)
!10017 = !DILocation(line: 1679, column: 9, scope: !9997)
!10018 = !DILocation(line: 1680, column: 2, scope: !9997)
!10019 = !DILocation(line: 1682, column: 30, scope: !9968)
!10020 = !DILocation(line: 1682, column: 35, scope: !9968)
!10021 = !DILocation(line: 1682, column: 39, scope: !9968)
!10022 = !DILocation(line: 1682, column: 44, scope: !9968)
!10023 = !DILocation(line: 1682, column: 53, scope: !9968)
!10024 = !DILocation(line: 1682, column: 58, scope: !9968)
!10025 = !DILocation(line: 1683, column: 9, scope: !9968)
!10026 = !DILocation(line: 1682, column: 9, scope: !9968)
!10027 = !DILocation(line: 1682, column: 2, scope: !9968)
!10028 = distinct !DISubprogram(name: "ata_pio_need_iordy", scope: !3, file: !3, line: 1693, type: !7630, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10029 = !DILocalVariable(name: "adev", arg: 1, scope: !10028, file: !3, line: 1693, type: !7632)
!10030 = !DILocation(line: 1693, column: 58, scope: !10028)
!10031 = !DILocation(line: 1699, column: 6, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1699, column: 6)
!10033 = !DILocation(line: 1699, column: 12, scope: !10032)
!10034 = !DILocation(line: 1699, column: 18, scope: !10032)
!10035 = !DILocation(line: 1699, column: 22, scope: !10032)
!10036 = !DILocation(line: 1699, column: 29, scope: !10032)
!10037 = !DILocation(line: 1699, column: 6, scope: !10028)
!10038 = !DILocation(line: 1700, column: 3, scope: !10032)
!10039 = !DILocation(line: 1704, column: 6, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1704, column: 6)
!10041 = !DILocation(line: 1704, column: 12, scope: !10040)
!10042 = !DILocation(line: 1704, column: 18, scope: !10040)
!10043 = !DILocation(line: 1704, column: 22, scope: !10040)
!10044 = !DILocation(line: 1704, column: 28, scope: !10040)
!10045 = !DILocation(line: 1704, column: 6, scope: !10028)
!10046 = !DILocation(line: 1705, column: 3, scope: !10040)
!10047 = !DILocation(line: 1707, column: 20, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1707, column: 6)
!10049 = !DILocation(line: 1707, column: 26, scope: !10048)
!10050 = !DILocation(line: 1707, column: 6, scope: !10048)
!10051 = !DILocation(line: 1708, column: 6, scope: !10048)
!10052 = !DILocation(line: 1708, column: 10, scope: !10048)
!10053 = !DILocation(line: 1708, column: 16, scope: !10048)
!10054 = !DILocation(line: 1708, column: 25, scope: !10048)
!10055 = !DILocation(line: 1708, column: 39, scope: !10048)
!10056 = !DILocation(line: 1708, column: 42, scope: !10048)
!10057 = !DILocation(line: 1708, column: 48, scope: !10048)
!10058 = !DILocation(line: 1708, column: 57, scope: !10048)
!10059 = !DILocation(line: 1707, column: 6, scope: !10028)
!10060 = !DILocation(line: 1709, column: 3, scope: !10048)
!10061 = !DILocation(line: 1711, column: 6, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1711, column: 6)
!10063 = !DILocation(line: 1711, column: 12, scope: !10062)
!10064 = !DILocation(line: 1711, column: 21, scope: !10062)
!10065 = !DILocation(line: 1711, column: 6, scope: !10028)
!10066 = !DILocation(line: 1712, column: 3, scope: !10062)
!10067 = !DILocation(line: 1714, column: 6, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1714, column: 6)
!10069 = !DILocation(line: 1714, column: 6, scope: !10028)
!10070 = !DILocation(line: 1715, column: 3, scope: !10068)
!10071 = !DILocation(line: 1716, column: 2, scope: !10028)
!10072 = !DILocation(line: 1717, column: 1, scope: !10028)
!10073 = distinct !DISubprogram(name: "ata_do_dev_read_id", scope: !3, file: !3, line: 1753, type: !6612, scopeLine: 1755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10074 = !DILocalVariable(name: "dev", arg: 1, scope: !10073, file: !3, line: 1753, type: !6374)
!10075 = !DILocation(line: 1753, column: 52, scope: !10073)
!10076 = !DILocalVariable(name: "tf", arg: 2, scope: !10073, file: !3, line: 1754, type: !6614)
!10077 = !DILocation(line: 1754, column: 27, scope: !10073)
!10078 = !DILocalVariable(name: "id", arg: 3, scope: !10073, file: !3, line: 1754, type: !6615)
!10079 = !DILocation(line: 1754, column: 36, scope: !10073)
!10080 = !DILocation(line: 1756, column: 27, scope: !10073)
!10081 = !DILocation(line: 1756, column: 32, scope: !10073)
!10082 = !DILocation(line: 1757, column: 10, scope: !10073)
!10083 = !DILocation(line: 1756, column: 9, scope: !10073)
!10084 = !DILocation(line: 1756, column: 2, scope: !10073)
!10085 = distinct !DISubprogram(name: "ata_dev_read_id", scope: !3, file: !3, line: 1782, type: !10086, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!223, !6374, !3394, !7, !6615}
!10088 = !DILocalVariable(name: "dev", arg: 1, scope: !10085, file: !3, line: 1782, type: !6374)
!10089 = !DILocation(line: 1782, column: 40, scope: !10085)
!10090 = !DILocalVariable(name: "p_class", arg: 2, scope: !10085, file: !3, line: 1782, type: !3394)
!10091 = !DILocation(line: 1782, column: 59, scope: !10085)
!10092 = !DILocalVariable(name: "flags", arg: 3, scope: !10085, file: !3, line: 1783, type: !7)
!10093 = !DILocation(line: 1783, column: 20, scope: !10085)
!10094 = !DILocalVariable(name: "id", arg: 4, scope: !10085, file: !3, line: 1783, type: !6615)
!10095 = !DILocation(line: 1783, column: 32, scope: !10085)
!10096 = !DILocalVariable(name: "ap", scope: !10085, file: !3, line: 1785, type: !1005)
!10097 = !DILocation(line: 1785, column: 19, scope: !10085)
!10098 = !DILocation(line: 1785, column: 24, scope: !10085)
!10099 = !DILocation(line: 1785, column: 29, scope: !10085)
!10100 = !DILocation(line: 1785, column: 35, scope: !10085)
!10101 = !DILocalVariable(name: "class", scope: !10085, file: !3, line: 1786, type: !7)
!10102 = !DILocation(line: 1786, column: 15, scope: !10085)
!10103 = !DILocation(line: 1786, column: 24, scope: !10085)
!10104 = !DILocation(line: 1786, column: 23, scope: !10085)
!10105 = !DILocalVariable(name: "tf", scope: !10085, file: !3, line: 1787, type: !6536)
!10106 = !DILocation(line: 1787, column: 22, scope: !10085)
!10107 = !DILocalVariable(name: "err_mask", scope: !10085, file: !3, line: 1788, type: !7)
!10108 = !DILocation(line: 1788, column: 15, scope: !10085)
!10109 = !DILocalVariable(name: "reason", scope: !10085, file: !3, line: 1789, type: !1450)
!10110 = !DILocation(line: 1789, column: 14, scope: !10085)
!10111 = !DILocalVariable(name: "is_semb", scope: !10085, file: !3, line: 1790, type: !1495)
!10112 = !DILocation(line: 1790, column: 7, scope: !10085)
!10113 = !DILocation(line: 1790, column: 17, scope: !10085)
!10114 = !DILocation(line: 1790, column: 23, scope: !10085)
!10115 = !DILocalVariable(name: "may_fallback", scope: !10085, file: !3, line: 1791, type: !223)
!10116 = !DILocation(line: 1791, column: 6, scope: !10085)
!10117 = !DILocalVariable(name: "tried_spinup", scope: !10085, file: !3, line: 1791, type: !223)
!10118 = !DILocation(line: 1791, column: 24, scope: !10085)
!10119 = !DILocalVariable(name: "rc", scope: !10085, file: !3, line: 1792, type: !223)
!10120 = !DILocation(line: 1792, column: 6, scope: !10085)
!10121 = !DILocation(line: 1794, column: 6, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1794, column: 6)
!10123 = !DILocation(line: 1794, column: 6, scope: !10085)
!10124 = !DILocation(line: 1795, column: 3, scope: !10122)
!10125 = !DILabel(scope: !10085, name: "retry", file: !3, line: 1797)
!10126 = !DILocation(line: 1797, column: 1, scope: !10085)
!10127 = !DILocation(line: 1798, column: 14, scope: !10085)
!10128 = !DILocation(line: 1798, column: 2, scope: !10085)
!10129 = !DILocation(line: 1800, column: 10, scope: !10085)
!10130 = !DILocation(line: 1800, column: 2, scope: !10085)
!10131 = !DILocation(line: 1802, column: 9, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1800, column: 17)
!10133 = !DILocation(line: 1802, column: 3, scope: !10132)
!10134 = !DILocation(line: 1806, column: 6, scope: !10132)
!10135 = !DILocation(line: 1806, column: 14, scope: !10132)
!10136 = !DILocation(line: 1807, column: 3, scope: !10132)
!10137 = !DILocation(line: 1809, column: 6, scope: !10132)
!10138 = !DILocation(line: 1809, column: 14, scope: !10132)
!10139 = !DILocation(line: 1810, column: 3, scope: !10132)
!10140 = !DILocation(line: 1812, column: 6, scope: !10132)
!10141 = !DILocation(line: 1813, column: 10, scope: !10132)
!10142 = !DILocation(line: 1814, column: 3, scope: !10132)
!10143 = !DILocation(line: 1817, column: 5, scope: !10085)
!10144 = !DILocation(line: 1817, column: 14, scope: !10085)
!10145 = !DILocation(line: 1822, column: 5, scope: !10085)
!10146 = !DILocation(line: 1822, column: 11, scope: !10085)
!10147 = !DILocation(line: 1827, column: 5, scope: !10085)
!10148 = !DILocation(line: 1827, column: 11, scope: !10085)
!10149 = !DILocation(line: 1829, column: 6, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1829, column: 6)
!10151 = !DILocation(line: 1829, column: 10, scope: !10150)
!10152 = !DILocation(line: 1829, column: 15, scope: !10150)
!10153 = !DILocation(line: 1829, column: 6, scope: !10085)
!10154 = !DILocation(line: 1830, column: 14, scope: !10150)
!10155 = !DILocation(line: 1830, column: 18, scope: !10150)
!10156 = !DILocation(line: 1830, column: 23, scope: !10150)
!10157 = !DILocation(line: 1830, column: 31, scope: !10150)
!10158 = !DILocation(line: 1830, column: 41, scope: !10150)
!10159 = !DILocation(line: 1830, column: 12, scope: !10150)
!10160 = !DILocation(line: 1830, column: 3, scope: !10150)
!10161 = !DILocation(line: 1832, column: 33, scope: !10150)
!10162 = !DILocation(line: 1832, column: 43, scope: !10150)
!10163 = !DILocation(line: 1832, column: 14, scope: !10150)
!10164 = !DILocation(line: 1832, column: 12, scope: !10150)
!10165 = !DILocation(line: 1834, column: 6, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1834, column: 6)
!10167 = !DILocation(line: 1834, column: 6, scope: !10085)
!10168 = !DILocation(line: 1835, column: 7, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 1835, column: 7)
!10170 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 1834, column: 16)
!10171 = !DILocation(line: 1835, column: 16, scope: !10169)
!10172 = !DILocation(line: 1835, column: 7, scope: !10170)
!10173 = !DILocation(line: 1836, column: 4, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 1835, column: 37)
!10175 = !DILocation(line: 1837, column: 4, scope: !10174)
!10176 = !DILocation(line: 1840, column: 7, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 1840, column: 7)
!10178 = !DILocation(line: 1840, column: 7, scope: !10170)
!10179 = !DILocation(line: 1841, column: 4, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 1840, column: 16)
!10181 = !DILocation(line: 1844, column: 5, scope: !10180)
!10182 = !DILocation(line: 1844, column: 13, scope: !10180)
!10183 = !DILocation(line: 1845, column: 4, scope: !10180)
!10184 = !DILocation(line: 1848, column: 8, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 1848, column: 7)
!10186 = !DILocation(line: 1848, column: 17, scope: !10185)
!10187 = !DILocation(line: 1848, column: 32, scope: !10185)
!10188 = !DILocation(line: 1848, column: 39, scope: !10185)
!10189 = !DILocation(line: 1848, column: 36, scope: !10185)
!10190 = !DILocation(line: 1848, column: 47, scope: !10185)
!10191 = !DILocation(line: 1848, column: 7, scope: !10170)
!10192 = !DILocation(line: 1854, column: 8, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 1854, column: 8)
!10194 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 1848, column: 63)
!10195 = !DILocation(line: 1854, column: 8, scope: !10194)
!10196 = !DILocation(line: 1855, column: 18, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 1854, column: 22)
!10198 = !DILocation(line: 1857, column: 9, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1857, column: 9)
!10200 = !DILocation(line: 1857, column: 15, scope: !10199)
!10201 = !DILocation(line: 1857, column: 9, scope: !10197)
!10202 = !DILocation(line: 1858, column: 12, scope: !10199)
!10203 = !DILocation(line: 1858, column: 6, scope: !10199)
!10204 = !DILocation(line: 1860, column: 12, scope: !10199)
!10205 = !DILocation(line: 1861, column: 5, scope: !10197)
!10206 = !DILocation(line: 1868, column: 4, scope: !10194)
!10207 = !DILocation(line: 1870, column: 4, scope: !10194)
!10208 = !DILocation(line: 1873, column: 6, scope: !10170)
!10209 = !DILocation(line: 1874, column: 10, scope: !10170)
!10210 = !DILocation(line: 1875, column: 3, scope: !10170)
!10211 = !DILocation(line: 1878, column: 6, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1878, column: 6)
!10213 = !DILocation(line: 1878, column: 11, scope: !10212)
!10214 = !DILocation(line: 1878, column: 19, scope: !10212)
!10215 = !DILocation(line: 1878, column: 6, scope: !10085)
!10216 = !DILocation(line: 1879, column: 3, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 1878, column: 42)
!10218 = !DILocation(line: 1883, column: 18, scope: !10217)
!10219 = !DILocation(line: 1882, column: 3, scope: !10217)
!10220 = !DILocation(line: 1884, column: 2, scope: !10217)
!10221 = !DILocation(line: 1889, column: 15, scope: !10085)
!10222 = !DILocation(line: 1891, column: 16, scope: !10085)
!10223 = !DILocation(line: 1891, column: 2, scope: !10085)
!10224 = !DILocation(line: 1894, column: 5, scope: !10085)
!10225 = !DILocation(line: 1895, column: 9, scope: !10085)
!10226 = !DILocation(line: 1897, column: 6, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1897, column: 6)
!10228 = !DILocation(line: 1897, column: 12, scope: !10227)
!10229 = !DILocation(line: 1897, column: 27, scope: !10227)
!10230 = !DILocation(line: 1897, column: 30, scope: !10227)
!10231 = !DILocation(line: 1897, column: 36, scope: !10227)
!10232 = !DILocation(line: 1897, column: 6, scope: !10085)
!10233 = !DILocation(line: 1898, column: 8, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 1898, column: 7)
!10235 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 1897, column: 52)
!10236 = !DILocation(line: 1898, column: 26, scope: !10234)
!10237 = !DILocation(line: 1898, column: 44, scope: !10234)
!10238 = !DILocation(line: 1898, column: 30, scope: !10234)
!10239 = !DILocation(line: 1898, column: 7, scope: !10235)
!10240 = !DILocation(line: 1899, column: 4, scope: !10234)
!10241 = !DILocation(line: 1900, column: 7, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 1900, column: 7)
!10243 = !DILocation(line: 1900, column: 11, scope: !10242)
!10244 = !DILocation(line: 1900, column: 17, scope: !10242)
!10245 = !DILocation(line: 1900, column: 23, scope: !10242)
!10246 = !DILocation(line: 1900, column: 45, scope: !10242)
!10247 = !DILocation(line: 1901, column: 8, scope: !10242)
!10248 = !DILocation(line: 1900, column: 7, scope: !10235)
!10249 = !DILocation(line: 1902, column: 4, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 1901, column: 27)
!10251 = !DILocation(line: 1904, column: 4, scope: !10250)
!10252 = !DILocation(line: 1906, column: 2, scope: !10235)
!10253 = !DILocation(line: 1907, column: 7, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 1907, column: 7)
!10255 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 1906, column: 9)
!10256 = !DILocation(line: 1907, column: 7, scope: !10255)
!10257 = !DILocation(line: 1908, column: 4, scope: !10254)
!10258 = !DILocation(line: 1911, column: 7, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1911, column: 6)
!10260 = !DILocation(line: 1911, column: 20, scope: !10259)
!10261 = !DILocation(line: 1911, column: 24, scope: !10259)
!10262 = !DILocation(line: 1911, column: 30, scope: !10259)
!10263 = !DILocation(line: 1911, column: 40, scope: !10259)
!10264 = !DILocation(line: 1911, column: 43, scope: !10259)
!10265 = !DILocation(line: 1911, column: 49, scope: !10259)
!10266 = !DILocation(line: 1911, column: 6, scope: !10085)
!10267 = !DILocation(line: 1912, column: 16, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10259, file: !3, line: 1911, column: 61)
!10269 = !DILocation(line: 1918, column: 34, scope: !10268)
!10270 = !DILocation(line: 1918, column: 14, scope: !10268)
!10271 = !DILocation(line: 1918, column: 12, scope: !10268)
!10272 = !DILocation(line: 1919, column: 7, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1919, column: 7)
!10274 = !DILocation(line: 1919, column: 16, scope: !10273)
!10275 = !DILocation(line: 1919, column: 19, scope: !10273)
!10276 = !DILocation(line: 1919, column: 25, scope: !10273)
!10277 = !DILocation(line: 1919, column: 7, scope: !10268)
!10278 = !DILocation(line: 1920, column: 7, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 1919, column: 36)
!10280 = !DILocation(line: 1921, column: 11, scope: !10279)
!10281 = !DILocation(line: 1922, column: 4, scope: !10279)
!10282 = !DILocation(line: 1928, column: 7, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1928, column: 7)
!10284 = !DILocation(line: 1928, column: 13, scope: !10283)
!10285 = !DILocation(line: 1928, column: 7, scope: !10268)
!10286 = !DILocation(line: 1929, column: 4, scope: !10283)
!10287 = !DILocation(line: 1930, column: 2, scope: !10268)
!10288 = !DILocation(line: 1932, column: 7, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1932, column: 6)
!10290 = !DILocation(line: 1932, column: 13, scope: !10289)
!10291 = !DILocation(line: 1932, column: 37, scope: !10289)
!10292 = !DILocation(line: 1933, column: 7, scope: !10289)
!10293 = !DILocation(line: 1933, column: 13, scope: !10289)
!10294 = !DILocation(line: 1933, column: 28, scope: !10289)
!10295 = !DILocation(line: 1933, column: 31, scope: !10289)
!10296 = !DILocation(line: 1933, column: 37, scope: !10289)
!10297 = !DILocation(line: 1932, column: 6, scope: !10085)
!10298 = !DILocation(line: 1945, column: 28, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 1945, column: 7)
!10300 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1933, column: 54)
!10301 = !DILocation(line: 1945, column: 7, scope: !10299)
!10302 = !DILocation(line: 1945, column: 32, scope: !10299)
!10303 = !DILocation(line: 1945, column: 36, scope: !10299)
!10304 = !DILocation(line: 1945, column: 40, scope: !10299)
!10305 = !DILocation(line: 1945, column: 7, scope: !10300)
!10306 = !DILocation(line: 1946, column: 35, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 1945, column: 60)
!10308 = !DILocation(line: 1946, column: 40, scope: !10307)
!10309 = !DILocation(line: 1946, column: 47, scope: !10307)
!10310 = !DILocation(line: 1946, column: 15, scope: !10307)
!10311 = !DILocation(line: 1946, column: 13, scope: !10307)
!10312 = !DILocation(line: 1947, column: 8, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 1947, column: 8)
!10314 = !DILocation(line: 1947, column: 8, scope: !10307)
!10315 = !DILocation(line: 1948, column: 8, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 1947, column: 18)
!10317 = !DILocation(line: 1949, column: 12, scope: !10316)
!10318 = !DILocation(line: 1950, column: 5, scope: !10316)
!10319 = !DILocation(line: 1956, column: 10, scope: !10307)
!10320 = !DILocation(line: 1957, column: 4, scope: !10307)
!10321 = !DILocation(line: 1959, column: 2, scope: !10300)
!10322 = !DILocation(line: 1961, column: 13, scope: !10085)
!10323 = !DILocation(line: 1961, column: 3, scope: !10085)
!10324 = !DILocation(line: 1961, column: 11, scope: !10085)
!10325 = !DILocation(line: 1963, column: 2, scope: !10085)
!10326 = !DILabel(scope: !10085, name: "err_out", file: !3, line: 1965)
!10327 = !DILocation(line: 1965, column: 2, scope: !10085)
!10328 = !DILocation(line: 1966, column: 6, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1966, column: 6)
!10330 = !DILocation(line: 1966, column: 6, scope: !10085)
!10331 = !DILocation(line: 1967, column: 3, scope: !10329)
!10332 = !DILocation(line: 1969, column: 9, scope: !10085)
!10333 = !DILocation(line: 1969, column: 2, scope: !10085)
!10334 = !DILocation(line: 1970, column: 1, scope: !10085)
!10335 = distinct !DISubprogram(name: "ata_tf_init", scope: !183, file: !183, line: 1760, type: !10336, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10336 = !DISubroutineType(types: !10337)
!10337 = !{null, !6374, !6614}
!10338 = !DILocalVariable(name: "dev", arg: 1, scope: !10335, file: !183, line: 1760, type: !6374)
!10339 = !DILocation(line: 1760, column: 51, scope: !10335)
!10340 = !DILocalVariable(name: "tf", arg: 2, scope: !10335, file: !183, line: 1760, type: !6614)
!10341 = !DILocation(line: 1760, column: 77, scope: !10335)
!10342 = !DILocation(line: 1762, column: 9, scope: !10335)
!10343 = !DILocation(line: 1762, column: 2, scope: !10335)
!10344 = !DILocation(line: 1765, column: 12, scope: !10335)
!10345 = !DILocation(line: 1765, column: 17, scope: !10335)
!10346 = !DILocation(line: 1765, column: 23, scope: !10335)
!10347 = !DILocation(line: 1765, column: 27, scope: !10335)
!10348 = !DILocation(line: 1765, column: 2, scope: !10335)
!10349 = !DILocation(line: 1765, column: 6, scope: !10335)
!10350 = !DILocation(line: 1765, column: 10, scope: !10335)
!10351 = !DILocation(line: 1769, column: 6, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10335, file: !183, line: 1769, column: 6)
!10353 = !DILocation(line: 1769, column: 11, scope: !10352)
!10354 = !DILocation(line: 1769, column: 17, scope: !10352)
!10355 = !DILocation(line: 1769, column: 6, scope: !10335)
!10356 = !DILocation(line: 1770, column: 3, scope: !10352)
!10357 = !DILocation(line: 1770, column: 7, scope: !10352)
!10358 = !DILocation(line: 1770, column: 14, scope: !10352)
!10359 = !DILocation(line: 1772, column: 3, scope: !10352)
!10360 = !DILocation(line: 1772, column: 7, scope: !10352)
!10361 = !DILocation(line: 1772, column: 14, scope: !10352)
!10362 = !DILocation(line: 1773, column: 1, scope: !10335)
!10363 = distinct !DISubprogram(name: "swap_buf_le16", scope: !3, file: !3, line: 4482, type: !10364, scopeLine: 4483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10364 = !DISubroutineType(types: !10365)
!10365 = !{null, !6615, !7}
!10366 = !DILocalVariable(name: "buf", arg: 1, scope: !10363, file: !3, line: 4482, type: !6615)
!10367 = !DILocation(line: 4482, column: 25, scope: !10363)
!10368 = !DILocalVariable(name: "buf_words", arg: 2, scope: !10363, file: !3, line: 4482, type: !7)
!10369 = !DILocation(line: 4482, column: 43, scope: !10363)
!10370 = !DILocation(line: 4490, column: 1, scope: !10363)
!10371 = distinct !DISubprogram(name: "ata_dev_set_feature", scope: !3, file: !3, line: 4245, type: !10372, scopeLine: 4246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{!7, !6374, !1216, !1216}
!10374 = !DILocalVariable(name: "dev", arg: 1, scope: !10371, file: !3, line: 4245, type: !6374)
!10375 = !DILocation(line: 4245, column: 53, scope: !10371)
!10376 = !DILocalVariable(name: "enable", arg: 2, scope: !10371, file: !3, line: 4245, type: !1216)
!10377 = !DILocation(line: 4245, column: 61, scope: !10371)
!10378 = !DILocalVariable(name: "feature", arg: 3, scope: !10371, file: !3, line: 4245, type: !1216)
!10379 = !DILocation(line: 4245, column: 72, scope: !10371)
!10380 = !DILocalVariable(name: "tf", scope: !10371, file: !3, line: 4247, type: !6536)
!10381 = !DILocation(line: 4247, column: 22, scope: !10371)
!10382 = !DILocalVariable(name: "err_mask", scope: !10371, file: !3, line: 4248, type: !7)
!10383 = !DILocation(line: 4248, column: 15, scope: !10371)
!10384 = !DILocalVariable(name: "timeout", scope: !10371, file: !3, line: 4249, type: !994)
!10385 = !DILocation(line: 4249, column: 16, scope: !10371)
!10386 = !DILocation(line: 4254, column: 14, scope: !10371)
!10387 = !DILocation(line: 4254, column: 2, scope: !10371)
!10388 = !DILocation(line: 4255, column: 5, scope: !10371)
!10389 = !DILocation(line: 4255, column: 13, scope: !10371)
!10390 = !DILocation(line: 4256, column: 15, scope: !10371)
!10391 = !DILocation(line: 4256, column: 5, scope: !10371)
!10392 = !DILocation(line: 4256, column: 13, scope: !10371)
!10393 = !DILocation(line: 4257, column: 5, scope: !10371)
!10394 = !DILocation(line: 4257, column: 11, scope: !10371)
!10395 = !DILocation(line: 4258, column: 5, scope: !10371)
!10396 = !DILocation(line: 4258, column: 14, scope: !10371)
!10397 = !DILocation(line: 4259, column: 13, scope: !10371)
!10398 = !DILocation(line: 4259, column: 5, scope: !10371)
!10399 = !DILocation(line: 4259, column: 11, scope: !10371)
!10400 = !DILocation(line: 4261, column: 6, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 4261, column: 6)
!10402 = !DILocation(line: 4261, column: 13, scope: !10401)
!10403 = !DILocation(line: 4261, column: 6, scope: !10371)
!10404 = !DILocation(line: 4262, column: 13, scope: !10401)
!10405 = !DILocation(line: 4263, column: 6, scope: !10401)
!10406 = !DILocation(line: 4263, column: 24, scope: !10401)
!10407 = !DILocation(line: 4262, column: 11, scope: !10401)
!10408 = !DILocation(line: 4262, column: 3, scope: !10401)
!10409 = !DILocation(line: 4264, column: 31, scope: !10371)
!10410 = !DILocation(line: 4264, column: 66, scope: !10371)
!10411 = !DILocation(line: 4264, column: 13, scope: !10371)
!10412 = !DILocation(line: 4264, column: 11, scope: !10371)
!10413 = !DILocation(line: 4267, column: 9, scope: !10371)
!10414 = !DILocation(line: 4267, column: 2, scope: !10371)
!10415 = distinct !DISubprogram(name: "ata_id_major_version", scope: !222, file: !222, line: 835, type: !10416, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{!7, !8685}
!10418 = !DILocalVariable(name: "id", arg: 1, scope: !10415, file: !222, line: 835, type: !8685)
!10419 = !DILocation(line: 835, column: 60, scope: !10415)
!10420 = !DILocalVariable(name: "mver", scope: !10415, file: !222, line: 837, type: !7)
!10421 = !DILocation(line: 837, column: 15, scope: !10415)
!10422 = !DILocation(line: 839, column: 6, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10415, file: !222, line: 839, column: 6)
!10424 = !DILocation(line: 839, column: 27, scope: !10423)
!10425 = !DILocation(line: 839, column: 6, scope: !10415)
!10426 = !DILocation(line: 840, column: 3, scope: !10423)
!10427 = !DILocation(line: 842, column: 12, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10415, file: !222, line: 842, column: 2)
!10429 = !DILocation(line: 842, column: 7, scope: !10428)
!10430 = !DILocation(line: 842, column: 18, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10428, file: !222, line: 842, column: 2)
!10432 = !DILocation(line: 842, column: 23, scope: !10431)
!10433 = !DILocation(line: 842, column: 2, scope: !10428)
!10434 = !DILocation(line: 843, column: 7, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10431, file: !222, line: 843, column: 7)
!10436 = !DILocation(line: 843, column: 36, scope: !10435)
!10437 = !DILocation(line: 843, column: 33, scope: !10435)
!10438 = !DILocation(line: 843, column: 28, scope: !10435)
!10439 = !DILocation(line: 843, column: 7, scope: !10431)
!10440 = !DILocation(line: 844, column: 4, scope: !10435)
!10441 = !DILocation(line: 843, column: 40, scope: !10435)
!10442 = !DILocation(line: 842, column: 33, scope: !10431)
!10443 = !DILocation(line: 842, column: 2, scope: !10431)
!10444 = distinct !{!10444, !10433, !10445}
!10445 = !DILocation(line: 844, column: 4, scope: !10428)
!10446 = !DILocation(line: 845, column: 9, scope: !10415)
!10447 = !DILocation(line: 845, column: 2, scope: !10415)
!10448 = !DILocation(line: 846, column: 1, scope: !10415)
!10449 = distinct !DISubprogram(name: "ata_dev_init_params", scope: !3, file: !3, line: 4283, type: !10450, scopeLine: 4285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{!7, !6374, !1740, !1740}
!10452 = !DILocalVariable(name: "dev", arg: 1, scope: !10449, file: !3, line: 4283, type: !6374)
!10453 = !DILocation(line: 4283, column: 60, scope: !10449)
!10454 = !DILocalVariable(name: "heads", arg: 2, scope: !10449, file: !3, line: 4284, type: !1740)
!10455 = !DILocation(line: 4284, column: 10, scope: !10449)
!10456 = !DILocalVariable(name: "sectors", arg: 3, scope: !10449, file: !3, line: 4284, type: !1740)
!10457 = !DILocation(line: 4284, column: 21, scope: !10449)
!10458 = !DILocalVariable(name: "tf", scope: !10449, file: !3, line: 4286, type: !6536)
!10459 = !DILocation(line: 4286, column: 22, scope: !10449)
!10460 = !DILocalVariable(name: "err_mask", scope: !10449, file: !3, line: 4287, type: !7)
!10461 = !DILocation(line: 4287, column: 15, scope: !10449)
!10462 = !DILocation(line: 4290, column: 6, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 4290, column: 6)
!10464 = !DILocation(line: 4290, column: 14, scope: !10463)
!10465 = !DILocation(line: 4290, column: 18, scope: !10463)
!10466 = !DILocation(line: 4290, column: 21, scope: !10463)
!10467 = !DILocation(line: 4290, column: 29, scope: !10463)
!10468 = !DILocation(line: 4290, column: 35, scope: !10463)
!10469 = !DILocation(line: 4290, column: 38, scope: !10463)
!10470 = !DILocation(line: 4290, column: 44, scope: !10463)
!10471 = !DILocation(line: 4290, column: 48, scope: !10463)
!10472 = !DILocation(line: 4290, column: 51, scope: !10463)
!10473 = !DILocation(line: 4290, column: 57, scope: !10463)
!10474 = !DILocation(line: 4290, column: 6, scope: !10449)
!10475 = !DILocation(line: 4291, column: 3, scope: !10463)
!10476 = !DILocation(line: 4296, column: 14, scope: !10449)
!10477 = !DILocation(line: 4296, column: 2, scope: !10449)
!10478 = !DILocation(line: 4297, column: 5, scope: !10449)
!10479 = !DILocation(line: 4297, column: 13, scope: !10449)
!10480 = !DILocation(line: 4298, column: 5, scope: !10449)
!10481 = !DILocation(line: 4298, column: 11, scope: !10449)
!10482 = !DILocation(line: 4299, column: 5, scope: !10449)
!10483 = !DILocation(line: 4299, column: 14, scope: !10449)
!10484 = !DILocation(line: 4300, column: 13, scope: !10449)
!10485 = !DILocation(line: 4300, column: 5, scope: !10449)
!10486 = !DILocation(line: 4300, column: 11, scope: !10449)
!10487 = !DILocation(line: 4301, column: 16, scope: !10449)
!10488 = !DILocation(line: 4301, column: 22, scope: !10449)
!10489 = !DILocation(line: 4301, column: 27, scope: !10449)
!10490 = !DILocation(line: 4301, column: 5, scope: !10449)
!10491 = !DILocation(line: 4301, column: 12, scope: !10449)
!10492 = !DILocation(line: 4303, column: 31, scope: !10449)
!10493 = !DILocation(line: 4303, column: 13, scope: !10449)
!10494 = !DILocation(line: 4303, column: 11, scope: !10449)
!10495 = !DILocation(line: 4307, column: 6, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 4307, column: 6)
!10497 = !DILocation(line: 4307, column: 15, scope: !10496)
!10498 = !DILocation(line: 4307, column: 29, scope: !10496)
!10499 = !DILocation(line: 4307, column: 36, scope: !10496)
!10500 = !DILocation(line: 4307, column: 33, scope: !10496)
!10501 = !DILocation(line: 4307, column: 44, scope: !10496)
!10502 = !DILocation(line: 4307, column: 6, scope: !10449)
!10503 = !DILocation(line: 4308, column: 12, scope: !10496)
!10504 = !DILocation(line: 4308, column: 3, scope: !10496)
!10505 = !DILocation(line: 4311, column: 9, scope: !10449)
!10506 = !DILocation(line: 4311, column: 2, scope: !10449)
!10507 = !DILocation(line: 4312, column: 1, scope: !10449)
!10508 = distinct !DISubprogram(name: "ata_read_log_page", scope: !3, file: !3, line: 1988, type: !10509, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10509 = !DISubroutineType(types: !10510)
!10510 = !{!7, !6374, !1216, !1216, !991, !7}
!10511 = !DILocalVariable(name: "dev", arg: 1, scope: !10508, file: !3, line: 1988, type: !6374)
!10512 = !DILocation(line: 1988, column: 51, scope: !10508)
!10513 = !DILocalVariable(name: "log", arg: 2, scope: !10508, file: !3, line: 1988, type: !1216)
!10514 = !DILocation(line: 1988, column: 59, scope: !10508)
!10515 = !DILocalVariable(name: "page", arg: 3, scope: !10508, file: !3, line: 1989, type: !1216)
!10516 = !DILocation(line: 1989, column: 14, scope: !10508)
!10517 = !DILocalVariable(name: "buf", arg: 4, scope: !10508, file: !3, line: 1989, type: !991)
!10518 = !DILocation(line: 1989, column: 26, scope: !10508)
!10519 = !DILocalVariable(name: "sectors", arg: 5, scope: !10508, file: !3, line: 1989, type: !7)
!10520 = !DILocation(line: 1989, column: 44, scope: !10508)
!10521 = !DILocalVariable(name: "ap_flags", scope: !10508, file: !3, line: 1991, type: !994)
!10522 = !DILocation(line: 1991, column: 16, scope: !10508)
!10523 = !DILocation(line: 1991, column: 27, scope: !10508)
!10524 = !DILocation(line: 1991, column: 32, scope: !10508)
!10525 = !DILocation(line: 1991, column: 38, scope: !10508)
!10526 = !DILocation(line: 1991, column: 42, scope: !10508)
!10527 = !DILocalVariable(name: "tf", scope: !10508, file: !3, line: 1992, type: !6536)
!10528 = !DILocation(line: 1992, column: 22, scope: !10508)
!10529 = !DILocalVariable(name: "err_mask", scope: !10508, file: !3, line: 1993, type: !7)
!10530 = !DILocation(line: 1993, column: 15, scope: !10508)
!10531 = !DILocalVariable(name: "dma", scope: !10508, file: !3, line: 1994, type: !1495)
!10532 = !DILocation(line: 1994, column: 7, scope: !10508)
!10533 = !DILocation(line: 2002, column: 6, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2002, column: 6)
!10535 = !DILocation(line: 2002, column: 15, scope: !10534)
!10536 = !DILocation(line: 2002, column: 6, scope: !10508)
!10537 = !DILocation(line: 2003, column: 3, scope: !10534)
!10538 = !DILocation(line: 2002, column: 17, scope: !10534)
!10539 = !DILabel(scope: !10508, name: "retry", file: !3, line: 2005)
!10540 = !DILocation(line: 2005, column: 1, scope: !10508)
!10541 = !DILocation(line: 2006, column: 14, scope: !10508)
!10542 = !DILocation(line: 2006, column: 2, scope: !10508)
!10543 = !DILocation(line: 2007, column: 6, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2007, column: 6)
!10545 = !DILocation(line: 2007, column: 11, scope: !10544)
!10546 = !DILocation(line: 2007, column: 20, scope: !10544)
!10547 = !DILocation(line: 2007, column: 51, scope: !10544)
!10548 = !DILocation(line: 2007, column: 56, scope: !10544)
!10549 = !DILocation(line: 2007, column: 23, scope: !10544)
!10550 = !DILocation(line: 2007, column: 60, scope: !10544)
!10551 = !DILocation(line: 2008, column: 8, scope: !10544)
!10552 = !DILocation(line: 2008, column: 13, scope: !10544)
!10553 = !DILocation(line: 2008, column: 21, scope: !10544)
!10554 = !DILocation(line: 2007, column: 6, scope: !10508)
!10555 = !DILocation(line: 2009, column: 6, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 2008, column: 48)
!10557 = !DILocation(line: 2009, column: 14, scope: !10556)
!10558 = !DILocation(line: 2010, column: 6, scope: !10556)
!10559 = !DILocation(line: 2010, column: 15, scope: !10556)
!10560 = !DILocation(line: 2011, column: 7, scope: !10556)
!10561 = !DILocation(line: 2012, column: 2, scope: !10556)
!10562 = !DILocation(line: 2013, column: 6, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 2012, column: 9)
!10564 = !DILocation(line: 2013, column: 14, scope: !10563)
!10565 = !DILocation(line: 2014, column: 6, scope: !10563)
!10566 = !DILocation(line: 2014, column: 15, scope: !10563)
!10567 = !DILocation(line: 2015, column: 7, scope: !10563)
!10568 = !DILocation(line: 2017, column: 12, scope: !10508)
!10569 = !DILocation(line: 2017, column: 5, scope: !10508)
!10570 = !DILocation(line: 2017, column: 10, scope: !10508)
!10571 = !DILocation(line: 2018, column: 12, scope: !10508)
!10572 = !DILocation(line: 2018, column: 5, scope: !10508)
!10573 = !DILocation(line: 2018, column: 10, scope: !10508)
!10574 = !DILocation(line: 2019, column: 13, scope: !10508)
!10575 = !DILocation(line: 2019, column: 5, scope: !10508)
!10576 = !DILocation(line: 2019, column: 11, scope: !10508)
!10577 = !DILocation(line: 2020, column: 17, scope: !10508)
!10578 = !DILocation(line: 2020, column: 25, scope: !10508)
!10579 = !DILocation(line: 2020, column: 5, scope: !10508)
!10580 = !DILocation(line: 2020, column: 15, scope: !10508)
!10581 = !DILocation(line: 2021, column: 5, scope: !10508)
!10582 = !DILocation(line: 2021, column: 11, scope: !10508)
!10583 = !DILocation(line: 2023, column: 31, scope: !10508)
!10584 = !DILocation(line: 2024, column: 10, scope: !10508)
!10585 = !DILocation(line: 2024, column: 15, scope: !10508)
!10586 = !DILocation(line: 2024, column: 23, scope: !10508)
!10587 = !DILocation(line: 2023, column: 13, scope: !10508)
!10588 = !DILocation(line: 2023, column: 11, scope: !10508)
!10589 = !DILocation(line: 2026, column: 6, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2026, column: 6)
!10591 = !DILocation(line: 2026, column: 15, scope: !10590)
!10592 = !DILocation(line: 2026, column: 18, scope: !10590)
!10593 = !DILocation(line: 2026, column: 6, scope: !10508)
!10594 = !DILocation(line: 2027, column: 3, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 2026, column: 23)
!10596 = !DILocation(line: 2027, column: 8, scope: !10595)
!10597 = !DILocation(line: 2027, column: 16, scope: !10595)
!10598 = !DILocation(line: 2028, column: 3, scope: !10595)
!10599 = !DILocation(line: 2029, column: 3, scope: !10595)
!10600 = !DILocation(line: 2033, column: 9, scope: !10508)
!10601 = !DILocation(line: 2033, column: 2, scope: !10508)
!10602 = !DILocation(line: 2034, column: 1, scope: !10508)
!10603 = distinct !DISubprogram(name: "ata_id_has_read_log_dma_ext", scope: !222, file: !222, line: 754, type: !8945, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10604 = !DILocalVariable(name: "id", arg: 1, scope: !10603, file: !222, line: 754, type: !8685)
!10605 = !DILocation(line: 754, column: 59, scope: !10603)
!10606 = !DILocation(line: 757, column: 8, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10603, file: !222, line: 757, column: 6)
!10608 = !DILocation(line: 757, column: 32, scope: !10607)
!10609 = !DILocation(line: 757, column: 6, scope: !10603)
!10610 = !DILocation(line: 758, column: 3, scope: !10607)
!10611 = !DILocation(line: 764, column: 7, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10603, file: !222, line: 764, column: 6)
!10613 = !DILocation(line: 764, column: 32, scope: !10612)
!10614 = !DILocation(line: 764, column: 42, scope: !10612)
!10615 = !DILocation(line: 764, column: 52, scope: !10612)
!10616 = !DILocation(line: 765, column: 7, scope: !10612)
!10617 = !DILocation(line: 765, column: 32, scope: !10612)
!10618 = !DILocation(line: 765, column: 42, scope: !10612)
!10619 = !DILocation(line: 764, column: 6, scope: !10603)
!10620 = !DILocation(line: 766, column: 3, scope: !10612)
!10621 = !DILocation(line: 768, column: 2, scope: !10603)
!10622 = !DILocation(line: 769, column: 1, scope: !10603)
!10623 = distinct !DISubprogram(name: "ata_dev_configure", scope: !3, file: !3, line: 2379, type: !8230, scopeLine: 2380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!10624 = !DILocalVariable(name: "dev", arg: 1, scope: !10623, file: !3, line: 2379, type: !6374)
!10625 = !DILocation(line: 2379, column: 42, scope: !10623)
!10626 = !DILocalVariable(name: "ap", scope: !10623, file: !3, line: 2381, type: !1005)
!10627 = !DILocation(line: 2381, column: 19, scope: !10623)
!10628 = !DILocation(line: 2381, column: 24, scope: !10623)
!10629 = !DILocation(line: 2381, column: 29, scope: !10623)
!10630 = !DILocation(line: 2381, column: 35, scope: !10623)
!10631 = !DILocalVariable(name: "ehc", scope: !10623, file: !3, line: 2382, type: !7300)
!10632 = !DILocation(line: 2382, column: 25, scope: !10623)
!10633 = !DILocation(line: 2382, column: 32, scope: !10623)
!10634 = !DILocation(line: 2382, column: 37, scope: !10623)
!10635 = !DILocation(line: 2382, column: 43, scope: !10623)
!10636 = !DILocalVariable(name: "print_info", scope: !10623, file: !3, line: 2383, type: !223)
!10637 = !DILocation(line: 2383, column: 6, scope: !10623)
!10638 = !DILocation(line: 2383, column: 19, scope: !10623)
!10639 = !DILocation(line: 2383, column: 24, scope: !10623)
!10640 = !DILocation(line: 2383, column: 26, scope: !10623)
!10641 = !DILocation(line: 2383, column: 32, scope: !10623)
!10642 = !DILocalVariable(name: "id", scope: !10623, file: !3, line: 2384, type: !8685)
!10643 = !DILocation(line: 2384, column: 13, scope: !10623)
!10644 = !DILocation(line: 2384, column: 18, scope: !10623)
!10645 = !DILocation(line: 2384, column: 23, scope: !10623)
!10646 = !DILocalVariable(name: "xfer_mask", scope: !10623, file: !3, line: 2385, type: !994)
!10647 = !DILocation(line: 2385, column: 16, scope: !10623)
!10648 = !DILocalVariable(name: "err_mask", scope: !10623, file: !3, line: 2386, type: !7)
!10649 = !DILocation(line: 2386, column: 15, scope: !10623)
!10650 = !DILocalVariable(name: "revbuf", scope: !10623, file: !3, line: 2387, type: !10651)
!10651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 56, elements: !3807)
!10652 = !DILocation(line: 2387, column: 7, scope: !10623)
!10653 = !DILocalVariable(name: "fwrevbuf", scope: !10623, file: !3, line: 2388, type: !10654)
!10654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 72, elements: !3058)
!10655 = !DILocation(line: 2388, column: 7, scope: !10623)
!10656 = !DILocalVariable(name: "modelbuf", scope: !10623, file: !3, line: 2389, type: !10657)
!10657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 328, elements: !10658)
!10658 = !{!10659}
!10659 = !DISubrange(count: 41)
!10660 = !DILocation(line: 2389, column: 7, scope: !10623)
!10661 = !DILocalVariable(name: "rc", scope: !10623, file: !3, line: 2390, type: !223)
!10662 = !DILocation(line: 2390, column: 6, scope: !10623)
!10663 = !DILocation(line: 2392, column: 23, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2392, column: 6)
!10665 = !DILocation(line: 2392, column: 7, scope: !10664)
!10666 = !DILocation(line: 2392, column: 28, scope: !10664)
!10667 = !DILocation(line: 2392, column: 31, scope: !10664)
!10668 = !DILocation(line: 2392, column: 6, scope: !10623)
!10669 = !DILocation(line: 2393, column: 3, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 2392, column: 49)
!10671 = !DILocation(line: 2394, column: 3, scope: !10670)
!10672 = !DILocation(line: 2397, column: 6, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2397, column: 6)
!10674 = !DILocation(line: 2397, column: 6, scope: !10623)
!10675 = !DILocation(line: 2398, column: 3, scope: !10673)
!10676 = !DILocation(line: 2401, column: 38, scope: !10623)
!10677 = !DILocation(line: 2401, column: 18, scope: !10623)
!10678 = !DILocation(line: 2401, column: 2, scope: !10623)
!10679 = !DILocation(line: 2401, column: 7, scope: !10623)
!10680 = !DILocation(line: 2401, column: 15, scope: !10623)
!10681 = !DILocation(line: 2402, column: 20, scope: !10623)
!10682 = !DILocation(line: 2402, column: 2, scope: !10623)
!10683 = !DILocation(line: 2404, column: 6, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2404, column: 6)
!10685 = !DILocation(line: 2404, column: 11, scope: !10684)
!10686 = !DILocation(line: 2404, column: 19, scope: !10684)
!10687 = !DILocation(line: 2404, column: 6, scope: !10623)
!10688 = !DILocation(line: 2405, column: 3, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2404, column: 42)
!10690 = !DILocation(line: 2406, column: 19, scope: !10689)
!10691 = !DILocation(line: 2406, column: 3, scope: !10689)
!10692 = !DILocation(line: 2407, column: 3, scope: !10689)
!10693 = !DILocation(line: 2410, column: 8, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2410, column: 6)
!10695 = !DILocation(line: 2410, column: 22, scope: !10694)
!10696 = !DILocation(line: 2410, column: 26, scope: !10694)
!10697 = !DILocation(line: 2410, column: 30, scope: !10694)
!10698 = !DILocation(line: 2410, column: 36, scope: !10694)
!10699 = !DILocation(line: 2410, column: 58, scope: !10694)
!10700 = !DILocation(line: 2411, column: 6, scope: !10694)
!10701 = !DILocation(line: 2411, column: 11, scope: !10694)
!10702 = !DILocation(line: 2411, column: 17, scope: !10694)
!10703 = !DILocation(line: 2410, column: 6, scope: !10623)
!10704 = !DILocation(line: 2412, column: 3, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 2411, column: 35)
!10706 = !DILocation(line: 2415, column: 19, scope: !10705)
!10707 = !DILocation(line: 2415, column: 3, scope: !10705)
!10708 = !DILocation(line: 2416, column: 3, scope: !10705)
!10709 = !DILocation(line: 2419, column: 31, scope: !10623)
!10710 = !DILocation(line: 2419, column: 7, scope: !10623)
!10711 = !DILocation(line: 2419, column: 5, scope: !10623)
!10712 = !DILocation(line: 2420, column: 6, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2420, column: 6)
!10714 = !DILocation(line: 2420, column: 6, scope: !10623)
!10715 = !DILocation(line: 2421, column: 10, scope: !10713)
!10716 = !DILocation(line: 2421, column: 3, scope: !10713)
!10717 = !DILocation(line: 2424, column: 7, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2424, column: 6)
!10719 = !DILocation(line: 2424, column: 12, scope: !10718)
!10720 = !DILocation(line: 2424, column: 20, scope: !10718)
!10721 = !DILocation(line: 2424, column: 49, scope: !10718)
!10722 = !DILocation(line: 2425, column: 7, scope: !10718)
!10723 = !DILocation(line: 2425, column: 34, scope: !10718)
!10724 = !DILocation(line: 2425, column: 41, scope: !10718)
!10725 = !DILocation(line: 2424, column: 6, scope: !10623)
!10726 = !DILocation(line: 2426, column: 3, scope: !10718)
!10727 = !DILocation(line: 2426, column: 8, scope: !10718)
!10728 = !DILocation(line: 2426, column: 16, scope: !10718)
!10729 = !DILocation(line: 2428, column: 6, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2428, column: 6)
!10731 = !DILocation(line: 2428, column: 10, scope: !10730)
!10732 = !DILocation(line: 2428, column: 16, scope: !10730)
!10733 = !DILocation(line: 2428, column: 6, scope: !10623)
!10734 = !DILocation(line: 2429, column: 3, scope: !10730)
!10735 = !DILocation(line: 2429, column: 8, scope: !10730)
!10736 = !DILocation(line: 2429, column: 16, scope: !10730)
!10737 = !DILocation(line: 2431, column: 6, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2431, column: 6)
!10739 = !DILocation(line: 2431, column: 11, scope: !10738)
!10740 = !DILocation(line: 2431, column: 19, scope: !10738)
!10741 = !DILocation(line: 2431, column: 6, scope: !10623)
!10742 = !DILocation(line: 2432, column: 3, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 2431, column: 40)
!10744 = !DILocation(line: 2433, column: 3, scope: !10743)
!10745 = !DILocation(line: 2433, column: 8, scope: !10743)
!10746 = !DILocation(line: 2433, column: 14, scope: !10743)
!10747 = !DILocation(line: 2433, column: 18, scope: !10743)
!10748 = !DILocation(line: 2433, column: 36, scope: !10743)
!10749 = !DILocation(line: 2434, column: 2, scope: !10743)
!10750 = !DILocation(line: 2437, column: 26, scope: !10623)
!10751 = !DILocation(line: 2437, column: 7, scope: !10623)
!10752 = !DILocation(line: 2437, column: 5, scope: !10623)
!10753 = !DILocation(line: 2438, column: 6, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2438, column: 6)
!10755 = !DILocation(line: 2438, column: 6, scope: !10623)
!10756 = !DILocation(line: 2439, column: 10, scope: !10754)
!10757 = !DILocation(line: 2439, column: 3, scope: !10754)
!10758 = !DILocation(line: 2442, column: 22, scope: !10623)
!10759 = !DILocation(line: 2442, column: 7, scope: !10623)
!10760 = !DILocation(line: 2442, column: 5, scope: !10623)
!10761 = !DILocation(line: 2443, column: 6, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2443, column: 6)
!10763 = !DILocation(line: 2443, column: 6, scope: !10623)
!10764 = !DILocation(line: 2444, column: 10, scope: !10762)
!10765 = !DILocation(line: 2444, column: 3, scope: !10762)
!10766 = !DILocation(line: 2447, column: 6, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2447, column: 6)
!10768 = !DILocation(line: 2447, column: 6, scope: !10623)
!10769 = !DILocation(line: 2448, column: 3, scope: !10767)
!10770 = !DILocation(line: 2456, column: 2, scope: !10623)
!10771 = !DILocation(line: 2456, column: 7, scope: !10623)
!10772 = !DILocation(line: 2456, column: 13, scope: !10623)
!10773 = !DILocation(line: 2457, column: 2, scope: !10623)
!10774 = !DILocation(line: 2457, column: 7, scope: !10623)
!10775 = !DILocation(line: 2457, column: 19, scope: !10623)
!10776 = !DILocation(line: 2458, column: 2, scope: !10623)
!10777 = !DILocation(line: 2458, column: 7, scope: !10623)
!10778 = !DILocation(line: 2458, column: 15, scope: !10623)
!10779 = !DILocation(line: 2459, column: 2, scope: !10623)
!10780 = !DILocation(line: 2459, column: 7, scope: !10623)
!10781 = !DILocation(line: 2459, column: 17, scope: !10623)
!10782 = !DILocation(line: 2460, column: 2, scope: !10623)
!10783 = !DILocation(line: 2460, column: 7, scope: !10623)
!10784 = !DILocation(line: 2460, column: 17, scope: !10623)
!10785 = !DILocation(line: 2461, column: 2, scope: !10623)
!10786 = !DILocation(line: 2461, column: 7, scope: !10623)
!10787 = !DILocation(line: 2461, column: 13, scope: !10623)
!10788 = !DILocation(line: 2462, column: 2, scope: !10623)
!10789 = !DILocation(line: 2462, column: 7, scope: !10623)
!10790 = !DILocation(line: 2462, column: 15, scope: !10623)
!10791 = !DILocation(line: 2463, column: 2, scope: !10623)
!10792 = !DILocation(line: 2463, column: 7, scope: !10623)
!10793 = !DILocation(line: 2463, column: 19, scope: !10623)
!10794 = !DILocation(line: 2470, column: 30, scope: !10623)
!10795 = !DILocation(line: 2470, column: 14, scope: !10623)
!10796 = !DILocation(line: 2470, column: 12, scope: !10623)
!10797 = !DILocation(line: 2472, column: 6, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2472, column: 6)
!10799 = !DILocation(line: 2472, column: 6, scope: !10623)
!10800 = !DILocation(line: 2473, column: 15, scope: !10798)
!10801 = !DILocation(line: 2473, column: 3, scope: !10798)
!10802 = !DILocation(line: 2476, column: 18, scope: !10623)
!10803 = !DILocation(line: 2476, column: 23, scope: !10623)
!10804 = !DILocation(line: 2476, column: 27, scope: !10623)
!10805 = !DILocation(line: 2476, column: 2, scope: !10623)
!10806 = !DILocation(line: 2479, column: 18, scope: !10623)
!10807 = !DILocation(line: 2479, column: 23, scope: !10623)
!10808 = !DILocation(line: 2479, column: 27, scope: !10623)
!10809 = !DILocation(line: 2479, column: 2, scope: !10623)
!10810 = !DILocation(line: 2483, column: 6, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2483, column: 6)
!10812 = !DILocation(line: 2483, column: 11, scope: !10811)
!10813 = !DILocation(line: 2483, column: 17, scope: !10811)
!10814 = !DILocation(line: 2483, column: 32, scope: !10811)
!10815 = !DILocation(line: 2483, column: 35, scope: !10811)
!10816 = !DILocation(line: 2483, column: 40, scope: !10811)
!10817 = !DILocation(line: 2483, column: 46, scope: !10811)
!10818 = !DILocation(line: 2483, column: 6, scope: !10623)
!10819 = !DILocation(line: 2484, column: 21, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 2484, column: 7)
!10821 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 2483, column: 62)
!10822 = !DILocation(line: 2484, column: 7, scope: !10820)
!10823 = !DILocation(line: 2484, column: 7, scope: !10821)
!10824 = !DILocation(line: 2486, column: 8, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 2486, column: 8)
!10826 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2484, column: 26)
!10827 = !DILocation(line: 2486, column: 32, scope: !10825)
!10828 = !DILocation(line: 2486, column: 8, scope: !10826)
!10829 = !DILocation(line: 2487, column: 5, scope: !10825)
!10830 = !DILocation(line: 2489, column: 13, scope: !10826)
!10831 = !DILocation(line: 2489, column: 4, scope: !10826)
!10832 = !DILocation(line: 2490, column: 3, scope: !10826)
!10833 = !DILocation(line: 2491, column: 13, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2490, column: 10)
!10835 = !DILocation(line: 2491, column: 55, scope: !10834)
!10836 = !DILocation(line: 2491, column: 34, scope: !10834)
!10837 = !DILocation(line: 2491, column: 4, scope: !10834)
!10838 = !DILocation(line: 2493, column: 23, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 2493, column: 8)
!10840 = !DILocation(line: 2493, column: 8, scope: !10839)
!10841 = !DILocation(line: 2493, column: 8, scope: !10834)
!10842 = !DILocation(line: 2494, column: 5, scope: !10839)
!10843 = !DILocation(line: 2498, column: 37, scope: !10821)
!10844 = !DILocation(line: 2498, column: 20, scope: !10821)
!10845 = !DILocation(line: 2498, column: 3, scope: !10821)
!10846 = !DILocation(line: 2498, column: 8, scope: !10821)
!10847 = !DILocation(line: 2498, column: 18, scope: !10821)
!10848 = !DILocation(line: 2501, column: 8, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 2501, column: 7)
!10850 = !DILocation(line: 2501, column: 13, scope: !10849)
!10851 = !DILocation(line: 2501, column: 20, scope: !10849)
!10852 = !DILocation(line: 2501, column: 26, scope: !10849)
!10853 = !DILocation(line: 2501, column: 34, scope: !10849)
!10854 = !DILocation(line: 2501, column: 38, scope: !10849)
!10855 = !DILocation(line: 2501, column: 43, scope: !10849)
!10856 = !DILocation(line: 2501, column: 50, scope: !10849)
!10857 = !DILocation(line: 2501, column: 7, scope: !10821)
!10858 = !DILocalVariable(name: "max", scope: !10859, file: !3, line: 2502, type: !7)
!10859 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 2501, column: 60)
!10860 = !DILocation(line: 2502, column: 17, scope: !10859)
!10861 = !DILocation(line: 2502, column: 23, scope: !10859)
!10862 = !DILocation(line: 2502, column: 28, scope: !10859)
!10863 = !DILocation(line: 2502, column: 35, scope: !10859)
!10864 = !DILocalVariable(name: "cnt", scope: !10859, file: !3, line: 2503, type: !7)
!10865 = !DILocation(line: 2503, column: 17, scope: !10859)
!10866 = !DILocation(line: 2503, column: 23, scope: !10859)
!10867 = !DILocation(line: 2503, column: 28, scope: !10859)
!10868 = !DILocation(line: 2503, column: 35, scope: !10859)
!10869 = !DILocation(line: 2505, column: 22, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 2505, column: 8)
!10871 = !DILocation(line: 2505, column: 8, scope: !10870)
!10872 = !DILocation(line: 2505, column: 27, scope: !10870)
!10873 = !DILocation(line: 2505, column: 44, scope: !10870)
!10874 = !DILocation(line: 2505, column: 30, scope: !10870)
!10875 = !DILocation(line: 2505, column: 8, scope: !10859)
!10876 = !DILocation(line: 2506, column: 9, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 2506, column: 9)
!10878 = !DILocation(line: 2506, column: 16, scope: !10877)
!10879 = !DILocation(line: 2506, column: 13, scope: !10877)
!10880 = !DILocation(line: 2506, column: 9, scope: !10870)
!10881 = !DILocation(line: 2507, column: 25, scope: !10877)
!10882 = !DILocation(line: 2507, column: 6, scope: !10877)
!10883 = !DILocation(line: 2507, column: 11, scope: !10877)
!10884 = !DILocation(line: 2507, column: 23, scope: !10877)
!10885 = !DILocation(line: 2508, column: 3, scope: !10859)
!10886 = !DILocation(line: 2510, column: 7, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 2510, column: 7)
!10888 = !DILocation(line: 2510, column: 7, scope: !10821)
!10889 = !DILocalVariable(name: "lba_desc", scope: !10890, file: !3, line: 2511, type: !1450)
!10890 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2510, column: 27)
!10891 = !DILocation(line: 2511, column: 16, scope: !10890)
!10892 = !DILocalVariable(name: "ncq_desc", scope: !10890, file: !3, line: 2512, type: !10893)
!10893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 192, elements: !3722)
!10894 = !DILocation(line: 2512, column: 9, scope: !10890)
!10895 = !DILocation(line: 2514, column: 13, scope: !10890)
!10896 = !DILocation(line: 2515, column: 4, scope: !10890)
!10897 = !DILocation(line: 2515, column: 9, scope: !10890)
!10898 = !DILocation(line: 2515, column: 15, scope: !10890)
!10899 = !DILocation(line: 2516, column: 25, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 2516, column: 8)
!10901 = !DILocation(line: 2516, column: 8, scope: !10900)
!10902 = !DILocation(line: 2516, column: 8, scope: !10890)
!10903 = !DILocation(line: 2517, column: 5, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 2516, column: 30)
!10905 = !DILocation(line: 2517, column: 10, scope: !10904)
!10906 = !DILocation(line: 2517, column: 16, scope: !10904)
!10907 = !DILocation(line: 2518, column: 14, scope: !10904)
!10908 = !DILocation(line: 2520, column: 9, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 2520, column: 9)
!10910 = !DILocation(line: 2520, column: 14, scope: !10909)
!10911 = !DILocation(line: 2520, column: 24, scope: !10909)
!10912 = !DILocation(line: 2520, column: 39, scope: !10909)
!10913 = !DILocation(line: 2521, column: 30, scope: !10909)
!10914 = !DILocation(line: 2521, column: 9, scope: !10909)
!10915 = !DILocation(line: 2520, column: 9, scope: !10904)
!10916 = !DILocation(line: 2522, column: 6, scope: !10909)
!10917 = !DILocation(line: 2522, column: 11, scope: !10909)
!10918 = !DILocation(line: 2522, column: 17, scope: !10909)
!10919 = !DILocation(line: 2523, column: 4, scope: !10904)
!10920 = !DILocation(line: 2526, column: 28, scope: !10890)
!10921 = !DILocation(line: 2526, column: 33, scope: !10890)
!10922 = !DILocation(line: 2526, column: 9, scope: !10890)
!10923 = !DILocation(line: 2526, column: 7, scope: !10890)
!10924 = !DILocation(line: 2527, column: 8, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 2527, column: 8)
!10926 = !DILocation(line: 2527, column: 8, scope: !10890)
!10927 = !DILocation(line: 2528, column: 12, scope: !10925)
!10928 = !DILocation(line: 2528, column: 5, scope: !10925)
!10929 = !DILocation(line: 2531, column: 8, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 2531, column: 8)
!10931 = !DILocation(line: 2531, column: 24, scope: !10930)
!10932 = !DILocation(line: 2531, column: 27, scope: !10930)
!10933 = !DILocation(line: 2531, column: 8, scope: !10890)
!10934 = !DILocation(line: 2532, column: 5, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 2531, column: 39)
!10936 = !DILocation(line: 2535, column: 5, scope: !10935)
!10937 = !DILocation(line: 2539, column: 4, scope: !10935)
!10938 = !DILocation(line: 2540, column: 3, scope: !10890)
!10939 = !DILocation(line: 2544, column: 21, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2540, column: 10)
!10941 = !DILocation(line: 2544, column: 4, scope: !10940)
!10942 = !DILocation(line: 2544, column: 9, scope: !10940)
!10943 = !DILocation(line: 2544, column: 19, scope: !10940)
!10944 = !DILocation(line: 2545, column: 17, scope: !10940)
!10945 = !DILocation(line: 2545, column: 4, scope: !10940)
!10946 = !DILocation(line: 2545, column: 9, scope: !10940)
!10947 = !DILocation(line: 2545, column: 15, scope: !10940)
!10948 = !DILocation(line: 2546, column: 19, scope: !10940)
!10949 = !DILocation(line: 2546, column: 4, scope: !10940)
!10950 = !DILocation(line: 2546, column: 9, scope: !10940)
!10951 = !DILocation(line: 2546, column: 17, scope: !10940)
!10952 = !DILocation(line: 2548, column: 33, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 2548, column: 8)
!10954 = !DILocation(line: 2548, column: 8, scope: !10953)
!10955 = !DILocation(line: 2548, column: 8, scope: !10940)
!10956 = !DILocation(line: 2550, column: 22, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 2548, column: 38)
!10958 = !DILocation(line: 2550, column: 5, scope: !10957)
!10959 = !DILocation(line: 2550, column: 10, scope: !10957)
!10960 = !DILocation(line: 2550, column: 20, scope: !10957)
!10961 = !DILocation(line: 2551, column: 22, scope: !10957)
!10962 = !DILocation(line: 2551, column: 5, scope: !10957)
!10963 = !DILocation(line: 2551, column: 10, scope: !10957)
!10964 = !DILocation(line: 2551, column: 20, scope: !10957)
!10965 = !DILocation(line: 2552, column: 22, scope: !10957)
!10966 = !DILocation(line: 2552, column: 5, scope: !10957)
!10967 = !DILocation(line: 2552, column: 10, scope: !10957)
!10968 = !DILocation(line: 2552, column: 20, scope: !10957)
!10969 = !DILocation(line: 2553, column: 4, scope: !10957)
!10970 = !DILocation(line: 2556, column: 8, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 2556, column: 8)
!10972 = !DILocation(line: 2556, column: 24, scope: !10971)
!10973 = !DILocation(line: 2556, column: 27, scope: !10971)
!10974 = !DILocation(line: 2556, column: 8, scope: !10940)
!10975 = !DILocation(line: 2557, column: 5, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 2556, column: 39)
!10977 = !DILocation(line: 2560, column: 5, scope: !10976)
!10978 = !DILocation(line: 2565, column: 4, scope: !10976)
!10979 = !DILocation(line: 2571, column: 7, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 2571, column: 7)
!10981 = !DILocation(line: 2571, column: 7, scope: !10821)
!10982 = !DILocalVariable(name: "sata_setting", scope: !10983, file: !3, line: 2572, type: !6456)
!10983 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 2571, column: 35)
!10984 = !DILocation(line: 2572, column: 8, scope: !10983)
!10985 = !DILocation(line: 2572, column: 23, scope: !10983)
!10986 = !DILocation(line: 2572, column: 27, scope: !10983)
!10987 = !DILocalVariable(name: "i", scope: !10983, file: !3, line: 2573, type: !223)
!10988 = !DILocation(line: 2573, column: 8, scope: !10983)
!10989 = !DILocalVariable(name: "j", scope: !10983, file: !3, line: 2573, type: !223)
!10990 = !DILocation(line: 2573, column: 11, scope: !10983)
!10991 = !DILocation(line: 2575, column: 4, scope: !10983)
!10992 = !DILocation(line: 2575, column: 9, scope: !10983)
!10993 = !DILocation(line: 2575, column: 15, scope: !10983)
!10994 = !DILocation(line: 2576, column: 33, scope: !10983)
!10995 = !DILocation(line: 2579, column: 12, scope: !10983)
!10996 = !DILocation(line: 2576, column: 15, scope: !10983)
!10997 = !DILocation(line: 2576, column: 13, scope: !10983)
!10998 = !DILocation(line: 2581, column: 8, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10983, file: !3, line: 2581, column: 8)
!11000 = !DILocation(line: 2581, column: 8, scope: !10983)
!11001 = !DILocation(line: 2582, column: 5, scope: !10999)
!11002 = !DILocation(line: 2586, column: 12, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2586, column: 5)
!11004 = !DILocation(line: 2586, column: 10, scope: !11003)
!11005 = !DILocation(line: 2586, column: 17, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 2586, column: 5)
!11007 = !DILocation(line: 2586, column: 19, scope: !11006)
!11008 = !DILocation(line: 2586, column: 5, scope: !11003)
!11009 = !DILocation(line: 2587, column: 34, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 2586, column: 47)
!11011 = !DILocation(line: 2587, column: 32, scope: !11010)
!11012 = !DILocation(line: 2587, column: 8, scope: !11010)
!11013 = !DILocation(line: 2588, column: 30, scope: !11010)
!11014 = !DILocation(line: 2588, column: 43, scope: !11010)
!11015 = !DILocation(line: 2588, column: 6, scope: !11010)
!11016 = !DILocation(line: 2588, column: 11, scope: !11010)
!11017 = !DILocation(line: 2588, column: 25, scope: !11010)
!11018 = !DILocation(line: 2588, column: 28, scope: !11010)
!11019 = !DILocation(line: 2589, column: 5, scope: !11010)
!11020 = !DILocation(line: 2586, column: 43, scope: !11006)
!11021 = !DILocation(line: 2586, column: 5, scope: !11006)
!11022 = distinct !{!11022, !11008, !11023}
!11023 = !DILocation(line: 2589, column: 5, scope: !11003)
!11024 = !DILocation(line: 2590, column: 3, scope: !10983)
!11025 = !DILocation(line: 2591, column: 34, scope: !10821)
!11026 = !DILocation(line: 2591, column: 3, scope: !10821)
!11027 = !DILocation(line: 2592, column: 22, scope: !10821)
!11028 = !DILocation(line: 2592, column: 3, scope: !10821)
!11029 = !DILocation(line: 2593, column: 26, scope: !10821)
!11030 = !DILocation(line: 2593, column: 3, scope: !10821)
!11031 = !DILocation(line: 2594, column: 3, scope: !10821)
!11032 = !DILocation(line: 2594, column: 8, scope: !10821)
!11033 = !DILocation(line: 2594, column: 16, scope: !10821)
!11034 = !DILocation(line: 2595, column: 2, scope: !10821)
!11035 = !DILocation(line: 2598, column: 11, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 2598, column: 11)
!11037 = !DILocation(line: 2598, column: 16, scope: !11036)
!11038 = !DILocation(line: 2598, column: 22, scope: !11036)
!11039 = !DILocation(line: 2598, column: 11, scope: !10811)
!11040 = !DILocalVariable(name: "cdb_intr_string", scope: !11041, file: !3, line: 2599, type: !1450)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 2598, column: 40)
!11042 = !DILocation(line: 2599, column: 15, scope: !11041)
!11043 = !DILocalVariable(name: "atapi_an_string", scope: !11041, file: !3, line: 2600, type: !1450)
!11044 = !DILocation(line: 2600, column: 15, scope: !11041)
!11045 = !DILocalVariable(name: "dma_dir_string", scope: !11041, file: !3, line: 2601, type: !1450)
!11046 = !DILocation(line: 2601, column: 15, scope: !11041)
!11047 = !DILocalVariable(name: "sntf", scope: !11041, file: !3, line: 2602, type: !989)
!11048 = !DILocation(line: 2602, column: 7, scope: !11041)
!11049 = !DILocation(line: 2604, column: 22, scope: !11041)
!11050 = !DILocation(line: 2604, column: 8, scope: !11041)
!11051 = !DILocation(line: 2604, column: 6, scope: !11041)
!11052 = !DILocation(line: 2605, column: 8, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 2605, column: 7)
!11054 = !DILocation(line: 2605, column: 11, scope: !11053)
!11055 = !DILocation(line: 2605, column: 17, scope: !11053)
!11056 = !DILocation(line: 2605, column: 21, scope: !11053)
!11057 = !DILocation(line: 2605, column: 24, scope: !11053)
!11058 = !DILocation(line: 2605, column: 7, scope: !11041)
!11059 = !DILocation(line: 2606, column: 8, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 2606, column: 8)
!11061 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 2605, column: 42)
!11062 = !DILocation(line: 2606, column: 8, scope: !11061)
!11063 = !DILocation(line: 2607, column: 5, scope: !11060)
!11064 = !DILocation(line: 2608, column: 7, scope: !11061)
!11065 = !DILocation(line: 2609, column: 4, scope: !11061)
!11066 = !DILocation(line: 2611, column: 33, scope: !11041)
!11067 = !DILocation(line: 2611, column: 3, scope: !11041)
!11068 = !DILocation(line: 2611, column: 8, scope: !11041)
!11069 = !DILocation(line: 2611, column: 16, scope: !11041)
!11070 = !DILocation(line: 2618, column: 7, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 2618, column: 7)
!11072 = !DILocation(line: 2618, column: 16, scope: !11071)
!11073 = !DILocation(line: 2619, column: 8, scope: !11071)
!11074 = !DILocation(line: 2619, column: 12, scope: !11071)
!11075 = !DILocation(line: 2619, column: 18, scope: !11071)
!11076 = !DILocation(line: 2619, column: 33, scope: !11071)
!11077 = !DILocation(line: 2619, column: 36, scope: !11071)
!11078 = !DILocation(line: 2619, column: 60, scope: !11071)
!11079 = !DILocation(line: 2620, column: 27, scope: !11071)
!11080 = !DILocation(line: 2620, column: 9, scope: !11071)
!11081 = !DILocation(line: 2620, column: 31, scope: !11071)
!11082 = !DILocation(line: 2621, column: 23, scope: !11071)
!11083 = !DILocation(line: 2621, column: 27, scope: !11071)
!11084 = !DILocation(line: 2621, column: 8, scope: !11071)
!11085 = !DILocation(line: 2621, column: 58, scope: !11071)
!11086 = !DILocation(line: 2618, column: 7, scope: !11041)
!11087 = !DILocation(line: 2623, column: 35, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 2621, column: 65)
!11089 = !DILocation(line: 2623, column: 15, scope: !11088)
!11090 = !DILocation(line: 2623, column: 13, scope: !11088)
!11091 = !DILocation(line: 2625, column: 8, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 2625, column: 8)
!11093 = !DILocation(line: 2625, column: 8, scope: !11088)
!11094 = !DILocation(line: 2626, column: 5, scope: !11092)
!11095 = !DILocation(line: 2630, column: 5, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11092, file: !3, line: 2629, column: 9)
!11097 = !DILocation(line: 2630, column: 10, scope: !11096)
!11098 = !DILocation(line: 2630, column: 16, scope: !11096)
!11099 = !DILocation(line: 2631, column: 21, scope: !11096)
!11100 = !DILocation(line: 2633, column: 3, scope: !11088)
!11101 = !DILocation(line: 2635, column: 7, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 2635, column: 7)
!11103 = !DILocation(line: 2635, column: 7, scope: !11041)
!11104 = !DILocation(line: 2636, column: 4, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 2635, column: 33)
!11106 = !DILocation(line: 2636, column: 9, scope: !11105)
!11107 = !DILocation(line: 2636, column: 15, scope: !11105)
!11108 = !DILocation(line: 2637, column: 20, scope: !11105)
!11109 = !DILocation(line: 2638, column: 3, scope: !11105)
!11110 = !DILocation(line: 2640, column: 7, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 2640, column: 7)
!11112 = !DILocation(line: 2640, column: 20, scope: !11111)
!11113 = !DILocation(line: 2640, column: 24, scope: !11111)
!11114 = !DILocation(line: 2640, column: 29, scope: !11111)
!11115 = !DILocation(line: 2640, column: 37, scope: !11111)
!11116 = !DILocation(line: 2640, column: 65, scope: !11111)
!11117 = !DILocation(line: 2640, column: 84, scope: !11111)
!11118 = !DILocation(line: 2640, column: 89, scope: !11111)
!11119 = !DILocation(line: 2640, column: 68, scope: !11111)
!11120 = !DILocation(line: 2640, column: 7, scope: !11041)
!11121 = !DILocation(line: 2641, column: 4, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 2640, column: 94)
!11123 = !DILocation(line: 2641, column: 9, scope: !11122)
!11124 = !DILocation(line: 2641, column: 15, scope: !11122)
!11125 = !DILocation(line: 2642, column: 19, scope: !11122)
!11126 = !DILocation(line: 2643, column: 3, scope: !11122)
!11127 = !DILocation(line: 2645, column: 7, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 2645, column: 7)
!11129 = !DILocation(line: 2645, column: 7, scope: !11041)
!11130 = !DILocation(line: 2646, column: 4, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 2645, column: 31)
!11132 = !DILocation(line: 2646, column: 9, scope: !11131)
!11133 = !DILocation(line: 2646, column: 15, scope: !11131)
!11134 = !DILocation(line: 2647, column: 15, scope: !11131)
!11135 = !DILocation(line: 2647, column: 4, scope: !11131)
!11136 = !DILocation(line: 2648, column: 3, scope: !11131)
!11137 = !DILocation(line: 2651, column: 7, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 2651, column: 7)
!11139 = !DILocation(line: 2651, column: 23, scope: !11138)
!11140 = !DILocation(line: 2651, column: 26, scope: !11138)
!11141 = !DILocation(line: 2651, column: 7, scope: !11041)
!11142 = !DILocation(line: 2652, column: 4, scope: !11138)
!11143 = !DILocation(line: 2658, column: 2, scope: !11041)
!11144 = !DILocation(line: 2661, column: 2, scope: !10623)
!11145 = !DILocation(line: 2661, column: 7, scope: !10623)
!11146 = !DILocation(line: 2661, column: 19, scope: !10623)
!11147 = !DILocation(line: 2662, column: 6, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2662, column: 6)
!11149 = !DILocation(line: 2662, column: 11, scope: !11148)
!11150 = !DILocation(line: 2662, column: 17, scope: !11148)
!11151 = !DILocation(line: 2662, column: 6, scope: !10623)
!11152 = !DILocation(line: 2663, column: 3, scope: !11148)
!11153 = !DILocation(line: 2663, column: 8, scope: !11148)
!11154 = !DILocation(line: 2663, column: 20, scope: !11148)
!11155 = !DILocation(line: 2667, column: 22, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2667, column: 6)
!11157 = !DILocation(line: 2667, column: 6, scope: !11156)
!11158 = !DILocation(line: 2667, column: 6, scope: !10623)
!11159 = !DILocation(line: 2668, column: 7, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 2668, column: 7)
!11161 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 2667, column: 28)
!11162 = !DILocation(line: 2668, column: 23, scope: !11160)
!11163 = !DILocation(line: 2668, column: 26, scope: !11160)
!11164 = !DILocation(line: 2668, column: 7, scope: !11161)
!11165 = !DILocation(line: 2669, column: 4, scope: !11160)
!11166 = !DILocation(line: 2670, column: 3, scope: !11161)
!11167 = !DILocation(line: 2670, column: 8, scope: !11161)
!11168 = !DILocation(line: 2670, column: 18, scope: !11161)
!11169 = !DILocation(line: 2671, column: 3, scope: !11161)
!11170 = !DILocation(line: 2671, column: 8, scope: !11161)
!11171 = !DILocation(line: 2671, column: 20, scope: !11161)
!11172 = !DILocation(line: 2672, column: 2, scope: !11161)
!11173 = !DILocation(line: 2674, column: 7, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2674, column: 6)
!11175 = !DILocation(line: 2674, column: 12, scope: !11174)
!11176 = !DILocation(line: 2674, column: 18, scope: !11174)
!11177 = !DILocation(line: 2674, column: 36, scope: !11174)
!11178 = !DILocation(line: 2675, column: 32, scope: !11174)
!11179 = !DILocation(line: 2675, column: 7, scope: !11174)
!11180 = !DILocation(line: 2675, column: 36, scope: !11174)
!11181 = !DILocation(line: 2674, column: 6, scope: !10623)
!11182 = !DILocation(line: 2676, column: 3, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 2675, column: 51)
!11184 = !DILocation(line: 2676, column: 8, scope: !11183)
!11185 = !DILocation(line: 2676, column: 20, scope: !11183)
!11186 = !DILocation(line: 2677, column: 3, scope: !11183)
!11187 = !DILocation(line: 2677, column: 8, scope: !11183)
!11188 = !DILocation(line: 2677, column: 16, scope: !11183)
!11189 = !DILocation(line: 2678, column: 2, scope: !11183)
!11190 = !DILocation(line: 2680, column: 6, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2680, column: 6)
!11192 = !DILocation(line: 2680, column: 11, scope: !11191)
!11193 = !DILocation(line: 2680, column: 19, scope: !11191)
!11194 = !DILocation(line: 2680, column: 6, scope: !10623)
!11195 = !DILocalVariable(name: "__UNIQUE_ID___x344", scope: !11196, file: !3, line: 2681, type: !7)
!11196 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 2681, column: 22)
!11197 = !DILocation(line: 2681, column: 22, scope: !11196)
!11198 = !DILocalVariable(name: "__UNIQUE_ID___y345", scope: !11196, file: !3, line: 2681, type: !7)
!11199 = !DILocation(line: 2681, column: 3, scope: !11191)
!11200 = !DILocation(line: 2681, column: 8, scope: !11191)
!11201 = !DILocation(line: 2681, column: 20, scope: !11191)
!11202 = !DILocation(line: 2684, column: 6, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2684, column: 6)
!11204 = !DILocation(line: 2684, column: 11, scope: !11203)
!11205 = !DILocation(line: 2684, column: 19, scope: !11203)
!11206 = !DILocation(line: 2684, column: 6, scope: !10623)
!11207 = !DILocalVariable(name: "__UNIQUE_ID___x346", scope: !11208, file: !3, line: 2685, type: !7)
!11208 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 2685, column: 22)
!11209 = !DILocation(line: 2685, column: 22, scope: !11208)
!11210 = !DILocalVariable(name: "__UNIQUE_ID___y347", scope: !11208, file: !3, line: 2685, type: !7)
!11211 = !DILocation(line: 2685, column: 3, scope: !11203)
!11212 = !DILocation(line: 2685, column: 8, scope: !11203)
!11213 = !DILocation(line: 2685, column: 20, scope: !11203)
!11214 = !DILocation(line: 2688, column: 6, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2688, column: 6)
!11216 = !DILocation(line: 2688, column: 11, scope: !11215)
!11217 = !DILocation(line: 2688, column: 19, scope: !11215)
!11218 = !DILocation(line: 2688, column: 6, scope: !10623)
!11219 = !DILocation(line: 2689, column: 3, scope: !11215)
!11220 = !DILocation(line: 2689, column: 8, scope: !11215)
!11221 = !DILocation(line: 2689, column: 20, scope: !11215)
!11222 = !DILocation(line: 2691, column: 6, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2691, column: 6)
!11224 = !DILocation(line: 2691, column: 10, scope: !11223)
!11225 = !DILocation(line: 2691, column: 15, scope: !11223)
!11226 = !DILocation(line: 2691, column: 6, scope: !10623)
!11227 = !DILocation(line: 2692, column: 3, scope: !11223)
!11228 = !DILocation(line: 2692, column: 7, scope: !11223)
!11229 = !DILocation(line: 2692, column: 12, scope: !11223)
!11230 = !DILocation(line: 2692, column: 23, scope: !11223)
!11231 = !DILocation(line: 2694, column: 6, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2694, column: 6)
!11233 = !DILocation(line: 2694, column: 11, scope: !11232)
!11234 = !DILocation(line: 2694, column: 19, scope: !11232)
!11235 = !DILocation(line: 2694, column: 6, scope: !10623)
!11236 = !DILocation(line: 2701, column: 7, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 2701, column: 7)
!11238 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 2694, column: 45)
!11239 = !DILocation(line: 2701, column: 7, scope: !11238)
!11240 = !DILocation(line: 2702, column: 4, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 2701, column: 19)
!11242 = !DILocation(line: 2704, column: 4, scope: !11241)
!11243 = !DILocation(line: 2706, column: 3, scope: !11241)
!11244 = !DILocation(line: 2707, column: 2, scope: !11238)
!11245 = !DILocation(line: 2709, column: 7, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2709, column: 6)
!11247 = !DILocation(line: 2709, column: 12, scope: !11246)
!11248 = !DILocation(line: 2709, column: 20, scope: !11246)
!11249 = !DILocation(line: 2709, column: 49, scope: !11246)
!11250 = !DILocation(line: 2709, column: 52, scope: !11246)
!11251 = !DILocation(line: 2709, column: 6, scope: !10623)
!11252 = !DILocation(line: 2710, column: 3, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 2709, column: 64)
!11254 = !DILocation(line: 2711, column: 3, scope: !11253)
!11255 = !DILocation(line: 2712, column: 2, scope: !11253)
!11256 = !DILocation(line: 2714, column: 2, scope: !10623)
!11257 = !DILabel(scope: !10623, name: "err_out_nosup", file: !3, line: 2716)
!11258 = !DILocation(line: 2716, column: 1, scope: !10623)
!11259 = !DILocation(line: 2717, column: 6, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2717, column: 6)
!11261 = !DILocation(line: 2717, column: 6, scope: !10623)
!11262 = !DILocation(line: 2718, column: 3, scope: !11260)
!11263 = !DILocation(line: 2719, column: 9, scope: !10623)
!11264 = !DILocation(line: 2719, column: 2, scope: !10623)
!11265 = !DILocation(line: 2720, column: 1, scope: !10623)
!11266 = distinct !DISubprogram(name: "ata_dev_blacklisted", scope: !3, file: !3, line: 4007, type: !11267, scopeLine: 4008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{!994, !7632}
!11269 = !DILocalVariable(name: "dev", arg: 1, scope: !11266, file: !3, line: 4007, type: !7632)
!11270 = !DILocation(line: 4007, column: 67, scope: !11266)
!11271 = !DILocalVariable(name: "model_num", scope: !11266, file: !3, line: 4009, type: !11272)
!11272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 328, elements: !10658)
!11273 = !DILocation(line: 4009, column: 16, scope: !11266)
!11274 = !DILocalVariable(name: "model_rev", scope: !11266, file: !3, line: 4010, type: !11275)
!11275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 72, elements: !3058)
!11276 = !DILocation(line: 4010, column: 16, scope: !11266)
!11277 = !DILocalVariable(name: "ad", scope: !11266, file: !3, line: 4011, type: !11278)
!11278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7248, size: 64)
!11279 = !DILocation(line: 4011, column: 36, scope: !11266)
!11280 = !DILocation(line: 4013, column: 18, scope: !11266)
!11281 = !DILocation(line: 4013, column: 23, scope: !11266)
!11282 = !DILocation(line: 4013, column: 27, scope: !11266)
!11283 = !DILocation(line: 4013, column: 2, scope: !11266)
!11284 = !DILocation(line: 4014, column: 18, scope: !11266)
!11285 = !DILocation(line: 4014, column: 23, scope: !11266)
!11286 = !DILocation(line: 4014, column: 27, scope: !11266)
!11287 = !DILocation(line: 4014, column: 2, scope: !11266)
!11288 = !DILocation(line: 4016, column: 2, scope: !11266)
!11289 = !DILocation(line: 4016, column: 9, scope: !11266)
!11290 = !DILocation(line: 4016, column: 13, scope: !11266)
!11291 = !DILocation(line: 4017, column: 18, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 4017, column: 7)
!11293 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 4016, column: 24)
!11294 = !DILocation(line: 4017, column: 22, scope: !11292)
!11295 = !DILocation(line: 4017, column: 33, scope: !11292)
!11296 = !DILocation(line: 4017, column: 7, scope: !11292)
!11297 = !DILocation(line: 4017, column: 7, scope: !11293)
!11298 = !DILocation(line: 4018, column: 8, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 4018, column: 8)
!11300 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 4017, column: 45)
!11301 = !DILocation(line: 4018, column: 12, scope: !11299)
!11302 = !DILocation(line: 4018, column: 22, scope: !11299)
!11303 = !DILocation(line: 4018, column: 8, scope: !11300)
!11304 = !DILocation(line: 4019, column: 12, scope: !11299)
!11305 = !DILocation(line: 4019, column: 16, scope: !11299)
!11306 = !DILocation(line: 4019, column: 5, scope: !11299)
!11307 = !DILocation(line: 4020, column: 19, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 4020, column: 8)
!11309 = !DILocation(line: 4020, column: 23, scope: !11308)
!11310 = !DILocation(line: 4020, column: 34, scope: !11308)
!11311 = !DILocation(line: 4020, column: 8, scope: !11308)
!11312 = !DILocation(line: 4020, column: 8, scope: !11300)
!11313 = !DILocation(line: 4021, column: 12, scope: !11308)
!11314 = !DILocation(line: 4021, column: 16, scope: !11308)
!11315 = !DILocation(line: 4021, column: 5, scope: !11308)
!11316 = !DILocation(line: 4022, column: 3, scope: !11300)
!11317 = !DILocation(line: 4023, column: 5, scope: !11293)
!11318 = distinct !{!11318, !11288, !11319}
!11319 = !DILocation(line: 4024, column: 2, scope: !11266)
!11320 = !DILocation(line: 4025, column: 2, scope: !11266)
!11321 = !DILocation(line: 4026, column: 1, scope: !11266)
!11322 = distinct !DISubprogram(name: "ata_force_horkage", scope: !3, file: !3, line: 457, type: !6618, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11323 = !DILocalVariable(name: "dev", arg: 1, scope: !11322, file: !3, line: 457, type: !6374)
!11324 = !DILocation(line: 457, column: 50, scope: !11322)
!11325 = !DILocalVariable(name: "devno", scope: !11322, file: !3, line: 459, type: !223)
!11326 = !DILocation(line: 459, column: 6, scope: !11322)
!11327 = !DILocation(line: 459, column: 14, scope: !11322)
!11328 = !DILocation(line: 459, column: 19, scope: !11322)
!11329 = !DILocation(line: 459, column: 25, scope: !11322)
!11330 = !DILocation(line: 459, column: 31, scope: !11322)
!11331 = !DILocation(line: 459, column: 36, scope: !11322)
!11332 = !DILocation(line: 459, column: 29, scope: !11322)
!11333 = !DILocalVariable(name: "alt_devno", scope: !11322, file: !3, line: 460, type: !223)
!11334 = !DILocation(line: 460, column: 6, scope: !11322)
!11335 = !DILocation(line: 460, column: 18, scope: !11322)
!11336 = !DILocalVariable(name: "i", scope: !11322, file: !3, line: 461, type: !223)
!11337 = !DILocation(line: 461, column: 6, scope: !11322)
!11338 = !DILocation(line: 464, column: 23, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 464, column: 6)
!11340 = !DILocation(line: 464, column: 28, scope: !11339)
!11341 = !DILocation(line: 464, column: 6, scope: !11339)
!11342 = !DILocation(line: 464, column: 6, scope: !11322)
!11343 = !DILocation(line: 465, column: 13, scope: !11339)
!11344 = !DILocation(line: 465, column: 3, scope: !11339)
!11345 = !DILocation(line: 467, column: 9, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 467, column: 2)
!11347 = !DILocation(line: 467, column: 7, scope: !11346)
!11348 = !DILocation(line: 467, column: 14, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 467, column: 2)
!11350 = !DILocation(line: 467, column: 18, scope: !11349)
!11351 = !DILocation(line: 467, column: 16, scope: !11349)
!11352 = !DILocation(line: 467, column: 2, scope: !11346)
!11353 = !DILocalVariable(name: "fe", scope: !11354, file: !3, line: 468, type: !7684)
!11354 = distinct !DILexicalBlock(scope: !11349, file: !3, line: 467, column: 43)
!11355 = !DILocation(line: 468, column: 31, scope: !11354)
!11356 = !DILocation(line: 468, column: 37, scope: !11354)
!11357 = !DILocation(line: 468, column: 51, scope: !11354)
!11358 = !DILocation(line: 470, column: 7, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 470, column: 7)
!11360 = !DILocation(line: 470, column: 11, scope: !11359)
!11361 = !DILocation(line: 470, column: 16, scope: !11359)
!11362 = !DILocation(line: 470, column: 22, scope: !11359)
!11363 = !DILocation(line: 470, column: 25, scope: !11359)
!11364 = !DILocation(line: 470, column: 29, scope: !11359)
!11365 = !DILocation(line: 470, column: 37, scope: !11359)
!11366 = !DILocation(line: 470, column: 42, scope: !11359)
!11367 = !DILocation(line: 470, column: 48, scope: !11359)
!11368 = !DILocation(line: 470, column: 52, scope: !11359)
!11369 = !DILocation(line: 470, column: 34, scope: !11359)
!11370 = !DILocation(line: 470, column: 7, scope: !11354)
!11371 = !DILocation(line: 471, column: 4, scope: !11359)
!11372 = !DILocation(line: 473, column: 7, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 473, column: 7)
!11374 = !DILocation(line: 473, column: 11, scope: !11373)
!11375 = !DILocation(line: 473, column: 18, scope: !11373)
!11376 = !DILocation(line: 473, column: 24, scope: !11373)
!11377 = !DILocation(line: 473, column: 27, scope: !11373)
!11378 = !DILocation(line: 473, column: 31, scope: !11373)
!11379 = !DILocation(line: 473, column: 41, scope: !11373)
!11380 = !DILocation(line: 473, column: 38, scope: !11373)
!11381 = !DILocation(line: 473, column: 47, scope: !11373)
!11382 = !DILocation(line: 474, column: 7, scope: !11373)
!11383 = !DILocation(line: 474, column: 11, scope: !11373)
!11384 = !DILocation(line: 474, column: 21, scope: !11373)
!11385 = !DILocation(line: 474, column: 18, scope: !11373)
!11386 = !DILocation(line: 473, column: 7, scope: !11354)
!11387 = !DILocation(line: 475, column: 4, scope: !11373)
!11388 = !DILocation(line: 477, column: 10, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 477, column: 7)
!11390 = !DILocation(line: 477, column: 15, scope: !11389)
!11391 = !DILocation(line: 477, column: 9, scope: !11389)
!11392 = !DILocation(line: 477, column: 25, scope: !11389)
!11393 = !DILocation(line: 477, column: 29, scope: !11389)
!11394 = !DILocation(line: 477, column: 35, scope: !11389)
!11395 = !DILocation(line: 477, column: 23, scope: !11389)
!11396 = !DILocation(line: 477, column: 47, scope: !11389)
!11397 = !DILocation(line: 478, column: 9, scope: !11389)
!11398 = !DILocation(line: 478, column: 14, scope: !11389)
!11399 = !DILocation(line: 478, column: 24, scope: !11389)
!11400 = !DILocation(line: 478, column: 28, scope: !11389)
!11401 = !DILocation(line: 478, column: 34, scope: !11389)
!11402 = !DILocation(line: 478, column: 22, scope: !11389)
!11403 = !DILocation(line: 477, column: 7, scope: !11354)
!11404 = !DILocation(line: 479, column: 4, scope: !11389)
!11405 = !DILocation(line: 481, column: 19, scope: !11354)
!11406 = !DILocation(line: 481, column: 23, scope: !11354)
!11407 = !DILocation(line: 481, column: 29, scope: !11354)
!11408 = !DILocation(line: 481, column: 3, scope: !11354)
!11409 = !DILocation(line: 481, column: 8, scope: !11354)
!11410 = !DILocation(line: 481, column: 16, scope: !11354)
!11411 = !DILocation(line: 482, column: 20, scope: !11354)
!11412 = !DILocation(line: 482, column: 24, scope: !11354)
!11413 = !DILocation(line: 482, column: 30, scope: !11354)
!11414 = !DILocation(line: 482, column: 19, scope: !11354)
!11415 = !DILocation(line: 482, column: 3, scope: !11354)
!11416 = !DILocation(line: 482, column: 8, scope: !11354)
!11417 = !DILocation(line: 482, column: 16, scope: !11354)
!11418 = !DILocation(line: 484, column: 3, scope: !11354)
!11419 = !DILocation(line: 486, column: 2, scope: !11354)
!11420 = !DILocation(line: 467, column: 39, scope: !11349)
!11421 = !DILocation(line: 467, column: 2, scope: !11349)
!11422 = distinct !{!11422, !11352, !11423}
!11423 = !DILocation(line: 486, column: 2, scope: !11346)
!11424 = !DILocation(line: 487, column: 1, scope: !11322)
!11425 = distinct !DISubprogram(name: "ata_do_link_spd_horkage", scope: !3, file: !3, line: 2076, type: !8230, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11426 = !DILocalVariable(name: "dev", arg: 1, scope: !11425, file: !3, line: 2076, type: !6374)
!11427 = !DILocation(line: 2076, column: 55, scope: !11425)
!11428 = !DILocalVariable(name: "plink", scope: !11425, file: !3, line: 2078, type: !6378)
!11429 = !DILocation(line: 2078, column: 19, scope: !11425)
!11430 = !DILocation(line: 2078, column: 45, scope: !11425)
!11431 = !DILocation(line: 2078, column: 27, scope: !11425)
!11432 = !DILocalVariable(name: "target", scope: !11425, file: !3, line: 2079, type: !989)
!11433 = !DILocation(line: 2079, column: 6, scope: !11425)
!11434 = !DILocalVariable(name: "target_limit", scope: !11425, file: !3, line: 2079, type: !989)
!11435 = !DILocation(line: 2079, column: 14, scope: !11425)
!11436 = !DILocation(line: 2081, column: 22, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2081, column: 6)
!11438 = !DILocation(line: 2081, column: 7, scope: !11437)
!11439 = !DILocation(line: 2081, column: 6, scope: !11425)
!11440 = !DILocation(line: 2082, column: 3, scope: !11437)
!11441 = !DILocation(line: 2084, column: 6, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2084, column: 6)
!11443 = !DILocation(line: 2084, column: 11, scope: !11442)
!11444 = !DILocation(line: 2084, column: 19, scope: !11442)
!11445 = !DILocation(line: 2084, column: 6, scope: !11425)
!11446 = !DILocation(line: 2085, column: 10, scope: !11442)
!11447 = !DILocation(line: 2085, column: 3, scope: !11442)
!11448 = !DILocation(line: 2087, column: 3, scope: !11442)
!11449 = !DILocation(line: 2089, column: 23, scope: !11425)
!11450 = !DILocation(line: 2089, column: 20, scope: !11425)
!11451 = !DILocation(line: 2089, column: 31, scope: !11425)
!11452 = !DILocation(line: 2089, column: 15, scope: !11425)
!11453 = !DILocation(line: 2092, column: 6, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2092, column: 6)
!11455 = !DILocation(line: 2092, column: 13, scope: !11454)
!11456 = !DILocation(line: 2092, column: 31, scope: !11454)
!11457 = !DILocation(line: 2092, column: 28, scope: !11454)
!11458 = !DILocation(line: 2092, column: 6, scope: !11425)
!11459 = !DILocation(line: 2093, column: 3, scope: !11454)
!11460 = !DILocation(line: 2095, column: 26, scope: !11425)
!11461 = !DILocation(line: 2095, column: 2, scope: !11425)
!11462 = !DILocation(line: 2095, column: 9, scope: !11425)
!11463 = !DILocation(line: 2095, column: 24, scope: !11425)
!11464 = !DILocation(line: 2101, column: 6, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2101, column: 6)
!11466 = !DILocation(line: 2101, column: 13, scope: !11465)
!11467 = !DILocation(line: 2101, column: 24, scope: !11465)
!11468 = !DILocation(line: 2101, column: 22, scope: !11465)
!11469 = !DILocation(line: 2101, column: 6, scope: !11425)
!11470 = !DILocation(line: 2102, column: 3, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 2101, column: 32)
!11472 = !DILocation(line: 2104, column: 3, scope: !11471)
!11473 = !DILocation(line: 2106, column: 2, scope: !11425)
!11474 = !DILocation(line: 2107, column: 1, scope: !11425)
!11475 = distinct !DISubprogram(name: "ata_hpa_resize", scope: !3, file: !3, line: 1267, type: !8230, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11476 = !DILocalVariable(name: "dev", arg: 1, scope: !11475, file: !3, line: 1267, type: !6374)
!11477 = !DILocation(line: 1267, column: 46, scope: !11475)
!11478 = !DILocalVariable(name: "ehc", scope: !11475, file: !3, line: 1269, type: !7300)
!11479 = !DILocation(line: 1269, column: 25, scope: !11475)
!11480 = !DILocation(line: 1269, column: 32, scope: !11475)
!11481 = !DILocation(line: 1269, column: 37, scope: !11475)
!11482 = !DILocation(line: 1269, column: 43, scope: !11475)
!11483 = !DILocalVariable(name: "print_info", scope: !11475, file: !3, line: 1270, type: !223)
!11484 = !DILocation(line: 1270, column: 6, scope: !11475)
!11485 = !DILocation(line: 1270, column: 19, scope: !11475)
!11486 = !DILocation(line: 1270, column: 24, scope: !11475)
!11487 = !DILocation(line: 1270, column: 26, scope: !11475)
!11488 = !DILocation(line: 1270, column: 32, scope: !11475)
!11489 = !DILocalVariable(name: "unlock_hpa", scope: !11475, file: !3, line: 1271, type: !1495)
!11490 = !DILocation(line: 1271, column: 7, scope: !11475)
!11491 = !DILocation(line: 1271, column: 20, scope: !11475)
!11492 = !DILocation(line: 1271, column: 35, scope: !11475)
!11493 = !DILocation(line: 1271, column: 38, scope: !11475)
!11494 = !DILocation(line: 1271, column: 43, scope: !11475)
!11495 = !DILocation(line: 1271, column: 49, scope: !11475)
!11496 = !DILocalVariable(name: "sectors", scope: !11475, file: !3, line: 1272, type: !984)
!11497 = !DILocation(line: 1272, column: 6, scope: !11475)
!11498 = !DILocation(line: 1272, column: 33, scope: !11475)
!11499 = !DILocation(line: 1272, column: 38, scope: !11475)
!11500 = !DILocation(line: 1272, column: 16, scope: !11475)
!11501 = !DILocalVariable(name: "native_sectors", scope: !11475, file: !3, line: 1273, type: !984)
!11502 = !DILocation(line: 1273, column: 6, scope: !11475)
!11503 = !DILocalVariable(name: "rc", scope: !11475, file: !3, line: 1274, type: !223)
!11504 = !DILocation(line: 1274, column: 6, scope: !11475)
!11505 = !DILocation(line: 1277, column: 7, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 1277, column: 6)
!11507 = !DILocation(line: 1277, column: 12, scope: !11506)
!11508 = !DILocation(line: 1277, column: 18, scope: !11506)
!11509 = !DILocation(line: 1277, column: 33, scope: !11506)
!11510 = !DILocation(line: 1277, column: 36, scope: !11506)
!11511 = !DILocation(line: 1277, column: 41, scope: !11506)
!11512 = !DILocation(line: 1277, column: 47, scope: !11506)
!11513 = !DILocation(line: 1277, column: 63, scope: !11506)
!11514 = !DILocation(line: 1278, column: 7, scope: !11506)
!11515 = !DILocation(line: 1278, column: 31, scope: !11506)
!11516 = !DILocation(line: 1278, column: 54, scope: !11506)
!11517 = !DILocation(line: 1278, column: 59, scope: !11506)
!11518 = !DILocation(line: 1278, column: 35, scope: !11506)
!11519 = !DILocation(line: 1278, column: 63, scope: !11506)
!11520 = !DILocation(line: 1279, column: 7, scope: !11506)
!11521 = !DILocation(line: 1279, column: 12, scope: !11506)
!11522 = !DILocation(line: 1279, column: 20, scope: !11506)
!11523 = !DILocation(line: 1277, column: 6, scope: !11475)
!11524 = !DILocation(line: 1280, column: 3, scope: !11506)
!11525 = !DILocation(line: 1283, column: 35, scope: !11475)
!11526 = !DILocation(line: 1283, column: 7, scope: !11475)
!11527 = !DILocation(line: 1283, column: 5, scope: !11475)
!11528 = !DILocation(line: 1284, column: 6, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 1284, column: 6)
!11530 = !DILocation(line: 1284, column: 6, scope: !11475)
!11531 = !DILocation(line: 1288, column: 7, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1288, column: 7)
!11533 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 1284, column: 10)
!11534 = !DILocation(line: 1288, column: 10, scope: !11532)
!11535 = !DILocation(line: 1288, column: 21, scope: !11532)
!11536 = !DILocation(line: 1288, column: 25, scope: !11532)
!11537 = !DILocation(line: 1288, column: 7, scope: !11533)
!11538 = !DILocation(line: 1289, column: 4, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11532, file: !3, line: 1288, column: 37)
!11540 = !DILocation(line: 1291, column: 4, scope: !11539)
!11541 = !DILocation(line: 1291, column: 9, scope: !11539)
!11542 = !DILocation(line: 1291, column: 17, scope: !11539)
!11543 = !DILocation(line: 1294, column: 8, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 1294, column: 8)
!11545 = !DILocation(line: 1294, column: 11, scope: !11544)
!11546 = !DILocation(line: 1294, column: 8, scope: !11539)
!11547 = !DILocation(line: 1295, column: 8, scope: !11544)
!11548 = !DILocation(line: 1295, column: 5, scope: !11544)
!11549 = !DILocation(line: 1296, column: 3, scope: !11539)
!11550 = !DILocation(line: 1298, column: 10, scope: !11533)
!11551 = !DILocation(line: 1298, column: 3, scope: !11533)
!11552 = !DILocation(line: 1300, column: 26, scope: !11475)
!11553 = !DILocation(line: 1300, column: 2, scope: !11475)
!11554 = !DILocation(line: 1300, column: 7, scope: !11475)
!11555 = !DILocation(line: 1300, column: 24, scope: !11475)
!11556 = !DILocation(line: 1303, column: 6, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 1303, column: 6)
!11558 = !DILocation(line: 1303, column: 24, scope: !11557)
!11559 = !DILocation(line: 1303, column: 21, scope: !11557)
!11560 = !DILocation(line: 1303, column: 32, scope: !11557)
!11561 = !DILocation(line: 1303, column: 36, scope: !11557)
!11562 = !DILocation(line: 1303, column: 6, scope: !11475)
!11563 = !DILocation(line: 1304, column: 8, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 1304, column: 7)
!11565 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 1303, column: 48)
!11566 = !DILocation(line: 1304, column: 19, scope: !11564)
!11567 = !DILocation(line: 1304, column: 22, scope: !11564)
!11568 = !DILocation(line: 1304, column: 40, scope: !11564)
!11569 = !DILocation(line: 1304, column: 37, scope: !11564)
!11570 = !DILocation(line: 1304, column: 7, scope: !11565)
!11571 = !DILocation(line: 1305, column: 4, scope: !11564)
!11572 = !DILocation(line: 1307, column: 7, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 1307, column: 7)
!11574 = !DILocation(line: 1307, column: 24, scope: !11573)
!11575 = !DILocation(line: 1307, column: 22, scope: !11573)
!11576 = !DILocation(line: 1307, column: 7, scope: !11565)
!11577 = !DILocation(line: 1308, column: 4, scope: !11573)
!11578 = !DILocation(line: 1312, column: 12, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 1312, column: 12)
!11580 = !DILocation(line: 1312, column: 29, scope: !11579)
!11581 = !DILocation(line: 1312, column: 27, scope: !11579)
!11582 = !DILocation(line: 1312, column: 12, scope: !11573)
!11583 = !DILocation(line: 1313, column: 4, scope: !11579)
!11584 = !DILocation(line: 1317, column: 3, scope: !11565)
!11585 = !DILocation(line: 1321, column: 27, scope: !11475)
!11586 = !DILocation(line: 1321, column: 32, scope: !11475)
!11587 = !DILocation(line: 1321, column: 7, scope: !11475)
!11588 = !DILocation(line: 1321, column: 5, scope: !11475)
!11589 = !DILocation(line: 1322, column: 6, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 1322, column: 6)
!11591 = !DILocation(line: 1322, column: 9, scope: !11590)
!11592 = !DILocation(line: 1322, column: 6, scope: !11475)
!11593 = !DILocation(line: 1324, column: 3, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 1322, column: 21)
!11595 = !DILocation(line: 1328, column: 3, scope: !11594)
!11596 = !DILocation(line: 1328, column: 8, scope: !11594)
!11597 = !DILocation(line: 1328, column: 16, scope: !11594)
!11598 = !DILocation(line: 1329, column: 3, scope: !11594)
!11599 = !DILocation(line: 1330, column: 13, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 1330, column: 13)
!11601 = !DILocation(line: 1330, column: 13, scope: !11590)
!11602 = !DILocation(line: 1331, column: 10, scope: !11600)
!11603 = !DILocation(line: 1331, column: 3, scope: !11600)
!11604 = !DILocation(line: 1334, column: 25, scope: !11475)
!11605 = !DILocation(line: 1334, column: 7, scope: !11475)
!11606 = !DILocation(line: 1334, column: 5, scope: !11475)
!11607 = !DILocation(line: 1335, column: 6, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 1335, column: 6)
!11609 = !DILocation(line: 1335, column: 6, scope: !11475)
!11610 = !DILocation(line: 1336, column: 3, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11608, file: !3, line: 1335, column: 10)
!11612 = !DILocation(line: 1338, column: 10, scope: !11611)
!11613 = !DILocation(line: 1338, column: 3, scope: !11611)
!11614 = !DILocation(line: 1341, column: 6, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 1341, column: 6)
!11616 = !DILocation(line: 1341, column: 6, scope: !11475)
!11617 = !DILocalVariable(name: "new_sectors", scope: !11618, file: !3, line: 1342, type: !984)
!11618 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1341, column: 18)
!11619 = !DILocation(line: 1342, column: 7, scope: !11618)
!11620 = !DILocation(line: 1342, column: 38, scope: !11618)
!11621 = !DILocation(line: 1342, column: 43, scope: !11618)
!11622 = !DILocation(line: 1342, column: 21, scope: !11618)
!11623 = !DILocation(line: 1343, column: 3, scope: !11618)
!11624 = !DILocation(line: 1348, column: 2, scope: !11618)
!11625 = !DILocation(line: 1350, column: 2, scope: !11475)
!11626 = !DILocation(line: 1351, column: 1, scope: !11475)
!11627 = distinct !DISubprogram(name: "ata_dump_id", scope: !3, file: !3, line: 1364, type: !11628, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11628 = !DISubroutineType(types: !11629)
!11629 = !{null, !8685}
!11630 = !DILocalVariable(name: "id", arg: 1, scope: !11627, file: !3, line: 1364, type: !8685)
!11631 = !DILocation(line: 1364, column: 43, scope: !11627)
!11632 = !DILocation(line: 1390, column: 1, scope: !11627)
!11633 = distinct !DISubprogram(name: "ata_id_has_tpm", scope: !222, file: !222, line: 861, type: !8945, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11634 = !DILocalVariable(name: "id", arg: 1, scope: !11633, file: !222, line: 861, type: !8685)
!11635 = !DILocation(line: 861, column: 46, scope: !11633)
!11636 = !DILocation(line: 864, column: 27, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11633, file: !222, line: 864, column: 6)
!11638 = !DILocation(line: 864, column: 6, scope: !11637)
!11639 = !DILocation(line: 864, column: 31, scope: !11637)
!11640 = !DILocation(line: 864, column: 6, scope: !11633)
!11641 = !DILocation(line: 865, column: 3, scope: !11637)
!11642 = !DILocation(line: 866, column: 7, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11633, file: !222, line: 866, column: 6)
!11644 = !DILocation(line: 866, column: 14, scope: !11643)
!11645 = !DILocation(line: 866, column: 24, scope: !11643)
!11646 = !DILocation(line: 866, column: 6, scope: !11633)
!11647 = !DILocation(line: 867, column: 3, scope: !11643)
!11648 = !DILocation(line: 868, column: 9, scope: !11633)
!11649 = !DILocation(line: 868, column: 16, scope: !11633)
!11650 = !DILocation(line: 868, column: 2, scope: !11633)
!11651 = !DILocation(line: 869, column: 1, scope: !11633)
!11652 = distinct !DISubprogram(name: "ata_id_n_sectors", scope: !3, file: !3, line: 1104, type: !11653, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11653 = !DISubroutineType(types: !11654)
!11654 = !{!984, !8685}
!11655 = !DILocalVariable(name: "id", arg: 1, scope: !11652, file: !3, line: 1104, type: !8685)
!11656 = !DILocation(line: 1104, column: 40, scope: !11652)
!11657 = !DILocation(line: 1106, column: 6, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 1106, column: 6)
!11659 = !DILocation(line: 1106, column: 6, scope: !11652)
!11660 = !DILocation(line: 1107, column: 24, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 1107, column: 7)
!11662 = distinct !DILexicalBlock(scope: !11658, file: !3, line: 1106, column: 26)
!11663 = !DILocation(line: 1107, column: 7, scope: !11661)
!11664 = !DILocation(line: 1107, column: 7, scope: !11662)
!11665 = !DILocation(line: 1108, column: 11, scope: !11661)
!11666 = !DILocation(line: 1108, column: 4, scope: !11661)
!11667 = !DILocation(line: 1110, column: 11, scope: !11661)
!11668 = !DILocation(line: 1110, column: 4, scope: !11661)
!11669 = !DILocation(line: 1112, column: 32, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 1112, column: 7)
!11671 = distinct !DILexicalBlock(scope: !11658, file: !3, line: 1111, column: 9)
!11672 = !DILocation(line: 1112, column: 7, scope: !11670)
!11673 = !DILocation(line: 1112, column: 7, scope: !11671)
!11674 = !DILocation(line: 1113, column: 11, scope: !11670)
!11675 = !DILocation(line: 1113, column: 33, scope: !11670)
!11676 = !DILocation(line: 1113, column: 31, scope: !11670)
!11677 = !DILocation(line: 1114, column: 11, scope: !11670)
!11678 = !DILocation(line: 1113, column: 54, scope: !11670)
!11679 = !DILocation(line: 1113, column: 4, scope: !11670)
!11680 = !DILocation(line: 1116, column: 11, scope: !11670)
!11681 = !DILocation(line: 1116, column: 29, scope: !11670)
!11682 = !DILocation(line: 1116, column: 27, scope: !11670)
!11683 = !DILocation(line: 1117, column: 11, scope: !11670)
!11684 = !DILocation(line: 1116, column: 46, scope: !11670)
!11685 = !DILocation(line: 1116, column: 4, scope: !11670)
!11686 = !DILocation(line: 1119, column: 1, scope: !11652)
!11687 = distinct !DISubprogram(name: "is_power_of_2", scope: !11688, file: !11688, line: 45, type: !11689, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11688 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!1495, !994}
!11691 = !DILocalVariable(name: "n", arg: 1, scope: !11687, file: !11688, line: 45, type: !994)
!11692 = !DILocation(line: 45, column: 34, scope: !11687)
!11693 = !DILocation(line: 47, column: 10, scope: !11687)
!11694 = !DILocation(line: 47, column: 12, scope: !11687)
!11695 = !DILocation(line: 47, column: 17, scope: !11687)
!11696 = !DILocation(line: 47, column: 22, scope: !11687)
!11697 = !DILocation(line: 47, column: 27, scope: !11687)
!11698 = !DILocation(line: 47, column: 29, scope: !11687)
!11699 = !DILocation(line: 47, column: 24, scope: !11687)
!11700 = !DILocation(line: 47, column: 35, scope: !11687)
!11701 = !DILocation(line: 0, scope: !11687)
!11702 = !DILocation(line: 47, column: 2, scope: !11687)
!11703 = distinct !DISubprogram(name: "ata_id_has_lba48", scope: !222, file: !222, line: 693, type: !8945, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11704 = !DILocalVariable(name: "id", arg: 1, scope: !11703, file: !222, line: 693, type: !8685)
!11705 = !DILocation(line: 693, column: 48, scope: !11703)
!11706 = !DILocation(line: 695, column: 7, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11703, file: !222, line: 695, column: 6)
!11708 = !DILocation(line: 695, column: 32, scope: !11707)
!11709 = !DILocation(line: 695, column: 42, scope: !11707)
!11710 = !DILocation(line: 695, column: 6, scope: !11703)
!11711 = !DILocation(line: 696, column: 3, scope: !11707)
!11712 = !DILocation(line: 697, column: 7, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11703, file: !222, line: 697, column: 6)
!11714 = !DILocation(line: 697, column: 6, scope: !11703)
!11715 = !DILocation(line: 698, column: 3, scope: !11713)
!11716 = !DILocation(line: 699, column: 9, scope: !11703)
!11717 = !DILocation(line: 699, column: 34, scope: !11703)
!11718 = !DILocation(line: 699, column: 2, scope: !11703)
!11719 = !DILocation(line: 700, column: 1, scope: !11703)
!11720 = distinct !DISubprogram(name: "ata_id_has_flush_ext", scope: !222, file: !222, line: 628, type: !8945, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11721 = !DILocalVariable(name: "id", arg: 1, scope: !11720, file: !222, line: 628, type: !8685)
!11722 = !DILocation(line: 628, column: 52, scope: !11720)
!11723 = !DILocation(line: 630, column: 7, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11720, file: !222, line: 630, column: 6)
!11725 = !DILocation(line: 630, column: 32, scope: !11724)
!11726 = !DILocation(line: 630, column: 42, scope: !11724)
!11727 = !DILocation(line: 630, column: 6, scope: !11720)
!11728 = !DILocation(line: 631, column: 3, scope: !11724)
!11729 = !DILocation(line: 632, column: 9, scope: !11720)
!11730 = !DILocation(line: 632, column: 34, scope: !11720)
!11731 = !DILocation(line: 632, column: 2, scope: !11720)
!11732 = !DILocation(line: 633, column: 1, scope: !11720)
!11733 = distinct !DISubprogram(name: "ata_dev_config_ncq", scope: !3, file: !3, line: 2202, type: !11734, scopeLine: 2204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11734 = !DISubroutineType(types: !11735)
!11735 = !{!223, !6374, !1476, !1645}
!11736 = !DILocalVariable(name: "dev", arg: 1, scope: !11733, file: !3, line: 2202, type: !6374)
!11737 = !DILocation(line: 2202, column: 50, scope: !11733)
!11738 = !DILocalVariable(name: "desc", arg: 2, scope: !11733, file: !3, line: 2203, type: !1476)
!11739 = !DILocation(line: 2203, column: 17, scope: !11733)
!11740 = !DILocalVariable(name: "desc_sz", arg: 3, scope: !11733, file: !3, line: 2203, type: !1645)
!11741 = !DILocation(line: 2203, column: 30, scope: !11733)
!11742 = !DILocalVariable(name: "ap", scope: !11733, file: !3, line: 2205, type: !1005)
!11743 = !DILocation(line: 2205, column: 19, scope: !11733)
!11744 = !DILocation(line: 2205, column: 24, scope: !11733)
!11745 = !DILocation(line: 2205, column: 29, scope: !11733)
!11746 = !DILocation(line: 2205, column: 35, scope: !11733)
!11747 = !DILocalVariable(name: "hdepth", scope: !11733, file: !3, line: 2206, type: !223)
!11748 = !DILocation(line: 2206, column: 6, scope: !11733)
!11749 = !DILocalVariable(name: "ddepth", scope: !11733, file: !3, line: 2206, type: !223)
!11750 = !DILocation(line: 2206, column: 18, scope: !11733)
!11751 = !DILocation(line: 2206, column: 27, scope: !11733)
!11752 = !DILocalVariable(name: "err_mask", scope: !11733, file: !3, line: 2207, type: !7)
!11753 = !DILocation(line: 2207, column: 15, scope: !11733)
!11754 = !DILocalVariable(name: "aa_desc", scope: !11733, file: !3, line: 2208, type: !1476)
!11755 = !DILocation(line: 2208, column: 8, scope: !11733)
!11756 = !DILocation(line: 2210, column: 7, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2210, column: 6)
!11758 = !DILocation(line: 2210, column: 6, scope: !11733)
!11759 = !DILocation(line: 2211, column: 3, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 2210, column: 32)
!11761 = !DILocation(line: 2211, column: 11, scope: !11760)
!11762 = !DILocation(line: 2212, column: 3, scope: !11760)
!11763 = !DILocation(line: 2216, column: 6, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2216, column: 6)
!11765 = !DILocation(line: 2216, column: 11, scope: !11764)
!11766 = !DILocation(line: 2216, column: 19, scope: !11764)
!11767 = !DILocation(line: 2216, column: 6, scope: !11733)
!11768 = !DILocation(line: 2217, column: 12, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 2216, column: 40)
!11770 = !DILocation(line: 2217, column: 18, scope: !11769)
!11771 = !DILocation(line: 2217, column: 3, scope: !11769)
!11772 = !DILocation(line: 2218, column: 3, scope: !11769)
!11773 = !DILocation(line: 2220, column: 6, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2220, column: 6)
!11775 = !DILocation(line: 2220, column: 10, scope: !11774)
!11776 = !DILocation(line: 2220, column: 16, scope: !11774)
!11777 = !DILocation(line: 2220, column: 6, scope: !11733)
!11778 = !DILocalVariable(name: "__UNIQUE_ID___x342", scope: !11779, file: !3, line: 2221, type: !223)
!11779 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 2221, column: 12)
!11780 = distinct !DILexicalBlock(scope: !11774, file: !3, line: 2220, column: 32)
!11781 = !DILocation(line: 2221, column: 12, scope: !11779)
!11782 = !DILocalVariable(name: "__UNIQUE_ID___y343", scope: !11779, file: !3, line: 2221, type: !223)
!11783 = !DILocation(line: 2221, column: 10, scope: !11780)
!11784 = !DILocation(line: 2222, column: 3, scope: !11780)
!11785 = !DILocation(line: 2222, column: 8, scope: !11780)
!11786 = !DILocation(line: 2222, column: 14, scope: !11780)
!11787 = !DILocation(line: 2223, column: 2, scope: !11780)
!11788 = !DILocation(line: 2225, column: 8, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2225, column: 6)
!11790 = !DILocation(line: 2225, column: 13, scope: !11789)
!11791 = !DILocation(line: 2225, column: 21, scope: !11789)
!11792 = !DILocation(line: 2225, column: 52, scope: !11789)
!11793 = !DILocation(line: 2226, column: 4, scope: !11789)
!11794 = !DILocation(line: 2226, column: 8, scope: !11789)
!11795 = !DILocation(line: 2226, column: 14, scope: !11789)
!11796 = !DILocation(line: 2226, column: 35, scope: !11789)
!11797 = !DILocation(line: 2227, column: 3, scope: !11789)
!11798 = !DILocation(line: 2225, column: 6, scope: !11733)
!11799 = !DILocation(line: 2228, column: 34, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 2227, column: 33)
!11801 = !DILocation(line: 2228, column: 14, scope: !11800)
!11802 = !DILocation(line: 2228, column: 12, scope: !11800)
!11803 = !DILocation(line: 2230, column: 7, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 2230, column: 7)
!11805 = !DILocation(line: 2230, column: 7, scope: !11800)
!11806 = !DILocation(line: 2231, column: 4, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 2230, column: 17)
!11808 = !DILocation(line: 2234, column: 8, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 2234, column: 8)
!11810 = !DILocation(line: 2234, column: 17, scope: !11809)
!11811 = !DILocation(line: 2234, column: 8, scope: !11807)
!11812 = !DILocation(line: 2235, column: 5, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 2234, column: 32)
!11814 = !DILocation(line: 2235, column: 10, scope: !11813)
!11815 = !DILocation(line: 2235, column: 18, scope: !11813)
!11816 = !DILocation(line: 2236, column: 5, scope: !11813)
!11817 = !DILocation(line: 2238, column: 3, scope: !11807)
!11818 = !DILocation(line: 2239, column: 12, scope: !11804)
!11819 = !DILocation(line: 2240, column: 2, scope: !11800)
!11820 = !DILocation(line: 2242, column: 6, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2242, column: 6)
!11822 = !DILocation(line: 2242, column: 16, scope: !11821)
!11823 = !DILocation(line: 2242, column: 13, scope: !11821)
!11824 = !DILocation(line: 2242, column: 6, scope: !11733)
!11825 = !DILocation(line: 2243, column: 12, scope: !11821)
!11826 = !DILocation(line: 2243, column: 18, scope: !11821)
!11827 = !DILocation(line: 2243, column: 47, scope: !11821)
!11828 = !DILocation(line: 2243, column: 55, scope: !11821)
!11829 = !DILocation(line: 2243, column: 3, scope: !11821)
!11830 = !DILocation(line: 2245, column: 12, scope: !11821)
!11831 = !DILocation(line: 2245, column: 18, scope: !11821)
!11832 = !DILocation(line: 2245, column: 50, scope: !11821)
!11833 = !DILocation(line: 2246, column: 4, scope: !11821)
!11834 = !DILocation(line: 2246, column: 12, scope: !11821)
!11835 = !DILocation(line: 2245, column: 3, scope: !11821)
!11836 = !DILocation(line: 2248, column: 7, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 2248, column: 6)
!11838 = !DILocation(line: 2248, column: 11, scope: !11837)
!11839 = !DILocation(line: 2248, column: 17, scope: !11837)
!11840 = !DILocation(line: 2248, column: 6, scope: !11733)
!11841 = !DILocation(line: 2249, column: 36, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11843, file: !3, line: 2249, column: 7)
!11843 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 2248, column: 40)
!11844 = !DILocation(line: 2249, column: 41, scope: !11842)
!11845 = !DILocation(line: 2249, column: 7, scope: !11842)
!11846 = !DILocation(line: 2249, column: 7, scope: !11843)
!11847 = !DILocation(line: 2250, column: 33, scope: !11842)
!11848 = !DILocation(line: 2250, column: 4, scope: !11842)
!11849 = !DILocation(line: 2251, column: 31, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11843, file: !3, line: 2251, column: 7)
!11851 = !DILocation(line: 2251, column: 36, scope: !11850)
!11852 = !DILocation(line: 2251, column: 7, scope: !11850)
!11853 = !DILocation(line: 2251, column: 7, scope: !11843)
!11854 = !DILocation(line: 2252, column: 32, scope: !11850)
!11855 = !DILocation(line: 2252, column: 4, scope: !11850)
!11856 = !DILocation(line: 2253, column: 27, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11843, file: !3, line: 2253, column: 7)
!11858 = !DILocation(line: 2253, column: 32, scope: !11857)
!11859 = !DILocation(line: 2253, column: 7, scope: !11857)
!11860 = !DILocation(line: 2253, column: 7, scope: !11843)
!11861 = !DILocation(line: 2254, column: 28, scope: !11857)
!11862 = !DILocation(line: 2254, column: 4, scope: !11857)
!11863 = !DILocation(line: 2255, column: 2, scope: !11843)
!11864 = !DILocation(line: 2257, column: 2, scope: !11733)
!11865 = !DILocation(line: 2258, column: 1, scope: !11733)
!11866 = distinct !DISubprogram(name: "ata_id_current_chs_valid", scope: !222, file: !222, line: 961, type: !8945, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11867 = !DILocalVariable(name: "id", arg: 1, scope: !11866, file: !222, line: 961, type: !8685)
!11868 = !DILocation(line: 961, column: 56, scope: !11866)
!11869 = !DILocation(line: 966, column: 10, scope: !11866)
!11870 = !DILocation(line: 966, column: 33, scope: !11866)
!11871 = !DILocation(line: 966, column: 38, scope: !11866)
!11872 = !DILocation(line: 967, column: 3, scope: !11866)
!11873 = !DILocation(line: 967, column: 23, scope: !11866)
!11874 = !DILocation(line: 968, column: 3, scope: !11866)
!11875 = !DILocation(line: 968, column: 24, scope: !11866)
!11876 = !DILocation(line: 969, column: 3, scope: !11866)
!11877 = !DILocation(line: 969, column: 24, scope: !11866)
!11878 = !DILocation(line: 969, column: 30, scope: !11866)
!11879 = !DILocation(line: 970, column: 3, scope: !11866)
!11880 = !DILocation(line: 0, scope: !11866)
!11881 = !DILocation(line: 966, column: 2, scope: !11866)
!11882 = distinct !DISubprogram(name: "ata_dev_config_sense_reporting", scope: !3, file: !3, line: 2260, type: !6618, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11883 = !DILocalVariable(name: "dev", arg: 1, scope: !11882, file: !3, line: 2260, type: !6374)
!11884 = !DILocation(line: 2260, column: 63, scope: !11882)
!11885 = !DILocalVariable(name: "err_mask", scope: !11882, file: !3, line: 2262, type: !7)
!11886 = !DILocation(line: 2262, column: 15, scope: !11882)
!11887 = !DILocation(line: 2264, column: 34, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 2264, column: 6)
!11889 = !DILocation(line: 2264, column: 39, scope: !11888)
!11890 = !DILocation(line: 2264, column: 7, scope: !11888)
!11891 = !DILocation(line: 2264, column: 6, scope: !11882)
!11892 = !DILocation(line: 2265, column: 3, scope: !11888)
!11893 = !DILocation(line: 2267, column: 37, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 2267, column: 6)
!11895 = !DILocation(line: 2267, column: 42, scope: !11894)
!11896 = !DILocation(line: 2267, column: 6, scope: !11894)
!11897 = !DILocation(line: 2267, column: 6, scope: !11882)
!11898 = !DILocation(line: 2268, column: 3, scope: !11894)
!11899 = !DILocation(line: 2270, column: 33, scope: !11882)
!11900 = !DILocation(line: 2270, column: 13, scope: !11882)
!11901 = !DILocation(line: 2270, column: 11, scope: !11882)
!11902 = !DILocation(line: 2271, column: 6, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 2271, column: 6)
!11904 = !DILocation(line: 2271, column: 6, scope: !11882)
!11905 = !DILocation(line: 2272, column: 3, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11903, file: !3, line: 2271, column: 16)
!11907 = !DILocation(line: 2275, column: 2, scope: !11906)
!11908 = !DILocation(line: 2276, column: 1, scope: !11882)
!11909 = distinct !DISubprogram(name: "ata_dev_config_zac", scope: !3, file: !3, line: 2278, type: !6618, scopeLine: 2279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11910 = !DILocalVariable(name: "p", arg: 1, scope: !11911, file: !11912, line: 48, type: !11915)
!11911 = distinct !DISubprogram(name: "__le64_to_cpup", scope: !11912, file: !11912, line: 48, type: !11913, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11912 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!11913 = !DISubroutineType(types: !11914)
!11914 = !{!986, !11915}
!11915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11916, size: 64)
!11916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!11917 = !DILocation(line: 48, column: 59, scope: !11911, inlinedAt: !11918)
!11918 = distinct !DILocation(line: 20, column: 9, scope: !11919, inlinedAt: !11923)
!11919 = distinct !DISubprogram(name: "get_unaligned_le64", scope: !11920, file: !11920, line: 18, type: !11921, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!11920 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!11921 = !DISubroutineType(types: !11922)
!11922 = !{!984, !2793}
!11923 = distinct !DILocation(line: 2320, column: 14, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 2314, column: 17)
!11925 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 2314, column: 6)
!11926 = !DILocalVariable(name: "p", arg: 1, scope: !11919, file: !11920, line: 18, type: !2793)
!11927 = !DILocation(line: 18, column: 59, scope: !11919, inlinedAt: !11923)
!11928 = !DILocation(line: 48, column: 59, scope: !11911, inlinedAt: !11929)
!11929 = distinct !DILocation(line: 20, column: 9, scope: !11919, inlinedAt: !11930)
!11930 = distinct !DILocation(line: 2323, column: 16, scope: !11924)
!11931 = !DILocation(line: 18, column: 59, scope: !11919, inlinedAt: !11930)
!11932 = !DILocation(line: 48, column: 59, scope: !11911, inlinedAt: !11933)
!11933 = distinct !DILocation(line: 20, column: 9, scope: !11919, inlinedAt: !11934)
!11934 = distinct !DILocation(line: 2326, column: 14, scope: !11924)
!11935 = !DILocation(line: 18, column: 59, scope: !11919, inlinedAt: !11934)
!11936 = !DILocation(line: 48, column: 59, scope: !11911, inlinedAt: !11937)
!11937 = distinct !DILocation(line: 20, column: 9, scope: !11919, inlinedAt: !11938)
!11938 = distinct !DILocation(line: 2317, column: 15, scope: !11924)
!11939 = !DILocation(line: 18, column: 59, scope: !11919, inlinedAt: !11938)
!11940 = !DILocalVariable(name: "dev", arg: 1, scope: !11909, file: !3, line: 2278, type: !6374)
!11941 = !DILocation(line: 2278, column: 51, scope: !11909)
!11942 = !DILocalVariable(name: "ap", scope: !11909, file: !3, line: 2280, type: !1005)
!11943 = !DILocation(line: 2280, column: 19, scope: !11909)
!11944 = !DILocation(line: 2280, column: 24, scope: !11909)
!11945 = !DILocation(line: 2280, column: 29, scope: !11909)
!11946 = !DILocation(line: 2280, column: 35, scope: !11909)
!11947 = !DILocalVariable(name: "err_mask", scope: !11909, file: !3, line: 2281, type: !7)
!11948 = !DILocation(line: 2281, column: 15, scope: !11909)
!11949 = !DILocalVariable(name: "identify_buf", scope: !11909, file: !3, line: 2282, type: !6456)
!11950 = !DILocation(line: 2282, column: 6, scope: !11909)
!11951 = !DILocation(line: 2282, column: 21, scope: !11909)
!11952 = !DILocation(line: 2282, column: 25, scope: !11909)
!11953 = !DILocation(line: 2284, column: 2, scope: !11909)
!11954 = !DILocation(line: 2284, column: 7, scope: !11909)
!11955 = !DILocation(line: 2284, column: 30, scope: !11909)
!11956 = !DILocation(line: 2285, column: 2, scope: !11909)
!11957 = !DILocation(line: 2285, column: 7, scope: !11909)
!11958 = !DILocation(line: 2285, column: 32, scope: !11909)
!11959 = !DILocation(line: 2286, column: 2, scope: !11909)
!11960 = !DILocation(line: 2286, column: 7, scope: !11909)
!11961 = !DILocation(line: 2286, column: 26, scope: !11909)
!11962 = !DILocation(line: 2291, column: 6, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 2291, column: 6)
!11964 = !DILocation(line: 2291, column: 11, scope: !11963)
!11965 = !DILocation(line: 2291, column: 17, scope: !11963)
!11966 = !DILocation(line: 2291, column: 6, scope: !11909)
!11967 = !DILocation(line: 2292, column: 3, scope: !11963)
!11968 = !DILocation(line: 2292, column: 8, scope: !11963)
!11969 = !DILocation(line: 2292, column: 14, scope: !11963)
!11970 = !DILocation(line: 2293, column: 28, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 2293, column: 11)
!11972 = !DILocation(line: 2293, column: 33, scope: !11971)
!11973 = !DILocation(line: 2293, column: 11, scope: !11971)
!11974 = !DILocation(line: 2293, column: 37, scope: !11971)
!11975 = !DILocation(line: 2293, column: 11, scope: !11963)
!11976 = !DILocation(line: 2297, column: 3, scope: !11971)
!11977 = !DILocation(line: 2297, column: 8, scope: !11971)
!11978 = !DILocation(line: 2297, column: 14, scope: !11971)
!11979 = !DILocation(line: 2299, column: 8, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 2299, column: 6)
!11981 = !DILocation(line: 2299, column: 13, scope: !11980)
!11982 = !DILocation(line: 2299, column: 19, scope: !11980)
!11983 = !DILocation(line: 2299, column: 6, scope: !11909)
!11984 = !DILocation(line: 2300, column: 3, scope: !11980)
!11985 = !DILocation(line: 2302, column: 35, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 2302, column: 6)
!11987 = !DILocation(line: 2302, column: 7, scope: !11986)
!11988 = !DILocation(line: 2302, column: 6, scope: !11909)
!11989 = !DILocation(line: 2303, column: 3, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 2302, column: 68)
!11991 = !DILocation(line: 2305, column: 3, scope: !11990)
!11992 = !DILocation(line: 2311, column: 31, scope: !11909)
!11993 = !DILocation(line: 2313, column: 10, scope: !11909)
!11994 = !DILocation(line: 2311, column: 13, scope: !11909)
!11995 = !DILocation(line: 2311, column: 11, scope: !11909)
!11996 = !DILocation(line: 2314, column: 7, scope: !11925)
!11997 = !DILocation(line: 2314, column: 6, scope: !11909)
!11998 = !DILocalVariable(name: "zoned_cap", scope: !11924, file: !3, line: 2315, type: !984)
!11999 = !DILocation(line: 2315, column: 7, scope: !11924)
!12000 = !DILocalVariable(name: "opt_open", scope: !11924, file: !3, line: 2315, type: !984)
!12001 = !DILocation(line: 2315, column: 18, scope: !11924)
!12002 = !DILocalVariable(name: "opt_nonseq", scope: !11924, file: !3, line: 2315, type: !984)
!12003 = !DILocation(line: 2315, column: 28, scope: !11924)
!12004 = !DILocalVariable(name: "max_open", scope: !11924, file: !3, line: 2315, type: !984)
!12005 = !DILocation(line: 2315, column: 40, scope: !11924)
!12006 = !DILocation(line: 2317, column: 35, scope: !11924)
!12007 = !DILocation(line: 20, column: 32, scope: !11919, inlinedAt: !11938)
!12008 = !DILocation(line: 20, column: 22, scope: !11919, inlinedAt: !11938)
!12009 = !DILocation(line: 50, column: 25, scope: !11911, inlinedAt: !11937)
!12010 = !DILocation(line: 50, column: 24, scope: !11911, inlinedAt: !11937)
!12011 = !DILocation(line: 2317, column: 13, scope: !11924)
!12012 = !DILocation(line: 2318, column: 8, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 2318, column: 7)
!12014 = !DILocation(line: 2318, column: 18, scope: !12013)
!12015 = !DILocation(line: 2318, column: 7, scope: !11924)
!12016 = !DILocation(line: 2319, column: 26, scope: !12013)
!12017 = !DILocation(line: 2319, column: 36, scope: !12013)
!12018 = !DILocation(line: 2319, column: 25, scope: !12013)
!12019 = !DILocation(line: 2319, column: 4, scope: !12013)
!12020 = !DILocation(line: 2319, column: 9, scope: !12013)
!12021 = !DILocation(line: 2319, column: 23, scope: !12013)
!12022 = !DILocation(line: 2320, column: 34, scope: !11924)
!12023 = !DILocation(line: 20, column: 32, scope: !11919, inlinedAt: !11923)
!12024 = !DILocation(line: 20, column: 22, scope: !11919, inlinedAt: !11923)
!12025 = !DILocation(line: 50, column: 25, scope: !11911, inlinedAt: !11918)
!12026 = !DILocation(line: 50, column: 24, scope: !11911, inlinedAt: !11918)
!12027 = !DILocation(line: 2320, column: 12, scope: !11924)
!12028 = !DILocation(line: 2321, column: 8, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 2321, column: 7)
!12030 = !DILocation(line: 2321, column: 17, scope: !12029)
!12031 = !DILocation(line: 2321, column: 7, scope: !11924)
!12032 = !DILocation(line: 2322, column: 39, scope: !12029)
!12033 = !DILocation(line: 2322, column: 34, scope: !12029)
!12034 = !DILocation(line: 2322, column: 4, scope: !12029)
!12035 = !DILocation(line: 2322, column: 9, scope: !12029)
!12036 = !DILocation(line: 2322, column: 32, scope: !12029)
!12037 = !DILocation(line: 2323, column: 36, scope: !11924)
!12038 = !DILocation(line: 20, column: 32, scope: !11919, inlinedAt: !11930)
!12039 = !DILocation(line: 20, column: 22, scope: !11919, inlinedAt: !11930)
!12040 = !DILocation(line: 50, column: 25, scope: !11911, inlinedAt: !11929)
!12041 = !DILocation(line: 50, column: 24, scope: !11911, inlinedAt: !11929)
!12042 = !DILocation(line: 2323, column: 14, scope: !11924)
!12043 = !DILocation(line: 2324, column: 8, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 2324, column: 7)
!12045 = !DILocation(line: 2324, column: 19, scope: !12044)
!12046 = !DILocation(line: 2324, column: 7, scope: !11924)
!12047 = !DILocation(line: 2325, column: 41, scope: !12044)
!12048 = !DILocation(line: 2325, column: 36, scope: !12044)
!12049 = !DILocation(line: 2325, column: 4, scope: !12044)
!12050 = !DILocation(line: 2325, column: 9, scope: !12044)
!12051 = !DILocation(line: 2325, column: 34, scope: !12044)
!12052 = !DILocation(line: 2326, column: 34, scope: !11924)
!12053 = !DILocation(line: 20, column: 32, scope: !11919, inlinedAt: !11934)
!12054 = !DILocation(line: 20, column: 22, scope: !11919, inlinedAt: !11934)
!12055 = !DILocation(line: 50, column: 25, scope: !11911, inlinedAt: !11933)
!12056 = !DILocation(line: 50, column: 24, scope: !11911, inlinedAt: !11933)
!12057 = !DILocation(line: 2326, column: 12, scope: !11924)
!12058 = !DILocation(line: 2327, column: 8, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 2327, column: 7)
!12060 = !DILocation(line: 2327, column: 17, scope: !12059)
!12061 = !DILocation(line: 2327, column: 7, scope: !11924)
!12062 = !DILocation(line: 2328, column: 35, scope: !12059)
!12063 = !DILocation(line: 2328, column: 30, scope: !12059)
!12064 = !DILocation(line: 2328, column: 4, scope: !12059)
!12065 = !DILocation(line: 2328, column: 9, scope: !12059)
!12066 = !DILocation(line: 2328, column: 28, scope: !12059)
!12067 = !DILocation(line: 2329, column: 2, scope: !11924)
!12068 = !DILocation(line: 2330, column: 1, scope: !11909)
!12069 = distinct !DISubprogram(name: "ata_dev_config_trusted", scope: !3, file: !3, line: 2332, type: !6618, scopeLine: 2333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12070 = !DILocation(line: 48, column: 59, scope: !11911, inlinedAt: !12071)
!12071 = distinct !DILocation(line: 20, column: 9, scope: !11919, inlinedAt: !12072)
!12072 = distinct !DILocation(line: 2355, column: 16, scope: !12069)
!12073 = !DILocation(line: 18, column: 59, scope: !11919, inlinedAt: !12072)
!12074 = !DILocalVariable(name: "dev", arg: 1, scope: !12069, file: !3, line: 2332, type: !6374)
!12075 = !DILocation(line: 2332, column: 55, scope: !12069)
!12076 = !DILocalVariable(name: "ap", scope: !12069, file: !3, line: 2334, type: !1005)
!12077 = !DILocation(line: 2334, column: 19, scope: !12069)
!12078 = !DILocation(line: 2334, column: 24, scope: !12069)
!12079 = !DILocation(line: 2334, column: 29, scope: !12069)
!12080 = !DILocation(line: 2334, column: 35, scope: !12069)
!12081 = !DILocalVariable(name: "trusted_cap", scope: !12069, file: !3, line: 2335, type: !984)
!12082 = !DILocation(line: 2335, column: 6, scope: !12069)
!12083 = !DILocalVariable(name: "err", scope: !12069, file: !3, line: 2336, type: !7)
!12084 = !DILocation(line: 2336, column: 15, scope: !12069)
!12085 = !DILocation(line: 2338, column: 26, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 2338, column: 6)
!12087 = !DILocation(line: 2338, column: 31, scope: !12086)
!12088 = !DILocation(line: 2338, column: 7, scope: !12086)
!12089 = !DILocation(line: 2338, column: 6, scope: !12069)
!12090 = !DILocation(line: 2339, column: 3, scope: !12086)
!12091 = !DILocation(line: 2341, column: 35, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 2341, column: 6)
!12093 = !DILocation(line: 2341, column: 7, scope: !12092)
!12094 = !DILocation(line: 2341, column: 6, scope: !12069)
!12095 = !DILocation(line: 2342, column: 3, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 2341, column: 59)
!12097 = !DILocation(line: 2344, column: 3, scope: !12096)
!12098 = !DILocation(line: 2347, column: 26, scope: !12069)
!12099 = !DILocation(line: 2348, column: 4, scope: !12069)
!12100 = !DILocation(line: 2348, column: 8, scope: !12069)
!12101 = !DILocation(line: 2347, column: 8, scope: !12069)
!12102 = !DILocation(line: 2347, column: 6, scope: !12069)
!12103 = !DILocation(line: 2349, column: 6, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 2349, column: 6)
!12105 = !DILocation(line: 2349, column: 6, scope: !12069)
!12106 = !DILocation(line: 2350, column: 3, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 2349, column: 11)
!12108 = !DILocation(line: 2352, column: 3, scope: !12107)
!12109 = !DILocation(line: 2355, column: 36, scope: !12069)
!12110 = !DILocation(line: 2355, column: 40, scope: !12069)
!12111 = !DILocation(line: 20, column: 32, scope: !11919, inlinedAt: !12072)
!12112 = !DILocation(line: 20, column: 22, scope: !11919, inlinedAt: !12072)
!12113 = !DILocation(line: 50, column: 25, scope: !11911, inlinedAt: !12071)
!12114 = !DILocation(line: 50, column: 24, scope: !11911, inlinedAt: !12071)
!12115 = !DILocation(line: 2355, column: 14, scope: !12069)
!12116 = !DILocation(line: 2356, column: 8, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 2356, column: 6)
!12118 = !DILocation(line: 2356, column: 20, scope: !12117)
!12119 = !DILocation(line: 2356, column: 6, scope: !12069)
!12120 = !DILocation(line: 2357, column: 3, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 2356, column: 37)
!12122 = !DILocation(line: 2359, column: 3, scope: !12121)
!12123 = !DILocation(line: 2362, column: 6, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 2362, column: 6)
!12125 = !DILocation(line: 2362, column: 18, scope: !12124)
!12126 = !DILocation(line: 2362, column: 6, scope: !12069)
!12127 = !DILocation(line: 2363, column: 3, scope: !12124)
!12128 = !DILocation(line: 2363, column: 8, scope: !12124)
!12129 = !DILocation(line: 2363, column: 14, scope: !12124)
!12130 = !DILocation(line: 2364, column: 1, scope: !12069)
!12131 = distinct !DISubprogram(name: "atapi_cdb_len", scope: !222, file: !222, line: 1027, type: !12132, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12132 = !DISubroutineType(types: !12133)
!12133 = !{!223, !8685}
!12134 = !DILocalVariable(name: "dev_id", arg: 1, scope: !12131, file: !222, line: 1027, type: !8685)
!12135 = !DILocation(line: 1027, column: 44, scope: !12131)
!12136 = !DILocalVariable(name: "tmp", scope: !12131, file: !222, line: 1029, type: !1740)
!12137 = !DILocation(line: 1029, column: 6, scope: !12131)
!12138 = !DILocation(line: 1029, column: 12, scope: !12131)
!12139 = !DILocation(line: 1029, column: 34, scope: !12131)
!12140 = !DILocation(line: 1030, column: 10, scope: !12131)
!12141 = !DILocation(line: 1030, column: 2, scope: !12131)
!12142 = !DILocation(line: 1031, column: 11, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12131, file: !222, line: 1030, column: 15)
!12144 = !DILocation(line: 1032, column: 11, scope: !12143)
!12145 = !DILocation(line: 1033, column: 11, scope: !12143)
!12146 = !DILocation(line: 1035, column: 1, scope: !12131)
!12147 = distinct !DISubprogram(name: "atapi_id_dmadir", scope: !222, file: !222, line: 1042, type: !8945, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12148 = !DILocalVariable(name: "dev_id", arg: 1, scope: !12147, file: !222, line: 1042, type: !8685)
!12149 = !DILocation(line: 1042, column: 47, scope: !12147)
!12150 = !DILocation(line: 1044, column: 30, scope: !12147)
!12151 = !DILocation(line: 1044, column: 9, scope: !12147)
!12152 = !DILocation(line: 1044, column: 38, scope: !12147)
!12153 = !DILocation(line: 1044, column: 43, scope: !12147)
!12154 = !DILocation(line: 1044, column: 47, scope: !12147)
!12155 = !DILocation(line: 1044, column: 58, scope: !12147)
!12156 = !DILocation(line: 0, scope: !12147)
!12157 = !DILocation(line: 1044, column: 2, scope: !12147)
!12158 = distinct !DISubprogram(name: "zpodd_init", scope: !920, file: !920, line: 248, type: !6618, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12159 = !DILocalVariable(name: "dev", arg: 1, scope: !12158, file: !920, line: 248, type: !6374)
!12160 = !DILocation(line: 248, column: 50, scope: !12158)
!12161 = !DILocation(line: 248, column: 56, scope: !12158)
!12162 = distinct !DISubprogram(name: "ata_dev_knobble", scope: !3, file: !3, line: 2109, type: !12163, scopeLine: 2110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12163 = !DISubroutineType(types: !12164)
!12164 = !{!1216, !6374}
!12165 = !DILocalVariable(name: "dev", arg: 1, scope: !12162, file: !3, line: 2109, type: !6374)
!12166 = !DILocation(line: 2109, column: 53, scope: !12162)
!12167 = !DILocalVariable(name: "ap", scope: !12162, file: !3, line: 2111, type: !1005)
!12168 = !DILocation(line: 2111, column: 19, scope: !12162)
!12169 = !DILocation(line: 2111, column: 24, scope: !12162)
!12170 = !DILocation(line: 2111, column: 29, scope: !12162)
!12171 = !DILocation(line: 2111, column: 35, scope: !12162)
!12172 = !DILocation(line: 2113, column: 26, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 2113, column: 6)
!12174 = !DILocation(line: 2113, column: 6, scope: !12173)
!12175 = !DILocation(line: 2113, column: 31, scope: !12173)
!12176 = !DILocation(line: 2113, column: 6, scope: !12162)
!12177 = !DILocation(line: 2114, column: 3, scope: !12173)
!12178 = !DILocation(line: 2116, column: 11, scope: !12162)
!12179 = !DILocation(line: 2116, column: 15, scope: !12162)
!12180 = !DILocation(line: 2116, column: 19, scope: !12162)
!12181 = !DILocation(line: 2116, column: 36, scope: !12162)
!12182 = !DILocation(line: 2116, column: 56, scope: !12162)
!12183 = !DILocation(line: 2116, column: 61, scope: !12162)
!12184 = !DILocation(line: 2116, column: 41, scope: !12162)
!12185 = !DILocation(line: 2116, column: 40, scope: !12162)
!12186 = !DILocation(line: 0, scope: !12162)
!12187 = !DILocation(line: 2116, column: 9, scope: !12162)
!12188 = !DILocation(line: 2116, column: 2, scope: !12162)
!12189 = !DILocation(line: 2117, column: 1, scope: !12162)
!12190 = distinct !DISubprogram(name: "atapi_command_packet_set", scope: !222, file: !222, line: 1037, type: !12132, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12191 = !DILocalVariable(name: "dev_id", arg: 1, scope: !12190, file: !222, line: 1037, type: !8685)
!12192 = !DILocation(line: 1037, column: 55, scope: !12190)
!12193 = !DILocation(line: 1039, column: 10, scope: !12190)
!12194 = !DILocation(line: 1039, column: 32, scope: !12190)
!12195 = !DILocation(line: 1039, column: 38, scope: !12190)
!12196 = !DILocation(line: 1039, column: 2, scope: !12190)
!12197 = distinct !DISubprogram(name: "ata_cable_40wire", scope: !3, file: !3, line: 2730, type: !6594, scopeLine: 2731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12198 = !DILocalVariable(name: "ap", arg: 1, scope: !12197, file: !3, line: 2730, type: !1005)
!12199 = !DILocation(line: 2730, column: 39, scope: !12197)
!12200 = !DILocation(line: 2732, column: 2, scope: !12197)
!12201 = distinct !DISubprogram(name: "ata_cable_80wire", scope: !3, file: !3, line: 2744, type: !6594, scopeLine: 2745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12202 = !DILocalVariable(name: "ap", arg: 1, scope: !12201, file: !3, line: 2744, type: !1005)
!12203 = !DILocation(line: 2744, column: 39, scope: !12201)
!12204 = !DILocation(line: 2746, column: 2, scope: !12201)
!12205 = distinct !DISubprogram(name: "ata_cable_unknown", scope: !3, file: !3, line: 2757, type: !6594, scopeLine: 2758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12206 = !DILocalVariable(name: "ap", arg: 1, scope: !12205, file: !3, line: 2757, type: !1005)
!12207 = !DILocation(line: 2757, column: 40, scope: !12205)
!12208 = !DILocation(line: 2759, column: 2, scope: !12205)
!12209 = distinct !DISubprogram(name: "ata_cable_ignore", scope: !3, file: !3, line: 2770, type: !6594, scopeLine: 2771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12210 = !DILocalVariable(name: "ap", arg: 1, scope: !12209, file: !3, line: 2770, type: !1005)
!12211 = !DILocation(line: 2770, column: 39, scope: !12209)
!12212 = !DILocation(line: 2772, column: 2, scope: !12209)
!12213 = distinct !DISubprogram(name: "ata_cable_sata", scope: !3, file: !3, line: 2783, type: !6594, scopeLine: 2784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12214 = !DILocalVariable(name: "ap", arg: 1, scope: !12213, file: !3, line: 2783, type: !1005)
!12215 = !DILocation(line: 2783, column: 37, scope: !12213)
!12216 = !DILocation(line: 2785, column: 2, scope: !12213)
!12217 = distinct !DISubprogram(name: "ata_bus_probe", scope: !3, file: !3, line: 2804, type: !6594, scopeLine: 2805, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12218 = !DILocalVariable(name: "ap", arg: 1, scope: !12217, file: !3, line: 2804, type: !1005)
!12219 = !DILocation(line: 2804, column: 36, scope: !12217)
!12220 = !DILocalVariable(name: "classes", scope: !12217, file: !3, line: 2806, type: !6400)
!12221 = !DILocation(line: 2806, column: 15, scope: !12217)
!12222 = !DILocalVariable(name: "tries", scope: !12217, file: !3, line: 2807, type: !6413)
!12223 = !DILocation(line: 2807, column: 6, scope: !12217)
!12224 = !DILocalVariable(name: "rc", scope: !12217, file: !3, line: 2808, type: !223)
!12225 = !DILocation(line: 2808, column: 6, scope: !12217)
!12226 = !DILocalVariable(name: "dev", scope: !12217, file: !3, line: 2809, type: !6374)
!12227 = !DILocation(line: 2809, column: 21, scope: !12217)
!12228 = !DILocation(line: 2811, column: 2, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2811, column: 2)
!12230 = !DILocation(line: 2811, column: 2, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 2811, column: 2)
!12232 = !DILocation(line: 2812, column: 9, scope: !12231)
!12233 = !DILocation(line: 2812, column: 14, scope: !12231)
!12234 = !DILocation(line: 2812, column: 3, scope: !12231)
!12235 = !DILocation(line: 2812, column: 21, scope: !12231)
!12236 = distinct !{!12236, !12228, !12237}
!12237 = !DILocation(line: 2812, column: 23, scope: !12229)
!12238 = !DILabel(scope: !12217, name: "retry", file: !3, line: 2814)
!12239 = !DILocation(line: 2814, column: 2, scope: !12217)
!12240 = !DILocation(line: 2815, column: 2, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2815, column: 2)
!12242 = !DILocation(line: 2815, column: 2, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 2815, column: 2)
!12244 = !DILocation(line: 2823, column: 3, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 2815, column: 40)
!12246 = !DILocation(line: 2823, column: 8, scope: !12245)
!12247 = !DILocation(line: 2823, column: 17, scope: !12245)
!12248 = !DILocation(line: 2824, column: 3, scope: !12245)
!12249 = !DILocation(line: 2824, column: 8, scope: !12245)
!12250 = !DILocation(line: 2824, column: 17, scope: !12245)
!12251 = !DILocation(line: 2831, column: 7, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 2831, column: 7)
!12253 = !DILocation(line: 2831, column: 11, scope: !12252)
!12254 = !DILocation(line: 2831, column: 16, scope: !12252)
!12255 = !DILocation(line: 2831, column: 7, scope: !12245)
!12256 = !DILocation(line: 2832, column: 4, scope: !12252)
!12257 = !DILocation(line: 2832, column: 8, scope: !12252)
!12258 = !DILocation(line: 2832, column: 13, scope: !12252)
!12259 = !DILocation(line: 2832, column: 25, scope: !12252)
!12260 = !DILocation(line: 2832, column: 29, scope: !12252)
!12261 = !DILocation(line: 2833, column: 2, scope: !12245)
!12262 = distinct !{!12262, !12240, !12263}
!12263 = !DILocation(line: 2833, column: 2, scope: !12241)
!12264 = !DILocation(line: 2836, column: 2, scope: !12217)
!12265 = !DILocation(line: 2836, column: 6, scope: !12217)
!12266 = !DILocation(line: 2836, column: 11, scope: !12217)
!12267 = !DILocation(line: 2836, column: 21, scope: !12217)
!12268 = !DILocation(line: 2838, column: 2, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2838, column: 2)
!12270 = !DILocation(line: 2838, column: 2, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 2838, column: 2)
!12272 = !DILocation(line: 2839, column: 7, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !3, line: 2839, column: 7)
!12274 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 2838, column: 40)
!12275 = !DILocation(line: 2839, column: 12, scope: !12273)
!12276 = !DILocation(line: 2839, column: 18, scope: !12273)
!12277 = !DILocation(line: 2839, column: 7, scope: !12274)
!12278 = !DILocation(line: 2840, column: 26, scope: !12273)
!12279 = !DILocation(line: 2840, column: 31, scope: !12273)
!12280 = !DILocation(line: 2840, column: 12, scope: !12273)
!12281 = !DILocation(line: 2840, column: 17, scope: !12273)
!12282 = !DILocation(line: 2840, column: 4, scope: !12273)
!12283 = !DILocation(line: 2840, column: 24, scope: !12273)
!12284 = !DILocation(line: 2842, column: 12, scope: !12273)
!12285 = !DILocation(line: 2842, column: 17, scope: !12273)
!12286 = !DILocation(line: 2842, column: 4, scope: !12273)
!12287 = !DILocation(line: 2842, column: 24, scope: !12273)
!12288 = !DILocation(line: 2844, column: 3, scope: !12274)
!12289 = !DILocation(line: 2844, column: 8, scope: !12274)
!12290 = !DILocation(line: 2844, column: 14, scope: !12274)
!12291 = !DILocation(line: 2845, column: 2, scope: !12274)
!12292 = distinct !{!12292, !12268, !12293}
!12293 = !DILocation(line: 2845, column: 2, scope: !12269)
!12294 = !DILocation(line: 2851, column: 2, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2851, column: 2)
!12296 = !DILocation(line: 2851, column: 2, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 2851, column: 2)
!12298 = !DILocation(line: 2852, column: 13, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 2852, column: 7)
!12300 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 2851, column: 48)
!12301 = !DILocation(line: 2852, column: 18, scope: !12299)
!12302 = !DILocation(line: 2852, column: 7, scope: !12299)
!12303 = !DILocation(line: 2852, column: 7, scope: !12300)
!12304 = !DILocation(line: 2853, column: 25, scope: !12299)
!12305 = !DILocation(line: 2853, column: 30, scope: !12299)
!12306 = !DILocation(line: 2853, column: 17, scope: !12299)
!12307 = !DILocation(line: 2853, column: 4, scope: !12299)
!12308 = !DILocation(line: 2853, column: 9, scope: !12299)
!12309 = !DILocation(line: 2853, column: 15, scope: !12299)
!12310 = !DILocation(line: 2855, column: 24, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 2855, column: 7)
!12312 = !DILocation(line: 2855, column: 8, scope: !12311)
!12313 = !DILocation(line: 2855, column: 7, scope: !12300)
!12314 = !DILocation(line: 2856, column: 4, scope: !12311)
!12315 = !DILocation(line: 2858, column: 24, scope: !12300)
!12316 = !DILocation(line: 2858, column: 30, scope: !12300)
!12317 = !DILocation(line: 2858, column: 35, scope: !12300)
!12318 = !DILocation(line: 2859, column: 10, scope: !12300)
!12319 = !DILocation(line: 2859, column: 15, scope: !12300)
!12320 = !DILocation(line: 2858, column: 8, scope: !12300)
!12321 = !DILocation(line: 2858, column: 6, scope: !12300)
!12322 = !DILocation(line: 2860, column: 7, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 2860, column: 7)
!12324 = !DILocation(line: 2860, column: 7, scope: !12300)
!12325 = !DILocation(line: 2861, column: 4, scope: !12323)
!12326 = !DILocation(line: 2862, column: 2, scope: !12300)
!12327 = distinct !{!12327, !12294, !12328}
!12328 = !DILocation(line: 2862, column: 2, scope: !12295)
!12329 = !DILocation(line: 2865, column: 6, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2865, column: 6)
!12331 = !DILocation(line: 2865, column: 10, scope: !12330)
!12332 = !DILocation(line: 2865, column: 15, scope: !12330)
!12333 = !DILocation(line: 2865, column: 6, scope: !12217)
!12334 = !DILocation(line: 2866, column: 13, scope: !12330)
!12335 = !DILocation(line: 2866, column: 17, scope: !12330)
!12336 = !DILocation(line: 2866, column: 22, scope: !12330)
!12337 = !DILocation(line: 2866, column: 35, scope: !12330)
!12338 = !DILocation(line: 2866, column: 3, scope: !12330)
!12339 = !DILocation(line: 2866, column: 7, scope: !12330)
!12340 = !DILocation(line: 2866, column: 11, scope: !12330)
!12341 = !DILocation(line: 2873, column: 2, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2873, column: 2)
!12343 = !DILocation(line: 2873, column: 2, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12342, file: !3, line: 2873, column: 2)
!12345 = !DILocation(line: 2874, column: 22, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 2874, column: 7)
!12347 = !DILocation(line: 2874, column: 27, scope: !12346)
!12348 = !DILocation(line: 2874, column: 7, scope: !12346)
!12349 = !DILocation(line: 2874, column: 7, scope: !12344)
!12350 = !DILocation(line: 2875, column: 4, scope: !12346)
!12351 = !DILocation(line: 2875, column: 8, scope: !12346)
!12352 = !DILocation(line: 2875, column: 12, scope: !12346)
!12353 = !DILocation(line: 2874, column: 29, scope: !12346)
!12354 = distinct !{!12354, !12341, !12355}
!12355 = !DILocation(line: 2875, column: 14, scope: !12342)
!12356 = !DILocation(line: 2880, column: 2, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2880, column: 2)
!12358 = !DILocation(line: 2880, column: 2, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 2880, column: 2)
!12360 = !DILocation(line: 2881, column: 3, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 2880, column: 44)
!12362 = !DILocation(line: 2881, column: 7, scope: !12361)
!12363 = !DILocation(line: 2881, column: 12, scope: !12361)
!12364 = !DILocation(line: 2881, column: 23, scope: !12361)
!12365 = !DILocation(line: 2881, column: 25, scope: !12361)
!12366 = !DILocation(line: 2881, column: 31, scope: !12361)
!12367 = !DILocation(line: 2882, column: 26, scope: !12361)
!12368 = !DILocation(line: 2882, column: 8, scope: !12361)
!12369 = !DILocation(line: 2882, column: 6, scope: !12361)
!12370 = !DILocation(line: 2883, column: 3, scope: !12361)
!12371 = !DILocation(line: 2883, column: 7, scope: !12361)
!12372 = !DILocation(line: 2883, column: 12, scope: !12361)
!12373 = !DILocation(line: 2883, column: 23, scope: !12361)
!12374 = !DILocation(line: 2883, column: 25, scope: !12361)
!12375 = !DILocation(line: 2883, column: 31, scope: !12361)
!12376 = !DILocation(line: 2884, column: 7, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 2884, column: 7)
!12378 = !DILocation(line: 2884, column: 7, scope: !12361)
!12379 = !DILocation(line: 2885, column: 4, scope: !12377)
!12380 = !DILocation(line: 2886, column: 2, scope: !12361)
!12381 = distinct !{!12381, !12356, !12382}
!12382 = !DILocation(line: 2886, column: 2, scope: !12357)
!12383 = !DILocation(line: 2889, column: 21, scope: !12217)
!12384 = !DILocation(line: 2889, column: 25, scope: !12217)
!12385 = !DILocation(line: 2889, column: 7, scope: !12217)
!12386 = !DILocation(line: 2889, column: 5, scope: !12217)
!12387 = !DILocation(line: 2890, column: 6, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2890, column: 6)
!12389 = !DILocation(line: 2890, column: 6, scope: !12217)
!12390 = !DILocation(line: 2891, column: 3, scope: !12388)
!12391 = !DILocation(line: 2893, column: 2, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2893, column: 2)
!12393 = !DILocation(line: 2893, column: 2, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 2893, column: 2)
!12395 = !DILocation(line: 2894, column: 3, scope: !12394)
!12396 = distinct !{!12396, !12391, !12397}
!12397 = !DILocation(line: 2894, column: 10, scope: !12392)
!12398 = !DILocation(line: 2896, column: 2, scope: !12217)
!12399 = !DILabel(scope: !12217, name: "fail", file: !3, line: 2898)
!12400 = !DILocation(line: 2898, column: 2, scope: !12217)
!12401 = !DILocation(line: 2899, column: 8, scope: !12217)
!12402 = !DILocation(line: 2899, column: 13, scope: !12217)
!12403 = !DILocation(line: 2899, column: 2, scope: !12217)
!12404 = !DILocation(line: 2899, column: 19, scope: !12217)
!12405 = !DILocation(line: 2901, column: 10, scope: !12217)
!12406 = !DILocation(line: 2901, column: 2, scope: !12217)
!12407 = !DILocation(line: 2904, column: 9, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2901, column: 14)
!12409 = !DILocation(line: 2904, column: 14, scope: !12408)
!12410 = !DILocation(line: 2904, column: 3, scope: !12408)
!12411 = !DILocation(line: 2904, column: 21, scope: !12408)
!12412 = !DILocation(line: 2905, column: 3, scope: !12408)
!12413 = !DILocalVariable(name: "__UNIQUE_ID___x348", scope: !12414, file: !3, line: 2909, type: !223)
!12414 = distinct !DILexicalBlock(scope: !12408, file: !3, line: 2909, column: 23)
!12415 = !DILocation(line: 2909, column: 23, scope: !12414)
!12416 = !DILocalVariable(name: "__UNIQUE_ID___y349", scope: !12414, file: !3, line: 2909, type: !223)
!12417 = !DILocation(line: 2909, column: 9, scope: !12408)
!12418 = !DILocation(line: 2909, column: 14, scope: !12408)
!12419 = !DILocation(line: 2909, column: 3, scope: !12408)
!12420 = !DILocation(line: 2909, column: 21, scope: !12408)
!12421 = !DILocation(line: 2912, column: 13, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12408, file: !3, line: 2912, column: 7)
!12423 = !DILocation(line: 2912, column: 18, scope: !12422)
!12424 = !DILocation(line: 2912, column: 7, scope: !12422)
!12425 = !DILocation(line: 2912, column: 25, scope: !12422)
!12426 = !DILocation(line: 2912, column: 7, scope: !12408)
!12427 = !DILocation(line: 2916, column: 25, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 2912, column: 31)
!12429 = !DILocation(line: 2916, column: 29, scope: !12428)
!12430 = !DILocation(line: 2916, column: 4, scope: !12428)
!12431 = !DILocation(line: 2917, column: 28, scope: !12428)
!12432 = !DILocation(line: 2917, column: 4, scope: !12428)
!12433 = !DILocation(line: 2918, column: 3, scope: !12428)
!12434 = !DILocation(line: 2919, column: 2, scope: !12408)
!12435 = !DILocation(line: 2921, column: 13, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 2921, column: 6)
!12437 = !DILocation(line: 2921, column: 18, scope: !12436)
!12438 = !DILocation(line: 2921, column: 7, scope: !12436)
!12439 = !DILocation(line: 2921, column: 6, scope: !12217)
!12440 = !DILocation(line: 2922, column: 19, scope: !12436)
!12441 = !DILocation(line: 2922, column: 3, scope: !12436)
!12442 = !DILocation(line: 2924, column: 2, scope: !12217)
!12443 = !DILocation(line: 2925, column: 1, scope: !12217)
!12444 = distinct !DISubprogram(name: "ata_id_is_sata", scope: !222, file: !222, line: 848, type: !8945, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12445 = !DILocalVariable(name: "id", arg: 1, scope: !12444, file: !222, line: 848, type: !8685)
!12446 = !DILocation(line: 848, column: 46, scope: !12444)
!12447 = !DILocation(line: 856, column: 6, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12444, file: !222, line: 856, column: 6)
!12449 = !DILocation(line: 856, column: 27, scope: !12448)
!12450 = !DILocation(line: 856, column: 32, scope: !12448)
!12451 = !DILocation(line: 856, column: 42, scope: !12448)
!12452 = !DILocation(line: 856, column: 35, scope: !12448)
!12453 = !DILocation(line: 856, column: 63, scope: !12448)
!12454 = !DILocation(line: 856, column: 6, scope: !12444)
!12455 = !DILocation(line: 857, column: 3, scope: !12448)
!12456 = !DILocation(line: 858, column: 2, scope: !12444)
!12457 = !DILocation(line: 859, column: 1, scope: !12444)
!12458 = distinct !DISubprogram(name: "sata_down_spd_limit", scope: !3, file: !3, line: 2992, type: !12459, scopeLine: 2993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12459 = !DISubroutineType(types: !12460)
!12460 = !{!223, !6378, !989}
!12461 = !DILocation(line: 324, column: 45, scope: !8429, inlinedAt: !12462)
!12462 = distinct !DILocation(line: 3046, column: 2, scope: !12458)
!12463 = !DILocation(line: 326, column: 6, scope: !8429, inlinedAt: !12462)
!12464 = !DILocalVariable(name: "x", arg: 1, scope: !12465, file: !8430, line: 283, type: !223)
!12465 = distinct !DISubprogram(name: "ffs", scope: !8430, file: !8430, line: 283, type: !1947, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12466 = !DILocation(line: 283, column: 36, scope: !12465, inlinedAt: !12467)
!12467 = distinct !DILocation(line: 3039, column: 10, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 3038, column: 8)
!12469 = distinct !DILexicalBlock(scope: !12470, file: !3, line: 3036, column: 7)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 3035, column: 17)
!12471 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 3035, column: 6)
!12472 = !DILocalVariable(name: "r", scope: !12465, file: !8430, line: 285, type: !223)
!12473 = !DILocation(line: 285, column: 6, scope: !12465, inlinedAt: !12467)
!12474 = !DILocation(line: 324, column: 45, scope: !8429, inlinedAt: !12475)
!12475 = distinct !DILocation(line: 3014, column: 8, scope: !12458)
!12476 = !DILocation(line: 326, column: 6, scope: !8429, inlinedAt: !12475)
!12477 = !DILocalVariable(name: "link", arg: 1, scope: !12458, file: !3, line: 2992, type: !6378)
!12478 = !DILocation(line: 2992, column: 42, scope: !12458)
!12479 = !DILocalVariable(name: "spd_limit", arg: 2, scope: !12458, file: !3, line: 2992, type: !989)
!12480 = !DILocation(line: 2992, column: 52, scope: !12458)
!12481 = !DILocalVariable(name: "sstatus", scope: !12458, file: !3, line: 2994, type: !989)
!12482 = !DILocation(line: 2994, column: 6, scope: !12458)
!12483 = !DILocalVariable(name: "spd", scope: !12458, file: !3, line: 2994, type: !989)
!12484 = !DILocation(line: 2994, column: 15, scope: !12458)
!12485 = !DILocalVariable(name: "mask", scope: !12458, file: !3, line: 2994, type: !989)
!12486 = !DILocation(line: 2994, column: 20, scope: !12458)
!12487 = !DILocalVariable(name: "rc", scope: !12458, file: !3, line: 2995, type: !223)
!12488 = !DILocation(line: 2995, column: 6, scope: !12458)
!12489 = !DILocalVariable(name: "bit", scope: !12458, file: !3, line: 2995, type: !223)
!12490 = !DILocation(line: 2995, column: 10, scope: !12458)
!12491 = !DILocation(line: 2997, column: 22, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 2997, column: 6)
!12493 = !DILocation(line: 2997, column: 7, scope: !12492)
!12494 = !DILocation(line: 2997, column: 6, scope: !12458)
!12495 = !DILocation(line: 2998, column: 3, scope: !12492)
!12496 = !DILocation(line: 3003, column: 21, scope: !12458)
!12497 = !DILocation(line: 3003, column: 7, scope: !12458)
!12498 = !DILocation(line: 3003, column: 5, scope: !12458)
!12499 = !DILocation(line: 3004, column: 6, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 3004, column: 6)
!12501 = !DILocation(line: 3004, column: 9, scope: !12500)
!12502 = !DILocation(line: 3004, column: 14, scope: !12500)
!12503 = !DILocation(line: 3004, column: 36, scope: !12500)
!12504 = !DILocation(line: 3004, column: 17, scope: !12500)
!12505 = !DILocation(line: 3004, column: 6, scope: !12458)
!12506 = !DILocation(line: 3005, column: 10, scope: !12500)
!12507 = !DILocation(line: 3005, column: 18, scope: !12500)
!12508 = !DILocation(line: 3005, column: 24, scope: !12500)
!12509 = !DILocation(line: 3005, column: 7, scope: !12500)
!12510 = !DILocation(line: 3005, column: 3, scope: !12500)
!12511 = !DILocation(line: 3007, column: 9, scope: !12500)
!12512 = !DILocation(line: 3007, column: 15, scope: !12500)
!12513 = !DILocation(line: 3007, column: 7, scope: !12500)
!12514 = !DILocation(line: 3009, column: 9, scope: !12458)
!12515 = !DILocation(line: 3009, column: 15, scope: !12458)
!12516 = !DILocation(line: 3009, column: 7, scope: !12458)
!12517 = !DILocation(line: 3010, column: 6, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 3010, column: 6)
!12519 = !DILocation(line: 3010, column: 11, scope: !12518)
!12520 = !DILocation(line: 3010, column: 6, scope: !12458)
!12521 = !DILocation(line: 3011, column: 3, scope: !12518)
!12522 = !DILocation(line: 3014, column: 12, scope: !12458)
!12523 = !DILocation(line: 340, column: 14, scope: !8429, inlinedAt: !12475)
!12524 = !DILocation(line: 338, column: 2, scope: !8429, inlinedAt: !12475)
!12525 = !DILocation(line: 351, column: 9, scope: !8429, inlinedAt: !12475)
!12526 = !DILocation(line: 351, column: 11, scope: !8429, inlinedAt: !12475)
!12527 = !DILocation(line: 3014, column: 18, scope: !12458)
!12528 = !DILocation(line: 3014, column: 6, scope: !12458)
!12529 = !DILocation(line: 3015, column: 17, scope: !12458)
!12530 = !DILocation(line: 3015, column: 14, scope: !12458)
!12531 = !DILocation(line: 3015, column: 10, scope: !12458)
!12532 = !DILocation(line: 3015, column: 7, scope: !12458)
!12533 = !DILocation(line: 3026, column: 6, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 3026, column: 6)
!12535 = !DILocation(line: 3026, column: 10, scope: !12534)
!12536 = !DILocation(line: 3026, column: 6, scope: !12458)
!12537 = !DILocation(line: 3027, column: 18, scope: !12534)
!12538 = !DILocation(line: 3027, column: 22, scope: !12534)
!12539 = !DILocation(line: 3027, column: 14, scope: !12534)
!12540 = !DILocation(line: 3027, column: 28, scope: !12534)
!12541 = !DILocation(line: 3027, column: 8, scope: !12534)
!12542 = !DILocation(line: 3027, column: 3, scope: !12534)
!12543 = !DILocation(line: 3029, column: 3, scope: !12534)
!12544 = !DILocation(line: 3032, column: 7, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 3032, column: 6)
!12546 = !DILocation(line: 3032, column: 6, scope: !12458)
!12547 = !DILocation(line: 3033, column: 3, scope: !12545)
!12548 = !DILocation(line: 3035, column: 6, scope: !12471)
!12549 = !DILocation(line: 3035, column: 6, scope: !12458)
!12550 = !DILocation(line: 3036, column: 7, scope: !12469)
!12551 = !DILocation(line: 3036, column: 21, scope: !12469)
!12552 = !DILocation(line: 3036, column: 18, scope: !12469)
!12553 = !DILocation(line: 3036, column: 32, scope: !12469)
!12554 = !DILocation(line: 3036, column: 12, scope: !12469)
!12555 = !DILocation(line: 3036, column: 7, scope: !12470)
!12556 = !DILocation(line: 3037, column: 18, scope: !12469)
!12557 = !DILocation(line: 3037, column: 15, scope: !12469)
!12558 = !DILocation(line: 3037, column: 29, scope: !12469)
!12559 = !DILocation(line: 3037, column: 9, scope: !12469)
!12560 = !DILocation(line: 3037, column: 4, scope: !12469)
!12561 = !DILocation(line: 3039, column: 14, scope: !12468)
!12562 = !DILocation(line: 299, column: 14, scope: !12465, inlinedAt: !12467)
!12563 = !DILocation(line: 297, column: 2, scope: !12465, inlinedAt: !12467)
!12564 = !{i32 405496}
!12565 = !DILocation(line: 310, column: 9, scope: !12465, inlinedAt: !12467)
!12566 = !DILocation(line: 310, column: 11, scope: !12465, inlinedAt: !12467)
!12567 = !DILocation(line: 3039, column: 20, scope: !12468)
!12568 = !DILocation(line: 3039, column: 8, scope: !12468)
!12569 = !DILocation(line: 3040, column: 16, scope: !12468)
!12570 = !DILocation(line: 3040, column: 13, scope: !12468)
!12571 = !DILocation(line: 3040, column: 9, scope: !12468)
!12572 = !DILocation(line: 3042, column: 2, scope: !12470)
!12573 = !DILocation(line: 3044, column: 25, scope: !12458)
!12574 = !DILocation(line: 3044, column: 2, scope: !12458)
!12575 = !DILocation(line: 3044, column: 8, scope: !12458)
!12576 = !DILocation(line: 3044, column: 23, scope: !12458)
!12577 = !DILocation(line: 3046, column: 2, scope: !12458)
!12578 = !DILocation(line: 340, column: 14, scope: !8429, inlinedAt: !12462)
!12579 = !DILocation(line: 338, column: 2, scope: !8429, inlinedAt: !12462)
!12580 = !DILocation(line: 351, column: 9, scope: !8429, inlinedAt: !12462)
!12581 = !DILocation(line: 351, column: 11, scope: !8429, inlinedAt: !12462)
!12582 = !DILocation(line: 3049, column: 2, scope: !12458)
!12583 = !DILocation(line: 3050, column: 1, scope: !12458)
!12584 = distinct !DISubprogram(name: "ata_down_xfermask_limit", scope: !3, file: !3, line: 3120, type: !12585, scopeLine: 3121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12585 = !DISubroutineType(types: !12586)
!12586 = !{!223, !6374, !7}
!12587 = !DILocation(line: 324, column: 45, scope: !8429, inlinedAt: !12588)
!12588 = distinct !DILocation(line: 3148, column: 14, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 3147, column: 26)
!12590 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 3147, column: 14)
!12591 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 3142, column: 7)
!12592 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 3135, column: 15)
!12593 = !DILocation(line: 326, column: 6, scope: !8429, inlinedAt: !12588)
!12594 = !DILocation(line: 324, column: 45, scope: !8429, inlinedAt: !12595)
!12595 = distinct !DILocation(line: 3143, column: 14, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 3142, column: 18)
!12597 = !DILocation(line: 326, column: 6, scope: !8429, inlinedAt: !12595)
!12598 = !DILocation(line: 324, column: 45, scope: !8429, inlinedAt: !12599)
!12599 = distinct !DILocation(line: 3137, column: 13, scope: !12592)
!12600 = !DILocation(line: 326, column: 6, scope: !8429, inlinedAt: !12599)
!12601 = !DILocalVariable(name: "dev", arg: 1, scope: !12584, file: !3, line: 3120, type: !6374)
!12602 = !DILocation(line: 3120, column: 48, scope: !12584)
!12603 = !DILocalVariable(name: "sel", arg: 2, scope: !12584, file: !3, line: 3120, type: !7)
!12604 = !DILocation(line: 3120, column: 66, scope: !12584)
!12605 = !DILocalVariable(name: "buf", scope: !12584, file: !3, line: 3122, type: !3044)
!12606 = !DILocation(line: 3122, column: 7, scope: !12584)
!12607 = !DILocalVariable(name: "orig_mask", scope: !12584, file: !3, line: 3123, type: !994)
!12608 = !DILocation(line: 3123, column: 16, scope: !12584)
!12609 = !DILocalVariable(name: "xfer_mask", scope: !12584, file: !3, line: 3123, type: !994)
!12610 = !DILocation(line: 3123, column: 27, scope: !12584)
!12611 = !DILocalVariable(name: "pio_mask", scope: !12584, file: !3, line: 3124, type: !994)
!12612 = !DILocation(line: 3124, column: 16, scope: !12584)
!12613 = !DILocalVariable(name: "mwdma_mask", scope: !12584, file: !3, line: 3124, type: !994)
!12614 = !DILocation(line: 3124, column: 26, scope: !12584)
!12615 = !DILocalVariable(name: "udma_mask", scope: !12584, file: !3, line: 3124, type: !994)
!12616 = !DILocation(line: 3124, column: 38, scope: !12584)
!12617 = !DILocalVariable(name: "quiet", scope: !12584, file: !3, line: 3125, type: !223)
!12618 = !DILocation(line: 3125, column: 6, scope: !12584)
!12619 = !DILocalVariable(name: "highbit", scope: !12584, file: !3, line: 3125, type: !223)
!12620 = !DILocation(line: 3125, column: 13, scope: !12584)
!12621 = !DILocation(line: 3127, column: 13, scope: !12584)
!12622 = !DILocation(line: 3127, column: 17, scope: !12584)
!12623 = !DILocation(line: 3127, column: 11, scope: !12584)
!12624 = !DILocation(line: 3127, column: 10, scope: !12584)
!12625 = !DILocation(line: 3127, column: 8, scope: !12584)
!12626 = !DILocation(line: 3128, column: 6, scope: !12584)
!12627 = !DILocation(line: 3130, column: 44, scope: !12584)
!12628 = !DILocation(line: 3130, column: 49, scope: !12584)
!12629 = !DILocation(line: 3131, column: 9, scope: !12584)
!12630 = !DILocation(line: 3131, column: 14, scope: !12584)
!12631 = !DILocation(line: 3132, column: 9, scope: !12584)
!12632 = !DILocation(line: 3132, column: 14, scope: !12584)
!12633 = !DILocation(line: 3130, column: 26, scope: !12584)
!12634 = !DILocation(line: 3130, column: 24, scope: !12584)
!12635 = !DILocation(line: 3130, column: 12, scope: !12584)
!12636 = !DILocation(line: 3133, column: 22, scope: !12584)
!12637 = !DILocation(line: 3133, column: 2, scope: !12584)
!12638 = !DILocation(line: 3135, column: 10, scope: !12584)
!12639 = !DILocation(line: 3135, column: 2, scope: !12584)
!12640 = !DILocation(line: 3137, column: 17, scope: !12592)
!12641 = !DILocation(line: 340, column: 14, scope: !8429, inlinedAt: !12599)
!12642 = !DILocation(line: 338, column: 2, scope: !8429, inlinedAt: !12599)
!12643 = !DILocation(line: 351, column: 9, scope: !8429, inlinedAt: !12599)
!12644 = !DILocation(line: 351, column: 11, scope: !8429, inlinedAt: !12599)
!12645 = !DILocation(line: 3137, column: 27, scope: !12592)
!12646 = !DILocation(line: 3137, column: 11, scope: !12592)
!12647 = !DILocation(line: 3138, column: 22, scope: !12592)
!12648 = !DILocation(line: 3138, column: 19, scope: !12592)
!12649 = !DILocation(line: 3138, column: 15, scope: !12592)
!12650 = !DILocation(line: 3138, column: 12, scope: !12592)
!12651 = !DILocation(line: 3139, column: 3, scope: !12592)
!12652 = !DILocation(line: 3142, column: 7, scope: !12591)
!12653 = !DILocation(line: 3142, column: 7, scope: !12592)
!12654 = !DILocation(line: 3143, column: 18, scope: !12596)
!12655 = !DILocation(line: 340, column: 14, scope: !8429, inlinedAt: !12595)
!12656 = !DILocation(line: 338, column: 2, scope: !8429, inlinedAt: !12595)
!12657 = !DILocation(line: 351, column: 9, scope: !8429, inlinedAt: !12595)
!12658 = !DILocation(line: 351, column: 11, scope: !8429, inlinedAt: !12595)
!12659 = !DILocation(line: 3143, column: 29, scope: !12596)
!12660 = !DILocation(line: 3143, column: 12, scope: !12596)
!12661 = !DILocation(line: 3144, column: 24, scope: !12596)
!12662 = !DILocation(line: 3144, column: 21, scope: !12596)
!12663 = !DILocation(line: 3144, column: 17, scope: !12596)
!12664 = !DILocation(line: 3144, column: 14, scope: !12596)
!12665 = !DILocation(line: 3145, column: 9, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 3145, column: 8)
!12667 = !DILocation(line: 3145, column: 8, scope: !12596)
!12668 = !DILocation(line: 3146, column: 5, scope: !12666)
!12669 = !DILocation(line: 3147, column: 3, scope: !12596)
!12670 = !DILocation(line: 3147, column: 14, scope: !12590)
!12671 = !DILocation(line: 3147, column: 14, scope: !12591)
!12672 = !DILocation(line: 3148, column: 18, scope: !12589)
!12673 = !DILocation(line: 340, column: 14, scope: !8429, inlinedAt: !12588)
!12674 = !DILocation(line: 338, column: 2, scope: !8429, inlinedAt: !12588)
!12675 = !DILocation(line: 351, column: 9, scope: !8429, inlinedAt: !12588)
!12676 = !DILocation(line: 351, column: 11, scope: !8429, inlinedAt: !12588)
!12677 = !DILocation(line: 3148, column: 30, scope: !12589)
!12678 = !DILocation(line: 3148, column: 12, scope: !12589)
!12679 = !DILocation(line: 3149, column: 25, scope: !12589)
!12680 = !DILocation(line: 3149, column: 22, scope: !12589)
!12681 = !DILocation(line: 3149, column: 18, scope: !12589)
!12682 = !DILocation(line: 3149, column: 15, scope: !12589)
!12683 = !DILocation(line: 3150, column: 9, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12589, file: !3, line: 3150, column: 8)
!12685 = !DILocation(line: 3150, column: 8, scope: !12589)
!12686 = !DILocation(line: 3151, column: 5, scope: !12684)
!12687 = !DILocation(line: 3152, column: 3, scope: !12589)
!12688 = !DILocation(line: 3153, column: 3, scope: !12592)
!12689 = !DILocation(line: 3156, column: 13, scope: !12592)
!12690 = !DILocation(line: 3157, column: 3, scope: !12592)
!12691 = !DILocation(line: 3160, column: 12, scope: !12592)
!12692 = !DILocation(line: 3160, column: 3, scope: !12592)
!12693 = !DILocation(line: 3163, column: 14, scope: !12592)
!12694 = !DILocation(line: 3164, column: 13, scope: !12592)
!12695 = !DILocation(line: 3165, column: 3, scope: !12592)
!12696 = !DILocation(line: 3168, column: 3, scope: !12592)
!12697 = !DILocation(line: 3168, column: 3, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 3168, column: 3)
!12699 = !DILocation(line: 3168, column: 3, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 3168, column: 3)
!12701 = !DILocation(line: 3168, column: 3, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 3168, column: 3)
!12703 = !{i32 -2139230734, i32 -2139230705, i32 -2139230659, i32 -2139230601, i32 -2139230547, i32 -2139230493, i32 -2139230438, i32 -2139230407}
!12704 = !DILocation(line: 3168, column: 3, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !3, line: 3168, column: 3)
!12706 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 3168, column: 3)
!12707 = !{i32 -2139229958, i32 -2139229951, i32 -2139229897, i32 -2139229866, i32 -2139229836}
!12708 = !DILocation(line: 3168, column: 3, scope: !12706)
!12709 = !DILocation(line: 3169, column: 2, scope: !12592)
!12710 = !DILocation(line: 3171, column: 33, scope: !12584)
!12711 = !DILocation(line: 3171, column: 43, scope: !12584)
!12712 = !DILocation(line: 3171, column: 55, scope: !12584)
!12713 = !DILocation(line: 3171, column: 15, scope: !12584)
!12714 = !DILocation(line: 3171, column: 12, scope: !12584)
!12715 = !DILocation(line: 3173, column: 8, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 3173, column: 6)
!12717 = !DILocation(line: 3173, column: 18, scope: !12716)
!12718 = !DILocation(line: 3173, column: 34, scope: !12716)
!12719 = !DILocation(line: 3173, column: 37, scope: !12716)
!12720 = !DILocation(line: 3173, column: 50, scope: !12716)
!12721 = !DILocation(line: 3173, column: 47, scope: !12716)
!12722 = !DILocation(line: 3173, column: 6, scope: !12584)
!12723 = !DILocation(line: 3174, column: 3, scope: !12716)
!12724 = !DILocation(line: 3176, column: 7, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 3176, column: 6)
!12726 = !DILocation(line: 3176, column: 6, scope: !12584)
!12727 = !DILocation(line: 3177, column: 7, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 3177, column: 7)
!12729 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 3176, column: 14)
!12730 = !DILocation(line: 3177, column: 17, scope: !12728)
!12731 = !DILocation(line: 3177, column: 7, scope: !12729)
!12732 = !DILocation(line: 3178, column: 13, scope: !12728)
!12733 = !DILocation(line: 3179, column: 22, scope: !12728)
!12734 = !DILocation(line: 3179, column: 6, scope: !12728)
!12735 = !DILocation(line: 3180, column: 22, scope: !12728)
!12736 = !DILocation(line: 3180, column: 32, scope: !12728)
!12737 = !DILocation(line: 3180, column: 6, scope: !12728)
!12738 = !DILocation(line: 3178, column: 4, scope: !12728)
!12739 = !DILocation(line: 3182, column: 13, scope: !12728)
!12740 = !DILocation(line: 3183, column: 22, scope: !12728)
!12741 = !DILocation(line: 3183, column: 6, scope: !12728)
!12742 = !DILocation(line: 3182, column: 4, scope: !12728)
!12743 = !DILocation(line: 3185, column: 3, scope: !12729)
!12744 = !DILocation(line: 3186, column: 2, scope: !12729)
!12745 = !DILocation(line: 3188, column: 22, scope: !12584)
!12746 = !DILocation(line: 3188, column: 34, scope: !12584)
!12747 = !DILocation(line: 3188, column: 39, scope: !12584)
!12748 = !DILocation(line: 3188, column: 50, scope: !12584)
!12749 = !DILocation(line: 3188, column: 55, scope: !12584)
!12750 = !DILocation(line: 3189, column: 9, scope: !12584)
!12751 = !DILocation(line: 3189, column: 14, scope: !12584)
!12752 = !DILocation(line: 3188, column: 2, scope: !12584)
!12753 = !DILocation(line: 3191, column: 2, scope: !12584)
!12754 = !DILocation(line: 3192, column: 1, scope: !12584)
!12755 = distinct !DISubprogram(name: "ata_dev_pair", scope: !3, file: !3, line: 2962, type: !12756, scopeLine: 2963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12756 = !DISubroutineType(types: !12757)
!12757 = !{!6374, !6374}
!12758 = !DILocalVariable(name: "adev", arg: 1, scope: !12755, file: !3, line: 2962, type: !6374)
!12759 = !DILocation(line: 2962, column: 52, scope: !12755)
!12760 = !DILocalVariable(name: "link", scope: !12755, file: !3, line: 2964, type: !6378)
!12761 = !DILocation(line: 2964, column: 19, scope: !12755)
!12762 = !DILocation(line: 2964, column: 26, scope: !12755)
!12763 = !DILocation(line: 2964, column: 32, scope: !12755)
!12764 = !DILocalVariable(name: "pair", scope: !12755, file: !3, line: 2965, type: !6374)
!12765 = !DILocation(line: 2965, column: 21, scope: !12755)
!12766 = !DILocation(line: 2965, column: 29, scope: !12755)
!12767 = !DILocation(line: 2965, column: 35, scope: !12755)
!12768 = !DILocation(line: 2965, column: 46, scope: !12755)
!12769 = !DILocation(line: 2965, column: 52, scope: !12755)
!12770 = !DILocation(line: 2965, column: 44, scope: !12755)
!12771 = !DILocation(line: 2966, column: 23, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 2966, column: 6)
!12773 = !DILocation(line: 2966, column: 7, scope: !12772)
!12774 = !DILocation(line: 2966, column: 6, scope: !12755)
!12775 = !DILocation(line: 2967, column: 3, scope: !12772)
!12776 = !DILocation(line: 2968, column: 9, scope: !12755)
!12777 = !DILocation(line: 2968, column: 2, scope: !12755)
!12778 = !DILocation(line: 2969, column: 1, scope: !12755)
!12779 = distinct !DISubprogram(name: "ata_sstatus_online", scope: !3, file: !3, line: 163, type: !12780, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12780 = !DISubroutineType(types: !12781)
!12781 = !{!1495, !989}
!12782 = !DILocalVariable(name: "sstatus", arg: 1, scope: !12779, file: !3, line: 163, type: !989)
!12783 = !DILocation(line: 163, column: 36, scope: !12779)
!12784 = !DILocation(line: 165, column: 10, scope: !12779)
!12785 = !DILocation(line: 165, column: 18, scope: !12779)
!12786 = !DILocation(line: 165, column: 25, scope: !12779)
!12787 = !DILocation(line: 165, column: 2, scope: !12779)
!12788 = distinct !DISubprogram(name: "ata_link_printk", scope: !3, file: !3, line: 6451, type: !12789, scopeLine: 6453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{null, !7613, !1450, !1450, null}
!12791 = !DILocalVariable(name: "link", arg: 1, scope: !12788, file: !3, line: 6451, type: !7613)
!12792 = !DILocation(line: 6451, column: 45, scope: !12788)
!12793 = !DILocalVariable(name: "level", arg: 2, scope: !12788, file: !3, line: 6451, type: !1450)
!12794 = !DILocation(line: 6451, column: 63, scope: !12788)
!12795 = !DILocalVariable(name: "fmt", arg: 3, scope: !12788, file: !3, line: 6452, type: !1450)
!12796 = !DILocation(line: 6452, column: 20, scope: !12788)
!12797 = !DILocalVariable(name: "vaf", scope: !12788, file: !3, line: 6454, type: !7733)
!12798 = !DILocation(line: 6454, column: 19, scope: !12788)
!12799 = !DILocalVariable(name: "args", scope: !12788, file: !3, line: 6455, type: !7738)
!12800 = !DILocation(line: 6455, column: 10, scope: !12788)
!12801 = !DILocation(line: 6457, column: 2, scope: !12788)
!12802 = !DILocation(line: 6459, column: 12, scope: !12788)
!12803 = !DILocation(line: 6459, column: 6, scope: !12788)
!12804 = !DILocation(line: 6459, column: 10, scope: !12788)
!12805 = !DILocation(line: 6460, column: 6, scope: !12788)
!12806 = !DILocation(line: 6460, column: 9, scope: !12788)
!12807 = !DILocation(line: 6462, column: 24, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12788, file: !3, line: 6462, column: 6)
!12809 = !DILocation(line: 6462, column: 30, scope: !12808)
!12810 = !DILocation(line: 6462, column: 6, scope: !12808)
!12811 = !DILocation(line: 6462, column: 34, scope: !12808)
!12812 = !DILocation(line: 6462, column: 37, scope: !12808)
!12813 = !DILocation(line: 6462, column: 43, scope: !12808)
!12814 = !DILocation(line: 6462, column: 47, scope: !12808)
!12815 = !DILocation(line: 6462, column: 6, scope: !12788)
!12816 = !DILocation(line: 6464, column: 10, scope: !12808)
!12817 = !DILocation(line: 6464, column: 17, scope: !12808)
!12818 = !DILocation(line: 6464, column: 23, scope: !12808)
!12819 = !DILocation(line: 6464, column: 27, scope: !12808)
!12820 = !DILocation(line: 6464, column: 37, scope: !12808)
!12821 = !DILocation(line: 6464, column: 43, scope: !12808)
!12822 = !DILocation(line: 6463, column: 3, scope: !12808)
!12823 = !DILocation(line: 6467, column: 10, scope: !12808)
!12824 = !DILocation(line: 6467, column: 17, scope: !12808)
!12825 = !DILocation(line: 6467, column: 23, scope: !12808)
!12826 = !DILocation(line: 6467, column: 27, scope: !12808)
!12827 = !DILocation(line: 6466, column: 3, scope: !12808)
!12828 = !DILocation(line: 6469, column: 2, scope: !12788)
!12829 = !DILocation(line: 6470, column: 1, scope: !12788)
!12830 = distinct !DISubprogram(name: "ata_timing_cycle2mode", scope: !3, file: !3, line: 3069, type: !12831, scopeLine: 3070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12831 = !DISubroutineType(types: !12832)
!12832 = !{!1216, !7, !223}
!12833 = !DILocalVariable(name: "xfer_shift", arg: 1, scope: !12830, file: !3, line: 3069, type: !7)
!12834 = !DILocation(line: 3069, column: 39, scope: !12830)
!12835 = !DILocalVariable(name: "cycle", arg: 2, scope: !12830, file: !3, line: 3069, type: !223)
!12836 = !DILocation(line: 3069, column: 55, scope: !12830)
!12837 = !DILocalVariable(name: "base_mode", scope: !12830, file: !3, line: 3071, type: !1216)
!12838 = !DILocation(line: 3071, column: 5, scope: !12830)
!12839 = !DILocalVariable(name: "last_mode", scope: !12830, file: !3, line: 3071, type: !1216)
!12840 = !DILocation(line: 3071, column: 23, scope: !12830)
!12841 = !DILocalVariable(name: "ent", scope: !12830, file: !3, line: 3072, type: !8449)
!12842 = !DILocation(line: 3072, column: 29, scope: !12830)
!12843 = !DILocalVariable(name: "t", scope: !12830, file: !3, line: 3073, type: !12844)
!12844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12845, size: 64)
!12845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12846)
!12846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_timing", file: !183, line: 1012, size: 160, elements: !12847)
!12847 = !{!12848, !12849, !12850, !12851, !12852, !12853, !12854, !12855, !12856, !12857}
!12848 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12846, file: !183, line: 1013, baseType: !1001, size: 16)
!12849 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !12846, file: !183, line: 1014, baseType: !1001, size: 16, offset: 16)
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "act8b", scope: !12846, file: !183, line: 1015, baseType: !1001, size: 16, offset: 32)
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "rec8b", scope: !12846, file: !183, line: 1016, baseType: !1001, size: 16, offset: 48)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "cyc8b", scope: !12846, file: !183, line: 1017, baseType: !1001, size: 16, offset: 64)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !12846, file: !183, line: 1018, baseType: !1001, size: 16, offset: 80)
!12854 = !DIDerivedType(tag: DW_TAG_member, name: "recover", scope: !12846, file: !183, line: 1019, baseType: !1001, size: 16, offset: 96)
!12855 = !DIDerivedType(tag: DW_TAG_member, name: "dmack_hold", scope: !12846, file: !183, line: 1020, baseType: !1001, size: 16, offset: 112)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !12846, file: !183, line: 1021, baseType: !1001, size: 16, offset: 128)
!12857 = !DIDerivedType(tag: DW_TAG_member, name: "udma", scope: !12846, file: !183, line: 1022, baseType: !1001, size: 16, offset: 144)
!12858 = !DILocation(line: 3073, column: 27, scope: !12830)
!12859 = !DILocation(line: 3075, column: 11, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 3075, column: 2)
!12861 = !DILocation(line: 3075, column: 7, scope: !12860)
!12862 = !DILocation(line: 3075, column: 27, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12860, file: !3, line: 3075, column: 2)
!12864 = !DILocation(line: 3075, column: 32, scope: !12863)
!12865 = !DILocation(line: 3075, column: 38, scope: !12863)
!12866 = !DILocation(line: 3075, column: 2, scope: !12860)
!12867 = !DILocation(line: 3076, column: 7, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 3076, column: 7)
!12869 = !DILocation(line: 3076, column: 12, scope: !12868)
!12870 = !DILocation(line: 3076, column: 21, scope: !12868)
!12871 = !DILocation(line: 3076, column: 18, scope: !12868)
!12872 = !DILocation(line: 3076, column: 7, scope: !12863)
!12873 = !DILocation(line: 3077, column: 16, scope: !12868)
!12874 = !DILocation(line: 3077, column: 21, scope: !12868)
!12875 = !DILocation(line: 3077, column: 14, scope: !12868)
!12876 = !DILocation(line: 3077, column: 4, scope: !12868)
!12877 = !DILocation(line: 3075, column: 47, scope: !12863)
!12878 = !DILocation(line: 3075, column: 2, scope: !12863)
!12879 = distinct !{!12879, !12866, !12880}
!12880 = !DILocation(line: 3077, column: 21, scope: !12860)
!12881 = !DILocation(line: 3079, column: 32, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 3079, column: 2)
!12883 = !DILocation(line: 3079, column: 11, scope: !12882)
!12884 = !DILocation(line: 3079, column: 9, scope: !12882)
!12885 = !DILocation(line: 3079, column: 7, scope: !12882)
!12886 = !DILocation(line: 3080, column: 7, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12882, file: !3, line: 3079, column: 2)
!12888 = !DILocation(line: 3080, column: 9, scope: !12887)
!12889 = !DILocation(line: 3080, column: 32, scope: !12887)
!12890 = !DILocation(line: 3080, column: 35, scope: !12887)
!12891 = !DILocation(line: 3080, column: 12, scope: !12887)
!12892 = !DILocation(line: 3080, column: 44, scope: !12887)
!12893 = !DILocation(line: 3080, column: 41, scope: !12887)
!12894 = !DILocation(line: 0, scope: !12887)
!12895 = !DILocation(line: 3079, column: 2, scope: !12882)
!12896 = !DILocalVariable(name: "this_cycle", scope: !12897, file: !3, line: 3081, type: !1001)
!12897 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 3080, column: 61)
!12898 = !DILocation(line: 3081, column: 18, scope: !12897)
!12899 = !DILocation(line: 3083, column: 11, scope: !12897)
!12900 = !DILocation(line: 3083, column: 3, scope: !12897)
!12901 = !DILocation(line: 3086, column: 17, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 3083, column: 23)
!12903 = !DILocation(line: 3086, column: 20, scope: !12902)
!12904 = !DILocation(line: 3086, column: 15, scope: !12902)
!12905 = !DILocation(line: 3087, column: 4, scope: !12902)
!12906 = !DILocation(line: 3089, column: 17, scope: !12902)
!12907 = !DILocation(line: 3089, column: 20, scope: !12902)
!12908 = !DILocation(line: 3089, column: 15, scope: !12902)
!12909 = !DILocation(line: 3090, column: 4, scope: !12902)
!12910 = !DILocation(line: 3092, column: 4, scope: !12902)
!12911 = !DILocation(line: 3095, column: 7, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 3095, column: 7)
!12913 = !DILocation(line: 3095, column: 15, scope: !12912)
!12914 = !DILocation(line: 3095, column: 13, scope: !12912)
!12915 = !DILocation(line: 3095, column: 7, scope: !12897)
!12916 = !DILocation(line: 3096, column: 4, scope: !12912)
!12917 = !DILocation(line: 3098, column: 15, scope: !12897)
!12918 = !DILocation(line: 3098, column: 18, scope: !12897)
!12919 = !DILocation(line: 3098, column: 13, scope: !12897)
!12920 = !DILocation(line: 3099, column: 2, scope: !12897)
!12921 = !DILocation(line: 3080, column: 57, scope: !12887)
!12922 = !DILocation(line: 3079, column: 2, scope: !12887)
!12923 = distinct !{!12923, !12895, !12924}
!12924 = !DILocation(line: 3099, column: 2, scope: !12882)
!12925 = !DILocation(line: 3101, column: 9, scope: !12830)
!12926 = !DILocation(line: 3101, column: 2, scope: !12830)
!12927 = !DILocation(line: 3102, column: 1, scope: !12830)
!12928 = distinct !DISubprogram(name: "ata_do_set_mode", scope: !3, file: !3, line: 3294, type: !6607, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!12929 = !DILocalVariable(name: "link", arg: 1, scope: !12928, file: !3, line: 3294, type: !6378)
!12930 = !DILocation(line: 3294, column: 38, scope: !12928)
!12931 = !DILocalVariable(name: "r_failed_dev", arg: 2, scope: !12928, file: !3, line: 3294, type: !6609)
!12932 = !DILocation(line: 3294, column: 64, scope: !12928)
!12933 = !DILocalVariable(name: "ap", scope: !12928, file: !3, line: 3296, type: !1005)
!12934 = !DILocation(line: 3296, column: 19, scope: !12928)
!12935 = !DILocation(line: 3296, column: 24, scope: !12928)
!12936 = !DILocation(line: 3296, column: 30, scope: !12928)
!12937 = !DILocalVariable(name: "dev", scope: !12928, file: !3, line: 3297, type: !6374)
!12938 = !DILocation(line: 3297, column: 21, scope: !12928)
!12939 = !DILocalVariable(name: "rc", scope: !12928, file: !3, line: 3298, type: !223)
!12940 = !DILocation(line: 3298, column: 6, scope: !12928)
!12941 = !DILocalVariable(name: "used_dma", scope: !12928, file: !3, line: 3298, type: !223)
!12942 = !DILocation(line: 3298, column: 14, scope: !12928)
!12943 = !DILocalVariable(name: "found", scope: !12928, file: !3, line: 3298, type: !223)
!12944 = !DILocation(line: 3298, column: 28, scope: !12928)
!12945 = !DILocation(line: 3301, column: 2, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3301, column: 2)
!12947 = !DILocation(line: 3301, column: 2, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 3301, column: 2)
!12949 = !DILocalVariable(name: "pio_mask", scope: !12950, file: !3, line: 3302, type: !994)
!12950 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 3301, column: 39)
!12951 = !DILocation(line: 3302, column: 17, scope: !12950)
!12952 = !DILocalVariable(name: "dma_mask", scope: !12950, file: !3, line: 3302, type: !994)
!12953 = !DILocation(line: 3302, column: 27, scope: !12950)
!12954 = !DILocalVariable(name: "mode_mask", scope: !12950, file: !3, line: 3303, type: !7)
!12955 = !DILocation(line: 3303, column: 16, scope: !12950)
!12956 = !DILocation(line: 3305, column: 13, scope: !12950)
!12957 = !DILocation(line: 3306, column: 7, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12950, file: !3, line: 3306, column: 7)
!12959 = !DILocation(line: 3306, column: 12, scope: !12958)
!12960 = !DILocation(line: 3306, column: 18, scope: !12958)
!12961 = !DILocation(line: 3306, column: 7, scope: !12950)
!12962 = !DILocation(line: 3307, column: 14, scope: !12958)
!12963 = !DILocation(line: 3307, column: 4, scope: !12958)
!12964 = !DILocation(line: 3308, column: 26, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 3308, column: 12)
!12966 = !DILocation(line: 3308, column: 31, scope: !12965)
!12967 = !DILocation(line: 3308, column: 12, scope: !12965)
!12968 = !DILocation(line: 3308, column: 12, scope: !12958)
!12969 = !DILocation(line: 3309, column: 14, scope: !12965)
!12970 = !DILocation(line: 3309, column: 4, scope: !12965)
!12971 = !DILocation(line: 3311, column: 20, scope: !12950)
!12972 = !DILocation(line: 3311, column: 3, scope: !12950)
!12973 = !DILocation(line: 3312, column: 22, scope: !12950)
!12974 = !DILocation(line: 3312, column: 3, scope: !12950)
!12975 = !DILocation(line: 3314, column: 32, scope: !12950)
!12976 = !DILocation(line: 3314, column: 37, scope: !12950)
!12977 = !DILocation(line: 3314, column: 14, scope: !12950)
!12978 = !DILocation(line: 3314, column: 12, scope: !12950)
!12979 = !DILocation(line: 3316, column: 7, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12950, file: !3, line: 3316, column: 7)
!12981 = !DILocation(line: 3316, column: 25, scope: !12980)
!12982 = !DILocation(line: 3316, column: 23, scope: !12980)
!12983 = !DILocation(line: 3316, column: 7, scope: !12950)
!12984 = !DILocation(line: 3317, column: 36, scope: !12980)
!12985 = !DILocation(line: 3317, column: 41, scope: !12980)
!12986 = !DILocation(line: 3318, column: 12, scope: !12980)
!12987 = !DILocation(line: 3318, column: 17, scope: !12980)
!12988 = !DILocation(line: 3317, column: 15, scope: !12980)
!12989 = !DILocation(line: 3317, column: 13, scope: !12980)
!12990 = !DILocation(line: 3317, column: 4, scope: !12980)
!12991 = !DILocation(line: 3320, column: 13, scope: !12980)
!12992 = !DILocation(line: 3322, column: 38, scope: !12950)
!12993 = !DILocation(line: 3322, column: 19, scope: !12950)
!12994 = !DILocation(line: 3322, column: 3, scope: !12950)
!12995 = !DILocation(line: 3322, column: 8, scope: !12950)
!12996 = !DILocation(line: 3322, column: 17, scope: !12950)
!12997 = !DILocation(line: 3323, column: 38, scope: !12950)
!12998 = !DILocation(line: 3323, column: 19, scope: !12950)
!12999 = !DILocation(line: 3323, column: 3, scope: !12950)
!13000 = !DILocation(line: 3323, column: 8, scope: !12950)
!13001 = !DILocation(line: 3323, column: 17, scope: !12950)
!13002 = !DILocation(line: 3325, column: 9, scope: !12950)
!13003 = !DILocation(line: 3326, column: 23, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12950, file: !3, line: 3326, column: 7)
!13005 = !DILocation(line: 3326, column: 7, scope: !13004)
!13006 = !DILocation(line: 3326, column: 7, scope: !12950)
!13007 = !DILocation(line: 3327, column: 13, scope: !13004)
!13008 = !DILocation(line: 3327, column: 4, scope: !13004)
!13009 = !DILocation(line: 3328, column: 2, scope: !12950)
!13010 = distinct !{!13010, !12945, !13011}
!13011 = !DILocation(line: 3328, column: 2, scope: !12946)
!13012 = !DILocation(line: 3329, column: 7, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3329, column: 6)
!13014 = !DILocation(line: 3329, column: 6, scope: !12928)
!13015 = !DILocation(line: 3330, column: 3, scope: !13013)
!13016 = !DILocation(line: 3333, column: 2, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3333, column: 2)
!13018 = !DILocation(line: 3333, column: 2, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13017, file: !3, line: 3333, column: 2)
!13020 = !DILocation(line: 3334, column: 7, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13022, file: !3, line: 3334, column: 7)
!13022 = distinct !DILexicalBlock(scope: !13019, file: !3, line: 3333, column: 39)
!13023 = !DILocation(line: 3334, column: 12, scope: !13021)
!13024 = !DILocation(line: 3334, column: 21, scope: !13021)
!13025 = !DILocation(line: 3334, column: 7, scope: !13022)
!13026 = !DILocation(line: 3335, column: 4, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13021, file: !3, line: 3334, column: 30)
!13028 = !DILocation(line: 3336, column: 7, scope: !13027)
!13029 = !DILocation(line: 3337, column: 4, scope: !13027)
!13030 = !DILocation(line: 3340, column: 20, scope: !13022)
!13031 = !DILocation(line: 3340, column: 25, scope: !13022)
!13032 = !DILocation(line: 3340, column: 3, scope: !13022)
!13033 = !DILocation(line: 3340, column: 8, scope: !13022)
!13034 = !DILocation(line: 3340, column: 18, scope: !13022)
!13035 = !DILocation(line: 3341, column: 3, scope: !13022)
!13036 = !DILocation(line: 3341, column: 8, scope: !13022)
!13037 = !DILocation(line: 3341, column: 19, scope: !13022)
!13038 = !DILocation(line: 3342, column: 7, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13022, file: !3, line: 3342, column: 7)
!13040 = !DILocation(line: 3342, column: 11, scope: !13039)
!13041 = !DILocation(line: 3342, column: 16, scope: !13039)
!13042 = !DILocation(line: 3342, column: 7, scope: !13022)
!13043 = !DILocation(line: 3343, column: 4, scope: !13039)
!13044 = !DILocation(line: 3343, column: 8, scope: !13039)
!13045 = !DILocation(line: 3343, column: 13, scope: !13039)
!13046 = !DILocation(line: 3343, column: 25, scope: !13039)
!13047 = !DILocation(line: 3343, column: 29, scope: !13039)
!13048 = !DILocation(line: 3344, column: 2, scope: !13022)
!13049 = distinct !{!13049, !13016, !13050}
!13050 = !DILocation(line: 3344, column: 2, scope: !13017)
!13051 = !DILocation(line: 3347, column: 2, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3347, column: 2)
!13053 = !DILocation(line: 3347, column: 2, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13052, file: !3, line: 3347, column: 2)
!13055 = !DILocation(line: 3348, column: 24, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 3348, column: 7)
!13057 = distinct !DILexicalBlock(scope: !13054, file: !3, line: 3347, column: 39)
!13058 = !DILocation(line: 3348, column: 8, scope: !13056)
!13059 = !DILocation(line: 3348, column: 7, scope: !13057)
!13060 = !DILocation(line: 3349, column: 4, scope: !13056)
!13061 = !DILocation(line: 3351, column: 20, scope: !13057)
!13062 = !DILocation(line: 3351, column: 25, scope: !13057)
!13063 = !DILocation(line: 3351, column: 3, scope: !13057)
!13064 = !DILocation(line: 3351, column: 8, scope: !13057)
!13065 = !DILocation(line: 3351, column: 18, scope: !13057)
!13066 = !DILocation(line: 3352, column: 41, scope: !13057)
!13067 = !DILocation(line: 3352, column: 46, scope: !13057)
!13068 = !DILocation(line: 3352, column: 21, scope: !13057)
!13069 = !DILocation(line: 3352, column: 3, scope: !13057)
!13070 = !DILocation(line: 3352, column: 8, scope: !13057)
!13071 = !DILocation(line: 3352, column: 19, scope: !13057)
!13072 = !DILocation(line: 3353, column: 7, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 3353, column: 7)
!13074 = !DILocation(line: 3353, column: 11, scope: !13073)
!13075 = !DILocation(line: 3353, column: 16, scope: !13073)
!13076 = !DILocation(line: 3353, column: 7, scope: !13057)
!13077 = !DILocation(line: 3354, column: 4, scope: !13073)
!13078 = !DILocation(line: 3354, column: 8, scope: !13073)
!13079 = !DILocation(line: 3354, column: 13, scope: !13073)
!13080 = !DILocation(line: 3354, column: 25, scope: !13073)
!13081 = !DILocation(line: 3354, column: 29, scope: !13073)
!13082 = !DILocation(line: 3355, column: 2, scope: !13057)
!13083 = distinct !{!13083, !13051, !13084}
!13084 = !DILocation(line: 3355, column: 2, scope: !13052)
!13085 = !DILocation(line: 3358, column: 2, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3358, column: 2)
!13087 = !DILocation(line: 3358, column: 2, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 3358, column: 2)
!13089 = !DILocation(line: 3359, column: 25, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 3358, column: 39)
!13091 = !DILocation(line: 3359, column: 8, scope: !13090)
!13092 = !DILocation(line: 3359, column: 6, scope: !13090)
!13093 = !DILocation(line: 3360, column: 7, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 3360, column: 7)
!13095 = !DILocation(line: 3360, column: 7, scope: !13090)
!13096 = !DILocation(line: 3361, column: 4, scope: !13094)
!13097 = !DILocation(line: 3362, column: 2, scope: !13090)
!13098 = distinct !{!13098, !13085, !13099}
!13099 = !DILocation(line: 3362, column: 2, scope: !13086)
!13100 = !DILocation(line: 3367, column: 6, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3367, column: 6)
!13102 = !DILocation(line: 3367, column: 15, scope: !13101)
!13103 = !DILocation(line: 3367, column: 19, scope: !13101)
!13104 = !DILocation(line: 3367, column: 23, scope: !13101)
!13105 = !DILocation(line: 3367, column: 29, scope: !13101)
!13106 = !DILocation(line: 3367, column: 35, scope: !13101)
!13107 = !DILocation(line: 3367, column: 6, scope: !12928)
!13108 = !DILocation(line: 3368, column: 31, scope: !13101)
!13109 = !DILocation(line: 3368, column: 3, scope: !13101)
!13110 = !DILocation(line: 3368, column: 7, scope: !13101)
!13111 = !DILocation(line: 3368, column: 13, scope: !13101)
!13112 = !DILocation(line: 3368, column: 29, scope: !13101)
!13113 = !DILocation(line: 3367, column: 53, scope: !13101)
!13114 = !DILabel(scope: !12928, name: "out", file: !3, line: 3370)
!13115 = !DILocation(line: 3370, column: 2, scope: !12928)
!13116 = !DILocation(line: 3371, column: 6, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3371, column: 6)
!13118 = !DILocation(line: 3371, column: 6, scope: !12928)
!13119 = !DILocation(line: 3372, column: 19, scope: !13117)
!13120 = !DILocation(line: 3372, column: 4, scope: !13117)
!13121 = !DILocation(line: 3372, column: 17, scope: !13117)
!13122 = !DILocation(line: 3372, column: 3, scope: !13117)
!13123 = !DILocation(line: 3373, column: 9, scope: !12928)
!13124 = !DILocation(line: 3373, column: 2, scope: !12928)
!13125 = distinct !DISubprogram(name: "ata_dev_xfermask", scope: !3, file: !3, line: 4118, type: !6618, scopeLine: 4119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13126 = !DILocalVariable(name: "dev", arg: 1, scope: !13125, file: !3, line: 4118, type: !6374)
!13127 = !DILocation(line: 4118, column: 49, scope: !13125)
!13128 = !DILocalVariable(name: "link", scope: !13125, file: !3, line: 4120, type: !6378)
!13129 = !DILocation(line: 4120, column: 19, scope: !13125)
!13130 = !DILocation(line: 4120, column: 26, scope: !13125)
!13131 = !DILocation(line: 4120, column: 31, scope: !13125)
!13132 = !DILocalVariable(name: "ap", scope: !13125, file: !3, line: 4121, type: !1005)
!13133 = !DILocation(line: 4121, column: 19, scope: !13125)
!13134 = !DILocation(line: 4121, column: 24, scope: !13125)
!13135 = !DILocation(line: 4121, column: 30, scope: !13125)
!13136 = !DILocalVariable(name: "host", scope: !13125, file: !3, line: 4122, type: !6675)
!13137 = !DILocation(line: 4122, column: 19, scope: !13125)
!13138 = !DILocation(line: 4122, column: 26, scope: !13125)
!13139 = !DILocation(line: 4122, column: 30, scope: !13125)
!13140 = !DILocalVariable(name: "xfer_mask", scope: !13125, file: !3, line: 4123, type: !994)
!13141 = !DILocation(line: 4123, column: 16, scope: !13125)
!13142 = !DILocation(line: 4126, column: 32, scope: !13125)
!13143 = !DILocation(line: 4126, column: 36, scope: !13125)
!13144 = !DILocation(line: 4127, column: 11, scope: !13125)
!13145 = !DILocation(line: 4127, column: 15, scope: !13125)
!13146 = !DILocation(line: 4127, column: 27, scope: !13125)
!13147 = !DILocation(line: 4127, column: 31, scope: !13125)
!13148 = !DILocation(line: 4126, column: 14, scope: !13125)
!13149 = !DILocation(line: 4126, column: 12, scope: !13125)
!13150 = !DILocation(line: 4130, column: 33, scope: !13125)
!13151 = !DILocation(line: 4130, column: 38, scope: !13125)
!13152 = !DILocation(line: 4131, column: 12, scope: !13125)
!13153 = !DILocation(line: 4131, column: 17, scope: !13125)
!13154 = !DILocation(line: 4131, column: 29, scope: !13125)
!13155 = !DILocation(line: 4131, column: 34, scope: !13125)
!13156 = !DILocation(line: 4130, column: 15, scope: !13125)
!13157 = !DILocation(line: 4130, column: 12, scope: !13125)
!13158 = !DILocation(line: 4132, column: 31, scope: !13125)
!13159 = !DILocation(line: 4132, column: 36, scope: !13125)
!13160 = !DILocation(line: 4132, column: 15, scope: !13125)
!13161 = !DILocation(line: 4132, column: 12, scope: !13125)
!13162 = !DILocation(line: 4138, column: 19, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 4138, column: 6)
!13164 = !DILocation(line: 4138, column: 6, scope: !13163)
!13165 = !DILocation(line: 4138, column: 6, scope: !13125)
!13166 = !DILocation(line: 4140, column: 13, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 4138, column: 25)
!13168 = !DILocation(line: 4142, column: 13, scope: !13167)
!13169 = !DILocation(line: 4143, column: 2, scope: !13167)
!13170 = !DILocation(line: 4145, column: 26, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 4145, column: 6)
!13172 = !DILocation(line: 4145, column: 6, scope: !13171)
!13173 = !DILocation(line: 4145, column: 6, scope: !13125)
!13174 = !DILocation(line: 4146, column: 13, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13171, file: !3, line: 4145, column: 32)
!13176 = !DILocation(line: 4147, column: 3, scope: !13175)
!13177 = !DILocation(line: 4149, column: 2, scope: !13175)
!13178 = !DILocation(line: 4151, column: 7, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 4151, column: 6)
!13180 = !DILocation(line: 4151, column: 13, scope: !13179)
!13181 = !DILocation(line: 4151, column: 19, scope: !13179)
!13182 = !DILocation(line: 4151, column: 39, scope: !13179)
!13183 = !DILocation(line: 4152, column: 6, scope: !13179)
!13184 = !DILocation(line: 4152, column: 12, scope: !13179)
!13185 = !DILocation(line: 4152, column: 28, scope: !13179)
!13186 = !DILocation(line: 4152, column: 31, scope: !13179)
!13187 = !DILocation(line: 4152, column: 37, scope: !13179)
!13188 = !DILocation(line: 4152, column: 56, scope: !13179)
!13189 = !DILocation(line: 4152, column: 53, scope: !13179)
!13190 = !DILocation(line: 4151, column: 6, scope: !13125)
!13191 = !DILocation(line: 4153, column: 13, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 4152, column: 60)
!13193 = !DILocation(line: 4154, column: 3, scope: !13192)
!13194 = !DILocation(line: 4156, column: 2, scope: !13192)
!13195 = !DILocation(line: 4158, column: 6, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 4158, column: 6)
!13197 = !DILocation(line: 4158, column: 10, scope: !13196)
!13198 = !DILocation(line: 4158, column: 16, scope: !13196)
!13199 = !DILocation(line: 4158, column: 6, scope: !13125)
!13200 = !DILocation(line: 4159, column: 38, scope: !13196)
!13201 = !DILocation(line: 4159, column: 16, scope: !13196)
!13202 = !DILocation(line: 4159, column: 13, scope: !13196)
!13203 = !DILocation(line: 4159, column: 3, scope: !13196)
!13204 = !DILocation(line: 4161, column: 6, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 4161, column: 6)
!13206 = !DILocation(line: 4161, column: 10, scope: !13205)
!13207 = !DILocation(line: 4161, column: 15, scope: !13205)
!13208 = !DILocation(line: 4161, column: 6, scope: !13125)
!13209 = !DILocation(line: 4162, column: 15, scope: !13205)
!13210 = !DILocation(line: 4162, column: 19, scope: !13205)
!13211 = !DILocation(line: 4162, column: 24, scope: !13205)
!13212 = !DILocation(line: 4162, column: 36, scope: !13205)
!13213 = !DILocation(line: 4162, column: 41, scope: !13205)
!13214 = !DILocation(line: 4162, column: 13, scope: !13205)
!13215 = !DILocation(line: 4162, column: 3, scope: !13205)
!13216 = !DILocation(line: 4172, column: 6, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 4172, column: 6)
!13218 = !DILocation(line: 4172, column: 16, scope: !13217)
!13219 = !DILocation(line: 4172, column: 6, scope: !13125)
!13220 = !DILocation(line: 4174, column: 23, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 4174, column: 7)
!13222 = !DILocation(line: 4174, column: 7, scope: !13221)
!13223 = !DILocation(line: 4174, column: 7, scope: !13217)
!13224 = !DILocation(line: 4175, column: 4, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13221, file: !3, line: 4174, column: 28)
!13226 = !DILocation(line: 4177, column: 14, scope: !13225)
!13227 = !DILocation(line: 4178, column: 3, scope: !13225)
!13228 = !DILocation(line: 4174, column: 25, scope: !13221)
!13229 = !DILocation(line: 4180, column: 22, scope: !13125)
!13230 = !DILocation(line: 4180, column: 34, scope: !13125)
!13231 = !DILocation(line: 4180, column: 39, scope: !13125)
!13232 = !DILocation(line: 4181, column: 9, scope: !13125)
!13233 = !DILocation(line: 4181, column: 14, scope: !13125)
!13234 = !DILocation(line: 4181, column: 27, scope: !13125)
!13235 = !DILocation(line: 4181, column: 32, scope: !13125)
!13236 = !DILocation(line: 4180, column: 2, scope: !13125)
!13237 = !DILocation(line: 4182, column: 1, scope: !13125)
!13238 = distinct !DISubprogram(name: "ata_force_xfermask", scope: !3, file: !3, line: 403, type: !6618, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13239 = !DILocalVariable(name: "dev", arg: 1, scope: !13238, file: !3, line: 403, type: !6374)
!13240 = !DILocation(line: 403, column: 51, scope: !13238)
!13241 = !DILocalVariable(name: "devno", scope: !13238, file: !3, line: 405, type: !223)
!13242 = !DILocation(line: 405, column: 6, scope: !13238)
!13243 = !DILocation(line: 405, column: 14, scope: !13238)
!13244 = !DILocation(line: 405, column: 19, scope: !13238)
!13245 = !DILocation(line: 405, column: 25, scope: !13238)
!13246 = !DILocation(line: 405, column: 31, scope: !13238)
!13247 = !DILocation(line: 405, column: 36, scope: !13238)
!13248 = !DILocation(line: 405, column: 29, scope: !13238)
!13249 = !DILocalVariable(name: "alt_devno", scope: !13238, file: !3, line: 406, type: !223)
!13250 = !DILocation(line: 406, column: 6, scope: !13238)
!13251 = !DILocation(line: 406, column: 18, scope: !13238)
!13252 = !DILocalVariable(name: "i", scope: !13238, file: !3, line: 407, type: !223)
!13253 = !DILocation(line: 407, column: 6, scope: !13238)
!13254 = !DILocation(line: 410, column: 23, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13238, file: !3, line: 410, column: 6)
!13256 = !DILocation(line: 410, column: 28, scope: !13255)
!13257 = !DILocation(line: 410, column: 6, scope: !13255)
!13258 = !DILocation(line: 410, column: 6, scope: !13238)
!13259 = !DILocation(line: 411, column: 13, scope: !13255)
!13260 = !DILocation(line: 411, column: 3, scope: !13255)
!13261 = !DILocation(line: 413, column: 11, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13238, file: !3, line: 413, column: 2)
!13263 = !DILocation(line: 413, column: 30, scope: !13262)
!13264 = !DILocation(line: 413, column: 9, scope: !13262)
!13265 = !DILocation(line: 413, column: 7, scope: !13262)
!13266 = !DILocation(line: 413, column: 35, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13262, file: !3, line: 413, column: 2)
!13268 = !DILocation(line: 413, column: 37, scope: !13267)
!13269 = !DILocation(line: 413, column: 2, scope: !13262)
!13270 = !DILocalVariable(name: "fe", scope: !13271, file: !3, line: 414, type: !7684)
!13271 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 413, column: 48)
!13272 = !DILocation(line: 414, column: 31, scope: !13271)
!13273 = !DILocation(line: 414, column: 37, scope: !13271)
!13274 = !DILocation(line: 414, column: 51, scope: !13271)
!13275 = !DILocalVariable(name: "pio_mask", scope: !13271, file: !3, line: 415, type: !994)
!13276 = !DILocation(line: 415, column: 17, scope: !13271)
!13277 = !DILocalVariable(name: "mwdma_mask", scope: !13271, file: !3, line: 415, type: !994)
!13278 = !DILocation(line: 415, column: 27, scope: !13271)
!13279 = !DILocalVariable(name: "udma_mask", scope: !13271, file: !3, line: 415, type: !994)
!13280 = !DILocation(line: 415, column: 39, scope: !13271)
!13281 = !DILocation(line: 417, column: 7, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13271, file: !3, line: 417, column: 7)
!13283 = !DILocation(line: 417, column: 11, scope: !13282)
!13284 = !DILocation(line: 417, column: 16, scope: !13282)
!13285 = !DILocation(line: 417, column: 22, scope: !13282)
!13286 = !DILocation(line: 417, column: 25, scope: !13282)
!13287 = !DILocation(line: 417, column: 29, scope: !13282)
!13288 = !DILocation(line: 417, column: 37, scope: !13282)
!13289 = !DILocation(line: 417, column: 42, scope: !13282)
!13290 = !DILocation(line: 417, column: 48, scope: !13282)
!13291 = !DILocation(line: 417, column: 52, scope: !13282)
!13292 = !DILocation(line: 417, column: 34, scope: !13282)
!13293 = !DILocation(line: 417, column: 7, scope: !13271)
!13294 = !DILocation(line: 418, column: 4, scope: !13282)
!13295 = !DILocation(line: 420, column: 7, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13271, file: !3, line: 420, column: 7)
!13297 = !DILocation(line: 420, column: 11, scope: !13296)
!13298 = !DILocation(line: 420, column: 18, scope: !13296)
!13299 = !DILocation(line: 420, column: 24, scope: !13296)
!13300 = !DILocation(line: 420, column: 27, scope: !13296)
!13301 = !DILocation(line: 420, column: 31, scope: !13296)
!13302 = !DILocation(line: 420, column: 41, scope: !13296)
!13303 = !DILocation(line: 420, column: 38, scope: !13296)
!13304 = !DILocation(line: 420, column: 47, scope: !13296)
!13305 = !DILocation(line: 421, column: 7, scope: !13296)
!13306 = !DILocation(line: 421, column: 11, scope: !13296)
!13307 = !DILocation(line: 421, column: 21, scope: !13296)
!13308 = !DILocation(line: 421, column: 18, scope: !13296)
!13309 = !DILocation(line: 420, column: 7, scope: !13271)
!13310 = !DILocation(line: 422, column: 4, scope: !13296)
!13311 = !DILocation(line: 424, column: 8, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13271, file: !3, line: 424, column: 7)
!13313 = !DILocation(line: 424, column: 12, scope: !13312)
!13314 = !DILocation(line: 424, column: 18, scope: !13312)
!13315 = !DILocation(line: 424, column: 7, scope: !13271)
!13316 = !DILocation(line: 425, column: 4, scope: !13312)
!13317 = !DILocation(line: 427, column: 23, scope: !13271)
!13318 = !DILocation(line: 427, column: 27, scope: !13271)
!13319 = !DILocation(line: 427, column: 33, scope: !13271)
!13320 = !DILocation(line: 427, column: 3, scope: !13271)
!13321 = !DILocation(line: 429, column: 7, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13271, file: !3, line: 429, column: 7)
!13323 = !DILocation(line: 429, column: 7, scope: !13271)
!13324 = !DILocation(line: 430, column: 21, scope: !13322)
!13325 = !DILocation(line: 430, column: 4, scope: !13322)
!13326 = !DILocation(line: 430, column: 9, scope: !13322)
!13327 = !DILocation(line: 430, column: 19, scope: !13322)
!13328 = !DILocation(line: 431, column: 12, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 431, column: 12)
!13330 = !DILocation(line: 431, column: 12, scope: !13322)
!13331 = !DILocation(line: 432, column: 4, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 431, column: 24)
!13333 = !DILocation(line: 432, column: 9, scope: !13332)
!13334 = !DILocation(line: 432, column: 19, scope: !13332)
!13335 = !DILocation(line: 433, column: 22, scope: !13332)
!13336 = !DILocation(line: 433, column: 4, scope: !13332)
!13337 = !DILocation(line: 433, column: 9, scope: !13332)
!13338 = !DILocation(line: 433, column: 20, scope: !13332)
!13339 = !DILocation(line: 434, column: 3, scope: !13332)
!13340 = !DILocation(line: 435, column: 4, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 434, column: 10)
!13342 = !DILocation(line: 435, column: 9, scope: !13341)
!13343 = !DILocation(line: 435, column: 19, scope: !13341)
!13344 = !DILocation(line: 436, column: 4, scope: !13341)
!13345 = !DILocation(line: 436, column: 9, scope: !13341)
!13346 = !DILocation(line: 436, column: 20, scope: !13341)
!13347 = !DILocation(line: 437, column: 20, scope: !13341)
!13348 = !DILocation(line: 437, column: 4, scope: !13341)
!13349 = !DILocation(line: 437, column: 9, scope: !13341)
!13350 = !DILocation(line: 437, column: 18, scope: !13341)
!13351 = !DILocation(line: 440, column: 3, scope: !13271)
!13352 = !DILocation(line: 442, column: 3, scope: !13271)
!13353 = !DILocation(line: 413, column: 44, scope: !13267)
!13354 = !DILocation(line: 413, column: 2, scope: !13267)
!13355 = distinct !{!13355, !13269, !13356}
!13356 = !DILocation(line: 443, column: 2, scope: !13262)
!13357 = !DILocation(line: 444, column: 1, scope: !13238)
!13358 = distinct !DISubprogram(name: "ata_dma_enabled", scope: !183, file: !183, line: 1859, type: !8230, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13359 = !DILocalVariable(name: "adev", arg: 1, scope: !13358, file: !183, line: 1859, type: !6374)
!13360 = !DILocation(line: 1859, column: 54, scope: !13358)
!13361 = !DILocation(line: 1861, column: 10, scope: !13358)
!13362 = !DILocation(line: 1861, column: 16, scope: !13358)
!13363 = !DILocation(line: 1861, column: 25, scope: !13358)
!13364 = !DILocation(line: 1861, column: 2, scope: !13358)
!13365 = distinct !DISubprogram(name: "ata_dev_set_mode", scope: !3, file: !3, line: 3194, type: !8230, scopeLine: 3195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13366 = !DILocalVariable(name: "dev", arg: 1, scope: !13365, file: !3, line: 3194, type: !6374)
!13367 = !DILocation(line: 3194, column: 48, scope: !13365)
!13368 = !DILocalVariable(name: "ap", scope: !13365, file: !3, line: 3196, type: !1005)
!13369 = !DILocation(line: 3196, column: 19, scope: !13365)
!13370 = !DILocation(line: 3196, column: 24, scope: !13365)
!13371 = !DILocation(line: 3196, column: 29, scope: !13365)
!13372 = !DILocation(line: 3196, column: 35, scope: !13365)
!13373 = !DILocalVariable(name: "ehc", scope: !13365, file: !3, line: 3197, type: !7300)
!13374 = !DILocation(line: 3197, column: 25, scope: !13365)
!13375 = !DILocation(line: 3197, column: 32, scope: !13365)
!13376 = !DILocation(line: 3197, column: 37, scope: !13365)
!13377 = !DILocation(line: 3197, column: 43, scope: !13365)
!13378 = !DILocalVariable(name: "nosetxfer", scope: !13365, file: !3, line: 3198, type: !13379)
!13379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!13380 = !DILocation(line: 3198, column: 13, scope: !13365)
!13381 = !DILocation(line: 3198, column: 25, scope: !13365)
!13382 = !DILocation(line: 3198, column: 30, scope: !13365)
!13383 = !DILocation(line: 3198, column: 38, scope: !13365)
!13384 = !DILocalVariable(name: "dev_err_whine", scope: !13365, file: !3, line: 3199, type: !1450)
!13385 = !DILocation(line: 3199, column: 14, scope: !13365)
!13386 = !DILocalVariable(name: "ign_dev_err", scope: !13365, file: !3, line: 3200, type: !223)
!13387 = !DILocation(line: 3200, column: 6, scope: !13365)
!13388 = !DILocalVariable(name: "err_mask", scope: !13365, file: !3, line: 3201, type: !7)
!13389 = !DILocation(line: 3201, column: 15, scope: !13365)
!13390 = !DILocalVariable(name: "rc", scope: !13365, file: !3, line: 3202, type: !223)
!13391 = !DILocation(line: 3202, column: 6, scope: !13365)
!13392 = !DILocation(line: 3204, column: 2, scope: !13365)
!13393 = !DILocation(line: 3204, column: 7, scope: !13365)
!13394 = !DILocation(line: 3204, column: 13, scope: !13365)
!13395 = !DILocation(line: 3205, column: 6, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3205, column: 6)
!13397 = !DILocation(line: 3205, column: 11, scope: !13396)
!13398 = !DILocation(line: 3205, column: 22, scope: !13396)
!13399 = !DILocation(line: 3205, column: 6, scope: !13365)
!13400 = !DILocation(line: 3206, column: 3, scope: !13396)
!13401 = !DILocation(line: 3206, column: 8, scope: !13396)
!13402 = !DILocation(line: 3206, column: 14, scope: !13396)
!13403 = !DILocation(line: 3208, column: 6, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3208, column: 6)
!13405 = !DILocation(line: 3208, column: 16, scope: !13404)
!13406 = !DILocation(line: 3208, column: 19, scope: !13404)
!13407 = !DILocation(line: 3208, column: 23, scope: !13404)
!13408 = !DILocation(line: 3208, column: 29, scope: !13404)
!13409 = !DILocation(line: 3208, column: 45, scope: !13404)
!13410 = !DILocation(line: 3208, column: 63, scope: !13404)
!13411 = !DILocation(line: 3208, column: 68, scope: !13404)
!13412 = !DILocation(line: 3208, column: 48, scope: !13404)
!13413 = !DILocation(line: 3208, column: 6, scope: !13365)
!13414 = !DILocation(line: 3209, column: 17, scope: !13404)
!13415 = !DILocation(line: 3209, column: 3, scope: !13404)
!13416 = !DILocation(line: 3211, column: 7, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !3, line: 3211, column: 7)
!13418 = distinct !DILexicalBlock(scope: !13404, file: !3, line: 3210, column: 7)
!13419 = !DILocation(line: 3211, column: 7, scope: !13418)
!13420 = !DILocation(line: 3212, column: 4, scope: !13417)
!13421 = !DILocation(line: 3215, column: 35, scope: !13418)
!13422 = !DILocation(line: 3215, column: 14, scope: !13418)
!13423 = !DILocation(line: 3215, column: 12, scope: !13418)
!13424 = !DILocation(line: 3218, column: 6, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3218, column: 6)
!13426 = !DILocation(line: 3218, column: 15, scope: !13425)
!13427 = !DILocation(line: 3218, column: 6, scope: !13365)
!13428 = !DILocation(line: 3219, column: 3, scope: !13425)
!13429 = !DILocation(line: 3222, column: 2, scope: !13365)
!13430 = !DILocation(line: 3222, column: 7, scope: !13365)
!13431 = !DILocation(line: 3222, column: 9, scope: !13365)
!13432 = !DILocation(line: 3222, column: 15, scope: !13365)
!13433 = !DILocation(line: 3223, column: 26, scope: !13365)
!13434 = !DILocation(line: 3223, column: 7, scope: !13365)
!13435 = !DILocation(line: 3223, column: 5, scope: !13365)
!13436 = !DILocation(line: 3224, column: 2, scope: !13365)
!13437 = !DILocation(line: 3224, column: 7, scope: !13365)
!13438 = !DILocation(line: 3224, column: 9, scope: !13365)
!13439 = !DILocation(line: 3224, column: 15, scope: !13365)
!13440 = !DILocation(line: 3225, column: 6, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3225, column: 6)
!13442 = !DILocation(line: 3225, column: 6, scope: !13365)
!13443 = !DILocation(line: 3226, column: 10, scope: !13441)
!13444 = !DILocation(line: 3226, column: 3, scope: !13441)
!13445 = !DILocation(line: 3228, column: 6, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3228, column: 6)
!13447 = !DILocation(line: 3228, column: 11, scope: !13446)
!13448 = !DILocation(line: 3228, column: 22, scope: !13446)
!13449 = !DILocation(line: 3228, column: 6, scope: !13365)
!13450 = !DILocation(line: 3230, column: 21, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 3230, column: 7)
!13452 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 3228, column: 40)
!13453 = !DILocation(line: 3230, column: 26, scope: !13451)
!13454 = !DILocation(line: 3230, column: 7, scope: !13451)
!13455 = !DILocation(line: 3230, column: 7, scope: !13452)
!13456 = !DILocation(line: 3231, column: 16, scope: !13451)
!13457 = !DILocation(line: 3231, column: 4, scope: !13451)
!13458 = !DILocation(line: 3234, column: 28, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 3234, column: 7)
!13460 = !DILocation(line: 3234, column: 33, scope: !13459)
!13461 = !DILocation(line: 3234, column: 7, scope: !13459)
!13462 = !DILocation(line: 3234, column: 37, scope: !13459)
!13463 = !DILocation(line: 3234, column: 42, scope: !13459)
!13464 = !DILocation(line: 3235, column: 6, scope: !13459)
!13465 = !DILocation(line: 3235, column: 11, scope: !13459)
!13466 = !DILocation(line: 3235, column: 20, scope: !13459)
!13467 = !DILocation(line: 3234, column: 7, scope: !13452)
!13468 = !DILocation(line: 3236, column: 16, scope: !13459)
!13469 = !DILocation(line: 3236, column: 4, scope: !13459)
!13470 = !DILocation(line: 3240, column: 8, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 3240, column: 7)
!13472 = !DILocation(line: 3240, column: 34, scope: !13471)
!13473 = !DILocation(line: 3240, column: 37, scope: !13471)
!13474 = !DILocation(line: 3240, column: 42, scope: !13471)
!13475 = !DILocation(line: 3240, column: 51, scope: !13471)
!13476 = !DILocation(line: 3240, column: 7, scope: !13452)
!13477 = !DILocation(line: 3241, column: 16, scope: !13471)
!13478 = !DILocation(line: 3241, column: 4, scope: !13471)
!13479 = !DILocation(line: 3242, column: 2, scope: !13452)
!13480 = !DILocation(line: 3245, column: 6, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3245, column: 6)
!13482 = !DILocation(line: 3245, column: 11, scope: !13481)
!13483 = !DILocation(line: 3245, column: 22, scope: !13481)
!13484 = !DILocation(line: 3245, column: 41, scope: !13481)
!13485 = !DILocation(line: 3246, column: 6, scope: !13481)
!13486 = !DILocation(line: 3246, column: 11, scope: !13481)
!13487 = !DILocation(line: 3246, column: 20, scope: !13481)
!13488 = !DILocation(line: 3246, column: 37, scope: !13481)
!13489 = !DILocation(line: 3247, column: 7, scope: !13481)
!13490 = !DILocation(line: 3247, column: 12, scope: !13481)
!13491 = !DILocation(line: 3247, column: 19, scope: !13481)
!13492 = !DILocation(line: 3247, column: 25, scope: !13481)
!13493 = !DILocation(line: 3245, column: 6, scope: !13365)
!13494 = !DILocation(line: 3248, column: 15, scope: !13481)
!13495 = !DILocation(line: 3248, column: 3, scope: !13481)
!13496 = !DILocation(line: 3251, column: 6, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3251, column: 6)
!13498 = !DILocation(line: 3251, column: 11, scope: !13497)
!13499 = !DILocation(line: 3251, column: 59, scope: !13497)
!13500 = !DILocation(line: 3251, column: 64, scope: !13497)
!13501 = !DILocation(line: 3251, column: 43, scope: !13497)
!13502 = !DILocation(line: 3251, column: 24, scope: !13497)
!13503 = !DILocation(line: 3251, column: 21, scope: !13497)
!13504 = !DILocation(line: 3251, column: 6, scope: !13365)
!13505 = !DILocation(line: 3252, column: 15, scope: !13497)
!13506 = !DILocation(line: 3252, column: 3, scope: !13497)
!13507 = !DILocation(line: 3254, column: 6, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3254, column: 6)
!13509 = !DILocation(line: 3254, column: 15, scope: !13508)
!13510 = !DILocation(line: 3254, column: 6, scope: !13365)
!13511 = !DILocation(line: 3255, column: 8, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 3255, column: 7)
!13513 = distinct !DILexicalBlock(scope: !13508, file: !3, line: 3254, column: 29)
!13514 = !DILocation(line: 3255, column: 7, scope: !13513)
!13515 = !DILocation(line: 3256, column: 4, scope: !13512)
!13516 = !DILocation(line: 3258, column: 18, scope: !13512)
!13517 = !DILocation(line: 3259, column: 2, scope: !13513)
!13518 = !DILocation(line: 3264, column: 8, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3264, column: 6)
!13520 = !DILocation(line: 3264, column: 13, scope: !13519)
!13521 = !DILocation(line: 3264, column: 15, scope: !13519)
!13522 = !DILocation(line: 3264, column: 21, scope: !13519)
!13523 = !DILocation(line: 3264, column: 38, scope: !13519)
!13524 = !DILocation(line: 3265, column: 6, scope: !13519)
!13525 = !DILocation(line: 3265, column: 11, scope: !13519)
!13526 = !DILocation(line: 3265, column: 13, scope: !13519)
!13527 = !DILocation(line: 3265, column: 19, scope: !13519)
!13528 = !DILocation(line: 3264, column: 6, scope: !13365)
!13529 = !DILocation(line: 3266, column: 3, scope: !13519)
!13530 = !DILocation(line: 3270, column: 2, scope: !13365)
!13531 = !DILabel(scope: !13365, name: "fail", file: !3, line: 3272)
!13532 = !DILocation(line: 3272, column: 2, scope: !13365)
!13533 = !DILocation(line: 3273, column: 2, scope: !13365)
!13534 = !DILocation(line: 3274, column: 2, scope: !13365)
!13535 = !DILocation(line: 3275, column: 1, scope: !13365)
!13536 = distinct !DISubprogram(name: "ata_wait_ready", scope: !3, file: !3, line: 3397, type: !13537, scopeLine: 3399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{!223, !6378, !994, !13539}
!13539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13540, size: 64)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!223, !6378}
!13542 = !DILocalVariable(name: "link", arg: 1, scope: !13536, file: !3, line: 3397, type: !6378)
!13543 = !DILocation(line: 3397, column: 37, scope: !13536)
!13544 = !DILocalVariable(name: "deadline", arg: 2, scope: !13536, file: !3, line: 3397, type: !994)
!13545 = !DILocation(line: 3397, column: 57, scope: !13536)
!13546 = !DILocalVariable(name: "check_ready", arg: 3, scope: !13536, file: !3, line: 3398, type: !13539)
!13547 = !DILocation(line: 3398, column: 12, scope: !13536)
!13548 = !DILocalVariable(name: "start", scope: !13536, file: !3, line: 3400, type: !994)
!13549 = !DILocation(line: 3400, column: 16, scope: !13536)
!13550 = !DILocation(line: 3400, column: 24, scope: !13536)
!13551 = !DILocalVariable(name: "nodev_deadline", scope: !13536, file: !3, line: 3401, type: !994)
!13552 = !DILocation(line: 3401, column: 16, scope: !13536)
!13553 = !DILocalVariable(name: "warned", scope: !13536, file: !3, line: 3402, type: !223)
!13554 = !DILocation(line: 3402, column: 6, scope: !13536)
!13555 = !DILocation(line: 3405, column: 6, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 3405, column: 6)
!13557 = !DILocation(line: 3405, column: 12, scope: !13556)
!13558 = !DILocation(line: 3405, column: 16, scope: !13556)
!13559 = !DILocation(line: 3405, column: 22, scope: !13556)
!13560 = !DILocation(line: 3405, column: 28, scope: !13556)
!13561 = !DILocation(line: 3405, column: 6, scope: !13536)
!13562 = !DILocation(line: 3406, column: 33, scope: !13556)
!13563 = !DILocation(line: 3406, column: 20, scope: !13556)
!13564 = !DILocation(line: 3406, column: 18, scope: !13556)
!13565 = !DILocation(line: 3406, column: 3, scope: !13556)
!13566 = !DILocation(line: 3408, column: 33, scope: !13556)
!13567 = !DILocation(line: 3408, column: 20, scope: !13556)
!13568 = !DILocation(line: 3408, column: 18, scope: !13556)
!13569 = !DILocalVariable(name: "__ret_warn_on", scope: !13570, file: !3, line: 3414, type: !223)
!13570 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 3414, column: 2)
!13571 = !DILocation(line: 3414, column: 2, scope: !13570)
!13572 = !DILocation(line: 3414, column: 2, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 3414, column: 2)
!13574 = !DILocation(line: 3414, column: 2, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 3414, column: 2)
!13576 = !DILocation(line: 3414, column: 2, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 3414, column: 2)
!13578 = !DILocation(line: 3414, column: 2, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 3414, column: 2)
!13580 = !{i32 -2139227601, i32 -2139227572, i32 -2139227526, i32 -2139227468, i32 -2139227414, i32 -2139227360, i32 -2139227305, i32 -2139227274}
!13581 = !DILocation(line: 3414, column: 2, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 3414, column: 2)
!13583 = !{i32 -2139226866, i32 -2139226859, i32 -2139226807, i32 -2139226776, i32 -2139226746}
!13584 = !DILocation(line: 3414, column: 2, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 3414, column: 2)
!13586 = !DILocation(line: 3416, column: 6, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 3416, column: 6)
!13588 = !DILocation(line: 3416, column: 6, scope: !13536)
!13589 = !DILocation(line: 3417, column: 20, scope: !13587)
!13590 = !DILocation(line: 3417, column: 18, scope: !13587)
!13591 = !DILocation(line: 3417, column: 3, scope: !13587)
!13592 = !DILocation(line: 3419, column: 2, scope: !13536)
!13593 = !DILocalVariable(name: "now", scope: !13594, file: !3, line: 3420, type: !994)
!13594 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 3419, column: 12)
!13595 = !DILocation(line: 3420, column: 17, scope: !13594)
!13596 = !DILocation(line: 3420, column: 23, scope: !13594)
!13597 = !DILocalVariable(name: "ready", scope: !13594, file: !3, line: 3421, type: !223)
!13598 = !DILocation(line: 3421, column: 7, scope: !13594)
!13599 = !DILocalVariable(name: "tmp", scope: !13594, file: !3, line: 3421, type: !223)
!13600 = !DILocation(line: 3421, column: 14, scope: !13594)
!13601 = !DILocation(line: 3423, column: 17, scope: !13594)
!13602 = !DILocation(line: 3423, column: 29, scope: !13594)
!13603 = !DILocation(line: 3423, column: 15, scope: !13594)
!13604 = !DILocation(line: 3423, column: 9, scope: !13594)
!13605 = !DILocation(line: 3424, column: 7, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3424, column: 7)
!13607 = !DILocation(line: 3424, column: 13, scope: !13606)
!13608 = !DILocation(line: 3424, column: 7, scope: !13594)
!13609 = !DILocation(line: 3425, column: 4, scope: !13606)
!13610 = !DILocation(line: 3438, column: 7, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3438, column: 7)
!13612 = !DILocation(line: 3438, column: 13, scope: !13611)
!13613 = !DILocation(line: 3438, column: 7, scope: !13594)
!13614 = !DILocation(line: 3439, column: 24, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13616, file: !3, line: 3439, column: 8)
!13616 = distinct !DILexicalBlock(scope: !13611, file: !3, line: 3438, column: 25)
!13617 = !DILocation(line: 3439, column: 8, scope: !13615)
!13618 = !DILocation(line: 3439, column: 8, scope: !13616)
!13619 = !DILocation(line: 3440, column: 11, scope: !13615)
!13620 = !DILocation(line: 3440, column: 5, scope: !13615)
!13621 = !DILocation(line: 3441, column: 14, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13615, file: !3, line: 3441, column: 13)
!13623 = !DILocation(line: 3441, column: 20, scope: !13622)
!13624 = !DILocation(line: 3441, column: 24, scope: !13622)
!13625 = !DILocation(line: 3441, column: 30, scope: !13622)
!13626 = !DILocation(line: 3441, column: 47, scope: !13622)
!13627 = !DILocation(line: 3442, column: 24, scope: !13622)
!13628 = !DILocation(line: 3442, column: 7, scope: !13622)
!13629 = !DILocation(line: 3442, column: 30, scope: !13622)
!13630 = !DILocation(line: 3443, column: 6, scope: !13622)
!13631 = !DILocation(line: 3441, column: 13, scope: !13615)
!13632 = !DILocation(line: 3444, column: 11, scope: !13622)
!13633 = !DILocation(line: 3444, column: 5, scope: !13622)
!13634 = !DILocation(line: 3445, column: 3, scope: !13616)
!13635 = !DILocation(line: 3447, column: 7, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3447, column: 7)
!13637 = !DILocation(line: 3447, column: 7, scope: !13594)
!13638 = !DILocation(line: 3448, column: 11, scope: !13636)
!13639 = !DILocation(line: 3448, column: 4, scope: !13636)
!13640 = !DILocation(line: 3449, column: 7, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3449, column: 7)
!13642 = !DILocation(line: 3449, column: 7, scope: !13594)
!13643 = !DILocation(line: 3450, column: 4, scope: !13641)
!13644 = !DILocation(line: 3452, column: 8, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3452, column: 7)
!13646 = !DILocation(line: 3452, column: 15, scope: !13645)
!13647 = !DILocation(line: 3452, column: 18, scope: !13645)
!13648 = !DILocation(line: 3452, column: 50, scope: !13645)
!13649 = !DILocation(line: 3453, column: 8, scope: !13645)
!13650 = !DILocation(line: 3453, column: 19, scope: !13645)
!13651 = !DILocation(line: 3453, column: 17, scope: !13645)
!13652 = !DILocation(line: 3453, column: 23, scope: !13645)
!13653 = !DILocation(line: 3452, column: 7, scope: !13594)
!13654 = !DILocation(line: 3454, column: 4, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13645, file: !3, line: 3453, column: 34)
!13656 = !DILocation(line: 3457, column: 11, scope: !13655)
!13657 = !DILocation(line: 3458, column: 3, scope: !13655)
!13658 = !DILocation(line: 3460, column: 14, scope: !13594)
!13659 = !DILocation(line: 3460, column: 20, scope: !13594)
!13660 = !DILocation(line: 3460, column: 3, scope: !13594)
!13661 = distinct !{!13661, !13592, !13662}
!13662 = !DILocation(line: 3461, column: 2, scope: !13536)
!13663 = !DILocation(line: 3462, column: 1, scope: !13536)
!13664 = distinct !DISubprogram(name: "ata_deadline", scope: !183, file: !183, line: 1835, type: !13665, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13665 = !DISubroutineType(types: !13666)
!13666 = !{!994, !994, !994}
!13667 = !DILocation(line: 363, column: 74, scope: !8997, inlinedAt: !13668)
!13668 = distinct !DILocation(line: 1838, column: 24, scope: !13664)
!13669 = !DILocalVariable(name: "from_jiffies", arg: 1, scope: !13664, file: !183, line: 1835, type: !994)
!13670 = !DILocation(line: 1835, column: 56, scope: !13664)
!13671 = !DILocalVariable(name: "timeout_msecs", arg: 2, scope: !13664, file: !183, line: 1836, type: !994)
!13672 = !DILocation(line: 1836, column: 21, scope: !13664)
!13673 = !DILocation(line: 1838, column: 9, scope: !13664)
!13674 = !DILocation(line: 1838, column: 41, scope: !13664)
!13675 = !DILocation(line: 365, column: 27, scope: !9268, inlinedAt: !13668)
!13676 = !DILocation(line: 365, column: 6, scope: !9268, inlinedAt: !13668)
!13677 = !DILocation(line: 365, column: 6, scope: !8997, inlinedAt: !13668)
!13678 = !DILocation(line: 366, column: 12, scope: !9272, inlinedAt: !13668)
!13679 = !DILocation(line: 366, column: 14, scope: !9272, inlinedAt: !13668)
!13680 = !DILocation(line: 366, column: 7, scope: !9273, inlinedAt: !13668)
!13681 = !DILocation(line: 367, column: 4, scope: !9272, inlinedAt: !13668)
!13682 = !DILocation(line: 368, column: 28, scope: !9273, inlinedAt: !13668)
!13683 = !DILocation(line: 368, column: 10, scope: !9273, inlinedAt: !13668)
!13684 = !DILocation(line: 368, column: 3, scope: !9273, inlinedAt: !13668)
!13685 = !DILocation(line: 370, column: 29, scope: !9281, inlinedAt: !13668)
!13686 = !DILocation(line: 370, column: 10, scope: !9281, inlinedAt: !13668)
!13687 = !DILocation(line: 370, column: 3, scope: !9281, inlinedAt: !13668)
!13688 = !DILocation(line: 372, column: 1, scope: !8997, inlinedAt: !13668)
!13689 = !DILocation(line: 1838, column: 22, scope: !13664)
!13690 = !DILocation(line: 1838, column: 2, scope: !13664)
!13691 = distinct !DISubprogram(name: "ata_link_online", scope: !3, file: !3, line: 4889, type: !13692, scopeLine: 4890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!1495, !6378}
!13694 = !DILocalVariable(name: "link", arg: 1, scope: !13691, file: !3, line: 4889, type: !6378)
!13695 = !DILocation(line: 4889, column: 39, scope: !13691)
!13696 = !DILocalVariable(name: "slave", scope: !13691, file: !3, line: 4891, type: !6378)
!13697 = !DILocation(line: 4891, column: 19, scope: !13691)
!13698 = !DILocation(line: 4891, column: 27, scope: !13691)
!13699 = !DILocation(line: 4891, column: 33, scope: !13691)
!13700 = !DILocation(line: 4891, column: 37, scope: !13691)
!13701 = !DILocalVariable(name: "__ret_warn_on", scope: !13702, file: !3, line: 4893, type: !223)
!13702 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 4893, column: 2)
!13703 = !DILocation(line: 4893, column: 2, scope: !13702)
!13704 = !DILocation(line: 4893, column: 2, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13702, file: !3, line: 4893, column: 2)
!13706 = !DILocation(line: 4893, column: 2, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13705, file: !3, line: 4893, column: 2)
!13708 = !DILocation(line: 4893, column: 2, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 4893, column: 2)
!13710 = !DILocation(line: 4893, column: 2, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 4893, column: 2)
!13712 = !{i32 -2139207592, i32 -2139207563, i32 -2139207517, i32 -2139207459, i32 -2139207405, i32 -2139207351, i32 -2139207296, i32 -2139207265}
!13713 = !DILocation(line: 4893, column: 2, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 4893, column: 2)
!13715 = !{i32 -2139206857, i32 -2139206850, i32 -2139206798, i32 -2139206767, i32 -2139206737}
!13716 = !DILocation(line: 4893, column: 2, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 4893, column: 2)
!13718 = !DILocation(line: 4895, column: 30, scope: !13691)
!13719 = !DILocation(line: 4895, column: 9, scope: !13691)
!13720 = !DILocation(line: 4895, column: 36, scope: !13691)
!13721 = !DILocation(line: 4896, column: 4, scope: !13691)
!13722 = !DILocation(line: 4896, column: 10, scope: !13691)
!13723 = !DILocation(line: 4896, column: 34, scope: !13691)
!13724 = !DILocation(line: 4896, column: 13, scope: !13691)
!13725 = !DILocation(line: 0, scope: !13691)
!13726 = !DILocation(line: 4895, column: 2, scope: !13691)
!13727 = distinct !DISubprogram(name: "ata_link_offline", scope: !3, file: !3, line: 4916, type: !13692, scopeLine: 4917, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13728 = !DILocalVariable(name: "link", arg: 1, scope: !13727, file: !3, line: 4916, type: !6378)
!13729 = !DILocation(line: 4916, column: 40, scope: !13727)
!13730 = !DILocalVariable(name: "slave", scope: !13727, file: !3, line: 4918, type: !6378)
!13731 = !DILocation(line: 4918, column: 19, scope: !13727)
!13732 = !DILocation(line: 4918, column: 27, scope: !13727)
!13733 = !DILocation(line: 4918, column: 33, scope: !13727)
!13734 = !DILocation(line: 4918, column: 37, scope: !13727)
!13735 = !DILocalVariable(name: "__ret_warn_on", scope: !13736, file: !3, line: 4920, type: !223)
!13736 = distinct !DILexicalBlock(scope: !13727, file: !3, line: 4920, column: 2)
!13737 = !DILocation(line: 4920, column: 2, scope: !13736)
!13738 = !DILocation(line: 4920, column: 2, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13736, file: !3, line: 4920, column: 2)
!13740 = !DILocation(line: 4920, column: 2, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13739, file: !3, line: 4920, column: 2)
!13742 = !DILocation(line: 4920, column: 2, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13741, file: !3, line: 4920, column: 2)
!13744 = !DILocation(line: 4920, column: 2, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13741, file: !3, line: 4920, column: 2)
!13746 = !{i32 -2139206055, i32 -2139206026, i32 -2139205980, i32 -2139205922, i32 -2139205868, i32 -2139205814, i32 -2139205759, i32 -2139205728}
!13747 = !DILocation(line: 4920, column: 2, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13741, file: !3, line: 4920, column: 2)
!13749 = !{i32 -2139205320, i32 -2139205313, i32 -2139205261, i32 -2139205230, i32 -2139205200}
!13750 = !DILocation(line: 4920, column: 2, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13741, file: !3, line: 4920, column: 2)
!13752 = !DILocation(line: 4922, column: 31, scope: !13727)
!13753 = !DILocation(line: 4922, column: 9, scope: !13727)
!13754 = !DILocation(line: 4922, column: 37, scope: !13727)
!13755 = !DILocation(line: 4923, column: 5, scope: !13727)
!13756 = !DILocation(line: 4923, column: 11, scope: !13727)
!13757 = !DILocation(line: 4923, column: 36, scope: !13727)
!13758 = !DILocation(line: 4923, column: 14, scope: !13727)
!13759 = !DILocation(line: 0, scope: !13727)
!13760 = !DILocation(line: 4922, column: 2, scope: !13727)
!13761 = distinct !DISubprogram(name: "ata_msleep", scope: !3, file: !3, line: 6338, type: !6696, scopeLine: 6339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13762 = !DILocalVariable(name: "pscr_ret__", scope: !13763, file: !13764, line: 15, type: !1056)
!13763 = distinct !DILexicalBlock(scope: !13765, file: !13764, line: 15, column: 9)
!13764 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!13765 = distinct !DISubprogram(name: "get_current", scope: !13764, file: !13764, line: 13, type: !13766, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13766 = !DISubroutineType(types: !13767)
!13767 = !{!1056}
!13768 = !DILocation(line: 15, column: 9, scope: !13763, inlinedAt: !13769)
!13769 = distinct !DILocation(line: 6340, column: 45, scope: !13761)
!13770 = !DILocalVariable(name: "__vpp_verify", scope: !13771, file: !13764, line: 15, type: !2793)
!13771 = distinct !DILexicalBlock(scope: !13763, file: !13764, line: 15, column: 9)
!13772 = !DILocation(line: 15, column: 9, scope: !13771, inlinedAt: !13769)
!13773 = !DILocalVariable(name: "pfo_val__", scope: !13774, file: !13764, line: 15, type: !984)
!13774 = distinct !DILexicalBlock(scope: !13763, file: !13764, line: 15, column: 9)
!13775 = !DILocation(line: 15, column: 9, scope: !13774, inlinedAt: !13769)
!13776 = !DILocalVariable(name: "ap", arg: 1, scope: !13761, file: !3, line: 6338, type: !1005)
!13777 = !DILocation(line: 6338, column: 34, scope: !13761)
!13778 = !DILocalVariable(name: "msecs", arg: 2, scope: !13761, file: !3, line: 6338, type: !7)
!13779 = !DILocation(line: 6338, column: 51, scope: !13761)
!13780 = !DILocalVariable(name: "owns_eh", scope: !13761, file: !3, line: 6340, type: !1495)
!13781 = !DILocation(line: 6340, column: 7, scope: !13761)
!13782 = !DILocation(line: 6340, column: 17, scope: !13761)
!13783 = !DILocation(line: 6340, column: 20, scope: !13761)
!13784 = !DILocation(line: 6340, column: 23, scope: !13761)
!13785 = !DILocation(line: 6340, column: 27, scope: !13761)
!13786 = !DILocation(line: 6340, column: 33, scope: !13761)
!13787 = !{i32 -2146063679}
!13788 = !DILocation(line: 6340, column: 42, scope: !13761)
!13789 = !DILocation(line: 0, scope: !13761)
!13790 = !DILocation(line: 6342, column: 6, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13761, file: !3, line: 6342, column: 6)
!13792 = !DILocation(line: 6342, column: 6, scope: !13761)
!13793 = !DILocation(line: 6343, column: 18, scope: !13791)
!13794 = !DILocation(line: 6343, column: 3, scope: !13791)
!13795 = !DILocation(line: 6345, column: 6, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13761, file: !3, line: 6345, column: 6)
!13797 = !DILocation(line: 6345, column: 12, scope: !13796)
!13798 = !DILocation(line: 6345, column: 6, scope: !13761)
!13799 = !DILocalVariable(name: "usecs", scope: !13800, file: !3, line: 6346, type: !994)
!13800 = distinct !DILexicalBlock(scope: !13796, file: !3, line: 6345, column: 18)
!13801 = !DILocation(line: 6346, column: 17, scope: !13800)
!13802 = !DILocation(line: 6346, column: 25, scope: !13800)
!13803 = !DILocation(line: 6346, column: 31, scope: !13800)
!13804 = !DILocation(line: 6347, column: 16, scope: !13800)
!13805 = !DILocation(line: 6347, column: 23, scope: !13800)
!13806 = !DILocation(line: 6347, column: 29, scope: !13800)
!13807 = !DILocation(line: 6347, column: 3, scope: !13800)
!13808 = !DILocation(line: 6348, column: 2, scope: !13800)
!13809 = !DILocation(line: 6349, column: 10, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13796, file: !3, line: 6348, column: 9)
!13811 = !DILocation(line: 6349, column: 3, scope: !13810)
!13812 = !DILocation(line: 6352, column: 6, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13761, file: !3, line: 6352, column: 6)
!13814 = !DILocation(line: 6352, column: 6, scope: !13761)
!13815 = !DILocation(line: 6353, column: 18, scope: !13813)
!13816 = !DILocation(line: 6353, column: 3, scope: !13813)
!13817 = !DILocation(line: 6354, column: 1, scope: !13761)
!13818 = distinct !DISubprogram(name: "ata_wait_after_reset", scope: !3, file: !3, line: 3478, type: !13537, scopeLine: 3480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13819 = !DILocalVariable(name: "link", arg: 1, scope: !13818, file: !3, line: 3478, type: !6378)
!13820 = !DILocation(line: 3478, column: 43, scope: !13818)
!13821 = !DILocalVariable(name: "deadline", arg: 2, scope: !13818, file: !3, line: 3478, type: !994)
!13822 = !DILocation(line: 3478, column: 63, scope: !13818)
!13823 = !DILocalVariable(name: "check_ready", arg: 3, scope: !13818, file: !3, line: 3479, type: !13539)
!13824 = !DILocation(line: 3479, column: 11, scope: !13818)
!13825 = !DILocation(line: 3481, column: 13, scope: !13818)
!13826 = !DILocation(line: 3481, column: 19, scope: !13818)
!13827 = !DILocation(line: 3481, column: 2, scope: !13818)
!13828 = !DILocation(line: 3483, column: 24, scope: !13818)
!13829 = !DILocation(line: 3483, column: 30, scope: !13818)
!13830 = !DILocation(line: 3483, column: 40, scope: !13818)
!13831 = !DILocation(line: 3483, column: 9, scope: !13818)
!13832 = !DILocation(line: 3483, column: 2, scope: !13818)
!13833 = distinct !DISubprogram(name: "sata_ehc_deb_timing", scope: !183, file: !183, line: 1175, type: !13834, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13834 = !DISubroutineType(types: !13835)
!13835 = !{!7305, !7300}
!13836 = !DILocalVariable(name: "ehc", arg: 1, scope: !13833, file: !183, line: 1175, type: !7300)
!13837 = !DILocation(line: 1175, column: 44, scope: !13833)
!13838 = !DILocation(line: 1177, column: 6, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13833, file: !183, line: 1177, column: 6)
!13840 = !DILocation(line: 1177, column: 11, scope: !13839)
!13841 = !DILocation(line: 1177, column: 13, scope: !13839)
!13842 = !DILocation(line: 1177, column: 19, scope: !13839)
!13843 = !DILocation(line: 1177, column: 6, scope: !13833)
!13844 = !DILocation(line: 1178, column: 3, scope: !13839)
!13845 = !DILocation(line: 1180, column: 3, scope: !13839)
!13846 = !DILocation(line: 1181, column: 1, scope: !13833)
!13847 = distinct !DISubprogram(name: "ata_phys_link_offline", scope: !3, file: !3, line: 4863, type: !13692, scopeLine: 4864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13848 = !DILocalVariable(name: "link", arg: 1, scope: !13847, file: !3, line: 4863, type: !6378)
!13849 = !DILocation(line: 4863, column: 45, scope: !13847)
!13850 = !DILocalVariable(name: "sstatus", scope: !13847, file: !3, line: 4865, type: !989)
!13851 = !DILocation(line: 4865, column: 6, scope: !13847)
!13852 = !DILocation(line: 4867, column: 20, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13847, file: !3, line: 4867, column: 6)
!13854 = !DILocation(line: 4867, column: 6, scope: !13853)
!13855 = !DILocation(line: 4867, column: 48, scope: !13853)
!13856 = !DILocation(line: 4867, column: 53, scope: !13853)
!13857 = !DILocation(line: 4868, column: 26, scope: !13853)
!13858 = !DILocation(line: 4868, column: 7, scope: !13853)
!13859 = !DILocation(line: 4867, column: 6, scope: !13847)
!13860 = !DILocation(line: 4869, column: 3, scope: !13853)
!13861 = !DILocation(line: 4870, column: 2, scope: !13847)
!13862 = !DILocation(line: 4871, column: 1, scope: !13847)
!13863 = distinct !DISubprogram(name: "sata_print_link_status", scope: !3, file: !3, line: 2936, type: !13864, scopeLine: 2937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13864 = !DISubroutineType(types: !13865)
!13865 = !{null, !6378}
!13866 = !DILocalVariable(name: "link", arg: 1, scope: !13863, file: !3, line: 2936, type: !6378)
!13867 = !DILocation(line: 2936, column: 53, scope: !13863)
!13868 = !DILocalVariable(name: "sstatus", scope: !13863, file: !3, line: 2938, type: !989)
!13869 = !DILocation(line: 2938, column: 6, scope: !13863)
!13870 = !DILocalVariable(name: "scontrol", scope: !13863, file: !3, line: 2938, type: !989)
!13871 = !DILocation(line: 2938, column: 15, scope: !13863)
!13872 = !DILocalVariable(name: "tmp", scope: !13863, file: !3, line: 2938, type: !989)
!13873 = !DILocation(line: 2938, column: 25, scope: !13863)
!13874 = !DILocation(line: 2940, column: 20, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 2940, column: 6)
!13876 = !DILocation(line: 2940, column: 6, scope: !13875)
!13877 = !DILocation(line: 2940, column: 6, scope: !13863)
!13878 = !DILocation(line: 2941, column: 3, scope: !13875)
!13879 = !DILocation(line: 2942, column: 16, scope: !13863)
!13880 = !DILocation(line: 2942, column: 2, scope: !13863)
!13881 = !DILocation(line: 2944, column: 27, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 2944, column: 6)
!13883 = !DILocation(line: 2944, column: 6, scope: !13882)
!13884 = !DILocation(line: 2944, column: 6, scope: !13863)
!13885 = !DILocation(line: 2945, column: 10, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13882, file: !3, line: 2944, column: 34)
!13887 = !DILocation(line: 2945, column: 18, scope: !13886)
!13888 = !DILocation(line: 2945, column: 24, scope: !13886)
!13889 = !DILocation(line: 2945, column: 7, scope: !13886)
!13890 = !DILocation(line: 2946, column: 3, scope: !13886)
!13891 = !DILocation(line: 2948, column: 2, scope: !13886)
!13892 = !DILocation(line: 2949, column: 3, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13882, file: !3, line: 2948, column: 9)
!13894 = !DILocation(line: 2952, column: 1, scope: !13863)
!13895 = distinct !DISubprogram(name: "ata_dev_reread_id", scope: !3, file: !3, line: 3652, type: !12585, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13896 = !DILocalVariable(name: "dev", arg: 1, scope: !13895, file: !3, line: 3652, type: !6374)
!13897 = !DILocation(line: 3652, column: 42, scope: !13895)
!13898 = !DILocalVariable(name: "readid_flags", arg: 2, scope: !13895, file: !3, line: 3652, type: !7)
!13899 = !DILocation(line: 3652, column: 60, scope: !13895)
!13900 = !DILocalVariable(name: "class", scope: !13895, file: !3, line: 3654, type: !7)
!13901 = !DILocation(line: 3654, column: 15, scope: !13895)
!13902 = !DILocation(line: 3654, column: 23, scope: !13895)
!13903 = !DILocation(line: 3654, column: 28, scope: !13895)
!13904 = !DILocalVariable(name: "id", scope: !13895, file: !3, line: 3655, type: !6615)
!13905 = !DILocation(line: 3655, column: 7, scope: !13895)
!13906 = !DILocation(line: 3655, column: 20, scope: !13895)
!13907 = !DILocation(line: 3655, column: 25, scope: !13895)
!13908 = !DILocation(line: 3655, column: 31, scope: !13895)
!13909 = !DILocation(line: 3655, column: 35, scope: !13895)
!13910 = !DILocation(line: 3655, column: 12, scope: !13895)
!13911 = !DILocalVariable(name: "rc", scope: !13895, file: !3, line: 3656, type: !223)
!13912 = !DILocation(line: 3656, column: 6, scope: !13895)
!13913 = !DILocation(line: 3659, column: 23, scope: !13895)
!13914 = !DILocation(line: 3659, column: 36, scope: !13895)
!13915 = !DILocation(line: 3659, column: 50, scope: !13895)
!13916 = !DILocation(line: 3659, column: 7, scope: !13895)
!13917 = !DILocation(line: 3659, column: 5, scope: !13895)
!13918 = !DILocation(line: 3660, column: 6, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 3660, column: 6)
!13920 = !DILocation(line: 3660, column: 6, scope: !13895)
!13921 = !DILocation(line: 3661, column: 10, scope: !13919)
!13922 = !DILocation(line: 3661, column: 3, scope: !13919)
!13923 = !DILocation(line: 3664, column: 27, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 3664, column: 6)
!13925 = !DILocation(line: 3664, column: 32, scope: !13924)
!13926 = !DILocation(line: 3664, column: 39, scope: !13924)
!13927 = !DILocation(line: 3664, column: 7, scope: !13924)
!13928 = !DILocation(line: 3664, column: 6, scope: !13895)
!13929 = !DILocation(line: 3665, column: 3, scope: !13924)
!13930 = !DILocation(line: 3667, column: 9, scope: !13895)
!13931 = !DILocation(line: 3667, column: 14, scope: !13895)
!13932 = !DILocation(line: 3667, column: 2, scope: !13895)
!13933 = !DILocation(line: 3667, column: 18, scope: !13895)
!13934 = !DILocation(line: 3668, column: 2, scope: !13895)
!13935 = !DILocation(line: 3669, column: 1, scope: !13895)
!13936 = distinct !DISubprogram(name: "ata_dev_same_device", scope: !3, file: !3, line: 3605, type: !13937, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13937 = !DISubroutineType(types: !13938)
!13938 = !{!223, !6374, !7, !8685}
!13939 = !DILocalVariable(name: "dev", arg: 1, scope: !13936, file: !3, line: 3605, type: !6374)
!13940 = !DILocation(line: 3605, column: 51, scope: !13936)
!13941 = !DILocalVariable(name: "new_class", arg: 2, scope: !13936, file: !3, line: 3605, type: !7)
!13942 = !DILocation(line: 3605, column: 69, scope: !13936)
!13943 = !DILocalVariable(name: "new_id", arg: 3, scope: !13936, file: !3, line: 3606, type: !8685)
!13944 = !DILocation(line: 3606, column: 22, scope: !13936)
!13945 = !DILocalVariable(name: "old_id", scope: !13936, file: !3, line: 3608, type: !8685)
!13946 = !DILocation(line: 3608, column: 13, scope: !13936)
!13947 = !DILocation(line: 3608, column: 22, scope: !13936)
!13948 = !DILocation(line: 3608, column: 27, scope: !13936)
!13949 = !DILocalVariable(name: "model", scope: !13936, file: !3, line: 3609, type: !13950)
!13950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 656, elements: !13951)
!13951 = !{!2044, !10659}
!13952 = !DILocation(line: 3609, column: 16, scope: !13936)
!13953 = !DILocalVariable(name: "serial", scope: !13936, file: !3, line: 3610, type: !13954)
!13954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 336, elements: !13955)
!13955 = !{!2044, !7189}
!13956 = !DILocation(line: 3610, column: 16, scope: !13936)
!13957 = !DILocation(line: 3612, column: 6, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13936, file: !3, line: 3612, column: 6)
!13959 = !DILocation(line: 3612, column: 11, scope: !13958)
!13960 = !DILocation(line: 3612, column: 20, scope: !13958)
!13961 = !DILocation(line: 3612, column: 17, scope: !13958)
!13962 = !DILocation(line: 3612, column: 6, scope: !13936)
!13963 = !DILocation(line: 3613, column: 3, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13958, file: !3, line: 3612, column: 31)
!13965 = !DILocation(line: 3615, column: 3, scope: !13964)
!13966 = !DILocation(line: 3618, column: 18, scope: !13936)
!13967 = !DILocation(line: 3618, column: 26, scope: !13936)
!13968 = !DILocation(line: 3618, column: 2, scope: !13936)
!13969 = !DILocation(line: 3619, column: 18, scope: !13936)
!13970 = !DILocation(line: 3619, column: 26, scope: !13936)
!13971 = !DILocation(line: 3619, column: 2, scope: !13936)
!13972 = !DILocation(line: 3620, column: 18, scope: !13936)
!13973 = !DILocation(line: 3620, column: 26, scope: !13936)
!13974 = !DILocation(line: 3620, column: 2, scope: !13936)
!13975 = !DILocation(line: 3621, column: 18, scope: !13936)
!13976 = !DILocation(line: 3621, column: 26, scope: !13936)
!13977 = !DILocation(line: 3621, column: 2, scope: !13936)
!13978 = !DILocation(line: 3623, column: 13, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13936, file: !3, line: 3623, column: 6)
!13980 = !DILocation(line: 3623, column: 23, scope: !13979)
!13981 = !DILocation(line: 3623, column: 6, scope: !13979)
!13982 = !DILocation(line: 3623, column: 6, scope: !13936)
!13983 = !DILocation(line: 3624, column: 3, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13979, file: !3, line: 3623, column: 34)
!13985 = !DILocation(line: 3626, column: 3, scope: !13984)
!13986 = !DILocation(line: 3629, column: 13, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13936, file: !3, line: 3629, column: 6)
!13988 = !DILocation(line: 3629, column: 24, scope: !13987)
!13989 = !DILocation(line: 3629, column: 6, scope: !13987)
!13990 = !DILocation(line: 3629, column: 6, scope: !13936)
!13991 = !DILocation(line: 3630, column: 3, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13987, file: !3, line: 3629, column: 36)
!13993 = !DILocation(line: 3632, column: 3, scope: !13992)
!13994 = !DILocation(line: 3635, column: 2, scope: !13936)
!13995 = !DILocation(line: 3636, column: 1, scope: !13936)
!13996 = distinct !DISubprogram(name: "ata_dev_revalidate", scope: !3, file: !3, line: 3686, type: !13997, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{!223, !6374, !7, !7}
!13999 = !DILocalVariable(name: "dev", arg: 1, scope: !13996, file: !3, line: 3686, type: !6374)
!14000 = !DILocation(line: 3686, column: 43, scope: !13996)
!14001 = !DILocalVariable(name: "new_class", arg: 2, scope: !13996, file: !3, line: 3686, type: !7)
!14002 = !DILocation(line: 3686, column: 61, scope: !13996)
!14003 = !DILocalVariable(name: "readid_flags", arg: 3, scope: !13996, file: !3, line: 3687, type: !7)
!14004 = !DILocation(line: 3687, column: 23, scope: !13996)
!14005 = !DILocalVariable(name: "n_sectors", scope: !13996, file: !3, line: 3689, type: !984)
!14006 = !DILocation(line: 3689, column: 6, scope: !13996)
!14007 = !DILocation(line: 3689, column: 18, scope: !13996)
!14008 = !DILocation(line: 3689, column: 23, scope: !13996)
!14009 = !DILocalVariable(name: "n_native_sectors", scope: !13996, file: !3, line: 3690, type: !984)
!14010 = !DILocation(line: 3690, column: 6, scope: !13996)
!14011 = !DILocation(line: 3690, column: 25, scope: !13996)
!14012 = !DILocation(line: 3690, column: 30, scope: !13996)
!14013 = !DILocalVariable(name: "rc", scope: !13996, file: !3, line: 3691, type: !223)
!14014 = !DILocation(line: 3691, column: 6, scope: !13996)
!14015 = !DILocation(line: 3693, column: 23, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 3693, column: 6)
!14017 = !DILocation(line: 3693, column: 7, scope: !14016)
!14018 = !DILocation(line: 3693, column: 6, scope: !13996)
!14019 = !DILocation(line: 3694, column: 3, scope: !14016)
!14020 = !DILocation(line: 3697, column: 24, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 3697, column: 6)
!14022 = !DILocation(line: 3697, column: 6, scope: !14021)
!14023 = !DILocation(line: 3697, column: 35, scope: !14021)
!14024 = !DILocation(line: 3698, column: 6, scope: !14021)
!14025 = !DILocation(line: 3698, column: 16, scope: !14021)
!14026 = !DILocation(line: 3698, column: 31, scope: !14021)
!14027 = !DILocation(line: 3699, column: 6, scope: !14021)
!14028 = !DILocation(line: 3699, column: 16, scope: !14021)
!14029 = !DILocation(line: 3699, column: 33, scope: !14021)
!14030 = !DILocation(line: 3700, column: 6, scope: !14021)
!14031 = !DILocation(line: 3700, column: 16, scope: !14021)
!14032 = !DILocation(line: 3700, column: 31, scope: !14021)
!14033 = !DILocation(line: 3701, column: 6, scope: !14021)
!14034 = !DILocation(line: 3701, column: 16, scope: !14021)
!14035 = !DILocation(line: 3697, column: 6, scope: !13996)
!14036 = !DILocation(line: 3702, column: 3, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14021, file: !3, line: 3701, column: 33)
!14038 = !DILocation(line: 3704, column: 6, scope: !14037)
!14039 = !DILocation(line: 3705, column: 3, scope: !14037)
!14040 = !DILocation(line: 3709, column: 25, scope: !13996)
!14041 = !DILocation(line: 3709, column: 30, scope: !13996)
!14042 = !DILocation(line: 3709, column: 7, scope: !13996)
!14043 = !DILocation(line: 3709, column: 5, scope: !13996)
!14044 = !DILocation(line: 3710, column: 6, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 3710, column: 6)
!14046 = !DILocation(line: 3710, column: 6, scope: !13996)
!14047 = !DILocation(line: 3711, column: 3, scope: !14045)
!14048 = !DILocation(line: 3714, column: 25, scope: !13996)
!14049 = !DILocation(line: 3714, column: 7, scope: !13996)
!14050 = !DILocation(line: 3714, column: 5, scope: !13996)
!14051 = !DILocation(line: 3715, column: 6, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 3715, column: 6)
!14053 = !DILocation(line: 3715, column: 6, scope: !13996)
!14054 = !DILocation(line: 3716, column: 3, scope: !14052)
!14055 = !DILocation(line: 3719, column: 6, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 3719, column: 6)
!14057 = !DILocation(line: 3719, column: 11, scope: !14056)
!14058 = !DILocation(line: 3719, column: 17, scope: !14056)
!14059 = !DILocation(line: 3719, column: 32, scope: !14056)
!14060 = !DILocation(line: 3719, column: 36, scope: !14056)
!14061 = !DILocation(line: 3719, column: 46, scope: !14056)
!14062 = !DILocation(line: 3720, column: 6, scope: !14056)
!14063 = !DILocation(line: 3720, column: 11, scope: !14056)
!14064 = !DILocation(line: 3720, column: 24, scope: !14056)
!14065 = !DILocation(line: 3720, column: 21, scope: !14056)
!14066 = !DILocation(line: 3719, column: 6, scope: !13996)
!14067 = !DILocation(line: 3721, column: 3, scope: !14056)
!14068 = !DILocation(line: 3724, column: 2, scope: !13996)
!14069 = !DILocation(line: 3733, column: 6, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 3733, column: 6)
!14071 = !DILocation(line: 3733, column: 11, scope: !14070)
!14072 = !DILocation(line: 3733, column: 31, scope: !14070)
!14073 = !DILocation(line: 3733, column: 28, scope: !14070)
!14074 = !DILocation(line: 3733, column: 48, scope: !14070)
!14075 = !DILocation(line: 3734, column: 6, scope: !14070)
!14076 = !DILocation(line: 3734, column: 11, scope: !14070)
!14077 = !DILocation(line: 3734, column: 23, scope: !14070)
!14078 = !DILocation(line: 3734, column: 21, scope: !14070)
!14079 = !DILocation(line: 3734, column: 33, scope: !14070)
!14080 = !DILocation(line: 3734, column: 36, scope: !14070)
!14081 = !DILocation(line: 3734, column: 41, scope: !14070)
!14082 = !DILocation(line: 3734, column: 54, scope: !14070)
!14083 = !DILocation(line: 3734, column: 51, scope: !14070)
!14084 = !DILocation(line: 3733, column: 6, scope: !13996)
!14085 = !DILocation(line: 3735, column: 3, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14070, file: !3, line: 3734, column: 72)
!14087 = !DILocation(line: 3739, column: 3, scope: !14086)
!14088 = !DILocation(line: 3748, column: 6, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 3748, column: 6)
!14090 = !DILocation(line: 3748, column: 11, scope: !14089)
!14091 = !DILocation(line: 3748, column: 31, scope: !14089)
!14092 = !DILocation(line: 3748, column: 28, scope: !14089)
!14093 = !DILocation(line: 3748, column: 48, scope: !14089)
!14094 = !DILocation(line: 3749, column: 6, scope: !14089)
!14095 = !DILocation(line: 3749, column: 11, scope: !14089)
!14096 = !DILocation(line: 3749, column: 23, scope: !14089)
!14097 = !DILocation(line: 3749, column: 21, scope: !14089)
!14098 = !DILocation(line: 3749, column: 33, scope: !14089)
!14099 = !DILocation(line: 3749, column: 36, scope: !14089)
!14100 = !DILocation(line: 3749, column: 49, scope: !14089)
!14101 = !DILocation(line: 3749, column: 46, scope: !14089)
!14102 = !DILocation(line: 3749, column: 66, scope: !14089)
!14103 = !DILocation(line: 3750, column: 8, scope: !14089)
!14104 = !DILocation(line: 3750, column: 13, scope: !14089)
!14105 = !DILocation(line: 3750, column: 21, scope: !14089)
!14106 = !DILocation(line: 3748, column: 6, scope: !13996)
!14107 = !DILocation(line: 3751, column: 3, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14089, file: !3, line: 3750, column: 48)
!14109 = !DILocation(line: 3755, column: 3, scope: !14108)
!14110 = !DILocation(line: 3755, column: 8, scope: !14108)
!14111 = !DILocation(line: 3755, column: 14, scope: !14108)
!14112 = !DILocation(line: 3756, column: 6, scope: !14108)
!14113 = !DILocation(line: 3757, column: 2, scope: !14108)
!14114 = !DILocation(line: 3758, column: 6, scope: !14089)
!14115 = !DILocation(line: 3761, column: 26, scope: !13996)
!14116 = !DILocation(line: 3761, column: 2, scope: !13996)
!14117 = !DILocation(line: 3761, column: 7, scope: !13996)
!14118 = !DILocation(line: 3761, column: 24, scope: !13996)
!14119 = !DILocation(line: 3762, column: 19, scope: !13996)
!14120 = !DILocation(line: 3762, column: 2, scope: !13996)
!14121 = !DILocation(line: 3762, column: 7, scope: !13996)
!14122 = !DILocation(line: 3762, column: 17, scope: !13996)
!14123 = !DILabel(scope: !13996, name: "fail", file: !3, line: 3763)
!14124 = !DILocation(line: 3763, column: 2, scope: !13996)
!14125 = !DILocation(line: 3764, column: 2, scope: !13996)
!14126 = !DILocation(line: 3765, column: 9, scope: !13996)
!14127 = !DILocation(line: 3765, column: 2, scope: !13996)
!14128 = !DILocation(line: 3766, column: 1, scope: !13996)
!14129 = distinct !DISubprogram(name: "ata_class_enabled", scope: !183, file: !183, line: 1576, type: !14130, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14130 = !DISubroutineType(types: !14131)
!14131 = !{!7, !7}
!14132 = !DILocalVariable(name: "class", arg: 1, scope: !14129, file: !183, line: 1576, type: !7)
!14133 = !DILocation(line: 1576, column: 59, scope: !14129)
!14134 = !DILocation(line: 1578, column: 9, scope: !14129)
!14135 = !DILocation(line: 1578, column: 15, scope: !14129)
!14136 = !DILocation(line: 1578, column: 30, scope: !14129)
!14137 = !DILocation(line: 1578, column: 33, scope: !14129)
!14138 = !DILocation(line: 1578, column: 39, scope: !14129)
!14139 = !DILocation(line: 1578, column: 56, scope: !14129)
!14140 = !DILocation(line: 1579, column: 3, scope: !14129)
!14141 = !DILocation(line: 1579, column: 9, scope: !14129)
!14142 = !DILocation(line: 1579, column: 24, scope: !14129)
!14143 = !DILocation(line: 1579, column: 27, scope: !14129)
!14144 = !DILocation(line: 1579, column: 33, scope: !14129)
!14145 = !DILocation(line: 1579, column: 49, scope: !14129)
!14146 = !DILocation(line: 1580, column: 3, scope: !14129)
!14147 = !DILocation(line: 1580, column: 9, scope: !14129)
!14148 = !DILocation(line: 1578, column: 2, scope: !14129)
!14149 = distinct !DISubprogram(name: "atapi_check_dma", scope: !3, file: !3, line: 4328, type: !6367, scopeLine: 4329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14150 = !DILocalVariable(name: "qc", arg: 1, scope: !14149, file: !3, line: 4328, type: !6369)
!14151 = !DILocation(line: 4328, column: 44, scope: !14149)
!14152 = !DILocalVariable(name: "ap", scope: !14149, file: !3, line: 4330, type: !1005)
!14153 = !DILocation(line: 4330, column: 19, scope: !14149)
!14154 = !DILocation(line: 4330, column: 24, scope: !14149)
!14155 = !DILocation(line: 4330, column: 28, scope: !14149)
!14156 = !DILocation(line: 4335, column: 8, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14149, file: !3, line: 4335, column: 6)
!14158 = !DILocation(line: 4335, column: 12, scope: !14157)
!14159 = !DILocation(line: 4335, column: 17, scope: !14157)
!14160 = !DILocation(line: 4335, column: 25, scope: !14157)
!14161 = !DILocation(line: 4335, column: 56, scope: !14157)
!14162 = !DILocation(line: 4336, column: 6, scope: !14157)
!14163 = !DILocation(line: 4335, column: 6, scope: !14149)
!14164 = !DILocation(line: 4337, column: 3, scope: !14157)
!14165 = !DILocation(line: 4339, column: 6, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14149, file: !3, line: 4339, column: 6)
!14167 = !DILocation(line: 4339, column: 10, scope: !14166)
!14168 = !DILocation(line: 4339, column: 15, scope: !14166)
!14169 = !DILocation(line: 4339, column: 6, scope: !14149)
!14170 = !DILocation(line: 4340, column: 10, scope: !14166)
!14171 = !DILocation(line: 4340, column: 14, scope: !14166)
!14172 = !DILocation(line: 4340, column: 19, scope: !14166)
!14173 = !DILocation(line: 4340, column: 35, scope: !14166)
!14174 = !DILocation(line: 4340, column: 3, scope: !14166)
!14175 = !DILocation(line: 4342, column: 2, scope: !14149)
!14176 = !DILocation(line: 4343, column: 1, scope: !14149)
!14177 = distinct !DISubprogram(name: "ata_is_ncq", scope: !183, file: !183, line: 1046, type: !14178, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!1495, !1216}
!14180 = !DILocalVariable(name: "prot", arg: 1, scope: !14177, file: !183, line: 1046, type: !1216)
!14181 = !DILocation(line: 1046, column: 34, scope: !14177)
!14182 = !DILocation(line: 1048, column: 9, scope: !14177)
!14183 = !DILocation(line: 1048, column: 14, scope: !14177)
!14184 = !DILocation(line: 1048, column: 2, scope: !14177)
!14185 = distinct !DISubprogram(name: "ata_tag_valid", scope: !183, file: !183, line: 1545, type: !8240, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14186 = !DILocalVariable(name: "tag", arg: 1, scope: !14185, file: !183, line: 1545, type: !7)
!14187 = !DILocation(line: 1545, column: 47, scope: !14185)
!14188 = !DILocation(line: 1547, column: 9, scope: !14185)
!14189 = !DILocation(line: 1547, column: 13, scope: !14185)
!14190 = !DILocation(line: 1547, column: 29, scope: !14185)
!14191 = !DILocation(line: 1547, column: 49, scope: !14185)
!14192 = !DILocation(line: 1547, column: 32, scope: !14185)
!14193 = !DILocation(line: 1547, column: 2, scope: !14185)
!14194 = distinct !DISubprogram(name: "ata_noop_qc_prep", scope: !3, file: !3, line: 4376, type: !6582, scopeLine: 4377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14195 = !DILocalVariable(name: "qc", arg: 1, scope: !14194, file: !3, line: 4376, type: !6369)
!14196 = !DILocation(line: 4376, column: 68, scope: !14194)
!14197 = !DILocation(line: 4378, column: 2, scope: !14194)
!14198 = distinct !DISubprogram(name: "ata_qc_new_init", scope: !3, file: !3, line: 4501, type: !14199, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{!6369, !6374, !223}
!14201 = !DILocalVariable(name: "dev", arg: 1, scope: !14198, file: !3, line: 4501, type: !6374)
!14202 = !DILocation(line: 4501, column: 59, scope: !14198)
!14203 = !DILocalVariable(name: "tag", arg: 2, scope: !14198, file: !3, line: 4501, type: !223)
!14204 = !DILocation(line: 4501, column: 68, scope: !14198)
!14205 = !DILocalVariable(name: "ap", scope: !14198, file: !3, line: 4503, type: !1005)
!14206 = !DILocation(line: 4503, column: 19, scope: !14198)
!14207 = !DILocation(line: 4503, column: 24, scope: !14198)
!14208 = !DILocation(line: 4503, column: 29, scope: !14198)
!14209 = !DILocation(line: 4503, column: 35, scope: !14198)
!14210 = !DILocalVariable(name: "qc", scope: !14198, file: !3, line: 4504, type: !6369)
!14211 = !DILocation(line: 4504, column: 25, scope: !14198)
!14212 = !DILocation(line: 4507, column: 6, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 4507, column: 6)
!14214 = !DILocation(line: 4507, column: 6, scope: !14198)
!14215 = !DILocation(line: 4508, column: 3, scope: !14213)
!14216 = !DILocation(line: 4511, column: 6, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 4511, column: 6)
!14218 = !DILocation(line: 4511, column: 10, scope: !14217)
!14219 = !DILocation(line: 4511, column: 16, scope: !14217)
!14220 = !DILocation(line: 4511, column: 6, scope: !14198)
!14221 = !DILocation(line: 4512, column: 30, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 4511, column: 37)
!14223 = !DILocation(line: 4512, column: 9, scope: !14222)
!14224 = !DILocation(line: 4512, column: 7, scope: !14222)
!14225 = !DILocation(line: 4513, column: 7, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14222, file: !3, line: 4513, column: 7)
!14227 = !DILocation(line: 4513, column: 11, scope: !14226)
!14228 = !DILocation(line: 4513, column: 7, scope: !14222)
!14229 = !DILocation(line: 4514, column: 4, scope: !14226)
!14230 = !DILocation(line: 4515, column: 2, scope: !14222)
!14231 = !DILocation(line: 4517, column: 25, scope: !14198)
!14232 = !DILocation(line: 4517, column: 29, scope: !14198)
!14233 = !DILocation(line: 4517, column: 7, scope: !14198)
!14234 = !DILocation(line: 4517, column: 5, scope: !14198)
!14235 = !DILocation(line: 4518, column: 25, scope: !14198)
!14236 = !DILocation(line: 4518, column: 12, scope: !14198)
!14237 = !DILocation(line: 4518, column: 16, scope: !14198)
!14238 = !DILocation(line: 4518, column: 23, scope: !14198)
!14239 = !DILocation(line: 4518, column: 2, scope: !14198)
!14240 = !DILocation(line: 4518, column: 6, scope: !14198)
!14241 = !DILocation(line: 4518, column: 10, scope: !14198)
!14242 = !DILocation(line: 4519, column: 2, scope: !14198)
!14243 = !DILocation(line: 4519, column: 6, scope: !14198)
!14244 = !DILocation(line: 4519, column: 14, scope: !14198)
!14245 = !DILocation(line: 4520, column: 11, scope: !14198)
!14246 = !DILocation(line: 4520, column: 2, scope: !14198)
!14247 = !DILocation(line: 4520, column: 6, scope: !14198)
!14248 = !DILocation(line: 4520, column: 9, scope: !14198)
!14249 = !DILocation(line: 4521, column: 12, scope: !14198)
!14250 = !DILocation(line: 4521, column: 2, scope: !14198)
!14251 = !DILocation(line: 4521, column: 6, scope: !14198)
!14252 = !DILocation(line: 4521, column: 10, scope: !14198)
!14253 = !DILocation(line: 4523, column: 16, scope: !14198)
!14254 = !DILocation(line: 4523, column: 2, scope: !14198)
!14255 = !DILocation(line: 4525, column: 9, scope: !14198)
!14256 = !DILocation(line: 4525, column: 2, scope: !14198)
!14257 = !DILocation(line: 4526, column: 1, scope: !14198)
!14258 = distinct !DISubprogram(name: "__ata_qc_complete", scope: !3, file: !3, line: 4555, type: !6575, scopeLine: 4556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14259 = !DILocalVariable(name: "qc", arg: 1, scope: !14258, file: !3, line: 4555, type: !6369)
!14260 = !DILocation(line: 4555, column: 47, scope: !14258)
!14261 = !DILocalVariable(name: "ap", scope: !14258, file: !3, line: 4557, type: !1005)
!14262 = !DILocation(line: 4557, column: 19, scope: !14258)
!14263 = !DILocalVariable(name: "link", scope: !14258, file: !3, line: 4558, type: !6378)
!14264 = !DILocation(line: 4558, column: 19, scope: !14258)
!14265 = !DILocalVariable(name: "__ret_warn_on", scope: !14266, file: !3, line: 4560, type: !223)
!14266 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 4560, column: 2)
!14267 = !DILocation(line: 4560, column: 2, scope: !14266)
!14268 = !DILocation(line: 4560, column: 2, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14266, file: !3, line: 4560, column: 2)
!14270 = !DILocation(line: 4560, column: 2, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14269, file: !3, line: 4560, column: 2)
!14272 = !DILocation(line: 4560, column: 2, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 4560, column: 2)
!14274 = !DILocation(line: 4560, column: 2, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 4560, column: 2)
!14276 = !{i32 -2139217298, i32 -2139217269, i32 -2139217223, i32 -2139217165, i32 -2139217111, i32 -2139217057, i32 -2139217002, i32 -2139216971}
!14277 = !DILocation(line: 4560, column: 2, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 4560, column: 2)
!14279 = !{i32 -2139216552, i32 -2139216545, i32 -2139216493, i32 -2139216462, i32 -2139216432}
!14280 = !DILocation(line: 4560, column: 2, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 4560, column: 2)
!14282 = !DILocalVariable(name: "__ret_warn_on", scope: !14283, file: !3, line: 4561, type: !223)
!14283 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 4561, column: 2)
!14284 = !DILocation(line: 4561, column: 2, scope: !14283)
!14285 = !DILocation(line: 4561, column: 2, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14283, file: !3, line: 4561, column: 2)
!14287 = !DILocation(line: 4561, column: 2, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14286, file: !3, line: 4561, column: 2)
!14289 = !DILocation(line: 4561, column: 2, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14288, file: !3, line: 4561, column: 2)
!14291 = !DILocation(line: 4561, column: 2, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14288, file: !3, line: 4561, column: 2)
!14293 = !{i32 -2139215800, i32 -2139215771, i32 -2139215725, i32 -2139215667, i32 -2139215613, i32 -2139215559, i32 -2139215504, i32 -2139215473}
!14294 = !DILocation(line: 4561, column: 2, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14288, file: !3, line: 4561, column: 2)
!14296 = !{i32 -2139215054, i32 -2139215047, i32 -2139214995, i32 -2139214964, i32 -2139214934}
!14297 = !DILocation(line: 4561, column: 2, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14288, file: !3, line: 4561, column: 2)
!14299 = !DILocation(line: 4562, column: 7, scope: !14258)
!14300 = !DILocation(line: 4562, column: 11, scope: !14258)
!14301 = !DILocation(line: 4562, column: 5, scope: !14258)
!14302 = !DILocation(line: 4563, column: 9, scope: !14258)
!14303 = !DILocation(line: 4563, column: 13, scope: !14258)
!14304 = !DILocation(line: 4563, column: 18, scope: !14258)
!14305 = !DILocation(line: 4563, column: 7, scope: !14258)
!14306 = !DILocation(line: 4565, column: 6, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 4565, column: 6)
!14308 = !DILocation(line: 4565, column: 6, scope: !14258)
!14309 = !DILocation(line: 4566, column: 16, scope: !14307)
!14310 = !DILocation(line: 4566, column: 3, scope: !14307)
!14311 = !DILocation(line: 4569, column: 17, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 4569, column: 6)
!14313 = !DILocation(line: 4569, column: 21, scope: !14312)
!14314 = !DILocation(line: 4569, column: 24, scope: !14312)
!14315 = !DILocation(line: 4569, column: 6, scope: !14312)
!14316 = !DILocation(line: 4569, column: 6, scope: !14258)
!14317 = !DILocation(line: 4570, column: 27, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14312, file: !3, line: 4569, column: 35)
!14319 = !DILocation(line: 4570, column: 31, scope: !14318)
!14320 = !DILocation(line: 4570, column: 24, scope: !14318)
!14321 = !DILocation(line: 4570, column: 20, scope: !14318)
!14322 = !DILocation(line: 4570, column: 3, scope: !14318)
!14323 = !DILocation(line: 4570, column: 9, scope: !14318)
!14324 = !DILocation(line: 4570, column: 17, scope: !14318)
!14325 = !DILocation(line: 4571, column: 8, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4571, column: 7)
!14327 = !DILocation(line: 4571, column: 14, scope: !14326)
!14328 = !DILocation(line: 4571, column: 7, scope: !14318)
!14329 = !DILocation(line: 4572, column: 4, scope: !14326)
!14330 = !DILocation(line: 4572, column: 8, scope: !14326)
!14331 = !DILocation(line: 4572, column: 23, scope: !14326)
!14332 = !DILocation(line: 4573, column: 2, scope: !14318)
!14333 = !DILocation(line: 4574, column: 3, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14312, file: !3, line: 4573, column: 9)
!14335 = !DILocation(line: 4574, column: 9, scope: !14334)
!14336 = !DILocation(line: 4574, column: 20, scope: !14334)
!14337 = !DILocation(line: 4575, column: 3, scope: !14334)
!14338 = !DILocation(line: 4575, column: 7, scope: !14334)
!14339 = !DILocation(line: 4575, column: 22, scope: !14334)
!14340 = !DILocation(line: 4579, column: 6, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 4579, column: 6)
!14342 = !DILocation(line: 0, scope: !14341)
!14343 = !DILocation(line: 4579, column: 6, scope: !14258)
!14344 = !DILocation(line: 4581, column: 3, scope: !14341)
!14345 = !DILocation(line: 4581, column: 7, scope: !14341)
!14346 = !DILocation(line: 4581, column: 17, scope: !14341)
!14347 = !DILocation(line: 4587, column: 2, scope: !14258)
!14348 = !DILocation(line: 4587, column: 6, scope: !14258)
!14349 = !DILocation(line: 4587, column: 12, scope: !14258)
!14350 = !DILocation(line: 4588, column: 29, scope: !14258)
!14351 = !DILocation(line: 4588, column: 33, scope: !14258)
!14352 = !DILocation(line: 4588, column: 26, scope: !14258)
!14353 = !DILocation(line: 4588, column: 19, scope: !14258)
!14354 = !DILocation(line: 4588, column: 2, scope: !14258)
!14355 = !DILocation(line: 4588, column: 6, scope: !14258)
!14356 = !DILocation(line: 4588, column: 16, scope: !14258)
!14357 = !DILocation(line: 4591, column: 2, scope: !14258)
!14358 = !DILocation(line: 4591, column: 6, scope: !14258)
!14359 = !DILocation(line: 4591, column: 18, scope: !14258)
!14360 = !DILocation(line: 4592, column: 1, scope: !14258)
!14361 = distinct !DISubprogram(name: "ata_sg_clean", scope: !3, file: !3, line: 4414, type: !6575, scopeLine: 4415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14362 = !DILocalVariable(name: "qc", arg: 1, scope: !14361, file: !3, line: 4414, type: !6369)
!14363 = !DILocation(line: 4414, column: 49, scope: !14361)
!14364 = !DILocalVariable(name: "ap", scope: !14361, file: !3, line: 4416, type: !1005)
!14365 = !DILocation(line: 4416, column: 19, scope: !14361)
!14366 = !DILocation(line: 4416, column: 24, scope: !14361)
!14367 = !DILocation(line: 4416, column: 28, scope: !14361)
!14368 = !DILocalVariable(name: "sg", scope: !14361, file: !3, line: 4417, type: !6148)
!14369 = !DILocation(line: 4417, column: 22, scope: !14361)
!14370 = !DILocation(line: 4417, column: 27, scope: !14361)
!14371 = !DILocation(line: 4417, column: 31, scope: !14361)
!14372 = !DILocalVariable(name: "dir", scope: !14361, file: !3, line: 4418, type: !223)
!14373 = !DILocation(line: 4418, column: 6, scope: !14361)
!14374 = !DILocation(line: 4418, column: 12, scope: !14361)
!14375 = !DILocation(line: 4418, column: 16, scope: !14361)
!14376 = !DILocalVariable(name: "__ret_warn_on", scope: !14377, file: !3, line: 4420, type: !223)
!14377 = distinct !DILexicalBlock(scope: !14361, file: !3, line: 4420, column: 2)
!14378 = !DILocation(line: 4420, column: 2, scope: !14377)
!14379 = !DILocation(line: 4420, column: 2, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 4420, column: 2)
!14381 = !DILocation(line: 4420, column: 2, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14380, file: !3, line: 4420, column: 2)
!14383 = !DILocation(line: 4420, column: 2, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14382, file: !3, line: 4420, column: 2)
!14385 = !DILocation(line: 4420, column: 2, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14382, file: !3, line: 4420, column: 2)
!14387 = !{i32 -2139220540, i32 -2139220511, i32 -2139220465, i32 -2139220407, i32 -2139220353, i32 -2139220299, i32 -2139220244, i32 -2139220213}
!14388 = !DILocation(line: 4420, column: 2, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14382, file: !3, line: 4420, column: 2)
!14390 = !{i32 -2139219794, i32 -2139219787, i32 -2139219735, i32 -2139219704, i32 -2139219674}
!14391 = !DILocation(line: 4420, column: 2, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14382, file: !3, line: 4420, column: 2)
!14393 = !DILocation(line: 4424, column: 6, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14361, file: !3, line: 4424, column: 6)
!14395 = !DILocation(line: 4424, column: 10, scope: !14394)
!14396 = !DILocation(line: 4424, column: 6, scope: !14361)
!14397 = !DILocation(line: 4425, column: 3, scope: !14394)
!14398 = !DILocation(line: 4427, column: 2, scope: !14361)
!14399 = !DILocation(line: 4427, column: 6, scope: !14361)
!14400 = !DILocation(line: 4427, column: 12, scope: !14361)
!14401 = !DILocation(line: 4428, column: 2, scope: !14361)
!14402 = !DILocation(line: 4428, column: 6, scope: !14361)
!14403 = !DILocation(line: 4428, column: 9, scope: !14361)
!14404 = !DILocation(line: 4429, column: 1, scope: !14361)
!14405 = distinct !DISubprogram(name: "ledtrig_disk_activity", scope: !14406, file: !14406, line: 467, type: !14407, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14406 = !DIFile(filename: "./include/linux/leds.h", directory: "/home/lizy2001/genbc/linux")
!14407 = !DISubroutineType(types: !14408)
!14408 = !{null, !1495}
!14409 = !DILocalVariable(name: "write", arg: 1, scope: !14405, file: !14406, line: 467, type: !1495)
!14410 = !DILocation(line: 467, column: 47, scope: !14405)
!14411 = !DILocation(line: 467, column: 55, scope: !14405)
!14412 = distinct !DISubprogram(name: "fill_result_tf", scope: !3, file: !3, line: 4594, type: !6575, scopeLine: 4595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14413 = !DILocalVariable(name: "qc", arg: 1, scope: !14412, file: !3, line: 4594, type: !6369)
!14414 = !DILocation(line: 4594, column: 51, scope: !14412)
!14415 = !DILocalVariable(name: "ap", scope: !14412, file: !3, line: 4596, type: !1005)
!14416 = !DILocation(line: 4596, column: 19, scope: !14412)
!14417 = !DILocation(line: 4596, column: 24, scope: !14412)
!14418 = !DILocation(line: 4596, column: 28, scope: !14412)
!14419 = !DILocation(line: 4598, column: 24, scope: !14412)
!14420 = !DILocation(line: 4598, column: 28, scope: !14412)
!14421 = !DILocation(line: 4598, column: 31, scope: !14412)
!14422 = !DILocation(line: 4598, column: 2, scope: !14412)
!14423 = !DILocation(line: 4598, column: 6, scope: !14412)
!14424 = !DILocation(line: 4598, column: 16, scope: !14412)
!14425 = !DILocation(line: 4598, column: 22, scope: !14412)
!14426 = !DILocation(line: 4599, column: 2, scope: !14412)
!14427 = !DILocation(line: 4599, column: 6, scope: !14412)
!14428 = !DILocation(line: 4599, column: 11, scope: !14412)
!14429 = !DILocation(line: 4599, column: 23, scope: !14412)
!14430 = !DILocation(line: 4600, column: 1, scope: !14412)
!14431 = distinct !DISubprogram(name: "trace_ata_qc_complete_internal", scope: !14432, file: !14432, line: 266, type: !6575, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14432 = !DIFile(filename: "./include/trace/events/libata.h", directory: "/home/lizy2001/genbc/linux")
!14433 = !DILocalVariable(name: "qc", arg: 1, scope: !14431, file: !14432, line: 266, type: !6369)
!14434 = !DILocation(line: 266, column: 1, scope: !14431)
!14435 = distinct !DISubprogram(name: "trace_ata_qc_complete_failed", scope: !14432, file: !14432, line: 270, type: !6575, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14436 = !DILocalVariable(name: "qc", arg: 1, scope: !14435, file: !14432, line: 270, type: !6369)
!14437 = !DILocation(line: 270, column: 1, scope: !14435)
!14438 = distinct !DISubprogram(name: "trace_ata_qc_complete_done", scope: !14432, file: !14432, line: 274, type: !6575, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14439 = !DILocalVariable(name: "qc", arg: 1, scope: !14438, file: !14432, line: 274, type: !6369)
!14440 = !DILocation(line: 274, column: 1, scope: !14438)
!14441 = distinct !DISubprogram(name: "ata_verify_xfer", scope: !3, file: !3, line: 4602, type: !6575, scopeLine: 4603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14442 = !DILocalVariable(name: "qc", arg: 1, scope: !14441, file: !3, line: 4602, type: !6369)
!14443 = !DILocation(line: 4602, column: 52, scope: !14441)
!14444 = !DILocalVariable(name: "dev", scope: !14441, file: !3, line: 4604, type: !6374)
!14445 = !DILocation(line: 4604, column: 21, scope: !14441)
!14446 = !DILocation(line: 4604, column: 27, scope: !14441)
!14447 = !DILocation(line: 4604, column: 31, scope: !14441)
!14448 = !DILocation(line: 4606, column: 19, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14441, file: !3, line: 4606, column: 6)
!14450 = !DILocation(line: 4606, column: 23, scope: !14449)
!14451 = !DILocation(line: 4606, column: 26, scope: !14449)
!14452 = !DILocation(line: 4606, column: 7, scope: !14449)
!14453 = !DILocation(line: 4606, column: 6, scope: !14441)
!14454 = !DILocation(line: 4607, column: 3, scope: !14449)
!14455 = !DILocation(line: 4609, column: 7, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14441, file: !3, line: 4609, column: 6)
!14457 = !DILocation(line: 4609, column: 12, scope: !14456)
!14458 = !DILocation(line: 4609, column: 23, scope: !14456)
!14459 = !DILocation(line: 4609, column: 26, scope: !14456)
!14460 = !DILocation(line: 4609, column: 31, scope: !14456)
!14461 = !DILocation(line: 4609, column: 42, scope: !14456)
!14462 = !DILocation(line: 4609, column: 56, scope: !14456)
!14463 = !DILocation(line: 4609, column: 60, scope: !14456)
!14464 = !DILocation(line: 4609, column: 63, scope: !14456)
!14465 = !DILocation(line: 4609, column: 45, scope: !14456)
!14466 = !DILocation(line: 4609, column: 6, scope: !14441)
!14467 = !DILocation(line: 4610, column: 3, scope: !14456)
!14468 = !DILocation(line: 4612, column: 2, scope: !14441)
!14469 = !DILocation(line: 4612, column: 7, scope: !14441)
!14470 = !DILocation(line: 4612, column: 13, scope: !14441)
!14471 = !DILocation(line: 4613, column: 1, scope: !14441)
!14472 = distinct !DISubprogram(name: "ata_qc_get_active", scope: !3, file: !3, line: 4736, type: !14473, scopeLine: 4737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14473 = !DISubroutineType(types: !14474)
!14474 = !{!984, !1005}
!14475 = !DILocalVariable(name: "ap", arg: 1, scope: !14472, file: !3, line: 4736, type: !1005)
!14476 = !DILocation(line: 4736, column: 40, scope: !14472)
!14477 = !DILocalVariable(name: "qc_active", scope: !14472, file: !3, line: 4738, type: !984)
!14478 = !DILocation(line: 4738, column: 6, scope: !14472)
!14479 = !DILocation(line: 4738, column: 18, scope: !14472)
!14480 = !DILocation(line: 4738, column: 22, scope: !14472)
!14481 = !DILocation(line: 4741, column: 6, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14472, file: !3, line: 4741, column: 6)
!14483 = !DILocation(line: 4741, column: 16, scope: !14482)
!14484 = !DILocation(line: 4741, column: 6, scope: !14472)
!14485 = !DILocation(line: 4742, column: 13, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 4741, column: 46)
!14487 = !DILocation(line: 4743, column: 13, scope: !14486)
!14488 = !DILocation(line: 4744, column: 2, scope: !14486)
!14489 = !DILocation(line: 4746, column: 9, scope: !14472)
!14490 = !DILocation(line: 4746, column: 2, scope: !14472)
!14491 = distinct !DISubprogram(name: "ata_is_data", scope: !183, file: !183, line: 1051, type: !14178, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14492 = !DILocalVariable(name: "prot", arg: 1, scope: !14491, file: !183, line: 1051, type: !1216)
!14493 = !DILocation(line: 1051, column: 35, scope: !14491)
!14494 = !DILocation(line: 1053, column: 9, scope: !14491)
!14495 = !DILocation(line: 1053, column: 14, scope: !14491)
!14496 = !DILocation(line: 1053, column: 2, scope: !14491)
!14497 = distinct !DISubprogram(name: "ata_is_dma", scope: !183, file: !183, line: 1041, type: !14178, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14498 = !DILocalVariable(name: "prot", arg: 1, scope: !14497, file: !183, line: 1041, type: !1216)
!14499 = !DILocation(line: 1041, column: 34, scope: !14497)
!14500 = !DILocation(line: 1043, column: 9, scope: !14497)
!14501 = !DILocation(line: 1043, column: 14, scope: !14497)
!14502 = !DILocation(line: 1043, column: 2, scope: !14497)
!14503 = distinct !DISubprogram(name: "ata_is_pio", scope: !183, file: !183, line: 1036, type: !14178, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14504 = !DILocalVariable(name: "prot", arg: 1, scope: !14503, file: !183, line: 1036, type: !1216)
!14505 = !DILocation(line: 1036, column: 34, scope: !14503)
!14506 = !DILocation(line: 1038, column: 9, scope: !14503)
!14507 = !DILocation(line: 1038, column: 14, scope: !14503)
!14508 = !DILocation(line: 1038, column: 2, scope: !14503)
!14509 = distinct !DISubprogram(name: "ata_sg_setup", scope: !3, file: !3, line: 4444, type: !6367, scopeLine: 4445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14510 = !DILocalVariable(name: "qc", arg: 1, scope: !14509, file: !3, line: 4444, type: !6369)
!14511 = !DILocation(line: 4444, column: 48, scope: !14509)
!14512 = !DILocalVariable(name: "ap", scope: !14509, file: !3, line: 4446, type: !1005)
!14513 = !DILocation(line: 4446, column: 19, scope: !14509)
!14514 = !DILocation(line: 4446, column: 24, scope: !14509)
!14515 = !DILocation(line: 4446, column: 28, scope: !14509)
!14516 = !DILocalVariable(name: "n_elem", scope: !14509, file: !3, line: 4447, type: !7)
!14517 = !DILocation(line: 4447, column: 15, scope: !14509)
!14518 = !DILocation(line: 4451, column: 11, scope: !14509)
!14519 = !DILocation(line: 4451, column: 9, scope: !14509)
!14520 = !DILocation(line: 4452, column: 6, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14509, file: !3, line: 4452, column: 6)
!14522 = !DILocation(line: 4452, column: 13, scope: !14521)
!14523 = !DILocation(line: 4452, column: 6, scope: !14509)
!14524 = !DILocation(line: 4453, column: 3, scope: !14521)
!14525 = !DILocation(line: 4456, column: 20, scope: !14509)
!14526 = !DILocation(line: 4456, column: 24, scope: !14509)
!14527 = !DILocation(line: 4456, column: 2, scope: !14509)
!14528 = !DILocation(line: 4456, column: 6, scope: !14509)
!14529 = !DILocation(line: 4456, column: 18, scope: !14509)
!14530 = !DILocation(line: 4457, column: 15, scope: !14509)
!14531 = !DILocation(line: 4457, column: 2, scope: !14509)
!14532 = !DILocation(line: 4457, column: 6, scope: !14509)
!14533 = !DILocation(line: 4457, column: 13, scope: !14509)
!14534 = !DILocation(line: 4458, column: 2, scope: !14509)
!14535 = !DILocation(line: 4458, column: 6, scope: !14509)
!14536 = !DILocation(line: 4458, column: 12, scope: !14509)
!14537 = !DILocation(line: 4460, column: 2, scope: !14509)
!14538 = !DILocation(line: 4461, column: 1, scope: !14509)
!14539 = distinct !DISubprogram(name: "trace_ata_qc_issue", scope: !14432, file: !14432, line: 151, type: !6575, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14540 = !DILocalVariable(name: "qc", arg: 1, scope: !14539, file: !14432, line: 151, type: !6369)
!14541 = !DILocation(line: 151, column: 1, scope: !14539)
!14542 = distinct !DISubprogram(name: "ata_phys_link_online", scope: !3, file: !3, line: 4839, type: !13692, scopeLine: 4840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14543 = !DILocalVariable(name: "link", arg: 1, scope: !14542, file: !3, line: 4839, type: !6378)
!14544 = !DILocation(line: 4839, column: 44, scope: !14542)
!14545 = !DILocalVariable(name: "sstatus", scope: !14542, file: !3, line: 4841, type: !989)
!14546 = !DILocation(line: 4841, column: 6, scope: !14542)
!14547 = !DILocation(line: 4843, column: 20, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14542, file: !3, line: 4843, column: 6)
!14549 = !DILocation(line: 4843, column: 6, scope: !14548)
!14550 = !DILocation(line: 4843, column: 48, scope: !14548)
!14551 = !DILocation(line: 4843, column: 53, scope: !14548)
!14552 = !DILocation(line: 4844, column: 25, scope: !14548)
!14553 = !DILocation(line: 4844, column: 6, scope: !14548)
!14554 = !DILocation(line: 4843, column: 6, scope: !14542)
!14555 = !DILocation(line: 4845, column: 3, scope: !14548)
!14556 = !DILocation(line: 4846, column: 2, scope: !14542)
!14557 = !DILocation(line: 4847, column: 1, scope: !14542)
!14558 = distinct !DISubprogram(name: "ata_sas_port_suspend", scope: !3, file: !3, line: 5088, type: !6622, scopeLine: 5089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14559 = !DILocalVariable(name: "ap", arg: 1, scope: !14558, file: !3, line: 5088, type: !1005)
!14560 = !DILocation(line: 5088, column: 44, scope: !14558)
!14561 = !DILocation(line: 5090, column: 25, scope: !14558)
!14562 = !DILocation(line: 5090, column: 29, scope: !14558)
!14563 = !DILocation(line: 5090, column: 2, scope: !14558)
!14564 = !DILocation(line: 5091, column: 1, scope: !14558)
!14565 = distinct !DISubprogram(name: "ata_port_suspend_async", scope: !3, file: !3, line: 4979, type: !14566, scopeLine: 4980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14566 = !DISubroutineType(types: !14567)
!14567 = !{null, !1005, !3072}
!14568 = !DILocalVariable(name: "ap", arg: 1, scope: !14565, file: !3, line: 4979, type: !1005)
!14569 = !DILocation(line: 4979, column: 53, scope: !14565)
!14570 = !DILocalVariable(name: "mesg", arg: 2, scope: !14565, file: !3, line: 4979, type: !3072)
!14571 = !DILocation(line: 4979, column: 70, scope: !14565)
!14572 = !DILocation(line: 4981, column: 22, scope: !14565)
!14573 = !DILocation(line: 4981, column: 2, scope: !14565)
!14574 = !DILocation(line: 4982, column: 1, scope: !14565)
!14575 = distinct !DISubprogram(name: "ata_sas_port_resume", scope: !3, file: !3, line: 5094, type: !6622, scopeLine: 5095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14576 = !DILocalVariable(name: "ap", arg: 1, scope: !14575, file: !3, line: 5094, type: !1005)
!14577 = !DILocation(line: 5094, column: 43, scope: !14575)
!14578 = !DILocation(line: 5096, column: 24, scope: !14575)
!14579 = !DILocation(line: 5096, column: 28, scope: !14575)
!14580 = !DILocation(line: 5096, column: 2, scope: !14575)
!14581 = !DILocation(line: 5097, column: 1, scope: !14575)
!14582 = distinct !DISubprogram(name: "ata_port_resume_async", scope: !3, file: !3, line: 5020, type: !14566, scopeLine: 5021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14583 = !DILocalVariable(name: "ap", arg: 1, scope: !14582, file: !3, line: 5020, type: !1005)
!14584 = !DILocation(line: 5020, column: 52, scope: !14582)
!14585 = !DILocalVariable(name: "mesg", arg: 2, scope: !14582, file: !3, line: 5020, type: !3072)
!14586 = !DILocation(line: 5020, column: 69, scope: !14582)
!14587 = !DILocation(line: 5022, column: 22, scope: !14582)
!14588 = !DILocation(line: 5022, column: 2, scope: !14582)
!14589 = !DILocation(line: 5023, column: 1, scope: !14582)
!14590 = distinct !DISubprogram(name: "ata_host_suspend", scope: !3, file: !3, line: 5107, type: !14591, scopeLine: 5108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{!223, !6675, !3072}
!14593 = !DILocalVariable(name: "host", arg: 1, scope: !14590, file: !3, line: 5107, type: !6675)
!14594 = !DILocation(line: 5107, column: 39, scope: !14590)
!14595 = !DILocalVariable(name: "mesg", arg: 2, scope: !14590, file: !3, line: 5107, type: !3072)
!14596 = !DILocation(line: 5107, column: 58, scope: !14590)
!14597 = !DILocation(line: 5109, column: 2, scope: !14590)
!14598 = !DILocation(line: 5109, column: 8, scope: !14590)
!14599 = !DILocation(line: 5109, column: 13, scope: !14590)
!14600 = !DILocation(line: 5109, column: 19, scope: !14590)
!14601 = !DILocation(line: 5109, column: 33, scope: !14590)
!14602 = !DILocation(line: 5110, column: 2, scope: !14590)
!14603 = distinct !DISubprogram(name: "ata_host_resume", scope: !3, file: !3, line: 5120, type: !6673, scopeLine: 5121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14604 = !DILocalVariable(name: "host", arg: 1, scope: !14603, file: !3, line: 5120, type: !6675)
!14605 = !DILocation(line: 5120, column: 39, scope: !14603)
!14606 = !DILocation(line: 5122, column: 2, scope: !14603)
!14607 = !DILocation(line: 5122, column: 8, scope: !14603)
!14608 = !DILocation(line: 5122, column: 13, scope: !14603)
!14609 = !DILocation(line: 5122, column: 19, scope: !14603)
!14610 = !DILocation(line: 5122, column: 33, scope: !14603)
!14611 = !DILocation(line: 5123, column: 1, scope: !14603)
!14612 = distinct !DISubprogram(name: "ata_dev_init", scope: !3, file: !3, line: 5143, type: !6618, scopeLine: 5144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14613 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 5160, column: 2, scope: !14612)
!14615 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !14614)
!14616 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !14617)
!14617 = distinct !DILocation(line: 5157, column: 2, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !3, line: 5157, column: 2)
!14619 = distinct !DILexicalBlock(scope: !14620, file: !3, line: 5157, column: 2)
!14620 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 5157, column: 2)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 5157, column: 2)
!14622 = distinct !DILexicalBlock(scope: !14612, file: !3, line: 5157, column: 2)
!14623 = !DILocalVariable(name: "dev", arg: 1, scope: !14612, file: !3, line: 5143, type: !6374)
!14624 = !DILocation(line: 5143, column: 38, scope: !14612)
!14625 = !DILocalVariable(name: "link", scope: !14612, file: !3, line: 5145, type: !6378)
!14626 = !DILocation(line: 5145, column: 19, scope: !14612)
!14627 = !DILocation(line: 5145, column: 44, scope: !14612)
!14628 = !DILocation(line: 5145, column: 26, scope: !14612)
!14629 = !DILocalVariable(name: "ap", scope: !14612, file: !3, line: 5146, type: !1005)
!14630 = !DILocation(line: 5146, column: 19, scope: !14612)
!14631 = !DILocation(line: 5146, column: 24, scope: !14612)
!14632 = !DILocation(line: 5146, column: 30, scope: !14612)
!14633 = !DILocalVariable(name: "flags", scope: !14612, file: !3, line: 5147, type: !994)
!14634 = !DILocation(line: 5147, column: 16, scope: !14612)
!14635 = !DILocation(line: 5150, column: 25, scope: !14612)
!14636 = !DILocation(line: 5150, column: 31, scope: !14612)
!14637 = !DILocation(line: 5150, column: 2, scope: !14612)
!14638 = !DILocation(line: 5150, column: 8, scope: !14612)
!14639 = !DILocation(line: 5150, column: 23, scope: !14612)
!14640 = !DILocation(line: 5151, column: 2, scope: !14612)
!14641 = !DILocation(line: 5151, column: 8, scope: !14612)
!14642 = !DILocation(line: 5151, column: 17, scope: !14612)
!14643 = !DILocation(line: 5157, column: 2, scope: !14612)
!14644 = !DILocation(line: 5157, column: 2, scope: !14622)
!14645 = !DILocalVariable(name: "__dummy", scope: !14646, file: !3, line: 5157, type: !994)
!14646 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 5157, column: 2)
!14647 = !DILocation(line: 5157, column: 2, scope: !14646)
!14648 = !DILocalVariable(name: "__dummy2", scope: !14646, file: !3, line: 5157, type: !994)
!14649 = !DILocation(line: 5157, column: 2, scope: !14621)
!14650 = !DILocation(line: 5157, column: 2, scope: !14620)
!14651 = !DILocation(line: 5157, column: 2, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14620, file: !3, line: 5157, column: 2)
!14653 = !DILocalVariable(name: "__dummy", scope: !14654, file: !3, line: 5157, type: !994)
!14654 = distinct !DILexicalBlock(scope: !14655, file: !3, line: 5157, column: 2)
!14655 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 5157, column: 2)
!14656 = !DILocation(line: 5157, column: 2, scope: !14654)
!14657 = !DILocalVariable(name: "__dummy2", scope: !14654, file: !3, line: 5157, type: !994)
!14658 = !DILocation(line: 5157, column: 2, scope: !14655)
!14659 = !DILocation(line: 5157, column: 2, scope: !14619)
!14660 = !{i32 -2139188243}
!14661 = !DILocation(line: 5157, column: 2, scope: !14618)
!14662 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !14617)
!14663 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !14617)
!14664 = !DILocation(line: 5158, column: 2, scope: !14612)
!14665 = !DILocation(line: 5158, column: 7, scope: !14612)
!14666 = !DILocation(line: 5158, column: 13, scope: !14612)
!14667 = !DILocation(line: 5159, column: 2, scope: !14612)
!14668 = !DILocation(line: 5159, column: 7, scope: !14612)
!14669 = !DILocation(line: 5159, column: 15, scope: !14612)
!14670 = !DILocation(line: 5160, column: 25, scope: !14612)
!14671 = !DILocation(line: 5160, column: 29, scope: !14612)
!14672 = !DILocation(line: 5160, column: 35, scope: !14612)
!14673 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !14614)
!14674 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !14614)
!14675 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !14614)
!14676 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !14614)
!14677 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !14614)
!14678 = !DILocation(line: 5162, column: 17, scope: !14612)
!14679 = !DILocation(line: 5162, column: 9, scope: !14612)
!14680 = !DILocation(line: 5162, column: 21, scope: !14612)
!14681 = !DILocation(line: 5162, column: 2, scope: !14612)
!14682 = !DILocation(line: 5164, column: 2, scope: !14612)
!14683 = !DILocation(line: 5164, column: 7, scope: !14612)
!14684 = !DILocation(line: 5164, column: 16, scope: !14612)
!14685 = !DILocation(line: 5165, column: 2, scope: !14612)
!14686 = !DILocation(line: 5165, column: 7, scope: !14612)
!14687 = !DILocation(line: 5165, column: 18, scope: !14612)
!14688 = !DILocation(line: 5166, column: 2, scope: !14612)
!14689 = !DILocation(line: 5166, column: 7, scope: !14612)
!14690 = !DILocation(line: 5166, column: 17, scope: !14612)
!14691 = !DILocation(line: 5167, column: 1, scope: !14612)
!14692 = distinct !DISubprogram(name: "ata_link_init", scope: !3, file: !3, line: 5180, type: !14693, scopeLine: 5181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14693 = !DISubroutineType(types: !14694)
!14694 = !{null, !1005, !6378, !223}
!14695 = !DILocalVariable(name: "ap", arg: 1, scope: !14692, file: !3, line: 5180, type: !1005)
!14696 = !DILocation(line: 5180, column: 37, scope: !14692)
!14697 = !DILocalVariable(name: "link", arg: 2, scope: !14692, file: !3, line: 5180, type: !6378)
!14698 = !DILocation(line: 5180, column: 58, scope: !14692)
!14699 = !DILocalVariable(name: "pmp", arg: 3, scope: !14692, file: !3, line: 5180, type: !223)
!14700 = !DILocation(line: 5180, column: 68, scope: !14692)
!14701 = !DILocalVariable(name: "i", scope: !14692, file: !3, line: 5182, type: !223)
!14702 = !DILocation(line: 5182, column: 6, scope: !14692)
!14703 = !DILocation(line: 5185, column: 17, scope: !14692)
!14704 = !DILocation(line: 5185, column: 9, scope: !14692)
!14705 = !DILocation(line: 5185, column: 22, scope: !14692)
!14706 = !DILocation(line: 5185, column: 2, scope: !14692)
!14707 = !DILocation(line: 5188, column: 13, scope: !14692)
!14708 = !DILocation(line: 5188, column: 2, scope: !14692)
!14709 = !DILocation(line: 5188, column: 8, scope: !14692)
!14710 = !DILocation(line: 5188, column: 11, scope: !14692)
!14711 = !DILocation(line: 5189, column: 14, scope: !14692)
!14712 = !DILocation(line: 5189, column: 2, scope: !14692)
!14713 = !DILocation(line: 5189, column: 8, scope: !14692)
!14714 = !DILocation(line: 5189, column: 12, scope: !14692)
!14715 = !DILocation(line: 5190, column: 2, scope: !14692)
!14716 = !DILocation(line: 5190, column: 8, scope: !14692)
!14717 = !DILocation(line: 5190, column: 19, scope: !14692)
!14718 = !DILocation(line: 5191, column: 2, scope: !14692)
!14719 = !DILocation(line: 5191, column: 8, scope: !14692)
!14720 = !DILocation(line: 5191, column: 26, scope: !14692)
!14721 = !DILocation(line: 5194, column: 9, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 5194, column: 2)
!14723 = !DILocation(line: 5194, column: 7, scope: !14722)
!14724 = !DILocation(line: 5194, column: 14, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14722, file: !3, line: 5194, column: 2)
!14726 = !DILocation(line: 5194, column: 16, scope: !14725)
!14727 = !DILocation(line: 5194, column: 2, scope: !14722)
!14728 = !DILocalVariable(name: "dev", scope: !14729, file: !3, line: 5195, type: !6374)
!14729 = distinct !DILexicalBlock(scope: !14725, file: !3, line: 5194, column: 40)
!14730 = !DILocation(line: 5195, column: 22, scope: !14729)
!14731 = !DILocation(line: 5195, column: 29, scope: !14729)
!14732 = !DILocation(line: 5195, column: 35, scope: !14729)
!14733 = !DILocation(line: 5195, column: 42, scope: !14729)
!14734 = !DILocation(line: 5197, column: 15, scope: !14729)
!14735 = !DILocation(line: 5197, column: 3, scope: !14729)
!14736 = !DILocation(line: 5197, column: 8, scope: !14729)
!14737 = !DILocation(line: 5197, column: 13, scope: !14729)
!14738 = !DILocation(line: 5198, column: 16, scope: !14729)
!14739 = !DILocation(line: 5198, column: 22, scope: !14729)
!14740 = !DILocation(line: 5198, column: 28, scope: !14729)
!14741 = !DILocation(line: 5198, column: 20, scope: !14729)
!14742 = !DILocation(line: 5198, column: 3, scope: !14729)
!14743 = !DILocation(line: 5198, column: 8, scope: !14729)
!14744 = !DILocation(line: 5198, column: 14, scope: !14729)
!14745 = !DILocation(line: 5200, column: 21, scope: !14729)
!14746 = !DILocation(line: 5200, column: 3, scope: !14729)
!14747 = !DILocation(line: 5200, column: 8, scope: !14729)
!14748 = !DILocation(line: 5200, column: 19, scope: !14729)
!14749 = !DILocation(line: 5202, column: 16, scope: !14729)
!14750 = !DILocation(line: 5202, column: 3, scope: !14729)
!14751 = !DILocation(line: 5203, column: 2, scope: !14729)
!14752 = !DILocation(line: 5194, column: 36, scope: !14725)
!14753 = !DILocation(line: 5194, column: 2, scope: !14725)
!14754 = distinct !{!14754, !14727, !14755}
!14755 = !DILocation(line: 5203, column: 2, scope: !14722)
!14756 = !DILocation(line: 5204, column: 1, scope: !14692)
!14757 = distinct !DISubprogram(name: "sata_link_init_spd", scope: !3, file: !3, line: 5219, type: !13540, scopeLine: 5220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14758 = !DILocalVariable(name: "link", arg: 1, scope: !14757, file: !3, line: 5219, type: !6378)
!14759 = !DILocation(line: 5219, column: 41, scope: !14757)
!14760 = !DILocalVariable(name: "spd", scope: !14757, file: !3, line: 5221, type: !1216)
!14761 = !DILocation(line: 5221, column: 5, scope: !14757)
!14762 = !DILocalVariable(name: "rc", scope: !14757, file: !3, line: 5222, type: !223)
!14763 = !DILocation(line: 5222, column: 6, scope: !14757)
!14764 = !DILocation(line: 5224, column: 21, scope: !14757)
!14765 = !DILocation(line: 5224, column: 41, scope: !14757)
!14766 = !DILocation(line: 5224, column: 47, scope: !14757)
!14767 = !DILocation(line: 5224, column: 7, scope: !14757)
!14768 = !DILocation(line: 5224, column: 5, scope: !14757)
!14769 = !DILocation(line: 5225, column: 6, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14757, file: !3, line: 5225, column: 6)
!14771 = !DILocation(line: 5225, column: 6, scope: !14757)
!14772 = !DILocation(line: 5226, column: 10, scope: !14770)
!14773 = !DILocation(line: 5226, column: 3, scope: !14770)
!14774 = !DILocation(line: 5228, column: 9, scope: !14757)
!14775 = !DILocation(line: 5228, column: 15, scope: !14757)
!14776 = !DILocation(line: 5228, column: 30, scope: !14757)
!14777 = !DILocation(line: 5228, column: 36, scope: !14757)
!14778 = !DILocation(line: 5228, column: 8, scope: !14757)
!14779 = !DILocation(line: 5228, column: 6, scope: !14757)
!14780 = !DILocation(line: 5229, column: 6, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14757, file: !3, line: 5229, column: 6)
!14782 = !DILocation(line: 5229, column: 6, scope: !14757)
!14783 = !DILocation(line: 5230, column: 36, scope: !14781)
!14784 = !DILocation(line: 5230, column: 33, scope: !14781)
!14785 = !DILocation(line: 5230, column: 41, scope: !14781)
!14786 = !DILocation(line: 5230, column: 3, scope: !14781)
!14787 = !DILocation(line: 5230, column: 9, scope: !14781)
!14788 = !DILocation(line: 5230, column: 27, scope: !14781)
!14789 = !DILocation(line: 5232, column: 24, scope: !14757)
!14790 = !DILocation(line: 5232, column: 2, scope: !14757)
!14791 = !DILocation(line: 5234, column: 25, scope: !14757)
!14792 = !DILocation(line: 5234, column: 31, scope: !14757)
!14793 = !DILocation(line: 5234, column: 2, scope: !14757)
!14794 = !DILocation(line: 5234, column: 8, scope: !14757)
!14795 = !DILocation(line: 5234, column: 23, scope: !14757)
!14796 = !DILocation(line: 5236, column: 2, scope: !14757)
!14797 = !DILocation(line: 5237, column: 1, scope: !14757)
!14798 = distinct !DISubprogram(name: "ata_force_link_limits", scope: !3, file: !3, line: 356, type: !13864, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14799 = !DILocalVariable(name: "link", arg: 1, scope: !14798, file: !3, line: 356, type: !6378)
!14800 = !DILocation(line: 356, column: 52, scope: !14798)
!14801 = !DILocalVariable(name: "did_spd", scope: !14798, file: !3, line: 358, type: !1495)
!14802 = !DILocation(line: 358, column: 7, scope: !14798)
!14803 = !DILocalVariable(name: "linkno", scope: !14798, file: !3, line: 359, type: !223)
!14804 = !DILocation(line: 359, column: 6, scope: !14798)
!14805 = !DILocation(line: 359, column: 15, scope: !14798)
!14806 = !DILocation(line: 359, column: 21, scope: !14798)
!14807 = !DILocalVariable(name: "i", scope: !14798, file: !3, line: 360, type: !223)
!14808 = !DILocation(line: 360, column: 6, scope: !14798)
!14809 = !DILocation(line: 362, column: 23, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14798, file: !3, line: 362, column: 6)
!14811 = !DILocation(line: 362, column: 6, scope: !14810)
!14812 = !DILocation(line: 362, column: 6, scope: !14798)
!14813 = !DILocation(line: 363, column: 10, scope: !14810)
!14814 = !DILocation(line: 363, column: 3, scope: !14810)
!14815 = !DILocation(line: 365, column: 11, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14798, file: !3, line: 365, column: 2)
!14817 = !DILocation(line: 365, column: 30, scope: !14816)
!14818 = !DILocation(line: 365, column: 9, scope: !14816)
!14819 = !DILocation(line: 365, column: 7, scope: !14816)
!14820 = !DILocation(line: 365, column: 35, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 365, column: 2)
!14822 = !DILocation(line: 365, column: 37, scope: !14821)
!14823 = !DILocation(line: 365, column: 2, scope: !14816)
!14824 = !DILocalVariable(name: "fe", scope: !14825, file: !3, line: 366, type: !7684)
!14825 = distinct !DILexicalBlock(scope: !14821, file: !3, line: 365, column: 48)
!14826 = !DILocation(line: 366, column: 31, scope: !14825)
!14827 = !DILocation(line: 366, column: 37, scope: !14825)
!14828 = !DILocation(line: 366, column: 51, scope: !14825)
!14829 = !DILocation(line: 368, column: 7, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14825, file: !3, line: 368, column: 7)
!14831 = !DILocation(line: 368, column: 11, scope: !14830)
!14832 = !DILocation(line: 368, column: 16, scope: !14830)
!14833 = !DILocation(line: 368, column: 22, scope: !14830)
!14834 = !DILocation(line: 368, column: 25, scope: !14830)
!14835 = !DILocation(line: 368, column: 29, scope: !14830)
!14836 = !DILocation(line: 368, column: 37, scope: !14830)
!14837 = !DILocation(line: 368, column: 43, scope: !14830)
!14838 = !DILocation(line: 368, column: 47, scope: !14830)
!14839 = !DILocation(line: 368, column: 34, scope: !14830)
!14840 = !DILocation(line: 368, column: 7, scope: !14825)
!14841 = !DILocation(line: 369, column: 4, scope: !14830)
!14842 = !DILocation(line: 371, column: 7, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14825, file: !3, line: 371, column: 7)
!14844 = !DILocation(line: 371, column: 11, scope: !14843)
!14845 = !DILocation(line: 371, column: 18, scope: !14843)
!14846 = !DILocation(line: 371, column: 24, scope: !14843)
!14847 = !DILocation(line: 371, column: 27, scope: !14843)
!14848 = !DILocation(line: 371, column: 31, scope: !14843)
!14849 = !DILocation(line: 371, column: 41, scope: !14843)
!14850 = !DILocation(line: 371, column: 38, scope: !14843)
!14851 = !DILocation(line: 371, column: 7, scope: !14825)
!14852 = !DILocation(line: 372, column: 4, scope: !14843)
!14853 = !DILocation(line: 375, column: 8, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14825, file: !3, line: 375, column: 7)
!14855 = !DILocation(line: 375, column: 16, scope: !14854)
!14856 = !DILocation(line: 375, column: 19, scope: !14854)
!14857 = !DILocation(line: 375, column: 23, scope: !14854)
!14858 = !DILocation(line: 375, column: 29, scope: !14854)
!14859 = !DILocation(line: 375, column: 7, scope: !14825)
!14860 = !DILocation(line: 376, column: 36, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 375, column: 40)
!14862 = !DILocation(line: 376, column: 40, scope: !14861)
!14863 = !DILocation(line: 376, column: 46, scope: !14861)
!14864 = !DILocation(line: 376, column: 33, scope: !14861)
!14865 = !DILocation(line: 376, column: 57, scope: !14861)
!14866 = !DILocation(line: 376, column: 4, scope: !14861)
!14867 = !DILocation(line: 376, column: 10, scope: !14861)
!14868 = !DILocation(line: 376, column: 28, scope: !14861)
!14869 = !DILocation(line: 377, column: 4, scope: !14861)
!14870 = !DILocation(line: 379, column: 12, scope: !14861)
!14871 = !DILocation(line: 380, column: 3, scope: !14861)
!14872 = !DILocation(line: 383, column: 7, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14825, file: !3, line: 383, column: 7)
!14874 = !DILocation(line: 383, column: 11, scope: !14873)
!14875 = !DILocation(line: 383, column: 17, scope: !14873)
!14876 = !DILocation(line: 383, column: 7, scope: !14825)
!14877 = !DILocation(line: 384, column: 19, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14873, file: !3, line: 383, column: 25)
!14879 = !DILocation(line: 384, column: 23, scope: !14878)
!14880 = !DILocation(line: 384, column: 29, scope: !14878)
!14881 = !DILocation(line: 384, column: 4, scope: !14878)
!14882 = !DILocation(line: 384, column: 10, scope: !14878)
!14883 = !DILocation(line: 384, column: 16, scope: !14878)
!14884 = !DILocation(line: 385, column: 4, scope: !14878)
!14885 = !DILocation(line: 388, column: 3, scope: !14878)
!14886 = !DILocation(line: 389, column: 2, scope: !14825)
!14887 = !DILocation(line: 365, column: 44, scope: !14821)
!14888 = !DILocation(line: 365, column: 2, scope: !14821)
!14889 = distinct !{!14889, !14823, !14890}
!14890 = !DILocation(line: 389, column: 2, scope: !14816)
!14891 = !DILocation(line: 390, column: 1, scope: !14798)
!14892 = !DILocalVariable(name: "host", arg: 1, scope: !7115, file: !3, line: 5251, type: !6675)
!14893 = !DILocation(line: 5251, column: 50, scope: !7115)
!14894 = !DILocalVariable(name: "ap", scope: !7115, file: !3, line: 5253, type: !1005)
!14895 = !DILocation(line: 5253, column: 19, scope: !7115)
!14896 = !DILocation(line: 5257, column: 7, scope: !7115)
!14897 = !DILocation(line: 5257, column: 5, scope: !7115)
!14898 = !DILocation(line: 5258, column: 7, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 5258, column: 6)
!14900 = !DILocation(line: 5258, column: 6, scope: !7115)
!14901 = !DILocation(line: 5259, column: 3, scope: !14899)
!14902 = !DILocation(line: 5261, column: 2, scope: !7115)
!14903 = !DILocation(line: 5261, column: 6, scope: !7115)
!14904 = !DILocation(line: 5261, column: 13, scope: !7115)
!14905 = !DILocation(line: 5262, column: 14, scope: !7115)
!14906 = !DILocation(line: 5262, column: 20, scope: !7115)
!14907 = !DILocation(line: 5262, column: 2, scope: !7115)
!14908 = !DILocation(line: 5262, column: 6, scope: !7115)
!14909 = !DILocation(line: 5262, column: 11, scope: !7115)
!14910 = !DILocation(line: 5263, column: 2, scope: !7115)
!14911 = !DILocation(line: 5263, column: 6, scope: !7115)
!14912 = !DILocation(line: 5263, column: 15, scope: !7115)
!14913 = !DILocation(line: 5264, column: 2, scope: !7115)
!14914 = !DILocation(line: 5264, column: 6, scope: !7115)
!14915 = !DILocation(line: 5264, column: 20, scope: !7115)
!14916 = !DILocation(line: 5265, column: 13, scope: !7115)
!14917 = !DILocation(line: 5265, column: 2, scope: !7115)
!14918 = !DILocation(line: 5265, column: 6, scope: !7115)
!14919 = !DILocation(line: 5265, column: 11, scope: !7115)
!14920 = !DILocation(line: 5266, column: 12, scope: !7115)
!14921 = !DILocation(line: 5266, column: 18, scope: !7115)
!14922 = !DILocation(line: 5266, column: 2, scope: !7115)
!14923 = !DILocation(line: 5266, column: 6, scope: !7115)
!14924 = !DILocation(line: 5266, column: 10, scope: !7115)
!14925 = !DILocation(line: 5274, column: 2, scope: !7115)
!14926 = !DILocation(line: 5274, column: 6, scope: !7115)
!14927 = !DILocation(line: 5274, column: 17, scope: !7115)
!14928 = !DILocation(line: 5277, column: 2, scope: !7115)
!14929 = !DILocation(line: 5277, column: 2, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 5277, column: 2)
!14931 = !DILocation(line: 5278, column: 2, scope: !7115)
!14932 = !DILocation(line: 5278, column: 2, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 5278, column: 2)
!14934 = !DILocation(line: 5278, column: 2, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14933, file: !3, line: 5278, column: 2)
!14936 = !DILocation(line: 5279, column: 2, scope: !7115)
!14937 = !DILocation(line: 5279, column: 2, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 5279, column: 2)
!14939 = !DILocation(line: 5280, column: 18, scope: !7115)
!14940 = !DILocation(line: 5280, column: 22, scope: !7115)
!14941 = !DILocation(line: 5280, column: 2, scope: !7115)
!14942 = !DILocation(line: 5281, column: 2, scope: !7115)
!14943 = !DILocation(line: 5281, column: 2, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 5281, column: 2)
!14945 = !DILocation(line: 5282, column: 2, scope: !7115)
!14946 = !DILocation(line: 5283, column: 2, scope: !7115)
!14947 = !DILocation(line: 5286, column: 2, scope: !7115)
!14948 = !DILocation(line: 5286, column: 6, scope: !7115)
!14949 = !DILocation(line: 5286, column: 10, scope: !7115)
!14950 = !DILocation(line: 5288, column: 16, scope: !7115)
!14951 = !DILocation(line: 5288, column: 21, scope: !7115)
!14952 = !DILocation(line: 5288, column: 25, scope: !7115)
!14953 = !DILocation(line: 5288, column: 2, scope: !7115)
!14954 = !DILocation(line: 5294, column: 20, scope: !7115)
!14955 = !DILocation(line: 5294, column: 2, scope: !7115)
!14956 = !DILocation(line: 5296, column: 9, scope: !7115)
!14957 = !DILocation(line: 5296, column: 2, scope: !7115)
!14958 = !DILocation(line: 5297, column: 1, scope: !7115)
!14959 = distinct !DISubprogram(name: "kzalloc", scope: !969, file: !969, line: 662, type: !14960, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14960 = !DISubroutineType(types: !14961)
!14961 = !{!991, !1645, !992}
!14962 = !DILocalVariable(name: "s", arg: 1, scope: !14963, file: !969, line: 445, type: !3623)
!14963 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !969, file: !969, line: 445, type: !14964, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14964 = !DISubroutineType(types: !14965)
!14965 = !{!991, !3623, !992, !1645}
!14966 = !DILocation(line: 445, column: 72, scope: !14963, inlinedAt: !14967)
!14967 = distinct !DILocation(line: 552, column: 10, scope: !14968, inlinedAt: !14971)
!14968 = distinct !DILexicalBlock(scope: !14969, file: !969, line: 540, column: 34)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !969, line: 540, column: 6)
!14970 = distinct !DISubprogram(name: "kmalloc", scope: !969, file: !969, line: 538, type: !14960, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14971 = distinct !DILocation(line: 664, column: 9, scope: !14959)
!14972 = !DILocalVariable(name: "flags", arg: 2, scope: !14963, file: !969, line: 446, type: !992)
!14973 = !DILocation(line: 446, column: 9, scope: !14963, inlinedAt: !14967)
!14974 = !DILocalVariable(name: "size", arg: 3, scope: !14963, file: !969, line: 446, type: !1645)
!14975 = !DILocation(line: 446, column: 23, scope: !14963, inlinedAt: !14967)
!14976 = !DILocalVariable(name: "ret", scope: !14963, file: !969, line: 448, type: !991)
!14977 = !DILocation(line: 448, column: 8, scope: !14963, inlinedAt: !14967)
!14978 = !DILocalVariable(name: "flags", arg: 1, scope: !14979, file: !969, line: 318, type: !992)
!14979 = distinct !DISubprogram(name: "kmalloc_type", scope: !969, file: !969, line: 318, type: !14980, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!968, !992}
!14982 = !DILocation(line: 318, column: 67, scope: !14979, inlinedAt: !14983)
!14983 = distinct !DILocation(line: 553, column: 20, scope: !14968, inlinedAt: !14971)
!14984 = !DILocalVariable(name: "size", arg: 1, scope: !14985, file: !969, line: 346, type: !1645)
!14985 = distinct !DISubprogram(name: "kmalloc_index", scope: !969, file: !969, line: 346, type: !14986, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14986 = !DISubroutineType(types: !14987)
!14987 = !{!7, !1645}
!14988 = !DILocation(line: 346, column: 58, scope: !14985, inlinedAt: !14989)
!14989 = distinct !DILocation(line: 547, column: 11, scope: !14968, inlinedAt: !14971)
!14990 = !DILocalVariable(name: "size", arg: 1, scope: !14991, file: !969, line: 472, type: !1645)
!14991 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !969, file: !969, line: 472, type: !14992, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14992 = !DISubroutineType(types: !14993)
!14993 = !{!991, !1645, !992, !7}
!14994 = !DILocation(line: 472, column: 28, scope: !14991, inlinedAt: !14995)
!14995 = distinct !DILocation(line: 481, column: 9, scope: !14996, inlinedAt: !14997)
!14996 = distinct !DISubprogram(name: "kmalloc_large", scope: !969, file: !969, line: 478, type: !14960, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!14997 = distinct !DILocation(line: 545, column: 11, scope: !14998, inlinedAt: !14971)
!14998 = distinct !DILexicalBlock(scope: !14968, file: !969, line: 544, column: 7)
!14999 = !DILocalVariable(name: "flags", arg: 2, scope: !14991, file: !969, line: 472, type: !992)
!15000 = !DILocation(line: 472, column: 40, scope: !14991, inlinedAt: !14995)
!15001 = !DILocalVariable(name: "order", arg: 3, scope: !14991, file: !969, line: 472, type: !7)
!15002 = !DILocation(line: 472, column: 60, scope: !14991, inlinedAt: !14995)
!15003 = !DILocalVariable(name: "size", arg: 1, scope: !14996, file: !969, line: 478, type: !1645)
!15004 = !DILocation(line: 478, column: 51, scope: !14996, inlinedAt: !14997)
!15005 = !DILocalVariable(name: "flags", arg: 2, scope: !14996, file: !969, line: 478, type: !992)
!15006 = !DILocation(line: 478, column: 63, scope: !14996, inlinedAt: !14997)
!15007 = !DILocalVariable(name: "order", scope: !14996, file: !969, line: 480, type: !7)
!15008 = !DILocation(line: 480, column: 15, scope: !14996, inlinedAt: !14997)
!15009 = !DILocalVariable(name: "size", arg: 1, scope: !14970, file: !969, line: 538, type: !1645)
!15010 = !DILocation(line: 538, column: 45, scope: !14970, inlinedAt: !14971)
!15011 = !DILocalVariable(name: "flags", arg: 2, scope: !14970, file: !969, line: 538, type: !992)
!15012 = !DILocation(line: 538, column: 57, scope: !14970, inlinedAt: !14971)
!15013 = !DILocalVariable(name: "index", scope: !14968, file: !969, line: 542, type: !7)
!15014 = !DILocation(line: 542, column: 16, scope: !14968, inlinedAt: !14971)
!15015 = !DILocalVariable(name: "size", arg: 1, scope: !14959, file: !969, line: 662, type: !1645)
!15016 = !DILocation(line: 662, column: 36, scope: !14959)
!15017 = !DILocalVariable(name: "flags", arg: 2, scope: !14959, file: !969, line: 662, type: !992)
!15018 = !DILocation(line: 662, column: 48, scope: !14959)
!15019 = !DILocation(line: 664, column: 17, scope: !14959)
!15020 = !DILocation(line: 664, column: 23, scope: !14959)
!15021 = !DILocation(line: 664, column: 29, scope: !14959)
!15022 = !DILocation(line: 540, column: 27, scope: !14969, inlinedAt: !14971)
!15023 = !DILocation(line: 540, column: 6, scope: !14969, inlinedAt: !14971)
!15024 = !DILocation(line: 540, column: 6, scope: !14970, inlinedAt: !14971)
!15025 = !DILocation(line: 544, column: 7, scope: !14998, inlinedAt: !14971)
!15026 = !DILocation(line: 544, column: 12, scope: !14998, inlinedAt: !14971)
!15027 = !DILocation(line: 544, column: 7, scope: !14968, inlinedAt: !14971)
!15028 = !DILocation(line: 545, column: 25, scope: !14998, inlinedAt: !14971)
!15029 = !DILocation(line: 545, column: 31, scope: !14998, inlinedAt: !14971)
!15030 = !DILocation(line: 480, column: 33, scope: !14996, inlinedAt: !14997)
!15031 = !DILocation(line: 480, column: 23, scope: !14996, inlinedAt: !14997)
!15032 = !DILocation(line: 481, column: 29, scope: !14996, inlinedAt: !14997)
!15033 = !DILocation(line: 481, column: 35, scope: !14996, inlinedAt: !14997)
!15034 = !DILocation(line: 481, column: 42, scope: !14996, inlinedAt: !14997)
!15035 = !DILocation(line: 474, column: 23, scope: !14991, inlinedAt: !14995)
!15036 = !DILocation(line: 474, column: 29, scope: !14991, inlinedAt: !14995)
!15037 = !DILocation(line: 474, column: 36, scope: !14991, inlinedAt: !14995)
!15038 = !DILocation(line: 474, column: 9, scope: !14991, inlinedAt: !14995)
!15039 = !DILocation(line: 545, column: 4, scope: !14998, inlinedAt: !14971)
!15040 = !DILocation(line: 547, column: 25, scope: !14968, inlinedAt: !14971)
!15041 = !DILocation(line: 348, column: 7, scope: !15042, inlinedAt: !14989)
!15042 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 348, column: 6)
!15043 = !DILocation(line: 348, column: 6, scope: !14985, inlinedAt: !14989)
!15044 = !DILocation(line: 349, column: 3, scope: !15042, inlinedAt: !14989)
!15045 = !DILocation(line: 351, column: 6, scope: !15046, inlinedAt: !14989)
!15046 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 351, column: 6)
!15047 = !DILocation(line: 351, column: 11, scope: !15046, inlinedAt: !14989)
!15048 = !DILocation(line: 351, column: 6, scope: !14985, inlinedAt: !14989)
!15049 = !DILocation(line: 352, column: 3, scope: !15046, inlinedAt: !14989)
!15050 = !DILocation(line: 354, column: 32, scope: !15051, inlinedAt: !14989)
!15051 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 354, column: 6)
!15052 = !DILocation(line: 354, column: 37, scope: !15051, inlinedAt: !14989)
!15053 = !DILocation(line: 354, column: 42, scope: !15051, inlinedAt: !14989)
!15054 = !DILocation(line: 354, column: 45, scope: !15051, inlinedAt: !14989)
!15055 = !DILocation(line: 354, column: 50, scope: !15051, inlinedAt: !14989)
!15056 = !DILocation(line: 354, column: 6, scope: !14985, inlinedAt: !14989)
!15057 = !DILocation(line: 355, column: 3, scope: !15051, inlinedAt: !14989)
!15058 = !DILocation(line: 356, column: 32, scope: !15059, inlinedAt: !14989)
!15059 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 356, column: 6)
!15060 = !DILocation(line: 356, column: 37, scope: !15059, inlinedAt: !14989)
!15061 = !DILocation(line: 356, column: 43, scope: !15059, inlinedAt: !14989)
!15062 = !DILocation(line: 356, column: 46, scope: !15059, inlinedAt: !14989)
!15063 = !DILocation(line: 356, column: 51, scope: !15059, inlinedAt: !14989)
!15064 = !DILocation(line: 356, column: 6, scope: !14985, inlinedAt: !14989)
!15065 = !DILocation(line: 357, column: 3, scope: !15059, inlinedAt: !14989)
!15066 = !DILocation(line: 358, column: 6, scope: !15067, inlinedAt: !14989)
!15067 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 358, column: 6)
!15068 = !DILocation(line: 358, column: 11, scope: !15067, inlinedAt: !14989)
!15069 = !DILocation(line: 358, column: 6, scope: !14985, inlinedAt: !14989)
!15070 = !DILocation(line: 358, column: 26, scope: !15067, inlinedAt: !14989)
!15071 = !DILocation(line: 359, column: 6, scope: !15072, inlinedAt: !14989)
!15072 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 359, column: 6)
!15073 = !DILocation(line: 359, column: 11, scope: !15072, inlinedAt: !14989)
!15074 = !DILocation(line: 359, column: 6, scope: !14985, inlinedAt: !14989)
!15075 = !DILocation(line: 359, column: 26, scope: !15072, inlinedAt: !14989)
!15076 = !DILocation(line: 360, column: 6, scope: !15077, inlinedAt: !14989)
!15077 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 360, column: 6)
!15078 = !DILocation(line: 360, column: 11, scope: !15077, inlinedAt: !14989)
!15079 = !DILocation(line: 360, column: 6, scope: !14985, inlinedAt: !14989)
!15080 = !DILocation(line: 360, column: 26, scope: !15077, inlinedAt: !14989)
!15081 = !DILocation(line: 361, column: 6, scope: !15082, inlinedAt: !14989)
!15082 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 361, column: 6)
!15083 = !DILocation(line: 361, column: 11, scope: !15082, inlinedAt: !14989)
!15084 = !DILocation(line: 361, column: 6, scope: !14985, inlinedAt: !14989)
!15085 = !DILocation(line: 361, column: 26, scope: !15082, inlinedAt: !14989)
!15086 = !DILocation(line: 362, column: 6, scope: !15087, inlinedAt: !14989)
!15087 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 362, column: 6)
!15088 = !DILocation(line: 362, column: 11, scope: !15087, inlinedAt: !14989)
!15089 = !DILocation(line: 362, column: 6, scope: !14985, inlinedAt: !14989)
!15090 = !DILocation(line: 362, column: 26, scope: !15087, inlinedAt: !14989)
!15091 = !DILocation(line: 363, column: 6, scope: !15092, inlinedAt: !14989)
!15092 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 363, column: 6)
!15093 = !DILocation(line: 363, column: 11, scope: !15092, inlinedAt: !14989)
!15094 = !DILocation(line: 363, column: 6, scope: !14985, inlinedAt: !14989)
!15095 = !DILocation(line: 363, column: 26, scope: !15092, inlinedAt: !14989)
!15096 = !DILocation(line: 364, column: 6, scope: !15097, inlinedAt: !14989)
!15097 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 364, column: 6)
!15098 = !DILocation(line: 364, column: 11, scope: !15097, inlinedAt: !14989)
!15099 = !DILocation(line: 364, column: 6, scope: !14985, inlinedAt: !14989)
!15100 = !DILocation(line: 364, column: 26, scope: !15097, inlinedAt: !14989)
!15101 = !DILocation(line: 365, column: 6, scope: !15102, inlinedAt: !14989)
!15102 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 365, column: 6)
!15103 = !DILocation(line: 365, column: 11, scope: !15102, inlinedAt: !14989)
!15104 = !DILocation(line: 365, column: 6, scope: !14985, inlinedAt: !14989)
!15105 = !DILocation(line: 365, column: 26, scope: !15102, inlinedAt: !14989)
!15106 = !DILocation(line: 366, column: 6, scope: !15107, inlinedAt: !14989)
!15107 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 366, column: 6)
!15108 = !DILocation(line: 366, column: 11, scope: !15107, inlinedAt: !14989)
!15109 = !DILocation(line: 366, column: 6, scope: !14985, inlinedAt: !14989)
!15110 = !DILocation(line: 366, column: 26, scope: !15107, inlinedAt: !14989)
!15111 = !DILocation(line: 367, column: 6, scope: !15112, inlinedAt: !14989)
!15112 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 367, column: 6)
!15113 = !DILocation(line: 367, column: 11, scope: !15112, inlinedAt: !14989)
!15114 = !DILocation(line: 367, column: 6, scope: !14985, inlinedAt: !14989)
!15115 = !DILocation(line: 367, column: 26, scope: !15112, inlinedAt: !14989)
!15116 = !DILocation(line: 368, column: 6, scope: !15117, inlinedAt: !14989)
!15117 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 368, column: 6)
!15118 = !DILocation(line: 368, column: 11, scope: !15117, inlinedAt: !14989)
!15119 = !DILocation(line: 368, column: 6, scope: !14985, inlinedAt: !14989)
!15120 = !DILocation(line: 368, column: 26, scope: !15117, inlinedAt: !14989)
!15121 = !DILocation(line: 369, column: 6, scope: !15122, inlinedAt: !14989)
!15122 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 369, column: 6)
!15123 = !DILocation(line: 369, column: 11, scope: !15122, inlinedAt: !14989)
!15124 = !DILocation(line: 369, column: 6, scope: !14985, inlinedAt: !14989)
!15125 = !DILocation(line: 369, column: 26, scope: !15122, inlinedAt: !14989)
!15126 = !DILocation(line: 370, column: 6, scope: !15127, inlinedAt: !14989)
!15127 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 370, column: 6)
!15128 = !DILocation(line: 370, column: 11, scope: !15127, inlinedAt: !14989)
!15129 = !DILocation(line: 370, column: 6, scope: !14985, inlinedAt: !14989)
!15130 = !DILocation(line: 370, column: 26, scope: !15127, inlinedAt: !14989)
!15131 = !DILocation(line: 371, column: 6, scope: !15132, inlinedAt: !14989)
!15132 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 371, column: 6)
!15133 = !DILocation(line: 371, column: 11, scope: !15132, inlinedAt: !14989)
!15134 = !DILocation(line: 371, column: 6, scope: !14985, inlinedAt: !14989)
!15135 = !DILocation(line: 371, column: 26, scope: !15132, inlinedAt: !14989)
!15136 = !DILocation(line: 372, column: 6, scope: !15137, inlinedAt: !14989)
!15137 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 372, column: 6)
!15138 = !DILocation(line: 372, column: 11, scope: !15137, inlinedAt: !14989)
!15139 = !DILocation(line: 372, column: 6, scope: !14985, inlinedAt: !14989)
!15140 = !DILocation(line: 372, column: 26, scope: !15137, inlinedAt: !14989)
!15141 = !DILocation(line: 373, column: 6, scope: !15142, inlinedAt: !14989)
!15142 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 373, column: 6)
!15143 = !DILocation(line: 373, column: 11, scope: !15142, inlinedAt: !14989)
!15144 = !DILocation(line: 373, column: 6, scope: !14985, inlinedAt: !14989)
!15145 = !DILocation(line: 373, column: 26, scope: !15142, inlinedAt: !14989)
!15146 = !DILocation(line: 374, column: 6, scope: !15147, inlinedAt: !14989)
!15147 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 374, column: 6)
!15148 = !DILocation(line: 374, column: 11, scope: !15147, inlinedAt: !14989)
!15149 = !DILocation(line: 374, column: 6, scope: !14985, inlinedAt: !14989)
!15150 = !DILocation(line: 374, column: 26, scope: !15147, inlinedAt: !14989)
!15151 = !DILocation(line: 375, column: 6, scope: !15152, inlinedAt: !14989)
!15152 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 375, column: 6)
!15153 = !DILocation(line: 375, column: 11, scope: !15152, inlinedAt: !14989)
!15154 = !DILocation(line: 375, column: 6, scope: !14985, inlinedAt: !14989)
!15155 = !DILocation(line: 375, column: 27, scope: !15152, inlinedAt: !14989)
!15156 = !DILocation(line: 376, column: 6, scope: !15157, inlinedAt: !14989)
!15157 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 376, column: 6)
!15158 = !DILocation(line: 376, column: 11, scope: !15157, inlinedAt: !14989)
!15159 = !DILocation(line: 376, column: 6, scope: !14985, inlinedAt: !14989)
!15160 = !DILocation(line: 376, column: 32, scope: !15157, inlinedAt: !14989)
!15161 = !DILocation(line: 377, column: 6, scope: !15162, inlinedAt: !14989)
!15162 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 377, column: 6)
!15163 = !DILocation(line: 377, column: 11, scope: !15162, inlinedAt: !14989)
!15164 = !DILocation(line: 377, column: 6, scope: !14985, inlinedAt: !14989)
!15165 = !DILocation(line: 377, column: 32, scope: !15162, inlinedAt: !14989)
!15166 = !DILocation(line: 378, column: 6, scope: !15167, inlinedAt: !14989)
!15167 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 378, column: 6)
!15168 = !DILocation(line: 378, column: 11, scope: !15167, inlinedAt: !14989)
!15169 = !DILocation(line: 378, column: 6, scope: !14985, inlinedAt: !14989)
!15170 = !DILocation(line: 378, column: 32, scope: !15167, inlinedAt: !14989)
!15171 = !DILocation(line: 379, column: 6, scope: !15172, inlinedAt: !14989)
!15172 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 379, column: 6)
!15173 = !DILocation(line: 379, column: 11, scope: !15172, inlinedAt: !14989)
!15174 = !DILocation(line: 379, column: 6, scope: !14985, inlinedAt: !14989)
!15175 = !DILocation(line: 379, column: 33, scope: !15172, inlinedAt: !14989)
!15176 = !DILocation(line: 380, column: 6, scope: !15177, inlinedAt: !14989)
!15177 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 380, column: 6)
!15178 = !DILocation(line: 380, column: 11, scope: !15177, inlinedAt: !14989)
!15179 = !DILocation(line: 380, column: 6, scope: !14985, inlinedAt: !14989)
!15180 = !DILocation(line: 380, column: 33, scope: !15177, inlinedAt: !14989)
!15181 = !DILocation(line: 381, column: 6, scope: !15182, inlinedAt: !14989)
!15182 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 381, column: 6)
!15183 = !DILocation(line: 381, column: 11, scope: !15182, inlinedAt: !14989)
!15184 = !DILocation(line: 381, column: 6, scope: !14985, inlinedAt: !14989)
!15185 = !DILocation(line: 381, column: 33, scope: !15182, inlinedAt: !14989)
!15186 = !DILocation(line: 382, column: 2, scope: !15187, inlinedAt: !14989)
!15187 = distinct !DILexicalBlock(scope: !15188, file: !969, line: 382, column: 2)
!15188 = distinct !DILexicalBlock(scope: !14985, file: !969, line: 382, column: 2)
!15189 = !{i32 -2143112094, i32 -2143112065, i32 -2143112019, i32 -2143111961, i32 -2143111907, i32 -2143111853, i32 -2143111798, i32 -2143111767}
!15190 = !DILocation(line: 382, column: 2, scope: !15191, inlinedAt: !14989)
!15191 = distinct !DILexicalBlock(scope: !15192, file: !969, line: 382, column: 2)
!15192 = distinct !DILexicalBlock(scope: !15188, file: !969, line: 382, column: 2)
!15193 = !{i32 -2143111324, i32 -2143111317, i32 -2143111263, i32 -2143111232, i32 -2143111202}
!15194 = !DILocation(line: 382, column: 2, scope: !15192, inlinedAt: !14989)
!15195 = !DILocation(line: 386, column: 1, scope: !14985, inlinedAt: !14989)
!15196 = !DILocation(line: 547, column: 9, scope: !14968, inlinedAt: !14971)
!15197 = !DILocation(line: 549, column: 8, scope: !15198, inlinedAt: !14971)
!15198 = distinct !DILexicalBlock(scope: !14968, file: !969, line: 549, column: 7)
!15199 = !DILocation(line: 549, column: 7, scope: !14968, inlinedAt: !14971)
!15200 = !DILocation(line: 550, column: 4, scope: !15198, inlinedAt: !14971)
!15201 = !DILocation(line: 553, column: 33, scope: !14968, inlinedAt: !14971)
!15202 = !DILocation(line: 325, column: 6, scope: !15203, inlinedAt: !14983)
!15203 = distinct !DILexicalBlock(scope: !14979, file: !969, line: 325, column: 6)
!15204 = !DILocation(line: 325, column: 6, scope: !14979, inlinedAt: !14983)
!15205 = !DILocation(line: 326, column: 3, scope: !15203, inlinedAt: !14983)
!15206 = !DILocation(line: 332, column: 9, scope: !14979, inlinedAt: !14983)
!15207 = !DILocation(line: 332, column: 15, scope: !14979, inlinedAt: !14983)
!15208 = !DILocation(line: 332, column: 2, scope: !14979, inlinedAt: !14983)
!15209 = !DILocation(line: 336, column: 1, scope: !14979, inlinedAt: !14983)
!15210 = !DILocation(line: 553, column: 5, scope: !14968, inlinedAt: !14971)
!15211 = !DILocation(line: 553, column: 41, scope: !14968, inlinedAt: !14971)
!15212 = !DILocation(line: 554, column: 5, scope: !14968, inlinedAt: !14971)
!15213 = !DILocation(line: 554, column: 12, scope: !14968, inlinedAt: !14971)
!15214 = !DILocation(line: 448, column: 31, scope: !14963, inlinedAt: !14967)
!15215 = !DILocation(line: 448, column: 34, scope: !14963, inlinedAt: !14967)
!15216 = !DILocation(line: 448, column: 14, scope: !14963, inlinedAt: !14967)
!15217 = !DILocation(line: 450, column: 22, scope: !14963, inlinedAt: !14967)
!15218 = !DILocation(line: 450, column: 25, scope: !14963, inlinedAt: !14967)
!15219 = !DILocation(line: 450, column: 30, scope: !14963, inlinedAt: !14967)
!15220 = !DILocation(line: 450, column: 36, scope: !14963, inlinedAt: !14967)
!15221 = !DILocation(line: 450, column: 8, scope: !14963, inlinedAt: !14967)
!15222 = !DILocation(line: 450, column: 6, scope: !14963, inlinedAt: !14967)
!15223 = !DILocation(line: 451, column: 9, scope: !14963, inlinedAt: !14967)
!15224 = !DILocation(line: 552, column: 3, scope: !14968, inlinedAt: !14971)
!15225 = !DILocation(line: 557, column: 19, scope: !14970, inlinedAt: !14971)
!15226 = !DILocation(line: 557, column: 25, scope: !14970, inlinedAt: !14971)
!15227 = !DILocation(line: 557, column: 9, scope: !14970, inlinedAt: !14971)
!15228 = !DILocation(line: 557, column: 2, scope: !14970, inlinedAt: !14971)
!15229 = !DILocation(line: 558, column: 1, scope: !14970, inlinedAt: !14971)
!15230 = !DILocation(line: 664, column: 2, scope: !14959)
!15231 = distinct !DISubprogram(name: "__init_work", scope: !930, file: !930, line: 215, type: !15232, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15232 = !DISubroutineType(types: !15233)
!15233 = !{null, !2256, !223}
!15234 = !DILocalVariable(name: "work", arg: 1, scope: !15231, file: !930, line: 215, type: !2256)
!15235 = !DILocation(line: 215, column: 52, scope: !15231)
!15236 = !DILocalVariable(name: "onstack", arg: 2, scope: !15231, file: !930, line: 215, type: !223)
!15237 = !DILocation(line: 215, column: 62, scope: !15231)
!15238 = !DILocation(line: 215, column: 73, scope: !15231)
!15239 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !15240, file: !15240, line: 33, type: !15241, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15240 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!15241 = !DISubroutineType(types: !15242)
!15242 = !{null, !1016}
!15243 = !DILocalVariable(name: "list", arg: 1, scope: !15239, file: !15240, line: 33, type: !1016)
!15244 = !DILocation(line: 33, column: 53, scope: !15239)
!15245 = !DILocation(line: 35, column: 2, scope: !15239)
!15246 = !DILocation(line: 35, column: 2, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15239, file: !15240, line: 35, column: 2)
!15248 = !DILocation(line: 35, column: 2, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15247, file: !15240, line: 35, column: 2)
!15250 = !DILocation(line: 35, column: 2, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15247, file: !15240, line: 35, column: 2)
!15252 = !DILocation(line: 36, column: 15, scope: !15239)
!15253 = !DILocation(line: 36, column: 2, scope: !15239)
!15254 = !DILocation(line: 36, column: 8, scope: !15239)
!15255 = !DILocation(line: 36, column: 13, scope: !15239)
!15256 = !DILocation(line: 37, column: 1, scope: !15239)
!15257 = !DILocalVariable(name: "x", arg: 1, scope: !7264, file: !2308, line: 85, type: !2306)
!15258 = !DILocation(line: 85, column: 57, scope: !7264)
!15259 = !DILocation(line: 87, column: 2, scope: !7264)
!15260 = !DILocation(line: 87, column: 5, scope: !7264)
!15261 = !DILocation(line: 87, column: 10, scope: !7264)
!15262 = !DILocation(line: 88, column: 2, scope: !7264)
!15263 = !DILocation(line: 88, column: 2, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !7264, file: !2308, line: 88, column: 2)
!15265 = !DILocation(line: 89, column: 1, scope: !7264)
!15266 = distinct !DISubprogram(name: "ata_host_get", scope: !3, file: !3, line: 5335, type: !6673, scopeLine: 5336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15267 = !DILocalVariable(name: "host", arg: 1, scope: !15266, file: !3, line: 5335, type: !6675)
!15268 = !DILocation(line: 5335, column: 36, scope: !15266)
!15269 = !DILocation(line: 5337, column: 12, scope: !15266)
!15270 = !DILocation(line: 5337, column: 18, scope: !15266)
!15271 = !DILocation(line: 5337, column: 2, scope: !15266)
!15272 = !DILocation(line: 5338, column: 1, scope: !15266)
!15273 = distinct !DISubprogram(name: "kref_get", scope: !2948, file: !2948, line: 43, type: !15274, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15274 = !DISubroutineType(types: !15275)
!15275 = !{null, !15276}
!15276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!15277 = !DILocalVariable(name: "kref", arg: 1, scope: !15273, file: !2948, line: 43, type: !15276)
!15278 = !DILocation(line: 43, column: 42, scope: !15273)
!15279 = !DILocation(line: 45, column: 16, scope: !15273)
!15280 = !DILocation(line: 45, column: 22, scope: !15273)
!15281 = !DILocation(line: 45, column: 2, scope: !15273)
!15282 = !DILocation(line: 46, column: 1, scope: !15273)
!15283 = distinct !DISubprogram(name: "ata_host_put", scope: !3, file: !3, line: 5340, type: !6673, scopeLine: 5341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15284 = !DILocalVariable(name: "host", arg: 1, scope: !15283, file: !3, line: 5340, type: !6675)
!15285 = !DILocation(line: 5340, column: 36, scope: !15283)
!15286 = !DILocation(line: 5342, column: 12, scope: !15283)
!15287 = !DILocation(line: 5342, column: 18, scope: !15283)
!15288 = !DILocation(line: 5342, column: 2, scope: !15283)
!15289 = !DILocation(line: 5343, column: 1, scope: !15283)
!15290 = distinct !DISubprogram(name: "kref_put", scope: !2948, file: !2948, line: 62, type: !15291, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15291 = !DISubroutineType(types: !15292)
!15292 = !{!223, !15276, !15293}
!15293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15274, size: 64)
!15294 = !DILocalVariable(name: "kref", arg: 1, scope: !15290, file: !2948, line: 62, type: !15276)
!15295 = !DILocation(line: 62, column: 41, scope: !15290)
!15296 = !DILocalVariable(name: "release", arg: 2, scope: !15290, file: !2948, line: 62, type: !15293)
!15297 = !DILocation(line: 62, column: 54, scope: !15290)
!15298 = !DILocation(line: 64, column: 29, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15290, file: !2948, line: 64, column: 6)
!15300 = !DILocation(line: 64, column: 35, scope: !15299)
!15301 = !DILocation(line: 64, column: 6, scope: !15299)
!15302 = !DILocation(line: 64, column: 6, scope: !15290)
!15303 = !DILocation(line: 65, column: 3, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15299, file: !2948, line: 64, column: 46)
!15305 = !DILocation(line: 65, column: 11, scope: !15304)
!15306 = !DILocation(line: 66, column: 3, scope: !15304)
!15307 = !DILocation(line: 68, column: 2, scope: !15290)
!15308 = !DILocation(line: 69, column: 1, scope: !15290)
!15309 = distinct !DISubprogram(name: "ata_host_release", scope: !3, file: !3, line: 5319, type: !15274, scopeLine: 5320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15310 = !DILocalVariable(name: "kref", arg: 1, scope: !15309, file: !3, line: 5319, type: !15276)
!15311 = !DILocation(line: 5319, column: 43, scope: !15309)
!15312 = !DILocalVariable(name: "host", scope: !15309, file: !3, line: 5321, type: !6675)
!15313 = !DILocation(line: 5321, column: 19, scope: !15309)
!15314 = !DILocalVariable(name: "__mptr", scope: !15315, file: !3, line: 5321, type: !991)
!15315 = distinct !DILexicalBlock(scope: !15309, file: !3, line: 5321, column: 26)
!15316 = !DILocation(line: 5321, column: 26, scope: !15315)
!15317 = !DILocation(line: 5321, column: 26, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15315, file: !3, line: 5321, column: 26)
!15319 = !DILocalVariable(name: "i", scope: !15309, file: !3, line: 5322, type: !223)
!15320 = !DILocation(line: 5322, column: 6, scope: !15309)
!15321 = !DILocation(line: 5324, column: 9, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15309, file: !3, line: 5324, column: 2)
!15323 = !DILocation(line: 5324, column: 7, scope: !15322)
!15324 = !DILocation(line: 5324, column: 14, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15322, file: !3, line: 5324, column: 2)
!15326 = !DILocation(line: 5324, column: 18, scope: !15325)
!15327 = !DILocation(line: 5324, column: 24, scope: !15325)
!15328 = !DILocation(line: 5324, column: 16, scope: !15325)
!15329 = !DILocation(line: 5324, column: 2, scope: !15322)
!15330 = !DILocalVariable(name: "ap", scope: !15331, file: !3, line: 5325, type: !1005)
!15331 = distinct !DILexicalBlock(scope: !15325, file: !3, line: 5324, column: 38)
!15332 = !DILocation(line: 5325, column: 20, scope: !15331)
!15333 = !DILocation(line: 5325, column: 25, scope: !15331)
!15334 = !DILocation(line: 5325, column: 31, scope: !15331)
!15335 = !DILocation(line: 5325, column: 37, scope: !15331)
!15336 = !DILocation(line: 5327, column: 9, scope: !15331)
!15337 = !DILocation(line: 5327, column: 13, scope: !15331)
!15338 = !DILocation(line: 5327, column: 3, scope: !15331)
!15339 = !DILocation(line: 5328, column: 9, scope: !15331)
!15340 = !DILocation(line: 5328, column: 13, scope: !15331)
!15341 = !DILocation(line: 5328, column: 3, scope: !15331)
!15342 = !DILocation(line: 5329, column: 9, scope: !15331)
!15343 = !DILocation(line: 5329, column: 3, scope: !15331)
!15344 = !DILocation(line: 5330, column: 3, scope: !15331)
!15345 = !DILocation(line: 5330, column: 9, scope: !15331)
!15346 = !DILocation(line: 5330, column: 15, scope: !15331)
!15347 = !DILocation(line: 5330, column: 18, scope: !15331)
!15348 = !DILocation(line: 5331, column: 2, scope: !15331)
!15349 = !DILocation(line: 5324, column: 34, scope: !15325)
!15350 = !DILocation(line: 5324, column: 2, scope: !15325)
!15351 = distinct !{!15351, !15329, !15352}
!15352 = !DILocation(line: 5331, column: 2, scope: !15322)
!15353 = !DILocation(line: 5332, column: 8, scope: !15309)
!15354 = !DILocation(line: 5332, column: 2, scope: !15309)
!15355 = !DILocation(line: 5333, column: 1, scope: !15309)
!15356 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !15357)
!15357 = distinct !DILocation(line: 5391, column: 2, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 5391, column: 2)
!15359 = !DILocalVariable(name: "dev", arg: 1, scope: !7122, file: !3, line: 5366, type: !2957)
!15360 = !DILocation(line: 5366, column: 48, scope: !7122)
!15361 = !DILocalVariable(name: "max_ports", arg: 2, scope: !7122, file: !3, line: 5366, type: !223)
!15362 = !DILocation(line: 5366, column: 57, scope: !7122)
!15363 = !DILocalVariable(name: "host", scope: !7122, file: !3, line: 5368, type: !6675)
!15364 = !DILocation(line: 5368, column: 19, scope: !7122)
!15365 = !DILocalVariable(name: "sz", scope: !7122, file: !3, line: 5369, type: !1645)
!15366 = !DILocation(line: 5369, column: 9, scope: !7122)
!15367 = !DILocalVariable(name: "i", scope: !7122, file: !3, line: 5370, type: !223)
!15368 = !DILocation(line: 5370, column: 6, scope: !7122)
!15369 = !DILocalVariable(name: "dr", scope: !7122, file: !3, line: 5371, type: !991)
!15370 = !DILocation(line: 5371, column: 8, scope: !7122)
!15371 = !DILocation(line: 5376, column: 34, scope: !7122)
!15372 = !DILocation(line: 5376, column: 44, scope: !7122)
!15373 = !DILocation(line: 5376, column: 33, scope: !7122)
!15374 = !DILocation(line: 5376, column: 49, scope: !7122)
!15375 = !DILocation(line: 5376, column: 31, scope: !7122)
!15376 = !DILocation(line: 5376, column: 5, scope: !7122)
!15377 = !DILocation(line: 5377, column: 17, scope: !7122)
!15378 = !DILocation(line: 5377, column: 9, scope: !7122)
!15379 = !DILocation(line: 5377, column: 7, scope: !7122)
!15380 = !DILocation(line: 5378, column: 7, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 5378, column: 6)
!15382 = !DILocation(line: 5378, column: 6, scope: !7122)
!15383 = !DILocation(line: 5379, column: 3, scope: !15381)
!15384 = !DILocation(line: 5381, column: 25, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 5381, column: 6)
!15386 = !DILocation(line: 5381, column: 7, scope: !15385)
!15387 = !DILocation(line: 5381, column: 6, scope: !7122)
!15388 = !DILocation(line: 5382, column: 3, scope: !15385)
!15389 = !DILocation(line: 5384, column: 7, scope: !7122)
!15390 = !DILocation(line: 5384, column: 5, scope: !7122)
!15391 = !DILocation(line: 5385, column: 7, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 5385, column: 6)
!15393 = !DILocation(line: 5385, column: 6, scope: !7122)
!15394 = !DILocation(line: 5386, column: 3, scope: !15392)
!15395 = !DILocation(line: 5388, column: 13, scope: !7122)
!15396 = !DILocation(line: 5388, column: 18, scope: !7122)
!15397 = !DILocation(line: 5388, column: 2, scope: !7122)
!15398 = !DILocation(line: 5389, column: 18, scope: !7122)
!15399 = !DILocation(line: 5389, column: 23, scope: !7122)
!15400 = !DILocation(line: 5389, column: 2, scope: !7122)
!15401 = !DILocation(line: 5391, column: 2, scope: !7122)
!15402 = !DILocation(line: 5391, column: 2, scope: !15358)
!15403 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !15357)
!15404 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !15357)
!15405 = !DILocation(line: 5392, column: 2, scope: !7122)
!15406 = !DILocation(line: 5392, column: 2, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 5392, column: 2)
!15408 = !DILocation(line: 5393, column: 14, scope: !7122)
!15409 = !DILocation(line: 5393, column: 2, scope: !7122)
!15410 = !DILocation(line: 5393, column: 8, scope: !7122)
!15411 = !DILocation(line: 5393, column: 12, scope: !7122)
!15412 = !DILocation(line: 5394, column: 18, scope: !7122)
!15413 = !DILocation(line: 5394, column: 2, scope: !7122)
!15414 = !DILocation(line: 5394, column: 8, scope: !7122)
!15415 = !DILocation(line: 5394, column: 16, scope: !7122)
!15416 = !DILocation(line: 5395, column: 13, scope: !7122)
!15417 = !DILocation(line: 5395, column: 19, scope: !7122)
!15418 = !DILocation(line: 5395, column: 2, scope: !7122)
!15419 = !DILocation(line: 5398, column: 9, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 5398, column: 2)
!15421 = !DILocation(line: 5398, column: 7, scope: !15420)
!15422 = !DILocation(line: 5398, column: 14, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15420, file: !3, line: 5398, column: 2)
!15424 = !DILocation(line: 5398, column: 18, scope: !15423)
!15425 = !DILocation(line: 5398, column: 16, scope: !15423)
!15426 = !DILocation(line: 5398, column: 2, scope: !15420)
!15427 = !DILocalVariable(name: "ap", scope: !15428, file: !3, line: 5399, type: !1005)
!15428 = distinct !DILexicalBlock(scope: !15423, file: !3, line: 5398, column: 34)
!15429 = !DILocation(line: 5399, column: 20, scope: !15428)
!15430 = !DILocation(line: 5401, column: 23, scope: !15428)
!15431 = !DILocation(line: 5401, column: 8, scope: !15428)
!15432 = !DILocation(line: 5401, column: 6, scope: !15428)
!15433 = !DILocation(line: 5402, column: 8, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15428, file: !3, line: 5402, column: 7)
!15435 = !DILocation(line: 5402, column: 7, scope: !15428)
!15436 = !DILocation(line: 5403, column: 4, scope: !15434)
!15437 = !DILocation(line: 5405, column: 17, scope: !15428)
!15438 = !DILocation(line: 5405, column: 3, scope: !15428)
!15439 = !DILocation(line: 5405, column: 7, scope: !15428)
!15440 = !DILocation(line: 5405, column: 15, scope: !15428)
!15441 = !DILocation(line: 5406, column: 20, scope: !15428)
!15442 = !DILocation(line: 5406, column: 3, scope: !15428)
!15443 = !DILocation(line: 5406, column: 9, scope: !15428)
!15444 = !DILocation(line: 5406, column: 15, scope: !15428)
!15445 = !DILocation(line: 5406, column: 18, scope: !15428)
!15446 = !DILocation(line: 5407, column: 2, scope: !15428)
!15447 = !DILocation(line: 5398, column: 30, scope: !15423)
!15448 = !DILocation(line: 5398, column: 2, scope: !15423)
!15449 = distinct !{!15449, !15426, !15450}
!15450 = !DILocation(line: 5407, column: 2, scope: !15420)
!15451 = !DILocation(line: 5409, column: 22, scope: !7122)
!15452 = !DILocation(line: 5409, column: 2, scope: !7122)
!15453 = !DILocation(line: 5410, column: 9, scope: !7122)
!15454 = !DILocation(line: 5410, column: 2, scope: !7122)
!15455 = !DILabel(scope: !7122, name: "err_out", file: !3, line: 5412)
!15456 = !DILocation(line: 5412, column: 2, scope: !7122)
!15457 = !DILocation(line: 5413, column: 23, scope: !7122)
!15458 = !DILocation(line: 5413, column: 2, scope: !7122)
!15459 = !DILabel(scope: !7122, name: "err_free", file: !3, line: 5414)
!15460 = !DILocation(line: 5414, column: 2, scope: !7122)
!15461 = !DILocation(line: 5415, column: 8, scope: !7122)
!15462 = !DILocation(line: 5415, column: 2, scope: !7122)
!15463 = !DILocation(line: 5416, column: 2, scope: !7122)
!15464 = !DILocation(line: 5417, column: 1, scope: !7122)
!15465 = distinct !DISubprogram(name: "devres_alloc", scope: !52, file: !52, line: 178, type: !15466, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15466 = !DISubroutineType(types: !15467)
!15467 = !{!991, !15468, !1645, !992}
!15468 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !52, line: 165, baseType: !15469)
!15469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15470, size: 64)
!15470 = !DISubroutineType(types: !15471)
!15471 = !{null, !2957, !991}
!15472 = !DILocalVariable(name: "release", arg: 1, scope: !15465, file: !52, line: 178, type: !15468)
!15473 = !DILocation(line: 178, column: 47, scope: !15465)
!15474 = !DILocalVariable(name: "size", arg: 2, scope: !15465, file: !52, line: 178, type: !1645)
!15475 = !DILocation(line: 178, column: 63, scope: !15465)
!15476 = !DILocalVariable(name: "gfp", arg: 3, scope: !15465, file: !52, line: 178, type: !992)
!15477 = !DILocation(line: 178, column: 75, scope: !15465)
!15478 = !DILocation(line: 180, column: 27, scope: !15465)
!15479 = !DILocation(line: 180, column: 36, scope: !15465)
!15480 = !DILocation(line: 180, column: 42, scope: !15465)
!15481 = !DILocation(line: 180, column: 9, scope: !15465)
!15482 = !DILocation(line: 180, column: 2, scope: !15465)
!15483 = distinct !DISubprogram(name: "ata_devres_release", scope: !3, file: !3, line: 5299, type: !15470, scopeLine: 5300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15484 = !DILocalVariable(name: "gendev", arg: 1, scope: !15483, file: !3, line: 5299, type: !2957)
!15485 = !DILocation(line: 5299, column: 47, scope: !15483)
!15486 = !DILocalVariable(name: "res", arg: 2, scope: !15483, file: !3, line: 5299, type: !991)
!15487 = !DILocation(line: 5299, column: 61, scope: !15483)
!15488 = !DILocalVariable(name: "host", scope: !15483, file: !3, line: 5301, type: !6675)
!15489 = !DILocation(line: 5301, column: 19, scope: !15483)
!15490 = !DILocation(line: 5301, column: 42, scope: !15483)
!15491 = !DILocation(line: 5301, column: 26, scope: !15483)
!15492 = !DILocalVariable(name: "i", scope: !15483, file: !3, line: 5302, type: !223)
!15493 = !DILocation(line: 5302, column: 6, scope: !15483)
!15494 = !DILocation(line: 5304, column: 9, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 5304, column: 2)
!15496 = !DILocation(line: 5304, column: 7, scope: !15495)
!15497 = !DILocation(line: 5304, column: 14, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15495, file: !3, line: 5304, column: 2)
!15499 = !DILocation(line: 5304, column: 18, scope: !15498)
!15500 = !DILocation(line: 5304, column: 24, scope: !15498)
!15501 = !DILocation(line: 5304, column: 16, scope: !15498)
!15502 = !DILocation(line: 5304, column: 2, scope: !15495)
!15503 = !DILocalVariable(name: "ap", scope: !15504, file: !3, line: 5305, type: !1005)
!15504 = distinct !DILexicalBlock(scope: !15498, file: !3, line: 5304, column: 38)
!15505 = !DILocation(line: 5305, column: 20, scope: !15504)
!15506 = !DILocation(line: 5305, column: 25, scope: !15504)
!15507 = !DILocation(line: 5305, column: 31, scope: !15504)
!15508 = !DILocation(line: 5305, column: 37, scope: !15504)
!15509 = !DILocation(line: 5307, column: 8, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15504, file: !3, line: 5307, column: 7)
!15511 = !DILocation(line: 5307, column: 7, scope: !15504)
!15512 = !DILocation(line: 5308, column: 4, scope: !15510)
!15513 = !DILocation(line: 5310, column: 7, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15504, file: !3, line: 5310, column: 7)
!15515 = !DILocation(line: 5310, column: 11, scope: !15514)
!15516 = !DILocation(line: 5310, column: 7, scope: !15504)
!15517 = !DILocation(line: 5311, column: 18, scope: !15514)
!15518 = !DILocation(line: 5311, column: 22, scope: !15514)
!15519 = !DILocation(line: 5311, column: 4, scope: !15514)
!15520 = !DILocation(line: 5313, column: 2, scope: !15504)
!15521 = !DILocation(line: 5304, column: 34, scope: !15498)
!15522 = !DILocation(line: 5304, column: 2, scope: !15498)
!15523 = distinct !{!15523, !15502, !15524}
!15524 = !DILocation(line: 5313, column: 2, scope: !15495)
!15525 = !DILocation(line: 5315, column: 18, scope: !15483)
!15526 = !DILocation(line: 5315, column: 2, scope: !15483)
!15527 = !DILocation(line: 5316, column: 15, scope: !15483)
!15528 = !DILocation(line: 5316, column: 2, scope: !15483)
!15529 = !DILocation(line: 5317, column: 1, scope: !15483)
!15530 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !52, file: !52, line: 660, type: !15470, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15531 = !DILocalVariable(name: "dev", arg: 1, scope: !15530, file: !52, line: 660, type: !2957)
!15532 = !DILocation(line: 660, column: 51, scope: !15530)
!15533 = !DILocalVariable(name: "data", arg: 2, scope: !15530, file: !52, line: 660, type: !991)
!15534 = !DILocation(line: 660, column: 62, scope: !15530)
!15535 = !DILocation(line: 662, column: 21, scope: !15530)
!15536 = !DILocation(line: 662, column: 2, scope: !15530)
!15537 = !DILocation(line: 662, column: 7, scope: !15530)
!15538 = !DILocation(line: 662, column: 19, scope: !15530)
!15539 = !DILocation(line: 663, column: 1, scope: !15530)
!15540 = distinct !DISubprogram(name: "kref_init", scope: !2948, file: !2948, line: 29, type: !15274, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15541 = !DILocalVariable(name: "kref", arg: 1, scope: !15540, file: !2948, line: 29, type: !15276)
!15542 = !DILocation(line: 29, column: 43, scope: !15540)
!15543 = !DILocation(line: 31, column: 16, scope: !15540)
!15544 = !DILocation(line: 31, column: 22, scope: !15540)
!15545 = !DILocation(line: 31, column: 2, scope: !15540)
!15546 = !DILocation(line: 32, column: 1, scope: !15540)
!15547 = distinct !DISubprogram(name: "ata_host_alloc_pinfo", scope: !3, file: !3, line: 5436, type: !15548, scopeLine: 5439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15548 = !DISubroutineType(types: !15549)
!15549 = !{!6675, !2957, !15550, !223}
!15550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15551, size: 64)
!15551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15552)
!15552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 64)
!15553 = !DILocalVariable(name: "dev", arg: 1, scope: !15547, file: !3, line: 5436, type: !2957)
!15554 = !DILocation(line: 5436, column: 54, scope: !15547)
!15555 = !DILocalVariable(name: "ppi", arg: 2, scope: !15547, file: !3, line: 5437, type: !15550)
!15556 = !DILocation(line: 5437, column: 48, scope: !15547)
!15557 = !DILocalVariable(name: "n_ports", arg: 3, scope: !15547, file: !3, line: 5438, type: !223)
!15558 = !DILocation(line: 5438, column: 15, scope: !15547)
!15559 = !DILocalVariable(name: "pi", scope: !15547, file: !3, line: 5440, type: !15552)
!15560 = !DILocation(line: 5440, column: 30, scope: !15547)
!15561 = !DILocalVariable(name: "host", scope: !15547, file: !3, line: 5441, type: !6675)
!15562 = !DILocation(line: 5441, column: 19, scope: !15547)
!15563 = !DILocalVariable(name: "i", scope: !15547, file: !3, line: 5442, type: !223)
!15564 = !DILocation(line: 5442, column: 6, scope: !15547)
!15565 = !DILocalVariable(name: "j", scope: !15547, file: !3, line: 5442, type: !223)
!15566 = !DILocation(line: 5442, column: 9, scope: !15547)
!15567 = !DILocation(line: 5444, column: 24, scope: !15547)
!15568 = !DILocation(line: 5444, column: 29, scope: !15547)
!15569 = !DILocation(line: 5444, column: 9, scope: !15547)
!15570 = !DILocation(line: 5444, column: 7, scope: !15547)
!15571 = !DILocation(line: 5445, column: 7, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15547, file: !3, line: 5445, column: 6)
!15573 = !DILocation(line: 5445, column: 6, scope: !15547)
!15574 = !DILocation(line: 5446, column: 3, scope: !15572)
!15575 = !DILocation(line: 5448, column: 9, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15547, file: !3, line: 5448, column: 2)
!15577 = !DILocation(line: 5448, column: 16, scope: !15576)
!15578 = !DILocation(line: 5448, column: 24, scope: !15576)
!15579 = !DILocation(line: 5448, column: 7, scope: !15576)
!15580 = !DILocation(line: 5448, column: 32, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15576, file: !3, line: 5448, column: 2)
!15582 = !DILocation(line: 5448, column: 36, scope: !15581)
!15583 = !DILocation(line: 5448, column: 42, scope: !15581)
!15584 = !DILocation(line: 5448, column: 34, scope: !15581)
!15585 = !DILocation(line: 5448, column: 2, scope: !15576)
!15586 = !DILocalVariable(name: "ap", scope: !15587, file: !3, line: 5449, type: !1005)
!15587 = distinct !DILexicalBlock(scope: !15581, file: !3, line: 5448, column: 56)
!15588 = !DILocation(line: 5449, column: 20, scope: !15587)
!15589 = !DILocation(line: 5449, column: 25, scope: !15587)
!15590 = !DILocation(line: 5449, column: 31, scope: !15587)
!15591 = !DILocation(line: 5449, column: 37, scope: !15587)
!15592 = !DILocation(line: 5451, column: 7, scope: !15593)
!15593 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 5451, column: 7)
!15594 = !DILocation(line: 5451, column: 11, scope: !15593)
!15595 = !DILocation(line: 5451, column: 7, scope: !15587)
!15596 = !DILocation(line: 5452, column: 9, scope: !15593)
!15597 = !DILocation(line: 5452, column: 14, scope: !15593)
!15598 = !DILocation(line: 5452, column: 7, scope: !15593)
!15599 = !DILocation(line: 5452, column: 4, scope: !15593)
!15600 = !DILocation(line: 5454, column: 18, scope: !15587)
!15601 = !DILocation(line: 5454, column: 22, scope: !15587)
!15602 = !DILocation(line: 5454, column: 3, scope: !15587)
!15603 = !DILocation(line: 5454, column: 7, scope: !15587)
!15604 = !DILocation(line: 5454, column: 16, scope: !15587)
!15605 = !DILocation(line: 5455, column: 20, scope: !15587)
!15606 = !DILocation(line: 5455, column: 24, scope: !15587)
!15607 = !DILocation(line: 5455, column: 3, scope: !15587)
!15608 = !DILocation(line: 5455, column: 7, scope: !15587)
!15609 = !DILocation(line: 5455, column: 18, scope: !15587)
!15610 = !DILocation(line: 5456, column: 19, scope: !15587)
!15611 = !DILocation(line: 5456, column: 23, scope: !15587)
!15612 = !DILocation(line: 5456, column: 3, scope: !15587)
!15613 = !DILocation(line: 5456, column: 7, scope: !15587)
!15614 = !DILocation(line: 5456, column: 17, scope: !15587)
!15615 = !DILocation(line: 5457, column: 16, scope: !15587)
!15616 = !DILocation(line: 5457, column: 20, scope: !15587)
!15617 = !DILocation(line: 5457, column: 3, scope: !15587)
!15618 = !DILocation(line: 5457, column: 7, scope: !15587)
!15619 = !DILocation(line: 5457, column: 13, scope: !15587)
!15620 = !DILocation(line: 5458, column: 21, scope: !15587)
!15621 = !DILocation(line: 5458, column: 25, scope: !15587)
!15622 = !DILocation(line: 5458, column: 3, scope: !15587)
!15623 = !DILocation(line: 5458, column: 7, scope: !15587)
!15624 = !DILocation(line: 5458, column: 12, scope: !15587)
!15625 = !DILocation(line: 5458, column: 18, scope: !15587)
!15626 = !DILocation(line: 5459, column: 13, scope: !15587)
!15627 = !DILocation(line: 5459, column: 17, scope: !15587)
!15628 = !DILocation(line: 5459, column: 3, scope: !15587)
!15629 = !DILocation(line: 5459, column: 7, scope: !15587)
!15630 = !DILocation(line: 5459, column: 11, scope: !15587)
!15631 = !DILocation(line: 5461, column: 8, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 5461, column: 7)
!15633 = !DILocation(line: 5461, column: 14, scope: !15632)
!15634 = !DILocation(line: 5461, column: 18, scope: !15632)
!15635 = !DILocation(line: 5461, column: 22, scope: !15632)
!15636 = !DILocation(line: 5461, column: 26, scope: !15632)
!15637 = !DILocation(line: 5461, column: 35, scope: !15632)
!15638 = !DILocation(line: 5461, column: 7, scope: !15587)
!15639 = !DILocation(line: 5462, column: 16, scope: !15632)
!15640 = !DILocation(line: 5462, column: 20, scope: !15632)
!15641 = !DILocation(line: 5462, column: 4, scope: !15632)
!15642 = !DILocation(line: 5462, column: 10, scope: !15632)
!15643 = !DILocation(line: 5462, column: 14, scope: !15632)
!15644 = !DILocation(line: 5463, column: 2, scope: !15587)
!15645 = !DILocation(line: 5448, column: 52, scope: !15581)
!15646 = !DILocation(line: 5448, column: 2, scope: !15581)
!15647 = distinct !{!15647, !15585, !15648}
!15648 = !DILocation(line: 5463, column: 2, scope: !15576)
!15649 = !DILocation(line: 5465, column: 9, scope: !15547)
!15650 = !DILocation(line: 5465, column: 2, scope: !15547)
!15651 = !DILocation(line: 5466, column: 1, scope: !15547)
!15652 = distinct !DISubprogram(name: "ata_host_start", scope: !3, file: !3, line: 5553, type: !15653, scopeLine: 5554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15653 = !DISubroutineType(types: !15654)
!15654 = !{!223, !6675}
!15655 = !DILocalVariable(name: "host", arg: 1, scope: !15652, file: !3, line: 5553, type: !6675)
!15656 = !DILocation(line: 5553, column: 37, scope: !15652)
!15657 = !DILocalVariable(name: "have_stop", scope: !15652, file: !3, line: 5555, type: !223)
!15658 = !DILocation(line: 5555, column: 6, scope: !15652)
!15659 = !DILocalVariable(name: "start_dr", scope: !15652, file: !3, line: 5556, type: !991)
!15660 = !DILocation(line: 5556, column: 8, scope: !15652)
!15661 = !DILocalVariable(name: "i", scope: !15652, file: !3, line: 5557, type: !223)
!15662 = !DILocation(line: 5557, column: 6, scope: !15652)
!15663 = !DILocalVariable(name: "rc", scope: !15652, file: !3, line: 5557, type: !223)
!15664 = !DILocation(line: 5557, column: 9, scope: !15652)
!15665 = !DILocation(line: 5559, column: 6, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 5559, column: 6)
!15667 = !DILocation(line: 5559, column: 12, scope: !15666)
!15668 = !DILocation(line: 5559, column: 18, scope: !15666)
!15669 = !DILocation(line: 5559, column: 6, scope: !15652)
!15670 = !DILocation(line: 5560, column: 3, scope: !15666)
!15671 = !DILocation(line: 5562, column: 24, scope: !15652)
!15672 = !DILocation(line: 5562, column: 30, scope: !15652)
!15673 = !DILocation(line: 5562, column: 2, scope: !15652)
!15674 = !DILocation(line: 5564, column: 9, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 5564, column: 2)
!15676 = !DILocation(line: 5564, column: 7, scope: !15675)
!15677 = !DILocation(line: 5564, column: 14, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 5564, column: 2)
!15679 = !DILocation(line: 5564, column: 18, scope: !15678)
!15680 = !DILocation(line: 5564, column: 24, scope: !15678)
!15681 = !DILocation(line: 5564, column: 16, scope: !15678)
!15682 = !DILocation(line: 5564, column: 2, scope: !15675)
!15683 = !DILocalVariable(name: "ap", scope: !15684, file: !3, line: 5565, type: !1005)
!15684 = distinct !DILexicalBlock(scope: !15678, file: !3, line: 5564, column: 38)
!15685 = !DILocation(line: 5565, column: 20, scope: !15684)
!15686 = !DILocation(line: 5565, column: 25, scope: !15684)
!15687 = !DILocation(line: 5565, column: 31, scope: !15684)
!15688 = !DILocation(line: 5565, column: 37, scope: !15684)
!15689 = !DILocation(line: 5567, column: 25, scope: !15684)
!15690 = !DILocation(line: 5567, column: 29, scope: !15684)
!15691 = !DILocation(line: 5567, column: 3, scope: !15684)
!15692 = !DILocation(line: 5569, column: 8, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15684, file: !3, line: 5569, column: 7)
!15694 = !DILocation(line: 5569, column: 14, scope: !15693)
!15695 = !DILocation(line: 5569, column: 18, scope: !15693)
!15696 = !DILocation(line: 5569, column: 40, scope: !15693)
!15697 = !DILocation(line: 5569, column: 22, scope: !15693)
!15698 = !DILocation(line: 5569, column: 7, scope: !15684)
!15699 = !DILocation(line: 5570, column: 16, scope: !15693)
!15700 = !DILocation(line: 5570, column: 20, scope: !15693)
!15701 = !DILocation(line: 5570, column: 4, scope: !15693)
!15702 = !DILocation(line: 5570, column: 10, scope: !15693)
!15703 = !DILocation(line: 5570, column: 14, scope: !15693)
!15704 = !DILocation(line: 5572, column: 7, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15684, file: !3, line: 5572, column: 7)
!15706 = !DILocation(line: 5572, column: 11, scope: !15705)
!15707 = !DILocation(line: 5572, column: 16, scope: !15705)
!15708 = !DILocation(line: 5572, column: 7, scope: !15684)
!15709 = !DILocation(line: 5573, column: 14, scope: !15705)
!15710 = !DILocation(line: 5573, column: 4, scope: !15705)
!15711 = !DILocation(line: 5574, column: 2, scope: !15684)
!15712 = !DILocation(line: 5564, column: 34, scope: !15678)
!15713 = !DILocation(line: 5564, column: 2, scope: !15678)
!15714 = distinct !{!15714, !15682, !15715}
!15715 = !DILocation(line: 5574, column: 2, scope: !15675)
!15716 = !DILocation(line: 5576, column: 6, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 5576, column: 6)
!15718 = !DILocation(line: 5576, column: 12, scope: !15717)
!15719 = !DILocation(line: 5576, column: 17, scope: !15717)
!15720 = !DILocation(line: 5576, column: 6, scope: !15652)
!15721 = !DILocation(line: 5577, column: 13, scope: !15717)
!15722 = !DILocation(line: 5577, column: 3, scope: !15717)
!15723 = !DILocation(line: 5579, column: 6, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 5579, column: 6)
!15725 = !DILocation(line: 5579, column: 6, scope: !15652)
!15726 = !DILocation(line: 5580, column: 14, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15724, file: !3, line: 5579, column: 17)
!15728 = !DILocation(line: 5580, column: 12, scope: !15727)
!15729 = !DILocation(line: 5581, column: 8, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15727, file: !3, line: 5581, column: 7)
!15731 = !DILocation(line: 5581, column: 7, scope: !15727)
!15732 = !DILocation(line: 5582, column: 4, scope: !15730)
!15733 = !DILocation(line: 5583, column: 2, scope: !15727)
!15734 = !DILocation(line: 5585, column: 9, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 5585, column: 2)
!15736 = !DILocation(line: 5585, column: 7, scope: !15735)
!15737 = !DILocation(line: 5585, column: 14, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15735, file: !3, line: 5585, column: 2)
!15739 = !DILocation(line: 5585, column: 18, scope: !15738)
!15740 = !DILocation(line: 5585, column: 24, scope: !15738)
!15741 = !DILocation(line: 5585, column: 16, scope: !15738)
!15742 = !DILocation(line: 5585, column: 2, scope: !15735)
!15743 = !DILocalVariable(name: "ap", scope: !15744, file: !3, line: 5586, type: !1005)
!15744 = distinct !DILexicalBlock(scope: !15738, file: !3, line: 5585, column: 38)
!15745 = !DILocation(line: 5586, column: 20, scope: !15744)
!15746 = !DILocation(line: 5586, column: 25, scope: !15744)
!15747 = !DILocation(line: 5586, column: 31, scope: !15744)
!15748 = !DILocation(line: 5586, column: 37, scope: !15744)
!15749 = !DILocation(line: 5588, column: 7, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15744, file: !3, line: 5588, column: 7)
!15751 = !DILocation(line: 5588, column: 11, scope: !15750)
!15752 = !DILocation(line: 5588, column: 16, scope: !15750)
!15753 = !DILocation(line: 5588, column: 7, scope: !15744)
!15754 = !DILocation(line: 5589, column: 9, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15750, file: !3, line: 5588, column: 28)
!15756 = !DILocation(line: 5589, column: 13, scope: !15755)
!15757 = !DILocation(line: 5589, column: 18, scope: !15755)
!15758 = !DILocation(line: 5589, column: 29, scope: !15755)
!15759 = !DILocation(line: 5589, column: 7, scope: !15755)
!15760 = !DILocation(line: 5590, column: 8, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15755, file: !3, line: 5590, column: 8)
!15762 = !DILocation(line: 5590, column: 8, scope: !15755)
!15763 = !DILocation(line: 5591, column: 9, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15765, file: !3, line: 5591, column: 9)
!15765 = distinct !DILexicalBlock(scope: !15761, file: !3, line: 5590, column: 12)
!15766 = !DILocation(line: 5591, column: 12, scope: !15764)
!15767 = !DILocation(line: 5591, column: 9, scope: !15765)
!15768 = !DILocation(line: 5592, column: 6, scope: !15764)
!15769 = !DILocation(line: 5595, column: 5, scope: !15765)
!15770 = !DILocation(line: 5597, column: 3, scope: !15755)
!15771 = !DILocation(line: 5598, column: 22, scope: !15744)
!15772 = !DILocation(line: 5598, column: 3, scope: !15744)
!15773 = !DILocation(line: 5599, column: 2, scope: !15744)
!15774 = !DILocation(line: 5585, column: 34, scope: !15738)
!15775 = !DILocation(line: 5585, column: 2, scope: !15738)
!15776 = distinct !{!15776, !15742, !15777}
!15777 = !DILocation(line: 5599, column: 2, scope: !15735)
!15778 = !DILocation(line: 5601, column: 6, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 5601, column: 6)
!15780 = !DILocation(line: 5601, column: 6, scope: !15652)
!15781 = !DILocation(line: 5602, column: 14, scope: !15779)
!15782 = !DILocation(line: 5602, column: 20, scope: !15779)
!15783 = !DILocation(line: 5602, column: 25, scope: !15779)
!15784 = !DILocation(line: 5602, column: 3, scope: !15779)
!15785 = !DILocation(line: 5603, column: 2, scope: !15652)
!15786 = !DILocation(line: 5603, column: 8, scope: !15652)
!15787 = !DILocation(line: 5603, column: 14, scope: !15652)
!15788 = !DILocation(line: 5604, column: 2, scope: !15652)
!15789 = !DILabel(scope: !15652, name: "err_out", file: !3, line: 5606)
!15790 = !DILocation(line: 5606, column: 2, scope: !15652)
!15791 = !DILocation(line: 5607, column: 2, scope: !15652)
!15792 = !DILocation(line: 5607, column: 9, scope: !15652)
!15793 = !DILocation(line: 5607, column: 13, scope: !15652)
!15794 = !DILocalVariable(name: "ap", scope: !15795, file: !3, line: 5608, type: !1005)
!15795 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 5607, column: 19)
!15796 = !DILocation(line: 5608, column: 20, scope: !15795)
!15797 = !DILocation(line: 5608, column: 25, scope: !15795)
!15798 = !DILocation(line: 5608, column: 31, scope: !15795)
!15799 = !DILocation(line: 5608, column: 37, scope: !15795)
!15800 = !DILocation(line: 5610, column: 7, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15795, file: !3, line: 5610, column: 7)
!15802 = !DILocation(line: 5610, column: 11, scope: !15801)
!15803 = !DILocation(line: 5610, column: 16, scope: !15801)
!15804 = !DILocation(line: 5610, column: 7, scope: !15795)
!15805 = !DILocation(line: 5611, column: 4, scope: !15801)
!15806 = !DILocation(line: 5611, column: 8, scope: !15801)
!15807 = !DILocation(line: 5611, column: 13, scope: !15801)
!15808 = !DILocation(line: 5611, column: 23, scope: !15801)
!15809 = distinct !{!15809, !15791, !15810}
!15810 = !DILocation(line: 5612, column: 2, scope: !15652)
!15811 = !DILocation(line: 5613, column: 14, scope: !15652)
!15812 = !DILocation(line: 5613, column: 2, scope: !15652)
!15813 = !DILocation(line: 5614, column: 9, scope: !15652)
!15814 = !DILocation(line: 5614, column: 2, scope: !15652)
!15815 = !DILocation(line: 5615, column: 1, scope: !15652)
!15816 = !DILocalVariable(name: "lock", arg: 1, scope: !15817, file: !8968, line: 392, type: !1037)
!15817 = distinct !DISubprogram(name: "spin_unlock", scope: !8968, file: !8968, line: 392, type: !15818, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15818 = !DISubroutineType(types: !15819)
!15819 = !{null, !1037}
!15820 = !DILocation(line: 392, column: 53, scope: !15817, inlinedAt: !15821)
!15821 = distinct !DILocation(line: 5534, column: 2, scope: !7269)
!15822 = !DILocalVariable(name: "lock", arg: 1, scope: !15823, file: !8968, line: 352, type: !1037)
!15823 = distinct !DISubprogram(name: "spin_lock", scope: !8968, file: !8968, line: 352, type: !15818, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15824 = !DILocation(line: 352, column: 51, scope: !15823, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 5518, column: 2, scope: !7269)
!15826 = !DILocalVariable(name: "ops", arg: 1, scope: !7269, file: !3, line: 5507, type: !6362)
!15827 = !DILocation(line: 5507, column: 63, scope: !7269)
!15828 = !DILocalVariable(name: "cur", scope: !7269, file: !3, line: 5510, type: !6756)
!15829 = !DILocation(line: 5510, column: 36, scope: !7269)
!15830 = !DILocalVariable(name: "begin", scope: !7269, file: !3, line: 5511, type: !1911)
!15831 = !DILocation(line: 5511, column: 9, scope: !7269)
!15832 = !DILocation(line: 5511, column: 26, scope: !7269)
!15833 = !DILocation(line: 5511, column: 17, scope: !7269)
!15834 = !DILocalVariable(name: "end", scope: !7269, file: !3, line: 5512, type: !1911)
!15835 = !DILocation(line: 5512, column: 9, scope: !7269)
!15836 = !DILocation(line: 5512, column: 25, scope: !7269)
!15837 = !DILocation(line: 5512, column: 30, scope: !7269)
!15838 = !DILocation(line: 5512, column: 15, scope: !7269)
!15839 = !DILocalVariable(name: "pp", scope: !7269, file: !3, line: 5513, type: !1911)
!15840 = !DILocation(line: 5513, column: 9, scope: !7269)
!15841 = !DILocation(line: 5515, column: 7, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 5515, column: 6)
!15843 = !DILocation(line: 5515, column: 11, scope: !15842)
!15844 = !DILocation(line: 5515, column: 15, scope: !15842)
!15845 = !DILocation(line: 5515, column: 20, scope: !15842)
!15846 = !DILocation(line: 5515, column: 6, scope: !7269)
!15847 = !DILocation(line: 5516, column: 3, scope: !15842)
!15848 = !DILocation(line: 354, column: 2, scope: !15849, inlinedAt: !15825)
!15849 = distinct !DILexicalBlock(scope: !15823, file: !8968, line: 354, column: 2)
!15850 = !{i32 -2145313945}
!15851 = !DILocation(line: 354, column: 2, scope: !15852, inlinedAt: !15825)
!15852 = distinct !DILexicalBlock(scope: !15849, file: !8968, line: 354, column: 2)
!15853 = !DILocation(line: 5520, column: 13, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 5520, column: 2)
!15855 = !DILocation(line: 5520, column: 18, scope: !15854)
!15856 = !DILocation(line: 5520, column: 11, scope: !15854)
!15857 = !DILocation(line: 5520, column: 7, scope: !15854)
!15858 = !DILocation(line: 5520, column: 28, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15854, file: !3, line: 5520, column: 2)
!15860 = !DILocation(line: 5520, column: 2, scope: !15854)
!15861 = !DILocalVariable(name: "inherit", scope: !15862, file: !3, line: 5521, type: !1911)
!15862 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 5520, column: 54)
!15863 = !DILocation(line: 5521, column: 10, scope: !15862)
!15864 = !DILocation(line: 5521, column: 29, scope: !15862)
!15865 = !DILocation(line: 5521, column: 20, scope: !15862)
!15866 = !DILocation(line: 5523, column: 13, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15862, file: !3, line: 5523, column: 3)
!15868 = !DILocation(line: 5523, column: 11, scope: !15867)
!15869 = !DILocation(line: 5523, column: 8, scope: !15867)
!15870 = !DILocation(line: 5523, column: 20, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15867, file: !3, line: 5523, column: 3)
!15872 = !DILocation(line: 5523, column: 25, scope: !15871)
!15873 = !DILocation(line: 5523, column: 23, scope: !15871)
!15874 = !DILocation(line: 5523, column: 3, scope: !15867)
!15875 = !DILocation(line: 5524, column: 10, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 5524, column: 8)
!15877 = !DILocation(line: 5524, column: 9, scope: !15876)
!15878 = !DILocation(line: 5524, column: 8, scope: !15871)
!15879 = !DILocation(line: 5525, column: 12, scope: !15876)
!15880 = !DILocation(line: 5525, column: 11, scope: !15876)
!15881 = !DILocation(line: 5525, column: 6, scope: !15876)
!15882 = !DILocation(line: 5525, column: 9, scope: !15876)
!15883 = !DILocation(line: 5525, column: 5, scope: !15876)
!15884 = !DILocation(line: 5523, column: 32, scope: !15871)
!15885 = !DILocation(line: 5523, column: 43, scope: !15871)
!15886 = !DILocation(line: 5523, column: 3, scope: !15871)
!15887 = distinct !{!15887, !15874, !15888}
!15888 = !DILocation(line: 5525, column: 12, scope: !15867)
!15889 = !DILocation(line: 5526, column: 2, scope: !15862)
!15890 = !DILocation(line: 5520, column: 39, scope: !15859)
!15891 = !DILocation(line: 5520, column: 44, scope: !15859)
!15892 = !DILocation(line: 5520, column: 37, scope: !15859)
!15893 = !DILocation(line: 5520, column: 2, scope: !15859)
!15894 = distinct !{!15894, !15860, !15895}
!15895 = !DILocation(line: 5526, column: 2, scope: !15854)
!15896 = !DILocation(line: 5528, column: 12, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 5528, column: 2)
!15898 = !DILocation(line: 5528, column: 10, scope: !15897)
!15899 = !DILocation(line: 5528, column: 7, scope: !15897)
!15900 = !DILocation(line: 5528, column: 19, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15897, file: !3, line: 5528, column: 2)
!15902 = !DILocation(line: 5528, column: 24, scope: !15901)
!15903 = !DILocation(line: 5528, column: 22, scope: !15901)
!15904 = !DILocation(line: 5528, column: 2, scope: !15897)
!15905 = !DILocation(line: 5529, column: 15, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15901, file: !3, line: 5529, column: 7)
!15907 = !DILocation(line: 5529, column: 14, scope: !15906)
!15908 = !DILocation(line: 5529, column: 7, scope: !15906)
!15909 = !DILocation(line: 5529, column: 7, scope: !15901)
!15910 = !DILocation(line: 5530, column: 5, scope: !15906)
!15911 = !DILocation(line: 5530, column: 8, scope: !15906)
!15912 = !DILocation(line: 5530, column: 4, scope: !15906)
!15913 = !DILocation(line: 5529, column: 17, scope: !15906)
!15914 = !DILocation(line: 5528, column: 31, scope: !15901)
!15915 = !DILocation(line: 5528, column: 2, scope: !15901)
!15916 = distinct !{!15916, !15904, !15917}
!15917 = !DILocation(line: 5530, column: 10, scope: !15897)
!15918 = !DILocation(line: 5532, column: 2, scope: !7269)
!15919 = !DILocation(line: 5532, column: 7, scope: !7269)
!15920 = !DILocation(line: 5532, column: 16, scope: !7269)
!15921 = !DILocation(line: 394, column: 2, scope: !15922, inlinedAt: !15821)
!15922 = distinct !DILexicalBlock(scope: !15817, file: !8968, line: 394, column: 2)
!15923 = !{i32 -2145311584}
!15924 = !DILocation(line: 394, column: 2, scope: !15925, inlinedAt: !15821)
!15925 = distinct !DILexicalBlock(scope: !15922, file: !8968, line: 394, column: 2)
!15926 = !DILocation(line: 5535, column: 1, scope: !7269)
!15927 = distinct !DISubprogram(name: "ata_port_is_dummy", scope: !183, file: !183, line: 1065, type: !6594, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15928 = !DILocalVariable(name: "ap", arg: 1, scope: !15927, file: !183, line: 1065, type: !1005)
!15929 = !DILocation(line: 1065, column: 54, scope: !15927)
!15930 = !DILocation(line: 1067, column: 9, scope: !15927)
!15931 = !DILocation(line: 1067, column: 13, scope: !15927)
!15932 = !DILocation(line: 1067, column: 17, scope: !15927)
!15933 = !DILocation(line: 1067, column: 2, scope: !15927)
!15934 = distinct !DISubprogram(name: "ata_host_stop", scope: !3, file: !3, line: 5469, type: !15470, scopeLine: 5470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!15935 = !DILocalVariable(name: "gendev", arg: 1, scope: !15934, file: !3, line: 5469, type: !2957)
!15936 = !DILocation(line: 5469, column: 42, scope: !15934)
!15937 = !DILocalVariable(name: "res", arg: 2, scope: !15934, file: !3, line: 5469, type: !991)
!15938 = !DILocation(line: 5469, column: 56, scope: !15934)
!15939 = !DILocalVariable(name: "host", scope: !15934, file: !3, line: 5471, type: !6675)
!15940 = !DILocation(line: 5471, column: 19, scope: !15934)
!15941 = !DILocation(line: 5471, column: 42, scope: !15934)
!15942 = !DILocation(line: 5471, column: 26, scope: !15934)
!15943 = !DILocalVariable(name: "i", scope: !15934, file: !3, line: 5472, type: !223)
!15944 = !DILocation(line: 5472, column: 6, scope: !15934)
!15945 = !DILocalVariable(name: "__ret_warn_on", scope: !15946, file: !3, line: 5474, type: !223)
!15946 = distinct !DILexicalBlock(scope: !15934, file: !3, line: 5474, column: 2)
!15947 = !DILocation(line: 5474, column: 2, scope: !15946)
!15948 = !DILocation(line: 5474, column: 2, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15946, file: !3, line: 5474, column: 2)
!15950 = !DILocation(line: 5474, column: 2, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15949, file: !3, line: 5474, column: 2)
!15952 = !DILocation(line: 5474, column: 2, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 5474, column: 2)
!15954 = !DILocation(line: 5474, column: 2, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 5474, column: 2)
!15956 = !{i32 -2139181310, i32 -2139181281, i32 -2139181235, i32 -2139181177, i32 -2139181123, i32 -2139181069, i32 -2139181014, i32 -2139180983}
!15957 = !DILocation(line: 5474, column: 2, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 5474, column: 2)
!15959 = !{i32 -2139180575, i32 -2139180568, i32 -2139180516, i32 -2139180485, i32 -2139180455}
!15960 = !DILocation(line: 5474, column: 2, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 5474, column: 2)
!15962 = !DILocation(line: 5476, column: 9, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15934, file: !3, line: 5476, column: 2)
!15964 = !DILocation(line: 5476, column: 7, scope: !15963)
!15965 = !DILocation(line: 5476, column: 14, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15963, file: !3, line: 5476, column: 2)
!15967 = !DILocation(line: 5476, column: 18, scope: !15966)
!15968 = !DILocation(line: 5476, column: 24, scope: !15966)
!15969 = !DILocation(line: 5476, column: 16, scope: !15966)
!15970 = !DILocation(line: 5476, column: 2, scope: !15963)
!15971 = !DILocalVariable(name: "ap", scope: !15972, file: !3, line: 5477, type: !1005)
!15972 = distinct !DILexicalBlock(scope: !15966, file: !3, line: 5476, column: 38)
!15973 = !DILocation(line: 5477, column: 20, scope: !15972)
!15974 = !DILocation(line: 5477, column: 25, scope: !15972)
!15975 = !DILocation(line: 5477, column: 31, scope: !15972)
!15976 = !DILocation(line: 5477, column: 37, scope: !15972)
!15977 = !DILocation(line: 5479, column: 7, scope: !15978)
!15978 = distinct !DILexicalBlock(scope: !15972, file: !3, line: 5479, column: 7)
!15979 = !DILocation(line: 5479, column: 11, scope: !15978)
!15980 = !DILocation(line: 5479, column: 16, scope: !15978)
!15981 = !DILocation(line: 5479, column: 7, scope: !15972)
!15982 = !DILocation(line: 5480, column: 4, scope: !15978)
!15983 = !DILocation(line: 5480, column: 8, scope: !15978)
!15984 = !DILocation(line: 5480, column: 13, scope: !15978)
!15985 = !DILocation(line: 5480, column: 23, scope: !15978)
!15986 = !DILocation(line: 5481, column: 2, scope: !15972)
!15987 = !DILocation(line: 5476, column: 34, scope: !15966)
!15988 = !DILocation(line: 5476, column: 2, scope: !15966)
!15989 = distinct !{!15989, !15970, !15990}
!15990 = !DILocation(line: 5481, column: 2, scope: !15963)
!15991 = !DILocation(line: 5483, column: 6, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15934, file: !3, line: 5483, column: 6)
!15993 = !DILocation(line: 5483, column: 12, scope: !15992)
!15994 = !DILocation(line: 5483, column: 17, scope: !15992)
!15995 = !DILocation(line: 5483, column: 6, scope: !15934)
!15996 = !DILocation(line: 5484, column: 3, scope: !15992)
!15997 = !DILocation(line: 5484, column: 9, scope: !15992)
!15998 = !DILocation(line: 5484, column: 14, scope: !15992)
!15999 = !DILocation(line: 5484, column: 24, scope: !15992)
!16000 = !DILocation(line: 5485, column: 1, scope: !15934)
!16001 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 5628, column: 2, scope: !16003)
!16003 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 5628, column: 2)
!16004 = !DILocalVariable(name: "host", arg: 1, scope: !7127, file: !3, line: 5625, type: !6675)
!16005 = !DILocation(line: 5625, column: 37, scope: !7127)
!16006 = !DILocalVariable(name: "dev", arg: 2, scope: !7127, file: !3, line: 5625, type: !2957)
!16007 = !DILocation(line: 5625, column: 58, scope: !7127)
!16008 = !DILocalVariable(name: "ops", arg: 3, scope: !7127, file: !3, line: 5626, type: !6362)
!16009 = !DILocation(line: 5626, column: 34, scope: !7127)
!16010 = !DILocation(line: 5628, column: 2, scope: !7127)
!16011 = !DILocation(line: 5628, column: 2, scope: !16003)
!16012 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !16002)
!16013 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !16002)
!16014 = !DILocation(line: 5629, column: 2, scope: !7127)
!16015 = !DILocation(line: 5629, column: 2, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 5629, column: 2)
!16017 = !DILocation(line: 5630, column: 2, scope: !7127)
!16018 = !DILocation(line: 5630, column: 8, scope: !7127)
!16019 = !DILocation(line: 5630, column: 15, scope: !7127)
!16020 = !DILocation(line: 5631, column: 14, scope: !7127)
!16021 = !DILocation(line: 5631, column: 2, scope: !7127)
!16022 = !DILocation(line: 5631, column: 8, scope: !7127)
!16023 = !DILocation(line: 5631, column: 12, scope: !7127)
!16024 = !DILocation(line: 5632, column: 14, scope: !7127)
!16025 = !DILocation(line: 5632, column: 2, scope: !7127)
!16026 = !DILocation(line: 5632, column: 8, scope: !7127)
!16027 = !DILocation(line: 5632, column: 12, scope: !7127)
!16028 = !DILocation(line: 5633, column: 13, scope: !7127)
!16029 = !DILocation(line: 5633, column: 19, scope: !7127)
!16030 = !DILocation(line: 5633, column: 2, scope: !7127)
!16031 = !DILocation(line: 5634, column: 1, scope: !7127)
!16032 = distinct !DISubprogram(name: "__ata_port_probe", scope: !3, file: !3, line: 5637, type: !6622, scopeLine: 5638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16033 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 5653, column: 2, scope: !16032)
!16035 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !16034)
!16036 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 5643, column: 2, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !3, line: 5643, column: 2)
!16039 = distinct !DILexicalBlock(scope: !16040, file: !3, line: 5643, column: 2)
!16040 = distinct !DILexicalBlock(scope: !16041, file: !3, line: 5643, column: 2)
!16041 = distinct !DILexicalBlock(scope: !16042, file: !3, line: 5643, column: 2)
!16042 = distinct !DILexicalBlock(scope: !16032, file: !3, line: 5643, column: 2)
!16043 = !DILocalVariable(name: "ap", arg: 1, scope: !16032, file: !3, line: 5637, type: !1005)
!16044 = !DILocation(line: 5637, column: 40, scope: !16032)
!16045 = !DILocalVariable(name: "ehi", scope: !16032, file: !3, line: 5639, type: !9790)
!16046 = !DILocation(line: 5639, column: 22, scope: !16032)
!16047 = !DILocation(line: 5639, column: 29, scope: !16032)
!16048 = !DILocation(line: 5639, column: 33, scope: !16032)
!16049 = !DILocation(line: 5639, column: 38, scope: !16032)
!16050 = !DILocalVariable(name: "flags", scope: !16032, file: !3, line: 5640, type: !994)
!16051 = !DILocation(line: 5640, column: 16, scope: !16032)
!16052 = !DILocation(line: 5643, column: 2, scope: !16032)
!16053 = !DILocation(line: 5643, column: 2, scope: !16042)
!16054 = !DILocalVariable(name: "__dummy", scope: !16055, file: !3, line: 5643, type: !994)
!16055 = distinct !DILexicalBlock(scope: !16041, file: !3, line: 5643, column: 2)
!16056 = !DILocation(line: 5643, column: 2, scope: !16055)
!16057 = !DILocalVariable(name: "__dummy2", scope: !16055, file: !3, line: 5643, type: !994)
!16058 = !DILocation(line: 5643, column: 2, scope: !16041)
!16059 = !DILocation(line: 5643, column: 2, scope: !16040)
!16060 = !DILocation(line: 5643, column: 2, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16040, file: !3, line: 5643, column: 2)
!16062 = !DILocalVariable(name: "__dummy", scope: !16063, file: !3, line: 5643, type: !994)
!16063 = distinct !DILexicalBlock(scope: !16064, file: !3, line: 5643, column: 2)
!16064 = distinct !DILexicalBlock(scope: !16061, file: !3, line: 5643, column: 2)
!16065 = !DILocation(line: 5643, column: 2, scope: !16063)
!16066 = !DILocalVariable(name: "__dummy2", scope: !16063, file: !3, line: 5643, type: !994)
!16067 = !DILocation(line: 5643, column: 2, scope: !16064)
!16068 = !DILocation(line: 5643, column: 2, scope: !16039)
!16069 = !{i32 -2139178098}
!16070 = !DILocation(line: 5643, column: 2, scope: !16038)
!16071 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !16037)
!16072 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !16037)
!16073 = !DILocation(line: 5645, column: 2, scope: !16032)
!16074 = !DILocation(line: 5645, column: 7, scope: !16032)
!16075 = !DILocation(line: 5645, column: 18, scope: !16032)
!16076 = !DILocation(line: 5646, column: 2, scope: !16032)
!16077 = !DILocation(line: 5646, column: 7, scope: !16032)
!16078 = !DILocation(line: 5646, column: 14, scope: !16032)
!16079 = !DILocation(line: 5647, column: 2, scope: !16032)
!16080 = !DILocation(line: 5647, column: 7, scope: !16032)
!16081 = !DILocation(line: 5647, column: 13, scope: !16032)
!16082 = !DILocation(line: 5649, column: 2, scope: !16032)
!16083 = !DILocation(line: 5649, column: 6, scope: !16032)
!16084 = !DILocation(line: 5649, column: 13, scope: !16032)
!16085 = !DILocation(line: 5650, column: 2, scope: !16032)
!16086 = !DILocation(line: 5650, column: 6, scope: !16032)
!16087 = !DILocation(line: 5650, column: 13, scope: !16032)
!16088 = !DILocation(line: 5651, column: 23, scope: !16032)
!16089 = !DILocation(line: 5651, column: 2, scope: !16032)
!16090 = !DILocation(line: 5653, column: 25, scope: !16032)
!16091 = !DILocation(line: 5653, column: 29, scope: !16032)
!16092 = !DILocation(line: 5653, column: 35, scope: !16032)
!16093 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !16034)
!16094 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !16034)
!16095 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !16034)
!16096 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !16034)
!16097 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !16034)
!16098 = !DILocation(line: 5654, column: 1, scope: !16032)
!16099 = distinct !DISubprogram(name: "ata_port_probe", scope: !3, file: !3, line: 5656, type: !6594, scopeLine: 5657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16100 = !DILocalVariable(name: "ap", arg: 1, scope: !16099, file: !3, line: 5656, type: !1005)
!16101 = !DILocation(line: 5656, column: 37, scope: !16099)
!16102 = !DILocalVariable(name: "rc", scope: !16099, file: !3, line: 5658, type: !223)
!16103 = !DILocation(line: 5658, column: 6, scope: !16099)
!16104 = !DILocation(line: 5660, column: 6, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16099, file: !3, line: 5660, column: 6)
!16106 = !DILocation(line: 5660, column: 10, scope: !16105)
!16107 = !DILocation(line: 5660, column: 15, scope: !16105)
!16108 = !DILocation(line: 5660, column: 6, scope: !16099)
!16109 = !DILocation(line: 5661, column: 20, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16105, file: !3, line: 5660, column: 30)
!16111 = !DILocation(line: 5661, column: 3, scope: !16110)
!16112 = !DILocation(line: 5662, column: 20, scope: !16110)
!16113 = !DILocation(line: 5662, column: 3, scope: !16110)
!16114 = !DILocation(line: 5663, column: 2, scope: !16110)
!16115 = !DILocation(line: 5665, column: 22, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16105, file: !3, line: 5663, column: 9)
!16117 = !DILocation(line: 5665, column: 8, scope: !16116)
!16118 = !DILocation(line: 5665, column: 6, scope: !16116)
!16119 = !DILocation(line: 5668, column: 9, scope: !16099)
!16120 = !DILocation(line: 5668, column: 2, scope: !16099)
!16121 = distinct !DISubprogram(name: "ata_host_register", scope: !3, file: !3, line: 5710, type: !16122, scopeLine: 5711, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16122 = !DISubroutineType(types: !16123)
!16123 = !{!223, !6675, !5944}
!16124 = !DILocalVariable(name: "i", arg: 1, scope: !16125, file: !16126, line: 163, type: !223)
!16125 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !16126, file: !16126, line: 163, type: !16127, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16126 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!16127 = !DISubroutineType(types: !16128)
!16128 = !{!223, !223, !16129}
!16129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!16130 = !DILocation(line: 163, column: 55, scope: !16125, inlinedAt: !16131)
!16131 = distinct !DILocation(line: 286, column: 9, scope: !16132, inlinedAt: !16136)
!16132 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !16133, file: !16133, line: 284, type: !16134, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16133 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!16134 = !DISubroutineType(types: !16135)
!16135 = !{!223, !16129}
!16136 = distinct !DILocation(line: 251, column: 9, scope: !16137, inlinedAt: !16139)
!16137 = distinct !DISubprogram(name: "atomic_inc_return", scope: !16138, file: !16138, line: 248, type: !16134, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16138 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!16139 = distinct !DILocation(line: 5732, column: 30, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16141, file: !3, line: 5731, column: 38)
!16141 = distinct !DILexicalBlock(scope: !16142, file: !3, line: 5731, column: 2)
!16142 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5731, column: 2)
!16143 = !DILocalVariable(name: "v", arg: 2, scope: !16125, file: !16126, line: 163, type: !16129)
!16144 = !DILocation(line: 163, column: 68, scope: !16125, inlinedAt: !16131)
!16145 = !DILocalVariable(name: "__ret", scope: !16146, file: !16126, line: 165, type: !223)
!16146 = distinct !DILexicalBlock(scope: !16125, file: !16126, line: 165, column: 13)
!16147 = !DILocation(line: 165, column: 13, scope: !16146, inlinedAt: !16131)
!16148 = !DILocalVariable(name: "v", arg: 1, scope: !16132, file: !16133, line: 284, type: !16129)
!16149 = !DILocation(line: 284, column: 34, scope: !16132, inlinedAt: !16136)
!16150 = !DILocalVariable(name: "v", arg: 1, scope: !16151, file: !16152, line: 99, type: !16155)
!16151 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !16152, file: !16152, line: 99, type: !16153, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16152 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!16153 = !DISubroutineType(types: !16154)
!16154 = !{null, !16155, !1645}
!16155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16156, size: 64)
!16156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16157)
!16157 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!16158 = !DILocation(line: 99, column: 79, scope: !16151, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 250, column: 2, scope: !16137, inlinedAt: !16139)
!16160 = !DILocalVariable(name: "size", arg: 2, scope: !16151, file: !16152, line: 99, type: !1645)
!16161 = !DILocation(line: 99, column: 89, scope: !16151, inlinedAt: !16159)
!16162 = !DILocalVariable(name: "v", arg: 1, scope: !16137, file: !16138, line: 248, type: !16129)
!16163 = !DILocation(line: 248, column: 29, scope: !16137, inlinedAt: !16139)
!16164 = !DILocalVariable(name: "host", arg: 1, scope: !16121, file: !3, line: 5710, type: !6675)
!16165 = !DILocation(line: 5710, column: 40, scope: !16121)
!16166 = !DILocalVariable(name: "sht", arg: 2, scope: !16121, file: !3, line: 5710, type: !5944)
!16167 = !DILocation(line: 5710, column: 73, scope: !16121)
!16168 = !DILocalVariable(name: "i", scope: !16121, file: !3, line: 5712, type: !223)
!16169 = !DILocation(line: 5712, column: 6, scope: !16121)
!16170 = !DILocalVariable(name: "rc", scope: !16121, file: !3, line: 5712, type: !223)
!16171 = !DILocation(line: 5712, column: 9, scope: !16121)
!16172 = !DILocalVariable(name: "__UNIQUE_ID___x375", scope: !16173, file: !3, line: 5714, type: !223)
!16173 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5714, column: 17)
!16174 = !DILocation(line: 5714, column: 17, scope: !16173)
!16175 = !DILocalVariable(name: "__UNIQUE_ID___x373", scope: !16176, file: !3, line: 5714, type: !223)
!16176 = distinct !DILexicalBlock(scope: !16173, file: !3, line: 5714, column: 17)
!16177 = !DILocation(line: 5714, column: 17, scope: !16176)
!16178 = !DILocalVariable(name: "__UNIQUE_ID___y374", scope: !16176, file: !3, line: 5714, type: !223)
!16179 = !DILocalVariable(name: "__UNIQUE_ID___y376", scope: !16173, file: !3, line: 5714, type: !223)
!16180 = !DILocation(line: 5714, column: 2, scope: !16121)
!16181 = !DILocation(line: 5714, column: 8, scope: !16121)
!16182 = !DILocation(line: 5714, column: 15, scope: !16121)
!16183 = !DILocation(line: 5717, column: 8, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5717, column: 6)
!16185 = !DILocation(line: 5717, column: 14, scope: !16184)
!16186 = !DILocation(line: 5717, column: 20, scope: !16184)
!16187 = !DILocation(line: 5717, column: 6, scope: !16121)
!16188 = !DILocation(line: 5718, column: 3, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16184, file: !3, line: 5717, column: 41)
!16190 = !DILocalVariable(name: "__ret_warn_on", scope: !16191, file: !3, line: 5719, type: !223)
!16191 = distinct !DILexicalBlock(scope: !16189, file: !3, line: 5719, column: 3)
!16192 = !DILocation(line: 5719, column: 3, scope: !16191)
!16193 = !DILocation(line: 5719, column: 3, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16191, file: !3, line: 5719, column: 3)
!16195 = !DILocation(line: 5719, column: 3, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16194, file: !3, line: 5719, column: 3)
!16197 = !DILocation(line: 5719, column: 3, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 5719, column: 3)
!16199 = !DILocation(line: 5719, column: 3, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 5719, column: 3)
!16201 = !{i32 -2139167130, i32 -2139167101, i32 -2139167055, i32 -2139166997, i32 -2139166943, i32 -2139166889, i32 -2139166834, i32 -2139166803}
!16202 = !DILocation(line: 5719, column: 3, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 5719, column: 3)
!16204 = !{i32 -2139166395, i32 -2139166388, i32 -2139166336, i32 -2139166305, i32 -2139166275}
!16205 = !DILocation(line: 5719, column: 3, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 5719, column: 3)
!16207 = !DILocation(line: 5720, column: 3, scope: !16189)
!16208 = !DILocation(line: 5727, column: 11, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5727, column: 2)
!16210 = !DILocation(line: 5727, column: 17, scope: !16209)
!16211 = !DILocation(line: 5727, column: 9, scope: !16209)
!16212 = !DILocation(line: 5727, column: 7, scope: !16209)
!16213 = !DILocation(line: 5727, column: 26, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16209, file: !3, line: 5727, column: 2)
!16215 = !DILocation(line: 5727, column: 32, scope: !16214)
!16216 = !DILocation(line: 5727, column: 38, scope: !16214)
!16217 = !DILocation(line: 5727, column: 2, scope: !16209)
!16218 = !DILocation(line: 5728, column: 9, scope: !16214)
!16219 = !DILocation(line: 5728, column: 15, scope: !16214)
!16220 = !DILocation(line: 5728, column: 21, scope: !16214)
!16221 = !DILocation(line: 5728, column: 3, scope: !16214)
!16222 = !DILocation(line: 5727, column: 43, scope: !16214)
!16223 = !DILocation(line: 5727, column: 2, scope: !16214)
!16224 = distinct !{!16224, !16217, !16225}
!16225 = !DILocation(line: 5728, column: 23, scope: !16209)
!16226 = !DILocation(line: 5731, column: 9, scope: !16142)
!16227 = !DILocation(line: 5731, column: 7, scope: !16142)
!16228 = !DILocation(line: 5731, column: 14, scope: !16141)
!16229 = !DILocation(line: 5731, column: 18, scope: !16141)
!16230 = !DILocation(line: 5731, column: 24, scope: !16141)
!16231 = !DILocation(line: 5731, column: 16, scope: !16141)
!16232 = !DILocation(line: 5731, column: 2, scope: !16142)
!16233 = !DILocation(line: 250, column: 31, scope: !16137, inlinedAt: !16139)
!16234 = !DILocation(line: 101, column: 20, scope: !16151, inlinedAt: !16159)
!16235 = !DILocation(line: 101, column: 23, scope: !16151, inlinedAt: !16159)
!16236 = !DILocation(line: 101, column: 2, scope: !16151, inlinedAt: !16159)
!16237 = !DILocation(line: 102, column: 2, scope: !16151, inlinedAt: !16159)
!16238 = !DILocation(line: 251, column: 32, scope: !16137, inlinedAt: !16139)
!16239 = !DILocation(line: 286, column: 35, scope: !16132, inlinedAt: !16136)
!16240 = !DILocation(line: 165, column: 9, scope: !16125, inlinedAt: !16131)
!16241 = !{i32 -2146458612}
!16242 = !DILocation(line: 165, column: 11, scope: !16125, inlinedAt: !16131)
!16243 = !DILocation(line: 5732, column: 3, scope: !16140)
!16244 = !DILocation(line: 5732, column: 9, scope: !16140)
!16245 = !DILocation(line: 5732, column: 15, scope: !16140)
!16246 = !DILocation(line: 5732, column: 19, scope: !16140)
!16247 = !DILocation(line: 5732, column: 28, scope: !16140)
!16248 = !DILocation(line: 5733, column: 35, scope: !16140)
!16249 = !DILocation(line: 5733, column: 37, scope: !16140)
!16250 = !DILocation(line: 5733, column: 3, scope: !16140)
!16251 = !DILocation(line: 5733, column: 9, scope: !16140)
!16252 = !DILocation(line: 5733, column: 15, scope: !16140)
!16253 = !DILocation(line: 5733, column: 19, scope: !16140)
!16254 = !DILocation(line: 5733, column: 33, scope: !16140)
!16255 = !DILocation(line: 5734, column: 2, scope: !16140)
!16256 = !DILocation(line: 5731, column: 34, scope: !16141)
!16257 = !DILocation(line: 5731, column: 2, scope: !16141)
!16258 = distinct !{!16258, !16232, !16259}
!16259 = !DILocation(line: 5734, column: 2, scope: !16142)
!16260 = !DILocation(line: 5737, column: 9, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5737, column: 2)
!16262 = !DILocation(line: 5737, column: 7, scope: !16261)
!16263 = !DILocation(line: 5737, column: 14, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16261, file: !3, line: 5737, column: 2)
!16265 = !DILocation(line: 5737, column: 18, scope: !16264)
!16266 = !DILocation(line: 5737, column: 24, scope: !16264)
!16267 = !DILocation(line: 5737, column: 16, scope: !16264)
!16268 = !DILocation(line: 5737, column: 2, scope: !16261)
!16269 = !DILocation(line: 5738, column: 22, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16264, file: !3, line: 5737, column: 38)
!16271 = !DILocation(line: 5738, column: 28, scope: !16270)
!16272 = !DILocation(line: 5738, column: 32, scope: !16270)
!16273 = !DILocation(line: 5738, column: 38, scope: !16270)
!16274 = !DILocation(line: 5738, column: 44, scope: !16270)
!16275 = !DILocation(line: 5738, column: 8, scope: !16270)
!16276 = !DILocation(line: 5738, column: 6, scope: !16270)
!16277 = !DILocation(line: 5739, column: 7, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 5739, column: 7)
!16279 = !DILocation(line: 5739, column: 7, scope: !16270)
!16280 = !DILocation(line: 5740, column: 4, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16278, file: !3, line: 5739, column: 11)
!16282 = !DILocation(line: 5742, column: 2, scope: !16270)
!16283 = !DILocation(line: 5737, column: 34, scope: !16264)
!16284 = !DILocation(line: 5737, column: 2, scope: !16264)
!16285 = distinct !{!16285, !16268, !16286}
!16286 = !DILocation(line: 5742, column: 2, scope: !16261)
!16287 = !DILocation(line: 5744, column: 26, scope: !16121)
!16288 = !DILocation(line: 5744, column: 32, scope: !16121)
!16289 = !DILocation(line: 5744, column: 7, scope: !16121)
!16290 = !DILocation(line: 5744, column: 5, scope: !16121)
!16291 = !DILocation(line: 5745, column: 6, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5745, column: 6)
!16293 = !DILocation(line: 5745, column: 6, scope: !16121)
!16294 = !DILocation(line: 5746, column: 3, scope: !16292)
!16295 = !DILocation(line: 5749, column: 9, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5749, column: 2)
!16297 = !DILocation(line: 5749, column: 7, scope: !16296)
!16298 = !DILocation(line: 5749, column: 14, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16296, file: !3, line: 5749, column: 2)
!16300 = !DILocation(line: 5749, column: 18, scope: !16299)
!16301 = !DILocation(line: 5749, column: 24, scope: !16299)
!16302 = !DILocation(line: 5749, column: 16, scope: !16299)
!16303 = !DILocation(line: 5749, column: 2, scope: !16296)
!16304 = !DILocalVariable(name: "ap", scope: !16305, file: !3, line: 5750, type: !1005)
!16305 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 5749, column: 38)
!16306 = !DILocation(line: 5750, column: 20, scope: !16305)
!16307 = !DILocation(line: 5750, column: 25, scope: !16305)
!16308 = !DILocation(line: 5750, column: 31, scope: !16305)
!16309 = !DILocation(line: 5750, column: 37, scope: !16305)
!16310 = !DILocalVariable(name: "xfer_mask", scope: !16305, file: !3, line: 5751, type: !994)
!16311 = !DILocation(line: 5751, column: 17, scope: !16305)
!16312 = !DILocation(line: 5754, column: 7, scope: !16313)
!16313 = distinct !DILexicalBlock(scope: !16305, file: !3, line: 5754, column: 7)
!16314 = !DILocation(line: 5754, column: 11, scope: !16313)
!16315 = !DILocation(line: 5754, column: 15, scope: !16313)
!16316 = !DILocation(line: 5754, column: 31, scope: !16313)
!16317 = !DILocation(line: 5754, column: 35, scope: !16313)
!16318 = !DILocation(line: 5754, column: 39, scope: !16313)
!16319 = !DILocation(line: 5754, column: 45, scope: !16313)
!16320 = !DILocation(line: 5754, column: 7, scope: !16305)
!16321 = !DILocation(line: 5755, column: 4, scope: !16313)
!16322 = !DILocation(line: 5755, column: 8, scope: !16313)
!16323 = !DILocation(line: 5755, column: 12, scope: !16313)
!16324 = !DILocation(line: 5758, column: 23, scope: !16305)
!16325 = !DILocation(line: 5758, column: 27, scope: !16305)
!16326 = !DILocation(line: 5758, column: 3, scope: !16305)
!16327 = !DILocation(line: 5759, column: 7, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16305, file: !3, line: 5759, column: 7)
!16329 = !DILocation(line: 5759, column: 11, scope: !16328)
!16330 = !DILocation(line: 5759, column: 7, scope: !16305)
!16331 = !DILocation(line: 5760, column: 23, scope: !16328)
!16332 = !DILocation(line: 5760, column: 27, scope: !16328)
!16333 = !DILocation(line: 5760, column: 4, scope: !16328)
!16334 = !DILocation(line: 5763, column: 33, scope: !16305)
!16335 = !DILocation(line: 5763, column: 37, scope: !16305)
!16336 = !DILocation(line: 5763, column: 47, scope: !16305)
!16337 = !DILocation(line: 5763, column: 51, scope: !16305)
!16338 = !DILocation(line: 5764, column: 12, scope: !16305)
!16339 = !DILocation(line: 5764, column: 16, scope: !16305)
!16340 = !DILocation(line: 5763, column: 15, scope: !16305)
!16341 = !DILocation(line: 5763, column: 13, scope: !16305)
!16342 = !DILocation(line: 5766, column: 26, scope: !16343)
!16343 = distinct !DILexicalBlock(scope: !16305, file: !3, line: 5766, column: 7)
!16344 = !DILocation(line: 5766, column: 8, scope: !16343)
!16345 = !DILocation(line: 5766, column: 7, scope: !16305)
!16346 = !DILocation(line: 5767, column: 4, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16343, file: !3, line: 5766, column: 31)
!16348 = !DILocation(line: 5771, column: 24, scope: !16347)
!16349 = !DILocation(line: 5771, column: 28, scope: !16347)
!16350 = !DILocation(line: 5771, column: 33, scope: !16347)
!16351 = !DILocation(line: 5771, column: 4, scope: !16347)
!16352 = !DILocation(line: 5772, column: 3, scope: !16347)
!16353 = !DILocation(line: 5773, column: 4, scope: !16343)
!16354 = !DILocation(line: 5774, column: 2, scope: !16305)
!16355 = !DILocation(line: 5749, column: 34, scope: !16299)
!16356 = !DILocation(line: 5749, column: 2, scope: !16299)
!16357 = distinct !{!16357, !16303, !16358}
!16358 = !DILocation(line: 5774, column: 2, scope: !16296)
!16359 = !DILocation(line: 5777, column: 9, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5777, column: 2)
!16361 = !DILocation(line: 5777, column: 7, scope: !16360)
!16362 = !DILocation(line: 5777, column: 14, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16360, file: !3, line: 5777, column: 2)
!16364 = !DILocation(line: 5777, column: 18, scope: !16363)
!16365 = !DILocation(line: 5777, column: 24, scope: !16363)
!16366 = !DILocation(line: 5777, column: 16, scope: !16363)
!16367 = !DILocation(line: 5777, column: 2, scope: !16360)
!16368 = !DILocalVariable(name: "ap", scope: !16369, file: !3, line: 5778, type: !1005)
!16369 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 5777, column: 38)
!16370 = !DILocation(line: 5778, column: 20, scope: !16369)
!16371 = !DILocation(line: 5778, column: 25, scope: !16369)
!16372 = !DILocation(line: 5778, column: 31, scope: !16369)
!16373 = !DILocation(line: 5778, column: 37, scope: !16369)
!16374 = !DILocation(line: 5779, column: 49, scope: !16369)
!16375 = !DILocation(line: 5779, column: 16, scope: !16369)
!16376 = !DILocation(line: 5779, column: 3, scope: !16369)
!16377 = !DILocation(line: 5779, column: 7, scope: !16369)
!16378 = !DILocation(line: 5779, column: 14, scope: !16369)
!16379 = !DILocation(line: 5780, column: 2, scope: !16369)
!16380 = !DILocation(line: 5777, column: 34, scope: !16363)
!16381 = !DILocation(line: 5777, column: 2, scope: !16363)
!16382 = distinct !{!16382, !16367, !16383}
!16383 = !DILocation(line: 5780, column: 2, scope: !16360)
!16384 = !DILocation(line: 5782, column: 2, scope: !16121)
!16385 = !DILabel(scope: !16121, name: "err_tadd", file: !3, line: 5784)
!16386 = !DILocation(line: 5784, column: 2, scope: !16121)
!16387 = !DILocation(line: 5785, column: 2, scope: !16121)
!16388 = !DILocation(line: 5785, column: 9, scope: !16121)
!16389 = !DILocation(line: 5785, column: 13, scope: !16121)
!16390 = !DILocation(line: 5786, column: 20, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16121, file: !3, line: 5785, column: 19)
!16392 = !DILocation(line: 5786, column: 26, scope: !16391)
!16393 = !DILocation(line: 5786, column: 32, scope: !16391)
!16394 = !DILocation(line: 5786, column: 3, scope: !16391)
!16395 = distinct !{!16395, !16387, !16396}
!16396 = !DILocation(line: 5787, column: 2, scope: !16121)
!16397 = !DILocation(line: 5788, column: 9, scope: !16121)
!16398 = !DILocation(line: 5788, column: 2, scope: !16121)
!16399 = !DILocation(line: 5790, column: 1, scope: !16121)
!16400 = distinct !DISubprogram(name: "async_schedule", scope: !6835, file: !6835, line: 52, type: !16401, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16401 = !DISubroutineType(types: !16402)
!16402 = !{!6834, !16403, !991}
!16403 = !DIDerivedType(tag: DW_TAG_typedef, name: "async_func_t", file: !6835, line: 17, baseType: !16404)
!16404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16405, size: 64)
!16405 = !DISubroutineType(types: !16406)
!16406 = !{null, !991, !6834}
!16407 = !DILocalVariable(name: "func", arg: 1, scope: !16400, file: !6835, line: 52, type: !16403)
!16408 = !DILocation(line: 52, column: 58, scope: !16400)
!16409 = !DILocalVariable(name: "data", arg: 2, scope: !16400, file: !6835, line: 52, type: !991)
!16410 = !DILocation(line: 52, column: 70, scope: !16400)
!16411 = !DILocation(line: 54, column: 29, scope: !16400)
!16412 = !DILocation(line: 54, column: 35, scope: !16400)
!16413 = !DILocation(line: 54, column: 9, scope: !16400)
!16414 = !DILocation(line: 54, column: 2, scope: !16400)
!16415 = distinct !DISubprogram(name: "async_port_probe", scope: !3, file: !3, line: 5672, type: !16405, scopeLine: 5673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16416 = !DILocalVariable(name: "data", arg: 1, scope: !16415, file: !3, line: 5672, type: !991)
!16417 = !DILocation(line: 5672, column: 36, scope: !16415)
!16418 = !DILocalVariable(name: "cookie", arg: 2, scope: !16415, file: !3, line: 5672, type: !6834)
!16419 = !DILocation(line: 5672, column: 57, scope: !16415)
!16420 = !DILocalVariable(name: "ap", scope: !16415, file: !3, line: 5674, type: !1005)
!16421 = !DILocation(line: 5674, column: 19, scope: !16415)
!16422 = !DILocation(line: 5674, column: 24, scope: !16415)
!16423 = !DILocation(line: 5683, column: 8, scope: !16424)
!16424 = distinct !DILexicalBlock(scope: !16415, file: !3, line: 5683, column: 6)
!16425 = !DILocation(line: 5683, column: 12, scope: !16424)
!16426 = !DILocation(line: 5683, column: 18, scope: !16424)
!16427 = !DILocation(line: 5683, column: 24, scope: !16424)
!16428 = !DILocation(line: 5683, column: 50, scope: !16424)
!16429 = !DILocation(line: 5683, column: 53, scope: !16424)
!16430 = !DILocation(line: 5683, column: 57, scope: !16424)
!16431 = !DILocation(line: 5683, column: 65, scope: !16424)
!16432 = !DILocation(line: 5683, column: 6, scope: !16415)
!16433 = !DILocation(line: 5684, column: 28, scope: !16424)
!16434 = !DILocation(line: 5684, column: 3, scope: !16424)
!16435 = !DILocation(line: 5686, column: 23, scope: !16415)
!16436 = !DILocation(line: 5686, column: 8, scope: !16415)
!16437 = !DILocation(line: 5689, column: 27, scope: !16415)
!16438 = !DILocation(line: 5689, column: 2, scope: !16415)
!16439 = !DILocation(line: 5691, column: 21, scope: !16415)
!16440 = !DILocation(line: 5691, column: 2, scope: !16415)
!16441 = !DILocation(line: 5692, column: 1, scope: !16415)
!16442 = distinct !DISubprogram(name: "ata_host_activate", scope: !3, file: !3, line: 5816, type: !16443, scopeLine: 5819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16443 = !DISubroutineType(types: !16444)
!16444 = !{!223, !6675, !223, !16445, !994, !5944}
!16445 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !6265, line: 92, baseType: !16446)
!16446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16447, size: 64)
!16447 = !DISubroutineType(types: !16448)
!16448 = !{!16449, !223, !991}
!16449 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !963, line: 17, baseType: !962)
!16450 = !DILocalVariable(name: "host", arg: 1, scope: !16442, file: !3, line: 5816, type: !6675)
!16451 = !DILocation(line: 5816, column: 40, scope: !16442)
!16452 = !DILocalVariable(name: "irq", arg: 2, scope: !16442, file: !3, line: 5816, type: !223)
!16453 = !DILocation(line: 5816, column: 50, scope: !16442)
!16454 = !DILocalVariable(name: "irq_handler", arg: 3, scope: !16442, file: !3, line: 5817, type: !16445)
!16455 = !DILocation(line: 5817, column: 23, scope: !16442)
!16456 = !DILocalVariable(name: "irq_flags", arg: 4, scope: !16442, file: !3, line: 5817, type: !994)
!16457 = !DILocation(line: 5817, column: 50, scope: !16442)
!16458 = !DILocalVariable(name: "sht", arg: 5, scope: !16442, file: !3, line: 5818, type: !5944)
!16459 = !DILocation(line: 5818, column: 36, scope: !16442)
!16460 = !DILocalVariable(name: "i", scope: !16442, file: !3, line: 5820, type: !223)
!16461 = !DILocation(line: 5820, column: 6, scope: !16442)
!16462 = !DILocalVariable(name: "rc", scope: !16442, file: !3, line: 5820, type: !223)
!16463 = !DILocation(line: 5820, column: 9, scope: !16442)
!16464 = !DILocalVariable(name: "irq_desc", scope: !16442, file: !3, line: 5821, type: !1476)
!16465 = !DILocation(line: 5821, column: 8, scope: !16442)
!16466 = !DILocation(line: 5823, column: 22, scope: !16442)
!16467 = !DILocation(line: 5823, column: 7, scope: !16442)
!16468 = !DILocation(line: 5823, column: 5, scope: !16442)
!16469 = !DILocation(line: 5824, column: 6, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 5824, column: 6)
!16471 = !DILocation(line: 5824, column: 6, scope: !16442)
!16472 = !DILocation(line: 5825, column: 10, scope: !16470)
!16473 = !DILocation(line: 5825, column: 3, scope: !16470)
!16474 = !DILocation(line: 5828, column: 7, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 5828, column: 6)
!16476 = !DILocation(line: 5828, column: 6, scope: !16442)
!16477 = !DILocalVariable(name: "__ret_warn_on", scope: !16478, file: !3, line: 5829, type: !223)
!16478 = distinct !DILexicalBlock(scope: !16479, file: !3, line: 5829, column: 3)
!16479 = distinct !DILexicalBlock(scope: !16475, file: !3, line: 5828, column: 12)
!16480 = !DILocation(line: 5829, column: 3, scope: !16478)
!16481 = !DILocation(line: 5829, column: 3, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 5829, column: 3)
!16483 = !DILocation(line: 5829, column: 3, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16482, file: !3, line: 5829, column: 3)
!16485 = !DILocation(line: 5829, column: 3, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16484, file: !3, line: 5829, column: 3)
!16487 = !DILocation(line: 5829, column: 3, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16484, file: !3, line: 5829, column: 3)
!16489 = !{i32 -2139165281, i32 -2139165252, i32 -2139165206, i32 -2139165148, i32 -2139165094, i32 -2139165040, i32 -2139164985, i32 -2139164954}
!16490 = !DILocation(line: 5829, column: 3, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16484, file: !3, line: 5829, column: 3)
!16492 = !{i32 -2139164546, i32 -2139164539, i32 -2139164487, i32 -2139164456, i32 -2139164426}
!16493 = !DILocation(line: 5829, column: 3, scope: !16494)
!16494 = distinct !DILexicalBlock(scope: !16484, file: !3, line: 5829, column: 3)
!16495 = !DILocation(line: 5830, column: 28, scope: !16479)
!16496 = !DILocation(line: 5830, column: 34, scope: !16479)
!16497 = !DILocation(line: 5830, column: 10, scope: !16479)
!16498 = !DILocation(line: 5830, column: 3, scope: !16479)
!16499 = !DILocation(line: 5833, column: 28, scope: !16442)
!16500 = !DILocation(line: 5833, column: 34, scope: !16442)
!16501 = !DILocation(line: 5834, column: 25, scope: !16442)
!16502 = !DILocation(line: 5834, column: 31, scope: !16442)
!16503 = !DILocation(line: 5834, column: 7, scope: !16442)
!16504 = !DILocation(line: 5835, column: 16, scope: !16442)
!16505 = !DILocation(line: 5835, column: 22, scope: !16442)
!16506 = !DILocation(line: 5835, column: 7, scope: !16442)
!16507 = !DILocation(line: 5833, column: 13, scope: !16442)
!16508 = !DILocation(line: 5833, column: 11, scope: !16442)
!16509 = !DILocation(line: 5836, column: 7, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 5836, column: 6)
!16511 = !DILocation(line: 5836, column: 6, scope: !16442)
!16512 = !DILocation(line: 5837, column: 3, scope: !16510)
!16513 = !DILocation(line: 5839, column: 24, scope: !16442)
!16514 = !DILocation(line: 5839, column: 30, scope: !16442)
!16515 = !DILocation(line: 5839, column: 35, scope: !16442)
!16516 = !DILocation(line: 5839, column: 40, scope: !16442)
!16517 = !DILocation(line: 5839, column: 53, scope: !16442)
!16518 = !DILocation(line: 5840, column: 10, scope: !16442)
!16519 = !DILocation(line: 5840, column: 20, scope: !16442)
!16520 = !DILocation(line: 5839, column: 7, scope: !16442)
!16521 = !DILocation(line: 5839, column: 5, scope: !16442)
!16522 = !DILocation(line: 5841, column: 6, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 5841, column: 6)
!16524 = !DILocation(line: 5841, column: 6, scope: !16442)
!16525 = !DILocation(line: 5842, column: 10, scope: !16523)
!16526 = !DILocation(line: 5842, column: 3, scope: !16523)
!16527 = !DILocation(line: 5844, column: 9, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 5844, column: 2)
!16529 = !DILocation(line: 5844, column: 7, scope: !16528)
!16530 = !DILocation(line: 5844, column: 14, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 5844, column: 2)
!16532 = !DILocation(line: 5844, column: 18, scope: !16531)
!16533 = !DILocation(line: 5844, column: 24, scope: !16531)
!16534 = !DILocation(line: 5844, column: 16, scope: !16531)
!16535 = !DILocation(line: 5844, column: 2, scope: !16528)
!16536 = !DILocation(line: 5845, column: 17, scope: !16531)
!16537 = !DILocation(line: 5845, column: 23, scope: !16531)
!16538 = !DILocation(line: 5845, column: 29, scope: !16531)
!16539 = !DILocation(line: 5845, column: 43, scope: !16531)
!16540 = !DILocation(line: 5845, column: 3, scope: !16531)
!16541 = !DILocation(line: 5844, column: 34, scope: !16531)
!16542 = !DILocation(line: 5844, column: 2, scope: !16531)
!16543 = distinct !{!16543, !16535, !16544}
!16544 = !DILocation(line: 5845, column: 46, scope: !16528)
!16545 = !DILocation(line: 5847, column: 25, scope: !16442)
!16546 = !DILocation(line: 5847, column: 31, scope: !16442)
!16547 = !DILocation(line: 5847, column: 7, scope: !16442)
!16548 = !DILocation(line: 5847, column: 5, scope: !16442)
!16549 = !DILocation(line: 5849, column: 6, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 5849, column: 6)
!16551 = !DILocation(line: 5849, column: 6, scope: !16442)
!16552 = !DILocation(line: 5850, column: 17, scope: !16550)
!16553 = !DILocation(line: 5850, column: 23, scope: !16550)
!16554 = !DILocation(line: 5850, column: 28, scope: !16550)
!16555 = !DILocation(line: 5850, column: 33, scope: !16550)
!16556 = !DILocation(line: 5850, column: 3, scope: !16550)
!16557 = !DILocation(line: 5852, column: 9, scope: !16442)
!16558 = !DILocation(line: 5852, column: 2, scope: !16442)
!16559 = !DILocation(line: 5853, column: 1, scope: !16442)
!16560 = distinct !DISubprogram(name: "dev_name", scope: !52, file: !52, line: 609, type: !16561, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16561 = !DISubroutineType(types: !16562)
!16562 = !{!1450, !3288}
!16563 = !DILocalVariable(name: "dev", arg: 1, scope: !16560, file: !52, line: 609, type: !3288)
!16564 = !DILocation(line: 609, column: 57, scope: !16560)
!16565 = !DILocation(line: 612, column: 6, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16560, file: !52, line: 612, column: 6)
!16567 = !DILocation(line: 612, column: 11, scope: !16566)
!16568 = !DILocation(line: 612, column: 6, scope: !16560)
!16569 = !DILocation(line: 613, column: 10, scope: !16566)
!16570 = !DILocation(line: 613, column: 15, scope: !16566)
!16571 = !DILocation(line: 613, column: 3, scope: !16566)
!16572 = !DILocation(line: 615, column: 23, scope: !16560)
!16573 = !DILocation(line: 615, column: 28, scope: !16560)
!16574 = !DILocation(line: 615, column: 9, scope: !16560)
!16575 = !DILocation(line: 615, column: 2, scope: !16560)
!16576 = !DILocation(line: 616, column: 1, scope: !16560)
!16577 = distinct !DISubprogram(name: "devm_request_irq", scope: !6265, file: !6265, line: 203, type: !16578, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16578 = !DISubroutineType(types: !16579)
!16579 = !{!223, !2957, !7, !16445, !994, !1450, !991}
!16580 = !DILocalVariable(name: "dev", arg: 1, scope: !16577, file: !6265, line: 203, type: !2957)
!16581 = !DILocation(line: 203, column: 33, scope: !16577)
!16582 = !DILocalVariable(name: "irq", arg: 2, scope: !16577, file: !6265, line: 203, type: !7)
!16583 = !DILocation(line: 203, column: 51, scope: !16577)
!16584 = !DILocalVariable(name: "handler", arg: 3, scope: !16577, file: !6265, line: 203, type: !16445)
!16585 = !DILocation(line: 203, column: 70, scope: !16577)
!16586 = !DILocalVariable(name: "irqflags", arg: 4, scope: !16577, file: !6265, line: 204, type: !994)
!16587 = !DILocation(line: 204, column: 18, scope: !16577)
!16588 = !DILocalVariable(name: "devname", arg: 5, scope: !16577, file: !6265, line: 204, type: !1450)
!16589 = !DILocation(line: 204, column: 40, scope: !16577)
!16590 = !DILocalVariable(name: "dev_id", arg: 6, scope: !16577, file: !6265, line: 204, type: !991)
!16591 = !DILocation(line: 204, column: 55, scope: !16577)
!16592 = !DILocation(line: 206, column: 35, scope: !16577)
!16593 = !DILocation(line: 206, column: 40, scope: !16577)
!16594 = !DILocation(line: 206, column: 45, scope: !16577)
!16595 = !DILocation(line: 206, column: 60, scope: !16577)
!16596 = !DILocation(line: 207, column: 7, scope: !16577)
!16597 = !DILocation(line: 207, column: 16, scope: !16577)
!16598 = !DILocation(line: 206, column: 9, scope: !16577)
!16599 = !DILocation(line: 206, column: 2, scope: !16577)
!16600 = distinct !DISubprogram(name: "ata_host_detach", scope: !3, file: !3, line: 5917, type: !6673, scopeLine: 5918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16601 = !DILocalVariable(name: "host", arg: 1, scope: !16600, file: !3, line: 5917, type: !6675)
!16602 = !DILocation(line: 5917, column: 39, scope: !16600)
!16603 = !DILocalVariable(name: "i", scope: !16600, file: !3, line: 5919, type: !223)
!16604 = !DILocation(line: 5919, column: 6, scope: !16600)
!16605 = !DILocation(line: 5921, column: 9, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16600, file: !3, line: 5921, column: 2)
!16607 = !DILocation(line: 5921, column: 7, scope: !16606)
!16608 = !DILocation(line: 5921, column: 14, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16606, file: !3, line: 5921, column: 2)
!16610 = !DILocation(line: 5921, column: 18, scope: !16609)
!16611 = !DILocation(line: 5921, column: 24, scope: !16609)
!16612 = !DILocation(line: 5921, column: 16, scope: !16609)
!16613 = !DILocation(line: 5921, column: 2, scope: !16606)
!16614 = !DILocation(line: 5923, column: 28, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16609, file: !3, line: 5921, column: 38)
!16616 = !DILocation(line: 5923, column: 34, scope: !16615)
!16617 = !DILocation(line: 5923, column: 40, scope: !16615)
!16618 = !DILocation(line: 5923, column: 44, scope: !16615)
!16619 = !DILocation(line: 5923, column: 51, scope: !16615)
!16620 = !DILocation(line: 5923, column: 3, scope: !16615)
!16621 = !DILocation(line: 5924, column: 19, scope: !16615)
!16622 = !DILocation(line: 5924, column: 25, scope: !16615)
!16623 = !DILocation(line: 5924, column: 31, scope: !16615)
!16624 = !DILocation(line: 5924, column: 3, scope: !16615)
!16625 = !DILocation(line: 5925, column: 2, scope: !16615)
!16626 = !DILocation(line: 5921, column: 34, scope: !16609)
!16627 = !DILocation(line: 5921, column: 2, scope: !16609)
!16628 = distinct !{!16628, !16613, !16629}
!16629 = !DILocation(line: 5925, column: 2, scope: !16606)
!16630 = !DILocation(line: 5928, column: 22, scope: !16600)
!16631 = !DILocation(line: 5928, column: 2, scope: !16600)
!16632 = !DILocation(line: 5929, column: 1, scope: !16600)
!16633 = distinct !DISubprogram(name: "ata_port_detach", scope: !3, file: !3, line: 5867, type: !6622, scopeLine: 5868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16634 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 5880, column: 2, scope: !16633)
!16636 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !16635)
!16637 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 5877, column: 2, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16640, file: !3, line: 5877, column: 2)
!16640 = distinct !DILexicalBlock(scope: !16641, file: !3, line: 5877, column: 2)
!16641 = distinct !DILexicalBlock(scope: !16642, file: !3, line: 5877, column: 2)
!16642 = distinct !DILexicalBlock(scope: !16643, file: !3, line: 5877, column: 2)
!16643 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 5877, column: 2)
!16644 = !DILocalVariable(name: "ap", arg: 1, scope: !16633, file: !3, line: 5867, type: !1005)
!16645 = !DILocation(line: 5867, column: 46, scope: !16633)
!16646 = !DILocalVariable(name: "flags", scope: !16633, file: !3, line: 5869, type: !994)
!16647 = !DILocation(line: 5869, column: 16, scope: !16633)
!16648 = !DILocalVariable(name: "link", scope: !16633, file: !3, line: 5870, type: !6378)
!16649 = !DILocation(line: 5870, column: 19, scope: !16633)
!16650 = !DILocalVariable(name: "dev", scope: !16633, file: !3, line: 5871, type: !6374)
!16651 = !DILocation(line: 5871, column: 21, scope: !16633)
!16652 = !DILocation(line: 5873, column: 7, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 5873, column: 6)
!16654 = !DILocation(line: 5873, column: 11, scope: !16653)
!16655 = !DILocation(line: 5873, column: 16, scope: !16653)
!16656 = !DILocation(line: 5873, column: 6, scope: !16633)
!16657 = !DILocation(line: 5874, column: 3, scope: !16653)
!16658 = !DILocation(line: 5877, column: 2, scope: !16633)
!16659 = !DILocation(line: 5877, column: 2, scope: !16643)
!16660 = !DILocalVariable(name: "__dummy", scope: !16661, file: !3, line: 5877, type: !994)
!16661 = distinct !DILexicalBlock(scope: !16642, file: !3, line: 5877, column: 2)
!16662 = !DILocation(line: 5877, column: 2, scope: !16661)
!16663 = !DILocalVariable(name: "__dummy2", scope: !16661, file: !3, line: 5877, type: !994)
!16664 = !DILocation(line: 5877, column: 2, scope: !16642)
!16665 = !DILocation(line: 5877, column: 2, scope: !16641)
!16666 = !DILocation(line: 5877, column: 2, scope: !16667)
!16667 = distinct !DILexicalBlock(scope: !16641, file: !3, line: 5877, column: 2)
!16668 = !DILocalVariable(name: "__dummy", scope: !16669, file: !3, line: 5877, type: !994)
!16669 = distinct !DILexicalBlock(scope: !16670, file: !3, line: 5877, column: 2)
!16670 = distinct !DILexicalBlock(scope: !16667, file: !3, line: 5877, column: 2)
!16671 = !DILocation(line: 5877, column: 2, scope: !16669)
!16672 = !DILocalVariable(name: "__dummy2", scope: !16669, file: !3, line: 5877, type: !994)
!16673 = !DILocation(line: 5877, column: 2, scope: !16670)
!16674 = !DILocation(line: 5877, column: 2, scope: !16640)
!16675 = !{i32 -2139163175}
!16676 = !DILocation(line: 5877, column: 2, scope: !16639)
!16677 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !16638)
!16678 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !16638)
!16679 = !DILocation(line: 5878, column: 2, scope: !16633)
!16680 = !DILocation(line: 5878, column: 6, scope: !16633)
!16681 = !DILocation(line: 5878, column: 13, scope: !16633)
!16682 = !DILocation(line: 5879, column: 23, scope: !16633)
!16683 = !DILocation(line: 5879, column: 2, scope: !16633)
!16684 = !DILocation(line: 5880, column: 25, scope: !16633)
!16685 = !DILocation(line: 5880, column: 29, scope: !16633)
!16686 = !DILocation(line: 5880, column: 35, scope: !16633)
!16687 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !16635)
!16688 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !16635)
!16689 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !16635)
!16690 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !16635)
!16691 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !16635)
!16692 = !DILocation(line: 5883, column: 19, scope: !16633)
!16693 = !DILocation(line: 5883, column: 2, scope: !16633)
!16694 = !DILocalVariable(name: "__ret_warn_on", scope: !16695, file: !3, line: 5886, type: !223)
!16695 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 5886, column: 2)
!16696 = !DILocation(line: 5886, column: 2, scope: !16695)
!16697 = !DILocation(line: 5886, column: 2, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16695, file: !3, line: 5886, column: 2)
!16699 = !DILocation(line: 5886, column: 2, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16698, file: !3, line: 5886, column: 2)
!16701 = !DILocation(line: 5886, column: 2, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16700, file: !3, line: 5886, column: 2)
!16703 = !DILocation(line: 5886, column: 2, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !16700, file: !3, line: 5886, column: 2)
!16705 = !{i32 -2139162537, i32 -2139162508, i32 -2139162462, i32 -2139162404, i32 -2139162350, i32 -2139162296, i32 -2139162241, i32 -2139162210}
!16706 = !DILocation(line: 5886, column: 2, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16700, file: !3, line: 5886, column: 2)
!16708 = !{i32 -2139161802, i32 -2139161795, i32 -2139161743, i32 -2139161712, i32 -2139161682}
!16709 = !DILocation(line: 5886, column: 2, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16700, file: !3, line: 5886, column: 2)
!16711 = !DILocation(line: 5888, column: 28, scope: !16633)
!16712 = !DILocation(line: 5888, column: 32, scope: !16633)
!16713 = !DILocation(line: 5888, column: 2, scope: !16633)
!16714 = !DILabel(scope: !16633, name: "skip_eh", file: !3, line: 5890)
!16715 = !DILocation(line: 5890, column: 2, scope: !16633)
!16716 = !DILocation(line: 5892, column: 2, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 5892, column: 2)
!16718 = !DILocation(line: 5892, column: 2, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 5892, column: 2)
!16720 = !DILocation(line: 5893, column: 3, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 5893, column: 3)
!16722 = distinct !DILexicalBlock(scope: !16719, file: !3, line: 5892, column: 42)
!16723 = !DILocation(line: 5893, column: 3, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16721, file: !3, line: 5893, column: 3)
!16725 = !DILocation(line: 5894, column: 26, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16727, file: !3, line: 5894, column: 8)
!16727 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 5893, column: 36)
!16728 = !DILocation(line: 5894, column: 8, scope: !16726)
!16729 = !DILocation(line: 5894, column: 8, scope: !16727)
!16730 = !DILocation(line: 5895, column: 16, scope: !16726)
!16731 = !DILocation(line: 5895, column: 5, scope: !16726)
!16732 = !DILocation(line: 5896, column: 3, scope: !16727)
!16733 = distinct !{!16733, !16720, !16734}
!16734 = !DILocation(line: 5896, column: 3, scope: !16721)
!16735 = !DILocation(line: 5897, column: 2, scope: !16722)
!16736 = distinct !{!16736, !16716, !16737}
!16737 = !DILocation(line: 5897, column: 2, scope: !16717)
!16738 = !DILocation(line: 5898, column: 6, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 5898, column: 6)
!16740 = !DILocation(line: 5898, column: 10, scope: !16739)
!16741 = !DILocation(line: 5898, column: 6, scope: !16633)
!16742 = !DILocalVariable(name: "i", scope: !16743, file: !3, line: 5899, type: !223)
!16743 = distinct !DILexicalBlock(scope: !16739, file: !3, line: 5898, column: 20)
!16744 = !DILocation(line: 5899, column: 7, scope: !16743)
!16745 = !DILocation(line: 5900, column: 10, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16743, file: !3, line: 5900, column: 3)
!16747 = !DILocation(line: 5900, column: 8, scope: !16746)
!16748 = !DILocation(line: 5900, column: 15, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16746, file: !3, line: 5900, column: 3)
!16750 = !DILocation(line: 5900, column: 17, scope: !16749)
!16751 = !DILocation(line: 5900, column: 3, scope: !16746)
!16752 = !DILocation(line: 5901, column: 22, scope: !16749)
!16753 = !DILocation(line: 5901, column: 26, scope: !16749)
!16754 = !DILocation(line: 5901, column: 35, scope: !16749)
!16755 = !DILocation(line: 5901, column: 4, scope: !16749)
!16756 = !DILocation(line: 5900, column: 40, scope: !16749)
!16757 = !DILocation(line: 5900, column: 3, scope: !16749)
!16758 = distinct !{!16758, !16751, !16759}
!16759 = !DILocation(line: 5901, column: 37, scope: !16746)
!16760 = !DILocation(line: 5902, column: 2, scope: !16743)
!16761 = !DILocation(line: 5904, column: 19, scope: !16633)
!16762 = !DILocation(line: 5904, column: 23, scope: !16633)
!16763 = !DILocation(line: 5904, column: 2, scope: !16633)
!16764 = !DILocation(line: 5905, column: 19, scope: !16633)
!16765 = !DILocation(line: 5905, column: 2, scope: !16633)
!16766 = !DILocation(line: 5906, column: 1, scope: !16633)
!16767 = distinct !DISubprogram(name: "ata_pci_remove_one", scope: !3, file: !3, line: 5945, type: !16768, scopeLine: 5946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!16768 = !DISubroutineType(types: !16769)
!16769 = !{null, !16770}
!16770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16771, size: 64)
!16771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !996, line: 309, size: 19264, elements: !16772)
!16772 = !{!16773, !16774, !16846, !16847, !16848, !16849, !16860, !16861, !16862, !16863, !16864, !16865, !16866, !16867, !16868, !16869, !16870, !16871, !16872, !16873, !16874, !16875, !16876, !16939, !16940, !16941, !16942, !16943, !16944, !16945, !16946, !16947, !16948, !16949, !16950, !16951, !16952, !16953, !16954, !16955, !16956, !16957, !16958, !16959, !16960, !16961, !16964, !16965, !16966, !16967, !16968, !16969, !16970, !16971, !16973, !16974, !16975, !16976, !16977, !16978, !16979, !16980, !16981, !16982, !16983, !16984, !16985, !16986, !16987, !16988, !16989, !16990, !16991, !16992, !16993, !16994, !16995, !16996, !16997, !16998, !16999, !17000, !17001, !17002, !17003, !17004, !17005, !17006, !17007, !17008, !17009, !17010, !17012, !17013, !17014, !17015, !17016, !17017, !17019, !17020, !17021, !17024, !17031, !17032, !17033, !17034, !17035, !17036, !17037}
!16773 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !16771, file: !996, line: 310, baseType: !1013, size: 128)
!16774 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !16771, file: !996, line: 311, baseType: !16775, size: 64, offset: 128)
!16775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16776, size: 64)
!16776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !996, line: 605, size: 8064, elements: !16777)
!16777 = !{!16778, !16779, !16780, !16781, !16782, !16783, !16784, !16799, !16800, !16801, !16825, !16828, !16829, !16830, !16831, !16832, !16833, !16834, !16838, !16839, !16841, !16842, !16843, !16844, !16845}
!16778 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16776, file: !996, line: 606, baseType: !1013, size: 128)
!16779 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !16776, file: !996, line: 607, baseType: !16775, size: 64, offset: 128)
!16780 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16776, file: !996, line: 608, baseType: !1013, size: 128, offset: 192)
!16781 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !16776, file: !996, line: 609, baseType: !1013, size: 128, offset: 320)
!16782 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !16776, file: !996, line: 610, baseType: !16770, size: 64, offset: 448)
!16783 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !16776, file: !996, line: 611, baseType: !1013, size: 128, offset: 512)
!16784 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !16776, file: !996, line: 613, baseType: !16785, size: 256, offset: 640)
!16785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16786, size: 256, elements: !2003)
!16786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16787, size: 64)
!16787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !16788, line: 20, size: 512, elements: !16789)
!16788 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!16789 = !{!16790, !16792, !16793, !16794, !16795, !16796, !16797, !16798}
!16790 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16787, file: !16788, line: 21, baseType: !16791, size: 64)
!16791 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !993, line: 158, baseType: !5760)
!16792 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !16787, file: !16788, line: 22, baseType: !16791, size: 64, offset: 64)
!16793 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16787, file: !16788, line: 23, baseType: !1450, size: 64, offset: 128)
!16794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16787, file: !16788, line: 24, baseType: !994, size: 64, offset: 192)
!16795 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !16787, file: !16788, line: 25, baseType: !994, size: 64, offset: 256)
!16796 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !16787, file: !16788, line: 26, baseType: !16786, size: 64, offset: 320)
!16797 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !16787, file: !16788, line: 26, baseType: !16786, size: 64, offset: 384)
!16798 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !16787, file: !16788, line: 26, baseType: !16786, size: 64, offset: 448)
!16799 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !16776, file: !996, line: 614, baseType: !1013, size: 128, offset: 896)
!16800 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !16776, file: !996, line: 615, baseType: !16787, size: 512, offset: 1024)
!16801 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !16776, file: !996, line: 617, baseType: !16802, size: 64, offset: 1536)
!16802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16803, size: 64)
!16803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !996, line: 731, size: 320, elements: !16804)
!16804 = !{!16805, !16809, !16813, !16817, !16821}
!16805 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !16803, file: !996, line: 732, baseType: !16806, size: 64)
!16806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16807, size: 64)
!16807 = !DISubroutineType(types: !16808)
!16808 = !{!223, !16775}
!16809 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !16803, file: !996, line: 733, baseType: !16810, size: 64, offset: 64)
!16810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16811, size: 64)
!16811 = !DISubroutineType(types: !16812)
!16812 = !{null, !16775}
!16813 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !16803, file: !996, line: 734, baseType: !16814, size: 64, offset: 128)
!16814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16815, size: 64)
!16815 = !DISubroutineType(types: !16816)
!16816 = !{!991, !16775, !7, !223}
!16817 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !16803, file: !996, line: 735, baseType: !16818, size: 64, offset: 192)
!16818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16819, size: 64)
!16819 = !DISubroutineType(types: !16820)
!16820 = !{!223, !16775, !7, !223, !223, !5278}
!16821 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !16803, file: !996, line: 736, baseType: !16822, size: 64, offset: 256)
!16822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16823, size: 64)
!16823 = !DISubroutineType(types: !16824)
!16824 = !{!223, !16775, !7, !223, !223, !989}
!16825 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !16776, file: !996, line: 618, baseType: !16826, size: 64, offset: 1600)
!16826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16827, size: 64)
!16827 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !996, line: 537, flags: DIFlagFwdDecl)
!16828 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !16776, file: !996, line: 619, baseType: !991, size: 64, offset: 1664)
!16829 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !16776, file: !996, line: 620, baseType: !6263, size: 64, offset: 1728)
!16830 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !16776, file: !996, line: 622, baseType: !1218, size: 8, offset: 1792)
!16831 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !16776, file: !996, line: 623, baseType: !1218, size: 8, offset: 1800)
!16832 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !16776, file: !996, line: 624, baseType: !1218, size: 8, offset: 1808)
!16833 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !16776, file: !996, line: 625, baseType: !1218, size: 8, offset: 1816)
!16834 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16776, file: !996, line: 630, baseType: !16835, size: 384, offset: 1824)
!16835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 384, elements: !16836)
!16836 = !{!16837}
!16837 = !DISubrange(count: 48)
!16838 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !16776, file: !996, line: 632, baseType: !1001, size: 16, offset: 2208)
!16839 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !16776, file: !996, line: 633, baseType: !16840, size: 16, offset: 2224)
!16840 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !996, line: 237, baseType: !1001)
!16841 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !16776, file: !996, line: 634, baseType: !2957, size: 64, offset: 2240)
!16842 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !16776, file: !996, line: 635, baseType: !2658, size: 5568, offset: 2304)
!16843 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !16776, file: !996, line: 636, baseType: !2754, size: 64, offset: 7872)
!16844 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !16776, file: !996, line: 637, baseType: !2754, size: 64, offset: 7936)
!16845 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !16776, file: !996, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!16846 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !16771, file: !996, line: 312, baseType: !16775, size: 64, offset: 192)
!16847 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !16771, file: !996, line: 314, baseType: !991, size: 64, offset: 256)
!16848 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !16771, file: !996, line: 315, baseType: !6263, size: 64, offset: 320)
!16849 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !16771, file: !996, line: 316, baseType: !16850, size: 64, offset: 384)
!16850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16851, size: 64)
!16851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !996, line: 69, size: 832, elements: !16852)
!16852 = !{!16853, !16854, !16855, !16858, !16859}
!16853 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !16851, file: !996, line: 70, baseType: !16775, size: 64)
!16854 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !16851, file: !996, line: 71, baseType: !1013, size: 128, offset: 64)
!16855 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !16851, file: !996, line: 72, baseType: !16856, size: 64, offset: 192)
!16856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16857, size: 64)
!16857 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !996, line: 72, flags: DIFlagFwdDecl)
!16858 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !16851, file: !996, line: 73, baseType: !1218, size: 8, offset: 256)
!16859 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !16851, file: !996, line: 74, baseType: !2661, size: 512, offset: 320)
!16860 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !16771, file: !996, line: 318, baseType: !7, size: 32, offset: 448)
!16861 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !16771, file: !996, line: 319, baseType: !1001, size: 16, offset: 480)
!16862 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !16771, file: !996, line: 320, baseType: !1001, size: 16, offset: 496)
!16863 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !16771, file: !996, line: 321, baseType: !1001, size: 16, offset: 512)
!16864 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !16771, file: !996, line: 322, baseType: !1001, size: 16, offset: 528)
!16865 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !16771, file: !996, line: 323, baseType: !7, size: 32, offset: 544)
!16866 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !16771, file: !996, line: 324, baseType: !1216, size: 8, offset: 576)
!16867 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !16771, file: !996, line: 325, baseType: !1216, size: 8, offset: 584)
!16868 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !16771, file: !996, line: 330, baseType: !1216, size: 8, offset: 592)
!16869 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !16771, file: !996, line: 331, baseType: !1216, size: 8, offset: 600)
!16870 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !16771, file: !996, line: 332, baseType: !1216, size: 8, offset: 608)
!16871 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !16771, file: !996, line: 333, baseType: !1216, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!16872 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !16771, file: !996, line: 334, baseType: !1216, size: 8, offset: 624)
!16873 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !16771, file: !996, line: 335, baseType: !1216, size: 8, offset: 632)
!16874 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !16771, file: !996, line: 336, baseType: !1740, size: 16, offset: 640)
!16875 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !16771, file: !996, line: 337, baseType: !3393, size: 64, offset: 704)
!16876 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !16771, file: !996, line: 339, baseType: !16877, size: 64, offset: 768)
!16877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16878, size: 64)
!16878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !996, line: 858, size: 2048, elements: !16879)
!16879 = !{!16880, !16881, !16882, !16894, !16898, !16900, !16904, !16908, !16909, !16913, !16932, !16933, !16934}
!16880 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16878, file: !996, line: 859, baseType: !1013, size: 128)
!16881 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16878, file: !996, line: 860, baseType: !1450, size: 64, offset: 128)
!16882 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !16878, file: !996, line: 861, baseType: !16883, size: 64, offset: 192)
!16883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16884, size: 64)
!16884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16885)
!16885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3041, line: 38, size: 256, elements: !16886)
!16886 = !{!16887, !16888, !16889, !16890, !16891, !16892, !16893}
!16887 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !16885, file: !3041, line: 39, baseType: !990, size: 32)
!16888 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !16885, file: !3041, line: 39, baseType: !990, size: 32, offset: 32)
!16889 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !16885, file: !3041, line: 40, baseType: !990, size: 32, offset: 64)
!16890 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !16885, file: !3041, line: 40, baseType: !990, size: 32, offset: 96)
!16891 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !16885, file: !3041, line: 41, baseType: !990, size: 32, offset: 128)
!16892 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !16885, file: !3041, line: 41, baseType: !990, size: 32, offset: 160)
!16893 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !16885, file: !3041, line: 42, baseType: !3061, size: 64, offset: 192)
!16894 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !16878, file: !996, line: 862, baseType: !16895, size: 64, offset: 256)
!16895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16896, size: 64)
!16896 = !DISubroutineType(types: !16897)
!16897 = !{!223, !16770, !16883}
!16898 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !16878, file: !996, line: 863, baseType: !16899, size: 64, offset: 320)
!16899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16768, size: 64)
!16900 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !16878, file: !996, line: 864, baseType: !16901, size: 64, offset: 384)
!16901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16902, size: 64)
!16902 = !DISubroutineType(types: !16903)
!16903 = !{!223, !16770, !3072}
!16904 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !16878, file: !996, line: 865, baseType: !16905, size: 64, offset: 448)
!16905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16906, size: 64)
!16906 = !DISubroutineType(types: !16907)
!16907 = !{!223, !16770}
!16908 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !16878, file: !996, line: 866, baseType: !16899, size: 64, offset: 512)
!16909 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !16878, file: !996, line: 867, baseType: !16910, size: 64, offset: 576)
!16910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16911, size: 64)
!16911 = !DISubroutineType(types: !16912)
!16912 = !{!223, !16770, !223}
!16913 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !16878, file: !996, line: 868, baseType: !16914, size: 64, offset: 640)
!16914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16915, size: 64)
!16915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16916)
!16916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !996, line: 795, size: 384, elements: !16917)
!16917 = !{!16918, !16924, !16928, !16929, !16930, !16931}
!16918 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !16916, file: !996, line: 797, baseType: !16919, size: 64)
!16919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16920, size: 64)
!16920 = !DISubroutineType(types: !16921)
!16921 = !{!16922, !16770, !16923}
!16922 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !996, line: 772, baseType: !7)
!16923 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !996, line: 180, baseType: !7)
!16924 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !16916, file: !996, line: 801, baseType: !16925, size: 64, offset: 64)
!16925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16926, size: 64)
!16926 = !DISubroutineType(types: !16927)
!16927 = !{!16922, !16770}
!16928 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !16916, file: !996, line: 804, baseType: !16925, size: 64, offset: 128)
!16929 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !16916, file: !996, line: 807, baseType: !16899, size: 64, offset: 192)
!16930 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !16916, file: !996, line: 808, baseType: !16899, size: 64, offset: 256)
!16931 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !16916, file: !996, line: 811, baseType: !16899, size: 64, offset: 320)
!16932 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !16878, file: !996, line: 869, baseType: !2740, size: 64, offset: 704)
!16933 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !16878, file: !996, line: 870, baseType: !3029, size: 1152, offset: 768)
!16934 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !16878, file: !996, line: 871, baseType: !16935, size: 128, offset: 1920)
!16935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !996, line: 759, size: 128, elements: !16936)
!16936 = !{!16937, !16938}
!16937 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16935, file: !996, line: 760, baseType: !1021)
!16938 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !16935, file: !996, line: 761, baseType: !1013, size: 128)
!16939 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !16771, file: !996, line: 340, baseType: !984, size: 64, offset: 832)
!16940 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !16771, file: !996, line: 346, baseType: !3451, size: 128, offset: 896)
!16941 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !16771, file: !996, line: 348, baseType: !995, size: 32, offset: 1024)
!16942 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !16771, file: !996, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!16943 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !16771, file: !996, line: 352, baseType: !1216, size: 8, offset: 1064)
!16944 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !16771, file: !996, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !16771, file: !996, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!16946 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !16771, file: !996, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!16947 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !16771, file: !996, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!16948 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !16771, file: !996, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!16949 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !16771, file: !996, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!16950 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !16771, file: !996, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!16951 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !16771, file: !996, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!16952 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !16771, file: !996, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!16953 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !16771, file: !996, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!16954 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !16771, file: !996, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!16955 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !16771, file: !996, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!16956 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !16771, file: !996, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!16957 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !16771, file: !996, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!16958 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !16771, file: !996, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!16959 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !16771, file: !996, line: 376, baseType: !7, size: 32, offset: 1120)
!16960 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !16771, file: !996, line: 377, baseType: !7, size: 32, offset: 1152)
!16961 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !16771, file: !996, line: 380, baseType: !16962, size: 64, offset: 1216)
!16962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16963, size: 64)
!16963 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !996, line: 303, flags: DIFlagFwdDecl)
!16964 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !16771, file: !996, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!16965 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !16771, file: !996, line: 383, baseType: !223, size: 32, offset: 1312)
!16966 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !16771, file: !996, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!16967 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !16771, file: !996, line: 387, baseType: !16923, size: 32, offset: 1376)
!16968 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !16771, file: !996, line: 388, baseType: !2658, size: 5568, offset: 1408)
!16969 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !16771, file: !996, line: 390, baseType: !223, size: 32, offset: 6976)
!16970 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !16771, file: !996, line: 396, baseType: !7, size: 32, offset: 7008)
!16971 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !16771, file: !996, line: 397, baseType: !16972, size: 8704, offset: 7040)
!16972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16787, size: 8704, elements: !7225)
!16973 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !16771, file: !996, line: 399, baseType: !1495, size: 8, offset: 15744)
!16974 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !16771, file: !996, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!16975 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !16771, file: !996, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!16976 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !16771, file: !996, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!16977 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !16771, file: !996, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!16978 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !16771, file: !996, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!16979 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !16771, file: !996, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!16980 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !16771, file: !996, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!16981 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !16771, file: !996, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!16982 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !16771, file: !996, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!16983 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !16771, file: !996, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!16984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !16771, file: !996, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!16985 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !16771, file: !996, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!16986 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !16771, file: !996, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!16987 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !16771, file: !996, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!16988 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !16771, file: !996, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!16989 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !16771, file: !996, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!16990 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !16771, file: !996, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!16991 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !16771, file: !996, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!16992 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !16771, file: !996, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!16993 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !16771, file: !996, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!16994 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !16771, file: !996, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!16995 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !16771, file: !996, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!16996 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !16771, file: !996, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!16997 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !16771, file: !996, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!16998 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !16771, file: !996, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!16999 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !16771, file: !996, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!17000 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !16771, file: !996, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!17001 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !16771, file: !996, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!17002 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !16771, file: !996, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!17003 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !16771, file: !996, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!17004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !16771, file: !996, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!17005 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !16771, file: !996, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!17006 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !16771, file: !996, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!17007 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !16771, file: !996, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!17008 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !16771, file: !996, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!17009 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !16771, file: !996, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!17010 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !16771, file: !996, line: 450, baseType: !17011, size: 16, offset: 15792)
!17011 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !996, line: 206, baseType: !1001)
!17012 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !16771, file: !996, line: 451, baseType: !1074, size: 32, offset: 15808)
!17013 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !16771, file: !996, line: 453, baseType: !3375, size: 512, offset: 15840)
!17014 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !16771, file: !996, line: 454, baseType: !1547, size: 64, offset: 16384)
!17015 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !16771, file: !996, line: 455, baseType: !2754, size: 64, offset: 16448)
!17016 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !16771, file: !996, line: 456, baseType: !223, size: 32, offset: 16512)
!17017 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !16771, file: !996, line: 457, baseType: !17018, size: 1088, offset: 16576)
!17018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2754, size: 1088, elements: !7225)
!17019 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !16771, file: !996, line: 458, baseType: !17018, size: 1088, offset: 17664)
!17020 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !16771, file: !996, line: 469, baseType: !2740, size: 64, offset: 18752)
!17021 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !16771, file: !996, line: 471, baseType: !17022, size: 64, offset: 18816)
!17022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17023, size: 64)
!17023 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !996, line: 304, flags: DIFlagFwdDecl)
!17024 = !DIDerivedType(tag: DW_TAG_member, scope: !16771, file: !996, line: 478, baseType: !17025, size: 64, offset: 18880)
!17025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16771, file: !996, line: 478, size: 64, elements: !17026)
!17026 = !{!17027, !17030}
!17027 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !17025, file: !996, line: 479, baseType: !17028, size: 64)
!17028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17029, size: 64)
!17029 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !996, line: 305, flags: DIFlagFwdDecl)
!17030 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !17025, file: !996, line: 480, baseType: !16770, size: 64)
!17031 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !16771, file: !996, line: 482, baseType: !1740, size: 16, offset: 18944)
!17032 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !16771, file: !996, line: 483, baseType: !1216, size: 8, offset: 18960)
!17033 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !16771, file: !996, line: 497, baseType: !1740, size: 16, offset: 18976)
!17034 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !16771, file: !996, line: 498, baseType: !5760, size: 64, offset: 19008)
!17035 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !16771, file: !996, line: 499, baseType: !1645, size: 64, offset: 19072)
!17036 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !16771, file: !996, line: 500, baseType: !1476, size: 64, offset: 19136)
!17037 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !16771, file: !996, line: 502, baseType: !994, size: 64, offset: 19200)
!17038 = !DILocalVariable(name: "pdev", arg: 1, scope: !16767, file: !3, line: 5945, type: !16770)
!17039 = !DILocation(line: 5945, column: 41, scope: !16767)
!17040 = !DILocalVariable(name: "host", scope: !16767, file: !3, line: 5947, type: !6675)
!17041 = !DILocation(line: 5947, column: 19, scope: !16767)
!17042 = !DILocation(line: 5947, column: 42, scope: !16767)
!17043 = !DILocation(line: 5947, column: 26, scope: !16767)
!17044 = !DILocation(line: 5949, column: 18, scope: !16767)
!17045 = !DILocation(line: 5949, column: 2, scope: !16767)
!17046 = !DILocation(line: 5950, column: 1, scope: !16767)
!17047 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !996, file: !996, line: 1865, type: !17048, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17048 = !DISubroutineType(types: !17049)
!17049 = !{!991, !16770}
!17050 = !DILocalVariable(name: "pdev", arg: 1, scope: !17047, file: !996, line: 1865, type: !16770)
!17051 = !DILocation(line: 1865, column: 53, scope: !17047)
!17052 = !DILocation(line: 1867, column: 26, scope: !17047)
!17053 = !DILocation(line: 1867, column: 32, scope: !17047)
!17054 = !DILocation(line: 1867, column: 9, scope: !17047)
!17055 = !DILocation(line: 1867, column: 2, scope: !17047)
!17056 = distinct !DISubprogram(name: "ata_pci_shutdown_one", scope: !3, file: !3, line: 5953, type: !16768, scopeLine: 5954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17057 = !DILocalVariable(name: "pdev", arg: 1, scope: !17056, file: !3, line: 5953, type: !16770)
!17058 = !DILocation(line: 5953, column: 43, scope: !17056)
!17059 = !DILocalVariable(name: "host", scope: !17056, file: !3, line: 5955, type: !6675)
!17060 = !DILocation(line: 5955, column: 19, scope: !17056)
!17061 = !DILocation(line: 5955, column: 42, scope: !17056)
!17062 = !DILocation(line: 5955, column: 26, scope: !17056)
!17063 = !DILocalVariable(name: "i", scope: !17056, file: !3, line: 5956, type: !223)
!17064 = !DILocation(line: 5956, column: 6, scope: !17056)
!17065 = !DILocation(line: 5958, column: 9, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17056, file: !3, line: 5958, column: 2)
!17067 = !DILocation(line: 5958, column: 7, scope: !17066)
!17068 = !DILocation(line: 5958, column: 14, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17066, file: !3, line: 5958, column: 2)
!17070 = !DILocation(line: 5958, column: 18, scope: !17069)
!17071 = !DILocation(line: 5958, column: 24, scope: !17069)
!17072 = !DILocation(line: 5958, column: 16, scope: !17069)
!17073 = !DILocation(line: 5958, column: 2, scope: !17066)
!17074 = !DILocalVariable(name: "ap", scope: !17075, file: !3, line: 5959, type: !1005)
!17075 = distinct !DILexicalBlock(scope: !17069, file: !3, line: 5958, column: 38)
!17076 = !DILocation(line: 5959, column: 20, scope: !17075)
!17077 = !DILocation(line: 5959, column: 25, scope: !17075)
!17078 = !DILocation(line: 5959, column: 31, scope: !17075)
!17079 = !DILocation(line: 5959, column: 37, scope: !17075)
!17080 = !DILocation(line: 5961, column: 3, scope: !17075)
!17081 = !DILocation(line: 5961, column: 7, scope: !17075)
!17082 = !DILocation(line: 5961, column: 14, scope: !17075)
!17083 = !DILocation(line: 5964, column: 7, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 5964, column: 7)
!17085 = !DILocation(line: 5964, column: 11, scope: !17084)
!17086 = !DILocation(line: 5964, column: 16, scope: !17084)
!17087 = !DILocation(line: 5964, column: 7, scope: !17075)
!17088 = !DILocation(line: 5965, column: 4, scope: !17084)
!17089 = !DILocation(line: 5965, column: 8, scope: !17084)
!17090 = !DILocation(line: 5965, column: 13, scope: !17084)
!17091 = !DILocation(line: 5965, column: 20, scope: !17084)
!17092 = !DILocation(line: 5968, column: 7, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 5968, column: 7)
!17094 = !DILocation(line: 5968, column: 11, scope: !17093)
!17095 = !DILocation(line: 5968, column: 16, scope: !17093)
!17096 = !DILocation(line: 5968, column: 7, scope: !17075)
!17097 = !DILocation(line: 5969, column: 4, scope: !17093)
!17098 = !DILocation(line: 5969, column: 8, scope: !17093)
!17099 = !DILocation(line: 5969, column: 13, scope: !17093)
!17100 = !DILocation(line: 5969, column: 23, scope: !17093)
!17101 = !DILocation(line: 5970, column: 2, scope: !17075)
!17102 = !DILocation(line: 5958, column: 34, scope: !17069)
!17103 = !DILocation(line: 5958, column: 2, scope: !17069)
!17104 = distinct !{!17104, !17073, !17105}
!17105 = !DILocation(line: 5970, column: 2, scope: !17066)
!17106 = !DILocation(line: 5971, column: 1, scope: !17056)
!17107 = distinct !DISubprogram(name: "pci_test_config_bits", scope: !3, file: !3, line: 5975, type: !17108, scopeLine: 5976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17108 = !DISubroutineType(types: !17109)
!17109 = !{!223, !16770, !17110}
!17110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17111, size: 64)
!17111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17112)
!17112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bits", file: !183, line: 1270, size: 192, elements: !17113)
!17113 = !{!17114, !17115, !17116, !17117}
!17114 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !17112, file: !183, line: 1271, baseType: !7, size: 32)
!17115 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !17112, file: !183, line: 1272, baseType: !7, size: 32, offset: 32)
!17116 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !17112, file: !183, line: 1273, baseType: !994, size: 64, offset: 64)
!17117 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !17112, file: !183, line: 1274, baseType: !994, size: 64, offset: 128)
!17118 = !DILocalVariable(name: "pdev", arg: 1, scope: !17107, file: !3, line: 5975, type: !16770)
!17119 = !DILocation(line: 5975, column: 42, scope: !17107)
!17120 = !DILocalVariable(name: "bits", arg: 2, scope: !17107, file: !3, line: 5975, type: !17110)
!17121 = !DILocation(line: 5975, column: 71, scope: !17107)
!17122 = !DILocalVariable(name: "tmp", scope: !17107, file: !3, line: 5977, type: !994)
!17123 = !DILocation(line: 5977, column: 16, scope: !17107)
!17124 = !DILocation(line: 5979, column: 10, scope: !17107)
!17125 = !DILocation(line: 5979, column: 16, scope: !17107)
!17126 = !DILocation(line: 5979, column: 2, scope: !17107)
!17127 = !DILocalVariable(name: "tmp8", scope: !17128, file: !3, line: 5981, type: !1216)
!17128 = distinct !DILexicalBlock(scope: !17129, file: !3, line: 5980, column: 10)
!17129 = distinct !DILexicalBlock(scope: !17107, file: !3, line: 5979, column: 23)
!17130 = !DILocation(line: 5981, column: 6, scope: !17128)
!17131 = !DILocation(line: 5982, column: 24, scope: !17128)
!17132 = !DILocation(line: 5982, column: 30, scope: !17128)
!17133 = !DILocation(line: 5982, column: 36, scope: !17128)
!17134 = !DILocation(line: 5982, column: 3, scope: !17128)
!17135 = !DILocation(line: 5983, column: 9, scope: !17128)
!17136 = !DILocation(line: 5983, column: 7, scope: !17128)
!17137 = !DILocation(line: 5984, column: 3, scope: !17128)
!17138 = !DILocalVariable(name: "tmp16", scope: !17139, file: !3, line: 5987, type: !1740)
!17139 = distinct !DILexicalBlock(scope: !17129, file: !3, line: 5986, column: 10)
!17140 = !DILocation(line: 5987, column: 7, scope: !17139)
!17141 = !DILocation(line: 5988, column: 24, scope: !17139)
!17142 = !DILocation(line: 5988, column: 30, scope: !17139)
!17143 = !DILocation(line: 5988, column: 36, scope: !17139)
!17144 = !DILocation(line: 5988, column: 3, scope: !17139)
!17145 = !DILocation(line: 5989, column: 9, scope: !17139)
!17146 = !DILocation(line: 5989, column: 7, scope: !17139)
!17147 = !DILocation(line: 5990, column: 3, scope: !17139)
!17148 = !DILocalVariable(name: "tmp32", scope: !17149, file: !3, line: 5993, type: !989)
!17149 = distinct !DILexicalBlock(scope: !17129, file: !3, line: 5992, column: 10)
!17150 = !DILocation(line: 5993, column: 7, scope: !17149)
!17151 = !DILocation(line: 5994, column: 25, scope: !17149)
!17152 = !DILocation(line: 5994, column: 31, scope: !17149)
!17153 = !DILocation(line: 5994, column: 37, scope: !17149)
!17154 = !DILocation(line: 5994, column: 3, scope: !17149)
!17155 = !DILocation(line: 5995, column: 9, scope: !17149)
!17156 = !DILocation(line: 5995, column: 7, scope: !17149)
!17157 = !DILocation(line: 5996, column: 3, scope: !17149)
!17158 = !DILocation(line: 6000, column: 3, scope: !17129)
!17159 = !DILocation(line: 6003, column: 9, scope: !17107)
!17160 = !DILocation(line: 6003, column: 15, scope: !17107)
!17161 = !DILocation(line: 6003, column: 6, scope: !17107)
!17162 = !DILocation(line: 6005, column: 10, scope: !17107)
!17163 = !DILocation(line: 6005, column: 17, scope: !17107)
!17164 = !DILocation(line: 6005, column: 23, scope: !17107)
!17165 = !DILocation(line: 6005, column: 14, scope: !17107)
!17166 = !DILocation(line: 6005, column: 9, scope: !17107)
!17167 = !DILocation(line: 6005, column: 2, scope: !17107)
!17168 = !DILocation(line: 6006, column: 1, scope: !17107)
!17169 = distinct !DISubprogram(name: "ata_pci_device_do_suspend", scope: !3, file: !3, line: 6010, type: !17170, scopeLine: 6011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17170 = !DISubroutineType(types: !17171)
!17171 = !{null, !16770, !3072}
!17172 = !DILocalVariable(name: "pdev", arg: 1, scope: !17169, file: !3, line: 6010, type: !16770)
!17173 = !DILocation(line: 6010, column: 48, scope: !17169)
!17174 = !DILocalVariable(name: "mesg", arg: 2, scope: !17169, file: !3, line: 6010, type: !3072)
!17175 = !DILocation(line: 6010, column: 67, scope: !17169)
!17176 = !DILocation(line: 6012, column: 17, scope: !17169)
!17177 = !DILocation(line: 6012, column: 2, scope: !17169)
!17178 = !DILocation(line: 6013, column: 21, scope: !17169)
!17179 = !DILocation(line: 6013, column: 2, scope: !17169)
!17180 = !DILocation(line: 6015, column: 11, scope: !17181)
!17181 = distinct !DILexicalBlock(scope: !17169, file: !3, line: 6015, column: 6)
!17182 = !DILocation(line: 6015, column: 17, scope: !17181)
!17183 = !DILocation(line: 6015, column: 6, scope: !17169)
!17184 = !DILocation(line: 6016, column: 23, scope: !17181)
!17185 = !DILocation(line: 6016, column: 3, scope: !17181)
!17186 = !DILocation(line: 6017, column: 1, scope: !17169)
!17187 = distinct !DISubprogram(name: "ata_pci_device_do_resume", scope: !3, file: !3, line: 6020, type: !16906, scopeLine: 6021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17188 = !DILocalVariable(name: "pdev", arg: 1, scope: !17187, file: !3, line: 6020, type: !16770)
!17189 = !DILocation(line: 6020, column: 46, scope: !17187)
!17190 = !DILocalVariable(name: "rc", scope: !17187, file: !3, line: 6022, type: !223)
!17191 = !DILocation(line: 6022, column: 6, scope: !17187)
!17192 = !DILocation(line: 6024, column: 22, scope: !17187)
!17193 = !DILocation(line: 6024, column: 2, scope: !17187)
!17194 = !DILocation(line: 6025, column: 20, scope: !17187)
!17195 = !DILocation(line: 6025, column: 2, scope: !17187)
!17196 = !DILocation(line: 6027, column: 26, scope: !17187)
!17197 = !DILocation(line: 6027, column: 7, scope: !17187)
!17198 = !DILocation(line: 6027, column: 5, scope: !17187)
!17199 = !DILocation(line: 6028, column: 6, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17187, file: !3, line: 6028, column: 6)
!17201 = !DILocation(line: 6028, column: 6, scope: !17187)
!17202 = !DILocation(line: 6029, column: 3, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17200, file: !3, line: 6028, column: 10)
!17204 = !DILocation(line: 6031, column: 10, scope: !17203)
!17205 = !DILocation(line: 6031, column: 3, scope: !17203)
!17206 = !DILocation(line: 6034, column: 17, scope: !17187)
!17207 = !DILocation(line: 6034, column: 2, scope: !17187)
!17208 = !DILocation(line: 6035, column: 2, scope: !17187)
!17209 = !DILocation(line: 6036, column: 1, scope: !17187)
!17210 = distinct !DISubprogram(name: "ata_pci_device_suspend", scope: !3, file: !3, line: 6039, type: !16902, scopeLine: 6040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17211 = !DILocalVariable(name: "pdev", arg: 1, scope: !17210, file: !3, line: 6039, type: !16770)
!17212 = !DILocation(line: 6039, column: 44, scope: !17210)
!17213 = !DILocalVariable(name: "mesg", arg: 2, scope: !17210, file: !3, line: 6039, type: !3072)
!17214 = !DILocation(line: 6039, column: 63, scope: !17210)
!17215 = !DILocalVariable(name: "host", scope: !17210, file: !3, line: 6041, type: !6675)
!17216 = !DILocation(line: 6041, column: 19, scope: !17210)
!17217 = !DILocation(line: 6041, column: 42, scope: !17210)
!17218 = !DILocation(line: 6041, column: 26, scope: !17210)
!17219 = !DILocalVariable(name: "rc", scope: !17210, file: !3, line: 6042, type: !223)
!17220 = !DILocation(line: 6042, column: 6, scope: !17210)
!17221 = !DILocation(line: 6044, column: 24, scope: !17210)
!17222 = !DILocation(line: 6044, column: 7, scope: !17210)
!17223 = !DILocation(line: 6044, column: 5, scope: !17210)
!17224 = !DILocation(line: 6045, column: 6, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 6045, column: 6)
!17226 = !DILocation(line: 6045, column: 6, scope: !17210)
!17227 = !DILocation(line: 6046, column: 10, scope: !17225)
!17228 = !DILocation(line: 6046, column: 3, scope: !17225)
!17229 = !DILocation(line: 6048, column: 28, scope: !17210)
!17230 = !DILocation(line: 6048, column: 2, scope: !17210)
!17231 = !DILocation(line: 6050, column: 2, scope: !17210)
!17232 = !DILocation(line: 6051, column: 1, scope: !17210)
!17233 = distinct !DISubprogram(name: "ata_pci_device_resume", scope: !3, file: !3, line: 6054, type: !16906, scopeLine: 6055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17234 = !DILocalVariable(name: "pdev", arg: 1, scope: !17233, file: !3, line: 6054, type: !16770)
!17235 = !DILocation(line: 6054, column: 43, scope: !17233)
!17236 = !DILocalVariable(name: "host", scope: !17233, file: !3, line: 6056, type: !6675)
!17237 = !DILocation(line: 6056, column: 19, scope: !17233)
!17238 = !DILocation(line: 6056, column: 42, scope: !17233)
!17239 = !DILocation(line: 6056, column: 26, scope: !17233)
!17240 = !DILocalVariable(name: "rc", scope: !17233, file: !3, line: 6057, type: !223)
!17241 = !DILocation(line: 6057, column: 6, scope: !17233)
!17242 = !DILocation(line: 6059, column: 32, scope: !17233)
!17243 = !DILocation(line: 6059, column: 7, scope: !17233)
!17244 = !DILocation(line: 6059, column: 5, scope: !17233)
!17245 = !DILocation(line: 6060, column: 6, scope: !17246)
!17246 = distinct !DILexicalBlock(scope: !17233, file: !3, line: 6060, column: 6)
!17247 = !DILocation(line: 6060, column: 9, scope: !17246)
!17248 = !DILocation(line: 6060, column: 6, scope: !17233)
!17249 = !DILocation(line: 6061, column: 19, scope: !17246)
!17250 = !DILocation(line: 6061, column: 3, scope: !17246)
!17251 = !DILocation(line: 6062, column: 9, scope: !17233)
!17252 = !DILocation(line: 6062, column: 2, scope: !17233)
!17253 = distinct !DISubprogram(name: "ata_platform_remove_one", scope: !3, file: !3, line: 6079, type: !17254, scopeLine: 6080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17254 = !DISubroutineType(types: !17255)
!17255 = !{!223, !17256}
!17256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17257, size: 64)
!17257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !17258, line: 22, size: 6208, elements: !17259)
!17258 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!17259 = !{!17260, !17261, !17262, !17263, !17264, !17265, !17266, !17267, !17268, !17275, !17276, !17279}
!17260 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17257, file: !17258, line: 23, baseType: !1450, size: 64)
!17261 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !17257, file: !17258, line: 24, baseType: !223, size: 32, offset: 64)
!17262 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !17257, file: !17258, line: 25, baseType: !1495, size: 8, offset: 96)
!17263 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !17257, file: !17258, line: 26, baseType: !2658, size: 5568, offset: 128)
!17264 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !17257, file: !17258, line: 27, baseType: !984, size: 64, offset: 5696)
!17265 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !17257, file: !17258, line: 28, baseType: !3451, size: 128, offset: 5760)
!17266 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !17257, file: !17258, line: 29, baseType: !989, size: 32, offset: 5888)
!17267 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !17257, file: !17258, line: 30, baseType: !16786, size: 64, offset: 5952)
!17268 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !17257, file: !17258, line: 32, baseType: !17269, size: 64, offset: 6016)
!17269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17270, size: 64)
!17270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17271)
!17271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !3041, line: 586, size: 256, elements: !17272)
!17272 = !{!17273, !17274}
!17273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17271, file: !3041, line: 587, baseType: !6344, size: 160)
!17274 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !17271, file: !3041, line: 588, baseType: !3061, size: 64, offset: 192)
!17275 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !17257, file: !17258, line: 33, baseType: !1476, size: 64, offset: 6080)
!17276 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !17257, file: !17258, line: 36, baseType: !17277, size: 64, offset: 6144)
!17277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17278, size: 64)
!17278 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !17258, line: 18, flags: DIFlagFwdDecl)
!17279 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !17257, file: !17258, line: 39, baseType: !17280, offset: 6208)
!17280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !3458, line: 8, elements: !1035)
!17281 = !DILocalVariable(name: "pdev", arg: 1, scope: !17253, file: !3, line: 6079, type: !17256)
!17282 = !DILocation(line: 6079, column: 53, scope: !17253)
!17283 = !DILocalVariable(name: "host", scope: !17253, file: !3, line: 6081, type: !6675)
!17284 = !DILocation(line: 6081, column: 19, scope: !17253)
!17285 = !DILocation(line: 6081, column: 47, scope: !17253)
!17286 = !DILocation(line: 6081, column: 26, scope: !17253)
!17287 = !DILocation(line: 6083, column: 18, scope: !17253)
!17288 = !DILocation(line: 6083, column: 2, scope: !17253)
!17289 = !DILocation(line: 6085, column: 2, scope: !17253)
!17290 = distinct !DISubprogram(name: "platform_get_drvdata", scope: !17258, file: !17258, line: 231, type: !17291, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17291 = !DISubroutineType(types: !17292)
!17292 = !{!991, !17293}
!17293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17294, size: 64)
!17294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17257)
!17295 = !DILocalVariable(name: "pdev", arg: 1, scope: !17290, file: !17258, line: 231, type: !17293)
!17296 = !DILocation(line: 231, column: 72, scope: !17290)
!17297 = !DILocation(line: 233, column: 26, scope: !17290)
!17298 = !DILocation(line: 233, column: 32, scope: !17290)
!17299 = !DILocation(line: 233, column: 9, scope: !17290)
!17300 = !DILocation(line: 233, column: 2, scope: !17290)
!17301 = distinct !DISubprogram(name: "ata_exit", scope: !3, file: !3, line: 6305, type: !5552, scopeLine: 6306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17302 = !DILocation(line: 6307, column: 24, scope: !17301)
!17303 = !DILocation(line: 6307, column: 2, scope: !17301)
!17304 = !DILocation(line: 6308, column: 2, scope: !17301)
!17305 = !DILocation(line: 6309, column: 2, scope: !17301)
!17306 = !DILocation(line: 6310, column: 2, scope: !17301)
!17307 = !DILocation(line: 6311, column: 1, scope: !17301)
!17308 = distinct !DISubprogram(name: "ata_free_force_param", scope: !3, file: !3, line: 6269, type: !5552, scopeLine: 6270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17309 = !DILocation(line: 6271, column: 8, scope: !17308)
!17310 = !DILocation(line: 6271, column: 2, scope: !17308)
!17311 = !DILocation(line: 6272, column: 1, scope: !17308)
!17312 = distinct !DISubprogram(name: "ata_init", scope: !3, file: !3, line: 6278, type: !17313, scopeLine: 6279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17313 = !DISubroutineType(types: !17314)
!17314 = !{!223}
!17315 = !DILocalVariable(name: "rc", scope: !17312, file: !3, line: 6280, type: !223)
!17316 = !DILocation(line: 6280, column: 6, scope: !17312)
!17317 = !DILocation(line: 6282, column: 2, scope: !17312)
!17318 = !DILocation(line: 6284, column: 7, scope: !17312)
!17319 = !DILocation(line: 6284, column: 5, scope: !17312)
!17320 = !DILocation(line: 6285, column: 6, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 6285, column: 6)
!17322 = !DILocation(line: 6285, column: 6, scope: !17312)
!17323 = !DILocation(line: 6286, column: 3, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17321, file: !3, line: 6285, column: 10)
!17325 = !DILocation(line: 6287, column: 10, scope: !17324)
!17326 = !DILocation(line: 6287, column: 3, scope: !17324)
!17327 = !DILocation(line: 6290, column: 2, scope: !17312)
!17328 = !DILocation(line: 6291, column: 32, scope: !17312)
!17329 = !DILocation(line: 6291, column: 30, scope: !17312)
!17330 = !DILocation(line: 6292, column: 7, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 6292, column: 6)
!17332 = !DILocation(line: 6292, column: 6, scope: !17312)
!17333 = !DILocation(line: 6293, column: 3, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17331, file: !3, line: 6292, column: 36)
!17335 = !DILocation(line: 6294, column: 6, scope: !17334)
!17336 = !DILocation(line: 6295, column: 3, scope: !17334)
!17337 = !DILocation(line: 6298, column: 2, scope: !17312)
!17338 = !DILocation(line: 6299, column: 2, scope: !17312)
!17339 = !DILabel(scope: !17312, name: "err_out", file: !3, line: 6301)
!17340 = !DILocation(line: 6301, column: 1, scope: !17312)
!17341 = !DILocation(line: 6302, column: 9, scope: !17312)
!17342 = !DILocation(line: 6302, column: 2, scope: !17312)
!17343 = !DILocation(line: 6303, column: 1, scope: !17312)
!17344 = distinct !DISubprogram(name: "ata_ratelimit", scope: !3, file: !3, line: 6318, type: !17313, scopeLine: 6319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17345 = !DILocation(line: 6320, column: 9, scope: !17344)
!17346 = !DILocation(line: 6320, column: 2, scope: !17344)
!17347 = distinct !DISubprogram(name: "ata_wait_register", scope: !3, file: !3, line: 6381, type: !17348, scopeLine: 6383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{!989, !1005, !991, !989, !989, !994, !994}
!17350 = !DILocalVariable(name: "ap", arg: 1, scope: !17347, file: !3, line: 6381, type: !1005)
!17351 = !DILocation(line: 6381, column: 40, scope: !17347)
!17352 = !DILocalVariable(name: "reg", arg: 2, scope: !17347, file: !3, line: 6381, type: !991)
!17353 = !DILocation(line: 6381, column: 58, scope: !17347)
!17354 = !DILocalVariable(name: "mask", arg: 3, scope: !17347, file: !3, line: 6381, type: !989)
!17355 = !DILocation(line: 6381, column: 67, scope: !17347)
!17356 = !DILocalVariable(name: "val", arg: 4, scope: !17347, file: !3, line: 6381, type: !989)
!17357 = !DILocation(line: 6381, column: 77, scope: !17347)
!17358 = !DILocalVariable(name: "interval", arg: 5, scope: !17347, file: !3, line: 6382, type: !994)
!17359 = !DILocation(line: 6382, column: 23, scope: !17347)
!17360 = !DILocalVariable(name: "timeout", arg: 6, scope: !17347, file: !3, line: 6382, type: !994)
!17361 = !DILocation(line: 6382, column: 47, scope: !17347)
!17362 = !DILocalVariable(name: "deadline", scope: !17347, file: !3, line: 6384, type: !994)
!17363 = !DILocation(line: 6384, column: 16, scope: !17347)
!17364 = !DILocalVariable(name: "tmp", scope: !17347, file: !3, line: 6385, type: !989)
!17365 = !DILocation(line: 6385, column: 6, scope: !17347)
!17366 = !DILocation(line: 6387, column: 17, scope: !17347)
!17367 = !DILocation(line: 6387, column: 8, scope: !17347)
!17368 = !DILocation(line: 6387, column: 6, scope: !17347)
!17369 = !DILocation(line: 6393, column: 26, scope: !17347)
!17370 = !DILocation(line: 6393, column: 35, scope: !17347)
!17371 = !DILocation(line: 6393, column: 13, scope: !17347)
!17372 = !DILocation(line: 6393, column: 11, scope: !17347)
!17373 = !DILocation(line: 6395, column: 2, scope: !17347)
!17374 = !DILocation(line: 6395, column: 10, scope: !17347)
!17375 = !DILocation(line: 6395, column: 16, scope: !17347)
!17376 = !DILocation(line: 6395, column: 14, scope: !17347)
!17377 = !DILocation(line: 6395, column: 25, scope: !17347)
!17378 = !DILocation(line: 6395, column: 22, scope: !17347)
!17379 = !DILocation(line: 6395, column: 29, scope: !17347)
!17380 = !DILocation(line: 6395, column: 32, scope: !17347)
!17381 = !DILocation(line: 0, scope: !17347)
!17382 = !DILocation(line: 6396, column: 14, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !17347, file: !3, line: 6395, column: 64)
!17384 = !DILocation(line: 6396, column: 18, scope: !17383)
!17385 = !DILocation(line: 6396, column: 3, scope: !17383)
!17386 = !DILocation(line: 6397, column: 18, scope: !17383)
!17387 = !DILocation(line: 6397, column: 9, scope: !17383)
!17388 = !DILocation(line: 6397, column: 7, scope: !17383)
!17389 = distinct !{!17389, !17373, !17390}
!17390 = !DILocation(line: 6398, column: 2, scope: !17347)
!17391 = !DILocation(line: 6400, column: 9, scope: !17347)
!17392 = !DILocation(line: 6400, column: 2, scope: !17347)
!17393 = distinct !DISubprogram(name: "ata_dummy_qc_issue", scope: !3, file: !3, line: 6407, type: !6586, scopeLine: 6408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17394 = !DILocalVariable(name: "qc", arg: 1, scope: !17393, file: !3, line: 6407, type: !6369)
!17395 = !DILocation(line: 6407, column: 63, scope: !17393)
!17396 = !DILocation(line: 6409, column: 2, scope: !17393)
!17397 = distinct !DISubprogram(name: "ata_dummy_error_handler", scope: !3, file: !3, line: 6412, type: !6622, scopeLine: 6413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17398 = !DILocalVariable(name: "ap", arg: 1, scope: !17397, file: !3, line: 6412, type: !1005)
!17399 = !DILocation(line: 6412, column: 54, scope: !17397)
!17400 = !DILocation(line: 6415, column: 1, scope: !17397)
!17401 = distinct !DISubprogram(name: "ata_print_version", scope: !3, file: !3, line: 6492, type: !17402, scopeLine: 6493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17402 = !DISubroutineType(types: !17403)
!17403 = !{null, !3288, !1450}
!17404 = !DILocalVariable(name: "dev", arg: 1, scope: !17401, file: !3, line: 6492, type: !3288)
!17405 = !DILocation(line: 6492, column: 45, scope: !17401)
!17406 = !DILocalVariable(name: "version", arg: 2, scope: !17401, file: !3, line: 6492, type: !1450)
!17407 = !DILocation(line: 6492, column: 62, scope: !17401)
!17408 = !DILocation(line: 6494, column: 25, scope: !17401)
!17409 = !DILocation(line: 6494, column: 46, scope: !17401)
!17410 = !DILocation(line: 6494, column: 2, scope: !17401)
!17411 = !DILocation(line: 6495, column: 1, scope: !17401)
!17412 = distinct !DISubprogram(name: "ata_is_host_link", scope: !183, file: !183, line: 1437, type: !17413, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17413 = !DISubroutineType(types: !17414)
!17414 = !{!1495, !7613}
!17415 = !DILocalVariable(name: "link", arg: 1, scope: !17412, file: !183, line: 1437, type: !7613)
!17416 = !DILocation(line: 1437, column: 60, scope: !17412)
!17417 = !DILocation(line: 1439, column: 9, scope: !17412)
!17418 = !DILocation(line: 1439, column: 18, scope: !17412)
!17419 = !DILocation(line: 1439, column: 24, scope: !17412)
!17420 = !DILocation(line: 1439, column: 28, scope: !17412)
!17421 = !DILocation(line: 1439, column: 14, scope: !17412)
!17422 = !DILocation(line: 1439, column: 33, scope: !17412)
!17423 = !DILocation(line: 1439, column: 36, scope: !17412)
!17424 = !DILocation(line: 1439, column: 44, scope: !17412)
!17425 = !DILocation(line: 1439, column: 50, scope: !17412)
!17426 = !DILocation(line: 1439, column: 54, scope: !17412)
!17427 = !DILocation(line: 1439, column: 41, scope: !17412)
!17428 = !DILocation(line: 1439, column: 2, scope: !17412)
!17429 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !9469, file: !9469, line: 646, type: !9470, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17430 = !DILocalVariable(name: "__ret", scope: !17431, file: !9469, line: 648, type: !994)
!17431 = distinct !DILexicalBlock(scope: !17429, file: !9469, line: 648, column: 9)
!17432 = !DILocation(line: 648, column: 9, scope: !17431)
!17433 = !DILocalVariable(name: "__edi", scope: !17431, file: !9469, line: 648, type: !994)
!17434 = !DILocalVariable(name: "__esi", scope: !17431, file: !9469, line: 648, type: !994)
!17435 = !DILocalVariable(name: "__edx", scope: !17431, file: !9469, line: 648, type: !994)
!17436 = !DILocalVariable(name: "__ecx", scope: !17431, file: !9469, line: 648, type: !994)
!17437 = !DILocalVariable(name: "__eax", scope: !17431, file: !9469, line: 648, type: !994)
!17438 = !DILocation(line: 648, column: 9, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17440, file: !9469, line: 648, column: 9)
!17440 = distinct !DILexicalBlock(scope: !17431, file: !9469, line: 648, column: 9)
!17441 = !{i32 -2145622827, i32 -2145620512, i32 -2145620278, i32 -2145620227, i32 -2145620199, i32 -2145620174, i32 -2145620490, i32 -2145620477, i32 -2145620039, i32 -2145619920, i32 -2145620385, i32 -2145620358, i32 -2145620330, i32 -2145620300}
!17442 = !DILocalVariable(name: "__mask", scope: !17443, file: !9469, line: 648, type: !994)
!17443 = distinct !DILexicalBlock(scope: !17439, file: !9469, line: 648, column: 9)
!17444 = !DILocation(line: 648, column: 9, scope: !17443)
!17445 = !DILocation(line: 648, column: 9, scope: !17440)
!17446 = !DILocation(line: 648, column: 2, scope: !17429)
!17447 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !9469, file: !9469, line: 656, type: !5552, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17448 = !DILocalVariable(name: "__edi", scope: !17449, file: !9469, line: 658, type: !994)
!17449 = distinct !DILexicalBlock(scope: !17447, file: !9469, line: 658, column: 2)
!17450 = !DILocation(line: 658, column: 2, scope: !17449)
!17451 = !DILocalVariable(name: "__esi", scope: !17449, file: !9469, line: 658, type: !994)
!17452 = !DILocalVariable(name: "__edx", scope: !17449, file: !9469, line: 658, type: !994)
!17453 = !DILocalVariable(name: "__ecx", scope: !17449, file: !9469, line: 658, type: !994)
!17454 = !DILocalVariable(name: "__eax", scope: !17449, file: !9469, line: 658, type: !994)
!17455 = !{i32 -2145615733, i32 -2145615001, i32 -2145614767, i32 -2145614716, i32 -2145614688, i32 -2145614663, i32 -2145614979, i32 -2145614966, i32 -2145614528, i32 -2145614409, i32 -2145614874, i32 -2145614847, i32 -2145614819, i32 -2145614789}
!17456 = !DILocation(line: 659, column: 1, scope: !17447)
!17457 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !9469, file: !9469, line: 651, type: !17458, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17458 = !DISubroutineType(types: !17459)
!17459 = !{null, !994}
!17460 = !DILocalVariable(name: "f", arg: 1, scope: !17457, file: !9469, line: 651, type: !994)
!17461 = !DILocation(line: 651, column: 65, scope: !17457)
!17462 = !DILocalVariable(name: "__edi", scope: !17463, file: !9469, line: 653, type: !994)
!17463 = distinct !DILexicalBlock(scope: !17457, file: !9469, line: 653, column: 2)
!17464 = !DILocation(line: 653, column: 2, scope: !17463)
!17465 = !DILocalVariable(name: "__esi", scope: !17463, file: !9469, line: 653, type: !994)
!17466 = !DILocalVariable(name: "__edx", scope: !17463, file: !9469, line: 653, type: !994)
!17467 = !DILocalVariable(name: "__ecx", scope: !17463, file: !9469, line: 653, type: !994)
!17468 = !DILocalVariable(name: "__eax", scope: !17463, file: !9469, line: 653, type: !994)
!17469 = !{i32 -2145618360, i32 -2145617610, i32 -2145617376, i32 -2145617325, i32 -2145617297, i32 -2145617272, i32 -2145617588, i32 -2145617575, i32 -2145617137, i32 -2145617018, i32 -2145617483, i32 -2145617456, i32 -2145617428, i32 -2145617398}
!17470 = !DILocation(line: 654, column: 1, scope: !17457)
!17471 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !8998, file: !8998, line: 308, type: !8999, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17472 = !DILocalVariable(name: "m", arg: 1, scope: !17471, file: !8998, line: 308, type: !4062)
!17473 = !DILocation(line: 308, column: 66, scope: !17471)
!17474 = !DILocation(line: 310, column: 10, scope: !17471)
!17475 = !DILocation(line: 310, column: 12, scope: !17471)
!17476 = !DILocation(line: 310, column: 34, scope: !17471)
!17477 = !DILocation(line: 310, column: 39, scope: !17471)
!17478 = !DILocation(line: 310, column: 2, scope: !17471)
!17479 = distinct !DISubprogram(name: "ata_id_hpa_enabled", scope: !222, file: !222, line: 711, type: !8945, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17480 = !DILocalVariable(name: "id", arg: 1, scope: !17479, file: !222, line: 711, type: !8685)
!17481 = !DILocation(line: 711, column: 50, scope: !17479)
!17482 = !DILocation(line: 714, column: 7, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17479, file: !222, line: 714, column: 6)
!17484 = !DILocation(line: 714, column: 32, scope: !17483)
!17485 = !DILocation(line: 714, column: 42, scope: !17483)
!17486 = !DILocation(line: 714, column: 6, scope: !17479)
!17487 = !DILocation(line: 715, column: 3, scope: !17483)
!17488 = !DILocation(line: 717, column: 7, scope: !17489)
!17489 = distinct !DILexicalBlock(scope: !17479, file: !222, line: 717, column: 6)
!17490 = !DILocation(line: 717, column: 30, scope: !17489)
!17491 = !DILocation(line: 717, column: 40, scope: !17489)
!17492 = !DILocation(line: 717, column: 6, scope: !17479)
!17493 = !DILocation(line: 718, column: 3, scope: !17489)
!17494 = !DILocation(line: 720, column: 7, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17479, file: !222, line: 720, column: 6)
!17496 = !DILocation(line: 720, column: 31, scope: !17495)
!17497 = !DILocation(line: 720, column: 44, scope: !17495)
!17498 = !DILocation(line: 720, column: 6, scope: !17479)
!17499 = !DILocation(line: 721, column: 3, scope: !17495)
!17500 = !DILocation(line: 722, column: 9, scope: !17479)
!17501 = !DILocation(line: 722, column: 34, scope: !17479)
!17502 = !DILocation(line: 722, column: 2, scope: !17479)
!17503 = !DILocation(line: 723, column: 1, scope: !17479)
!17504 = distinct !DISubprogram(name: "ata_read_native_max_address", scope: !3, file: !3, line: 1159, type: !17505, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17505 = !DISubroutineType(types: !17506)
!17506 = !{!223, !6374, !3442}
!17507 = !DILocalVariable(name: "dev", arg: 1, scope: !17504, file: !3, line: 1159, type: !6374)
!17508 = !DILocation(line: 1159, column: 59, scope: !17504)
!17509 = !DILocalVariable(name: "max_sectors", arg: 2, scope: !17504, file: !3, line: 1159, type: !3442)
!17510 = !DILocation(line: 1159, column: 69, scope: !17504)
!17511 = !DILocalVariable(name: "err_mask", scope: !17504, file: !3, line: 1161, type: !7)
!17512 = !DILocation(line: 1161, column: 15, scope: !17504)
!17513 = !DILocalVariable(name: "tf", scope: !17504, file: !3, line: 1162, type: !6536)
!17514 = !DILocation(line: 1162, column: 22, scope: !17504)
!17515 = !DILocalVariable(name: "lba48", scope: !17504, file: !3, line: 1163, type: !223)
!17516 = !DILocation(line: 1163, column: 6, scope: !17504)
!17517 = !DILocation(line: 1163, column: 31, scope: !17504)
!17518 = !DILocation(line: 1163, column: 36, scope: !17504)
!17519 = !DILocation(line: 1163, column: 14, scope: !17504)
!17520 = !DILocation(line: 1165, column: 14, scope: !17504)
!17521 = !DILocation(line: 1165, column: 2, scope: !17504)
!17522 = !DILocation(line: 1168, column: 5, scope: !17504)
!17523 = !DILocation(line: 1168, column: 11, scope: !17504)
!17524 = !DILocation(line: 1170, column: 6, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17504, file: !3, line: 1170, column: 6)
!17526 = !DILocation(line: 1170, column: 6, scope: !17504)
!17527 = !DILocation(line: 1171, column: 6, scope: !17528)
!17528 = distinct !DILexicalBlock(scope: !17525, file: !3, line: 1170, column: 13)
!17529 = !DILocation(line: 1171, column: 14, scope: !17528)
!17530 = !DILocation(line: 1172, column: 6, scope: !17528)
!17531 = !DILocation(line: 1172, column: 12, scope: !17528)
!17532 = !DILocation(line: 1173, column: 2, scope: !17528)
!17533 = !DILocation(line: 1174, column: 6, scope: !17525)
!17534 = !DILocation(line: 1174, column: 14, scope: !17525)
!17535 = !DILocation(line: 1176, column: 5, scope: !17504)
!17536 = !DILocation(line: 1176, column: 14, scope: !17504)
!17537 = !DILocation(line: 1177, column: 5, scope: !17504)
!17538 = !DILocation(line: 1177, column: 12, scope: !17504)
!17539 = !DILocation(line: 1179, column: 31, scope: !17504)
!17540 = !DILocation(line: 1179, column: 13, scope: !17504)
!17541 = !DILocation(line: 1179, column: 11, scope: !17504)
!17542 = !DILocation(line: 1180, column: 6, scope: !17543)
!17543 = distinct !DILexicalBlock(scope: !17504, file: !3, line: 1180, column: 6)
!17544 = !DILocation(line: 1180, column: 6, scope: !17504)
!17545 = !DILocation(line: 1181, column: 3, scope: !17546)
!17546 = distinct !DILexicalBlock(scope: !17543, file: !3, line: 1180, column: 16)
!17547 = !DILocation(line: 1184, column: 7, scope: !17548)
!17548 = distinct !DILexicalBlock(scope: !17546, file: !3, line: 1184, column: 7)
!17549 = !DILocation(line: 1184, column: 16, scope: !17548)
!17550 = !DILocation(line: 1184, column: 30, scope: !17548)
!17551 = !DILocation(line: 1184, column: 37, scope: !17548)
!17552 = !DILocation(line: 1184, column: 34, scope: !17548)
!17553 = !DILocation(line: 1184, column: 45, scope: !17548)
!17554 = !DILocation(line: 1184, column: 7, scope: !17546)
!17555 = !DILocation(line: 1185, column: 4, scope: !17548)
!17556 = !DILocation(line: 1186, column: 3, scope: !17546)
!17557 = !DILocation(line: 1189, column: 6, scope: !17558)
!17558 = distinct !DILexicalBlock(scope: !17504, file: !3, line: 1189, column: 6)
!17559 = !DILocation(line: 1189, column: 6, scope: !17504)
!17560 = !DILocation(line: 1190, column: 18, scope: !17558)
!17561 = !DILocation(line: 1190, column: 39, scope: !17558)
!17562 = !DILocation(line: 1190, column: 4, scope: !17558)
!17563 = !DILocation(line: 1190, column: 16, scope: !17558)
!17564 = !DILocation(line: 1190, column: 3, scope: !17558)
!17565 = !DILocation(line: 1192, column: 18, scope: !17558)
!17566 = !DILocation(line: 1192, column: 37, scope: !17558)
!17567 = !DILocation(line: 1192, column: 4, scope: !17558)
!17568 = !DILocation(line: 1192, column: 16, scope: !17558)
!17569 = !DILocation(line: 1193, column: 6, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17504, file: !3, line: 1193, column: 6)
!17571 = !DILocation(line: 1193, column: 11, scope: !17570)
!17572 = !DILocation(line: 1193, column: 19, scope: !17570)
!17573 = !DILocation(line: 1193, column: 6, scope: !17504)
!17574 = !DILocation(line: 1194, column: 5, scope: !17570)
!17575 = !DILocation(line: 1194, column: 17, scope: !17570)
!17576 = !DILocation(line: 1194, column: 3, scope: !17570)
!17577 = !DILocation(line: 1195, column: 2, scope: !17504)
!17578 = !DILocation(line: 1196, column: 1, scope: !17504)
!17579 = distinct !DISubprogram(name: "ata_set_max_sectors", scope: !3, file: !3, line: 1210, type: !17580, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17580 = !DISubroutineType(types: !17581)
!17581 = !{!223, !6374, !984}
!17582 = !DILocalVariable(name: "dev", arg: 1, scope: !17579, file: !3, line: 1210, type: !6374)
!17583 = !DILocation(line: 1210, column: 51, scope: !17579)
!17584 = !DILocalVariable(name: "new_sectors", arg: 2, scope: !17579, file: !3, line: 1210, type: !984)
!17585 = !DILocation(line: 1210, column: 60, scope: !17579)
!17586 = !DILocalVariable(name: "err_mask", scope: !17579, file: !3, line: 1212, type: !7)
!17587 = !DILocation(line: 1212, column: 15, scope: !17579)
!17588 = !DILocalVariable(name: "tf", scope: !17579, file: !3, line: 1213, type: !6536)
!17589 = !DILocation(line: 1213, column: 22, scope: !17579)
!17590 = !DILocalVariable(name: "lba48", scope: !17579, file: !3, line: 1214, type: !223)
!17591 = !DILocation(line: 1214, column: 6, scope: !17579)
!17592 = !DILocation(line: 1214, column: 31, scope: !17579)
!17593 = !DILocation(line: 1214, column: 36, scope: !17579)
!17594 = !DILocation(line: 1214, column: 14, scope: !17579)
!17595 = !DILocation(line: 1216, column: 13, scope: !17579)
!17596 = !DILocation(line: 1218, column: 14, scope: !17579)
!17597 = !DILocation(line: 1218, column: 2, scope: !17579)
!17598 = !DILocation(line: 1220, column: 5, scope: !17579)
!17599 = !DILocation(line: 1220, column: 11, scope: !17579)
!17600 = !DILocation(line: 1222, column: 6, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17579, file: !3, line: 1222, column: 6)
!17602 = !DILocation(line: 1222, column: 6, scope: !17579)
!17603 = !DILocation(line: 1223, column: 6, scope: !17604)
!17604 = distinct !DILexicalBlock(scope: !17601, file: !3, line: 1222, column: 13)
!17605 = !DILocation(line: 1223, column: 14, scope: !17604)
!17606 = !DILocation(line: 1224, column: 6, scope: !17604)
!17607 = !DILocation(line: 1224, column: 12, scope: !17604)
!17608 = !DILocation(line: 1226, column: 18, scope: !17604)
!17609 = !DILocation(line: 1226, column: 30, scope: !17604)
!17610 = !DILocation(line: 1226, column: 37, scope: !17604)
!17611 = !DILocation(line: 1226, column: 17, scope: !17604)
!17612 = !DILocation(line: 1226, column: 6, scope: !17604)
!17613 = !DILocation(line: 1226, column: 15, scope: !17604)
!17614 = !DILocation(line: 1227, column: 18, scope: !17604)
!17615 = !DILocation(line: 1227, column: 30, scope: !17604)
!17616 = !DILocation(line: 1227, column: 37, scope: !17604)
!17617 = !DILocation(line: 1227, column: 17, scope: !17604)
!17618 = !DILocation(line: 1227, column: 6, scope: !17604)
!17619 = !DILocation(line: 1227, column: 15, scope: !17604)
!17620 = !DILocation(line: 1228, column: 18, scope: !17604)
!17621 = !DILocation(line: 1228, column: 30, scope: !17604)
!17622 = !DILocation(line: 1228, column: 37, scope: !17604)
!17623 = !DILocation(line: 1228, column: 17, scope: !17604)
!17624 = !DILocation(line: 1228, column: 6, scope: !17604)
!17625 = !DILocation(line: 1228, column: 15, scope: !17604)
!17626 = !DILocation(line: 1229, column: 2, scope: !17604)
!17627 = !DILocation(line: 1230, column: 6, scope: !17628)
!17628 = distinct !DILexicalBlock(scope: !17601, file: !3, line: 1229, column: 9)
!17629 = !DILocation(line: 1230, column: 14, scope: !17628)
!17630 = !DILocation(line: 1232, column: 17, scope: !17628)
!17631 = !DILocation(line: 1232, column: 29, scope: !17628)
!17632 = !DILocation(line: 1232, column: 36, scope: !17628)
!17633 = !DILocation(line: 1232, column: 6, scope: !17628)
!17634 = !DILocation(line: 1232, column: 13, scope: !17628)
!17635 = !DILocation(line: 1235, column: 5, scope: !17579)
!17636 = !DILocation(line: 1235, column: 14, scope: !17579)
!17637 = !DILocation(line: 1236, column: 5, scope: !17579)
!17638 = !DILocation(line: 1236, column: 12, scope: !17579)
!17639 = !DILocation(line: 1238, column: 13, scope: !17579)
!17640 = !DILocation(line: 1238, column: 25, scope: !17579)
!17641 = !DILocation(line: 1238, column: 31, scope: !17579)
!17642 = !DILocation(line: 1238, column: 12, scope: !17579)
!17643 = !DILocation(line: 1238, column: 5, scope: !17579)
!17644 = !DILocation(line: 1238, column: 10, scope: !17579)
!17645 = !DILocation(line: 1239, column: 13, scope: !17579)
!17646 = !DILocation(line: 1239, column: 25, scope: !17579)
!17647 = !DILocation(line: 1239, column: 31, scope: !17579)
!17648 = !DILocation(line: 1239, column: 12, scope: !17579)
!17649 = !DILocation(line: 1239, column: 5, scope: !17579)
!17650 = !DILocation(line: 1239, column: 10, scope: !17579)
!17651 = !DILocation(line: 1240, column: 13, scope: !17579)
!17652 = !DILocation(line: 1240, column: 25, scope: !17579)
!17653 = !DILocation(line: 1240, column: 32, scope: !17579)
!17654 = !DILocation(line: 1240, column: 12, scope: !17579)
!17655 = !DILocation(line: 1240, column: 5, scope: !17579)
!17656 = !DILocation(line: 1240, column: 10, scope: !17579)
!17657 = !DILocation(line: 1242, column: 31, scope: !17579)
!17658 = !DILocation(line: 1242, column: 13, scope: !17579)
!17659 = !DILocation(line: 1242, column: 11, scope: !17579)
!17660 = !DILocation(line: 1243, column: 6, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !17579, file: !3, line: 1243, column: 6)
!17662 = !DILocation(line: 1243, column: 6, scope: !17579)
!17663 = !DILocation(line: 1244, column: 3, scope: !17664)
!17664 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 1243, column: 16)
!17665 = !DILocation(line: 1247, column: 7, scope: !17666)
!17666 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 1247, column: 7)
!17667 = !DILocation(line: 1247, column: 16, scope: !17666)
!17668 = !DILocation(line: 1247, column: 30, scope: !17666)
!17669 = !DILocation(line: 1248, column: 11, scope: !17666)
!17670 = !DILocation(line: 1248, column: 8, scope: !17666)
!17671 = !DILocation(line: 1248, column: 19, scope: !17666)
!17672 = !DILocation(line: 1247, column: 7, scope: !17664)
!17673 = !DILocation(line: 1249, column: 4, scope: !17666)
!17674 = !DILocation(line: 1250, column: 3, scope: !17664)
!17675 = !DILocation(line: 1253, column: 2, scope: !17579)
!17676 = !DILocation(line: 1254, column: 1, scope: !17579)
!17677 = distinct !DISubprogram(name: "ata_id_has_ncq_send_and_recv", scope: !222, file: !222, line: 928, type: !8945, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17678 = !DILocalVariable(name: "id", arg: 1, scope: !17677, file: !222, line: 928, type: !8685)
!17679 = !DILocation(line: 928, column: 60, scope: !17677)
!17680 = !DILocation(line: 930, column: 9, scope: !17677)
!17681 = !DILocation(line: 930, column: 38, scope: !17677)
!17682 = !DILocation(line: 930, column: 2, scope: !17677)
!17683 = distinct !DISubprogram(name: "ata_dev_config_ncq_send_recv", scope: !3, file: !3, line: 2119, type: !6618, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17684 = !DILocalVariable(name: "dev", arg: 1, scope: !17683, file: !3, line: 2119, type: !6374)
!17685 = !DILocation(line: 2119, column: 61, scope: !17683)
!17686 = !DILocalVariable(name: "ap", scope: !17683, file: !3, line: 2121, type: !1005)
!17687 = !DILocation(line: 2121, column: 19, scope: !17683)
!17688 = !DILocation(line: 2121, column: 24, scope: !17683)
!17689 = !DILocation(line: 2121, column: 29, scope: !17683)
!17690 = !DILocation(line: 2121, column: 35, scope: !17683)
!17691 = !DILocalVariable(name: "err_mask", scope: !17683, file: !3, line: 2122, type: !7)
!17692 = !DILocation(line: 2122, column: 15, scope: !17683)
!17693 = !DILocation(line: 2124, column: 25, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17683, file: !3, line: 2124, column: 6)
!17695 = !DILocation(line: 2124, column: 7, scope: !17694)
!17696 = !DILocation(line: 2124, column: 6, scope: !17683)
!17697 = !DILocation(line: 2125, column: 3, scope: !17698)
!17698 = distinct !DILexicalBlock(scope: !17694, file: !3, line: 2124, column: 54)
!17699 = !DILocation(line: 2126, column: 3, scope: !17698)
!17700 = !DILocation(line: 2128, column: 31, scope: !17683)
!17701 = !DILocation(line: 2129, column: 13, scope: !17683)
!17702 = !DILocation(line: 2129, column: 17, scope: !17683)
!17703 = !DILocation(line: 2128, column: 13, scope: !17683)
!17704 = !DILocation(line: 2128, column: 11, scope: !17683)
!17705 = !DILocation(line: 2130, column: 6, scope: !17706)
!17706 = distinct !DILexicalBlock(scope: !17683, file: !3, line: 2130, column: 6)
!17707 = !DILocation(line: 2130, column: 6, scope: !17683)
!17708 = !DILocation(line: 2131, column: 3, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17706, file: !3, line: 2130, column: 16)
!17710 = !DILocation(line: 2134, column: 2, scope: !17709)
!17711 = !DILocalVariable(name: "cmds", scope: !17712, file: !3, line: 2135, type: !6456)
!17712 = distinct !DILexicalBlock(scope: !17706, file: !3, line: 2134, column: 9)
!17713 = !DILocation(line: 2135, column: 7, scope: !17712)
!17714 = !DILocation(line: 2135, column: 14, scope: !17712)
!17715 = !DILocation(line: 2135, column: 19, scope: !17712)
!17716 = !DILocation(line: 2137, column: 3, scope: !17712)
!17717 = !DILocation(line: 2137, column: 8, scope: !17712)
!17718 = !DILocation(line: 2137, column: 14, scope: !17712)
!17719 = !DILocation(line: 2138, column: 10, scope: !17712)
!17720 = !DILocation(line: 2138, column: 16, scope: !17712)
!17721 = !DILocation(line: 2138, column: 20, scope: !17712)
!17722 = !DILocation(line: 2138, column: 3, scope: !17712)
!17723 = !DILocation(line: 2140, column: 7, scope: !17724)
!17724 = distinct !DILexicalBlock(scope: !17712, file: !3, line: 2140, column: 7)
!17725 = !DILocation(line: 2140, column: 12, scope: !17724)
!17726 = !DILocation(line: 2140, column: 20, scope: !17724)
!17727 = !DILocation(line: 2140, column: 7, scope: !17712)
!17728 = !DILocation(line: 2141, column: 4, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17724, file: !3, line: 2140, column: 47)
!17730 = !DILocation(line: 2142, column: 4, scope: !17729)
!17731 = !DILocation(line: 2142, column: 43, scope: !17729)
!17732 = !DILocation(line: 2144, column: 3, scope: !17729)
!17733 = !DILocation(line: 2146, column: 1, scope: !17683)
!17734 = distinct !DISubprogram(name: "ata_id_has_ncq_non_data", scope: !222, file: !222, line: 933, type: !8945, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17735 = !DILocalVariable(name: "id", arg: 1, scope: !17734, file: !222, line: 933, type: !8685)
!17736 = !DILocation(line: 933, column: 55, scope: !17734)
!17737 = !DILocation(line: 935, column: 9, scope: !17734)
!17738 = !DILocation(line: 935, column: 38, scope: !17734)
!17739 = !DILocation(line: 935, column: 2, scope: !17734)
!17740 = distinct !DISubprogram(name: "ata_dev_config_ncq_non_data", scope: !3, file: !3, line: 2148, type: !6618, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17741 = !DILocalVariable(name: "dev", arg: 1, scope: !17740, file: !3, line: 2148, type: !6374)
!17742 = !DILocation(line: 2148, column: 60, scope: !17740)
!17743 = !DILocalVariable(name: "ap", scope: !17740, file: !3, line: 2150, type: !1005)
!17744 = !DILocation(line: 2150, column: 19, scope: !17740)
!17745 = !DILocation(line: 2150, column: 24, scope: !17740)
!17746 = !DILocation(line: 2150, column: 29, scope: !17740)
!17747 = !DILocation(line: 2150, column: 35, scope: !17740)
!17748 = !DILocalVariable(name: "err_mask", scope: !17740, file: !3, line: 2151, type: !7)
!17749 = !DILocation(line: 2151, column: 15, scope: !17740)
!17750 = !DILocation(line: 2153, column: 25, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17740, file: !3, line: 2153, column: 6)
!17752 = !DILocation(line: 2153, column: 7, scope: !17751)
!17753 = !DILocation(line: 2153, column: 6, scope: !17740)
!17754 = !DILocation(line: 2154, column: 3, scope: !17755)
!17755 = distinct !DILexicalBlock(scope: !17751, file: !3, line: 2153, column: 53)
!17756 = !DILocation(line: 2156, column: 3, scope: !17755)
!17757 = !DILocation(line: 2158, column: 31, scope: !17740)
!17758 = !DILocation(line: 2159, column: 13, scope: !17740)
!17759 = !DILocation(line: 2159, column: 17, scope: !17740)
!17760 = !DILocation(line: 2158, column: 13, scope: !17740)
!17761 = !DILocation(line: 2158, column: 11, scope: !17740)
!17762 = !DILocation(line: 2160, column: 6, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17740, file: !3, line: 2160, column: 6)
!17764 = !DILocation(line: 2160, column: 6, scope: !17740)
!17765 = !DILocation(line: 2161, column: 3, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17763, file: !3, line: 2160, column: 16)
!17767 = !DILocation(line: 2164, column: 2, scope: !17766)
!17768 = !DILocalVariable(name: "cmds", scope: !17769, file: !3, line: 2165, type: !6456)
!17769 = distinct !DILexicalBlock(scope: !17763, file: !3, line: 2164, column: 9)
!17770 = !DILocation(line: 2165, column: 7, scope: !17769)
!17771 = !DILocation(line: 2165, column: 14, scope: !17769)
!17772 = !DILocation(line: 2165, column: 19, scope: !17769)
!17773 = !DILocation(line: 2167, column: 10, scope: !17769)
!17774 = !DILocation(line: 2167, column: 16, scope: !17769)
!17775 = !DILocation(line: 2167, column: 20, scope: !17769)
!17776 = !DILocation(line: 2167, column: 3, scope: !17769)
!17777 = !DILocation(line: 2169, column: 1, scope: !17740)
!17778 = distinct !DISubprogram(name: "ata_id_has_ncq_prio", scope: !222, file: !222, line: 938, type: !8945, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17779 = !DILocalVariable(name: "id", arg: 1, scope: !17778, file: !222, line: 938, type: !8685)
!17780 = !DILocation(line: 938, column: 51, scope: !17778)
!17781 = !DILocation(line: 940, column: 9, scope: !17778)
!17782 = !DILocation(line: 940, column: 36, scope: !17778)
!17783 = !DILocation(line: 940, column: 2, scope: !17778)
!17784 = distinct !DISubprogram(name: "ata_dev_config_ncq_prio", scope: !3, file: !3, line: 2171, type: !6618, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17785 = !DILocalVariable(name: "dev", arg: 1, scope: !17784, file: !3, line: 2171, type: !6374)
!17786 = !DILocation(line: 2171, column: 56, scope: !17784)
!17787 = !DILocalVariable(name: "ap", scope: !17784, file: !3, line: 2173, type: !1005)
!17788 = !DILocation(line: 2173, column: 19, scope: !17784)
!17789 = !DILocation(line: 2173, column: 24, scope: !17784)
!17790 = !DILocation(line: 2173, column: 29, scope: !17784)
!17791 = !DILocation(line: 2173, column: 35, scope: !17784)
!17792 = !DILocalVariable(name: "err_mask", scope: !17784, file: !3, line: 2174, type: !7)
!17793 = !DILocation(line: 2174, column: 15, scope: !17784)
!17794 = !DILocation(line: 2176, column: 8, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 2176, column: 6)
!17796 = !DILocation(line: 2176, column: 13, scope: !17795)
!17797 = !DILocation(line: 2176, column: 19, scope: !17795)
!17798 = !DILocation(line: 2176, column: 6, scope: !17784)
!17799 = !DILocation(line: 2177, column: 3, scope: !17800)
!17800 = distinct !DILexicalBlock(scope: !17795, file: !3, line: 2176, column: 49)
!17801 = !DILocation(line: 2177, column: 8, scope: !17800)
!17802 = !DILocation(line: 2177, column: 14, scope: !17800)
!17803 = !DILocation(line: 2178, column: 3, scope: !17800)
!17804 = !DILocation(line: 2181, column: 31, scope: !17784)
!17805 = !DILocation(line: 2184, column: 10, scope: !17784)
!17806 = !DILocation(line: 2184, column: 14, scope: !17784)
!17807 = !DILocation(line: 2181, column: 13, scope: !17784)
!17808 = !DILocation(line: 2181, column: 11, scope: !17784)
!17809 = !DILocation(line: 2186, column: 6, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 2186, column: 6)
!17811 = !DILocation(line: 2186, column: 6, scope: !17784)
!17812 = !DILocation(line: 2187, column: 3, scope: !17813)
!17813 = distinct !DILexicalBlock(scope: !17810, file: !3, line: 2186, column: 16)
!17814 = !DILocation(line: 2190, column: 3, scope: !17813)
!17815 = !DILocation(line: 2193, column: 6, scope: !17816)
!17816 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 2193, column: 6)
!17817 = !DILocation(line: 2193, column: 10, scope: !17816)
!17818 = !DILocation(line: 2193, column: 46, scope: !17816)
!17819 = !DILocation(line: 2193, column: 6, scope: !17784)
!17820 = !DILocation(line: 2194, column: 3, scope: !17821)
!17821 = distinct !DILexicalBlock(scope: !17816, file: !3, line: 2193, column: 56)
!17822 = !DILocation(line: 2194, column: 8, scope: !17821)
!17823 = !DILocation(line: 2194, column: 14, scope: !17821)
!17824 = !DILocation(line: 2195, column: 2, scope: !17821)
!17825 = !DILocation(line: 2196, column: 3, scope: !17826)
!17826 = distinct !DILexicalBlock(scope: !17816, file: !3, line: 2195, column: 9)
!17827 = !DILocation(line: 2196, column: 8, scope: !17826)
!17828 = !DILocation(line: 2196, column: 14, scope: !17826)
!17829 = !DILocation(line: 2197, column: 3, scope: !17826)
!17830 = !DILocation(line: 2200, column: 1, scope: !17784)
!17831 = distinct !DISubprogram(name: "ata_log_supported", scope: !3, file: !3, line: 2036, type: !17832, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17832 = !DISubroutineType(types: !17833)
!17833 = !{!1495, !6374, !1216}
!17834 = !DILocalVariable(name: "p", arg: 1, scope: !17835, file: !11912, line: 64, type: !17838)
!17835 = distinct !DISubprogram(name: "__le16_to_cpup", scope: !11912, file: !11912, line: 64, type: !17836, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17836 = !DISubroutineType(types: !17837)
!17837 = !{!1000, !17838}
!17838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17839, size: 64)
!17839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!17840 = !DILocation(line: 64, column: 59, scope: !17835, inlinedAt: !17841)
!17841 = distinct !DILocation(line: 10, column: 9, scope: !17842, inlinedAt: !17845)
!17842 = distinct !DISubprogram(name: "get_unaligned_le16", scope: !11920, file: !11920, line: 8, type: !17843, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17843 = !DISubroutineType(types: !17844)
!17844 = !{!1740, !2793}
!17845 = distinct !DILocation(line: 2042, column: 9, scope: !17831)
!17846 = !DILocalVariable(name: "p", arg: 1, scope: !17842, file: !11920, line: 8, type: !2793)
!17847 = !DILocation(line: 8, column: 59, scope: !17842, inlinedAt: !17845)
!17848 = !DILocalVariable(name: "dev", arg: 1, scope: !17831, file: !3, line: 2036, type: !6374)
!17849 = !DILocation(line: 2036, column: 50, scope: !17831)
!17850 = !DILocalVariable(name: "log", arg: 2, scope: !17831, file: !3, line: 2036, type: !1216)
!17851 = !DILocation(line: 2036, column: 58, scope: !17831)
!17852 = !DILocalVariable(name: "ap", scope: !17831, file: !3, line: 2038, type: !1005)
!17853 = !DILocation(line: 2038, column: 19, scope: !17831)
!17854 = !DILocation(line: 2038, column: 24, scope: !17831)
!17855 = !DILocation(line: 2038, column: 29, scope: !17831)
!17856 = !DILocation(line: 2038, column: 35, scope: !17831)
!17857 = !DILocation(line: 2040, column: 24, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17831, file: !3, line: 2040, column: 6)
!17859 = !DILocation(line: 2040, column: 51, scope: !17858)
!17860 = !DILocation(line: 2040, column: 55, scope: !17858)
!17861 = !DILocation(line: 2040, column: 6, scope: !17858)
!17862 = !DILocation(line: 2040, column: 6, scope: !17831)
!17863 = !DILocation(line: 2041, column: 3, scope: !17858)
!17864 = !DILocation(line: 2042, column: 29, scope: !17831)
!17865 = !DILocation(line: 2042, column: 33, scope: !17831)
!17866 = !DILocation(line: 2042, column: 44, scope: !17831)
!17867 = !DILocation(line: 2042, column: 48, scope: !17831)
!17868 = !DILocation(line: 10, column: 32, scope: !17842, inlinedAt: !17845)
!17869 = !DILocation(line: 10, column: 22, scope: !17842, inlinedAt: !17845)
!17870 = !DILocation(line: 66, column: 25, scope: !17835, inlinedAt: !17841)
!17871 = !DILocation(line: 66, column: 24, scope: !17835, inlinedAt: !17841)
!17872 = !DILocation(line: 2042, column: 9, scope: !17831)
!17873 = !DILocation(line: 2042, column: 2, scope: !17831)
!17874 = !DILocation(line: 2043, column: 1, scope: !17831)
!17875 = distinct !DISubprogram(name: "ata_id_has_sense_reporting", scope: !222, file: !222, line: 771, type: !8945, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17876 = !DILocalVariable(name: "id", arg: 1, scope: !17875, file: !222, line: 771, type: !8685)
!17877 = !DILocation(line: 771, column: 58, scope: !17875)
!17878 = !DILocation(line: 773, column: 8, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !17875, file: !222, line: 773, column: 6)
!17880 = !DILocation(line: 773, column: 32, scope: !17879)
!17881 = !DILocation(line: 773, column: 6, scope: !17875)
!17882 = !DILocation(line: 774, column: 3, scope: !17879)
!17883 = !DILocation(line: 775, column: 9, scope: !17875)
!17884 = !DILocation(line: 775, column: 34, scope: !17875)
!17885 = !DILocation(line: 775, column: 2, scope: !17875)
!17886 = !DILocation(line: 776, column: 1, scope: !17875)
!17887 = distinct !DISubprogram(name: "ata_id_sense_reporting_enabled", scope: !222, file: !222, line: 778, type: !8945, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17888 = !DILocalVariable(name: "id", arg: 1, scope: !17887, file: !222, line: 778, type: !8685)
!17889 = !DILocation(line: 778, column: 62, scope: !17887)
!17890 = !DILocation(line: 780, column: 8, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17887, file: !222, line: 780, column: 6)
!17892 = !DILocation(line: 780, column: 32, scope: !17891)
!17893 = !DILocation(line: 780, column: 6, scope: !17887)
!17894 = !DILocation(line: 781, column: 3, scope: !17891)
!17895 = !DILocation(line: 782, column: 9, scope: !17887)
!17896 = !DILocation(line: 782, column: 34, scope: !17887)
!17897 = !DILocation(line: 782, column: 2, scope: !17887)
!17898 = !DILocation(line: 783, column: 1, scope: !17887)
!17899 = distinct !DISubprogram(name: "ata_id_zoned_cap", scope: !222, file: !222, line: 994, type: !17900, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17900 = !DISubroutineType(types: !17901)
!17901 = !{!1216, !8685}
!17902 = !DILocalVariable(name: "id", arg: 1, scope: !17899, file: !222, line: 994, type: !8685)
!17903 = !DILocation(line: 994, column: 46, scope: !17899)
!17904 = !DILocation(line: 996, column: 10, scope: !17899)
!17905 = !DILocation(line: 996, column: 37, scope: !17899)
!17906 = !DILocation(line: 996, column: 9, scope: !17899)
!17907 = !DILocation(line: 996, column: 2, scope: !17899)
!17908 = distinct !DISubprogram(name: "ata_identify_page_supported", scope: !3, file: !3, line: 2045, type: !17832, scopeLine: 2046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17909 = !DILocalVariable(name: "dev", arg: 1, scope: !17908, file: !3, line: 2045, type: !6374)
!17910 = !DILocation(line: 2045, column: 60, scope: !17908)
!17911 = !DILocalVariable(name: "page", arg: 2, scope: !17908, file: !3, line: 2045, type: !1216)
!17912 = !DILocation(line: 2045, column: 68, scope: !17908)
!17913 = !DILocalVariable(name: "ap", scope: !17908, file: !3, line: 2047, type: !1005)
!17914 = !DILocation(line: 2047, column: 19, scope: !17908)
!17915 = !DILocation(line: 2047, column: 24, scope: !17908)
!17916 = !DILocation(line: 2047, column: 29, scope: !17908)
!17917 = !DILocation(line: 2047, column: 35, scope: !17908)
!17918 = !DILocalVariable(name: "err", scope: !17908, file: !3, line: 2048, type: !7)
!17919 = !DILocation(line: 2048, column: 15, scope: !17908)
!17920 = !DILocalVariable(name: "i", scope: !17908, file: !3, line: 2048, type: !7)
!17921 = !DILocation(line: 2048, column: 20, scope: !17908)
!17922 = !DILocation(line: 2050, column: 25, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 2050, column: 6)
!17924 = !DILocation(line: 2050, column: 7, scope: !17923)
!17925 = !DILocation(line: 2050, column: 6, scope: !17908)
!17926 = !DILocation(line: 2051, column: 3, scope: !17927)
!17927 = distinct !DILexicalBlock(scope: !17923, file: !3, line: 2050, column: 56)
!17928 = !DILocation(line: 2052, column: 3, scope: !17927)
!17929 = !DILocation(line: 2059, column: 26, scope: !17908)
!17930 = !DILocation(line: 2059, column: 59, scope: !17908)
!17931 = !DILocation(line: 2059, column: 63, scope: !17908)
!17932 = !DILocation(line: 2059, column: 8, scope: !17908)
!17933 = !DILocation(line: 2059, column: 6, scope: !17908)
!17934 = !DILocation(line: 2061, column: 6, scope: !17935)
!17935 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 2061, column: 6)
!17936 = !DILocation(line: 2061, column: 6, scope: !17908)
!17937 = !DILocation(line: 2062, column: 3, scope: !17938)
!17938 = distinct !DILexicalBlock(scope: !17935, file: !3, line: 2061, column: 11)
!17939 = !DILocation(line: 2065, column: 3, scope: !17938)
!17940 = !DILocation(line: 2068, column: 9, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 2068, column: 2)
!17942 = !DILocation(line: 2068, column: 7, scope: !17941)
!17943 = !DILocation(line: 2068, column: 14, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17941, file: !3, line: 2068, column: 2)
!17945 = !DILocation(line: 2068, column: 18, scope: !17944)
!17946 = !DILocation(line: 2068, column: 22, scope: !17944)
!17947 = !DILocation(line: 2068, column: 16, scope: !17944)
!17948 = !DILocation(line: 2068, column: 2, scope: !17941)
!17949 = !DILocation(line: 2069, column: 7, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17951, file: !3, line: 2069, column: 7)
!17951 = distinct !DILexicalBlock(scope: !17944, file: !3, line: 2068, column: 42)
!17952 = !DILocation(line: 2069, column: 11, scope: !17950)
!17953 = !DILocation(line: 2069, column: 26, scope: !17950)
!17954 = !DILocation(line: 2069, column: 24, scope: !17950)
!17955 = !DILocation(line: 2069, column: 32, scope: !17950)
!17956 = !DILocation(line: 2069, column: 29, scope: !17950)
!17957 = !DILocation(line: 2069, column: 7, scope: !17951)
!17958 = !DILocation(line: 2070, column: 4, scope: !17950)
!17959 = !DILocation(line: 2071, column: 2, scope: !17951)
!17960 = !DILocation(line: 2068, column: 38, scope: !17944)
!17961 = !DILocation(line: 2068, column: 2, scope: !17944)
!17962 = distinct !{!17962, !17948, !17963}
!17963 = !DILocation(line: 2071, column: 2, scope: !17941)
!17964 = !DILocation(line: 2073, column: 2, scope: !17908)
!17965 = !DILocation(line: 2074, column: 1, scope: !17908)
!17966 = distinct !DISubprogram(name: "ata_id_has_trusted", scope: !222, file: !222, line: 879, type: !8945, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17967 = !DILocalVariable(name: "id", arg: 1, scope: !17966, file: !222, line: 879, type: !8685)
!17968 = !DILocation(line: 879, column: 50, scope: !17966)
!17969 = !DILocation(line: 881, column: 27, scope: !17970)
!17970 = distinct !DILexicalBlock(scope: !17966, file: !222, line: 881, column: 6)
!17971 = !DILocation(line: 881, column: 6, scope: !17970)
!17972 = !DILocation(line: 881, column: 31, scope: !17970)
!17973 = !DILocation(line: 881, column: 6, scope: !17966)
!17974 = !DILocation(line: 882, column: 3, scope: !17970)
!17975 = !DILocation(line: 883, column: 9, scope: !17966)
!17976 = !DILocation(line: 883, column: 28, scope: !17966)
!17977 = !DILocation(line: 883, column: 2, scope: !17966)
!17978 = !DILocation(line: 884, column: 1, scope: !17966)
!17979 = distinct !DISubprogram(name: "ata_dev_set_xfermode", scope: !3, file: !3, line: 4198, type: !17980, scopeLine: 4199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!17980 = !DISubroutineType(types: !17981)
!17981 = !{!7, !6374}
!17982 = !DILocalVariable(name: "dev", arg: 1, scope: !17979, file: !3, line: 4198, type: !6374)
!17983 = !DILocation(line: 4198, column: 61, scope: !17979)
!17984 = !DILocalVariable(name: "tf", scope: !17979, file: !3, line: 4200, type: !6536)
!17985 = !DILocation(line: 4200, column: 22, scope: !17979)
!17986 = !DILocalVariable(name: "err_mask", scope: !17979, file: !3, line: 4201, type: !7)
!17987 = !DILocation(line: 4201, column: 15, scope: !17979)
!17988 = !DILocation(line: 4209, column: 14, scope: !17979)
!17989 = !DILocation(line: 4209, column: 2, scope: !17979)
!17990 = !DILocation(line: 4210, column: 5, scope: !17979)
!17991 = !DILocation(line: 4210, column: 13, scope: !17979)
!17992 = !DILocation(line: 4211, column: 5, scope: !17979)
!17993 = !DILocation(line: 4211, column: 13, scope: !17979)
!17994 = !DILocation(line: 4212, column: 5, scope: !17979)
!17995 = !DILocation(line: 4212, column: 11, scope: !17979)
!17996 = !DILocation(line: 4213, column: 5, scope: !17979)
!17997 = !DILocation(line: 4213, column: 14, scope: !17979)
!17998 = !DILocation(line: 4215, column: 25, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17979, file: !3, line: 4215, column: 6)
!18000 = !DILocation(line: 4215, column: 6, scope: !17999)
!18001 = !DILocation(line: 4215, column: 6, scope: !17979)
!18002 = !DILocation(line: 4216, column: 14, scope: !17999)
!18003 = !DILocation(line: 4216, column: 19, scope: !17999)
!18004 = !DILocation(line: 4216, column: 6, scope: !17999)
!18005 = !DILocation(line: 4216, column: 12, scope: !17999)
!18006 = !DILocation(line: 4216, column: 3, scope: !17999)
!18007 = !DILocation(line: 4218, column: 12, scope: !18008)
!18008 = distinct !DILexicalBlock(scope: !17999, file: !3, line: 4218, column: 12)
!18009 = !DILocation(line: 4218, column: 12, scope: !17999)
!18010 = !DILocation(line: 4219, column: 6, scope: !18008)
!18011 = !DILocation(line: 4219, column: 12, scope: !18008)
!18012 = !DILocation(line: 4219, column: 3, scope: !18008)
!18013 = !DILocation(line: 4221, column: 3, scope: !18008)
!18014 = !DILocation(line: 4224, column: 31, scope: !17979)
!18015 = !DILocation(line: 4224, column: 13, scope: !17979)
!18016 = !DILocation(line: 4224, column: 11, scope: !17979)
!18017 = !DILocation(line: 4227, column: 9, scope: !17979)
!18018 = !DILocation(line: 4227, column: 2, scope: !17979)
!18019 = !DILocation(line: 4228, column: 1, scope: !17979)
!18020 = distinct !DISubprogram(name: "ata_dma_blacklisted", scope: !3, file: !3, line: 4028, type: !18021, scopeLine: 4029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18021 = !DISubroutineType(types: !18022)
!18022 = !{!223, !7632}
!18023 = !DILocalVariable(name: "dev", arg: 1, scope: !18020, file: !3, line: 4028, type: !7632)
!18024 = !DILocation(line: 4028, column: 57, scope: !18020)
!18025 = !DILocation(line: 4034, column: 7, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !18020, file: !3, line: 4034, column: 6)
!18027 = !DILocation(line: 4034, column: 12, scope: !18026)
!18028 = !DILocation(line: 4034, column: 18, scope: !18026)
!18029 = !DILocation(line: 4034, column: 22, scope: !18026)
!18030 = !DILocation(line: 4034, column: 28, scope: !18026)
!18031 = !DILocation(line: 4034, column: 52, scope: !18026)
!18032 = !DILocation(line: 4035, column: 7, scope: !18026)
!18033 = !DILocation(line: 4035, column: 12, scope: !18026)
!18034 = !DILocation(line: 4035, column: 18, scope: !18026)
!18035 = !DILocation(line: 4034, column: 6, scope: !18020)
!18036 = !DILocation(line: 4036, column: 3, scope: !18026)
!18037 = !DILocation(line: 4037, column: 10, scope: !18020)
!18038 = !DILocation(line: 4037, column: 15, scope: !18020)
!18039 = !DILocation(line: 4037, column: 23, scope: !18020)
!18040 = !DILocation(line: 4037, column: 9, scope: !18020)
!18041 = !DILocation(line: 4037, column: 2, scope: !18020)
!18042 = !DILocation(line: 4038, column: 1, scope: !18020)
!18043 = distinct !DISubprogram(name: "ata_pio_mask_no_iordy", scope: !3, file: !3, line: 1727, type: !18044, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18044 = !DISubroutineType(types: !18045)
!18045 = !{!989, !7632}
!18046 = !DILocalVariable(name: "adev", arg: 1, scope: !18043, file: !3, line: 1727, type: !7632)
!18047 = !DILocation(line: 1727, column: 59, scope: !18043)
!18048 = !DILocation(line: 1730, column: 6, scope: !18049)
!18049 = distinct !DILexicalBlock(scope: !18043, file: !3, line: 1730, column: 6)
!18050 = !DILocation(line: 1730, column: 12, scope: !18049)
!18051 = !DILocation(line: 1730, column: 35, scope: !18049)
!18052 = !DILocation(line: 1730, column: 6, scope: !18043)
!18053 = !DILocalVariable(name: "pio", scope: !18054, file: !3, line: 1731, type: !1740)
!18054 = distinct !DILexicalBlock(scope: !18049, file: !3, line: 1730, column: 40)
!18055 = !DILocation(line: 1731, column: 7, scope: !18054)
!18056 = !DILocation(line: 1731, column: 13, scope: !18054)
!18057 = !DILocation(line: 1731, column: 19, scope: !18054)
!18058 = !DILocation(line: 1733, column: 7, scope: !18059)
!18059 = distinct !DILexicalBlock(scope: !18054, file: !3, line: 1733, column: 7)
!18060 = !DILocation(line: 1733, column: 7, scope: !18054)
!18061 = !DILocation(line: 1735, column: 8, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !18063, file: !3, line: 1735, column: 8)
!18063 = distinct !DILexicalBlock(scope: !18059, file: !3, line: 1733, column: 12)
!18064 = !DILocation(line: 1735, column: 12, scope: !18062)
!18065 = !DILocation(line: 1735, column: 8, scope: !18063)
!18066 = !DILocation(line: 1736, column: 5, scope: !18062)
!18067 = !DILocation(line: 1737, column: 4, scope: !18063)
!18068 = !DILocation(line: 1739, column: 2, scope: !18054)
!18069 = !DILocation(line: 1740, column: 2, scope: !18043)
!18070 = !DILocation(line: 1741, column: 1, scope: !18043)
!18071 = distinct !DISubprogram(name: "cable_is_40wire", scope: !3, file: !3, line: 4068, type: !6594, scopeLine: 4069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18072 = !DILocalVariable(name: "ap", arg: 1, scope: !18071, file: !3, line: 4068, type: !1005)
!18073 = !DILocation(line: 4068, column: 45, scope: !18071)
!18074 = !DILocalVariable(name: "link", scope: !18071, file: !3, line: 4070, type: !6378)
!18075 = !DILocation(line: 4070, column: 19, scope: !18071)
!18076 = !DILocalVariable(name: "dev", scope: !18071, file: !3, line: 4071, type: !6374)
!18077 = !DILocation(line: 4071, column: 21, scope: !18071)
!18078 = !DILocation(line: 4074, column: 6, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18071, file: !3, line: 4074, column: 6)
!18080 = !DILocation(line: 4074, column: 10, scope: !18079)
!18081 = !DILocation(line: 4074, column: 14, scope: !18079)
!18082 = !DILocation(line: 4074, column: 6, scope: !18071)
!18083 = !DILocation(line: 4075, column: 3, scope: !18079)
!18084 = !DILocation(line: 4078, column: 6, scope: !18085)
!18085 = distinct !DILexicalBlock(scope: !18071, file: !3, line: 4078, column: 6)
!18086 = !DILocation(line: 4078, column: 10, scope: !18085)
!18087 = !DILocation(line: 4078, column: 14, scope: !18085)
!18088 = !DILocation(line: 4078, column: 32, scope: !18085)
!18089 = !DILocation(line: 4078, column: 35, scope: !18085)
!18090 = !DILocation(line: 4078, column: 39, scope: !18085)
!18091 = !DILocation(line: 4078, column: 43, scope: !18085)
!18092 = !DILocation(line: 4078, column: 6, scope: !18071)
!18093 = !DILocation(line: 4079, column: 3, scope: !18085)
!18094 = !DILocation(line: 4085, column: 6, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18071, file: !3, line: 4085, column: 6)
!18096 = !DILocation(line: 4085, column: 10, scope: !18095)
!18097 = !DILocation(line: 4085, column: 14, scope: !18095)
!18098 = !DILocation(line: 4085, column: 6, scope: !18071)
!18099 = !DILocation(line: 4086, column: 3, scope: !18095)
!18100 = !DILocation(line: 4097, column: 2, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18071, file: !3, line: 4097, column: 2)
!18102 = !DILocation(line: 4097, column: 2, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18101, file: !3, line: 4097, column: 2)
!18104 = !DILocation(line: 4098, column: 3, scope: !18105)
!18105 = distinct !DILexicalBlock(scope: !18106, file: !3, line: 4098, column: 3)
!18106 = distinct !DILexicalBlock(scope: !18103, file: !3, line: 4097, column: 36)
!18107 = !DILocation(line: 4098, column: 3, scope: !18108)
!18108 = distinct !DILexicalBlock(scope: !18105, file: !3, line: 4098, column: 3)
!18109 = !DILocation(line: 4099, column: 23, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !18111, file: !3, line: 4099, column: 8)
!18111 = distinct !DILexicalBlock(scope: !18108, file: !3, line: 4098, column: 40)
!18112 = !DILocation(line: 4099, column: 9, scope: !18110)
!18113 = !DILocation(line: 4099, column: 8, scope: !18111)
!18114 = !DILocation(line: 4100, column: 5, scope: !18110)
!18115 = !DILocation(line: 4101, column: 3, scope: !18111)
!18116 = distinct !{!18116, !18104, !18117}
!18117 = !DILocation(line: 4101, column: 3, scope: !18105)
!18118 = !DILocation(line: 4102, column: 2, scope: !18106)
!18119 = distinct !{!18119, !18100, !18120}
!18120 = !DILocation(line: 4102, column: 2, scope: !18101)
!18121 = !DILocation(line: 4103, column: 2, scope: !18071)
!18122 = !DILocation(line: 4104, column: 1, scope: !18071)
!18123 = distinct !DISubprogram(name: "ata_is_40wire", scope: !3, file: !3, line: 4048, type: !8230, scopeLine: 4049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18124 = !DILocalVariable(name: "dev", arg: 1, scope: !18123, file: !3, line: 4048, type: !6374)
!18125 = !DILocation(line: 4048, column: 45, scope: !18123)
!18126 = !DILocation(line: 4050, column: 6, scope: !18127)
!18127 = distinct !DILexicalBlock(scope: !18123, file: !3, line: 4050, column: 6)
!18128 = !DILocation(line: 4050, column: 11, scope: !18127)
!18129 = !DILocation(line: 4050, column: 19, scope: !18127)
!18130 = !DILocation(line: 4050, column: 6, scope: !18123)
!18131 = !DILocation(line: 4051, column: 35, scope: !18127)
!18132 = !DILocation(line: 4051, column: 40, scope: !18127)
!18133 = !DILocation(line: 4051, column: 10, scope: !18127)
!18134 = !DILocation(line: 4051, column: 3, scope: !18127)
!18135 = !DILocation(line: 4052, column: 26, scope: !18123)
!18136 = !DILocation(line: 4052, column: 31, scope: !18123)
!18137 = !DILocation(line: 4052, column: 9, scope: !18123)
!18138 = !DILocation(line: 4052, column: 2, scope: !18123)
!18139 = !DILocation(line: 4053, column: 1, scope: !18123)
!18140 = distinct !DISubprogram(name: "ata_drive_40wire_relaxed", scope: !222, file: !222, line: 1020, type: !8945, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18141 = !DILocalVariable(name: "dev_id", arg: 1, scope: !18140, file: !222, line: 1020, type: !8685)
!18142 = !DILocation(line: 1020, column: 56, scope: !18140)
!18143 = !DILocation(line: 1022, column: 7, scope: !18144)
!18144 = distinct !DILexicalBlock(scope: !18140, file: !222, line: 1022, column: 6)
!18145 = !DILocation(line: 1022, column: 32, scope: !18144)
!18146 = !DILocation(line: 1022, column: 42, scope: !18144)
!18147 = !DILocation(line: 1022, column: 6, scope: !18140)
!18148 = !DILocation(line: 1023, column: 3, scope: !18144)
!18149 = !DILocation(line: 1024, column: 2, scope: !18140)
!18150 = !DILocation(line: 1025, column: 1, scope: !18140)
!18151 = distinct !DISubprogram(name: "ata_drive_40wire", scope: !222, file: !222, line: 1011, type: !8945, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18152 = !DILocalVariable(name: "dev_id", arg: 1, scope: !18151, file: !222, line: 1011, type: !8685)
!18153 = !DILocation(line: 1011, column: 48, scope: !18151)
!18154 = !DILocation(line: 1013, column: 21, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18151, file: !222, line: 1013, column: 6)
!18156 = !DILocation(line: 1013, column: 6, scope: !18155)
!18157 = !DILocation(line: 1013, column: 6, scope: !18151)
!18158 = !DILocation(line: 1014, column: 3, scope: !18155)
!18159 = !DILocation(line: 1015, column: 7, scope: !18160)
!18160 = distinct !DILexicalBlock(scope: !18151, file: !222, line: 1015, column: 6)
!18161 = !DILocation(line: 1015, column: 32, scope: !18160)
!18162 = !DILocation(line: 1015, column: 42, scope: !18160)
!18163 = !DILocation(line: 1015, column: 6, scope: !18151)
!18164 = !DILocation(line: 1016, column: 3, scope: !18160)
!18165 = !DILocation(line: 1017, column: 2, scope: !18151)
!18166 = !DILocation(line: 1018, column: 1, scope: !18151)
!18167 = distinct !DISubprogram(name: "ata_port_request_pm", scope: !3, file: !3, line: 4928, type: !18168, scopeLine: 4931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18168 = !DISubroutineType(types: !18169)
!18169 = !{null, !1005, !3072, !7, !7, !1495}
!18170 = !DILocation(line: 407, column: 64, scope: !8980, inlinedAt: !18171)
!18171 = distinct !DILocation(line: 4955, column: 2, scope: !18167)
!18172 = !DILocation(line: 407, column: 84, scope: !8980, inlinedAt: !18171)
!18173 = !DILocation(line: 327, column: 67, scope: !8967, inlinedAt: !18174)
!18174 = distinct !DILocation(line: 4944, column: 2, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !18176, file: !3, line: 4944, column: 2)
!18176 = distinct !DILexicalBlock(scope: !18177, file: !3, line: 4944, column: 2)
!18177 = distinct !DILexicalBlock(scope: !18178, file: !3, line: 4944, column: 2)
!18178 = distinct !DILexicalBlock(scope: !18179, file: !3, line: 4944, column: 2)
!18179 = distinct !DILexicalBlock(scope: !18167, file: !3, line: 4944, column: 2)
!18180 = !DILocalVariable(name: "ap", arg: 1, scope: !18167, file: !3, line: 4928, type: !1005)
!18181 = !DILocation(line: 4928, column: 50, scope: !18167)
!18182 = !DILocalVariable(name: "mesg", arg: 2, scope: !18167, file: !3, line: 4928, type: !3072)
!18183 = !DILocation(line: 4928, column: 67, scope: !18167)
!18184 = !DILocalVariable(name: "action", arg: 3, scope: !18167, file: !3, line: 4929, type: !7)
!18185 = !DILocation(line: 4929, column: 18, scope: !18167)
!18186 = !DILocalVariable(name: "ehi_flags", arg: 4, scope: !18167, file: !3, line: 4929, type: !7)
!18187 = !DILocation(line: 4929, column: 39, scope: !18167)
!18188 = !DILocalVariable(name: "async", arg: 5, scope: !18167, file: !3, line: 4930, type: !1495)
!18189 = !DILocation(line: 4930, column: 10, scope: !18167)
!18190 = !DILocalVariable(name: "link", scope: !18167, file: !3, line: 4932, type: !6378)
!18191 = !DILocation(line: 4932, column: 19, scope: !18167)
!18192 = !DILocalVariable(name: "flags", scope: !18167, file: !3, line: 4933, type: !994)
!18193 = !DILocation(line: 4933, column: 16, scope: !18167)
!18194 = !DILocation(line: 4938, column: 6, scope: !18195)
!18195 = distinct !DILexicalBlock(scope: !18167, file: !3, line: 4938, column: 6)
!18196 = !DILocation(line: 4938, column: 10, scope: !18195)
!18197 = !DILocation(line: 4938, column: 17, scope: !18195)
!18198 = !DILocation(line: 4938, column: 6, scope: !18167)
!18199 = !DILocation(line: 4939, column: 20, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !18195, file: !3, line: 4938, column: 41)
!18201 = !DILocation(line: 4939, column: 3, scope: !18200)
!18202 = !DILocalVariable(name: "__ret_warn_on", scope: !18203, file: !3, line: 4940, type: !223)
!18203 = distinct !DILexicalBlock(scope: !18200, file: !3, line: 4940, column: 3)
!18204 = !DILocation(line: 4940, column: 3, scope: !18203)
!18205 = !DILocation(line: 4940, column: 3, scope: !18206)
!18206 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 4940, column: 3)
!18207 = !DILocation(line: 4940, column: 3, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18206, file: !3, line: 4940, column: 3)
!18209 = !DILocation(line: 4940, column: 3, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18208, file: !3, line: 4940, column: 3)
!18211 = !DILocation(line: 4940, column: 3, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18208, file: !3, line: 4940, column: 3)
!18213 = !{i32 -2139204496, i32 -2139204467, i32 -2139204421, i32 -2139204363, i32 -2139204309, i32 -2139204255, i32 -2139204200, i32 -2139204169}
!18214 = !DILocation(line: 4940, column: 3, scope: !18215)
!18215 = distinct !DILexicalBlock(scope: !18208, file: !3, line: 4940, column: 3)
!18216 = !{i32 -2139203761, i32 -2139203754, i32 -2139203702, i32 -2139203671, i32 -2139203641}
!18217 = !DILocation(line: 4940, column: 3, scope: !18218)
!18218 = distinct !DILexicalBlock(scope: !18208, file: !3, line: 4940, column: 3)
!18219 = !DILocation(line: 4941, column: 2, scope: !18200)
!18220 = !DILocation(line: 4944, column: 2, scope: !18167)
!18221 = !DILocation(line: 4944, column: 2, scope: !18179)
!18222 = !DILocalVariable(name: "__dummy", scope: !18223, file: !3, line: 4944, type: !994)
!18223 = distinct !DILexicalBlock(scope: !18178, file: !3, line: 4944, column: 2)
!18224 = !DILocation(line: 4944, column: 2, scope: !18223)
!18225 = !DILocalVariable(name: "__dummy2", scope: !18223, file: !3, line: 4944, type: !994)
!18226 = !DILocation(line: 4944, column: 2, scope: !18178)
!18227 = !DILocation(line: 4944, column: 2, scope: !18177)
!18228 = !DILocation(line: 4944, column: 2, scope: !18229)
!18229 = distinct !DILexicalBlock(scope: !18177, file: !3, line: 4944, column: 2)
!18230 = !DILocalVariable(name: "__dummy", scope: !18231, file: !3, line: 4944, type: !994)
!18231 = distinct !DILexicalBlock(scope: !18232, file: !3, line: 4944, column: 2)
!18232 = distinct !DILexicalBlock(scope: !18229, file: !3, line: 4944, column: 2)
!18233 = !DILocation(line: 4944, column: 2, scope: !18231)
!18234 = !DILocalVariable(name: "__dummy2", scope: !18231, file: !3, line: 4944, type: !994)
!18235 = !DILocation(line: 4944, column: 2, scope: !18232)
!18236 = !DILocation(line: 4944, column: 2, scope: !18176)
!18237 = !{i32 -2139202675}
!18238 = !DILocation(line: 4944, column: 2, scope: !18175)
!18239 = !DILocation(line: 329, column: 10, scope: !8967, inlinedAt: !18174)
!18240 = !DILocation(line: 329, column: 16, scope: !8967, inlinedAt: !18174)
!18241 = !DILocation(line: 4946, column: 2, scope: !18167)
!18242 = !DILocation(line: 4946, column: 6, scope: !18167)
!18243 = !DILocation(line: 4946, column: 16, scope: !18167)
!18244 = !DILocation(line: 4947, column: 2, scope: !18167)
!18245 = !DILocation(line: 4947, column: 6, scope: !18167)
!18246 = !DILocation(line: 4947, column: 13, scope: !18167)
!18247 = !DILocation(line: 4948, column: 2, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18167, file: !3, line: 4948, column: 2)
!18249 = !DILocation(line: 4948, column: 2, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18248, file: !3, line: 4948, column: 2)
!18251 = !DILocation(line: 4949, column: 27, scope: !18252)
!18252 = distinct !DILexicalBlock(scope: !18250, file: !3, line: 4948, column: 42)
!18253 = !DILocation(line: 4949, column: 3, scope: !18252)
!18254 = !DILocation(line: 4949, column: 9, scope: !18252)
!18255 = !DILocation(line: 4949, column: 17, scope: !18252)
!18256 = !DILocation(line: 4949, column: 24, scope: !18252)
!18257 = !DILocation(line: 4950, column: 26, scope: !18252)
!18258 = !DILocation(line: 4950, column: 3, scope: !18252)
!18259 = !DILocation(line: 4950, column: 9, scope: !18252)
!18260 = !DILocation(line: 4950, column: 17, scope: !18252)
!18261 = !DILocation(line: 4950, column: 23, scope: !18252)
!18262 = !DILocation(line: 4951, column: 2, scope: !18252)
!18263 = distinct !{!18263, !18247, !18264}
!18264 = !DILocation(line: 4951, column: 2, scope: !18248)
!18265 = !DILocation(line: 4953, column: 23, scope: !18167)
!18266 = !DILocation(line: 4953, column: 2, scope: !18167)
!18267 = !DILocation(line: 4955, column: 25, scope: !18167)
!18268 = !DILocation(line: 4955, column: 29, scope: !18167)
!18269 = !DILocation(line: 4955, column: 35, scope: !18167)
!18270 = !DILocation(line: 409, column: 2, scope: !9096, inlinedAt: !18171)
!18271 = !DILocation(line: 409, column: 2, scope: !9101, inlinedAt: !18171)
!18272 = !DILocation(line: 409, column: 2, scope: !9102, inlinedAt: !18171)
!18273 = !DILocation(line: 409, column: 2, scope: !9109, inlinedAt: !18171)
!18274 = !DILocation(line: 409, column: 2, scope: !9112, inlinedAt: !18171)
!18275 = !DILocation(line: 4957, column: 7, scope: !18276)
!18276 = distinct !DILexicalBlock(scope: !18167, file: !3, line: 4957, column: 6)
!18277 = !DILocation(line: 4957, column: 6, scope: !18167)
!18278 = !DILocation(line: 4958, column: 20, scope: !18279)
!18279 = distinct !DILexicalBlock(scope: !18276, file: !3, line: 4957, column: 14)
!18280 = !DILocation(line: 4958, column: 3, scope: !18279)
!18281 = !DILocalVariable(name: "__ret_warn_on", scope: !18282, file: !3, line: 4959, type: !223)
!18282 = distinct !DILexicalBlock(scope: !18279, file: !3, line: 4959, column: 3)
!18283 = !DILocation(line: 4959, column: 3, scope: !18282)
!18284 = !DILocation(line: 4959, column: 3, scope: !18285)
!18285 = distinct !DILexicalBlock(scope: !18282, file: !3, line: 4959, column: 3)
!18286 = !DILocation(line: 4959, column: 3, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18285, file: !3, line: 4959, column: 3)
!18288 = !DILocation(line: 4959, column: 3, scope: !18289)
!18289 = distinct !DILexicalBlock(scope: !18287, file: !3, line: 4959, column: 3)
!18290 = !DILocation(line: 4959, column: 3, scope: !18291)
!18291 = distinct !DILexicalBlock(scope: !18287, file: !3, line: 4959, column: 3)
!18292 = !{i32 -2139201805, i32 -2139201776, i32 -2139201730, i32 -2139201672, i32 -2139201618, i32 -2139201564, i32 -2139201509, i32 -2139201478}
!18293 = !DILocation(line: 4959, column: 3, scope: !18294)
!18294 = distinct !DILexicalBlock(scope: !18287, file: !3, line: 4959, column: 3)
!18295 = !{i32 -2139201070, i32 -2139201063, i32 -2139201011, i32 -2139200980, i32 -2139200950}
!18296 = !DILocation(line: 4959, column: 3, scope: !18297)
!18297 = distinct !DILexicalBlock(scope: !18287, file: !3, line: 4959, column: 3)
!18298 = !DILocation(line: 4960, column: 2, scope: !18279)
!18299 = !DILocation(line: 4961, column: 1, scope: !18167)
!18300 = distinct !DISubprogram(name: "ata_port_pm_suspend", scope: !3, file: !3, line: 4984, type: !2989, scopeLine: 4985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18301 = !DILocalVariable(name: "dev", arg: 1, scope: !18300, file: !3, line: 4984, type: !2957)
!18302 = !DILocation(line: 4984, column: 47, scope: !18300)
!18303 = !DILocalVariable(name: "ap", scope: !18300, file: !3, line: 4986, type: !1005)
!18304 = !DILocation(line: 4986, column: 19, scope: !18300)
!18305 = !DILocalVariable(name: "__mptr", scope: !18306, file: !3, line: 4986, type: !991)
!18306 = distinct !DILexicalBlock(scope: !18300, file: !3, line: 4986, column: 24)
!18307 = !DILocation(line: 4986, column: 24, scope: !18306)
!18308 = !DILocation(line: 4986, column: 24, scope: !18309)
!18309 = distinct !DILexicalBlock(scope: !18306, file: !3, line: 4986, column: 24)
!18310 = !DILocation(line: 4988, column: 27, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18300, file: !3, line: 4988, column: 6)
!18312 = !DILocation(line: 4988, column: 6, scope: !18311)
!18313 = !DILocation(line: 4988, column: 6, scope: !18300)
!18314 = !DILocation(line: 4989, column: 3, scope: !18311)
!18315 = !DILocation(line: 4991, column: 19, scope: !18300)
!18316 = !DILocation(line: 4991, column: 23, scope: !18300)
!18317 = !DILocation(line: 4991, column: 2, scope: !18300)
!18318 = !DILocation(line: 4992, column: 2, scope: !18300)
!18319 = !DILocation(line: 4993, column: 1, scope: !18300)
!18320 = distinct !DISubprogram(name: "ata_port_pm_resume", scope: !3, file: !3, line: 5025, type: !2989, scopeLine: 5026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18321 = !DILocalVariable(name: "dev", arg: 1, scope: !18320, file: !3, line: 5025, type: !2957)
!18322 = !DILocation(line: 5025, column: 46, scope: !18320)
!18323 = !DILocalVariable(name: "__mptr", scope: !18324, file: !3, line: 5027, type: !991)
!18324 = distinct !DILexicalBlock(scope: !18320, file: !3, line: 5027, column: 24)
!18325 = !DILocation(line: 5027, column: 24, scope: !18324)
!18326 = !DILocation(line: 5027, column: 24, scope: !18327)
!18327 = distinct !DILexicalBlock(scope: !18324, file: !3, line: 5027, column: 24)
!18328 = !DILocation(line: 5027, column: 42, scope: !18320)
!18329 = !DILocation(line: 5027, column: 2, scope: !18320)
!18330 = !DILocation(line: 5028, column: 21, scope: !18320)
!18331 = !DILocation(line: 5028, column: 2, scope: !18320)
!18332 = !DILocation(line: 5029, column: 24, scope: !18320)
!18333 = !DILocation(line: 5029, column: 2, scope: !18320)
!18334 = !DILocation(line: 5030, column: 20, scope: !18320)
!18335 = !DILocation(line: 5030, column: 2, scope: !18320)
!18336 = !DILocation(line: 5031, column: 2, scope: !18320)
!18337 = distinct !DISubprogram(name: "ata_port_pm_freeze", scope: !3, file: !3, line: 4995, type: !2989, scopeLine: 4996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18338 = !DILocalVariable(name: "dev", arg: 1, scope: !18337, file: !3, line: 4995, type: !2957)
!18339 = !DILocation(line: 4995, column: 46, scope: !18337)
!18340 = !DILocalVariable(name: "ap", scope: !18337, file: !3, line: 4997, type: !1005)
!18341 = !DILocation(line: 4997, column: 19, scope: !18337)
!18342 = !DILocalVariable(name: "__mptr", scope: !18343, file: !3, line: 4997, type: !991)
!18343 = distinct !DILexicalBlock(scope: !18337, file: !3, line: 4997, column: 24)
!18344 = !DILocation(line: 4997, column: 24, scope: !18343)
!18345 = !DILocation(line: 4997, column: 24, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18343, file: !3, line: 4997, column: 24)
!18347 = !DILocation(line: 4999, column: 27, scope: !18348)
!18348 = distinct !DILexicalBlock(scope: !18337, file: !3, line: 4999, column: 6)
!18349 = !DILocation(line: 4999, column: 6, scope: !18348)
!18350 = !DILocation(line: 4999, column: 6, scope: !18337)
!18351 = !DILocation(line: 5000, column: 3, scope: !18348)
!18352 = !DILocation(line: 5002, column: 19, scope: !18337)
!18353 = !DILocation(line: 5002, column: 23, scope: !18337)
!18354 = !DILocation(line: 5002, column: 2, scope: !18337)
!18355 = !DILocation(line: 5003, column: 2, scope: !18337)
!18356 = !DILocation(line: 5004, column: 1, scope: !18337)
!18357 = distinct !DISubprogram(name: "ata_port_pm_poweroff", scope: !3, file: !3, line: 5006, type: !2989, scopeLine: 5007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18358 = !DILocalVariable(name: "dev", arg: 1, scope: !18357, file: !3, line: 5006, type: !2957)
!18359 = !DILocation(line: 5006, column: 48, scope: !18357)
!18360 = !DILocalVariable(name: "__mptr", scope: !18361, file: !3, line: 5008, type: !991)
!18361 = distinct !DILexicalBlock(scope: !18357, file: !3, line: 5008, column: 19)
!18362 = !DILocation(line: 5008, column: 19, scope: !18361)
!18363 = !DILocation(line: 5008, column: 19, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18361, file: !3, line: 5008, column: 19)
!18365 = !DILocation(line: 5008, column: 37, scope: !18357)
!18366 = !DILocation(line: 5008, column: 2, scope: !18357)
!18367 = !DILocation(line: 5009, column: 2, scope: !18357)
!18368 = distinct !DISubprogram(name: "ata_port_runtime_suspend", scope: !3, file: !3, line: 5058, type: !2989, scopeLine: 5059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18369 = !DILocalVariable(name: "dev", arg: 1, scope: !18368, file: !3, line: 5058, type: !2957)
!18370 = !DILocation(line: 5058, column: 52, scope: !18368)
!18371 = !DILocalVariable(name: "__mptr", scope: !18372, file: !3, line: 5060, type: !991)
!18372 = distinct !DILexicalBlock(scope: !18368, file: !3, line: 5060, column: 19)
!18373 = !DILocation(line: 5060, column: 19, scope: !18372)
!18374 = !DILocation(line: 5060, column: 19, scope: !18375)
!18375 = distinct !DILexicalBlock(scope: !18372, file: !3, line: 5060, column: 19)
!18376 = !DILocation(line: 5060, column: 37, scope: !18368)
!18377 = !DILocation(line: 5060, column: 2, scope: !18368)
!18378 = !DILocation(line: 5061, column: 2, scope: !18368)
!18379 = distinct !DISubprogram(name: "ata_port_runtime_resume", scope: !3, file: !3, line: 5064, type: !2989, scopeLine: 5065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18380 = !DILocalVariable(name: "dev", arg: 1, scope: !18379, file: !3, line: 5064, type: !2957)
!18381 = !DILocation(line: 5064, column: 51, scope: !18379)
!18382 = !DILocalVariable(name: "__mptr", scope: !18383, file: !3, line: 5066, type: !991)
!18383 = distinct !DILexicalBlock(scope: !18379, file: !3, line: 5066, column: 18)
!18384 = !DILocation(line: 5066, column: 18, scope: !18383)
!18385 = !DILocation(line: 5066, column: 18, scope: !18386)
!18386 = distinct !DILexicalBlock(scope: !18383, file: !3, line: 5066, column: 18)
!18387 = !DILocation(line: 5066, column: 36, scope: !18379)
!18388 = !DILocation(line: 5066, column: 2, scope: !18379)
!18389 = !DILocation(line: 5067, column: 2, scope: !18379)
!18390 = distinct !DISubprogram(name: "ata_port_runtime_idle", scope: !3, file: !3, line: 5042, type: !2989, scopeLine: 5043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18391 = !DILocalVariable(name: "dev", arg: 1, scope: !18390, file: !3, line: 5042, type: !2957)
!18392 = !DILocation(line: 5042, column: 49, scope: !18390)
!18393 = !DILocalVariable(name: "ap", scope: !18390, file: !3, line: 5044, type: !1005)
!18394 = !DILocation(line: 5044, column: 19, scope: !18390)
!18395 = !DILocalVariable(name: "__mptr", scope: !18396, file: !3, line: 5044, type: !991)
!18396 = distinct !DILexicalBlock(scope: !18390, file: !3, line: 5044, column: 24)
!18397 = !DILocation(line: 5044, column: 24, scope: !18396)
!18398 = !DILocation(line: 5044, column: 24, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18396, file: !3, line: 5044, column: 24)
!18400 = !DILocalVariable(name: "link", scope: !18390, file: !3, line: 5045, type: !6378)
!18401 = !DILocation(line: 5045, column: 19, scope: !18390)
!18402 = !DILocalVariable(name: "adev", scope: !18390, file: !3, line: 5046, type: !6374)
!18403 = !DILocation(line: 5046, column: 21, scope: !18390)
!18404 = !DILocation(line: 5048, column: 2, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18390, file: !3, line: 5048, column: 2)
!18406 = !DILocation(line: 5048, column: 2, scope: !18407)
!18407 = distinct !DILexicalBlock(scope: !18405, file: !3, line: 5048, column: 2)
!18408 = !DILocation(line: 5049, column: 3, scope: !18409)
!18409 = distinct !DILexicalBlock(scope: !18410, file: !3, line: 5049, column: 3)
!18410 = distinct !DILexicalBlock(scope: !18407, file: !3, line: 5048, column: 42)
!18411 = !DILocation(line: 5049, column: 3, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18409, file: !3, line: 5049, column: 3)
!18413 = !DILocation(line: 5050, column: 8, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 5050, column: 8)
!18415 = !DILocation(line: 5050, column: 14, scope: !18414)
!18416 = !DILocation(line: 5050, column: 20, scope: !18414)
!18417 = !DILocation(line: 5050, column: 37, scope: !18414)
!18418 = !DILocation(line: 5051, column: 27, scope: !18414)
!18419 = !DILocation(line: 5051, column: 9, scope: !18414)
!18420 = !DILocation(line: 5050, column: 8, scope: !18412)
!18421 = !DILocation(line: 5052, column: 5, scope: !18414)
!18422 = !DILocation(line: 5051, column: 31, scope: !18414)
!18423 = distinct !{!18423, !18408, !18424}
!18424 = !DILocation(line: 5052, column: 13, scope: !18409)
!18425 = !DILocation(line: 5053, column: 2, scope: !18410)
!18426 = distinct !{!18426, !18404, !18427}
!18427 = !DILocation(line: 5053, column: 2, scope: !18405)
!18428 = !DILocation(line: 5055, column: 2, scope: !18390)
!18429 = !DILocation(line: 5056, column: 1, scope: !18390)
!18430 = distinct !DISubprogram(name: "pm_runtime_suspended", scope: !18431, file: !18431, line: 120, type: !18432, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18431 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!18432 = !DISubroutineType(types: !18433)
!18433 = !{!1495, !2957}
!18434 = !DILocalVariable(name: "dev", arg: 1, scope: !18430, file: !18431, line: 120, type: !2957)
!18435 = !DILocation(line: 120, column: 56, scope: !18430)
!18436 = !DILocation(line: 122, column: 9, scope: !18430)
!18437 = !DILocation(line: 122, column: 14, scope: !18430)
!18438 = !DILocation(line: 122, column: 20, scope: !18430)
!18439 = !DILocation(line: 122, column: 35, scope: !18430)
!18440 = !DILocation(line: 123, column: 3, scope: !18430)
!18441 = !DILocation(line: 123, column: 7, scope: !18430)
!18442 = !DILocation(line: 123, column: 12, scope: !18430)
!18443 = !DILocation(line: 123, column: 18, scope: !18430)
!18444 = !DILocation(line: 123, column: 6, scope: !18430)
!18445 = !DILocation(line: 0, scope: !18430)
!18446 = !DILocation(line: 122, column: 2, scope: !18430)
!18447 = distinct !DISubprogram(name: "ata_port_suspend", scope: !3, file: !3, line: 4974, type: !14566, scopeLine: 4975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18448 = !DILocalVariable(name: "ap", arg: 1, scope: !18447, file: !3, line: 4974, type: !1005)
!18449 = !DILocation(line: 4974, column: 47, scope: !18447)
!18450 = !DILocalVariable(name: "mesg", arg: 2, scope: !18447, file: !3, line: 4974, type: !3072)
!18451 = !DILocation(line: 4974, column: 64, scope: !18447)
!18452 = !DILocation(line: 4976, column: 22, scope: !18447)
!18453 = !DILocation(line: 4976, column: 2, scope: !18447)
!18454 = !DILocation(line: 4977, column: 1, scope: !18447)
!18455 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !18431, file: !18431, line: 524, type: !2980, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18456 = !DILocalVariable(name: "dev", arg: 1, scope: !18455, file: !18431, line: 524, type: !2957)
!18457 = !DILocation(line: 524, column: 54, scope: !18455)
!18458 = !DILocation(line: 526, column: 23, scope: !18455)
!18459 = !DILocation(line: 526, column: 2, scope: !18455)
!18460 = !DILocation(line: 527, column: 1, scope: !18455)
!18461 = distinct !DISubprogram(name: "pm_runtime_set_active", scope: !18431, file: !18431, line: 495, type: !2989, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18462 = !DILocalVariable(name: "dev", arg: 1, scope: !18461, file: !18431, line: 495, type: !2957)
!18463 = !DILocation(line: 495, column: 56, scope: !18461)
!18464 = !DILocation(line: 497, column: 33, scope: !18461)
!18465 = !DILocation(line: 497, column: 9, scope: !18461)
!18466 = !DILocation(line: 497, column: 2, scope: !18461)
!18467 = distinct !DISubprogram(name: "ata_port_resume", scope: !3, file: !3, line: 5015, type: !14566, scopeLine: 5016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18468 = !DILocalVariable(name: "ap", arg: 1, scope: !18467, file: !3, line: 5015, type: !1005)
!18469 = !DILocation(line: 5015, column: 46, scope: !18467)
!18470 = !DILocalVariable(name: "mesg", arg: 2, scope: !18467, file: !3, line: 5015, type: !3072)
!18471 = !DILocation(line: 5015, column: 63, scope: !18467)
!18472 = !DILocation(line: 5017, column: 22, scope: !18467)
!18473 = !DILocation(line: 5017, column: 2, scope: !18467)
!18474 = !DILocation(line: 5018, column: 1, scope: !18467)
!18475 = distinct !DISubprogram(name: "zpodd_dev_enabled", scope: !920, file: !920, line: 250, type: !18476, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18476 = !DISubroutineType(types: !18477)
!18477 = !{!1495, !6374}
!18478 = !DILocalVariable(name: "dev", arg: 1, scope: !18475, file: !920, line: 250, type: !6374)
!18479 = !DILocation(line: 250, column: 57, scope: !18475)
!18480 = !DILocation(line: 250, column: 64, scope: !18475)
!18481 = distinct !DISubprogram(name: "get_order", scope: !18482, file: !18482, line: 29, type: !8540, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18482 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!18483 = !DILocalVariable(name: "x", arg: 1, scope: !18484, file: !8430, line: 366, type: !986)
!18484 = distinct !DISubprogram(name: "fls64", scope: !8430, file: !8430, line: 366, type: !18485, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18485 = !DISubroutineType(types: !18486)
!18486 = !{!223, !986}
!18487 = !DILocation(line: 366, column: 40, scope: !18484, inlinedAt: !18488)
!18488 = distinct !DILocation(line: 46, column: 9, scope: !18481)
!18489 = !DILocalVariable(name: "bitpos", scope: !18484, file: !8430, line: 368, type: !223)
!18490 = !DILocation(line: 368, column: 6, scope: !18484, inlinedAt: !18488)
!18491 = !DILocalVariable(name: "size", arg: 1, scope: !18481, file: !18482, line: 29, type: !994)
!18492 = !DILocation(line: 29, column: 63, scope: !18481)
!18493 = !DILocation(line: 31, column: 27, scope: !18494)
!18494 = distinct !DILexicalBlock(scope: !18481, file: !18482, line: 31, column: 6)
!18495 = !DILocation(line: 31, column: 6, scope: !18494)
!18496 = !DILocation(line: 31, column: 6, scope: !18481)
!18497 = !DILocation(line: 32, column: 8, scope: !18498)
!18498 = distinct !DILexicalBlock(scope: !18499, file: !18482, line: 32, column: 7)
!18499 = distinct !DILexicalBlock(scope: !18494, file: !18482, line: 31, column: 34)
!18500 = !DILocation(line: 32, column: 7, scope: !18499)
!18501 = !DILocation(line: 33, column: 4, scope: !18498)
!18502 = !DILocation(line: 35, column: 7, scope: !18503)
!18503 = distinct !DILexicalBlock(scope: !18499, file: !18482, line: 35, column: 7)
!18504 = !DILocation(line: 35, column: 12, scope: !18503)
!18505 = !DILocation(line: 35, column: 7, scope: !18499)
!18506 = !DILocation(line: 36, column: 4, scope: !18503)
!18507 = !DILocation(line: 38, column: 10, scope: !18499)
!18508 = !DILocation(line: 38, column: 28, scope: !18499)
!18509 = !DILocation(line: 38, column: 41, scope: !18499)
!18510 = !DILocation(line: 38, column: 3, scope: !18499)
!18511 = !DILocation(line: 41, column: 6, scope: !18481)
!18512 = !DILocation(line: 42, column: 7, scope: !18481)
!18513 = !DILocation(line: 46, column: 15, scope: !18481)
!18514 = !DILocation(line: 374, column: 2, scope: !18484, inlinedAt: !18488)
!18515 = !DILocation(line: 376, column: 14, scope: !18484, inlinedAt: !18488)
!18516 = !{i32 407563}
!18517 = !DILocation(line: 377, column: 9, scope: !18484, inlinedAt: !18488)
!18518 = !DILocation(line: 377, column: 16, scope: !18484, inlinedAt: !18488)
!18519 = !DILocation(line: 46, column: 2, scope: !18481)
!18520 = !DILocation(line: 48, column: 1, scope: !18481)
!18521 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11688, file: !11688, line: 30, type: !18522, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18522 = !DISubroutineType(types: !18523)
!18523 = !{!223, !984}
!18524 = !DILocation(line: 366, column: 40, scope: !18484, inlinedAt: !18525)
!18525 = distinct !DILocation(line: 32, column: 9, scope: !18521)
!18526 = !DILocation(line: 368, column: 6, scope: !18484, inlinedAt: !18525)
!18527 = !DILocalVariable(name: "n", arg: 1, scope: !18521, file: !11688, line: 30, type: !984)
!18528 = !DILocation(line: 30, column: 21, scope: !18521)
!18529 = !DILocation(line: 32, column: 15, scope: !18521)
!18530 = !DILocation(line: 374, column: 2, scope: !18484, inlinedAt: !18525)
!18531 = !DILocation(line: 376, column: 14, scope: !18484, inlinedAt: !18525)
!18532 = !DILocation(line: 377, column: 9, scope: !18484, inlinedAt: !18525)
!18533 = !DILocation(line: 377, column: 16, scope: !18484, inlinedAt: !18525)
!18534 = !DILocation(line: 32, column: 18, scope: !18521)
!18535 = !DILocation(line: 32, column: 2, scope: !18521)
!18536 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !18537, file: !18537, line: 137, type: !18538, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18537 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!18538 = !DISubroutineType(types: !18539)
!18539 = !{!991, !3623, !2793, !1645, !992}
!18540 = !DILocalVariable(name: "s", arg: 1, scope: !18536, file: !18537, line: 137, type: !3623)
!18541 = !DILocation(line: 137, column: 54, scope: !18536)
!18542 = !DILocalVariable(name: "object", arg: 2, scope: !18536, file: !18537, line: 137, type: !2793)
!18543 = !DILocation(line: 137, column: 69, scope: !18536)
!18544 = !DILocalVariable(name: "size", arg: 3, scope: !18536, file: !18537, line: 138, type: !1645)
!18545 = !DILocation(line: 138, column: 12, scope: !18536)
!18546 = !DILocalVariable(name: "flags", arg: 4, scope: !18536, file: !18537, line: 138, type: !992)
!18547 = !DILocation(line: 138, column: 24, scope: !18536)
!18548 = !DILocation(line: 140, column: 17, scope: !18536)
!18549 = !DILocation(line: 140, column: 2, scope: !18536)
!18550 = distinct !DISubprogram(name: "refcount_inc", scope: !976, file: !976, line: 265, type: !18551, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18551 = !DISubroutineType(types: !18552)
!18552 = !{null, !18553}
!18553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!18554 = !DILocalVariable(name: "r", arg: 1, scope: !18550, file: !976, line: 265, type: !18553)
!18555 = !DILocation(line: 265, column: 45, scope: !18550)
!18556 = !DILocation(line: 267, column: 17, scope: !18550)
!18557 = !DILocation(line: 267, column: 2, scope: !18550)
!18558 = !DILocation(line: 268, column: 1, scope: !18550)
!18559 = distinct !DISubprogram(name: "__refcount_inc", scope: !976, file: !976, line: 248, type: !18560, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18560 = !DISubroutineType(types: !18561)
!18561 = !{null, !18553, !1633}
!18562 = !DILocalVariable(name: "r", arg: 1, scope: !18559, file: !976, line: 248, type: !18553)
!18563 = !DILocation(line: 248, column: 47, scope: !18559)
!18564 = !DILocalVariable(name: "oldp", arg: 2, scope: !18559, file: !976, line: 248, type: !1633)
!18565 = !DILocation(line: 248, column: 55, scope: !18559)
!18566 = !DILocation(line: 250, column: 20, scope: !18559)
!18567 = !DILocation(line: 250, column: 23, scope: !18559)
!18568 = !DILocation(line: 250, column: 2, scope: !18559)
!18569 = !DILocation(line: 251, column: 1, scope: !18559)
!18570 = distinct !DISubprogram(name: "__refcount_add", scope: !976, file: !976, line: 191, type: !18571, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18571 = !DISubroutineType(types: !18572)
!18572 = !{null, !223, !18553, !1633}
!18573 = !DILocalVariable(name: "i", arg: 1, scope: !18574, file: !16126, line: 182, type: !223)
!18574 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !16126, file: !16126, line: 182, type: !16127, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18575 = !DILocation(line: 182, column: 54, scope: !18574, inlinedAt: !18576)
!18576 = distinct !DILocation(line: 143, column: 9, scope: !18577, inlinedAt: !18578)
!18577 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !16138, file: !16138, line: 140, type: !16127, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18578 = distinct !DILocation(line: 193, column: 12, scope: !18570)
!18579 = !DILocalVariable(name: "v", arg: 2, scope: !18574, file: !16126, line: 182, type: !16129)
!18580 = !DILocation(line: 182, column: 67, scope: !18574, inlinedAt: !18576)
!18581 = !DILocalVariable(name: "__ret", scope: !18582, file: !16126, line: 184, type: !223)
!18582 = distinct !DILexicalBlock(scope: !18574, file: !16126, line: 184, column: 9)
!18583 = !DILocation(line: 184, column: 9, scope: !18582, inlinedAt: !18576)
!18584 = !DILocation(line: 99, column: 79, scope: !16151, inlinedAt: !18585)
!18585 = distinct !DILocation(line: 142, column: 2, scope: !18577, inlinedAt: !18578)
!18586 = !DILocation(line: 99, column: 89, scope: !16151, inlinedAt: !18585)
!18587 = !DILocalVariable(name: "i", arg: 1, scope: !18577, file: !16138, line: 140, type: !223)
!18588 = !DILocation(line: 140, column: 30, scope: !18577, inlinedAt: !18578)
!18589 = !DILocalVariable(name: "v", arg: 2, scope: !18577, file: !16138, line: 140, type: !16129)
!18590 = !DILocation(line: 140, column: 43, scope: !18577, inlinedAt: !18578)
!18591 = !DILocalVariable(name: "i", arg: 1, scope: !18570, file: !976, line: 191, type: !223)
!18592 = !DILocation(line: 191, column: 39, scope: !18570)
!18593 = !DILocalVariable(name: "r", arg: 2, scope: !18570, file: !976, line: 191, type: !18553)
!18594 = !DILocation(line: 191, column: 54, scope: !18570)
!18595 = !DILocalVariable(name: "oldp", arg: 3, scope: !18570, file: !976, line: 191, type: !1633)
!18596 = !DILocation(line: 191, column: 62, scope: !18570)
!18597 = !DILocalVariable(name: "old", scope: !18570, file: !976, line: 193, type: !223)
!18598 = !DILocation(line: 193, column: 6, scope: !18570)
!18599 = !DILocation(line: 193, column: 37, scope: !18570)
!18600 = !DILocation(line: 193, column: 41, scope: !18570)
!18601 = !DILocation(line: 193, column: 44, scope: !18570)
!18602 = !DILocation(line: 142, column: 31, scope: !18577, inlinedAt: !18578)
!18603 = !DILocation(line: 101, column: 20, scope: !16151, inlinedAt: !18585)
!18604 = !DILocation(line: 101, column: 23, scope: !16151, inlinedAt: !18585)
!18605 = !DILocation(line: 101, column: 2, scope: !16151, inlinedAt: !18585)
!18606 = !DILocation(line: 102, column: 2, scope: !16151, inlinedAt: !18585)
!18607 = !DILocation(line: 143, column: 39, scope: !18577, inlinedAt: !18578)
!18608 = !DILocation(line: 143, column: 42, scope: !18577, inlinedAt: !18578)
!18609 = !{i32 -2146457033}
!18610 = !DILocation(line: 195, column: 6, scope: !18611)
!18611 = distinct !DILexicalBlock(scope: !18570, file: !976, line: 195, column: 6)
!18612 = !DILocation(line: 195, column: 6, scope: !18570)
!18613 = !DILocation(line: 196, column: 11, scope: !18611)
!18614 = !DILocation(line: 196, column: 4, scope: !18611)
!18615 = !DILocation(line: 196, column: 9, scope: !18611)
!18616 = !DILocation(line: 196, column: 3, scope: !18611)
!18617 = !DILocation(line: 198, column: 6, scope: !18618)
!18618 = distinct !DILexicalBlock(scope: !18570, file: !976, line: 198, column: 6)
!18619 = !DILocation(line: 198, column: 6, scope: !18570)
!18620 = !DILocation(line: 199, column: 26, scope: !18618)
!18621 = !DILocation(line: 199, column: 3, scope: !18618)
!18622 = !DILocation(line: 200, column: 11, scope: !18623)
!18623 = distinct !DILexicalBlock(scope: !18618, file: !976, line: 200, column: 11)
!18624 = !DILocation(line: 200, column: 11, scope: !18618)
!18625 = !DILocation(line: 201, column: 26, scope: !18623)
!18626 = !DILocation(line: 201, column: 3, scope: !18623)
!18627 = !DILocation(line: 202, column: 1, scope: !18570)
!18628 = distinct !DISubprogram(name: "kasan_check_write", scope: !18629, file: !18629, line: 38, type: !18630, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18629 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!18630 = !DISubroutineType(types: !18631)
!18631 = !{!1495, !16155, !7}
!18632 = !DILocalVariable(name: "p", arg: 1, scope: !18628, file: !18629, line: 38, type: !16155)
!18633 = !DILocation(line: 38, column: 59, scope: !18628)
!18634 = !DILocalVariable(name: "size", arg: 2, scope: !18628, file: !18629, line: 38, type: !7)
!18635 = !DILocation(line: 38, column: 75, scope: !18628)
!18636 = !DILocation(line: 40, column: 2, scope: !18628)
!18637 = distinct !DISubprogram(name: "kcsan_check_access", scope: !18638, file: !18638, line: 178, type: !18639, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18638 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!18639 = !DISubroutineType(types: !18640)
!18640 = !{null, !16155, !1645, !223}
!18641 = !DILocalVariable(name: "ptr", arg: 1, scope: !18637, file: !18638, line: 178, type: !16155)
!18642 = !DILocation(line: 178, column: 60, scope: !18637)
!18643 = !DILocalVariable(name: "size", arg: 2, scope: !18637, file: !18638, line: 178, type: !1645)
!18644 = !DILocation(line: 178, column: 72, scope: !18637)
!18645 = !DILocalVariable(name: "type", arg: 3, scope: !18637, file: !18638, line: 179, type: !223)
!18646 = !DILocation(line: 179, column: 15, scope: !18637)
!18647 = !DILocation(line: 179, column: 23, scope: !18637)
!18648 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !976, file: !976, line: 331, type: !18649, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18649 = !DISubroutineType(types: !18650)
!18650 = !{!1495, !18553}
!18651 = !DILocalVariable(name: "r", arg: 1, scope: !18648, file: !976, line: 331, type: !18553)
!18652 = !DILocation(line: 331, column: 67, scope: !18648)
!18653 = !DILocation(line: 333, column: 33, scope: !18648)
!18654 = !DILocation(line: 333, column: 9, scope: !18648)
!18655 = !DILocation(line: 333, column: 2, scope: !18648)
!18656 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !976, file: !976, line: 313, type: !18657, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18657 = !DISubroutineType(types: !18658)
!18658 = !{!1495, !18553, !1633}
!18659 = !DILocalVariable(name: "r", arg: 1, scope: !18656, file: !976, line: 313, type: !18553)
!18660 = !DILocation(line: 313, column: 69, scope: !18656)
!18661 = !DILocalVariable(name: "oldp", arg: 2, scope: !18656, file: !976, line: 313, type: !1633)
!18662 = !DILocation(line: 313, column: 77, scope: !18656)
!18663 = !DILocation(line: 315, column: 36, scope: !18656)
!18664 = !DILocation(line: 315, column: 39, scope: !18656)
!18665 = !DILocation(line: 315, column: 9, scope: !18656)
!18666 = !DILocation(line: 315, column: 2, scope: !18656)
!18667 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !976, file: !976, line: 270, type: !18668, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18668 = !DISubroutineType(types: !18669)
!18669 = !{!1495, !223, !18553, !1633}
!18670 = !DILocalVariable(name: "i", arg: 1, scope: !18671, file: !16126, line: 188, type: !223)
!18671 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !16126, file: !16126, line: 188, type: !16127, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18672 = !DILocation(line: 188, column: 54, scope: !18671, inlinedAt: !18673)
!18673 = distinct !DILocation(line: 221, column: 9, scope: !18674, inlinedAt: !18675)
!18674 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !16138, file: !16138, line: 218, type: !16127, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18675 = distinct !DILocation(line: 272, column: 12, scope: !18667)
!18676 = !DILocalVariable(name: "v", arg: 2, scope: !18671, file: !16126, line: 188, type: !16129)
!18677 = !DILocation(line: 188, column: 67, scope: !18671, inlinedAt: !18673)
!18678 = !DILocalVariable(name: "__ret", scope: !18679, file: !16126, line: 190, type: !223)
!18679 = distinct !DILexicalBlock(scope: !18671, file: !16126, line: 190, column: 9)
!18680 = !DILocation(line: 190, column: 9, scope: !18679, inlinedAt: !18673)
!18681 = !DILocation(line: 99, column: 79, scope: !16151, inlinedAt: !18682)
!18682 = distinct !DILocation(line: 220, column: 2, scope: !18674, inlinedAt: !18675)
!18683 = !DILocation(line: 99, column: 89, scope: !16151, inlinedAt: !18682)
!18684 = !DILocalVariable(name: "i", arg: 1, scope: !18674, file: !16138, line: 218, type: !223)
!18685 = !DILocation(line: 218, column: 30, scope: !18674, inlinedAt: !18675)
!18686 = !DILocalVariable(name: "v", arg: 2, scope: !18674, file: !16138, line: 218, type: !16129)
!18687 = !DILocation(line: 218, column: 43, scope: !18674, inlinedAt: !18675)
!18688 = !DILocalVariable(name: "i", arg: 1, scope: !18667, file: !976, line: 270, type: !223)
!18689 = !DILocation(line: 270, column: 61, scope: !18667)
!18690 = !DILocalVariable(name: "r", arg: 2, scope: !18667, file: !976, line: 270, type: !18553)
!18691 = !DILocation(line: 270, column: 76, scope: !18667)
!18692 = !DILocalVariable(name: "oldp", arg: 3, scope: !18667, file: !976, line: 270, type: !1633)
!18693 = !DILocation(line: 270, column: 84, scope: !18667)
!18694 = !DILocalVariable(name: "old", scope: !18667, file: !976, line: 272, type: !223)
!18695 = !DILocation(line: 272, column: 6, scope: !18667)
!18696 = !DILocation(line: 272, column: 37, scope: !18667)
!18697 = !DILocation(line: 272, column: 41, scope: !18667)
!18698 = !DILocation(line: 272, column: 44, scope: !18667)
!18699 = !DILocation(line: 220, column: 31, scope: !18674, inlinedAt: !18675)
!18700 = !DILocation(line: 101, column: 20, scope: !16151, inlinedAt: !18682)
!18701 = !DILocation(line: 101, column: 23, scope: !16151, inlinedAt: !18682)
!18702 = !DILocation(line: 101, column: 2, scope: !16151, inlinedAt: !18682)
!18703 = !DILocation(line: 102, column: 2, scope: !16151, inlinedAt: !18682)
!18704 = !DILocation(line: 221, column: 39, scope: !18674, inlinedAt: !18675)
!18705 = !DILocation(line: 221, column: 42, scope: !18674, inlinedAt: !18675)
!18706 = !{i32 -2146455681}
!18707 = !DILocation(line: 274, column: 6, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18667, file: !976, line: 274, column: 6)
!18709 = !DILocation(line: 274, column: 6, scope: !18667)
!18710 = !DILocation(line: 275, column: 11, scope: !18708)
!18711 = !DILocation(line: 275, column: 4, scope: !18708)
!18712 = !DILocation(line: 275, column: 9, scope: !18708)
!18713 = !DILocation(line: 275, column: 3, scope: !18708)
!18714 = !DILocation(line: 277, column: 6, scope: !18715)
!18715 = distinct !DILexicalBlock(scope: !18667, file: !976, line: 277, column: 6)
!18716 = !DILocation(line: 277, column: 13, scope: !18715)
!18717 = !DILocation(line: 277, column: 10, scope: !18715)
!18718 = !DILocation(line: 277, column: 6, scope: !18667)
!18719 = !DILocation(line: 278, column: 3, scope: !18720)
!18720 = distinct !DILexicalBlock(scope: !18715, file: !976, line: 277, column: 16)
!18721 = !{i32 -2144235214}
!18722 = !DILocation(line: 279, column: 3, scope: !18720)
!18723 = !DILocation(line: 282, column: 6, scope: !18724)
!18724 = distinct !DILexicalBlock(scope: !18667, file: !976, line: 282, column: 6)
!18725 = !DILocation(line: 282, column: 6, scope: !18667)
!18726 = !DILocation(line: 283, column: 26, scope: !18724)
!18727 = !DILocation(line: 283, column: 3, scope: !18724)
!18728 = !DILocation(line: 285, column: 2, scope: !18667)
!18729 = !DILocation(line: 286, column: 1, scope: !18667)
!18730 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !52, file: !52, line: 655, type: !18731, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18731 = !DISubroutineType(types: !18732)
!18732 = !{!991, !3288}
!18733 = !DILocalVariable(name: "dev", arg: 1, scope: !18730, file: !52, line: 655, type: !3288)
!18734 = !DILocation(line: 655, column: 58, scope: !18730)
!18735 = !DILocation(line: 657, column: 9, scope: !18730)
!18736 = !DILocation(line: 657, column: 14, scope: !18730)
!18737 = !DILocation(line: 657, column: 2, scope: !18730)
!18738 = distinct !DISubprogram(name: "refcount_set", scope: !976, file: !976, line: 134, type: !18739, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18739 = !DISubroutineType(types: !18740)
!18740 = !{null, !18553, !223}
!18741 = !DILocalVariable(name: "v", arg: 1, scope: !18742, file: !16126, line: 39, type: !16129)
!18742 = distinct !DISubprogram(name: "arch_atomic_set", scope: !16126, file: !16126, line: 39, type: !18743, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18743 = !DISubroutineType(types: !18744)
!18744 = !{null, !16129, !223}
!18745 = !DILocation(line: 39, column: 55, scope: !18742, inlinedAt: !18746)
!18746 = distinct !DILocation(line: 46, column: 2, scope: !18747, inlinedAt: !18748)
!18747 = distinct !DISubprogram(name: "atomic_set", scope: !16138, file: !16138, line: 43, type: !18743, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18748 = distinct !DILocation(line: 136, column: 2, scope: !18738)
!18749 = !DILocalVariable(name: "i", arg: 2, scope: !18742, file: !16126, line: 39, type: !223)
!18750 = !DILocation(line: 39, column: 62, scope: !18742, inlinedAt: !18746)
!18751 = !DILocalVariable(name: "v", arg: 1, scope: !18752, file: !16152, line: 84, type: !16155)
!18752 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !16152, file: !16152, line: 84, type: !16153, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18753 = !DILocation(line: 84, column: 74, scope: !18752, inlinedAt: !18754)
!18754 = distinct !DILocation(line: 45, column: 2, scope: !18747, inlinedAt: !18748)
!18755 = !DILocalVariable(name: "size", arg: 2, scope: !18752, file: !16152, line: 84, type: !1645)
!18756 = !DILocation(line: 84, column: 84, scope: !18752, inlinedAt: !18754)
!18757 = !DILocalVariable(name: "v", arg: 1, scope: !18747, file: !16138, line: 43, type: !16129)
!18758 = !DILocation(line: 43, column: 22, scope: !18747, inlinedAt: !18748)
!18759 = !DILocalVariable(name: "i", arg: 2, scope: !18747, file: !16138, line: 43, type: !223)
!18760 = !DILocation(line: 43, column: 29, scope: !18747, inlinedAt: !18748)
!18761 = !DILocalVariable(name: "r", arg: 1, scope: !18738, file: !976, line: 134, type: !18553)
!18762 = !DILocation(line: 134, column: 45, scope: !18738)
!18763 = !DILocalVariable(name: "n", arg: 2, scope: !18738, file: !976, line: 134, type: !223)
!18764 = !DILocation(line: 134, column: 52, scope: !18738)
!18765 = !DILocation(line: 136, column: 14, scope: !18738)
!18766 = !DILocation(line: 136, column: 17, scope: !18738)
!18767 = !DILocation(line: 136, column: 23, scope: !18738)
!18768 = !DILocation(line: 45, column: 26, scope: !18747, inlinedAt: !18748)
!18769 = !DILocation(line: 86, column: 20, scope: !18752, inlinedAt: !18754)
!18770 = !DILocation(line: 86, column: 23, scope: !18752, inlinedAt: !18754)
!18771 = !DILocation(line: 86, column: 2, scope: !18752, inlinedAt: !18754)
!18772 = !DILocation(line: 87, column: 2, scope: !18752, inlinedAt: !18754)
!18773 = !DILocation(line: 46, column: 18, scope: !18747, inlinedAt: !18748)
!18774 = !DILocation(line: 46, column: 21, scope: !18747, inlinedAt: !18748)
!18775 = !DILocation(line: 41, column: 2, scope: !18776, inlinedAt: !18746)
!18776 = distinct !DILexicalBlock(scope: !18742, file: !16126, line: 41, column: 2)
!18777 = !DILocation(line: 137, column: 1, scope: !18738)
!18778 = distinct !DISubprogram(name: "IS_ERR", scope: !18779, file: !18779, line: 34, type: !18780, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18779 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!18780 = !DISubroutineType(types: !18781)
!18781 = !{!1495, !2793}
!18782 = !DILocalVariable(name: "ptr", arg: 1, scope: !18778, file: !18779, line: 34, type: !2793)
!18783 = !DILocation(line: 34, column: 60, scope: !18778)
!18784 = !DILocation(line: 36, column: 9, scope: !18778)
!18785 = !DILocation(line: 36, column: 2, scope: !18778)
!18786 = distinct !DISubprogram(name: "kobject_name", scope: !2662, file: !2662, line: 88, type: !18787, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18787 = !DISubroutineType(types: !18788)
!18788 = !{!1450, !18789}
!18789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18790, size: 64)
!18790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2661)
!18791 = !DILocalVariable(name: "kobj", arg: 1, scope: !18786, file: !2662, line: 88, type: !18789)
!18792 = !DILocation(line: 88, column: 62, scope: !18786)
!18793 = !DILocation(line: 90, column: 9, scope: !18786)
!18794 = !DILocation(line: 90, column: 15, scope: !18786)
!18795 = !DILocation(line: 90, column: 2, scope: !18786)
!18796 = distinct !DISubprogram(name: "zpodd_exit", scope: !920, file: !920, line: 249, type: !6618, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18797 = !DILocalVariable(name: "dev", arg: 1, scope: !18796, file: !920, line: 249, type: !6374)
!18798 = !DILocation(line: 249, column: 50, scope: !18796)
!18799 = !DILocation(line: 249, column: 56, scope: !18796)
!18800 = distinct !DISubprogram(name: "ata_parse_force_param", scope: !3, file: !3, line: 6224, type: !5552, scopeLine: 6225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18801 = !DILocalVariable(name: "idx", scope: !18800, file: !3, line: 6226, type: !223)
!18802 = !DILocation(line: 6226, column: 6, scope: !18800)
!18803 = !DILocalVariable(name: "size", scope: !18800, file: !3, line: 6226, type: !223)
!18804 = !DILocation(line: 6226, column: 15, scope: !18800)
!18805 = !DILocalVariable(name: "last_port", scope: !18800, file: !3, line: 6227, type: !223)
!18806 = !DILocation(line: 6227, column: 6, scope: !18800)
!18807 = !DILocalVariable(name: "last_device", scope: !18800, file: !3, line: 6227, type: !223)
!18808 = !DILocation(line: 6227, column: 22, scope: !18800)
!18809 = !DILocalVariable(name: "p", scope: !18800, file: !3, line: 6228, type: !1476)
!18810 = !DILocation(line: 6228, column: 8, scope: !18800)
!18811 = !DILocalVariable(name: "cur", scope: !18800, file: !3, line: 6228, type: !1476)
!18812 = !DILocation(line: 6228, column: 12, scope: !18800)
!18813 = !DILocalVariable(name: "next", scope: !18800, file: !3, line: 6228, type: !1476)
!18814 = !DILocation(line: 6228, column: 18, scope: !18800)
!18815 = !DILocation(line: 6231, column: 9, scope: !18816)
!18816 = distinct !DILexicalBlock(scope: !18800, file: !3, line: 6231, column: 2)
!18817 = !DILocation(line: 6231, column: 7, scope: !18816)
!18818 = !DILocation(line: 6231, column: 33, scope: !18819)
!18819 = distinct !DILexicalBlock(scope: !18816, file: !3, line: 6231, column: 2)
!18820 = !DILocation(line: 6231, column: 32, scope: !18819)
!18821 = !DILocation(line: 6231, column: 2, scope: !18816)
!18822 = !DILocation(line: 6232, column: 8, scope: !18823)
!18823 = distinct !DILexicalBlock(scope: !18819, file: !3, line: 6232, column: 7)
!18824 = !DILocation(line: 6232, column: 7, scope: !18823)
!18825 = !DILocation(line: 6232, column: 10, scope: !18823)
!18826 = !DILocation(line: 6232, column: 7, scope: !18819)
!18827 = !DILocation(line: 6233, column: 8, scope: !18823)
!18828 = !DILocation(line: 6233, column: 4, scope: !18823)
!18829 = !DILocation(line: 6232, column: 13, scope: !18823)
!18830 = !DILocation(line: 6231, column: 37, scope: !18819)
!18831 = !DILocation(line: 6231, column: 2, scope: !18819)
!18832 = distinct !{!18832, !18821, !18833}
!18833 = !DILocation(line: 6233, column: 8, scope: !18816)
!18834 = !DILocation(line: 6235, column: 26, scope: !18800)
!18835 = !DILocation(line: 6235, column: 18, scope: !18800)
!18836 = !DILocation(line: 6235, column: 16, scope: !18800)
!18837 = !DILocation(line: 6236, column: 7, scope: !18838)
!18838 = distinct !DILexicalBlock(scope: !18800, file: !3, line: 6236, column: 6)
!18839 = !DILocation(line: 6236, column: 6, scope: !18800)
!18840 = !DILocation(line: 6237, column: 3, scope: !18841)
!18841 = distinct !DILexicalBlock(scope: !18838, file: !3, line: 6236, column: 22)
!18842 = !DILocation(line: 6239, column: 3, scope: !18841)
!18843 = !DILocation(line: 6243, column: 11, scope: !18844)
!18844 = distinct !DILexicalBlock(scope: !18800, file: !3, line: 6243, column: 2)
!18845 = !DILocation(line: 6243, column: 7, scope: !18844)
!18846 = !DILocation(line: 6243, column: 35, scope: !18847)
!18847 = distinct !DILexicalBlock(scope: !18844, file: !3, line: 6243, column: 2)
!18848 = !DILocation(line: 6243, column: 34, scope: !18847)
!18849 = !DILocation(line: 6243, column: 39, scope: !18847)
!18850 = !DILocation(line: 6243, column: 2, scope: !18844)
!18851 = !DILocalVariable(name: "reason", scope: !18852, file: !3, line: 6244, type: !1450)
!18852 = distinct !DILexicalBlock(scope: !18847, file: !3, line: 6243, column: 60)
!18853 = !DILocation(line: 6244, column: 15, scope: !18852)
!18854 = !DILocalVariable(name: "te", scope: !18852, file: !3, line: 6245, type: !7154)
!18855 = !DILocation(line: 6245, column: 24, scope: !18852)
!18856 = !DILocation(line: 6247, column: 10, scope: !18852)
!18857 = !DILocation(line: 6247, column: 8, scope: !18852)
!18858 = !DILocation(line: 6248, column: 7, scope: !18859)
!18859 = distinct !DILexicalBlock(scope: !18852, file: !3, line: 6248, column: 7)
!18860 = !DILocation(line: 6248, column: 7, scope: !18852)
!18861 = !DILocation(line: 6251, column: 11, scope: !18862)
!18862 = distinct !DILexicalBlock(scope: !18859, file: !3, line: 6248, column: 49)
!18863 = !DILocation(line: 6251, column: 16, scope: !18862)
!18864 = !DILocation(line: 6249, column: 4, scope: !18862)
!18865 = !DILocation(line: 6252, column: 4, scope: !18862)
!18866 = !DILocation(line: 6255, column: 10, scope: !18867)
!18867 = distinct !DILexicalBlock(scope: !18852, file: !3, line: 6255, column: 7)
!18868 = !DILocation(line: 6255, column: 15, scope: !18867)
!18869 = !DILocation(line: 6255, column: 7, scope: !18852)
!18870 = !DILocation(line: 6256, column: 14, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18867, file: !3, line: 6255, column: 22)
!18872 = !DILocation(line: 6256, column: 7, scope: !18871)
!18873 = !DILocation(line: 6256, column: 12, scope: !18871)
!18874 = !DILocation(line: 6257, column: 16, scope: !18871)
!18875 = !DILocation(line: 6257, column: 7, scope: !18871)
!18876 = !DILocation(line: 6257, column: 14, scope: !18871)
!18877 = !DILocation(line: 6258, column: 3, scope: !18871)
!18878 = !DILocation(line: 6260, column: 3, scope: !18852)
!18879 = !DILocation(line: 6260, column: 20, scope: !18852)
!18880 = !DILocation(line: 6260, column: 26, scope: !18852)
!18881 = !DILocation(line: 6262, column: 18, scope: !18852)
!18882 = !DILocation(line: 6262, column: 13, scope: !18852)
!18883 = !DILocation(line: 6263, column: 20, scope: !18852)
!18884 = !DILocation(line: 6263, column: 15, scope: !18852)
!18885 = !DILocation(line: 6264, column: 2, scope: !18852)
!18886 = !DILocation(line: 6243, column: 54, scope: !18847)
!18887 = !DILocation(line: 6243, column: 52, scope: !18847)
!18888 = !DILocation(line: 6243, column: 2, scope: !18847)
!18889 = distinct !{!18889, !18850, !18890}
!18890 = !DILocation(line: 6264, column: 2, scope: !18844)
!18891 = !DILocation(line: 6266, column: 23, scope: !18800)
!18892 = !DILocation(line: 6266, column: 21, scope: !18800)
!18893 = !DILocation(line: 6267, column: 1, scope: !18800)
!18894 = distinct !DISubprogram(name: "kcalloc", scope: !969, file: !969, line: 601, type: !18895, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!18895 = !DISubroutineType(types: !18896)
!18896 = !{!991, !1645, !1645, !992}
!18897 = !DILocalVariable(name: "n", arg: 1, scope: !18894, file: !969, line: 601, type: !1645)
!18898 = !DILocation(line: 601, column: 36, scope: !18894)
!18899 = !DILocalVariable(name: "size", arg: 2, scope: !18894, file: !969, line: 601, type: !1645)
!18900 = !DILocation(line: 601, column: 46, scope: !18894)
!18901 = !DILocalVariable(name: "flags", arg: 3, scope: !18894, file: !969, line: 601, type: !992)
!18902 = !DILocation(line: 601, column: 58, scope: !18894)
!18903 = !DILocation(line: 603, column: 23, scope: !18894)
!18904 = !DILocation(line: 603, column: 26, scope: !18894)
!18905 = !DILocation(line: 603, column: 32, scope: !18894)
!18906 = !DILocation(line: 603, column: 38, scope: !18894)
!18907 = !DILocation(line: 603, column: 9, scope: !18894)
!18908 = !DILocation(line: 603, column: 2, scope: !18894)
!18909 = !DILocalVariable(name: "cur", arg: 1, scope: !7274, file: !3, line: 6090, type: !7277)
!18910 = !DILocation(line: 6090, column: 46, scope: !7274)
!18911 = !DILocalVariable(name: "force_ent", arg: 2, scope: !7274, file: !3, line: 6091, type: !7153)
!18912 = !DILocation(line: 6091, column: 33, scope: !7274)
!18913 = !DILocalVariable(name: "reason", arg: 3, scope: !7274, file: !3, line: 6092, type: !3302)
!18914 = !DILocation(line: 6092, column: 24, scope: !7274)
!18915 = !DILocalVariable(name: "start", scope: !7274, file: !3, line: 6149, type: !1476)
!18916 = !DILocation(line: 6149, column: 8, scope: !7274)
!18917 = !DILocation(line: 6149, column: 17, scope: !7274)
!18918 = !DILocation(line: 6149, column: 16, scope: !7274)
!18919 = !DILocalVariable(name: "p", scope: !7274, file: !3, line: 6149, type: !1476)
!18920 = !DILocation(line: 6149, column: 23, scope: !7274)
!18921 = !DILocation(line: 6149, column: 28, scope: !7274)
!18922 = !DILocation(line: 6149, column: 27, scope: !7274)
!18923 = !DILocalVariable(name: "id", scope: !7274, file: !3, line: 6150, type: !1476)
!18924 = !DILocation(line: 6150, column: 8, scope: !7274)
!18925 = !DILocalVariable(name: "val", scope: !7274, file: !3, line: 6150, type: !1476)
!18926 = !DILocation(line: 6150, column: 13, scope: !7274)
!18927 = !DILocalVariable(name: "endp", scope: !7274, file: !3, line: 6150, type: !1476)
!18928 = !DILocation(line: 6150, column: 19, scope: !7274)
!18929 = !DILocalVariable(name: "match_fp", scope: !7274, file: !3, line: 6151, type: !18930)
!18930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7279, size: 64)
!18931 = !DILocation(line: 6151, column: 32, scope: !7274)
!18932 = !DILocalVariable(name: "nr_matches", scope: !7274, file: !3, line: 6152, type: !223)
!18933 = !DILocation(line: 6152, column: 6, scope: !7274)
!18934 = !DILocalVariable(name: "i", scope: !7274, file: !3, line: 6152, type: !223)
!18935 = !DILocation(line: 6152, column: 22, scope: !7274)
!18936 = !DILocation(line: 6155, column: 2, scope: !7274)
!18937 = !DILocation(line: 6155, column: 10, scope: !7274)
!18938 = !DILocation(line: 6155, column: 9, scope: !7274)
!18939 = !DILocation(line: 6155, column: 12, scope: !7274)
!18940 = !DILocation(line: 6155, column: 20, scope: !7274)
!18941 = !DILocation(line: 6155, column: 24, scope: !7274)
!18942 = !DILocation(line: 6155, column: 23, scope: !7274)
!18943 = !DILocation(line: 6155, column: 26, scope: !7274)
!18944 = !DILocation(line: 0, scope: !7274)
!18945 = !DILocation(line: 6156, column: 4, scope: !7274)
!18946 = distinct !{!18946, !18936, !18945}
!18947 = !DILocation(line: 6158, column: 7, scope: !18948)
!18948 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 6158, column: 6)
!18949 = !DILocation(line: 6158, column: 6, scope: !18948)
!18950 = !DILocation(line: 6158, column: 9, scope: !18948)
!18951 = !DILocation(line: 6158, column: 6, scope: !7274)
!18952 = !DILocation(line: 6159, column: 10, scope: !18948)
!18953 = !DILocation(line: 6159, column: 4, scope: !18948)
!18954 = !DILocation(line: 6159, column: 8, scope: !18948)
!18955 = !DILocation(line: 6159, column: 3, scope: !18948)
!18956 = !DILocation(line: 6161, column: 10, scope: !18948)
!18957 = !DILocation(line: 6161, column: 12, scope: !18948)
!18958 = !DILocation(line: 6161, column: 4, scope: !18948)
!18959 = !DILocation(line: 6161, column: 8, scope: !18948)
!18960 = !DILocation(line: 6163, column: 3, scope: !7274)
!18961 = !DILocation(line: 6163, column: 5, scope: !7274)
!18962 = !DILocation(line: 6166, column: 13, scope: !7274)
!18963 = !DILocation(line: 6166, column: 6, scope: !7274)
!18964 = !DILocation(line: 6166, column: 4, scope: !7274)
!18965 = !DILocation(line: 6167, column: 7, scope: !18966)
!18966 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 6167, column: 6)
!18967 = !DILocation(line: 6167, column: 6, scope: !7274)
!18968 = !DILocation(line: 6168, column: 18, scope: !18969)
!18969 = distinct !DILexicalBlock(scope: !18966, file: !3, line: 6167, column: 10)
!18970 = !DILocation(line: 6168, column: 9, scope: !18969)
!18971 = !DILocation(line: 6168, column: 7, scope: !18969)
!18972 = !DILocation(line: 6169, column: 3, scope: !18969)
!18973 = !DILocation(line: 6171, column: 3, scope: !7274)
!18974 = !DILocation(line: 6171, column: 5, scope: !7274)
!18975 = !DILocation(line: 6173, column: 16, scope: !7274)
!18976 = !DILocation(line: 6173, column: 7, scope: !7274)
!18977 = !DILocation(line: 6173, column: 5, scope: !7274)
!18978 = !DILocation(line: 6174, column: 17, scope: !7274)
!18979 = !DILocation(line: 6174, column: 19, scope: !7274)
!18980 = !DILocation(line: 6174, column: 8, scope: !7274)
!18981 = !DILocation(line: 6174, column: 6, scope: !7274)
!18982 = !DILocation(line: 6177, column: 13, scope: !7274)
!18983 = !DILocation(line: 6177, column: 6, scope: !7274)
!18984 = !DILocation(line: 6177, column: 4, scope: !7274)
!18985 = !DILocation(line: 6178, column: 6, scope: !18986)
!18986 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 6178, column: 6)
!18987 = !DILocation(line: 6178, column: 6, scope: !7274)
!18988 = !DILocation(line: 6179, column: 5, scope: !18989)
!18989 = distinct !DILexicalBlock(scope: !18986, file: !3, line: 6178, column: 9)
!18990 = !DILocation(line: 6179, column: 8, scope: !18989)
!18991 = !DILocation(line: 6180, column: 38, scope: !18989)
!18992 = !DILocation(line: 6180, column: 23, scope: !18989)
!18993 = !DILocation(line: 6180, column: 3, scope: !18989)
!18994 = !DILocation(line: 6180, column: 14, scope: !18989)
!18995 = !DILocation(line: 6180, column: 21, scope: !18989)
!18996 = !DILocation(line: 6181, column: 7, scope: !18997)
!18997 = distinct !DILexicalBlock(scope: !18989, file: !3, line: 6181, column: 7)
!18998 = !DILocation(line: 6181, column: 12, scope: !18997)
!18999 = !DILocation(line: 6181, column: 9, scope: !18997)
!19000 = !DILocation(line: 6181, column: 17, scope: !18997)
!19001 = !DILocation(line: 6181, column: 21, scope: !18997)
!19002 = !DILocation(line: 6181, column: 20, scope: !18997)
!19003 = !DILocation(line: 6181, column: 26, scope: !18997)
!19004 = !DILocation(line: 6181, column: 7, scope: !18989)
!19005 = !DILocation(line: 6182, column: 5, scope: !19006)
!19006 = distinct !DILexicalBlock(scope: !18997, file: !3, line: 6181, column: 35)
!19007 = !DILocation(line: 6182, column: 12, scope: !19006)
!19008 = !DILocation(line: 6183, column: 4, scope: !19006)
!19009 = !DILocation(line: 6185, column: 2, scope: !18989)
!19010 = !DILocation(line: 6187, column: 35, scope: !7274)
!19011 = !DILocation(line: 6187, column: 20, scope: !7274)
!19012 = !DILocation(line: 6187, column: 2, scope: !7274)
!19013 = !DILocation(line: 6187, column: 13, scope: !7274)
!19014 = !DILocation(line: 6187, column: 18, scope: !7274)
!19015 = !DILocation(line: 6188, column: 6, scope: !19016)
!19016 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 6188, column: 6)
!19017 = !DILocation(line: 6188, column: 12, scope: !19016)
!19018 = !DILocation(line: 6188, column: 9, scope: !19016)
!19019 = !DILocation(line: 6188, column: 17, scope: !19016)
!19020 = !DILocation(line: 6188, column: 21, scope: !19016)
!19021 = !DILocation(line: 6188, column: 20, scope: !19016)
!19022 = !DILocation(line: 6188, column: 26, scope: !19016)
!19023 = !DILocation(line: 6188, column: 6, scope: !7274)
!19024 = !DILocation(line: 6189, column: 4, scope: !19025)
!19025 = distinct !DILexicalBlock(scope: !19016, file: !3, line: 6188, column: 35)
!19026 = !DILocation(line: 6189, column: 11, scope: !19025)
!19027 = !DILocation(line: 6190, column: 3, scope: !19025)
!19028 = !DILocation(line: 6188, column: 29, scope: !19016)
!19029 = !DILabel(scope: !7274, name: "parse_val", file: !3, line: 6193)
!19030 = !DILocation(line: 6193, column: 2, scope: !7274)
!19031 = !DILocation(line: 6195, column: 9, scope: !19032)
!19032 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 6195, column: 2)
!19033 = !DILocation(line: 6195, column: 7, scope: !19032)
!19034 = !DILocation(line: 6195, column: 14, scope: !19035)
!19035 = distinct !DILexicalBlock(scope: !19032, file: !3, line: 6195, column: 2)
!19036 = !DILocation(line: 6195, column: 16, scope: !19035)
!19037 = !DILocation(line: 6195, column: 2, scope: !19032)
!19038 = !DILocalVariable(name: "fp", scope: !19039, file: !3, line: 6196, type: !18930)
!19039 = distinct !DILexicalBlock(scope: !19035, file: !3, line: 6195, column: 46)
!19040 = !DILocation(line: 6196, column: 33, scope: !19039)
!19041 = !DILocation(line: 6196, column: 49, scope: !19039)
!19042 = !DILocation(line: 6196, column: 39, scope: !19039)
!19043 = !DILocation(line: 6198, column: 19, scope: !19044)
!19044 = distinct !DILexicalBlock(scope: !19039, file: !3, line: 6198, column: 7)
!19045 = !DILocation(line: 6198, column: 24, scope: !19044)
!19046 = !DILocation(line: 6198, column: 28, scope: !19044)
!19047 = !DILocation(line: 6198, column: 41, scope: !19044)
!19048 = !DILocation(line: 6198, column: 34, scope: !19044)
!19049 = !DILocation(line: 6198, column: 7, scope: !19044)
!19050 = !DILocation(line: 6198, column: 7, scope: !19039)
!19051 = !DILocation(line: 6199, column: 4, scope: !19044)
!19052 = !DILocation(line: 6201, column: 13, scope: !19039)
!19053 = !DILocation(line: 6202, column: 14, scope: !19039)
!19054 = !DILocation(line: 6202, column: 12, scope: !19039)
!19055 = !DILocation(line: 6204, column: 18, scope: !19056)
!19056 = distinct !DILexicalBlock(scope: !19039, file: !3, line: 6204, column: 7)
!19057 = !DILocation(line: 6204, column: 23, scope: !19056)
!19058 = !DILocation(line: 6204, column: 27, scope: !19056)
!19059 = !DILocation(line: 6204, column: 7, scope: !19056)
!19060 = !DILocation(line: 6204, column: 33, scope: !19056)
!19061 = !DILocation(line: 6204, column: 7, scope: !19039)
!19062 = !DILocation(line: 6205, column: 15, scope: !19063)
!19063 = distinct !DILexicalBlock(scope: !19056, file: !3, line: 6204, column: 39)
!19064 = !DILocation(line: 6206, column: 4, scope: !19063)
!19065 = !DILocation(line: 6208, column: 2, scope: !19039)
!19066 = !DILocation(line: 6195, column: 42, scope: !19035)
!19067 = !DILocation(line: 6195, column: 2, scope: !19035)
!19068 = distinct !{!19068, !19037, !19069}
!19069 = !DILocation(line: 6208, column: 2, scope: !19032)
!19070 = !DILocation(line: 6210, column: 7, scope: !19071)
!19071 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 6210, column: 6)
!19072 = !DILocation(line: 6210, column: 6, scope: !7274)
!19073 = !DILocation(line: 6211, column: 4, scope: !19074)
!19074 = distinct !DILexicalBlock(scope: !19071, file: !3, line: 6210, column: 19)
!19075 = !DILocation(line: 6211, column: 11, scope: !19074)
!19076 = !DILocation(line: 6212, column: 3, scope: !19074)
!19077 = !DILocation(line: 6214, column: 6, scope: !19078)
!19078 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 6214, column: 6)
!19079 = !DILocation(line: 6214, column: 17, scope: !19078)
!19080 = !DILocation(line: 6214, column: 6, scope: !7274)
!19081 = !DILocation(line: 6215, column: 4, scope: !19082)
!19082 = distinct !DILexicalBlock(scope: !19078, file: !3, line: 6214, column: 22)
!19083 = !DILocation(line: 6215, column: 11, scope: !19082)
!19084 = !DILocation(line: 6216, column: 3, scope: !19082)
!19085 = !DILocation(line: 6219, column: 2, scope: !7274)
!19086 = !DILocation(line: 6219, column: 13, scope: !7274)
!19087 = !DILocation(line: 6219, column: 22, scope: !7274)
!19088 = !DILocation(line: 6219, column: 21, scope: !7274)
!19089 = !DILocation(line: 6221, column: 2, scope: !7274)
!19090 = !DILocation(line: 6222, column: 1, scope: !7274)
!19091 = distinct !DISubprogram(name: "kmalloc_array", scope: !969, file: !969, line: 584, type: !18895, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!19092 = !DILocation(line: 445, column: 72, scope: !14963, inlinedAt: !19093)
!19093 = distinct !DILocation(line: 552, column: 10, scope: !14968, inlinedAt: !19094)
!19094 = distinct !DILocation(line: 591, column: 10, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19091, file: !969, line: 590, column: 6)
!19096 = !DILocation(line: 446, column: 9, scope: !14963, inlinedAt: !19093)
!19097 = !DILocation(line: 446, column: 23, scope: !14963, inlinedAt: !19093)
!19098 = !DILocation(line: 448, column: 8, scope: !14963, inlinedAt: !19093)
!19099 = !DILocation(line: 318, column: 67, scope: !14979, inlinedAt: !19100)
!19100 = distinct !DILocation(line: 553, column: 20, scope: !14968, inlinedAt: !19094)
!19101 = !DILocation(line: 346, column: 58, scope: !14985, inlinedAt: !19102)
!19102 = distinct !DILocation(line: 547, column: 11, scope: !14968, inlinedAt: !19094)
!19103 = !DILocation(line: 472, column: 28, scope: !14991, inlinedAt: !19104)
!19104 = distinct !DILocation(line: 481, column: 9, scope: !14996, inlinedAt: !19105)
!19105 = distinct !DILocation(line: 545, column: 11, scope: !14998, inlinedAt: !19094)
!19106 = !DILocation(line: 472, column: 40, scope: !14991, inlinedAt: !19104)
!19107 = !DILocation(line: 472, column: 60, scope: !14991, inlinedAt: !19104)
!19108 = !DILocation(line: 478, column: 51, scope: !14996, inlinedAt: !19105)
!19109 = !DILocation(line: 478, column: 63, scope: !14996, inlinedAt: !19105)
!19110 = !DILocation(line: 480, column: 15, scope: !14996, inlinedAt: !19105)
!19111 = !DILocation(line: 538, column: 45, scope: !14970, inlinedAt: !19094)
!19112 = !DILocation(line: 538, column: 57, scope: !14970, inlinedAt: !19094)
!19113 = !DILocation(line: 542, column: 16, scope: !14968, inlinedAt: !19094)
!19114 = !DILocalVariable(name: "n", arg: 1, scope: !19091, file: !969, line: 584, type: !1645)
!19115 = !DILocation(line: 584, column: 42, scope: !19091)
!19116 = !DILocalVariable(name: "size", arg: 2, scope: !19091, file: !969, line: 584, type: !1645)
!19117 = !DILocation(line: 584, column: 52, scope: !19091)
!19118 = !DILocalVariable(name: "flags", arg: 3, scope: !19091, file: !969, line: 584, type: !992)
!19119 = !DILocation(line: 584, column: 64, scope: !19091)
!19120 = !DILocalVariable(name: "bytes", scope: !19091, file: !969, line: 586, type: !1645)
!19121 = !DILocation(line: 586, column: 9, scope: !19091)
!19122 = !DILocalVariable(name: "__a", scope: !19123, file: !969, line: 588, type: !1645)
!19123 = distinct !DILexicalBlock(scope: !19124, file: !969, line: 588, column: 6)
!19124 = distinct !DILexicalBlock(scope: !19091, file: !969, line: 588, column: 6)
!19125 = !DILocation(line: 588, column: 6, scope: !19123)
!19126 = !DILocalVariable(name: "__b", scope: !19123, file: !969, line: 588, type: !1645)
!19127 = !DILocalVariable(name: "__d", scope: !19123, file: !969, line: 588, type: !2292)
!19128 = !DILocation(line: 588, column: 6, scope: !19124)
!19129 = !DILocation(line: 588, column: 6, scope: !19091)
!19130 = !DILocation(line: 589, column: 3, scope: !19124)
!19131 = !DILocation(line: 590, column: 27, scope: !19095)
!19132 = !DILocation(line: 590, column: 6, scope: !19095)
!19133 = !DILocation(line: 590, column: 30, scope: !19095)
!19134 = !DILocation(line: 590, column: 54, scope: !19095)
!19135 = !DILocation(line: 590, column: 33, scope: !19095)
!19136 = !DILocation(line: 590, column: 6, scope: !19091)
!19137 = !DILocation(line: 591, column: 18, scope: !19095)
!19138 = !DILocation(line: 591, column: 25, scope: !19095)
!19139 = !DILocation(line: 540, column: 27, scope: !14969, inlinedAt: !19094)
!19140 = !DILocation(line: 540, column: 6, scope: !14969, inlinedAt: !19094)
!19141 = !DILocation(line: 540, column: 6, scope: !14970, inlinedAt: !19094)
!19142 = !DILocation(line: 544, column: 7, scope: !14998, inlinedAt: !19094)
!19143 = !DILocation(line: 544, column: 12, scope: !14998, inlinedAt: !19094)
!19144 = !DILocation(line: 544, column: 7, scope: !14968, inlinedAt: !19094)
!19145 = !DILocation(line: 545, column: 25, scope: !14998, inlinedAt: !19094)
!19146 = !DILocation(line: 545, column: 31, scope: !14998, inlinedAt: !19094)
!19147 = !DILocation(line: 480, column: 33, scope: !14996, inlinedAt: !19105)
!19148 = !DILocation(line: 480, column: 23, scope: !14996, inlinedAt: !19105)
!19149 = !DILocation(line: 481, column: 29, scope: !14996, inlinedAt: !19105)
!19150 = !DILocation(line: 481, column: 35, scope: !14996, inlinedAt: !19105)
!19151 = !DILocation(line: 481, column: 42, scope: !14996, inlinedAt: !19105)
!19152 = !DILocation(line: 474, column: 23, scope: !14991, inlinedAt: !19104)
!19153 = !DILocation(line: 474, column: 29, scope: !14991, inlinedAt: !19104)
!19154 = !DILocation(line: 474, column: 36, scope: !14991, inlinedAt: !19104)
!19155 = !DILocation(line: 474, column: 9, scope: !14991, inlinedAt: !19104)
!19156 = !DILocation(line: 545, column: 4, scope: !14998, inlinedAt: !19094)
!19157 = !DILocation(line: 547, column: 25, scope: !14968, inlinedAt: !19094)
!19158 = !DILocation(line: 348, column: 7, scope: !15042, inlinedAt: !19102)
!19159 = !DILocation(line: 348, column: 6, scope: !14985, inlinedAt: !19102)
!19160 = !DILocation(line: 349, column: 3, scope: !15042, inlinedAt: !19102)
!19161 = !DILocation(line: 351, column: 6, scope: !15046, inlinedAt: !19102)
!19162 = !DILocation(line: 351, column: 11, scope: !15046, inlinedAt: !19102)
!19163 = !DILocation(line: 351, column: 6, scope: !14985, inlinedAt: !19102)
!19164 = !DILocation(line: 352, column: 3, scope: !15046, inlinedAt: !19102)
!19165 = !DILocation(line: 354, column: 32, scope: !15051, inlinedAt: !19102)
!19166 = !DILocation(line: 354, column: 37, scope: !15051, inlinedAt: !19102)
!19167 = !DILocation(line: 354, column: 42, scope: !15051, inlinedAt: !19102)
!19168 = !DILocation(line: 354, column: 45, scope: !15051, inlinedAt: !19102)
!19169 = !DILocation(line: 354, column: 50, scope: !15051, inlinedAt: !19102)
!19170 = !DILocation(line: 354, column: 6, scope: !14985, inlinedAt: !19102)
!19171 = !DILocation(line: 355, column: 3, scope: !15051, inlinedAt: !19102)
!19172 = !DILocation(line: 356, column: 32, scope: !15059, inlinedAt: !19102)
!19173 = !DILocation(line: 356, column: 37, scope: !15059, inlinedAt: !19102)
!19174 = !DILocation(line: 356, column: 43, scope: !15059, inlinedAt: !19102)
!19175 = !DILocation(line: 356, column: 46, scope: !15059, inlinedAt: !19102)
!19176 = !DILocation(line: 356, column: 51, scope: !15059, inlinedAt: !19102)
!19177 = !DILocation(line: 356, column: 6, scope: !14985, inlinedAt: !19102)
!19178 = !DILocation(line: 357, column: 3, scope: !15059, inlinedAt: !19102)
!19179 = !DILocation(line: 358, column: 6, scope: !15067, inlinedAt: !19102)
!19180 = !DILocation(line: 358, column: 11, scope: !15067, inlinedAt: !19102)
!19181 = !DILocation(line: 358, column: 6, scope: !14985, inlinedAt: !19102)
!19182 = !DILocation(line: 358, column: 26, scope: !15067, inlinedAt: !19102)
!19183 = !DILocation(line: 359, column: 6, scope: !15072, inlinedAt: !19102)
!19184 = !DILocation(line: 359, column: 11, scope: !15072, inlinedAt: !19102)
!19185 = !DILocation(line: 359, column: 6, scope: !14985, inlinedAt: !19102)
!19186 = !DILocation(line: 359, column: 26, scope: !15072, inlinedAt: !19102)
!19187 = !DILocation(line: 360, column: 6, scope: !15077, inlinedAt: !19102)
!19188 = !DILocation(line: 360, column: 11, scope: !15077, inlinedAt: !19102)
!19189 = !DILocation(line: 360, column: 6, scope: !14985, inlinedAt: !19102)
!19190 = !DILocation(line: 360, column: 26, scope: !15077, inlinedAt: !19102)
!19191 = !DILocation(line: 361, column: 6, scope: !15082, inlinedAt: !19102)
!19192 = !DILocation(line: 361, column: 11, scope: !15082, inlinedAt: !19102)
!19193 = !DILocation(line: 361, column: 6, scope: !14985, inlinedAt: !19102)
!19194 = !DILocation(line: 361, column: 26, scope: !15082, inlinedAt: !19102)
!19195 = !DILocation(line: 362, column: 6, scope: !15087, inlinedAt: !19102)
!19196 = !DILocation(line: 362, column: 11, scope: !15087, inlinedAt: !19102)
!19197 = !DILocation(line: 362, column: 6, scope: !14985, inlinedAt: !19102)
!19198 = !DILocation(line: 362, column: 26, scope: !15087, inlinedAt: !19102)
!19199 = !DILocation(line: 363, column: 6, scope: !15092, inlinedAt: !19102)
!19200 = !DILocation(line: 363, column: 11, scope: !15092, inlinedAt: !19102)
!19201 = !DILocation(line: 363, column: 6, scope: !14985, inlinedAt: !19102)
!19202 = !DILocation(line: 363, column: 26, scope: !15092, inlinedAt: !19102)
!19203 = !DILocation(line: 364, column: 6, scope: !15097, inlinedAt: !19102)
!19204 = !DILocation(line: 364, column: 11, scope: !15097, inlinedAt: !19102)
!19205 = !DILocation(line: 364, column: 6, scope: !14985, inlinedAt: !19102)
!19206 = !DILocation(line: 364, column: 26, scope: !15097, inlinedAt: !19102)
!19207 = !DILocation(line: 365, column: 6, scope: !15102, inlinedAt: !19102)
!19208 = !DILocation(line: 365, column: 11, scope: !15102, inlinedAt: !19102)
!19209 = !DILocation(line: 365, column: 6, scope: !14985, inlinedAt: !19102)
!19210 = !DILocation(line: 365, column: 26, scope: !15102, inlinedAt: !19102)
!19211 = !DILocation(line: 366, column: 6, scope: !15107, inlinedAt: !19102)
!19212 = !DILocation(line: 366, column: 11, scope: !15107, inlinedAt: !19102)
!19213 = !DILocation(line: 366, column: 6, scope: !14985, inlinedAt: !19102)
!19214 = !DILocation(line: 366, column: 26, scope: !15107, inlinedAt: !19102)
!19215 = !DILocation(line: 367, column: 6, scope: !15112, inlinedAt: !19102)
!19216 = !DILocation(line: 367, column: 11, scope: !15112, inlinedAt: !19102)
!19217 = !DILocation(line: 367, column: 6, scope: !14985, inlinedAt: !19102)
!19218 = !DILocation(line: 367, column: 26, scope: !15112, inlinedAt: !19102)
!19219 = !DILocation(line: 368, column: 6, scope: !15117, inlinedAt: !19102)
!19220 = !DILocation(line: 368, column: 11, scope: !15117, inlinedAt: !19102)
!19221 = !DILocation(line: 368, column: 6, scope: !14985, inlinedAt: !19102)
!19222 = !DILocation(line: 368, column: 26, scope: !15117, inlinedAt: !19102)
!19223 = !DILocation(line: 369, column: 6, scope: !15122, inlinedAt: !19102)
!19224 = !DILocation(line: 369, column: 11, scope: !15122, inlinedAt: !19102)
!19225 = !DILocation(line: 369, column: 6, scope: !14985, inlinedAt: !19102)
!19226 = !DILocation(line: 369, column: 26, scope: !15122, inlinedAt: !19102)
!19227 = !DILocation(line: 370, column: 6, scope: !15127, inlinedAt: !19102)
!19228 = !DILocation(line: 370, column: 11, scope: !15127, inlinedAt: !19102)
!19229 = !DILocation(line: 370, column: 6, scope: !14985, inlinedAt: !19102)
!19230 = !DILocation(line: 370, column: 26, scope: !15127, inlinedAt: !19102)
!19231 = !DILocation(line: 371, column: 6, scope: !15132, inlinedAt: !19102)
!19232 = !DILocation(line: 371, column: 11, scope: !15132, inlinedAt: !19102)
!19233 = !DILocation(line: 371, column: 6, scope: !14985, inlinedAt: !19102)
!19234 = !DILocation(line: 371, column: 26, scope: !15132, inlinedAt: !19102)
!19235 = !DILocation(line: 372, column: 6, scope: !15137, inlinedAt: !19102)
!19236 = !DILocation(line: 372, column: 11, scope: !15137, inlinedAt: !19102)
!19237 = !DILocation(line: 372, column: 6, scope: !14985, inlinedAt: !19102)
!19238 = !DILocation(line: 372, column: 26, scope: !15137, inlinedAt: !19102)
!19239 = !DILocation(line: 373, column: 6, scope: !15142, inlinedAt: !19102)
!19240 = !DILocation(line: 373, column: 11, scope: !15142, inlinedAt: !19102)
!19241 = !DILocation(line: 373, column: 6, scope: !14985, inlinedAt: !19102)
!19242 = !DILocation(line: 373, column: 26, scope: !15142, inlinedAt: !19102)
!19243 = !DILocation(line: 374, column: 6, scope: !15147, inlinedAt: !19102)
!19244 = !DILocation(line: 374, column: 11, scope: !15147, inlinedAt: !19102)
!19245 = !DILocation(line: 374, column: 6, scope: !14985, inlinedAt: !19102)
!19246 = !DILocation(line: 374, column: 26, scope: !15147, inlinedAt: !19102)
!19247 = !DILocation(line: 375, column: 6, scope: !15152, inlinedAt: !19102)
!19248 = !DILocation(line: 375, column: 11, scope: !15152, inlinedAt: !19102)
!19249 = !DILocation(line: 375, column: 6, scope: !14985, inlinedAt: !19102)
!19250 = !DILocation(line: 375, column: 27, scope: !15152, inlinedAt: !19102)
!19251 = !DILocation(line: 376, column: 6, scope: !15157, inlinedAt: !19102)
!19252 = !DILocation(line: 376, column: 11, scope: !15157, inlinedAt: !19102)
!19253 = !DILocation(line: 376, column: 6, scope: !14985, inlinedAt: !19102)
!19254 = !DILocation(line: 376, column: 32, scope: !15157, inlinedAt: !19102)
!19255 = !DILocation(line: 377, column: 6, scope: !15162, inlinedAt: !19102)
!19256 = !DILocation(line: 377, column: 11, scope: !15162, inlinedAt: !19102)
!19257 = !DILocation(line: 377, column: 6, scope: !14985, inlinedAt: !19102)
!19258 = !DILocation(line: 377, column: 32, scope: !15162, inlinedAt: !19102)
!19259 = !DILocation(line: 378, column: 6, scope: !15167, inlinedAt: !19102)
!19260 = !DILocation(line: 378, column: 11, scope: !15167, inlinedAt: !19102)
!19261 = !DILocation(line: 378, column: 6, scope: !14985, inlinedAt: !19102)
!19262 = !DILocation(line: 378, column: 32, scope: !15167, inlinedAt: !19102)
!19263 = !DILocation(line: 379, column: 6, scope: !15172, inlinedAt: !19102)
!19264 = !DILocation(line: 379, column: 11, scope: !15172, inlinedAt: !19102)
!19265 = !DILocation(line: 379, column: 6, scope: !14985, inlinedAt: !19102)
!19266 = !DILocation(line: 379, column: 33, scope: !15172, inlinedAt: !19102)
!19267 = !DILocation(line: 380, column: 6, scope: !15177, inlinedAt: !19102)
!19268 = !DILocation(line: 380, column: 11, scope: !15177, inlinedAt: !19102)
!19269 = !DILocation(line: 380, column: 6, scope: !14985, inlinedAt: !19102)
!19270 = !DILocation(line: 380, column: 33, scope: !15177, inlinedAt: !19102)
!19271 = !DILocation(line: 381, column: 6, scope: !15182, inlinedAt: !19102)
!19272 = !DILocation(line: 381, column: 11, scope: !15182, inlinedAt: !19102)
!19273 = !DILocation(line: 381, column: 6, scope: !14985, inlinedAt: !19102)
!19274 = !DILocation(line: 381, column: 33, scope: !15182, inlinedAt: !19102)
!19275 = !DILocation(line: 382, column: 2, scope: !15187, inlinedAt: !19102)
!19276 = !DILocation(line: 382, column: 2, scope: !15191, inlinedAt: !19102)
!19277 = !DILocation(line: 382, column: 2, scope: !15192, inlinedAt: !19102)
!19278 = !DILocation(line: 386, column: 1, scope: !14985, inlinedAt: !19102)
!19279 = !DILocation(line: 547, column: 9, scope: !14968, inlinedAt: !19094)
!19280 = !DILocation(line: 549, column: 8, scope: !15198, inlinedAt: !19094)
!19281 = !DILocation(line: 549, column: 7, scope: !14968, inlinedAt: !19094)
!19282 = !DILocation(line: 550, column: 4, scope: !15198, inlinedAt: !19094)
!19283 = !DILocation(line: 553, column: 33, scope: !14968, inlinedAt: !19094)
!19284 = !DILocation(line: 325, column: 6, scope: !15203, inlinedAt: !19100)
!19285 = !DILocation(line: 325, column: 6, scope: !14979, inlinedAt: !19100)
!19286 = !DILocation(line: 326, column: 3, scope: !15203, inlinedAt: !19100)
!19287 = !DILocation(line: 332, column: 9, scope: !14979, inlinedAt: !19100)
!19288 = !DILocation(line: 332, column: 15, scope: !14979, inlinedAt: !19100)
!19289 = !DILocation(line: 332, column: 2, scope: !14979, inlinedAt: !19100)
!19290 = !DILocation(line: 336, column: 1, scope: !14979, inlinedAt: !19100)
!19291 = !DILocation(line: 553, column: 5, scope: !14968, inlinedAt: !19094)
!19292 = !DILocation(line: 553, column: 41, scope: !14968, inlinedAt: !19094)
!19293 = !DILocation(line: 554, column: 5, scope: !14968, inlinedAt: !19094)
!19294 = !DILocation(line: 554, column: 12, scope: !14968, inlinedAt: !19094)
!19295 = !DILocation(line: 448, column: 31, scope: !14963, inlinedAt: !19093)
!19296 = !DILocation(line: 448, column: 34, scope: !14963, inlinedAt: !19093)
!19297 = !DILocation(line: 448, column: 14, scope: !14963, inlinedAt: !19093)
!19298 = !DILocation(line: 450, column: 22, scope: !14963, inlinedAt: !19093)
!19299 = !DILocation(line: 450, column: 25, scope: !14963, inlinedAt: !19093)
!19300 = !DILocation(line: 450, column: 30, scope: !14963, inlinedAt: !19093)
!19301 = !DILocation(line: 450, column: 36, scope: !14963, inlinedAt: !19093)
!19302 = !DILocation(line: 450, column: 8, scope: !14963, inlinedAt: !19093)
!19303 = !DILocation(line: 450, column: 6, scope: !14963, inlinedAt: !19093)
!19304 = !DILocation(line: 451, column: 9, scope: !14963, inlinedAt: !19093)
!19305 = !DILocation(line: 552, column: 3, scope: !14968, inlinedAt: !19094)
!19306 = !DILocation(line: 557, column: 19, scope: !14970, inlinedAt: !19094)
!19307 = !DILocation(line: 557, column: 25, scope: !14970, inlinedAt: !19094)
!19308 = !DILocation(line: 557, column: 9, scope: !14970, inlinedAt: !19094)
!19309 = !DILocation(line: 557, column: 2, scope: !14970, inlinedAt: !19094)
!19310 = !DILocation(line: 558, column: 1, scope: !14970, inlinedAt: !19094)
!19311 = !DILocation(line: 591, column: 3, scope: !19095)
!19312 = !DILocation(line: 592, column: 19, scope: !19091)
!19313 = !DILocation(line: 592, column: 26, scope: !19091)
!19314 = !DILocation(line: 592, column: 9, scope: !19091)
!19315 = !DILocation(line: 592, column: 2, scope: !19091)
!19316 = !DILocation(line: 593, column: 1, scope: !19091)
!19317 = distinct !DISubprogram(name: "__must_check_overflow", scope: !19318, file: !19318, line: 52, type: !19319, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!19318 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!19319 = !DISubroutineType(types: !19320)
!19320 = !{!1495, !1495}
!19321 = !DILocalVariable(name: "overflow", arg: 1, scope: !19317, file: !19318, line: 52, type: !1495)
!19322 = !DILocation(line: 52, column: 60, scope: !19317)
!19323 = !DILocation(line: 54, column: 9, scope: !19317)
!19324 = !DILocation(line: 54, column: 2, scope: !19317)
!19325 = distinct !DISubprogram(name: "strstrip", scope: !19326, file: !19326, line: 76, type: !19327, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1035)
!19326 = !DIFile(filename: "./include/linux/string.h", directory: "/home/lizy2001/genbc/linux")
!19327 = !DISubroutineType(types: !19328)
!19328 = !{!1476, !1476}
!19329 = !DILocalVariable(name: "str", arg: 1, scope: !19325, file: !19326, line: 76, type: !1476)
!19330 = !DILocation(line: 76, column: 49, scope: !19325)
!19331 = !DILocation(line: 78, column: 15, scope: !19325)
!19332 = !DILocation(line: 78, column: 9, scope: !19325)
!19333 = !DILocation(line: 78, column: 2, scope: !19325)
