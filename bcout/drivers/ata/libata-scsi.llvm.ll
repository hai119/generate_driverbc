; ModuleID = '../bcout/drivers/ata/libata-scsi.llvm.bc'
source_filename = "drivers/ata/libata-scsi.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.attribute = type { i8*, i16 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.72, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.72 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.70, %struct.list_head, %struct.list_head, %union.anon.71 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.68 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.60, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.60 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.61, i32 }
%union.anon.61 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.38, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.38 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type { i8, i8, i16, i64 }
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.74, %union.anon.75, %union.anon.76, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.79, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.73, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.73 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.74 = type { %struct.hlist_node }
%union.anon.75 = type { %struct.rb_node }
%union.anon.76 = type { %struct.anon.78 }
%struct.anon.78 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.79 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.80, void (i8*)*, i8* }
%union.anon.80 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.81, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.81 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.39, %union.anon.40, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.39 = type { %struct.list_head }
%union.anon.40 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.53, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.45 }
%struct.anon.45 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.52, i32, [12 x i8] }
%union.anon.52 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.53 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.54, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.57 }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { i64, i64 }
%union.anon.57 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.70 = type { %struct.list_head }
%union.anon.71 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.62, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.63, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.64, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.67, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.62 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.63 = type { %struct.callback_head }
%union.anon.64 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.67 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.65 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.65 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.device_attribute = type { %struct.attribute, {}*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_transport_template = type { %struct.transport_container, %struct.transport_container, %struct.transport_container, i32 (%struct.Scsi_Host*, i32, i32, i64)*, i32, i32, i32, i32, i32, i8, void (%struct.Scsi_Host*)* }
%struct.transport_container = type { %struct.attribute_container, %struct.attribute_group* }
%struct.attribute_container = type { %struct.list_head, %struct.klist, %struct.class*, %struct.attribute_group*, %struct.device_attribute**, i32 (%struct.attribute_container*, %struct.device*)*, i64 }
%struct.klist = type { %struct.spinlock, %struct.list_head, void (%struct.klist_node*)*, void (%struct.klist_node*)* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.scsi_host_cmd_pool = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.ata_port = type { %struct.Scsi_Host*, %struct.ata_port_operations*, %struct.spinlock*, i64, i32, i32, i32, i32, %struct.ata_ioports, i8, i8, %struct.ata_link*, %struct.delayed_work, %struct.ata_bmdma_prd*, i64, i32, i32, i32, i32, [33 x %struct.ata_queued_cmd], i64, i64, i32, i32, [8 x i8], %struct.ata_link, %struct.ata_link*, i32, %struct.ata_link*, %struct.ata_link*, %struct.ata_port_stats, %struct.ata_host*, %struct.device*, %struct.device, %struct.mutex, %struct.delayed_work, %struct.work_struct, i32, i32, %struct.list_head, %struct.wait_queue_head, i32, %struct.completion, %struct.pm_message, i32, %struct.timer_list, i64, i64, i32, i8*, %struct.ata_acpi_gtm, [4 x i8], [512 x i8] }
%struct.ata_port_operations = type { i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i1 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_port*)*, i64 (%struct.ata_device*, i64)*, void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)*, i32 (%struct.ata_link*, %struct.ata_device**)*, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)*, void (%struct.ata_device*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32*)*, i32 (%struct.ata_link*, i32, i32)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_port*, i32)*, i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_host*)*, void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i8)*, i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, void (%struct.ata_port*)*, i1 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, i8 (%struct.ata_port*)*, i64 (%struct.ata_port*, i8*)*, i64 (%struct.ata_port*, i8*, i64)*, i64 (%struct.ata_device*, i8*)*, i64 (%struct.ata_device*, i32)*, i64 (%struct.ata_port*, i32, i64)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, %struct.ata_port_operations* }
%struct.ata_queued_cmd = type { %struct.ata_port*, %struct.ata_device*, %struct.scsi_cmnd*, void (%struct.scsi_cmnd*)*, %struct.ata_taskfile, [16 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.scatterlist, %struct.scatterlist*, %struct.scatterlist*, i32, i32, %struct.ata_taskfile, void (%struct.ata_queued_cmd*)*, i8*, i8* }
%struct.ata_device = type { %struct.ata_link*, i32, i32, i64, %struct.scsi_device*, i8*, %union.acpi_object*, i32, %struct.device, i64, i64, i32, i64, i8, i8, i8, i32, i32, i32, i32, i64, i64, i64, i16, i16, i16, [58 x i8], %union.anon.90, [8 x i8], [20 x i8], [64 x i8], i32, i32, i32, i32, i32, %struct.ata_ering, [8 x i8] }
%union.acpi_object = type { %struct.anon.88 }
%struct.anon.88 = type { i32, i32, i64, i32 }
%union.anon.90 = type { [128 x i32] }
%struct.ata_ering = type { i32, [32 x %struct.ata_ering_entry] }
%struct.ata_ering_entry = type { i32, i32, i64 }
%struct.ata_taskfile = type { i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%struct.ata_ioports = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.ata_bmdma_prd = type { i32, i32 }
%struct.ata_link = type { %struct.ata_port*, i32, %struct.device, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ata_eh_info, %struct.ata_eh_context, [16 x i8], [2 x %struct.ata_device], i64, [56 x i8] }
%struct.ata_eh_info = type { %struct.ata_device*, i32, i32, i32, [2 x i32], i32, i32, [80 x i8], i32 }
%struct.ata_eh_context = type { %struct.ata_eh_info, [2 x i32], [2 x [6 x i32]], [2 x i32], i32, i32, i32, [2 x i8], i64 }
%struct.ata_port_stats = type { i64, i64, i64 }
%struct.ata_host = type { %struct.spinlock, %struct.device*, i8**, i32, i32, i8*, %struct.ata_port_operations*, i64, %struct.kref, %struct.mutex, %struct.task_struct*, %struct.ata_port*, [0 x %struct.ata_port*] }
%struct.ata_acpi_gtm = type { [2 x %struct.ata_acpi_drive], i32 }
%struct.ata_acpi_drive = type { i32, i32 }
%struct.scsi_sense_hdr = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.ata_scsi_args = type { %struct.ata_device*, i16*, %struct.scsi_cmnd* }
%struct.sg_mapping_iter = type { %struct.page*, i8*, i64, i64, %struct.sg_page_iter, i32, i32, i32 }
%struct.sg_page_iter = type { %struct.scatterlist*, i32, i32, i32 }

@.str = private unnamed_addr constant [13 x i8] c"unload_heads\00", align 1
@dev_attr_unload_heads = dso_local global { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* } { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @ata_scsi_park_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @ata_scsi_park_store }, align 8, !dbg !0
@ata_common_sdev_attrs = dso_local global [2 x %struct.device_attribute*] [%struct.device_attribute* bitcast ({ %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }* @dev_attr_unload_heads to %struct.device_attribute*), %struct.device_attribute* null], align 16, !dbg !6951
@.str.1 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"drain buffer allocation failed\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"sector_size=%u > PAGE_SIZE, PIO may malfunction\0A\00", align 1
@atapi_passthru16 = external dso_local global i32, align 4
@scsi_command_size_tbl = external dso_local constant [8 x i8], align 1
@ata_scsi_transport_template = external dso_local global %struct.scsi_transport_template*, align 8
@.str.5 = private unnamed_addr constant [87 x i8] c"WARNING: synchronous SCSI scan failed without making any progress, switching to async\0A\00", align 1
@system_long_wq = external dso_local global %struct.workqueue_struct*, align 8
@jiffies = external dso_local global i64, align 8
@.str.6 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.7 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.9 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"drivers/ata/libata-scsi.c\00", align 1
@ata_scsi_rbuf_lock = internal global %struct.spinlock undef, align 1, !dbg !6954
@ata_scsi_rbuf = internal global [576 x i8] zeroinitializer, align 16, !dbg !6956
@.str.11 = private unnamed_addr constant [32 x i8] c"invalid multi_count %u ignored\0A\00", align 1
@libata_allow_tpm = external dso_local global i32, align 4
@def_cache_mpage = internal constant <{ i8, i8, [18 x i8] }> <{ i8 8, i8 18, [18 x i8] zeroinitializer }>, align 16, !dbg !6961
@def_control_mpage = internal constant [12 x i8] c"\0A\0A\02\00\00\00\00\00\FF\FF\00\1E", align 1, !dbg !6965
@.str.13 = private unnamed_addr constant [23 x i8] c"invalid cdb length %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"non-matching transfer count (%d/%d)\0A\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"invalid service action %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"invalid transfer count %d\0A\00", align 1
@ata_to_sense_error.sense_table = internal constant [14 x [4 x i8]] [[4 x i8] c"\D1\0B\00\00", [4 x i8] c"\D0\0B\00\00", [4 x i8] c"a\04\00\00", [4 x i8] c"\84\0BG\00", [4 x i8] c"7\02\04\00", [4 x i8] c"\09\02\04\00", [4 x i8] c"\01\03\13\00", [4 x i8] c"\02\04\00\00", [4 x i8] c"\08\02\04\00", [4 x i8] c"\10\05!\00", [4 x i8] c" \06(\00", [4 x i8] c"@\03\11\04", [4 x i8] c"\80\03\11\04", [4 x i8] c"\FF\FF\FF\FF"], align 16, !dbg !6968
@ata_to_sense_error.stat_table = internal constant [6 x [4 x i8]] [[4 x i8] c"\80\0BG\00", [4 x i8] c"@\05!\04", [4 x i8] c" \04D\00", [4 x i8] c"\08\0BG\00", [4 x i8] c"\04\01\11\00", [4 x i8] c"\FF\FF\FF\FF"], align 16, !dbg !6976
@.str.17 = private unnamed_addr constant [81 x i8] c"\013ata%u: translated ATA stat/err 0x%02x/%02x to SCSI SK/ASC/ASCQ 0x%x/%02x/%02x\0A\00", align 1
@.str.18 = private unnamed_addr constant [50 x i8] c"could not decode error status 0x%x err_mask 0x%x\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"\014ata%u: status=0x%02x { \00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"\01cBusy }\0A\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"\01cDriveReady \00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"\01cDeviceFault \00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"\01cSeekComplete \00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"\01cDataRequest \00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"\01cCorrectedError \00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"\01cSense \00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"\01cError \00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"\01c}\0A\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"\014ata%u: error=0x%02x { \00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"\01cDriveStatusError \00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"\01cBadCRC \00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"\01cSector \00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"\01cUncorrectableError \00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"\01cSectorIdNotFound \00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"\01cTrackZeroNotFound \00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"\01cAddrMarkNotFound \00", align 1
@system_state = external dso_local global i32, align 4
@.str.37 = private unnamed_addr constant [27 x i8] c"WARNING: zero len r/w req\0A\00", align 1
@ata_scsiop_inq_std.versions = internal constant [6 x i8] c"\00`\03 \03\00", align 1, !dbg !6980
@ata_scsiop_inq_std.versions_zbc = internal constant [8 x i8] c"\00\A0\06\00\05\C0`$", align 1, !dbg !6992
@__const.ata_scsiop_inq_std.hdr = private unnamed_addr constant [8 x i8] c"\00\00\05\02[\00\00\02", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ATA     \00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"n/a \00", align 1
@ata_scsiop_inq_00.pages = internal constant [8 x i8] c"\00\80\83\89\B0\B1\B2\B6", align 1, !dbg !6995
@ata_scsiop_inq_80.hdr = internal constant [4 x i8] c"\00\80\00\14", align 1, !dbg !6998
@.str.41 = private unnamed_addr constant [9 x i8] c"linux   \00", align 1
@.str.42 = private unnamed_addr constant [17 x i8] c"libata          \00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"3.00\00", align 1
@ata_scsiop_mode_sense.sat_blk_desc = internal constant [8 x i8] c"\00\00\00\00\00\00\02\00", align 1, !dbg !7002
@def_rw_recovery_mpage = internal constant <{ i8, i8, i8, [9 x i8] }> <{ i8 1, i8 10, i8 -128, [9 x i8] zeroinitializer }>, align 1, !dbg !7005
@libata_fua = external dso_local global i32, align 4
@.str.45 = private unnamed_addr constant [7 x i8] c"Maxtor\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"BANC1G10\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.48 = private unnamed_addr constant [30 x i8] c"Enabling discard_zeroes_data\0A\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"invalid command format %d\0A\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"reg\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"detaching (SCSI %s)\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_scsi_park_show(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7013 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !7014, metadata !DIExpression()), !dbg !7019
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7021, metadata !DIExpression()), !dbg !7023
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %now = alloca i64, align 8
  %msecs = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !7025, metadata !DIExpression()), !dbg !7026
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7027, metadata !DIExpression()), !dbg !7028
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !7031, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7033, metadata !DIExpression()), !dbg !7035
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !7035
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7035
  store i8* %1, i8** %__mptr, align 8, !dbg !7035
  br label %do.body, !dbg !7035

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7036

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7035
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !7035
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !7035
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !7036
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !7035
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !7032
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7038, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !7040, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata i64* %now, metadata !7044, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.declare(metadata i32* %msecs, metadata !7046, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7048, metadata !DIExpression()), !dbg !7049
  store i32 0, i32* %rc, align 4, !dbg !7049
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !7050
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 0, !dbg !7051
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7051
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %6) #10, !dbg !7052
  store %struct.ata_port* %call, %struct.ata_port** %ap, align 8, !dbg !7053
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7054
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 2, !dbg !7055
  %8 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !7055
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !7056
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7059, !srcloc !7061
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7062
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !7062
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !7062
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7064
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !7065
  %call1 = call %struct.ata_device* @ata_scsi_find_dev(%struct.ata_port* %11, %struct.scsi_device* %12) #10, !dbg !7066
  store %struct.ata_device* %call1, %struct.ata_device** %dev, align 8, !dbg !7067
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7068
  %tobool = icmp ne %struct.ata_device* %13, null, !dbg !7068
  br i1 %tobool, label %if.end, label %if.then, !dbg !7070

if.then:                                          ; preds = %do.end
  store i32 -19, i32* %rc, align 4, !dbg !7071
  br label %unlock, !dbg !7073

if.end:                                           ; preds = %do.end
  %14 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7074
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 3, !dbg !7076
  %15 = load i64, i64* %flags, align 16, !dbg !7076
  %and = and i64 %15, 131072, !dbg !7077
  %tobool2 = icmp ne i64 %and, 0, !dbg !7077
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7078

if.then3:                                         ; preds = %if.end
  store i32 -95, i32* %rc, align 4, !dbg !7079
  br label %unlock, !dbg !7081

if.end4:                                          ; preds = %if.end
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7082
  %link5 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 0, !dbg !7083
  %17 = load %struct.ata_link*, %struct.ata_link** %link5, align 64, !dbg !7083
  store %struct.ata_link* %17, %struct.ata_link** %link, align 8, !dbg !7084
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !7085
  store i64 %18, i64* %now, align 8, !dbg !7086
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7087
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 4, !dbg !7089
  %20 = load i32, i32* %pflags, align 32, !dbg !7089
  %and6 = and i32 %20, 2, !dbg !7090
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7090
  br i1 %tobool7, label %land.lhs.true, label %if.else, !dbg !7091

land.lhs.true:                                    ; preds = %if.end4
  %21 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7092
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %21, i32 0, i32 12, !dbg !7093
  %unloaded_mask = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context, i32 0, i32 5, !dbg !7094
  %22 = load i32, i32* %unloaded_mask, align 4, !dbg !7094
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7095
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %23, i32 0, i32 1, !dbg !7096
  %24 = load i32, i32* %devno, align 8, !dbg !7096
  %shl = shl i32 1, %24, !dbg !7097
  %and8 = and i32 %22, %shl, !dbg !7098
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7098
  br i1 %tobool9, label %land.lhs.true10, label %if.else, !dbg !7099

land.lhs.true10:                                  ; preds = %land.lhs.true
  %25 = load i64, i64* %now, align 8, !dbg !7100
  %26 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7100
  %unpark_deadline = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 12, !dbg !7100
  %27 = load i64, i64* %unpark_deadline, align 8, !dbg !7100
  %sub = sub i64 %25, %27, !dbg !7100
  %cmp = icmp slt i64 %sub, 0, !dbg !7100
  br i1 %cmp, label %if.then11, label %if.else, !dbg !7101

if.then11:                                        ; preds = %land.lhs.true10
  %28 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7102
  %unpark_deadline12 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %28, i32 0, i32 12, !dbg !7103
  %29 = load i64, i64* %unpark_deadline12, align 8, !dbg !7103
  %30 = load i64, i64* %now, align 8, !dbg !7104
  %sub13 = sub i64 %29, %30, !dbg !7105
  %call14 = call i32 @jiffies_to_msecs(i64 %sub13) #10, !dbg !7106
  store i32 %call14, i32* %msecs, align 4, !dbg !7107
  br label %if.end15, !dbg !7108

if.else:                                          ; preds = %land.lhs.true10, %land.lhs.true, %if.end4
  store i32 0, i32* %msecs, align 4, !dbg !7109
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %unlock, !dbg !7100

unlock:                                           ; preds = %if.end15, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !7110), !dbg !7111
  %31 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7112
  %lock16 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 2, !dbg !7113
  %32 = load %struct.spinlock*, %struct.spinlock** %lock16, align 16, !dbg !7113
  store %struct.spinlock* %32, %struct.spinlock** %lock.addr.i19, align 8
  call void @arch_local_irq_enable() #11, !dbg !7114
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7117, !srcloc !7119
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !7120
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !7120
  %rlock.i20 = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !7120
  %35 = load i32, i32* %rc, align 4, !dbg !7122
  %tobool17 = icmp ne i32 %35, 0, !dbg !7122
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !7122

cond.true:                                        ; preds = %unlock
  %36 = load i32, i32* %rc, align 4, !dbg !7123
  br label %cond.end, !dbg !7122

cond.false:                                       ; preds = %unlock
  %37 = load i8*, i8** %buf.addr, align 8, !dbg !7124
  %38 = load i32, i32* %msecs, align 4, !dbg !7125
  %call18 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %37, i64 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %38) #10, !dbg !7126
  br label %cond.end, !dbg !7122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %36, %cond.true ], [ %call18, %cond.false ], !dbg !7122
  %conv = sext i32 %cond to i64, !dbg !7122
  ret i64 %conv, !dbg !7127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_scsi_park_store(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf, i64 %len) #0 !dbg !7128 {
entry:
  %lock.addr.i65 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i65, metadata !7129, metadata !DIExpression()), !dbg !7133
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !7136
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !7142
  %retval = alloca i64, align 8
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %input = alloca i64, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__dummy17 = alloca i64, align 8
  %__dummy218 = alloca i64, align 8
  %tmp21 = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !7149, metadata !DIExpression()), !dbg !7150
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7151, metadata !DIExpression()), !dbg !7152
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !7157, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7159, metadata !DIExpression()), !dbg !7161
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !7161
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7161
  store i8* %1, i8** %__mptr, align 8, !dbg !7161
  br label %do.body, !dbg !7161

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7162

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7161
  %add.ptr = getelementptr i8, i8* %2, i64 -368, !dbg !7161
  %3 = bitcast i8* %add.ptr to %struct.scsi_device*, !dbg !7161
  store %struct.scsi_device* %3, %struct.scsi_device** %tmp, align 8, !dbg !7162
  %4 = load %struct.scsi_device*, %struct.scsi_device** %tmp, align 8, !dbg !7161
  store %struct.scsi_device* %4, %struct.scsi_device** %sdev, align 8, !dbg !7158
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7164, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !7166, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.declare(metadata i64* %input, metadata !7168, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7170, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7172, metadata !DIExpression()), !dbg !7173
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !7174
  %call = call i32 @kstrtol(i8* %5, i32 10, i64* %input) #10, !dbg !7175
  store i32 %call, i32* %rc, align 4, !dbg !7176
  %6 = load i32, i32* %rc, align 4, !dbg !7177
  %tobool = icmp ne i32 %6, 0, !dbg !7177
  br i1 %tobool, label %if.then, label %if.end, !dbg !7179

if.then:                                          ; preds = %do.end
  %7 = load i32, i32* %rc, align 4, !dbg !7180
  %conv = sext i32 %7 to i64, !dbg !7180
  store i64 %conv, i64* %retval, align 8, !dbg !7181
  br label %return, !dbg !7181

if.end:                                           ; preds = %do.end
  %8 = load i64, i64* %input, align 8, !dbg !7182
  %cmp = icmp slt i64 %8, -2, !dbg !7184
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7185

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !7186
  br label %return, !dbg !7186

if.end3:                                          ; preds = %if.end
  %9 = load i64, i64* %input, align 8, !dbg !7187
  %cmp4 = icmp sgt i64 %9, 30000, !dbg !7189
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !7190

if.then6:                                         ; preds = %if.end3
  store i32 -75, i32* %rc, align 4, !dbg !7191
  store i64 30000, i64* %input, align 8, !dbg !7193
  br label %if.end7, !dbg !7194

if.end7:                                          ; preds = %if.then6, %if.end3
  %10 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !7195
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 0, !dbg !7196
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7196
  %call8 = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %11) #10, !dbg !7197
  store %struct.ata_port* %call8, %struct.ata_port** %ap, align 8, !dbg !7198
  br label %do.body9, !dbg !7199

do.body9:                                         ; preds = %if.end7
  br label %do.body10, !dbg !7200

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7201, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7204, metadata !DIExpression()), !dbg !7203
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !7203
  %conv12 = zext i1 %cmp11 to i32, !dbg !7203
  store i32 1, i32* %tmp13, align 4, !dbg !7203
  %12 = load i32, i32* %tmp13, align 4, !dbg !7203
  br label %do.body14, !dbg !7205

do.body14:                                        ; preds = %do.body10
  br label %do.body15, !dbg !7206

do.body15:                                        ; preds = %do.body14
  br label %do.body16, !dbg !7207

do.body16:                                        ; preds = %do.body15
  call void @llvm.dbg.declare(metadata i64* %__dummy17, metadata !7209, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.declare(metadata i64* %__dummy218, metadata !7213, metadata !DIExpression()), !dbg !7212
  %cmp19 = icmp eq i64* %__dummy17, %__dummy218, !dbg !7212
  %conv20 = zext i1 %cmp19 to i32, !dbg !7212
  store i32 1, i32* %tmp21, align 4, !dbg !7212
  %13 = load i32, i32* %tmp21, align 4, !dbg !7212
  %call22 = call i64 @arch_local_irq_save() #10, !dbg !7214
  store i64 %call22, i64* %flags, align 8, !dbg !7214
  br label %do.end23, !dbg !7214

do.end23:                                         ; preds = %do.body16
  br label %do.end24, !dbg !7207

do.end24:                                         ; preds = %do.end23
  br label %do.body25, !dbg !7206

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7215, !srcloc !7216
  br label %do.body26, !dbg !7215

do.body26:                                        ; preds = %do.body25
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7217
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 2, !dbg !7217
  %15 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !7217
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7218
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !7219
  %rlock.i = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !7219
  br label %do.end28, !dbg !7217

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !7215

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !7206

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !7205

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !7200

do.end32:                                         ; preds = %do.end31
  %18 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7220
  %19 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !7221
  %call33 = call %struct.ata_device* @ata_scsi_find_dev(%struct.ata_port* %18, %struct.scsi_device* %19) #10, !dbg !7222
  store %struct.ata_device* %call33, %struct.ata_device** %dev, align 8, !dbg !7223
  %20 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7224
  %tobool34 = icmp ne %struct.ata_device* %20, null, !dbg !7224
  %lnot = xor i1 %tobool34, true, !dbg !7224
  %lnot35 = xor i1 %lnot, true, !dbg !7224
  %lnot36 = xor i1 %lnot35, true, !dbg !7224
  %lnot.ext = zext i1 %lnot36 to i32, !dbg !7224
  %conv37 = sext i32 %lnot.ext to i64, !dbg !7224
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !7224
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !7226

if.then39:                                        ; preds = %do.end32
  store i32 -19, i32* %rc, align 4, !dbg !7227
  br label %unlock, !dbg !7229

if.end40:                                         ; preds = %do.end32
  %21 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7230
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %21, i32 0, i32 11, !dbg !7232
  %22 = load i32, i32* %class, align 64, !dbg !7232
  %cmp41 = icmp ne i32 %22, 1, !dbg !7233
  br i1 %cmp41, label %land.lhs.true, label %if.end47, !dbg !7234

land.lhs.true:                                    ; preds = %if.end40
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7235
  %class43 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %23, i32 0, i32 11, !dbg !7236
  %24 = load i32, i32* %class43, align 64, !dbg !7236
  %cmp44 = icmp ne i32 %24, 9, !dbg !7237
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7238

if.then46:                                        ; preds = %land.lhs.true
  store i32 -95, i32* %rc, align 4, !dbg !7239
  br label %unlock, !dbg !7241

if.end47:                                         ; preds = %land.lhs.true, %if.end40
  %25 = load i64, i64* %input, align 8, !dbg !7242
  %cmp48 = icmp sge i64 %25, 0, !dbg !7244
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !7245

if.then50:                                        ; preds = %if.end47
  %26 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7246
  %flags51 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 3, !dbg !7249
  %27 = load i64, i64* %flags51, align 16, !dbg !7249
  %and = and i64 %27, 131072, !dbg !7250
  %tobool52 = icmp ne i64 %and, 0, !dbg !7250
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !7251

if.then53:                                        ; preds = %if.then50
  store i32 -95, i32* %rc, align 4, !dbg !7252
  br label %unlock, !dbg !7254

if.end54:                                         ; preds = %if.then50
  %28 = load volatile i64, i64* @jiffies, align 8, !dbg !7255
  %29 = load i64, i64* %input, align 8, !dbg !7256
  %call55 = call i64 @ata_deadline(i64 %28, i64 %29) #10, !dbg !7257
  %30 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7258
  %unpark_deadline = getelementptr inbounds %struct.ata_device, %struct.ata_device* %30, i32 0, i32 12, !dbg !7259
  store i64 %call55, i64* %unpark_deadline, align 8, !dbg !7260
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7261
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 0, !dbg !7262
  %32 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !7262
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %32, i32 0, i32 11, !dbg !7263
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %eh_info, i32 0, i32 4, !dbg !7264
  %33 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7265
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 1, !dbg !7266
  %34 = load i32, i32* %devno, align 8, !dbg !7266
  %idxprom = zext i32 %34 to i64, !dbg !7261
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 %idxprom, !dbg !7261
  %35 = load i32, i32* %arrayidx, align 4, !dbg !7267
  %or = or i32 %35, 32, !dbg !7267
  store i32 %or, i32* %arrayidx, align 4, !dbg !7267
  %36 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7268
  call void @ata_port_schedule_eh(%struct.ata_port* %36) #10, !dbg !7269
  %37 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7270
  %park_req_pending = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 42, !dbg !7271
  call void @complete(%struct.completion* %park_req_pending) #10, !dbg !7272
  br label %if.end61, !dbg !7273

if.else:                                          ; preds = %if.end47
  %38 = load i64, i64* %input, align 8, !dbg !7274
  switch i64 %38, label %sw.epilog [
    i64 -1, label %sw.bb
    i64 -2, label %sw.bb58
  ], !dbg !7276

sw.bb:                                            ; preds = %if.else
  %39 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7277
  %flags56 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 3, !dbg !7279
  %40 = load i64, i64* %flags56, align 16, !dbg !7280
  %and57 = and i64 %40, -131073, !dbg !7280
  store i64 %and57, i64* %flags56, align 16, !dbg !7280
  br label %sw.epilog, !dbg !7281

sw.bb58:                                          ; preds = %if.else
  %41 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7282
  %flags59 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %41, i32 0, i32 3, !dbg !7283
  %42 = load i64, i64* %flags59, align 16, !dbg !7284
  %or60 = or i64 %42, 131072, !dbg !7284
  store i64 %or60, i64* %flags59, align 16, !dbg !7284
  br label %sw.epilog, !dbg !7285

sw.epilog:                                        ; preds = %if.else, %sw.bb58, %sw.bb
  br label %if.end61

if.end61:                                         ; preds = %sw.epilog, %if.end54
  br label %unlock, !dbg !7286

unlock:                                           ; preds = %if.end61, %if.then53, %if.then46, %if.then39
  call void @llvm.dbg.label(metadata !7287), !dbg !7288
  %43 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7289
  %lock62 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %43, i32 0, i32 2, !dbg !7290
  %44 = load %struct.spinlock*, %struct.spinlock** %lock62, align 16, !dbg !7290
  %45 = load i64, i64* %flags, align 8, !dbg !7291
  store %struct.spinlock* %44, %struct.spinlock** %lock.addr.i65, align 8
  store i64 %45, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !7295
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !7295
  store i32 1, i32* %tmp.i, align 4, !dbg !7295
  %46 = load i32, i32* %tmp.i, align 4, !dbg !7295
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !7302
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !7302
  store i32 1, i32* %tmp8.i, align 4, !dbg !7302
  %47 = load i32, i32* %tmp8.i, align 4, !dbg !7302
  %48 = load i64, i64* %flags.addr.i, align 8, !dbg !7304
  call void @arch_local_irq_restore(i64 %48) #11, !dbg !7304
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7305, !srcloc !7307
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i65, align 8, !dbg !7308
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !7308
  %rlock.i66 = bitcast %union.anon.1* %50 to %struct.raw_spinlock*, !dbg !7308
  %51 = load i32, i32* %rc, align 4, !dbg !7310
  %tobool63 = icmp ne i32 %51, 0, !dbg !7310
  br i1 %tobool63, label %cond.true, label %cond.false, !dbg !7310

cond.true:                                        ; preds = %unlock
  %52 = load i32, i32* %rc, align 4, !dbg !7311
  %conv64 = sext i32 %52 to i64, !dbg !7311
  br label %cond.end, !dbg !7310

cond.false:                                       ; preds = %unlock
  %53 = load i64, i64* %len.addr, align 8, !dbg !7312
  br label %cond.end, !dbg !7310

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv64, %cond.true ], [ %53, %cond.false ], !dbg !7310
  store i64 %cond, i64* %retval, align 8, !dbg !7313
  br label %return, !dbg !7313

return:                                           ; preds = %cond.end, %if.then2, %if.then
  %54 = load i64, i64* %retval, align 8, !dbg !7314
  ret i64 %54, !dbg !7314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_set_sense(%struct.ata_device* %dev, %struct.scsi_cmnd* %cmd, i8 zeroext %sk, i8 zeroext %asc, i8 zeroext %ascq) #0 !dbg !7315 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %sk.addr = alloca i8, align 1
  %asc.addr = alloca i8, align 1
  %ascq.addr = alloca i8, align 1
  %d_sense = alloca i8, align 1
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  store i8 %sk, i8* %sk.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sk.addr, metadata !7322, metadata !DIExpression()), !dbg !7323
  store i8 %asc, i8* %asc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %asc.addr, metadata !7324, metadata !DIExpression()), !dbg !7325
  store i8 %ascq, i8* %ascq.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ascq.addr, metadata !7326, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.declare(metadata i8* %d_sense, metadata !7328, metadata !DIExpression()), !dbg !7329
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7330
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 3, !dbg !7331
  %1 = load i64, i64* %flags, align 16, !dbg !7331
  %and = and i64 %1, 536870912, !dbg !7332
  %tobool = icmp ne i64 %and, 0, !dbg !7333
  %frombool = zext i1 %tobool to i8, !dbg !7329
  store i8 %frombool, i8* %d_sense, align 1, !dbg !7329
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7334
  %tobool1 = icmp ne %struct.scsi_cmnd* %2, null, !dbg !7334
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7336

if.then:                                          ; preds = %entry
  br label %return, !dbg !7337

if.end:                                           ; preds = %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7338
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 24, !dbg !7339
  store i32 134217730, i32* %result, align 8, !dbg !7340
  %4 = load i8, i8* %d_sense, align 1, !dbg !7341
  %tobool2 = trunc i8 %4 to i1, !dbg !7341
  %conv = zext i1 %tobool2 to i32, !dbg !7341
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7342
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 20, !dbg !7343
  %6 = load i8*, i8** %sense_buffer, align 8, !dbg !7343
  %7 = load i8, i8* %sk.addr, align 1, !dbg !7344
  %8 = load i8, i8* %asc.addr, align 1, !dbg !7345
  %9 = load i8, i8* %ascq.addr, align 1, !dbg !7346
  call void @scsi_build_sense_buffer(i32 %conv, i8* %6, i8 zeroext %7, i8 zeroext %8, i8 zeroext %9) #10, !dbg !7347
  br label %return, !dbg !7348

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7348
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @scsi_build_sense_buffer(i32, i8*, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_set_sense_information(%struct.ata_device* %dev, %struct.scsi_cmnd* %cmd, %struct.ata_taskfile* %tf) #0 !dbg !7349 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %information = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !7356, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.declare(metadata i64* %information, metadata !7358, metadata !DIExpression()), !dbg !7359
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7360
  %tobool = icmp ne %struct.scsi_cmnd* %0, null, !dbg !7360
  br i1 %tobool, label %if.end, label %if.then, !dbg !7362

if.then:                                          ; preds = %entry
  br label %return, !dbg !7363

if.end:                                           ; preds = %entry
  %1 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7364
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7365
  %call = call i64 @ata_tf_read_block(%struct.ata_taskfile* %1, %struct.ata_device* %2) #10, !dbg !7366
  store i64 %call, i64* %information, align 8, !dbg !7367
  %3 = load i64, i64* %information, align 8, !dbg !7368
  %cmp = icmp eq i64 %3, -1, !dbg !7370
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !7371

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !7372

if.end2:                                          ; preds = %if.end
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7373
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 20, !dbg !7374
  %5 = load i8*, i8** %sense_buffer, align 8, !dbg !7374
  %6 = load i64, i64* %information, align 8, !dbg !7375
  %call3 = call i32 @scsi_set_sense_information(i8* %5, i32 96, i64 %6) #10, !dbg !7376
  br label %return, !dbg !7377

return:                                           ; preds = %if.end2, %if.then1, %if.then
  ret void, !dbg !7377
}

; Function Attrs: noredzone
declare dso_local i64 @ata_tf_read_block(%struct.ata_taskfile*, %struct.ata_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_set_sense_information(i8*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_std_bios_param(%struct.scsi_device* %sdev, %struct.block_device* %bdev, i64 %capacity, i32* %geom) #0 !dbg !7378 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %bdev.addr = alloca %struct.block_device*, align 8
  %capacity.addr = alloca i64, align 8
  %geom.addr = alloca i32*, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !7379, metadata !DIExpression()), !dbg !7380
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  store i64 %capacity, i64* %capacity.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  store i32* %geom, i32** %geom.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %geom.addr, metadata !7385, metadata !DIExpression()), !dbg !7386
  %0 = load i32*, i32** %geom.addr, align 8, !dbg !7387
  %arrayidx = getelementptr i32, i32* %0, i64 0, !dbg !7387
  store i32 255, i32* %arrayidx, align 4, !dbg !7388
  %1 = load i32*, i32** %geom.addr, align 8, !dbg !7389
  %arrayidx1 = getelementptr i32, i32* %1, i64 1, !dbg !7389
  store i32 63, i32* %arrayidx1, align 4, !dbg !7390
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !7391, metadata !DIExpression()), !dbg !7393
  store i32 16065, i32* %__base, align 4, !dbg !7393
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !7394, metadata !DIExpression()), !dbg !7393
  %2 = load i64, i64* %capacity.addr, align 8, !dbg !7393
  %3 = load i32, i32* %__base, align 4, !dbg !7393
  %conv = zext i32 %3 to i64, !dbg !7393
  %rem = urem i64 %2, %conv, !dbg !7393
  %conv2 = trunc i64 %rem to i32, !dbg !7393
  store i32 %conv2, i32* %__rem, align 4, !dbg !7393
  %4 = load i64, i64* %capacity.addr, align 8, !dbg !7393
  %5 = load i32, i32* %__base, align 4, !dbg !7393
  %conv3 = zext i32 %5 to i64, !dbg !7393
  %div = udiv i64 %4, %conv3, !dbg !7393
  store i64 %div, i64* %capacity.addr, align 8, !dbg !7393
  %6 = load i32, i32* %__rem, align 4, !dbg !7393
  store i32 %6, i32* %tmp, align 4, !dbg !7393
  %7 = load i32, i32* %tmp, align 4, !dbg !7393
  %8 = load i64, i64* %capacity.addr, align 8, !dbg !7395
  %conv4 = trunc i64 %8 to i32, !dbg !7395
  %9 = load i32*, i32** %geom.addr, align 8, !dbg !7396
  %arrayidx5 = getelementptr i32, i32* %9, i64 2, !dbg !7396
  store i32 %conv4, i32* %arrayidx5, align 4, !dbg !7397
  ret i32 0, !dbg !7398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_unlock_native_capacity(%struct.scsi_device* %sdev) #0 !dbg !7399 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !7129, metadata !DIExpression()), !dbg !7400
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !7402
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !7403
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7412, metadata !DIExpression()), !dbg !7413
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7414
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !7415
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7415
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %1) #10, !dbg !7416
  store %struct.ata_port* %call, %struct.ata_port** %ap, align 8, !dbg !7413
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !7417, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7419, metadata !DIExpression()), !dbg !7420
  br label %do.body, !dbg !7421

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7422

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7426, metadata !DIExpression()), !dbg !7425
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7425
  %conv = zext i1 %cmp to i32, !dbg !7425
  store i32 1, i32* %tmp, align 4, !dbg !7425
  %2 = load i32, i32* %tmp, align 4, !dbg !7425
  br label %do.body2, !dbg !7427

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7428

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7429

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7431, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7435, metadata !DIExpression()), !dbg !7434
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7434
  %conv8 = zext i1 %cmp7 to i32, !dbg !7434
  store i32 1, i32* %tmp9, align 4, !dbg !7434
  %3 = load i32, i32* %tmp9, align 4, !dbg !7434
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !7436
  store i64 %call10, i64* %flags, align 8, !dbg !7436
  br label %do.end, !dbg !7436

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !7429

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7428

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7437, !srcloc !7438
  br label %do.body13, !dbg !7437

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7439
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 2, !dbg !7439
  %5 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !7439
  store %struct.spinlock* %5, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7440
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !7441
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !7441
  br label %do.end15, !dbg !7439

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7437

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7428

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7427

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7422

do.end19:                                         ; preds = %do.end18
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7442
  %9 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !7443
  %call20 = call %struct.ata_device* @ata_scsi_find_dev(%struct.ata_port* %8, %struct.scsi_device* %9) #10, !dbg !7444
  store %struct.ata_device* %call20, %struct.ata_device** %dev, align 8, !dbg !7445
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7446
  %tobool = icmp ne %struct.ata_device* %10, null, !dbg !7446
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7448

land.lhs.true:                                    ; preds = %do.end19
  %11 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7449
  %n_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 9, !dbg !7450
  %12 = load i64, i64* %n_sectors, align 16, !dbg !7450
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7451
  %n_native_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 10, !dbg !7452
  %14 = load i64, i64* %n_native_sectors, align 8, !dbg !7452
  %cmp21 = icmp ult i64 %12, %14, !dbg !7453
  br i1 %cmp21, label %if.then, label %if.end, !dbg !7454

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7455
  %flags23 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %15, i32 0, i32 3, !dbg !7457
  %16 = load i64, i64* %flags23, align 16, !dbg !7458
  %or = or i64 %16, 262144, !dbg !7458
  store i64 %or, i64* %flags23, align 16, !dbg !7458
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7459
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 0, !dbg !7460
  %18 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !7460
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %18, i32 0, i32 11, !dbg !7461
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %eh_info, i32 0, i32 3, !dbg !7462
  %19 = load i32, i32* %action, align 8, !dbg !7463
  %or24 = or i32 %19, 6, !dbg !7463
  store i32 %or24, i32* %action, align 8, !dbg !7463
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7464
  call void @ata_port_schedule_eh(%struct.ata_port* %20) #10, !dbg !7465
  br label %if.end, !dbg !7466

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end19
  %21 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7467
  %lock25 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 2, !dbg !7468
  %22 = load %struct.spinlock*, %struct.spinlock** %lock25, align 16, !dbg !7468
  %23 = load i64, i64* %flags, align 8, !dbg !7469
  store %struct.spinlock* %22, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !7470
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !7470
  store i32 1, i32* %tmp.i, align 4, !dbg !7470
  %24 = load i32, i32* %tmp.i, align 4, !dbg !7470
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !7471
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !7471
  store i32 1, i32* %tmp8.i, align 4, !dbg !7471
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !7471
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !7472
  call void @arch_local_irq_restore(i64 %26) #11, !dbg !7472
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7473, !srcloc !7307
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !7474
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !7474
  %rlock.i27 = bitcast %union.anon.1* %28 to %struct.raw_spinlock*, !dbg !7474
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7475
  call void @ata_port_wait_eh(%struct.ata_port* %29) #10, !dbg !7476
  ret void, !dbg !7477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %host) #0 !dbg !7478 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7483
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !7484
  %arrayidx = getelementptr [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !7483
  %1 = bitcast i64* %arrayidx to %struct.ata_port**, !dbg !7485
  %2 = load %struct.ata_port*, %struct.ata_port** %1, align 8, !dbg !7485
  ret %struct.ata_port* %2, !dbg !7486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7487 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7491, metadata !DIExpression()), !dbg !7492
  %call = call i64 @arch_local_save_flags() #10, !dbg !7493
  store i64 %call, i64* %f, align 8, !dbg !7494
  call void @arch_local_irq_disable() #10, !dbg !7495
  %0 = load i64, i64* %f, align 8, !dbg !7496
  ret i64 %0, !dbg !7497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.ata_device* @ata_scsi_find_dev(%struct.ata_port* %ap, %struct.scsi_device* %scsidev) #0 !dbg !7498 {
entry:
  %retval = alloca %struct.ata_device*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %scsidev.addr = alloca %struct.scsi_device*, align 8
  %dev = alloca %struct.ata_device*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7503, metadata !DIExpression()), !dbg !7504
  store %struct.scsi_device* %scsidev, %struct.scsi_device** %scsidev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsidev.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !7507, metadata !DIExpression()), !dbg !7508
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7509
  %1 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !7510
  %call = call %struct.ata_device* @__ata_scsi_find_dev(%struct.ata_port* %0, %struct.scsi_device* %1) #10, !dbg !7511
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !7508
  %2 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7512
  %tobool = icmp ne %struct.ata_device* %2, null, !dbg !7512
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7512

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7512
  %call1 = call i32 @ata_dev_enabled(%struct.ata_device* %3) #10, !dbg !7512
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7512
  %lnot = xor i1 %tobool2, true, !dbg !7512
  br label %lor.end, !dbg !7512

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot3 = xor i1 %4, true, !dbg !7512
  %lnot4 = xor i1 %lnot3, true, !dbg !7512
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !7512
  %conv = sext i32 %lnot.ext to i64, !dbg !7512
  %tobool5 = icmp ne i64 %conv, 0, !dbg !7512
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7514

if.then:                                          ; preds = %lor.end
  store %struct.ata_device* null, %struct.ata_device** %retval, align 8, !dbg !7515
  br label %return, !dbg !7515

if.end:                                           ; preds = %lor.end
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7516
  store %struct.ata_device* %5, %struct.ata_device** %retval, align 8, !dbg !7517
  br label %return, !dbg !7517

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.ata_device*, %struct.ata_device** %retval, align 8, !dbg !7518
  ret %struct.ata_device* %6, !dbg !7518
}

; Function Attrs: noredzone
declare dso_local void @ata_port_schedule_eh(%struct.ata_port*) #2

; Function Attrs: noredzone
declare dso_local void @ata_port_wait_eh(%struct.ata_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_cmd_ioctl(%struct.scsi_device* %scsidev, i8* %arg) #0 !dbg !7519 {
entry:
  %retval.i.i158 = alloca i1, align 1
  %addr.addr.i.i159 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i159, metadata !7522, metadata !DIExpression()), !dbg !7527
  %bytes.addr.i.i160 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i160, metadata !7536, metadata !DIExpression()), !dbg !7537
  %is_source.addr.i.i161 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i161, metadata !7538, metadata !DIExpression()), !dbg !7539
  %sz.i.i162 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i162, metadata !7540, metadata !DIExpression()), !dbg !7541
  %__ret_warn_on.i.i163 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i163, metadata !7542, metadata !DIExpression()), !dbg !7545
  %tmp.i.i164 = alloca i64, align 8
  %to.addr.i165 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i165, metadata !7546, metadata !DIExpression()), !dbg !7547
  %from.addr.i166 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i166, metadata !7548, metadata !DIExpression()), !dbg !7549
  %n.addr.i167 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i167, metadata !7550, metadata !DIExpression()), !dbg !7551
  %retval.i.i107 = alloca i1, align 1
  %addr.addr.i.i108 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i108, metadata !7522, metadata !DIExpression()), !dbg !7552
  %bytes.addr.i.i109 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i109, metadata !7536, metadata !DIExpression()), !dbg !7560
  %is_source.addr.i.i110 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i110, metadata !7538, metadata !DIExpression()), !dbg !7561
  %sz.i.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i111, metadata !7540, metadata !DIExpression()), !dbg !7562
  %__ret_warn_on.i.i112 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i112, metadata !7542, metadata !DIExpression()), !dbg !7563
  %tmp.i.i113 = alloca i64, align 8
  %to.addr.i114 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i114, metadata !7546, metadata !DIExpression()), !dbg !7564
  %from.addr.i115 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i115, metadata !7548, metadata !DIExpression()), !dbg !7565
  %n.addr.i116 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i116, metadata !7550, metadata !DIExpression()), !dbg !7566
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7567, metadata !DIExpression()), !dbg !7571
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7581, metadata !DIExpression()), !dbg !7582
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7583, metadata !DIExpression()), !dbg !7584
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7585, metadata !DIExpression()), !dbg !7586
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7587, metadata !DIExpression()), !dbg !7591
  %retval.i.i98 = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7593, metadata !DIExpression()), !dbg !7597
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7599, metadata !DIExpression()), !dbg !7603
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7608, metadata !DIExpression()), !dbg !7609
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7610, metadata !DIExpression()), !dbg !7611
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7612, metadata !DIExpression()), !dbg !7613
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7614, metadata !DIExpression()), !dbg !7615
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7616, metadata !DIExpression()), !dbg !7617
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7618, metadata !DIExpression()), !dbg !7619
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7620, metadata !DIExpression()), !dbg !7621
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7622, metadata !DIExpression()), !dbg !7623
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !7522, metadata !DIExpression()), !dbg !7624
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !7536, metadata !DIExpression()), !dbg !7630
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !7538, metadata !DIExpression()), !dbg !7631
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !7540, metadata !DIExpression()), !dbg !7632
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !7542, metadata !DIExpression()), !dbg !7633
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7634, metadata !DIExpression()), !dbg !7635
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7636, metadata !DIExpression()), !dbg !7637
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7638, metadata !DIExpression()), !dbg !7639
  %retval = alloca i32, align 4
  %scsidev.addr = alloca %struct.scsi_device*, align 8
  %arg.addr = alloca i8*, align 8
  %rc = alloca i32, align 4
  %sensebuf = alloca [96 x i8], align 16
  %scsi_cmd = alloca [16 x i8], align 16
  %args = alloca [4 x i8], align 1
  %argbuf = alloca i8*, align 8
  %argsize = alloca i32, align 4
  %data_dir = alloca i32, align 4
  %sshdr = alloca %struct.scsi_sense_hdr, align 1
  %cmd_result = alloca i32, align 4
  %tmp = alloca i32, align 4
  %desc = alloca i8*, align 8
  store %struct.scsi_device* %scsidev, %struct.scsi_device** %scsidev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsidev.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7644, metadata !DIExpression()), !dbg !7645
  store i32 0, i32* %rc, align 4, !dbg !7645
  call void @llvm.dbg.declare(metadata [96 x i8]* %sensebuf, metadata !7646, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.declare(metadata [16 x i8]* %scsi_cmd, metadata !7651, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.declare(metadata [4 x i8]* %args, metadata !7653, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.declare(metadata i8** %argbuf, metadata !7656, metadata !DIExpression()), !dbg !7657
  store i8* null, i8** %argbuf, align 8, !dbg !7657
  call void @llvm.dbg.declare(metadata i32* %argsize, metadata !7658, metadata !DIExpression()), !dbg !7659
  store i32 0, i32* %argsize, align 4, !dbg !7659
  call void @llvm.dbg.declare(metadata i32* %data_dir, metadata !7660, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr* %sshdr, metadata !7662, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata i32* %cmd_result, metadata !7675, metadata !DIExpression()), !dbg !7676
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7677
  %cmp = icmp eq i8* %0, null, !dbg !7679
  br i1 %cmp, label %if.then, label %if.end, !dbg !7680

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7681
  br label %return, !dbg !7681

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %args, i64 0, i64 0, !dbg !7682
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7683
  store i8* %arraydecay, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 4, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7684
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7684
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7632
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7685
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7685
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7685

land.rhs.i.i:                                     ; preds = %if.end
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7685
  %conv.i.i = sext i32 %5 to i64, !dbg !7685
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7685
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7685
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %7 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7687
  %lnot.i.i = xor i1 %7, true, !dbg !7685
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7685
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7685
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7688

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7689
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #5, !dbg !7692
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7693

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7694
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7695
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !7696
  br label %if.end9.i.i, !dbg !7696

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7697
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7697
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7699

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !7700
  br label %if.end.i.i, !dbg !7700

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !7701
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7702
  br label %check_copy_size.exit.i, !dbg !7702

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7633
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7633
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7633
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7633
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7633
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7703
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7703
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7703
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7703
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7703
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7633

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !7705, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !7709, !srcloc !7711
  br label %if.end31.i.i, !dbg !7712

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7633
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7633
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7633
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7633
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7633
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7703
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7633
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7713
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7714

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7715
  br label %check_copy_size.exit.i, !dbg !7715

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7716
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7717
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7718
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7718
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !7719
  store i1 true, i1* %retval.i.i, align 1, !dbg !7720
  br label %check_copy_size.exit.i, !dbg !7720

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7721
  %lnot.i = xor i1 %20, true, !dbg !7684
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7684
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7684
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7722

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7723
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7724
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7725
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !7726
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7727
  br label %copy_from_user.exit, !dbg !7728

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7729
  %tobool = icmp ne i64 %24, 0, !dbg !7730
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !7731

if.then1:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7732
  br label %return, !dbg !7732

if.end2:                                          ; preds = %copy_from_user.exit
  %arraydecay3 = getelementptr inbounds [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !7733
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay3, i8 0, i64 96, i1 false), !dbg !7733
  %arraydecay4 = getelementptr inbounds [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 0, !dbg !7734
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay4, i8 0, i64 16, i1 false), !dbg !7734
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 3, !dbg !7735
  %25 = load i8, i8* %arrayidx, align 1, !dbg !7735
  %tobool5 = icmp ne i8 %25, 0, !dbg !7735
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !7736

if.then6:                                         ; preds = %if.end2
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 3, !dbg !7737
  %26 = load i8, i8* %arrayidx7, align 1, !dbg !7737
  %conv = zext i8 %26 to i32, !dbg !7737
  %mul = mul i32 512, %conv, !dbg !7738
  store i32 %mul, i32* %argsize, align 4, !dbg !7739
  %27 = load i32, i32* %argsize, align 4, !dbg !7740
  %conv8 = sext i32 %27 to i64, !dbg !7740
  store i64 %conv8, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !7741
  %29 = call i1 @llvm.is.constant.i64(i64 %28) #5, !dbg !7742
  br i1 %29, label %if.then.i99, label %if.end9.i, !dbg !7743

if.then.i99:                                      ; preds = %if.then6
  %30 = load i64, i64* %size.addr.i, align 8, !dbg !7744
  %cmp.i = icmp ugt i64 %30, 8192, !dbg !7745
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7746

if.then1.i:                                       ; preds = %if.then.i99
  %31 = load i64, i64* %size.addr.i, align 8, !dbg !7747
  %32 = load i32, i32* %flags.addr.i, align 4, !dbg !7748
  store i64 %31, i64* %size.addr.i.i, align 8
  store i32 %32, i32* %flags.addr.i.i, align 4
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !7749
  %call.i.i = call i32 @get_order(i64 %33) #12, !dbg !7750
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7617
  %34 = load i64, i64* %size.addr.i.i, align 8, !dbg !7751
  %35 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7752
  %36 = load i32, i32* %order.i.i, align 4, !dbg !7753
  store i64 %34, i64* %size.addr.i.i.i, align 8
  store i32 %35, i32* %flags.addr.i.i.i, align 4
  store i32 %36, i32* %order.addr.i.i.i, align 4
  %37 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7754
  %38 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7755
  %39 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7756
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %37, i32 %38, i32 %39) #11, !dbg !7757
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7757
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7757
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7757
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !7757
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7758
  br label %kmalloc.exit, !dbg !7758

if.end.i:                                         ; preds = %if.then.i99
  %40 = load i64, i64* %size.addr.i, align 8, !dbg !7759
  store i64 %40, i64* %size.addr.i11.i, align 8
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7760
  %tobool.i.i = icmp ne i64 %41, 0, !dbg !7760
  br i1 %tobool.i.i, label %if.end.i.i102, label %if.then.i.i100, !dbg !7762

if.then.i.i100:                                   ; preds = %if.end.i
  store i32 0, i32* %retval.i.i98, align 4, !dbg !7763
  br label %kmalloc_index.exit.i, !dbg !7763

if.end.i.i102:                                    ; preds = %if.end.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7764
  %cmp.i.i101 = icmp ule i64 %42, 8, !dbg !7766
  br i1 %cmp.i.i101, label %if.then1.i.i, label %if.end2.i.i, !dbg !7767

if.then1.i.i:                                     ; preds = %if.end.i.i102
  store i32 3, i32* %retval.i.i98, align 4, !dbg !7768
  br label %kmalloc_index.exit.i, !dbg !7768

if.end2.i.i:                                      ; preds = %if.end.i.i102
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7769
  %cmp3.i.i = icmp ugt i64 %43, 64, !dbg !7771
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7772

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7773
  %cmp4.i.i = icmp ule i64 %44, 96, !dbg !7774
  br i1 %cmp4.i.i, label %if.then5.i.i103, label %if.end6.i.i, !dbg !7775

if.then5.i.i103:                                  ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i98, align 4, !dbg !7776
  br label %kmalloc_index.exit.i, !dbg !7776

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7777
  %cmp7.i.i = icmp ugt i64 %45, 128, !dbg !7779
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7780

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7781
  %cmp9.i.i = icmp ule i64 %46, 192, !dbg !7782
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7783

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i98, align 4, !dbg !7784
  br label %kmalloc_index.exit.i, !dbg !7784

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7785
  %cmp12.i.i = icmp ule i64 %47, 8, !dbg !7787
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7788

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i98, align 4, !dbg !7789
  br label %kmalloc_index.exit.i, !dbg !7789

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7790
  %cmp15.i.i = icmp ule i64 %48, 16, !dbg !7792
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7793

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i98, align 4, !dbg !7794
  br label %kmalloc_index.exit.i, !dbg !7794

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7795
  %cmp18.i.i = icmp ule i64 %49, 32, !dbg !7797
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7798

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i98, align 4, !dbg !7799
  br label %kmalloc_index.exit.i, !dbg !7799

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7800
  %cmp21.i.i = icmp ule i64 %50, 64, !dbg !7802
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7803

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i98, align 4, !dbg !7804
  br label %kmalloc_index.exit.i, !dbg !7804

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7805
  %cmp24.i.i = icmp ule i64 %51, 128, !dbg !7807
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7808

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i98, align 4, !dbg !7809
  br label %kmalloc_index.exit.i, !dbg !7809

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7810
  %cmp27.i.i = icmp ule i64 %52, 256, !dbg !7812
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7813

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i98, align 4, !dbg !7814
  br label %kmalloc_index.exit.i, !dbg !7814

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7815
  %cmp30.i.i = icmp ule i64 %53, 512, !dbg !7817
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7818

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i98, align 4, !dbg !7819
  br label %kmalloc_index.exit.i, !dbg !7819

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7820
  %cmp33.i.i = icmp ule i64 %54, 1024, !dbg !7822
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7823

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i98, align 4, !dbg !7824
  br label %kmalloc_index.exit.i, !dbg !7824

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7825
  %cmp36.i.i = icmp ule i64 %55, 2048, !dbg !7827
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7828

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i98, align 4, !dbg !7829
  br label %kmalloc_index.exit.i, !dbg !7829

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7830
  %cmp39.i.i = icmp ule i64 %56, 4096, !dbg !7832
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7833

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i98, align 4, !dbg !7834
  br label %kmalloc_index.exit.i, !dbg !7834

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7835
  %cmp42.i.i = icmp ule i64 %57, 8192, !dbg !7837
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7838

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i98, align 4, !dbg !7839
  br label %kmalloc_index.exit.i, !dbg !7839

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7840
  %cmp45.i.i = icmp ule i64 %58, 16384, !dbg !7842
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7843

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i98, align 4, !dbg !7844
  br label %kmalloc_index.exit.i, !dbg !7844

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7845
  %cmp48.i.i = icmp ule i64 %59, 32768, !dbg !7847
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7848

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i98, align 4, !dbg !7849
  br label %kmalloc_index.exit.i, !dbg !7849

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7850
  %cmp51.i.i = icmp ule i64 %60, 65536, !dbg !7852
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7853

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i98, align 4, !dbg !7854
  br label %kmalloc_index.exit.i, !dbg !7854

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7855
  %cmp54.i.i = icmp ule i64 %61, 131072, !dbg !7857
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7858

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i98, align 4, !dbg !7859
  br label %kmalloc_index.exit.i, !dbg !7859

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7860
  %cmp57.i.i = icmp ule i64 %62, 262144, !dbg !7862
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7863

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i98, align 4, !dbg !7864
  br label %kmalloc_index.exit.i, !dbg !7864

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7865
  %cmp60.i.i = icmp ule i64 %63, 524288, !dbg !7867
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7868

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i98, align 4, !dbg !7869
  br label %kmalloc_index.exit.i, !dbg !7869

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7870
  %cmp63.i.i = icmp ule i64 %64, 1048576, !dbg !7872
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7873

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i98, align 4, !dbg !7874
  br label %kmalloc_index.exit.i, !dbg !7874

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7875
  %cmp66.i.i = icmp ule i64 %65, 2097152, !dbg !7877
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7878

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i98, align 4, !dbg !7879
  br label %kmalloc_index.exit.i, !dbg !7879

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7880
  %cmp69.i.i = icmp ule i64 %66, 4194304, !dbg !7882
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7883

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i98, align 4, !dbg !7884
  br label %kmalloc_index.exit.i, !dbg !7884

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7885
  %cmp72.i.i = icmp ule i64 %67, 8388608, !dbg !7887
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7888

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i98, align 4, !dbg !7889
  br label %kmalloc_index.exit.i, !dbg !7889

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7890
  %cmp75.i.i = icmp ule i64 %68, 16777216, !dbg !7892
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7893

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i98, align 4, !dbg !7894
  br label %kmalloc_index.exit.i, !dbg !7894

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7895
  %cmp78.i.i = icmp ule i64 %69, 33554432, !dbg !7897
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7898

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i98, align 4, !dbg !7899
  br label %kmalloc_index.exit.i, !dbg !7899

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %70 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7900
  %cmp81.i.i = icmp ule i64 %70, 67108864, !dbg !7902
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7903

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i98, align 4, !dbg !7904
  br label %kmalloc_index.exit.i, !dbg !7904

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !7905, !srcloc !7908
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 192) #5, !dbg !7909, !srcloc !7912
  unreachable, !dbg !7913

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i103, %if.then1.i.i, %if.then.i.i100
  %71 = load i32, i32* %retval.i.i98, align 4, !dbg !7914
  store i32 %71, i32* %index.i, align 4, !dbg !7915
  %72 = load i32, i32* %index.i, align 4, !dbg !7916
  %tobool.i = icmp ne i32 %72, 0, !dbg !7916
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7918

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7919
  br label %kmalloc.exit, !dbg !7919

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %73 = load i32, i32* %flags.addr.i, align 4, !dbg !7920
  store i32 %73, i32* %flags.addr.i13.i, align 4
  %74 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7921
  %and.i.i = and i32 %74, 17, !dbg !7921
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7921
  %lnot.i.i104 = xor i1 %cmp.i14.i, true, !dbg !7921
  %lnot.ext.i.i105 = zext i1 %cmp.i14.i to i32, !dbg !7921
  %conv.i.i106 = sext i32 %lnot.ext.i.i105 to i64, !dbg !7921
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7923

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7924
  br label %kmalloc_type.exit.i, !dbg !7924

if.end.i16.i:                                     ; preds = %if.end4.i
  %75 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7925
  %and2.i.i = and i32 %75, 1, !dbg !7926
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7925
  %76 = zext i1 %tobool3.i.i to i64, !dbg !7925
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7925
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7927
  br label %kmalloc_type.exit.i, !dbg !7927

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %77 = load i32, i32* %retval.i12.i, align 4, !dbg !7928
  %idxprom.i = zext i32 %77 to i64, !dbg !7929
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7929
  %78 = load i32, i32* %index.i, align 4, !dbg !7930
  %idxprom6.i = zext i32 %78 to i64, !dbg !7929
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7929
  %79 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7929
  %80 = load i32, i32* %flags.addr.i, align 4, !dbg !7931
  %81 = load i64, i64* %size.addr.i, align 8, !dbg !7932
  store %struct.kmem_cache* %79, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %80, i32* %flags.addr.i17.i, align 4
  store i64 %81, i64* %size.addr.i18.i, align 8
  %82 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7933
  %83 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7934
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %82, i32 %83) #11, !dbg !7935
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7935
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7935
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7935
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !7935
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7586
  %84 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7936
  %85 = load i8*, i8** %ret.i.i, align 8, !dbg !7937
  %86 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7938
  %87 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7939
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %84, i8* %85, i64 %86, i32 %87) #11, !dbg !7940
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7941
  %88 = load i8*, i8** %ret.i.i, align 8, !dbg !7942
  store i8* %88, i8** %retval.i, align 8, !dbg !7943
  br label %kmalloc.exit, !dbg !7943

if.end9.i:                                        ; preds = %if.then6
  %89 = load i64, i64* %size.addr.i, align 8, !dbg !7944
  %90 = load i32, i32* %flags.addr.i, align 4, !dbg !7945
  %call10.i = call noalias i8* @__kmalloc(i64 %89, i32 %90) #11, !dbg !7946
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7946
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7946
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7946
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !7946
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7947
  br label %kmalloc.exit, !dbg !7947

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %91 = load i8*, i8** %retval.i, align 8, !dbg !7948
  store i8* %91, i8** %argbuf, align 8, !dbg !7949
  %92 = load i8*, i8** %argbuf, align 8, !dbg !7950
  %cmp10 = icmp eq i8* %92, null, !dbg !7952
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !7953

if.then12:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %rc, align 4, !dbg !7954
  br label %error, !dbg !7956

if.end13:                                         ; preds = %kmalloc.exit
  %arrayidx14 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 1, !dbg !7957
  store i8 8, i8* %arrayidx14, align 1, !dbg !7958
  %arrayidx15 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 2, !dbg !7959
  store i8 14, i8* %arrayidx15, align 2, !dbg !7960
  store i32 2, i32* %data_dir, align 4, !dbg !7961
  br label %if.end18, !dbg !7962

if.else:                                          ; preds = %if.end2
  %arrayidx16 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 1, !dbg !7963
  store i8 6, i8* %arrayidx16, align 1, !dbg !7965
  %arrayidx17 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 2, !dbg !7966
  store i8 32, i8* %arrayidx17, align 2, !dbg !7967
  store i32 3, i32* %data_dir, align 4, !dbg !7968
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end13
  %arrayidx19 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 0, !dbg !7969
  store i8 -123, i8* %arrayidx19, align 16, !dbg !7970
  %arrayidx20 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 2, !dbg !7971
  %93 = load i8, i8* %arrayidx20, align 1, !dbg !7971
  %arrayidx21 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 4, !dbg !7972
  store i8 %93, i8* %arrayidx21, align 4, !dbg !7973
  %arrayidx22 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 0, !dbg !7974
  %94 = load i8, i8* %arrayidx22, align 1, !dbg !7974
  %conv23 = zext i8 %94 to i32, !dbg !7974
  %cmp24 = icmp eq i32 %conv23, 176, !dbg !7976
  br i1 %cmp24, label %if.then26, label %if.else33, !dbg !7977

if.then26:                                        ; preds = %if.end18
  %arrayidx27 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 3, !dbg !7978
  %95 = load i8, i8* %arrayidx27, align 1, !dbg !7978
  %arrayidx28 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 6, !dbg !7980
  store i8 %95, i8* %arrayidx28, align 2, !dbg !7981
  %arrayidx29 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 1, !dbg !7982
  %96 = load i8, i8* %arrayidx29, align 1, !dbg !7982
  %arrayidx30 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 8, !dbg !7983
  store i8 %96, i8* %arrayidx30, align 8, !dbg !7984
  %arrayidx31 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 10, !dbg !7985
  store i8 79, i8* %arrayidx31, align 2, !dbg !7986
  %arrayidx32 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 12, !dbg !7987
  store i8 -62, i8* %arrayidx32, align 4, !dbg !7988
  br label %if.end36, !dbg !7989

if.else33:                                        ; preds = %if.end18
  %arrayidx34 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 1, !dbg !7990
  %97 = load i8, i8* %arrayidx34, align 1, !dbg !7990
  %arrayidx35 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 6, !dbg !7992
  store i8 %97, i8* %arrayidx35, align 2, !dbg !7993
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then26
  %arrayidx37 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 0, !dbg !7994
  %98 = load i8, i8* %arrayidx37, align 1, !dbg !7994
  %arrayidx38 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 14, !dbg !7995
  store i8 %98, i8* %arrayidx38, align 2, !dbg !7996
  br label %do.body, !dbg !7997

do.body:                                          ; preds = %if.end36
  br label %do.end, !dbg !7999

do.end:                                           ; preds = %do.body
  %99 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !7997
  %arraydecay39 = getelementptr inbounds [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 0, !dbg !7997
  %100 = load i32, i32* %data_dir, align 4, !dbg !7997
  %101 = load i8*, i8** %argbuf, align 8, !dbg !7997
  %102 = load i32, i32* %argsize, align 4, !dbg !7997
  %arraydecay40 = getelementptr inbounds [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !7997
  %call41 = call i32 @__scsi_execute(%struct.scsi_device* %99, i8* %arraydecay39, i32 %100, i8* %101, i32 %102, i8* %arraydecay40, %struct.scsi_sense_hdr* %sshdr, i32 2500, i32 5, i64 0, i32 0, i32* null) #10, !dbg !7997
  store i32 %call41, i32* %tmp, align 4, !dbg !7999
  %103 = load i32, i32* %tmp, align 4, !dbg !7997
  store i32 %103, i32* %cmd_result, align 4, !dbg !8001
  %104 = load i32, i32* %cmd_result, align 4, !dbg !8002
  %shr = ashr i32 %104, 24, !dbg !8002
  %and = and i32 %shr, 255, !dbg !8002
  %cmp42 = icmp eq i32 %and, 8, !dbg !8003
  br i1 %cmp42, label %if.then44, label %if.end86, !dbg !8004

if.then44:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %desc, metadata !8005, metadata !DIExpression()), !dbg !8006
  %arraydecay45 = getelementptr inbounds [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !8007
  %add.ptr = getelementptr i8, i8* %arraydecay45, i64 8, !dbg !8008
  store i8* %add.ptr, i8** %desc, align 8, !dbg !8006
  %105 = load i32, i32* %cmd_result, align 4, !dbg !8009
  %and46 = and i32 %105, 16777215, !dbg !8009
  store i32 %and46, i32* %cmd_result, align 4, !dbg !8009
  %106 = load i32, i32* %cmd_result, align 4, !dbg !8010
  %and47 = and i32 %106, 2, !dbg !8012
  %tobool48 = icmp ne i32 %and47, 0, !dbg !8012
  br i1 %tobool48, label %if.then49, label %if.end63, !dbg !8013

if.then49:                                        ; preds = %if.then44
  %sense_key = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 1, !dbg !8014
  %107 = load i8, i8* %sense_key, align 1, !dbg !8014
  %conv50 = zext i8 %107 to i32, !dbg !8017
  %cmp51 = icmp eq i32 %conv50, 1, !dbg !8018
  br i1 %cmp51, label %land.lhs.true, label %if.end62, !dbg !8019

land.lhs.true:                                    ; preds = %if.then49
  %asc = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !8020
  %108 = load i8, i8* %asc, align 1, !dbg !8020
  %conv53 = zext i8 %108 to i32, !dbg !8021
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !8022
  br i1 %cmp54, label %land.lhs.true56, label %if.end62, !dbg !8023

land.lhs.true56:                                  ; preds = %land.lhs.true
  %ascq = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !8024
  %109 = load i8, i8* %ascq, align 1, !dbg !8024
  %conv57 = zext i8 %109 to i32, !dbg !8025
  %cmp58 = icmp eq i32 %conv57, 29, !dbg !8026
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !8027

if.then60:                                        ; preds = %land.lhs.true56
  %110 = load i32, i32* %cmd_result, align 4, !dbg !8028
  %and61 = and i32 %110, -3, !dbg !8028
  store i32 %and61, i32* %cmd_result, align 4, !dbg !8028
  br label %if.end62, !dbg !8029

if.end62:                                         ; preds = %if.then60, %land.lhs.true56, %land.lhs.true, %if.then49
  br label %if.end63, !dbg !8030

if.end63:                                         ; preds = %if.end62, %if.then44
  %arrayidx64 = getelementptr [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !8031
  %111 = load i8, i8* %arrayidx64, align 16, !dbg !8031
  %conv65 = zext i8 %111 to i32, !dbg !8031
  %cmp66 = icmp eq i32 %conv65, 114, !dbg !8032
  br i1 %cmp66, label %land.lhs.true68, label %if.end85, !dbg !8033

land.lhs.true68:                                  ; preds = %if.end63
  %112 = load i8*, i8** %desc, align 8, !dbg !8034
  %arrayidx69 = getelementptr i8, i8* %112, i64 0, !dbg !8034
  %113 = load i8, i8* %arrayidx69, align 1, !dbg !8034
  %conv70 = zext i8 %113 to i32, !dbg !8034
  %cmp71 = icmp eq i32 %conv70, 9, !dbg !8035
  br i1 %cmp71, label %if.then73, label %if.end85, !dbg !8036

if.then73:                                        ; preds = %land.lhs.true68
  %114 = load i8*, i8** %desc, align 8, !dbg !8037
  %arrayidx74 = getelementptr i8, i8* %114, i64 13, !dbg !8037
  %115 = load i8, i8* %arrayidx74, align 1, !dbg !8037
  %arrayidx75 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 0, !dbg !8038
  store i8 %115, i8* %arrayidx75, align 1, !dbg !8039
  %116 = load i8*, i8** %desc, align 8, !dbg !8040
  %arrayidx76 = getelementptr i8, i8* %116, i64 3, !dbg !8040
  %117 = load i8, i8* %arrayidx76, align 1, !dbg !8040
  %arrayidx77 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 1, !dbg !8041
  store i8 %117, i8* %arrayidx77, align 1, !dbg !8042
  %118 = load i8*, i8** %desc, align 8, !dbg !8043
  %arrayidx78 = getelementptr i8, i8* %118, i64 5, !dbg !8043
  %119 = load i8, i8* %arrayidx78, align 1, !dbg !8043
  %arrayidx79 = getelementptr [4 x i8], [4 x i8]* %args, i64 0, i64 2, !dbg !8044
  store i8 %119, i8* %arrayidx79, align 1, !dbg !8045
  %120 = load i8*, i8** %arg.addr, align 8, !dbg !8046
  %arraydecay80 = getelementptr inbounds [4 x i8], [4 x i8]* %args, i64 0, i64 0, !dbg !8047
  store i8* %120, i8** %to.addr.i114, align 8
  store i8* %arraydecay80, i8** %from.addr.i115, align 8
  store i64 4, i64* %n.addr.i116, align 8
  %121 = load i8*, i8** %from.addr.i115, align 8, !dbg !8048
  %122 = load i64, i64* %n.addr.i116, align 8, !dbg !8048
  store i8* %121, i8** %addr.addr.i.i108, align 8
  store i64 %122, i64* %bytes.addr.i.i109, align 8
  store i8 1, i8* %is_source.addr.i.i110, align 1
  store i32 -1, i32* %sz.i.i111, align 4, !dbg !7562
  %123 = load i32, i32* %sz.i.i111, align 4, !dbg !8049
  %cmp.i.i117 = icmp sge i32 %123, 0, !dbg !8049
  br i1 %cmp.i.i117, label %land.rhs.i.i120, label %land.end.i.i124, !dbg !8049

land.rhs.i.i120:                                  ; preds = %if.then73
  %124 = load i32, i32* %sz.i.i111, align 4, !dbg !8049
  %conv.i.i118 = sext i32 %124 to i64, !dbg !8049
  %125 = load i64, i64* %bytes.addr.i.i109, align 8, !dbg !8049
  %cmp1.i.i119 = icmp ult i64 %conv.i.i118, %125, !dbg !8049
  br label %land.end.i.i124

land.end.i.i124:                                  ; preds = %land.rhs.i.i120, %if.then73
  %126 = phi i1 [ false, %if.then73 ], [ %cmp1.i.i119, %land.rhs.i.i120 ], !dbg !8050
  %lnot.i.i121 = xor i1 %126, true, !dbg !8049
  %lnot.ext.i.i122 = zext i1 %126 to i32, !dbg !8049
  %conv4.i.i123 = sext i32 %lnot.ext.i.i122 to i64, !dbg !8049
  br i1 %126, label %if.then.i.i125, label %if.end10.i.i140, !dbg !8051

if.then.i.i125:                                   ; preds = %land.end.i.i124
  %127 = load i64, i64* %bytes.addr.i.i109, align 8, !dbg !8052
  %128 = call i1 @llvm.is.constant.i64(i64 %127) #5, !dbg !8053
  br i1 %128, label %if.else.i.i128, label %if.then5.i.i126, !dbg !8054

if.then5.i.i126:                                  ; preds = %if.then.i.i125
  %129 = load i32, i32* %sz.i.i111, align 4, !dbg !8055
  %130 = load i64, i64* %bytes.addr.i.i109, align 8, !dbg !8056
  call void @copy_overflow(i32 %129, i64 %130) #11, !dbg !8057
  br label %if.end9.i.i132, !dbg !8057

if.else.i.i128:                                   ; preds = %if.then.i.i125
  %131 = load i8, i8* %is_source.addr.i.i110, align 1, !dbg !8058
  %tobool6.i.i127 = trunc i8 %131 to i1, !dbg !8058
  br i1 %tobool6.i.i127, label %if.then7.i.i129, label %if.else8.i.i130, !dbg !8059

if.then7.i.i129:                                  ; preds = %if.else.i.i128
  call void @__bad_copy_from() #11, !dbg !8060
  br label %if.end.i.i131, !dbg !8060

if.else8.i.i130:                                  ; preds = %if.else.i.i128
  call void @__bad_copy_to() #11, !dbg !8061
  br label %if.end.i.i131

if.end.i.i131:                                    ; preds = %if.else8.i.i130, %if.then7.i.i129
  br label %if.end9.i.i132

if.end9.i.i132:                                   ; preds = %if.end.i.i131, %if.then5.i.i126
  store i1 false, i1* %retval.i.i107, align 1, !dbg !8062
  br label %check_copy_size.exit.i154, !dbg !8062

if.end10.i.i140:                                  ; preds = %land.end.i.i124
  %132 = load i64, i64* %bytes.addr.i.i109, align 8, !dbg !7563
  %cmp11.i.i133 = icmp ugt i64 %132, 2147483647, !dbg !7563
  %lnot13.i.i134 = xor i1 %cmp11.i.i133, true, !dbg !7563
  %lnot.ext16.i.i135 = zext i1 %cmp11.i.i133 to i32, !dbg !7563
  store i32 %lnot.ext16.i.i135, i32* %__ret_warn_on.i.i112, align 4, !dbg !7563
  %133 = load i32, i32* %__ret_warn_on.i.i112, align 4, !dbg !8063
  %tobool17.i.i136 = icmp ne i32 %133, 0, !dbg !8063
  %lnot18.i.i137 = xor i1 %tobool17.i.i136, true, !dbg !8063
  %lnot.ext21.i.i138 = zext i1 %tobool17.i.i136 to i32, !dbg !8063
  %conv22.i.i139 = sext i32 %lnot.ext21.i.i138 to i64, !dbg !8063
  br i1 %tobool17.i.i136, label %if.then24.i.i141, label %if.end31.i.i147, !dbg !7563

if.then24.i.i141:                                 ; preds = %if.end10.i.i140
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8064, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8065, !srcloc !7711
  br label %if.end31.i.i147, !dbg !8066

if.end31.i.i147:                                  ; preds = %if.then24.i.i141, %if.end10.i.i140
  %134 = load i32, i32* %__ret_warn_on.i.i112, align 4, !dbg !7563
  %tobool32.i.i142 = icmp ne i32 %134, 0, !dbg !7563
  %lnot33.i.i143 = xor i1 %tobool32.i.i142, true, !dbg !7563
  %lnot.ext36.i.i144 = zext i1 %tobool32.i.i142 to i32, !dbg !7563
  %conv37.i.i145 = sext i32 %lnot.ext36.i.i144 to i64, !dbg !7563
  store i64 %conv37.i.i145, i64* %tmp.i.i113, align 8, !dbg !8063
  %135 = load i64, i64* %tmp.i.i113, align 8, !dbg !7563
  %tobool38.i.i146 = icmp ne i64 %135, 0, !dbg !8067
  br i1 %tobool38.i.i146, label %if.then39.i.i148, label %if.end40.i.i150, !dbg !8068

if.then39.i.i148:                                 ; preds = %if.end31.i.i147
  store i1 false, i1* %retval.i.i107, align 1, !dbg !8069
  br label %check_copy_size.exit.i154, !dbg !8069

if.end40.i.i150:                                  ; preds = %if.end31.i.i147
  %136 = load i8*, i8** %addr.addr.i.i108, align 8, !dbg !8070
  %137 = load i64, i64* %bytes.addr.i.i109, align 8, !dbg !8071
  %138 = load i8, i8* %is_source.addr.i.i110, align 1, !dbg !8072
  %tobool41.i.i149 = trunc i8 %138 to i1, !dbg !8072
  call void @check_object_size(i8* %136, i64 %137, i1 zeroext %tobool41.i.i149) #11, !dbg !8073
  store i1 true, i1* %retval.i.i107, align 1, !dbg !8074
  br label %check_copy_size.exit.i154, !dbg !8074

check_copy_size.exit.i154:                        ; preds = %if.end40.i.i150, %if.then39.i.i148, %if.end9.i.i132
  %139 = load i1, i1* %retval.i.i107, align 1, !dbg !8075
  %lnot.i151 = xor i1 %139, true, !dbg !8048
  %lnot.ext.i152 = zext i1 %139 to i32, !dbg !8048
  %conv.i153 = sext i32 %lnot.ext.i152 to i64, !dbg !8048
  br i1 %139, label %if.then.i156, label %copy_to_user.exit, !dbg !8076

if.then.i156:                                     ; preds = %check_copy_size.exit.i154
  %140 = load i8*, i8** %to.addr.i114, align 8, !dbg !8077
  %141 = load i8*, i8** %from.addr.i115, align 8, !dbg !8078
  %142 = load i64, i64* %n.addr.i116, align 8, !dbg !8079
  %call2.i155 = call i64 @_copy_to_user(i8* %140, i8* %141, i64 %142) #11, !dbg !8080
  store i64 %call2.i155, i64* %n.addr.i116, align 8, !dbg !8081
  br label %copy_to_user.exit, !dbg !8082

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i154, %if.then.i156
  %143 = load i64, i64* %n.addr.i116, align 8, !dbg !8083
  %tobool82 = icmp ne i64 %143, 0, !dbg !8084
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !8085

if.then83:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !8086
  br label %if.end84, !dbg !8087

if.end84:                                         ; preds = %if.then83, %copy_to_user.exit
  br label %if.end85, !dbg !8088

if.end85:                                         ; preds = %if.end84, %land.lhs.true68, %if.end63
  br label %if.end86, !dbg !8089

if.end86:                                         ; preds = %if.end85, %do.end
  %144 = load i32, i32* %cmd_result, align 4, !dbg !8090
  %tobool87 = icmp ne i32 %144, 0, !dbg !8090
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !8092

if.then88:                                        ; preds = %if.end86
  store i32 -5, i32* %rc, align 4, !dbg !8093
  br label %error, !dbg !8095

if.end89:                                         ; preds = %if.end86
  %145 = load i8*, i8** %argbuf, align 8, !dbg !8096
  %tobool90 = icmp ne i8* %145, null, !dbg !8097
  br i1 %tobool90, label %land.lhs.true91, label %if.end97, !dbg !8098

land.lhs.true91:                                  ; preds = %if.end89
  %146 = load i8*, i8** %arg.addr, align 8, !dbg !8099
  %add.ptr92 = getelementptr i8, i8* %146, i64 4, !dbg !8100
  %147 = load i8*, i8** %argbuf, align 8, !dbg !8101
  %148 = load i32, i32* %argsize, align 4, !dbg !8102
  %conv93 = sext i32 %148 to i64, !dbg !8102
  store i8* %add.ptr92, i8** %to.addr.i165, align 8
  store i8* %147, i8** %from.addr.i166, align 8
  store i64 %conv93, i64* %n.addr.i167, align 8
  %149 = load i8*, i8** %from.addr.i166, align 8, !dbg !8103
  %150 = load i64, i64* %n.addr.i167, align 8, !dbg !8103
  store i8* %149, i8** %addr.addr.i.i159, align 8
  store i64 %150, i64* %bytes.addr.i.i160, align 8
  store i8 1, i8* %is_source.addr.i.i161, align 1
  store i32 -1, i32* %sz.i.i162, align 4, !dbg !7541
  %151 = load i32, i32* %sz.i.i162, align 4, !dbg !8104
  %cmp.i.i168 = icmp sge i32 %151, 0, !dbg !8104
  br i1 %cmp.i.i168, label %land.rhs.i.i171, label %land.end.i.i175, !dbg !8104

land.rhs.i.i171:                                  ; preds = %land.lhs.true91
  %152 = load i32, i32* %sz.i.i162, align 4, !dbg !8104
  %conv.i.i169 = sext i32 %152 to i64, !dbg !8104
  %153 = load i64, i64* %bytes.addr.i.i160, align 8, !dbg !8104
  %cmp1.i.i170 = icmp ult i64 %conv.i.i169, %153, !dbg !8104
  br label %land.end.i.i175

land.end.i.i175:                                  ; preds = %land.rhs.i.i171, %land.lhs.true91
  %154 = phi i1 [ false, %land.lhs.true91 ], [ %cmp1.i.i170, %land.rhs.i.i171 ], !dbg !8105
  %lnot.i.i172 = xor i1 %154, true, !dbg !8104
  %lnot.ext.i.i173 = zext i1 %154 to i32, !dbg !8104
  %conv4.i.i174 = sext i32 %lnot.ext.i.i173 to i64, !dbg !8104
  br i1 %154, label %if.then.i.i176, label %if.end10.i.i191, !dbg !8106

if.then.i.i176:                                   ; preds = %land.end.i.i175
  %155 = load i64, i64* %bytes.addr.i.i160, align 8, !dbg !8107
  %156 = call i1 @llvm.is.constant.i64(i64 %155) #5, !dbg !8108
  br i1 %156, label %if.else.i.i179, label %if.then5.i.i177, !dbg !8109

if.then5.i.i177:                                  ; preds = %if.then.i.i176
  %157 = load i32, i32* %sz.i.i162, align 4, !dbg !8110
  %158 = load i64, i64* %bytes.addr.i.i160, align 8, !dbg !8111
  call void @copy_overflow(i32 %157, i64 %158) #11, !dbg !8112
  br label %if.end9.i.i183, !dbg !8112

if.else.i.i179:                                   ; preds = %if.then.i.i176
  %159 = load i8, i8* %is_source.addr.i.i161, align 1, !dbg !8113
  %tobool6.i.i178 = trunc i8 %159 to i1, !dbg !8113
  br i1 %tobool6.i.i178, label %if.then7.i.i180, label %if.else8.i.i181, !dbg !8114

if.then7.i.i180:                                  ; preds = %if.else.i.i179
  call void @__bad_copy_from() #11, !dbg !8115
  br label %if.end.i.i182, !dbg !8115

if.else8.i.i181:                                  ; preds = %if.else.i.i179
  call void @__bad_copy_to() #11, !dbg !8116
  br label %if.end.i.i182

if.end.i.i182:                                    ; preds = %if.else8.i.i181, %if.then7.i.i180
  br label %if.end9.i.i183

if.end9.i.i183:                                   ; preds = %if.end.i.i182, %if.then5.i.i177
  store i1 false, i1* %retval.i.i158, align 1, !dbg !8117
  br label %check_copy_size.exit.i205, !dbg !8117

if.end10.i.i191:                                  ; preds = %land.end.i.i175
  %160 = load i64, i64* %bytes.addr.i.i160, align 8, !dbg !7545
  %cmp11.i.i184 = icmp ugt i64 %160, 2147483647, !dbg !7545
  %lnot13.i.i185 = xor i1 %cmp11.i.i184, true, !dbg !7545
  %lnot.ext16.i.i186 = zext i1 %cmp11.i.i184 to i32, !dbg !7545
  store i32 %lnot.ext16.i.i186, i32* %__ret_warn_on.i.i163, align 4, !dbg !7545
  %161 = load i32, i32* %__ret_warn_on.i.i163, align 4, !dbg !8118
  %tobool17.i.i187 = icmp ne i32 %161, 0, !dbg !8118
  %lnot18.i.i188 = xor i1 %tobool17.i.i187, true, !dbg !8118
  %lnot.ext21.i.i189 = zext i1 %tobool17.i.i187 to i32, !dbg !8118
  %conv22.i.i190 = sext i32 %lnot.ext21.i.i189 to i64, !dbg !8118
  br i1 %tobool17.i.i187, label %if.then24.i.i192, label %if.end31.i.i198, !dbg !7545

if.then24.i.i192:                                 ; preds = %if.end10.i.i191
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8119, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8120, !srcloc !7711
  br label %if.end31.i.i198, !dbg !8121

if.end31.i.i198:                                  ; preds = %if.then24.i.i192, %if.end10.i.i191
  %162 = load i32, i32* %__ret_warn_on.i.i163, align 4, !dbg !7545
  %tobool32.i.i193 = icmp ne i32 %162, 0, !dbg !7545
  %lnot33.i.i194 = xor i1 %tobool32.i.i193, true, !dbg !7545
  %lnot.ext36.i.i195 = zext i1 %tobool32.i.i193 to i32, !dbg !7545
  %conv37.i.i196 = sext i32 %lnot.ext36.i.i195 to i64, !dbg !7545
  store i64 %conv37.i.i196, i64* %tmp.i.i164, align 8, !dbg !8118
  %163 = load i64, i64* %tmp.i.i164, align 8, !dbg !7545
  %tobool38.i.i197 = icmp ne i64 %163, 0, !dbg !8122
  br i1 %tobool38.i.i197, label %if.then39.i.i199, label %if.end40.i.i201, !dbg !8123

if.then39.i.i199:                                 ; preds = %if.end31.i.i198
  store i1 false, i1* %retval.i.i158, align 1, !dbg !8124
  br label %check_copy_size.exit.i205, !dbg !8124

if.end40.i.i201:                                  ; preds = %if.end31.i.i198
  %164 = load i8*, i8** %addr.addr.i.i159, align 8, !dbg !8125
  %165 = load i64, i64* %bytes.addr.i.i160, align 8, !dbg !8126
  %166 = load i8, i8* %is_source.addr.i.i161, align 1, !dbg !8127
  %tobool41.i.i200 = trunc i8 %166 to i1, !dbg !8127
  call void @check_object_size(i8* %164, i64 %165, i1 zeroext %tobool41.i.i200) #11, !dbg !8128
  store i1 true, i1* %retval.i.i158, align 1, !dbg !8129
  br label %check_copy_size.exit.i205, !dbg !8129

check_copy_size.exit.i205:                        ; preds = %if.end40.i.i201, %if.then39.i.i199, %if.end9.i.i183
  %167 = load i1, i1* %retval.i.i158, align 1, !dbg !8130
  %lnot.i202 = xor i1 %167, true, !dbg !8103
  %lnot.ext.i203 = zext i1 %167 to i32, !dbg !8103
  %conv.i204 = sext i32 %lnot.ext.i203 to i64, !dbg !8103
  br i1 %167, label %if.then.i207, label %copy_to_user.exit209, !dbg !8131

if.then.i207:                                     ; preds = %check_copy_size.exit.i205
  %168 = load i8*, i8** %to.addr.i165, align 8, !dbg !8132
  %169 = load i8*, i8** %from.addr.i166, align 8, !dbg !8133
  %170 = load i64, i64* %n.addr.i167, align 8, !dbg !8134
  %call2.i206 = call i64 @_copy_to_user(i8* %168, i8* %169, i64 %170) #11, !dbg !8135
  store i64 %call2.i206, i64* %n.addr.i167, align 8, !dbg !8136
  br label %copy_to_user.exit209, !dbg !8137

copy_to_user.exit209:                             ; preds = %check_copy_size.exit.i205, %if.then.i207
  %171 = load i64, i64* %n.addr.i167, align 8, !dbg !8138
  %tobool95 = icmp ne i64 %171, 0, !dbg !8139
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !8140

if.then96:                                        ; preds = %copy_to_user.exit209
  store i32 -14, i32* %rc, align 4, !dbg !8141
  br label %if.end97, !dbg !8142

if.end97:                                         ; preds = %if.then96, %copy_to_user.exit209, %if.end89
  br label %error, !dbg !8143

error:                                            ; preds = %if.end97, %if.then88, %if.then12
  call void @llvm.dbg.label(metadata !8144), !dbg !8145
  %172 = load i8*, i8** %argbuf, align 8, !dbg !8146
  call void @kfree(i8* %172) #10, !dbg !8147
  %173 = load i32, i32* %rc, align 4, !dbg !8148
  store i32 %173, i32* %retval, align 4, !dbg !8149
  br label %return, !dbg !8149

return:                                           ; preds = %error, %if.then1, %if.then
  %174 = load i32, i32* %retval, align 4, !dbg !8150
  ret i32 %174, !dbg !8150
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local i32 @__scsi_execute(%struct.scsi_device*, i8*, i32, i8*, i32, i8*, %struct.scsi_sense_hdr*, i32, i32, i64, i32, i32*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_task_ioctl(%struct.scsi_device* %scsidev, i8* %arg) #0 !dbg !8151 {
entry:
  %retval.i.i82 = alloca i1, align 1
  %addr.addr.i.i83 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i83, metadata !7522, metadata !DIExpression()), !dbg !8152
  %bytes.addr.i.i84 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i84, metadata !7536, metadata !DIExpression()), !dbg !8160
  %is_source.addr.i.i85 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i85, metadata !7538, metadata !DIExpression()), !dbg !8161
  %sz.i.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i86, metadata !7540, metadata !DIExpression()), !dbg !8162
  %__ret_warn_on.i.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i87, metadata !7542, metadata !DIExpression()), !dbg !8163
  %tmp.i.i88 = alloca i64, align 8
  %to.addr.i89 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i89, metadata !7546, metadata !DIExpression()), !dbg !8164
  %from.addr.i90 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i90, metadata !7548, metadata !DIExpression()), !dbg !8165
  %n.addr.i91 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i91, metadata !7550, metadata !DIExpression()), !dbg !8166
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !7522, metadata !DIExpression()), !dbg !8167
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !7536, metadata !DIExpression()), !dbg !8171
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !7538, metadata !DIExpression()), !dbg !8172
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !7540, metadata !DIExpression()), !dbg !8173
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !7542, metadata !DIExpression()), !dbg !8174
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7634, metadata !DIExpression()), !dbg !8175
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7636, metadata !DIExpression()), !dbg !8176
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7638, metadata !DIExpression()), !dbg !8177
  %retval = alloca i32, align 4
  %scsidev.addr = alloca %struct.scsi_device*, align 8
  %arg.addr = alloca i8*, align 8
  %rc = alloca i32, align 4
  %sensebuf = alloca [96 x i8], align 16
  %scsi_cmd = alloca [16 x i8], align 16
  %args = alloca [7 x i8], align 1
  %sshdr = alloca %struct.scsi_sense_hdr, align 1
  %cmd_result = alloca i32, align 4
  %tmp = alloca i32, align 4
  %desc = alloca i8*, align 8
  store %struct.scsi_device* %scsidev, %struct.scsi_device** %scsidev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsidev.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8182, metadata !DIExpression()), !dbg !8183
  store i32 0, i32* %rc, align 4, !dbg !8183
  call void @llvm.dbg.declare(metadata [96 x i8]* %sensebuf, metadata !8184, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.declare(metadata [16 x i8]* %scsi_cmd, metadata !8186, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.declare(metadata [7 x i8]* %args, metadata !8188, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.declare(metadata %struct.scsi_sense_hdr* %sshdr, metadata !8191, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.declare(metadata i32* %cmd_result, metadata !8193, metadata !DIExpression()), !dbg !8194
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8195
  %cmp = icmp eq i8* %0, null, !dbg !8197
  br i1 %cmp, label %if.then, label %if.end, !dbg !8198

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8199
  br label %return, !dbg !8199

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %args, i64 0, i64 0, !dbg !8200
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8201
  store i8* %arraydecay, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 7, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !8202
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !8202
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8173
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !8203
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !8203
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8203

land.rhs.i.i:                                     ; preds = %if.end
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8203
  %conv.i.i = sext i32 %5 to i64, !dbg !8203
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8203
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !8203
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %7 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8204
  %lnot.i.i = xor i1 %7, true, !dbg !8203
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !8203
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8203
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !8205

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8206
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #5, !dbg !8207
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !8208

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !8209
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8210
  call void @copy_overflow(i32 %10, i64 %11) #11, !dbg !8211
  br label %if.end9.i.i, !dbg !8211

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8212
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !8212
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8213

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8214
  br label %if.end.i.i, !dbg !8214

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8215
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8216
  br label %check_copy_size.exit.i, !dbg !8216

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8174
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !8174
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8174
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8174
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8174
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8217
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !8217
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8217
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8217
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8217
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8174

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8218, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8219, !srcloc !7711
  br label %if.end31.i.i, !dbg !8220

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8174
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !8174
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8174
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8174
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8174
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8217
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !8174
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !8221
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8222

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8223
  br label %check_copy_size.exit.i, !dbg !8223

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8224
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8225
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8226
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !8226
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #11, !dbg !8227
  store i1 true, i1* %retval.i.i, align 1, !dbg !8228
  br label %check_copy_size.exit.i, !dbg !8228

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !8229
  %lnot.i = xor i1 %20, true, !dbg !8202
  %lnot.ext.i = zext i1 %20 to i32, !dbg !8202
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8202
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !8230

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !8231
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !8232
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !8233
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #11, !dbg !8234
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8235
  br label %copy_from_user.exit, !dbg !8236

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8237
  %tobool = icmp ne i64 %24, 0, !dbg !8238
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !8239

if.then1:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8240
  br label %return, !dbg !8240

if.end2:                                          ; preds = %copy_from_user.exit
  %arraydecay3 = getelementptr inbounds [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !8241
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay3, i8 0, i64 96, i1 false), !dbg !8241
  %arraydecay4 = getelementptr inbounds [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 0, !dbg !8242
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay4, i8 0, i64 16, i1 false), !dbg !8242
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 0, !dbg !8243
  store i8 -123, i8* %arrayidx, align 16, !dbg !8244
  %arrayidx5 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 1, !dbg !8245
  store i8 6, i8* %arrayidx5, align 1, !dbg !8246
  %arrayidx6 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 2, !dbg !8247
  store i8 32, i8* %arrayidx6, align 2, !dbg !8248
  %arrayidx7 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 1, !dbg !8249
  %25 = load i8, i8* %arrayidx7, align 1, !dbg !8249
  %arrayidx8 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 4, !dbg !8250
  store i8 %25, i8* %arrayidx8, align 4, !dbg !8251
  %arrayidx9 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 2, !dbg !8252
  %26 = load i8, i8* %arrayidx9, align 1, !dbg !8252
  %arrayidx10 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 6, !dbg !8253
  store i8 %26, i8* %arrayidx10, align 2, !dbg !8254
  %arrayidx11 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 3, !dbg !8255
  %27 = load i8, i8* %arrayidx11, align 1, !dbg !8255
  %arrayidx12 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 8, !dbg !8256
  store i8 %27, i8* %arrayidx12, align 8, !dbg !8257
  %arrayidx13 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 4, !dbg !8258
  %28 = load i8, i8* %arrayidx13, align 1, !dbg !8258
  %arrayidx14 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 10, !dbg !8259
  store i8 %28, i8* %arrayidx14, align 2, !dbg !8260
  %arrayidx15 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 5, !dbg !8261
  %29 = load i8, i8* %arrayidx15, align 1, !dbg !8261
  %arrayidx16 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 12, !dbg !8262
  store i8 %29, i8* %arrayidx16, align 4, !dbg !8263
  %arrayidx17 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 6, !dbg !8264
  %30 = load i8, i8* %arrayidx17, align 1, !dbg !8264
  %conv = zext i8 %30 to i32, !dbg !8264
  %and = and i32 %conv, 79, !dbg !8265
  %conv18 = trunc i32 %and to i8, !dbg !8264
  %arrayidx19 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 13, !dbg !8266
  store i8 %conv18, i8* %arrayidx19, align 1, !dbg !8267
  %arrayidx20 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 0, !dbg !8268
  %31 = load i8, i8* %arrayidx20, align 1, !dbg !8268
  %arrayidx21 = getelementptr [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 14, !dbg !8269
  store i8 %31, i8* %arrayidx21, align 2, !dbg !8270
  br label %do.body, !dbg !8271

do.body:                                          ; preds = %if.end2
  br label %do.end, !dbg !8273

do.end:                                           ; preds = %do.body
  %32 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !8271
  %arraydecay22 = getelementptr inbounds [16 x i8], [16 x i8]* %scsi_cmd, i64 0, i64 0, !dbg !8271
  %arraydecay23 = getelementptr inbounds [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !8271
  %call24 = call i32 @__scsi_execute(%struct.scsi_device* %32, i8* %arraydecay22, i32 3, i8* null, i32 0, i8* %arraydecay23, %struct.scsi_sense_hdr* %sshdr, i32 2500, i32 5, i64 0, i32 0, i32* null) #10, !dbg !8271
  store i32 %call24, i32* %tmp, align 4, !dbg !8273
  %33 = load i32, i32* %tmp, align 4, !dbg !8271
  store i32 %33, i32* %cmd_result, align 4, !dbg !8275
  %34 = load i32, i32* %cmd_result, align 4, !dbg !8276
  %shr = ashr i32 %34, 24, !dbg !8276
  %and25 = and i32 %shr, 255, !dbg !8276
  %cmp26 = icmp eq i32 %and25, 8, !dbg !8277
  br i1 %cmp26, label %if.then28, label %if.end78, !dbg !8278

if.then28:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %desc, metadata !8279, metadata !DIExpression()), !dbg !8280
  %arraydecay29 = getelementptr inbounds [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !8281
  %add.ptr = getelementptr i8, i8* %arraydecay29, i64 8, !dbg !8282
  store i8* %add.ptr, i8** %desc, align 8, !dbg !8280
  %35 = load i32, i32* %cmd_result, align 4, !dbg !8283
  %and30 = and i32 %35, 16777215, !dbg !8283
  store i32 %and30, i32* %cmd_result, align 4, !dbg !8283
  %36 = load i32, i32* %cmd_result, align 4, !dbg !8284
  %and31 = and i32 %36, 2, !dbg !8286
  %tobool32 = icmp ne i32 %and31, 0, !dbg !8286
  br i1 %tobool32, label %if.then33, label %if.end47, !dbg !8287

if.then33:                                        ; preds = %if.then28
  %sense_key = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 1, !dbg !8288
  %37 = load i8, i8* %sense_key, align 1, !dbg !8288
  %conv34 = zext i8 %37 to i32, !dbg !8291
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !8292
  br i1 %cmp35, label %land.lhs.true, label %if.end46, !dbg !8293

land.lhs.true:                                    ; preds = %if.then33
  %asc = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 2, !dbg !8294
  %38 = load i8, i8* %asc, align 1, !dbg !8294
  %conv37 = zext i8 %38 to i32, !dbg !8295
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !8296
  br i1 %cmp38, label %land.lhs.true40, label %if.end46, !dbg !8297

land.lhs.true40:                                  ; preds = %land.lhs.true
  %ascq = getelementptr inbounds %struct.scsi_sense_hdr, %struct.scsi_sense_hdr* %sshdr, i32 0, i32 3, !dbg !8298
  %39 = load i8, i8* %ascq, align 1, !dbg !8298
  %conv41 = zext i8 %39 to i32, !dbg !8299
  %cmp42 = icmp eq i32 %conv41, 29, !dbg !8300
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !8301

if.then44:                                        ; preds = %land.lhs.true40
  %40 = load i32, i32* %cmd_result, align 4, !dbg !8302
  %and45 = and i32 %40, -3, !dbg !8302
  store i32 %and45, i32* %cmd_result, align 4, !dbg !8302
  br label %if.end46, !dbg !8303

if.end46:                                         ; preds = %if.then44, %land.lhs.true40, %land.lhs.true, %if.then33
  br label %if.end47, !dbg !8304

if.end47:                                         ; preds = %if.end46, %if.then28
  %arrayidx48 = getelementptr [96 x i8], [96 x i8]* %sensebuf, i64 0, i64 0, !dbg !8305
  %41 = load i8, i8* %arrayidx48, align 16, !dbg !8305
  %conv49 = zext i8 %41 to i32, !dbg !8305
  %cmp50 = icmp eq i32 %conv49, 114, !dbg !8306
  br i1 %cmp50, label %land.lhs.true52, label %if.end77, !dbg !8307

land.lhs.true52:                                  ; preds = %if.end47
  %42 = load i8*, i8** %desc, align 8, !dbg !8308
  %arrayidx53 = getelementptr i8, i8* %42, i64 0, !dbg !8308
  %43 = load i8, i8* %arrayidx53, align 1, !dbg !8308
  %conv54 = zext i8 %43 to i32, !dbg !8308
  %cmp55 = icmp eq i32 %conv54, 9, !dbg !8309
  br i1 %cmp55, label %if.then57, label %if.end77, !dbg !8310

if.then57:                                        ; preds = %land.lhs.true52
  %44 = load i8*, i8** %desc, align 8, !dbg !8311
  %arrayidx58 = getelementptr i8, i8* %44, i64 13, !dbg !8311
  %45 = load i8, i8* %arrayidx58, align 1, !dbg !8311
  %arrayidx59 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 0, !dbg !8312
  store i8 %45, i8* %arrayidx59, align 1, !dbg !8313
  %46 = load i8*, i8** %desc, align 8, !dbg !8314
  %arrayidx60 = getelementptr i8, i8* %46, i64 3, !dbg !8314
  %47 = load i8, i8* %arrayidx60, align 1, !dbg !8314
  %arrayidx61 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 1, !dbg !8315
  store i8 %47, i8* %arrayidx61, align 1, !dbg !8316
  %48 = load i8*, i8** %desc, align 8, !dbg !8317
  %arrayidx62 = getelementptr i8, i8* %48, i64 5, !dbg !8317
  %49 = load i8, i8* %arrayidx62, align 1, !dbg !8317
  %arrayidx63 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 2, !dbg !8318
  store i8 %49, i8* %arrayidx63, align 1, !dbg !8319
  %50 = load i8*, i8** %desc, align 8, !dbg !8320
  %arrayidx64 = getelementptr i8, i8* %50, i64 7, !dbg !8320
  %51 = load i8, i8* %arrayidx64, align 1, !dbg !8320
  %arrayidx65 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 3, !dbg !8321
  store i8 %51, i8* %arrayidx65, align 1, !dbg !8322
  %52 = load i8*, i8** %desc, align 8, !dbg !8323
  %arrayidx66 = getelementptr i8, i8* %52, i64 9, !dbg !8323
  %53 = load i8, i8* %arrayidx66, align 1, !dbg !8323
  %arrayidx67 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 4, !dbg !8324
  store i8 %53, i8* %arrayidx67, align 1, !dbg !8325
  %54 = load i8*, i8** %desc, align 8, !dbg !8326
  %arrayidx68 = getelementptr i8, i8* %54, i64 11, !dbg !8326
  %55 = load i8, i8* %arrayidx68, align 1, !dbg !8326
  %arrayidx69 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 5, !dbg !8327
  store i8 %55, i8* %arrayidx69, align 1, !dbg !8328
  %56 = load i8*, i8** %desc, align 8, !dbg !8329
  %arrayidx70 = getelementptr i8, i8* %56, i64 12, !dbg !8329
  %57 = load i8, i8* %arrayidx70, align 1, !dbg !8329
  %arrayidx71 = getelementptr [7 x i8], [7 x i8]* %args, i64 0, i64 6, !dbg !8330
  store i8 %57, i8* %arrayidx71, align 1, !dbg !8331
  %58 = load i8*, i8** %arg.addr, align 8, !dbg !8332
  %arraydecay72 = getelementptr inbounds [7 x i8], [7 x i8]* %args, i64 0, i64 0, !dbg !8333
  store i8* %58, i8** %to.addr.i89, align 8
  store i8* %arraydecay72, i8** %from.addr.i90, align 8
  store i64 7, i64* %n.addr.i91, align 8
  %59 = load i8*, i8** %from.addr.i90, align 8, !dbg !8334
  %60 = load i64, i64* %n.addr.i91, align 8, !dbg !8334
  store i8* %59, i8** %addr.addr.i.i83, align 8
  store i64 %60, i64* %bytes.addr.i.i84, align 8
  store i8 1, i8* %is_source.addr.i.i85, align 1
  store i32 -1, i32* %sz.i.i86, align 4, !dbg !8162
  %61 = load i32, i32* %sz.i.i86, align 4, !dbg !8335
  %cmp.i.i92 = icmp sge i32 %61, 0, !dbg !8335
  br i1 %cmp.i.i92, label %land.rhs.i.i95, label %land.end.i.i99, !dbg !8335

land.rhs.i.i95:                                   ; preds = %if.then57
  %62 = load i32, i32* %sz.i.i86, align 4, !dbg !8335
  %conv.i.i93 = sext i32 %62 to i64, !dbg !8335
  %63 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8335
  %cmp1.i.i94 = icmp ult i64 %conv.i.i93, %63, !dbg !8335
  br label %land.end.i.i99

land.end.i.i99:                                   ; preds = %land.rhs.i.i95, %if.then57
  %64 = phi i1 [ false, %if.then57 ], [ %cmp1.i.i94, %land.rhs.i.i95 ], !dbg !8336
  %lnot.i.i96 = xor i1 %64, true, !dbg !8335
  %lnot.ext.i.i97 = zext i1 %64 to i32, !dbg !8335
  %conv4.i.i98 = sext i32 %lnot.ext.i.i97 to i64, !dbg !8335
  br i1 %64, label %if.then.i.i100, label %if.end10.i.i115, !dbg !8337

if.then.i.i100:                                   ; preds = %land.end.i.i99
  %65 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8338
  %66 = call i1 @llvm.is.constant.i64(i64 %65) #5, !dbg !8339
  br i1 %66, label %if.else.i.i103, label %if.then5.i.i101, !dbg !8340

if.then5.i.i101:                                  ; preds = %if.then.i.i100
  %67 = load i32, i32* %sz.i.i86, align 4, !dbg !8341
  %68 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8342
  call void @copy_overflow(i32 %67, i64 %68) #11, !dbg !8343
  br label %if.end9.i.i107, !dbg !8343

if.else.i.i103:                                   ; preds = %if.then.i.i100
  %69 = load i8, i8* %is_source.addr.i.i85, align 1, !dbg !8344
  %tobool6.i.i102 = trunc i8 %69 to i1, !dbg !8344
  br i1 %tobool6.i.i102, label %if.then7.i.i104, label %if.else8.i.i105, !dbg !8345

if.then7.i.i104:                                  ; preds = %if.else.i.i103
  call void @__bad_copy_from() #11, !dbg !8346
  br label %if.end.i.i106, !dbg !8346

if.else8.i.i105:                                  ; preds = %if.else.i.i103
  call void @__bad_copy_to() #11, !dbg !8347
  br label %if.end.i.i106

if.end.i.i106:                                    ; preds = %if.else8.i.i105, %if.then7.i.i104
  br label %if.end9.i.i107

if.end9.i.i107:                                   ; preds = %if.end.i.i106, %if.then5.i.i101
  store i1 false, i1* %retval.i.i82, align 1, !dbg !8348
  br label %check_copy_size.exit.i129, !dbg !8348

if.end10.i.i115:                                  ; preds = %land.end.i.i99
  %70 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8163
  %cmp11.i.i108 = icmp ugt i64 %70, 2147483647, !dbg !8163
  %lnot13.i.i109 = xor i1 %cmp11.i.i108, true, !dbg !8163
  %lnot.ext16.i.i110 = zext i1 %cmp11.i.i108 to i32, !dbg !8163
  store i32 %lnot.ext16.i.i110, i32* %__ret_warn_on.i.i87, align 4, !dbg !8163
  %71 = load i32, i32* %__ret_warn_on.i.i87, align 4, !dbg !8349
  %tobool17.i.i111 = icmp ne i32 %71, 0, !dbg !8349
  %lnot18.i.i112 = xor i1 %tobool17.i.i111, true, !dbg !8349
  %lnot.ext21.i.i113 = zext i1 %tobool17.i.i111 to i32, !dbg !8349
  %conv22.i.i114 = sext i32 %lnot.ext21.i.i113 to i64, !dbg !8349
  br i1 %tobool17.i.i111, label %if.then24.i.i116, label %if.end31.i.i122, !dbg !8163

if.then24.i.i116:                                 ; preds = %if.end10.i.i115
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8350, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8351, !srcloc !7711
  br label %if.end31.i.i122, !dbg !8352

if.end31.i.i122:                                  ; preds = %if.then24.i.i116, %if.end10.i.i115
  %72 = load i32, i32* %__ret_warn_on.i.i87, align 4, !dbg !8163
  %tobool32.i.i117 = icmp ne i32 %72, 0, !dbg !8163
  %lnot33.i.i118 = xor i1 %tobool32.i.i117, true, !dbg !8163
  %lnot.ext36.i.i119 = zext i1 %tobool32.i.i117 to i32, !dbg !8163
  %conv37.i.i120 = sext i32 %lnot.ext36.i.i119 to i64, !dbg !8163
  store i64 %conv37.i.i120, i64* %tmp.i.i88, align 8, !dbg !8349
  %73 = load i64, i64* %tmp.i.i88, align 8, !dbg !8163
  %tobool38.i.i121 = icmp ne i64 %73, 0, !dbg !8353
  br i1 %tobool38.i.i121, label %if.then39.i.i123, label %if.end40.i.i125, !dbg !8354

if.then39.i.i123:                                 ; preds = %if.end31.i.i122
  store i1 false, i1* %retval.i.i82, align 1, !dbg !8355
  br label %check_copy_size.exit.i129, !dbg !8355

if.end40.i.i125:                                  ; preds = %if.end31.i.i122
  %74 = load i8*, i8** %addr.addr.i.i83, align 8, !dbg !8356
  %75 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8357
  %76 = load i8, i8* %is_source.addr.i.i85, align 1, !dbg !8358
  %tobool41.i.i124 = trunc i8 %76 to i1, !dbg !8358
  call void @check_object_size(i8* %74, i64 %75, i1 zeroext %tobool41.i.i124) #11, !dbg !8359
  store i1 true, i1* %retval.i.i82, align 1, !dbg !8360
  br label %check_copy_size.exit.i129, !dbg !8360

check_copy_size.exit.i129:                        ; preds = %if.end40.i.i125, %if.then39.i.i123, %if.end9.i.i107
  %77 = load i1, i1* %retval.i.i82, align 1, !dbg !8361
  %lnot.i126 = xor i1 %77, true, !dbg !8334
  %lnot.ext.i127 = zext i1 %77 to i32, !dbg !8334
  %conv.i128 = sext i32 %lnot.ext.i127 to i64, !dbg !8334
  br i1 %77, label %if.then.i131, label %copy_to_user.exit, !dbg !8362

if.then.i131:                                     ; preds = %check_copy_size.exit.i129
  %78 = load i8*, i8** %to.addr.i89, align 8, !dbg !8363
  %79 = load i8*, i8** %from.addr.i90, align 8, !dbg !8364
  %80 = load i64, i64* %n.addr.i91, align 8, !dbg !8365
  %call2.i130 = call i64 @_copy_to_user(i8* %78, i8* %79, i64 %80) #11, !dbg !8366
  store i64 %call2.i130, i64* %n.addr.i91, align 8, !dbg !8367
  br label %copy_to_user.exit, !dbg !8368

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i129, %if.then.i131
  %81 = load i64, i64* %n.addr.i91, align 8, !dbg !8369
  %tobool74 = icmp ne i64 %81, 0, !dbg !8370
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !8371

if.then75:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !8372
  br label %if.end76, !dbg !8373

if.end76:                                         ; preds = %if.then75, %copy_to_user.exit
  br label %if.end77, !dbg !8374

if.end77:                                         ; preds = %if.end76, %land.lhs.true52, %if.end47
  br label %if.end78, !dbg !8375

if.end78:                                         ; preds = %if.end77, %do.end
  %82 = load i32, i32* %cmd_result, align 4, !dbg !8376
  %tobool79 = icmp ne i32 %82, 0, !dbg !8376
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !8378

if.then80:                                        ; preds = %if.end78
  store i32 -5, i32* %rc, align 4, !dbg !8379
  br label %error, !dbg !8381

if.end81:                                         ; preds = %if.end78
  br label %error, !dbg !8376

error:                                            ; preds = %if.end81, %if.then80
  call void @llvm.dbg.label(metadata !8382), !dbg !8383
  %83 = load i32, i32* %rc, align 4, !dbg !8384
  store i32 %83, i32* %retval, align 4, !dbg !8385
  br label %return, !dbg !8385

return:                                           ; preds = %error, %if.then1, %if.then
  %84 = load i32, i32* %retval, align 4, !dbg !8386
  ret i32 %84, !dbg !8386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sas_scsi_ioctl(%struct.ata_port* %ap, %struct.scsi_device* %scsidev, i32 %cmd, i8* %arg) #0 !dbg !8387 {
entry:
  %lock.addr.i88 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i88, metadata !7129, metadata !DIExpression()), !dbg !8390
  %flags.addr.i89 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i89, metadata !7135, metadata !DIExpression()), !dbg !8393
  %tmp.i90 = alloca i32, align 4
  %tmp8.i91 = alloca i32, align 4
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !7137, metadata !DIExpression()), !dbg !8394
  %lock.addr.i84 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i84, metadata !7129, metadata !DIExpression()), !dbg !8401
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !8403
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !8404
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %scsidev.addr = alloca %struct.scsi_device*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %val = alloca i64, align 8
  %rc = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp22 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i64, align 8
  %tmp24 = alloca i64, align 8
  %__dummy30 = alloca i64, align 8
  %__dummy231 = alloca i64, align 8
  %tmp34 = alloca i32, align 4
  %__dummy38 = alloca i64, align 8
  %__dummy239 = alloca i64, align 8
  %tmp42 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8411, metadata !DIExpression()), !dbg !8412
  store %struct.scsi_device* %scsidev, %struct.scsi_device** %scsidev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsidev.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8415, metadata !DIExpression()), !dbg !8416
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.declare(metadata i64* %val, metadata !8419, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8421, metadata !DIExpression()), !dbg !8422
  store i32 -22, i32* %rc, align 4, !dbg !8422
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8423, metadata !DIExpression()), !dbg !8424
  %0 = load i32, i32* %cmd.addr, align 4, !dbg !8425
  switch i32 %0, label %sw.default [
    i32 777, label %sw.bb
    i32 804, label %sw.bb27
    i32 781, label %sw.bb69
    i32 799, label %sw.bb71
    i32 798, label %sw.bb77
  ], !dbg !8426

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !8427

do.body:                                          ; preds = %sw.bb
  br label %do.body1, !dbg !8428

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8429, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8432, metadata !DIExpression()), !dbg !8431
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8431
  %conv = zext i1 %cmp to i32, !dbg !8431
  store i32 1, i32* %tmp, align 4, !dbg !8431
  %1 = load i32, i32* %tmp, align 4, !dbg !8431
  br label %do.body2, !dbg !8433

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8434

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8435

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8437, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8441, metadata !DIExpression()), !dbg !8440
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8440
  %conv8 = zext i1 %cmp7 to i32, !dbg !8440
  store i32 1, i32* %tmp9, align 4, !dbg !8440
  %2 = load i32, i32* %tmp9, align 4, !dbg !8440
  %call = call i64 @arch_local_irq_save() #10, !dbg !8442
  store i64 %call, i64* %flags, align 8, !dbg !8442
  br label %do.end, !dbg !8442

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8435

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8434

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8443, !srcloc !8444
  br label %do.body12, !dbg !8443

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8445
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 2, !dbg !8445
  %4 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8445
  store %struct.spinlock* %4, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8446
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !8447
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !8447
  br label %do.end14, !dbg !8445

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8443

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8434

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8433

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8428

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8448
  %call19 = call i32 @ata_ioc32(%struct.ata_port* %7) #10, !dbg !8449
  %conv20 = sext i32 %call19 to i64, !dbg !8449
  store i64 %conv20, i64* %val, align 8, !dbg !8450
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8451
  %lock21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !8452
  %9 = load %struct.spinlock*, %struct.spinlock** %lock21, align 16, !dbg !8452
  %10 = load i64, i64* %flags, align 8, !dbg !8453
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i84, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !8454
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !8454
  store i32 1, i32* %tmp.i, align 4, !dbg !8454
  %11 = load i32, i32* %tmp.i, align 4, !dbg !8454
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !8455
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !8455
  store i32 1, i32* %tmp8.i, align 4, !dbg !8455
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !8455
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !8456
  call void @arch_local_irq_restore(i64 %13) #11, !dbg !8456
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8457, !srcloc !7307
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i84, align 8, !dbg !8458
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !8458
  %rlock.i85 = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !8458
  call void @might_fault() #10, !dbg !8459
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !8461, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !8464, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.declare(metadata i64* %__val_pu, metadata !8465, metadata !DIExpression()), !dbg !8463
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !8463
  %17 = bitcast i8* %16 to i64*, !dbg !8463
  %18 = bitcast i64* %17 to i8*, !dbg !8463
  store i8* %18, i8** %__ptr_pu, align 8, !dbg !8463
  %19 = load i64, i64* %val, align 8, !dbg !8463
  store i64 %19, i64* %__val_pu, align 8, !dbg !8463
  %20 = call i64 @llvm.read_register.i64(metadata !7007), !dbg !8463
  %21 = load i8*, i8** %__ptr_pu, align 8, !dbg !8463
  %22 = load i64, i64* %__val_pu, align 8, !dbg !8463
  %23 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %21, i64 %22, i64 8, i64 %20) #5, !dbg !8463, !srcloc !8466
  %asmresult = extractvalue { i8*, i64 } %23, 0, !dbg !8463
  %asmresult23 = extractvalue { i8*, i64 } %23, 1, !dbg !8463
  %24 = ptrtoint i8* %asmresult to i64, !dbg !8463
  %25 = trunc i64 %24 to i32, !dbg !8463
  store i32 %25, i32* %__ret_pu, align 4, !dbg !8463
  call void @llvm.write_register.i64(metadata !7007, i64 %asmresult23), !dbg !8463
  %26 = load i32, i32* %__ret_pu, align 4, !dbg !8463
  %conv25 = sext i32 %26 to i64, !dbg !8463
  store i64 %conv25, i64* %tmp24, align 8, !dbg !8463
  %27 = load i64, i64* %tmp24, align 8, !dbg !8463
  store i64 %27, i64* %tmp22, align 8, !dbg !8459
  %28 = load i64, i64* %tmp22, align 8, !dbg !8459
  %conv26 = trunc i64 %28 to i32, !dbg !8467
  store i32 %conv26, i32* %retval, align 4, !dbg !8468
  br label %return, !dbg !8468

sw.bb27:                                          ; preds = %entry
  %29 = load i8*, i8** %arg.addr, align 8, !dbg !8469
  %30 = ptrtoint i8* %29 to i64, !dbg !8470
  store i64 %30, i64* %val, align 8, !dbg !8471
  store i32 0, i32* %rc, align 4, !dbg !8472
  br label %do.body28, !dbg !8473

do.body28:                                        ; preds = %sw.bb27
  br label %do.body29, !dbg !8474

do.body29:                                        ; preds = %do.body28
  call void @llvm.dbg.declare(metadata i64* %__dummy30, metadata !8475, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata i64* %__dummy231, metadata !8478, metadata !DIExpression()), !dbg !8477
  %cmp32 = icmp eq i64* %__dummy30, %__dummy231, !dbg !8477
  %conv33 = zext i1 %cmp32 to i32, !dbg !8477
  store i32 1, i32* %tmp34, align 4, !dbg !8477
  %31 = load i32, i32* %tmp34, align 4, !dbg !8477
  br label %do.body35, !dbg !8479

do.body35:                                        ; preds = %do.body29
  br label %do.body36, !dbg !8480

do.body36:                                        ; preds = %do.body35
  br label %do.body37, !dbg !8481

do.body37:                                        ; preds = %do.body36
  call void @llvm.dbg.declare(metadata i64* %__dummy38, metadata !8483, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.declare(metadata i64* %__dummy239, metadata !8487, metadata !DIExpression()), !dbg !8486
  %cmp40 = icmp eq i64* %__dummy38, %__dummy239, !dbg !8486
  %conv41 = zext i1 %cmp40 to i32, !dbg !8486
  store i32 1, i32* %tmp42, align 4, !dbg !8486
  %32 = load i32, i32* %tmp42, align 4, !dbg !8486
  %call43 = call i64 @arch_local_irq_save() #10, !dbg !8488
  store i64 %call43, i64* %flags, align 8, !dbg !8488
  br label %do.end44, !dbg !8488

do.end44:                                         ; preds = %do.body37
  br label %do.end45, !dbg !8481

do.end45:                                         ; preds = %do.end44
  br label %do.body46, !dbg !8480

do.body46:                                        ; preds = %do.end45
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8489, !srcloc !8490
  br label %do.body47, !dbg !8489

do.body47:                                        ; preds = %do.body46
  %33 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8491
  %lock48 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %33, i32 0, i32 2, !dbg !8491
  %34 = load %struct.spinlock*, %struct.spinlock** %lock48, align 16, !dbg !8491
  store %struct.spinlock* %34, %struct.spinlock** %lock.addr.i86, align 8
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !8492
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !8493
  %rlock.i87 = bitcast %union.anon.1* %36 to %struct.raw_spinlock*, !dbg !8493
  br label %do.end50, !dbg !8491

do.end50:                                         ; preds = %do.body47
  br label %do.end51, !dbg !8489

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !8480

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !8479

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !8474

do.end54:                                         ; preds = %do.end53
  %37 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8494
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 4, !dbg !8496
  %38 = load i32, i32* %pflags, align 32, !dbg !8496
  %and = and i32 %38, 2097152, !dbg !8497
  %tobool = icmp ne i32 %and, 0, !dbg !8497
  br i1 %tobool, label %if.then, label %if.else60, !dbg !8498

if.then:                                          ; preds = %do.end54
  %39 = load i64, i64* %val, align 8, !dbg !8499
  %tobool55 = icmp ne i64 %39, 0, !dbg !8499
  br i1 %tobool55, label %if.then56, label %if.else, !dbg !8502

if.then56:                                        ; preds = %if.then
  %40 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8503
  %pflags57 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %40, i32 0, i32 4, !dbg !8504
  %41 = load i32, i32* %pflags57, align 32, !dbg !8505
  %or = or i32 %41, 1048576, !dbg !8505
  store i32 %or, i32* %pflags57, align 32, !dbg !8505
  br label %if.end, !dbg !8503

if.else:                                          ; preds = %if.then
  %42 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8506
  %pflags58 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 4, !dbg !8507
  %43 = load i32, i32* %pflags58, align 32, !dbg !8508
  %and59 = and i32 %43, -1048577, !dbg !8508
  store i32 %and59, i32* %pflags58, align 32, !dbg !8508
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then56
  br label %if.end67, !dbg !8509

if.else60:                                        ; preds = %do.end54
  %44 = load i64, i64* %val, align 8, !dbg !8510
  %45 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8513
  %call61 = call i32 @ata_ioc32(%struct.ata_port* %45) #10, !dbg !8514
  %conv62 = sext i32 %call61 to i64, !dbg !8514
  %cmp63 = icmp ne i64 %44, %conv62, !dbg !8515
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !8516

if.then65:                                        ; preds = %if.else60
  store i32 -22, i32* %rc, align 4, !dbg !8517
  br label %if.end66, !dbg !8518

if.end66:                                         ; preds = %if.then65, %if.else60
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end
  %46 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8519
  %lock68 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %46, i32 0, i32 2, !dbg !8520
  %47 = load %struct.spinlock*, %struct.spinlock** %lock68, align 16, !dbg !8520
  %48 = load i64, i64* %flags, align 8, !dbg !8521
  store %struct.spinlock* %47, %struct.spinlock** %lock.addr.i88, align 8
  store i64 %48, i64* %flags.addr.i89, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !8522
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !8522
  store i32 1, i32* %tmp.i90, align 4, !dbg !8522
  %49 = load i32, i32* %tmp.i90, align 4, !dbg !8522
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !8523
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !8523
  store i32 1, i32* %tmp8.i91, align 4, !dbg !8523
  %50 = load i32, i32* %tmp8.i91, align 4, !dbg !8523
  %51 = load i64, i64* %flags.addr.i89, align 8, !dbg !8524
  call void @arch_local_irq_restore(i64 %51) #11, !dbg !8524
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8525, !srcloc !7307
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i88, align 8, !dbg !8526
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !8526
  %rlock.i92 = bitcast %union.anon.1* %53 to %struct.raw_spinlock*, !dbg !8526
  %54 = load i32, i32* %rc, align 4, !dbg !8527
  store i32 %54, i32* %retval, align 4, !dbg !8528
  br label %return, !dbg !8528

sw.bb69:                                          ; preds = %entry
  %55 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8529
  %56 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !8530
  %57 = load i8*, i8** %arg.addr, align 8, !dbg !8531
  %call70 = call i32 @ata_get_identity(%struct.ata_port* %55, %struct.scsi_device* %56, i8* %57) #10, !dbg !8532
  store i32 %call70, i32* %retval, align 4, !dbg !8533
  br label %return, !dbg !8533

sw.bb71:                                          ; preds = %entry
  %call72 = call zeroext i1 @capable(i32 21) #10, !dbg !8534
  br i1 %call72, label %lor.lhs.false, label %if.then74, !dbg !8536

lor.lhs.false:                                    ; preds = %sw.bb71
  %call73 = call zeroext i1 @capable(i32 17) #10, !dbg !8537
  br i1 %call73, label %if.end75, label %if.then74, !dbg !8538

if.then74:                                        ; preds = %lor.lhs.false, %sw.bb71
  store i32 -13, i32* %retval, align 4, !dbg !8539
  br label %return, !dbg !8539

if.end75:                                         ; preds = %lor.lhs.false
  %58 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !8540
  %59 = load i8*, i8** %arg.addr, align 8, !dbg !8541
  %call76 = call i32 @ata_cmd_ioctl(%struct.scsi_device* %58, i8* %59) #10, !dbg !8542
  store i32 %call76, i32* %retval, align 4, !dbg !8543
  br label %return, !dbg !8543

sw.bb77:                                          ; preds = %entry
  %call78 = call zeroext i1 @capable(i32 21) #10, !dbg !8544
  br i1 %call78, label %lor.lhs.false79, label %if.then81, !dbg !8546

lor.lhs.false79:                                  ; preds = %sw.bb77
  %call80 = call zeroext i1 @capable(i32 17) #10, !dbg !8547
  br i1 %call80, label %if.end82, label %if.then81, !dbg !8548

if.then81:                                        ; preds = %lor.lhs.false79, %sw.bb77
  store i32 -13, i32* %retval, align 4, !dbg !8549
  br label %return, !dbg !8549

if.end82:                                         ; preds = %lor.lhs.false79
  %60 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !8550
  %61 = load i8*, i8** %arg.addr, align 8, !dbg !8551
  %call83 = call i32 @ata_task_ioctl(%struct.scsi_device* %60, i8* %61) #10, !dbg !8552
  store i32 %call83, i32* %retval, align 4, !dbg !8553
  br label %return, !dbg !8553

sw.default:                                       ; preds = %entry
  store i32 -25, i32* %rc, align 4, !dbg !8554
  br label %sw.epilog, !dbg !8555

sw.epilog:                                        ; preds = %sw.default
  %62 = load i32, i32* %rc, align 4, !dbg !8556
  store i32 %62, i32* %retval, align 4, !dbg !8557
  br label %return, !dbg !8557

return:                                           ; preds = %sw.epilog, %if.end82, %if.then81, %if.end75, %if.then74, %sw.bb69, %if.end67, %do.end18
  %63 = load i32, i32* %retval, align 4, !dbg !8558
  ret i32 %63, !dbg !8558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_ioc32(%struct.ata_port* %ap) #0 !dbg !8559 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8562
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 3, !dbg !8564
  %1 = load i64, i64* %flags, align 8, !dbg !8564
  %and = and i64 %1, 128, !dbg !8565
  %tobool = icmp ne i64 %and, 0, !dbg !8565
  br i1 %tobool, label %if.then, label %if.end, !dbg !8566

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8567
  br label %return, !dbg !8567

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8568
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 4, !dbg !8570
  %3 = load i32, i32* %pflags, align 32, !dbg !8570
  %and1 = and i32 %3, 1048576, !dbg !8571
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8571
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8572

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !8573
  br label %return, !dbg !8573

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8574
  br label %return, !dbg !8574

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8575
  ret i32 %4, !dbg !8575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !8576 {
entry:
  ret void, !dbg !8577
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #4

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_get_identity(%struct.ata_port* %ap, %struct.scsi_device* %sdev, i8* %arg) #0 !dbg !8578 {
entry:
  %retval.i.i133 = alloca i1, align 1
  %addr.addr.i.i134 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i134, metadata !7522, metadata !DIExpression()), !dbg !8581
  %bytes.addr.i.i135 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i135, metadata !7536, metadata !DIExpression()), !dbg !8585
  %is_source.addr.i.i136 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i136, metadata !7538, metadata !DIExpression()), !dbg !8586
  %sz.i.i137 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i137, metadata !7540, metadata !DIExpression()), !dbg !8587
  %__ret_warn_on.i.i138 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i138, metadata !7542, metadata !DIExpression()), !dbg !8588
  %tmp.i.i139 = alloca i64, align 8
  %to.addr.i140 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i140, metadata !7546, metadata !DIExpression()), !dbg !8589
  %from.addr.i141 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i141, metadata !7548, metadata !DIExpression()), !dbg !8590
  %n.addr.i142 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i142, metadata !7550, metadata !DIExpression()), !dbg !8591
  %retval.i.i82 = alloca i1, align 1
  %addr.addr.i.i83 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i83, metadata !7522, metadata !DIExpression()), !dbg !8592
  %bytes.addr.i.i84 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i84, metadata !7536, metadata !DIExpression()), !dbg !8596
  %is_source.addr.i.i85 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i85, metadata !7538, metadata !DIExpression()), !dbg !8597
  %sz.i.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i86, metadata !7540, metadata !DIExpression()), !dbg !8598
  %__ret_warn_on.i.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i87, metadata !7542, metadata !DIExpression()), !dbg !8599
  %tmp.i.i88 = alloca i64, align 8
  %to.addr.i89 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i89, metadata !7546, metadata !DIExpression()), !dbg !8600
  %from.addr.i90 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i90, metadata !7548, metadata !DIExpression()), !dbg !8601
  %n.addr.i91 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i91, metadata !7550, metadata !DIExpression()), !dbg !8602
  %retval.i.i31 = alloca i1, align 1
  %addr.addr.i.i32 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i32, metadata !7522, metadata !DIExpression()), !dbg !8603
  %bytes.addr.i.i33 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i33, metadata !7536, metadata !DIExpression()), !dbg !8607
  %is_source.addr.i.i34 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i34, metadata !7538, metadata !DIExpression()), !dbg !8608
  %sz.i.i35 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i35, metadata !7540, metadata !DIExpression()), !dbg !8609
  %__ret_warn_on.i.i36 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i36, metadata !7542, metadata !DIExpression()), !dbg !8610
  %tmp.i.i37 = alloca i64, align 8
  %to.addr.i38 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i38, metadata !7546, metadata !DIExpression()), !dbg !8611
  %from.addr.i39 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i39, metadata !7548, metadata !DIExpression()), !dbg !8612
  %n.addr.i40 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i40, metadata !7550, metadata !DIExpression()), !dbg !8613
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !7522, metadata !DIExpression()), !dbg !8614
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !7536, metadata !DIExpression()), !dbg !8618
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !7538, metadata !DIExpression()), !dbg !8619
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !7540, metadata !DIExpression()), !dbg !8620
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !7542, metadata !DIExpression()), !dbg !8621
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7546, metadata !DIExpression()), !dbg !8622
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7548, metadata !DIExpression()), !dbg !8623
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7550, metadata !DIExpression()), !dbg !8624
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %arg.addr = alloca i8*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %dst = alloca i16*, align 8
  %buf = alloca [40 x i8], align 16
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8625, metadata !DIExpression()), !dbg !8626
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8629, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !8631, metadata !DIExpression()), !dbg !8632
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8633
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8634
  %call = call %struct.ata_device* @ata_scsi_find_dev(%struct.ata_port* %0, %struct.scsi_device* %1) #10, !dbg !8635
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !8632
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8636, metadata !DIExpression()), !dbg !8637
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !8638
  %3 = bitcast i8* %2 to i16*, !dbg !8638
  store i16* %3, i16** %dst, align 8, !dbg !8637
  call void @llvm.dbg.declare(metadata [40 x i8]* %buf, metadata !8639, metadata !DIExpression()), !dbg !8643
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8644
  %tobool = icmp ne %struct.ata_device* %4, null, !dbg !8644
  br i1 %tobool, label %if.end, label %if.then, !dbg !8646

if.then:                                          ; preds = %entry
  store i32 -42, i32* %retval, align 4, !dbg !8647
  br label %return, !dbg !8647

if.end:                                           ; preds = %entry
  %5 = load i16*, i16** %dst, align 8, !dbg !8648
  %6 = bitcast i16* %5 to i8*, !dbg !8648
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8649
  %8 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 27, !dbg !8650
  %id = bitcast %union.anon.90* %8 to [256 x i16]*, !dbg !8650
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !8649
  %9 = bitcast i16* %arraydecay to i8*, !dbg !8649
  store i8* %6, i8** %to.addr.i, align 8
  store i8* %9, i8** %from.addr.i, align 8
  store i64 512, i64* %n.addr.i, align 8
  %10 = load i8*, i8** %from.addr.i, align 8, !dbg !8651
  %11 = load i64, i64* %n.addr.i, align 8, !dbg !8651
  store i8* %10, i8** %addr.addr.i.i, align 8
  store i64 %11, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8620
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !8652
  %cmp.i.i = icmp sge i32 %12, 0, !dbg !8652
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8652

land.rhs.i.i:                                     ; preds = %if.end
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !8652
  %conv.i.i = sext i32 %13 to i64, !dbg !8652
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8652
  %cmp1.i.i = icmp ult i64 %conv.i.i, %14, !dbg !8652
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %15 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8653
  %lnot.i.i = xor i1 %15, true, !dbg !8652
  %lnot.ext.i.i = zext i1 %15 to i32, !dbg !8652
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8652
  br i1 %15, label %if.then.i.i, label %if.end10.i.i, !dbg !8654

if.then.i.i:                                      ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8655
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #5, !dbg !8656
  br i1 %17, label %if.else.i.i, label %if.then5.i.i, !dbg !8657

if.then5.i.i:                                     ; preds = %if.then.i.i
  %18 = load i32, i32* %sz.i.i, align 4, !dbg !8658
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8659
  call void @copy_overflow(i32 %18, i64 %19) #11, !dbg !8660
  br label %if.end9.i.i, !dbg !8660

if.else.i.i:                                      ; preds = %if.then.i.i
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8661
  %tobool6.i.i = trunc i8 %20 to i1, !dbg !8661
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8662

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8663
  br label %if.end.i.i, !dbg !8663

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8664
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8665
  br label %check_copy_size.exit.i, !dbg !8665

if.end10.i.i:                                     ; preds = %land.end.i.i
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8621
  %cmp11.i.i = icmp ugt i64 %21, 2147483647, !dbg !8621
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8621
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8621
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8621
  %22 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8666
  %tobool17.i.i = icmp ne i32 %22, 0, !dbg !8666
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8666
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8666
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8666
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8621

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8667, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8668, !srcloc !7711
  br label %if.end31.i.i, !dbg !8669

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %23 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8621
  %tobool32.i.i = icmp ne i32 %23, 0, !dbg !8621
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8621
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8621
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8621
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8666
  %24 = load i64, i64* %tmp.i.i, align 8, !dbg !8621
  %tobool38.i.i = icmp ne i64 %24, 0, !dbg !8670
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8671

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8672
  br label %check_copy_size.exit.i, !dbg !8672

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %25 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8673
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8674
  %27 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8675
  %tobool41.i.i = trunc i8 %27 to i1, !dbg !8675
  call void @check_object_size(i8* %25, i64 %26, i1 zeroext %tobool41.i.i) #11, !dbg !8676
  store i1 true, i1* %retval.i.i, align 1, !dbg !8677
  br label %check_copy_size.exit.i, !dbg !8677

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %28 = load i1, i1* %retval.i.i, align 1, !dbg !8678
  %lnot.i = xor i1 %28, true, !dbg !8651
  %lnot.ext.i = zext i1 %28 to i32, !dbg !8651
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8651
  br i1 %28, label %if.then.i, label %copy_to_user.exit, !dbg !8679

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %29 = load i8*, i8** %to.addr.i, align 8, !dbg !8680
  %30 = load i8*, i8** %from.addr.i, align 8, !dbg !8681
  %31 = load i64, i64* %n.addr.i, align 8, !dbg !8682
  %call2.i = call i64 @_copy_to_user(i8* %29, i8* %30, i64 %31) #11, !dbg !8683
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8684
  br label %copy_to_user.exit, !dbg !8685

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !8686
  %tobool2 = icmp ne i64 %32, 0, !dbg !8687
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8688

if.then3:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8689
  br label %return, !dbg !8689

if.end4:                                          ; preds = %copy_to_user.exit
  %33 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8690
  %34 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 27, !dbg !8691
  %id5 = bitcast %union.anon.90* %34 to [256 x i16]*, !dbg !8691
  %arraydecay6 = getelementptr inbounds [256 x i16], [256 x i16]* %id5, i64 0, i64 0, !dbg !8690
  %arraydecay7 = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !8692
  call void @ata_id_string(i16* %arraydecay6, i8* %arraydecay7, i32 27, i32 40) #10, !dbg !8693
  %35 = load i16*, i16** %dst, align 8, !dbg !8694
  %add.ptr = getelementptr i16, i16* %35, i64 27, !dbg !8695
  %36 = bitcast i16* %add.ptr to i8*, !dbg !8694
  %arraydecay8 = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !8696
  store i8* %36, i8** %to.addr.i38, align 8
  store i8* %arraydecay8, i8** %from.addr.i39, align 8
  store i64 40, i64* %n.addr.i40, align 8
  %37 = load i8*, i8** %from.addr.i39, align 8, !dbg !8697
  %38 = load i64, i64* %n.addr.i40, align 8, !dbg !8697
  store i8* %37, i8** %addr.addr.i.i32, align 8
  store i64 %38, i64* %bytes.addr.i.i33, align 8
  store i8 1, i8* %is_source.addr.i.i34, align 1
  store i32 -1, i32* %sz.i.i35, align 4, !dbg !8609
  %39 = load i32, i32* %sz.i.i35, align 4, !dbg !8698
  %cmp.i.i41 = icmp sge i32 %39, 0, !dbg !8698
  br i1 %cmp.i.i41, label %land.rhs.i.i44, label %land.end.i.i48, !dbg !8698

land.rhs.i.i44:                                   ; preds = %if.end4
  %40 = load i32, i32* %sz.i.i35, align 4, !dbg !8698
  %conv.i.i42 = sext i32 %40 to i64, !dbg !8698
  %41 = load i64, i64* %bytes.addr.i.i33, align 8, !dbg !8698
  %cmp1.i.i43 = icmp ult i64 %conv.i.i42, %41, !dbg !8698
  br label %land.end.i.i48

land.end.i.i48:                                   ; preds = %land.rhs.i.i44, %if.end4
  %42 = phi i1 [ false, %if.end4 ], [ %cmp1.i.i43, %land.rhs.i.i44 ], !dbg !8699
  %lnot.i.i45 = xor i1 %42, true, !dbg !8698
  %lnot.ext.i.i46 = zext i1 %42 to i32, !dbg !8698
  %conv4.i.i47 = sext i32 %lnot.ext.i.i46 to i64, !dbg !8698
  br i1 %42, label %if.then.i.i49, label %if.end10.i.i64, !dbg !8700

if.then.i.i49:                                    ; preds = %land.end.i.i48
  %43 = load i64, i64* %bytes.addr.i.i33, align 8, !dbg !8701
  %44 = call i1 @llvm.is.constant.i64(i64 %43) #5, !dbg !8702
  br i1 %44, label %if.else.i.i52, label %if.then5.i.i50, !dbg !8703

if.then5.i.i50:                                   ; preds = %if.then.i.i49
  %45 = load i32, i32* %sz.i.i35, align 4, !dbg !8704
  %46 = load i64, i64* %bytes.addr.i.i33, align 8, !dbg !8705
  call void @copy_overflow(i32 %45, i64 %46) #11, !dbg !8706
  br label %if.end9.i.i56, !dbg !8706

if.else.i.i52:                                    ; preds = %if.then.i.i49
  %47 = load i8, i8* %is_source.addr.i.i34, align 1, !dbg !8707
  %tobool6.i.i51 = trunc i8 %47 to i1, !dbg !8707
  br i1 %tobool6.i.i51, label %if.then7.i.i53, label %if.else8.i.i54, !dbg !8708

if.then7.i.i53:                                   ; preds = %if.else.i.i52
  call void @__bad_copy_from() #11, !dbg !8709
  br label %if.end.i.i55, !dbg !8709

if.else8.i.i54:                                   ; preds = %if.else.i.i52
  call void @__bad_copy_to() #11, !dbg !8710
  br label %if.end.i.i55

if.end.i.i55:                                     ; preds = %if.else8.i.i54, %if.then7.i.i53
  br label %if.end9.i.i56

if.end9.i.i56:                                    ; preds = %if.end.i.i55, %if.then5.i.i50
  store i1 false, i1* %retval.i.i31, align 1, !dbg !8711
  br label %check_copy_size.exit.i78, !dbg !8711

if.end10.i.i64:                                   ; preds = %land.end.i.i48
  %48 = load i64, i64* %bytes.addr.i.i33, align 8, !dbg !8610
  %cmp11.i.i57 = icmp ugt i64 %48, 2147483647, !dbg !8610
  %lnot13.i.i58 = xor i1 %cmp11.i.i57, true, !dbg !8610
  %lnot.ext16.i.i59 = zext i1 %cmp11.i.i57 to i32, !dbg !8610
  store i32 %lnot.ext16.i.i59, i32* %__ret_warn_on.i.i36, align 4, !dbg !8610
  %49 = load i32, i32* %__ret_warn_on.i.i36, align 4, !dbg !8712
  %tobool17.i.i60 = icmp ne i32 %49, 0, !dbg !8712
  %lnot18.i.i61 = xor i1 %tobool17.i.i60, true, !dbg !8712
  %lnot.ext21.i.i62 = zext i1 %tobool17.i.i60 to i32, !dbg !8712
  %conv22.i.i63 = sext i32 %lnot.ext21.i.i62 to i64, !dbg !8712
  br i1 %tobool17.i.i60, label %if.then24.i.i65, label %if.end31.i.i71, !dbg !8610

if.then24.i.i65:                                  ; preds = %if.end10.i.i64
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8713, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8714, !srcloc !7711
  br label %if.end31.i.i71, !dbg !8715

if.end31.i.i71:                                   ; preds = %if.then24.i.i65, %if.end10.i.i64
  %50 = load i32, i32* %__ret_warn_on.i.i36, align 4, !dbg !8610
  %tobool32.i.i66 = icmp ne i32 %50, 0, !dbg !8610
  %lnot33.i.i67 = xor i1 %tobool32.i.i66, true, !dbg !8610
  %lnot.ext36.i.i68 = zext i1 %tobool32.i.i66 to i32, !dbg !8610
  %conv37.i.i69 = sext i32 %lnot.ext36.i.i68 to i64, !dbg !8610
  store i64 %conv37.i.i69, i64* %tmp.i.i37, align 8, !dbg !8712
  %51 = load i64, i64* %tmp.i.i37, align 8, !dbg !8610
  %tobool38.i.i70 = icmp ne i64 %51, 0, !dbg !8716
  br i1 %tobool38.i.i70, label %if.then39.i.i72, label %if.end40.i.i74, !dbg !8717

if.then39.i.i72:                                  ; preds = %if.end31.i.i71
  store i1 false, i1* %retval.i.i31, align 1, !dbg !8718
  br label %check_copy_size.exit.i78, !dbg !8718

if.end40.i.i74:                                   ; preds = %if.end31.i.i71
  %52 = load i8*, i8** %addr.addr.i.i32, align 8, !dbg !8719
  %53 = load i64, i64* %bytes.addr.i.i33, align 8, !dbg !8720
  %54 = load i8, i8* %is_source.addr.i.i34, align 1, !dbg !8721
  %tobool41.i.i73 = trunc i8 %54 to i1, !dbg !8721
  call void @check_object_size(i8* %52, i64 %53, i1 zeroext %tobool41.i.i73) #11, !dbg !8722
  store i1 true, i1* %retval.i.i31, align 1, !dbg !8723
  br label %check_copy_size.exit.i78, !dbg !8723

check_copy_size.exit.i78:                         ; preds = %if.end40.i.i74, %if.then39.i.i72, %if.end9.i.i56
  %55 = load i1, i1* %retval.i.i31, align 1, !dbg !8724
  %lnot.i75 = xor i1 %55, true, !dbg !8697
  %lnot.ext.i76 = zext i1 %55 to i32, !dbg !8697
  %conv.i77 = sext i32 %lnot.ext.i76 to i64, !dbg !8697
  br i1 %55, label %if.then.i80, label %copy_to_user.exit81, !dbg !8725

if.then.i80:                                      ; preds = %check_copy_size.exit.i78
  %56 = load i8*, i8** %to.addr.i38, align 8, !dbg !8726
  %57 = load i8*, i8** %from.addr.i39, align 8, !dbg !8727
  %58 = load i64, i64* %n.addr.i40, align 8, !dbg !8728
  %call2.i79 = call i64 @_copy_to_user(i8* %56, i8* %57, i64 %58) #11, !dbg !8729
  store i64 %call2.i79, i64* %n.addr.i40, align 8, !dbg !8730
  br label %copy_to_user.exit81, !dbg !8731

copy_to_user.exit81:                              ; preds = %check_copy_size.exit.i78, %if.then.i80
  %59 = load i64, i64* %n.addr.i40, align 8, !dbg !8732
  %tobool10 = icmp ne i64 %59, 0, !dbg !8733
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !8734

if.then11:                                        ; preds = %copy_to_user.exit81
  store i32 -14, i32* %retval, align 4, !dbg !8735
  br label %return, !dbg !8735

if.end12:                                         ; preds = %copy_to_user.exit81
  %60 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8736
  %61 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %60, i32 0, i32 27, !dbg !8737
  %id13 = bitcast %union.anon.90* %61 to [256 x i16]*, !dbg !8737
  %arraydecay14 = getelementptr inbounds [256 x i16], [256 x i16]* %id13, i64 0, i64 0, !dbg !8736
  %arraydecay15 = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !8738
  call void @ata_id_string(i16* %arraydecay14, i8* %arraydecay15, i32 23, i32 8) #10, !dbg !8739
  %62 = load i16*, i16** %dst, align 8, !dbg !8740
  %add.ptr16 = getelementptr i16, i16* %62, i64 23, !dbg !8741
  %63 = bitcast i16* %add.ptr16 to i8*, !dbg !8740
  %arraydecay17 = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !8742
  store i8* %63, i8** %to.addr.i89, align 8
  store i8* %arraydecay17, i8** %from.addr.i90, align 8
  store i64 8, i64* %n.addr.i91, align 8
  %64 = load i8*, i8** %from.addr.i90, align 8, !dbg !8743
  %65 = load i64, i64* %n.addr.i91, align 8, !dbg !8743
  store i8* %64, i8** %addr.addr.i.i83, align 8
  store i64 %65, i64* %bytes.addr.i.i84, align 8
  store i8 1, i8* %is_source.addr.i.i85, align 1
  store i32 -1, i32* %sz.i.i86, align 4, !dbg !8598
  %66 = load i32, i32* %sz.i.i86, align 4, !dbg !8744
  %cmp.i.i92 = icmp sge i32 %66, 0, !dbg !8744
  br i1 %cmp.i.i92, label %land.rhs.i.i95, label %land.end.i.i99, !dbg !8744

land.rhs.i.i95:                                   ; preds = %if.end12
  %67 = load i32, i32* %sz.i.i86, align 4, !dbg !8744
  %conv.i.i93 = sext i32 %67 to i64, !dbg !8744
  %68 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8744
  %cmp1.i.i94 = icmp ult i64 %conv.i.i93, %68, !dbg !8744
  br label %land.end.i.i99

land.end.i.i99:                                   ; preds = %land.rhs.i.i95, %if.end12
  %69 = phi i1 [ false, %if.end12 ], [ %cmp1.i.i94, %land.rhs.i.i95 ], !dbg !8745
  %lnot.i.i96 = xor i1 %69, true, !dbg !8744
  %lnot.ext.i.i97 = zext i1 %69 to i32, !dbg !8744
  %conv4.i.i98 = sext i32 %lnot.ext.i.i97 to i64, !dbg !8744
  br i1 %69, label %if.then.i.i100, label %if.end10.i.i115, !dbg !8746

if.then.i.i100:                                   ; preds = %land.end.i.i99
  %70 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8747
  %71 = call i1 @llvm.is.constant.i64(i64 %70) #5, !dbg !8748
  br i1 %71, label %if.else.i.i103, label %if.then5.i.i101, !dbg !8749

if.then5.i.i101:                                  ; preds = %if.then.i.i100
  %72 = load i32, i32* %sz.i.i86, align 4, !dbg !8750
  %73 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8751
  call void @copy_overflow(i32 %72, i64 %73) #11, !dbg !8752
  br label %if.end9.i.i107, !dbg !8752

if.else.i.i103:                                   ; preds = %if.then.i.i100
  %74 = load i8, i8* %is_source.addr.i.i85, align 1, !dbg !8753
  %tobool6.i.i102 = trunc i8 %74 to i1, !dbg !8753
  br i1 %tobool6.i.i102, label %if.then7.i.i104, label %if.else8.i.i105, !dbg !8754

if.then7.i.i104:                                  ; preds = %if.else.i.i103
  call void @__bad_copy_from() #11, !dbg !8755
  br label %if.end.i.i106, !dbg !8755

if.else8.i.i105:                                  ; preds = %if.else.i.i103
  call void @__bad_copy_to() #11, !dbg !8756
  br label %if.end.i.i106

if.end.i.i106:                                    ; preds = %if.else8.i.i105, %if.then7.i.i104
  br label %if.end9.i.i107

if.end9.i.i107:                                   ; preds = %if.end.i.i106, %if.then5.i.i101
  store i1 false, i1* %retval.i.i82, align 1, !dbg !8757
  br label %check_copy_size.exit.i129, !dbg !8757

if.end10.i.i115:                                  ; preds = %land.end.i.i99
  %75 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8599
  %cmp11.i.i108 = icmp ugt i64 %75, 2147483647, !dbg !8599
  %lnot13.i.i109 = xor i1 %cmp11.i.i108, true, !dbg !8599
  %lnot.ext16.i.i110 = zext i1 %cmp11.i.i108 to i32, !dbg !8599
  store i32 %lnot.ext16.i.i110, i32* %__ret_warn_on.i.i87, align 4, !dbg !8599
  %76 = load i32, i32* %__ret_warn_on.i.i87, align 4, !dbg !8758
  %tobool17.i.i111 = icmp ne i32 %76, 0, !dbg !8758
  %lnot18.i.i112 = xor i1 %tobool17.i.i111, true, !dbg !8758
  %lnot.ext21.i.i113 = zext i1 %tobool17.i.i111 to i32, !dbg !8758
  %conv22.i.i114 = sext i32 %lnot.ext21.i.i113 to i64, !dbg !8758
  br i1 %tobool17.i.i111, label %if.then24.i.i116, label %if.end31.i.i122, !dbg !8599

if.then24.i.i116:                                 ; preds = %if.end10.i.i115
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8759, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8760, !srcloc !7711
  br label %if.end31.i.i122, !dbg !8761

if.end31.i.i122:                                  ; preds = %if.then24.i.i116, %if.end10.i.i115
  %77 = load i32, i32* %__ret_warn_on.i.i87, align 4, !dbg !8599
  %tobool32.i.i117 = icmp ne i32 %77, 0, !dbg !8599
  %lnot33.i.i118 = xor i1 %tobool32.i.i117, true, !dbg !8599
  %lnot.ext36.i.i119 = zext i1 %tobool32.i.i117 to i32, !dbg !8599
  %conv37.i.i120 = sext i32 %lnot.ext36.i.i119 to i64, !dbg !8599
  store i64 %conv37.i.i120, i64* %tmp.i.i88, align 8, !dbg !8758
  %78 = load i64, i64* %tmp.i.i88, align 8, !dbg !8599
  %tobool38.i.i121 = icmp ne i64 %78, 0, !dbg !8762
  br i1 %tobool38.i.i121, label %if.then39.i.i123, label %if.end40.i.i125, !dbg !8763

if.then39.i.i123:                                 ; preds = %if.end31.i.i122
  store i1 false, i1* %retval.i.i82, align 1, !dbg !8764
  br label %check_copy_size.exit.i129, !dbg !8764

if.end40.i.i125:                                  ; preds = %if.end31.i.i122
  %79 = load i8*, i8** %addr.addr.i.i83, align 8, !dbg !8765
  %80 = load i64, i64* %bytes.addr.i.i84, align 8, !dbg !8766
  %81 = load i8, i8* %is_source.addr.i.i85, align 1, !dbg !8767
  %tobool41.i.i124 = trunc i8 %81 to i1, !dbg !8767
  call void @check_object_size(i8* %79, i64 %80, i1 zeroext %tobool41.i.i124) #11, !dbg !8768
  store i1 true, i1* %retval.i.i82, align 1, !dbg !8769
  br label %check_copy_size.exit.i129, !dbg !8769

check_copy_size.exit.i129:                        ; preds = %if.end40.i.i125, %if.then39.i.i123, %if.end9.i.i107
  %82 = load i1, i1* %retval.i.i82, align 1, !dbg !8770
  %lnot.i126 = xor i1 %82, true, !dbg !8743
  %lnot.ext.i127 = zext i1 %82 to i32, !dbg !8743
  %conv.i128 = sext i32 %lnot.ext.i127 to i64, !dbg !8743
  br i1 %82, label %if.then.i131, label %copy_to_user.exit132, !dbg !8771

if.then.i131:                                     ; preds = %check_copy_size.exit.i129
  %83 = load i8*, i8** %to.addr.i89, align 8, !dbg !8772
  %84 = load i8*, i8** %from.addr.i90, align 8, !dbg !8773
  %85 = load i64, i64* %n.addr.i91, align 8, !dbg !8774
  %call2.i130 = call i64 @_copy_to_user(i8* %83, i8* %84, i64 %85) #11, !dbg !8775
  store i64 %call2.i130, i64* %n.addr.i91, align 8, !dbg !8776
  br label %copy_to_user.exit132, !dbg !8777

copy_to_user.exit132:                             ; preds = %check_copy_size.exit.i129, %if.then.i131
  %86 = load i64, i64* %n.addr.i91, align 8, !dbg !8778
  %tobool19 = icmp ne i64 %86, 0, !dbg !8779
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !8780

if.then20:                                        ; preds = %copy_to_user.exit132
  store i32 -14, i32* %retval, align 4, !dbg !8781
  br label %return, !dbg !8781

if.end21:                                         ; preds = %copy_to_user.exit132
  %87 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8782
  %88 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %87, i32 0, i32 27, !dbg !8783
  %id22 = bitcast %union.anon.90* %88 to [256 x i16]*, !dbg !8783
  %arraydecay23 = getelementptr inbounds [256 x i16], [256 x i16]* %id22, i64 0, i64 0, !dbg !8782
  %arraydecay24 = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !8784
  call void @ata_id_string(i16* %arraydecay23, i8* %arraydecay24, i32 10, i32 20) #10, !dbg !8785
  %89 = load i16*, i16** %dst, align 8, !dbg !8786
  %add.ptr25 = getelementptr i16, i16* %89, i64 10, !dbg !8787
  %90 = bitcast i16* %add.ptr25 to i8*, !dbg !8786
  %arraydecay26 = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !8788
  store i8* %90, i8** %to.addr.i140, align 8
  store i8* %arraydecay26, i8** %from.addr.i141, align 8
  store i64 20, i64* %n.addr.i142, align 8
  %91 = load i8*, i8** %from.addr.i141, align 8, !dbg !8789
  %92 = load i64, i64* %n.addr.i142, align 8, !dbg !8789
  store i8* %91, i8** %addr.addr.i.i134, align 8
  store i64 %92, i64* %bytes.addr.i.i135, align 8
  store i8 1, i8* %is_source.addr.i.i136, align 1
  store i32 -1, i32* %sz.i.i137, align 4, !dbg !8587
  %93 = load i32, i32* %sz.i.i137, align 4, !dbg !8790
  %cmp.i.i143 = icmp sge i32 %93, 0, !dbg !8790
  br i1 %cmp.i.i143, label %land.rhs.i.i146, label %land.end.i.i150, !dbg !8790

land.rhs.i.i146:                                  ; preds = %if.end21
  %94 = load i32, i32* %sz.i.i137, align 4, !dbg !8790
  %conv.i.i144 = sext i32 %94 to i64, !dbg !8790
  %95 = load i64, i64* %bytes.addr.i.i135, align 8, !dbg !8790
  %cmp1.i.i145 = icmp ult i64 %conv.i.i144, %95, !dbg !8790
  br label %land.end.i.i150

land.end.i.i150:                                  ; preds = %land.rhs.i.i146, %if.end21
  %96 = phi i1 [ false, %if.end21 ], [ %cmp1.i.i145, %land.rhs.i.i146 ], !dbg !8791
  %lnot.i.i147 = xor i1 %96, true, !dbg !8790
  %lnot.ext.i.i148 = zext i1 %96 to i32, !dbg !8790
  %conv4.i.i149 = sext i32 %lnot.ext.i.i148 to i64, !dbg !8790
  br i1 %96, label %if.then.i.i151, label %if.end10.i.i166, !dbg !8792

if.then.i.i151:                                   ; preds = %land.end.i.i150
  %97 = load i64, i64* %bytes.addr.i.i135, align 8, !dbg !8793
  %98 = call i1 @llvm.is.constant.i64(i64 %97) #5, !dbg !8794
  br i1 %98, label %if.else.i.i154, label %if.then5.i.i152, !dbg !8795

if.then5.i.i152:                                  ; preds = %if.then.i.i151
  %99 = load i32, i32* %sz.i.i137, align 4, !dbg !8796
  %100 = load i64, i64* %bytes.addr.i.i135, align 8, !dbg !8797
  call void @copy_overflow(i32 %99, i64 %100) #11, !dbg !8798
  br label %if.end9.i.i158, !dbg !8798

if.else.i.i154:                                   ; preds = %if.then.i.i151
  %101 = load i8, i8* %is_source.addr.i.i136, align 1, !dbg !8799
  %tobool6.i.i153 = trunc i8 %101 to i1, !dbg !8799
  br i1 %tobool6.i.i153, label %if.then7.i.i155, label %if.else8.i.i156, !dbg !8800

if.then7.i.i155:                                  ; preds = %if.else.i.i154
  call void @__bad_copy_from() #11, !dbg !8801
  br label %if.end.i.i157, !dbg !8801

if.else8.i.i156:                                  ; preds = %if.else.i.i154
  call void @__bad_copy_to() #11, !dbg !8802
  br label %if.end.i.i157

if.end.i.i157:                                    ; preds = %if.else8.i.i156, %if.then7.i.i155
  br label %if.end9.i.i158

if.end9.i.i158:                                   ; preds = %if.end.i.i157, %if.then5.i.i152
  store i1 false, i1* %retval.i.i133, align 1, !dbg !8803
  br label %check_copy_size.exit.i180, !dbg !8803

if.end10.i.i166:                                  ; preds = %land.end.i.i150
  %102 = load i64, i64* %bytes.addr.i.i135, align 8, !dbg !8588
  %cmp11.i.i159 = icmp ugt i64 %102, 2147483647, !dbg !8588
  %lnot13.i.i160 = xor i1 %cmp11.i.i159, true, !dbg !8588
  %lnot.ext16.i.i161 = zext i1 %cmp11.i.i159 to i32, !dbg !8588
  store i32 %lnot.ext16.i.i161, i32* %__ret_warn_on.i.i138, align 4, !dbg !8588
  %103 = load i32, i32* %__ret_warn_on.i.i138, align 4, !dbg !8804
  %tobool17.i.i162 = icmp ne i32 %103, 0, !dbg !8804
  %lnot18.i.i163 = xor i1 %tobool17.i.i162, true, !dbg !8804
  %lnot.ext21.i.i164 = zext i1 %tobool17.i.i162 to i32, !dbg !8804
  %conv22.i.i165 = sext i32 %lnot.ext21.i.i164 to i64, !dbg !8804
  br i1 %tobool17.i.i162, label %if.then24.i.i167, label %if.end31.i.i173, !dbg !8588

if.then24.i.i167:                                 ; preds = %if.end10.i.i166
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !8805, !srcloc !7708
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !8806, !srcloc !7711
  br label %if.end31.i.i173, !dbg !8807

if.end31.i.i173:                                  ; preds = %if.then24.i.i167, %if.end10.i.i166
  %104 = load i32, i32* %__ret_warn_on.i.i138, align 4, !dbg !8588
  %tobool32.i.i168 = icmp ne i32 %104, 0, !dbg !8588
  %lnot33.i.i169 = xor i1 %tobool32.i.i168, true, !dbg !8588
  %lnot.ext36.i.i170 = zext i1 %tobool32.i.i168 to i32, !dbg !8588
  %conv37.i.i171 = sext i32 %lnot.ext36.i.i170 to i64, !dbg !8588
  store i64 %conv37.i.i171, i64* %tmp.i.i139, align 8, !dbg !8804
  %105 = load i64, i64* %tmp.i.i139, align 8, !dbg !8588
  %tobool38.i.i172 = icmp ne i64 %105, 0, !dbg !8808
  br i1 %tobool38.i.i172, label %if.then39.i.i174, label %if.end40.i.i176, !dbg !8809

if.then39.i.i174:                                 ; preds = %if.end31.i.i173
  store i1 false, i1* %retval.i.i133, align 1, !dbg !8810
  br label %check_copy_size.exit.i180, !dbg !8810

if.end40.i.i176:                                  ; preds = %if.end31.i.i173
  %106 = load i8*, i8** %addr.addr.i.i134, align 8, !dbg !8811
  %107 = load i64, i64* %bytes.addr.i.i135, align 8, !dbg !8812
  %108 = load i8, i8* %is_source.addr.i.i136, align 1, !dbg !8813
  %tobool41.i.i175 = trunc i8 %108 to i1, !dbg !8813
  call void @check_object_size(i8* %106, i64 %107, i1 zeroext %tobool41.i.i175) #11, !dbg !8814
  store i1 true, i1* %retval.i.i133, align 1, !dbg !8815
  br label %check_copy_size.exit.i180, !dbg !8815

check_copy_size.exit.i180:                        ; preds = %if.end40.i.i176, %if.then39.i.i174, %if.end9.i.i158
  %109 = load i1, i1* %retval.i.i133, align 1, !dbg !8816
  %lnot.i177 = xor i1 %109, true, !dbg !8789
  %lnot.ext.i178 = zext i1 %109 to i32, !dbg !8789
  %conv.i179 = sext i32 %lnot.ext.i178 to i64, !dbg !8789
  br i1 %109, label %if.then.i182, label %copy_to_user.exit183, !dbg !8817

if.then.i182:                                     ; preds = %check_copy_size.exit.i180
  %110 = load i8*, i8** %to.addr.i140, align 8, !dbg !8818
  %111 = load i8*, i8** %from.addr.i141, align 8, !dbg !8819
  %112 = load i64, i64* %n.addr.i142, align 8, !dbg !8820
  %call2.i181 = call i64 @_copy_to_user(i8* %110, i8* %111, i64 %112) #11, !dbg !8821
  store i64 %call2.i181, i64* %n.addr.i142, align 8, !dbg !8822
  br label %copy_to_user.exit183, !dbg !8823

copy_to_user.exit183:                             ; preds = %check_copy_size.exit.i180, %if.then.i182
  %113 = load i64, i64* %n.addr.i142, align 8, !dbg !8824
  %tobool28 = icmp ne i64 %113, 0, !dbg !8825
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !8826

if.then29:                                        ; preds = %copy_to_user.exit183
  store i32 -14, i32* %retval, align 4, !dbg !8827
  br label %return, !dbg !8827

if.end30:                                         ; preds = %copy_to_user.exit183
  store i32 0, i32* %retval, align 4, !dbg !8828
  br label %return, !dbg !8828

return:                                           ; preds = %if.end30, %if.then29, %if.then20, %if.then11, %if.then3, %if.then
  %114 = load i32, i32* %retval, align 4, !dbg !8829
  ret i32 %114, !dbg !8829
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_scsi_ioctl(%struct.scsi_device* %scsidev, i32 %cmd, i8* %arg) #0 !dbg !8830 {
entry:
  %scsidev.addr = alloca %struct.scsi_device*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store %struct.scsi_device* %scsidev, %struct.scsi_device** %scsidev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsidev.addr, metadata !8831, metadata !DIExpression()), !dbg !8832
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  %0 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !8837
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !8838
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8838
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %1) #10, !dbg !8839
  %2 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !8840
  %3 = load i32, i32* %cmd.addr, align 4, !dbg !8841
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8842
  %call1 = call i32 @ata_sas_scsi_ioctl(%struct.ata_port* %call, %struct.scsi_device* %2, i32 %3, i8* %4) #10, !dbg !8843
  ret i32 %call1, !dbg !8844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_sdev_config(%struct.scsi_device* %sdev) #0 !dbg !8845 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8848
  %use_10_for_rw = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 39, !dbg !8849
  %1 = bitcast [6 x i8]* %use_10_for_rw to i48*, !dbg !8849
  %bf.load = load i48, i48* %1, align 4, !dbg !8850
  %bf.clear = and i48 %bf.load, -32769, !dbg !8850
  %bf.set = or i48 %bf.clear, 32768, !dbg !8850
  store i48 %bf.set, i48* %1, align 4, !dbg !8850
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8851
  %use_10_for_ms = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 39, !dbg !8852
  %3 = bitcast [6 x i8]* %use_10_for_ms to i48*, !dbg !8852
  %bf.load1 = load i48, i48* %3, align 4, !dbg !8853
  %bf.clear2 = and i48 %bf.load1, -65537, !dbg !8853
  %bf.set3 = or i48 %bf.clear2, 65536, !dbg !8853
  store i48 %bf.set3, i48* %3, align 4, !dbg !8853
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8854
  %no_write_same = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 39, !dbg !8855
  %5 = bitcast [6 x i8]* %no_write_same to i48*, !dbg !8855
  %bf.load4 = load i48, i48* %5, align 4, !dbg !8856
  %bf.clear5 = and i48 %bf.load4, -524289, !dbg !8856
  %bf.set6 = or i48 %bf.clear5, 524288, !dbg !8856
  store i48 %bf.set6, i48* %5, align 4, !dbg !8856
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8857
  %max_device_blocked = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 46, !dbg !8858
  store i32 1, i32* %max_device_blocked, align 8, !dbg !8859
  ret void, !dbg !8860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @ata_scsi_dma_need_drain(%struct.request* %rq) #0 !dbg !8861 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8862, metadata !DIExpression()), !dbg !8863
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8864
  %call = call %struct.scsi_request* @scsi_req(%struct.request* %0) #10, !dbg !8865
  %cmd = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %call, i32 0, i32 1, !dbg !8866
  %1 = load i8*, i8** %cmd, align 8, !dbg !8866
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !8865
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8865
  %call1 = call i32 @atapi_cmd_type(i8 zeroext %2) #10, !dbg !8867
  %cmp = icmp eq i32 %call1, 4, !dbg !8868
  ret i1 %cmp, !dbg !8869
}

; Function Attrs: noredzone
declare dso_local i32 @atapi_cmd_type(i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scsi_request* @scsi_req(%struct.request* %rq) #0 !dbg !8870 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8874, metadata !DIExpression()), !dbg !8875
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8876
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #10, !dbg !8877
  %1 = bitcast i8* %call to %struct.scsi_request*, !dbg !8877
  ret %struct.scsi_request* %1, !dbg !8878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_scsi_dev_config(%struct.scsi_device* %sdev, %struct.ata_device* %dev) #0 !dbg !8879 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7567, metadata !DIExpression()), !dbg !8882
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7581, metadata !DIExpression()), !dbg !8887
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7583, metadata !DIExpression()), !dbg !8888
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7585, metadata !DIExpression()), !dbg !8889
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7587, metadata !DIExpression()), !dbg !8890
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7593, metadata !DIExpression()), !dbg !8892
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7599, metadata !DIExpression()), !dbg !8894
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7608, metadata !DIExpression()), !dbg !8897
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7610, metadata !DIExpression()), !dbg !8898
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7612, metadata !DIExpression()), !dbg !8899
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7614, metadata !DIExpression()), !dbg !8900
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7616, metadata !DIExpression()), !dbg !8901
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7618, metadata !DIExpression()), !dbg !8902
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7620, metadata !DIExpression()), !dbg !8903
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7622, metadata !DIExpression()), !dbg !8904
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %q = alloca %struct.request_queue*, align 8
  %depth = alloca i32, align 4
  %__UNIQUE_ID___x313 = alloca i32, align 4
  %__UNIQUE_ID___y314 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x315 = alloca i32, align 4
  %__UNIQUE_ID___y316 = alloca i32, align 4
  %tmp38 = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8905, metadata !DIExpression()), !dbg !8906
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !8907, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !8909, metadata !DIExpression()), !dbg !8910
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8911
  %request_queue = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 1, !dbg !8912
  %1 = load %struct.request_queue*, %struct.request_queue** %request_queue, align 8, !dbg !8912
  store %struct.request_queue* %1, %struct.request_queue** %q, align 8, !dbg !8910
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8913
  %3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 27, !dbg !8915
  %id = bitcast %union.anon.90* %3 to [256 x i16]*, !dbg !8915
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !8913
  %call = call zeroext i1 @ata_id_has_unload(i16* %arraydecay) #10, !dbg !8916
  br i1 %call, label %if.end, label %if.then, !dbg !8917

if.then:                                          ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8918
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 3, !dbg !8919
  %5 = load i64, i64* %flags, align 16, !dbg !8920
  %or = or i64 %5, 131072, !dbg !8920
  store i64 %or, i64* %flags, align 16, !dbg !8920
  br label %if.end, !dbg !8918

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8921
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8922
  %max_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 18, !dbg !8923
  %8 = load i32, i32* %max_sectors, align 4, !dbg !8923
  call void @blk_queue_max_hw_sectors(%struct.request_queue* %6, i32 %8) #10, !dbg !8924
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8925
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 11, !dbg !8926
  %10 = load i32, i32* %class, align 64, !dbg !8926
  %cmp = icmp eq i32 %10, 3, !dbg !8927
  br i1 %cmp, label %if.then1, label %if.else, !dbg !8928

if.then1:                                         ; preds = %if.end
  %11 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8929
  %sector_size = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 20, !dbg !8930
  store i32 512, i32* %sector_size, align 4, !dbg !8931
  %12 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8932
  call void @blk_queue_update_dma_pad(%struct.request_queue* %12, i32 3) #10, !dbg !8933
  %13 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8934
  %14 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8935
  %call2 = call zeroext i16 @queue_max_segments(%struct.request_queue* %14) #10, !dbg !8936
  %conv = zext i16 %call2 to i32, !dbg !8936
  %sub = sub i32 %conv, 1, !dbg !8937
  %conv3 = trunc i32 %sub to i16, !dbg !8936
  call void @blk_queue_max_segments(%struct.request_queue* %13, i16 zeroext %conv3) #10, !dbg !8938
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8939
  %dma_drain_len = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 56, !dbg !8940
  store i64 16384, i64* %dma_drain_len, align 8, !dbg !8941
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8942
  %dma_drain_len4 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %16, i32 0, i32 56, !dbg !8943
  %17 = load i64, i64* %dma_drain_len4, align 8, !dbg !8943
  %18 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8944
  %bounce_gfp = getelementptr inbounds %struct.request_queue, %struct.request_queue* %18, i32 0, i32 15, !dbg !8945
  %19 = load i32, i32* %bounce_gfp, align 8, !dbg !8945
  %or5 = or i32 %19, 3264, !dbg !8946
  store i64 %17, i64* %size.addr.i, align 8
  store i32 %or5, i32* %flags.addr.i, align 4
  %20 = load i64, i64* %size.addr.i, align 8, !dbg !8947
  %21 = call i1 @llvm.is.constant.i64(i64 %20) #5, !dbg !8948
  br i1 %21, label %if.then.i, label %if.end9.i, !dbg !8949

if.then.i:                                        ; preds = %if.then1
  %22 = load i64, i64* %size.addr.i, align 8, !dbg !8950
  %cmp.i = icmp ugt i64 %22, 8192, !dbg !8951
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8952

if.then1.i:                                       ; preds = %if.then.i
  %23 = load i64, i64* %size.addr.i, align 8, !dbg !8953
  %24 = load i32, i32* %flags.addr.i, align 4, !dbg !8954
  store i64 %23, i64* %size.addr.i.i, align 8
  store i32 %24, i32* %flags.addr.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !8955
  %call.i.i = call i32 @get_order(i64 %25) #12, !dbg !8956
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8901
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !8957
  %27 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8958
  %28 = load i32, i32* %order.i.i, align 4, !dbg !8959
  store i64 %26, i64* %size.addr.i.i.i, align 8
  store i32 %27, i32* %flags.addr.i.i.i, align 4
  store i32 %28, i32* %order.addr.i.i.i, align 4
  %29 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8960
  %30 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8961
  %31 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8962
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %29, i32 %30, i32 %31) #11, !dbg !8963
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8963
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8963
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8963
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !8963
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8964
  br label %kmalloc.exit, !dbg !8964

if.end.i:                                         ; preds = %if.then.i
  %32 = load i64, i64* %size.addr.i, align 8, !dbg !8965
  store i64 %32, i64* %size.addr.i11.i, align 8
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8966
  %tobool.i.i = icmp ne i64 %33, 0, !dbg !8966
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8967

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8968
  br label %kmalloc_index.exit.i, !dbg !8968

if.end.i.i:                                       ; preds = %if.end.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8969
  %cmp.i.i = icmp ule i64 %34, 8, !dbg !8970
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8971

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8972
  br label %kmalloc_index.exit.i, !dbg !8972

if.end2.i.i:                                      ; preds = %if.end.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8973
  %cmp3.i.i = icmp ugt i64 %35, 64, !dbg !8974
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8975

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8976
  %cmp4.i.i = icmp ule i64 %36, 96, !dbg !8977
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8978

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8979
  br label %kmalloc_index.exit.i, !dbg !8979

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8980
  %cmp7.i.i = icmp ugt i64 %37, 128, !dbg !8981
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8982

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8983
  %cmp9.i.i = icmp ule i64 %38, 192, !dbg !8984
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8985

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8986
  br label %kmalloc_index.exit.i, !dbg !8986

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8987
  %cmp12.i.i = icmp ule i64 %39, 8, !dbg !8988
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8989

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8990
  br label %kmalloc_index.exit.i, !dbg !8990

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8991
  %cmp15.i.i = icmp ule i64 %40, 16, !dbg !8992
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8993

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8994
  br label %kmalloc_index.exit.i, !dbg !8994

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8995
  %cmp18.i.i = icmp ule i64 %41, 32, !dbg !8996
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8997

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8998
  br label %kmalloc_index.exit.i, !dbg !8998

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8999
  %cmp21.i.i = icmp ule i64 %42, 64, !dbg !9000
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9001

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9002
  br label %kmalloc_index.exit.i, !dbg !9002

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9003
  %cmp24.i.i = icmp ule i64 %43, 128, !dbg !9004
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9005

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9006
  br label %kmalloc_index.exit.i, !dbg !9006

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9007
  %cmp27.i.i = icmp ule i64 %44, 256, !dbg !9008
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9009

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9010
  br label %kmalloc_index.exit.i, !dbg !9010

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9011
  %cmp30.i.i = icmp ule i64 %45, 512, !dbg !9012
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9013

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9014
  br label %kmalloc_index.exit.i, !dbg !9014

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9015
  %cmp33.i.i = icmp ule i64 %46, 1024, !dbg !9016
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9017

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9018
  br label %kmalloc_index.exit.i, !dbg !9018

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9019
  %cmp36.i.i = icmp ule i64 %47, 2048, !dbg !9020
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9021

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9022
  br label %kmalloc_index.exit.i, !dbg !9022

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9023
  %cmp39.i.i = icmp ule i64 %48, 4096, !dbg !9024
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9025

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9026
  br label %kmalloc_index.exit.i, !dbg !9026

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9027
  %cmp42.i.i = icmp ule i64 %49, 8192, !dbg !9028
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9029

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9030
  br label %kmalloc_index.exit.i, !dbg !9030

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9031
  %cmp45.i.i = icmp ule i64 %50, 16384, !dbg !9032
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9033

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9034
  br label %kmalloc_index.exit.i, !dbg !9034

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9035
  %cmp48.i.i = icmp ule i64 %51, 32768, !dbg !9036
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9037

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9038
  br label %kmalloc_index.exit.i, !dbg !9038

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9039
  %cmp51.i.i = icmp ule i64 %52, 65536, !dbg !9040
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9041

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9042
  br label %kmalloc_index.exit.i, !dbg !9042

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9043
  %cmp54.i.i = icmp ule i64 %53, 131072, !dbg !9044
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9045

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9046
  br label %kmalloc_index.exit.i, !dbg !9046

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9047
  %cmp57.i.i = icmp ule i64 %54, 262144, !dbg !9048
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9049

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9050
  br label %kmalloc_index.exit.i, !dbg !9050

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9051
  %cmp60.i.i = icmp ule i64 %55, 524288, !dbg !9052
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9053

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9054
  br label %kmalloc_index.exit.i, !dbg !9054

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9055
  %cmp63.i.i = icmp ule i64 %56, 1048576, !dbg !9056
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9057

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9058
  br label %kmalloc_index.exit.i, !dbg !9058

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9059
  %cmp66.i.i = icmp ule i64 %57, 2097152, !dbg !9060
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9061

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9062
  br label %kmalloc_index.exit.i, !dbg !9062

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9063
  %cmp69.i.i = icmp ule i64 %58, 4194304, !dbg !9064
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9065

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9066
  br label %kmalloc_index.exit.i, !dbg !9066

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9067
  %cmp72.i.i = icmp ule i64 %59, 8388608, !dbg !9068
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9069

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9070
  br label %kmalloc_index.exit.i, !dbg !9070

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9071
  %cmp75.i.i = icmp ule i64 %60, 16777216, !dbg !9072
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9073

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9074
  br label %kmalloc_index.exit.i, !dbg !9074

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9075
  %cmp78.i.i = icmp ule i64 %61, 33554432, !dbg !9076
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9077

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9078
  br label %kmalloc_index.exit.i, !dbg !9078

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9079
  %cmp81.i.i = icmp ule i64 %62, 67108864, !dbg !9080
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9081

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9082
  br label %kmalloc_index.exit.i, !dbg !9082

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !9083, !srcloc !7908
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 192) #5, !dbg !9084, !srcloc !7912
  unreachable, !dbg !9085

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %63 = load i32, i32* %retval.i.i, align 4, !dbg !9086
  store i32 %63, i32* %index.i, align 4, !dbg !9087
  %64 = load i32, i32* %index.i, align 4, !dbg !9088
  %tobool.i = icmp ne i32 %64, 0, !dbg !9088
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9089

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9090
  br label %kmalloc.exit, !dbg !9090

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !9091
  store i32 %65, i32* %flags.addr.i13.i, align 4
  %66 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9092
  %and.i.i = and i32 %66, 17, !dbg !9092
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9092
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9092
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9092
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9092
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9093

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9094
  br label %kmalloc_type.exit.i, !dbg !9094

if.end.i16.i:                                     ; preds = %if.end4.i
  %67 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9095
  %and2.i.i = and i32 %67, 1, !dbg !9096
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9095
  %68 = zext i1 %tobool3.i.i to i64, !dbg !9095
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9095
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9097
  br label %kmalloc_type.exit.i, !dbg !9097

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %69 = load i32, i32* %retval.i12.i, align 4, !dbg !9098
  %idxprom.i = zext i32 %69 to i64, !dbg !9099
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9099
  %70 = load i32, i32* %index.i, align 4, !dbg !9100
  %idxprom6.i = zext i32 %70 to i64, !dbg !9099
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9099
  %71 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9099
  %72 = load i32, i32* %flags.addr.i, align 4, !dbg !9101
  %73 = load i64, i64* %size.addr.i, align 8, !dbg !9102
  store %struct.kmem_cache* %71, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %72, i32* %flags.addr.i17.i, align 4
  store i64 %73, i64* %size.addr.i18.i, align 8
  %74 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9103
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9104
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %74, i32 %75) #11, !dbg !9105
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9105
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9105
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9105
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !9105
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8889
  %76 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9106
  %77 = load i8*, i8** %ret.i.i, align 8, !dbg !9107
  %78 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9108
  %79 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9109
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %76, i8* %77, i64 %78, i32 %79) #11, !dbg !9110
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9111
  %80 = load i8*, i8** %ret.i.i, align 8, !dbg !9112
  store i8* %80, i8** %retval.i, align 8, !dbg !9113
  br label %kmalloc.exit, !dbg !9113

if.end9.i:                                        ; preds = %if.then1
  %81 = load i64, i64* %size.addr.i, align 8, !dbg !9114
  %82 = load i32, i32* %flags.addr.i, align 4, !dbg !9115
  %call10.i = call noalias i8* @__kmalloc(i64 %81, i32 %82) #11, !dbg !9116
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9116
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9116
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9116
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !9116
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9117
  br label %kmalloc.exit, !dbg !9117

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %83 = load i8*, i8** %retval.i, align 8, !dbg !9118
  %84 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9119
  %dma_drain_buf = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %84, i32 0, i32 57, !dbg !9120
  store i8* %83, i8** %dma_drain_buf, align 8, !dbg !9121
  %85 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9122
  %dma_drain_buf7 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %85, i32 0, i32 57, !dbg !9124
  %86 = load i8*, i8** %dma_drain_buf7, align 8, !dbg !9124
  %tobool = icmp ne i8* %86, null, !dbg !9122
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !9125

if.then8:                                         ; preds = %kmalloc.exit
  %87 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9126
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !9126
  store i32 -12, i32* %retval, align 4, !dbg !9128
  br label %return, !dbg !9128

if.end9:                                          ; preds = %kmalloc.exit
  br label %if.end14, !dbg !9129

if.else:                                          ; preds = %if.end
  %88 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9130
  %89 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %88, i32 0, i32 27, !dbg !9132
  %id10 = bitcast %union.anon.90* %89 to [256 x i16]*, !dbg !9132
  %arraydecay11 = getelementptr inbounds [256 x i16], [256 x i16]* %id10, i64 0, i64 0, !dbg !9130
  %call12 = call i32 @ata_id_logical_sector_size(i16* %arraydecay11) #10, !dbg !9133
  %90 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9134
  %sector_size13 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %90, i32 0, i32 20, !dbg !9135
  store i32 %call12, i32* %sector_size13, align 4, !dbg !9136
  %91 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9137
  %manage_start_stop = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %91, i32 0, i32 39, !dbg !9138
  %92 = bitcast [6 x i8]* %manage_start_stop to i48*, !dbg !9138
  %bf.load = load i48, i48* %92, align 4, !dbg !9139
  %bf.clear = and i48 %bf.load, -268435457, !dbg !9139
  %bf.set = or i48 %bf.clear, 268435456, !dbg !9139
  store i48 %bf.set, i48* %92, align 4, !dbg !9139
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end9
  %93 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9140
  %sector_size15 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %93, i32 0, i32 20, !dbg !9142
  %94 = load i32, i32* %sector_size15, align 4, !dbg !9142
  %conv16 = zext i32 %94 to i64, !dbg !9140
  %cmp17 = icmp ugt i64 %conv16, 4096, !dbg !9143
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !9144

if.then19:                                        ; preds = %if.end14
  %95 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9145
  %96 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9145
  %sector_size20 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %96, i32 0, i32 20, !dbg !9145
  %97 = load i32, i32* %sector_size20, align 4, !dbg !9145
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i32 %97) #10, !dbg !9145
  br label %if.end21, !dbg !9145

if.end21:                                         ; preds = %if.then19, %if.end14
  %98 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9146
  %99 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9147
  %sector_size22 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %99, i32 0, i32 20, !dbg !9148
  %100 = load i32, i32* %sector_size22, align 4, !dbg !9148
  %sub23 = sub i32 %100, 1, !dbg !9149
  call void @blk_queue_update_dma_alignment(%struct.request_queue* %98, i32 %sub23) #10, !dbg !9150
  %101 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9151
  %flags24 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %101, i32 0, i32 3, !dbg !9153
  %102 = load i64, i64* %flags24, align 16, !dbg !9153
  %and = and i64 %102, 128, !dbg !9154
  %tobool25 = icmp ne i64 %and, 0, !dbg !9154
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !9155

if.then26:                                        ; preds = %if.end21
  %103 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9156
  %supported_events = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %103, i32 0, i32 42, !dbg !9157
  %arraydecay27 = getelementptr inbounds [1 x i64], [1 x i64]* %supported_events, i64 0, i64 0, !dbg !9156
  call void @set_bit(i64 1, i64* %arraydecay27) #10, !dbg !9158
  br label %if.end28, !dbg !9158

if.end28:                                         ; preds = %if.then26, %if.end21
  %104 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9159
  %flags29 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %104, i32 0, i32 3, !dbg !9161
  %105 = load i64, i64* %flags29, align 16, !dbg !9161
  %and30 = and i64 %105, 8, !dbg !9162
  %tobool31 = icmp ne i64 %and30, 0, !dbg !9162
  br i1 %tobool31, label %if.then32, label %if.end46, !dbg !9163

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !9164, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x313, metadata !9167, metadata !DIExpression()), !dbg !9169
  %106 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9169
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %106, i32 0, i32 0, !dbg !9169
  %107 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9169
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %107, i32 0, i32 25, !dbg !9169
  %108 = load i32, i32* %can_queue, align 4, !dbg !9169
  store i32 %108, i32* %__UNIQUE_ID___x313, align 4, !dbg !9169
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y314, metadata !9170, metadata !DIExpression()), !dbg !9169
  %109 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9169
  %110 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %109, i32 0, i32 27, !dbg !9169
  %id33 = bitcast %union.anon.90* %110 to [256 x i16]*, !dbg !9169
  %arrayidx = getelementptr [256 x i16], [256 x i16]* %id33, i64 0, i64 75, !dbg !9169
  %111 = load i16, i16* %arrayidx, align 2, !dbg !9169
  %conv34 = zext i16 %111 to i32, !dbg !9169
  %and35 = and i32 %conv34, 31, !dbg !9169
  %add = add i32 %and35, 1, !dbg !9169
  store i32 %add, i32* %__UNIQUE_ID___y314, align 4, !dbg !9169
  %112 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !9169
  %113 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !9169
  %cmp36 = icmp slt i32 %112, %113, !dbg !9169
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !9169

cond.true:                                        ; preds = %if.then32
  %114 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !9169
  br label %cond.end, !dbg !9169

cond.false:                                       ; preds = %if.then32
  %115 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !9169
  br label %cond.end, !dbg !9169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %114, %cond.true ], [ %115, %cond.false ], !dbg !9169
  store i32 %cond, i32* %tmp, align 4, !dbg !9169
  %116 = load i32, i32* %tmp, align 4, !dbg !9169
  store i32 %116, i32* %depth, align 4, !dbg !9171
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x315, metadata !9172, metadata !DIExpression()), !dbg !9174
  store i32 32, i32* %__UNIQUE_ID___x315, align 4, !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y316, metadata !9175, metadata !DIExpression()), !dbg !9174
  %117 = load i32, i32* %depth, align 4, !dbg !9174
  store i32 %117, i32* %__UNIQUE_ID___y316, align 4, !dbg !9174
  %118 = load i32, i32* %__UNIQUE_ID___x315, align 4, !dbg !9174
  %119 = load i32, i32* %__UNIQUE_ID___y316, align 4, !dbg !9174
  %cmp39 = icmp slt i32 %118, %119, !dbg !9174
  br i1 %cmp39, label %cond.true41, label %cond.false42, !dbg !9174

cond.true41:                                      ; preds = %cond.end
  %120 = load i32, i32* %__UNIQUE_ID___x315, align 4, !dbg !9174
  br label %cond.end43, !dbg !9174

cond.false42:                                     ; preds = %cond.end
  %121 = load i32, i32* %__UNIQUE_ID___y316, align 4, !dbg !9174
  br label %cond.end43, !dbg !9174

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi i32 [ %120, %cond.true41 ], [ %121, %cond.false42 ], !dbg !9174
  store i32 %cond44, i32* %tmp38, align 4, !dbg !9174
  %122 = load i32, i32* %tmp38, align 4, !dbg !9174
  store i32 %122, i32* %depth, align 4, !dbg !9176
  %123 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9177
  %124 = load i32, i32* %depth, align 4, !dbg !9178
  %call45 = call i32 @scsi_change_queue_depth(%struct.scsi_device* %123, i32 %124) #10, !dbg !9179
  br label %if.end46, !dbg !9180

if.end46:                                         ; preds = %cond.end43, %if.end28
  %125 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9181
  %flags47 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %125, i32 0, i32 3, !dbg !9183
  %126 = load i64, i64* %flags47, align 16, !dbg !9183
  %and48 = and i64 %126, 256, !dbg !9184
  %tobool49 = icmp ne i64 %and48, 0, !dbg !9184
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !9185

if.then50:                                        ; preds = %if.end46
  %127 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9186
  %security_supported = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %127, i32 0, i32 39, !dbg !9187
  %128 = bitcast [6 x i8]* %security_supported to i48*, !dbg !9187
  %bf.load51 = load i48, i48* %128, align 4, !dbg !9188
  %bf.clear52 = and i48 %bf.load51, -549755813889, !dbg !9188
  %bf.set53 = or i48 %bf.clear52, 549755813888, !dbg !9188
  store i48 %bf.set53, i48* %128, align 4, !dbg !9188
  br label %if.end54, !dbg !9186

if.end54:                                         ; preds = %if.then50, %if.end46
  %129 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9189
  %130 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9190
  %sdev55 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %130, i32 0, i32 4, !dbg !9191
  store %struct.scsi_device* %129, %struct.scsi_device** %sdev55, align 8, !dbg !9192
  store i32 0, i32* %retval, align 4, !dbg !9193
  br label %return, !dbg !9193

return:                                           ; preds = %if.end54, %if.then8
  %131 = load i32, i32* %retval, align 4, !dbg !9194
  ret i32 %131, !dbg !9194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_unload(i16* %id) #0 !dbg !9195 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !9200, metadata !DIExpression()), !dbg !9201
  %0 = load i16*, i16** %id.addr, align 8, !dbg !9202
  %call = call i32 @ata_id_major_version(i16* %0) #10, !dbg !9204
  %cmp = icmp uge i32 %call, 7, !dbg !9205
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9206

land.lhs.true:                                    ; preds = %entry
  %1 = load i16*, i16** %id.addr, align 8, !dbg !9207
  %arrayidx = getelementptr i16, i16* %1, i64 84, !dbg !9207
  %2 = load i16, i16* %arrayidx, align 2, !dbg !9207
  %conv = zext i16 %2 to i32, !dbg !9207
  %and = and i32 %conv, 49152, !dbg !9208
  %cmp1 = icmp eq i32 %and, 16384, !dbg !9209
  br i1 %cmp1, label %land.lhs.true3, label %if.end, !dbg !9210

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i16*, i16** %id.addr, align 8, !dbg !9211
  %arrayidx4 = getelementptr i16, i16* %3, i64 84, !dbg !9211
  %4 = load i16, i16* %arrayidx4, align 2, !dbg !9211
  %conv5 = zext i16 %4 to i32, !dbg !9211
  %and6 = and i32 %conv5, 8192, !dbg !9212
  %tobool = icmp ne i32 %and6, 0, !dbg !9212
  br i1 %tobool, label %if.then, label %if.end, !dbg !9213

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !9214
  br label %return, !dbg !9214

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !9215
  br label %return, !dbg !9215

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !9216
  ret i1 %5, !dbg !9216
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_hw_sectors(%struct.request_queue*, i32) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_update_dma_pad(%struct.request_queue*, i32) #2

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_segments(%struct.request_queue*, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @queue_max_segments(%struct.request_queue* %q) #0 !dbg !9217 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !9222, metadata !DIExpression()), !dbg !9223
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !9224
  %limits = getelementptr inbounds %struct.request_queue, %struct.request_queue* %0, i32 0, i32 34, !dbg !9225
  %max_segments = getelementptr inbounds %struct.queue_limits, %struct.queue_limits* %limits, i32 0, i32 20, !dbg !9226
  %1 = load i16, i16* %max_segments, align 4, !dbg !9226
  ret i16 %1, !dbg !9227
}

; Function Attrs: noredzone
declare dso_local void @ata_dev_printk(%struct.ata_device*, i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_id_logical_sector_size(i16* %id) #0 !dbg !9228 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !9231, metadata !DIExpression()), !dbg !9232
  %0 = load i16*, i16** %id.addr, align 8, !dbg !9233
  %arrayidx = getelementptr i16, i16* %0, i64 106, !dbg !9233
  %1 = load i16, i16* %arrayidx, align 2, !dbg !9233
  %conv = zext i16 %1 to i32, !dbg !9233
  %and = and i32 %conv, 53248, !dbg !9235
  %cmp = icmp eq i32 %and, 20480, !dbg !9236
  br i1 %cmp, label %if.then, label %if.end, !dbg !9237

if.then:                                          ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !9238
  %arrayidx2 = getelementptr i16, i16* %2, i64 118, !dbg !9238
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !9238
  %conv3 = zext i16 %3 to i32, !dbg !9238
  %shl = shl i32 %conv3, 16, !dbg !9239
  %4 = load i16*, i16** %id.addr, align 8, !dbg !9240
  %arrayidx4 = getelementptr i16, i16* %4, i64 117, !dbg !9240
  %5 = load i16, i16* %arrayidx4, align 2, !dbg !9240
  %conv5 = zext i16 %5 to i32, !dbg !9240
  %add = add i32 %shl, %conv5, !dbg !9241
  %conv6 = sext i32 %add to i64, !dbg !9242
  %mul = mul i64 %conv6, 2, !dbg !9243
  %conv7 = trunc i64 %mul to i32, !dbg !9244
  store i32 %conv7, i32* %retval, align 4, !dbg !9245
  br label %return, !dbg !9245

if.end:                                           ; preds = %entry
  store i32 512, i32* %retval, align 4, !dbg !9246
  br label %return, !dbg !9246

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9247
  ret i32 %6, !dbg !9247
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_update_dma_alignment(%struct.request_queue*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !9248 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9254, metadata !DIExpression()), !dbg !9257
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9259, metadata !DIExpression()), !dbg !9260
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9261, metadata !DIExpression()), !dbg !9269
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9271, metadata !DIExpression()), !dbg !9272
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9273, metadata !DIExpression()), !dbg !9274
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9275, metadata !DIExpression()), !dbg !9276
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9277
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9278
  %div = sdiv i64 %1, 64, !dbg !9278
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9279
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9277
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9280
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9281
  %conv.i = trunc i64 %4 to i32, !dbg !9281
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !9282
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9283
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9283
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !9283
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9284
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9285
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9286
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #5, !dbg !9288
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9289

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9290
  %12 = bitcast i64* %11 to i8*, !dbg !9290
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9290
  %shr.i = ashr i64 %13, 3, !dbg !9290
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9290
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9292
  %and.i = and i64 %14, 7, !dbg !9292
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9292
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9292
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #5, !dbg !9293, !srcloc !9294
  br label %arch_set_bit.exit, !dbg !9295

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9296
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9298
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #5, !dbg !9299, !srcloc !9300
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9301
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_change_queue_depth(%struct.scsi_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_scsi_slave_config(%struct.scsi_device* %sdev) #0 !dbg !9302 {
entry:
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %rc = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9303, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9305, metadata !DIExpression()), !dbg !9306
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9307
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !9308
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9308
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %1) #10, !dbg !9309
  store %struct.ata_port* %call, %struct.ata_port** %ap, align 8, !dbg !9306
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !9310, metadata !DIExpression()), !dbg !9311
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9312
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9313
  %call1 = call %struct.ata_device* @__ata_scsi_find_dev(%struct.ata_port* %2, %struct.scsi_device* %3) #10, !dbg !9314
  store %struct.ata_device* %call1, %struct.ata_device** %dev, align 8, !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9315, metadata !DIExpression()), !dbg !9316
  store i32 0, i32* %rc, align 4, !dbg !9316
  %4 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9317
  call void @ata_scsi_sdev_config(%struct.scsi_device* %4) #10, !dbg !9318
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9319
  %tobool = icmp ne %struct.ata_device* %5, null, !dbg !9319
  br i1 %tobool, label %if.then, label %if.end, !dbg !9321

if.then:                                          ; preds = %entry
  %6 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9322
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9323
  %call2 = call i32 @ata_scsi_dev_config(%struct.scsi_device* %6, %struct.ata_device* %7) #10, !dbg !9324
  store i32 %call2, i32* %rc, align 4, !dbg !9325
  br label %if.end, !dbg !9326

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %rc, align 4, !dbg !9327
  ret i32 %8, !dbg !9328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_device* @__ata_scsi_find_dev(%struct.ata_port* %ap, %struct.scsi_device* %scsidev) #0 !dbg !9329 {
entry:
  %retval = alloca %struct.ata_device*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %scsidev.addr = alloca %struct.scsi_device*, align 8
  %devno = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  store %struct.scsi_device* %scsidev, %struct.scsi_device** %scsidev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsidev.addr, metadata !9332, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.declare(metadata i32* %devno, metadata !9334, metadata !DIExpression()), !dbg !9335
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9336
  %call = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %0) #10, !dbg !9338
  br i1 %call, label %if.else, label %if.then, !dbg !9339

if.then:                                          ; preds = %entry
  %1 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !9340
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 17, !dbg !9340
  %2 = load i32, i32* %channel, align 4, !dbg !9340
  %tobool = icmp ne i32 %2, 0, !dbg !9340
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !9340

lor.rhs:                                          ; preds = %if.then
  %3 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !9340
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %3, i32 0, i32 18, !dbg !9340
  %4 = load i64, i64* %lun, align 8, !dbg !9340
  %tobool1 = icmp ne i64 %4, 0, !dbg !9340
  br label %lor.end, !dbg !9340

lor.end:                                          ; preds = %lor.rhs, %if.then
  %5 = phi i1 [ true, %if.then ], [ %tobool1, %lor.rhs ]
  %lnot = xor i1 %5, true, !dbg !9340
  %lnot2 = xor i1 %lnot, true, !dbg !9340
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9340
  %conv = sext i32 %lnot.ext to i64, !dbg !9340
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9340
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9343

if.then4:                                         ; preds = %lor.end
  store %struct.ata_device* null, %struct.ata_device** %retval, align 8, !dbg !9344
  br label %return, !dbg !9344

if.end:                                           ; preds = %lor.end
  %6 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !9345
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 16, !dbg !9346
  %7 = load i32, i32* %id, align 8, !dbg !9346
  store i32 %7, i32* %devno, align 4, !dbg !9347
  br label %if.end20, !dbg !9348

if.else:                                          ; preds = %entry
  %8 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !9349
  %id5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 16, !dbg !9349
  %9 = load i32, i32* %id5, align 8, !dbg !9349
  %tobool6 = icmp ne i32 %9, 0, !dbg !9349
  br i1 %tobool6, label %lor.end10, label %lor.rhs7, !dbg !9349

lor.rhs7:                                         ; preds = %if.else
  %10 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !9349
  %lun8 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %10, i32 0, i32 18, !dbg !9349
  %11 = load i64, i64* %lun8, align 8, !dbg !9349
  %tobool9 = icmp ne i64 %11, 0, !dbg !9349
  br label %lor.end10, !dbg !9349

lor.end10:                                        ; preds = %lor.rhs7, %if.else
  %12 = phi i1 [ true, %if.else ], [ %tobool9, %lor.rhs7 ]
  %lnot11 = xor i1 %12, true, !dbg !9349
  %lnot13 = xor i1 %lnot11, true, !dbg !9349
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !9349
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !9349
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !9349
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9352

if.then17:                                        ; preds = %lor.end10
  store %struct.ata_device* null, %struct.ata_device** %retval, align 8, !dbg !9353
  br label %return, !dbg !9353

if.end18:                                         ; preds = %lor.end10
  %13 = load %struct.scsi_device*, %struct.scsi_device** %scsidev.addr, align 8, !dbg !9354
  %channel19 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %13, i32 0, i32 17, !dbg !9355
  %14 = load i32, i32* %channel19, align 4, !dbg !9355
  store i32 %14, i32* %devno, align 4, !dbg !9356
  br label %if.end20

if.end20:                                         ; preds = %if.end18, %if.end
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9357
  %16 = load i32, i32* %devno, align 4, !dbg !9358
  %call21 = call %struct.ata_device* @ata_find_dev(%struct.ata_port* %15, i32 %16) #10, !dbg !9359
  store %struct.ata_device* %call21, %struct.ata_device** %retval, align 8, !dbg !9360
  br label %return, !dbg !9360

return:                                           ; preds = %if.end20, %if.then17, %if.then4
  %17 = load %struct.ata_device*, %struct.ata_device** %retval, align 8, !dbg !9361
  ret %struct.ata_device* %17, !dbg !9361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_slave_destroy(%struct.scsi_device* %sdev) #0 !dbg !9362 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !7129, metadata !DIExpression()), !dbg !9363
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !9365
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !9366
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %dev = alloca %struct.ata_device*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9375, metadata !DIExpression()), !dbg !9376
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9377
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !9378
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9378
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %1) #10, !dbg !9379
  store %struct.ata_port* %call, %struct.ata_port** %ap, align 8, !dbg !9376
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9380, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !9382, metadata !DIExpression()), !dbg !9383
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9384
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 1, !dbg !9386
  %3 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9386
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %3, i32 0, i32 22, !dbg !9387
  %4 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9387
  %tobool = icmp ne void (%struct.ata_port*)* %4, null, !dbg !9384
  br i1 %tobool, label %if.end, label %if.then, !dbg !9388

if.then:                                          ; preds = %entry
  br label %return, !dbg !9389

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9390

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !9391

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9395, metadata !DIExpression()), !dbg !9394
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9394
  %conv = zext i1 %cmp to i32, !dbg !9394
  store i32 1, i32* %tmp, align 4, !dbg !9394
  %5 = load i32, i32* %tmp, align 4, !dbg !9394
  br label %do.body2, !dbg !9396

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9397

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9398

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9400, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9404, metadata !DIExpression()), !dbg !9403
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9403
  %conv8 = zext i1 %cmp7 to i32, !dbg !9403
  store i32 1, i32* %tmp9, align 4, !dbg !9403
  %6 = load i32, i32* %tmp9, align 4, !dbg !9403
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !9405
  store i64 %call10, i64* %flags, align 8, !dbg !9405
  br label %do.end, !dbg !9405

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !9398

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9397

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9406, !srcloc !9407
  br label %do.body13, !dbg !9406

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9408
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 2, !dbg !9408
  %8 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9408
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9409
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !9410
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !9410
  br label %do.end15, !dbg !9408

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9406

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9397

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9396

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9391

do.end19:                                         ; preds = %do.end18
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9411
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9412
  %call20 = call %struct.ata_device* @__ata_scsi_find_dev(%struct.ata_port* %11, %struct.scsi_device* %12) #10, !dbg !9413
  store %struct.ata_device* %call20, %struct.ata_device** %dev, align 8, !dbg !9414
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9415
  %tobool21 = icmp ne %struct.ata_device* %13, null, !dbg !9415
  br i1 %tobool21, label %land.lhs.true, label %if.end27, !dbg !9417

land.lhs.true:                                    ; preds = %do.end19
  %14 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9418
  %sdev22 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 4, !dbg !9419
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev22, align 8, !dbg !9419
  %tobool23 = icmp ne %struct.scsi_device* %15, null, !dbg !9418
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !9420

if.then24:                                        ; preds = %land.lhs.true
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9421
  %sdev25 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 4, !dbg !9423
  store %struct.scsi_device* null, %struct.scsi_device** %sdev25, align 8, !dbg !9424
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9425
  %flags26 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 3, !dbg !9426
  %18 = load i64, i64* %flags26, align 16, !dbg !9427
  %or = or i64 %18, 16777216, !dbg !9427
  store i64 %or, i64* %flags26, align 16, !dbg !9427
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9428
  call void @ata_port_schedule_eh(%struct.ata_port* %19) #10, !dbg !9429
  br label %if.end27, !dbg !9430

if.end27:                                         ; preds = %if.then24, %land.lhs.true, %do.end19
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9431
  %lock28 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 2, !dbg !9432
  %21 = load %struct.spinlock*, %struct.spinlock** %lock28, align 16, !dbg !9432
  %22 = load i64, i64* %flags, align 8, !dbg !9433
  store %struct.spinlock* %21, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !9434
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !9434
  store i32 1, i32* %tmp.i, align 4, !dbg !9434
  %23 = load i32, i32* %tmp.i, align 4, !dbg !9434
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !9435
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !9435
  store i32 1, i32* %tmp8.i, align 4, !dbg !9435
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !9435
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !9436
  call void @arch_local_irq_restore(i64 %25) #11, !dbg !9436
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9437, !srcloc !7307
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !9438
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !9438
  %rlock.i30 = bitcast %union.anon.1* %27 to %struct.raw_spinlock*, !dbg !9438
  %28 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !9439
  %dma_drain_buf = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %28, i32 0, i32 57, !dbg !9440
  %29 = load i8*, i8** %dma_drain_buf, align 8, !dbg !9440
  call void @kfree(i8* %29) #10, !dbg !9441
  br label %return, !dbg !9442

return:                                           ; preds = %if.end27, %if.then
  ret void, !dbg !9442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_enabled(%struct.ata_device* %dev) #0 !dbg !9443 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9448, metadata !DIExpression()), !dbg !9449
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9450
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 11, !dbg !9451
  %1 = load i32, i32* %class, align 64, !dbg !9451
  %call = call i32 @ata_class_enabled(i32 %1) #10, !dbg !9452
  ret i32 %call, !dbg !9453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_dump_cdb(%struct.ata_port* %ap, %struct.scsi_cmnd* %cmd) #0 !dbg !9454 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  ret void, !dbg !9461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__ata_scsi_queuecmd(%struct.scsi_cmnd* %scmd, %struct.ata_device* %dev) #0 !dbg !9462 {
entry:
  %retval = alloca i32, align 4
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %scsi_op = alloca i8, align 1
  %xlat_func = alloca i32 (%struct.ata_queued_cmd*)*, align 8
  %rc = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !9465, metadata !DIExpression()), !dbg !9466
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9467, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.declare(metadata i8* %scsi_op, metadata !9469, metadata !DIExpression()), !dbg !9470
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9471
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 14, !dbg !9472
  %1 = load i8*, i8** %cmnd, align 8, !dbg !9472
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !9471
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9471
  store i8 %2, i8* %scsi_op, align 1, !dbg !9470
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_queued_cmd*)** %xlat_func, metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9476, metadata !DIExpression()), !dbg !9477
  store i32 0, i32* %rc, align 4, !dbg !9477
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9478
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 11, !dbg !9480
  %4 = load i32, i32* %class, align 64, !dbg !9480
  %cmp = icmp eq i32 %4, 1, !dbg !9481
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9482

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9483
  %class1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 11, !dbg !9484
  %6 = load i32, i32* %class1, align 64, !dbg !9484
  %cmp2 = icmp eq i32 %6, 9, !dbg !9485
  br i1 %cmp2, label %if.then, label %if.else, !dbg !9486

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9487
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 12, !dbg !9487
  %8 = load i16, i16* %cmd_len, align 4, !dbg !9487
  %tobool = icmp ne i16 %8, 0, !dbg !9487
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !9487

lor.rhs:                                          ; preds = %if.then
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9487
  %cmd_len3 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %9, i32 0, i32 12, !dbg !9487
  %10 = load i16, i16* %cmd_len3, align 4, !dbg !9487
  %conv = zext i16 %10 to i32, !dbg !9487
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9487
  %cdb_len = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 19, !dbg !9487
  %12 = load i32, i32* %cdb_len, align 32, !dbg !9487
  %cmp4 = icmp ugt i32 %conv, %12, !dbg !9487
  br label %lor.end, !dbg !9487

lor.end:                                          ; preds = %lor.rhs, %if.then
  %13 = phi i1 [ true, %if.then ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %13, true, !dbg !9487
  %lnot6 = xor i1 %lnot, true, !dbg !9487
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !9487
  %conv7 = sext i32 %lnot.ext to i64, !dbg !9487
  %tobool8 = icmp ne i64 %conv7, 0, !dbg !9487
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !9490

if.then9:                                         ; preds = %lor.end
  br label %bad_cdb_len, !dbg !9491

if.end:                                           ; preds = %lor.end
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9492
  %15 = load i8, i8* %scsi_op, align 1, !dbg !9493
  %call = call i32 (%struct.ata_queued_cmd*)* @ata_get_xlat_func(%struct.ata_device* %14, i8 zeroext %15) #10, !dbg !9494
  store i32 (%struct.ata_queued_cmd*)* %call, i32 (%struct.ata_queued_cmd*)** %xlat_func, align 8, !dbg !9495
  br label %if.end77, !dbg !9496

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9497
  %cmd_len10 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 12, !dbg !9497
  %17 = load i16, i16* %cmd_len10, align 4, !dbg !9497
  %tobool11 = icmp ne i16 %17, 0, !dbg !9497
  %lnot12 = xor i1 %tobool11, true, !dbg !9497
  %lnot14 = xor i1 %lnot12, true, !dbg !9497
  %lnot16 = xor i1 %lnot14, true, !dbg !9497
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9497
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9497
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !9497
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !9500

if.then20:                                        ; preds = %if.else
  br label %bad_cdb_len, !dbg !9501

if.end21:                                         ; preds = %if.else
  store i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)** %xlat_func, align 8, !dbg !9502
  %18 = load i8, i8* %scsi_op, align 1, !dbg !9503
  %conv22 = zext i8 %18 to i32, !dbg !9503
  %cmp23 = icmp ne i32 %conv22, 133, !dbg !9503
  br i1 %cmp23, label %lor.end29, label %lor.rhs25, !dbg !9503

lor.rhs25:                                        ; preds = %if.end21
  %19 = load i32, i32* @atapi_passthru16, align 4, !dbg !9503
  %tobool26 = icmp ne i32 %19, 0, !dbg !9503
  %lnot27 = xor i1 %tobool26, true, !dbg !9503
  br label %lor.end29, !dbg !9503

lor.end29:                                        ; preds = %lor.rhs25, %if.end21
  %20 = phi i1 [ true, %if.end21 ], [ %lnot27, %lor.rhs25 ]
  %lnot30 = xor i1 %20, true, !dbg !9503
  %lnot32 = xor i1 %lnot30, true, !dbg !9503
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !9503
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !9503
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !9503
  br i1 %tobool35, label %if.then36, label %if.else62, !dbg !9505

if.then36:                                        ; preds = %lor.end29
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9506, metadata !DIExpression()), !dbg !9508
  %21 = load i8, i8* %scsi_op, align 1, !dbg !9509
  %conv37 = zext i8 %21 to i32, !dbg !9509
  %shr = ashr i32 %conv37, 5, !dbg !9509
  %and = and i32 %shr, 7, !dbg !9509
  %idxprom = sext i32 %and to i64, !dbg !9509
  %arrayidx38 = getelementptr [8 x i8], [8 x i8]* @scsi_command_size_tbl, i64 0, i64 %idxprom, !dbg !9509
  %22 = load i8, i8* %arrayidx38, align 1, !dbg !9509
  %conv39 = zext i8 %22 to i32, !dbg !9509
  store i32 %conv39, i32* %len, align 4, !dbg !9508
  %23 = load i32, i32* %len, align 4, !dbg !9510
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9510
  %cmd_len40 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 12, !dbg !9510
  %25 = load i16, i16* %cmd_len40, align 4, !dbg !9510
  %conv41 = zext i16 %25 to i32, !dbg !9510
  %cmp42 = icmp sgt i32 %23, %conv41, !dbg !9510
  br i1 %cmp42, label %lor.end53, label %lor.lhs.false44, !dbg !9510

lor.lhs.false44:                                  ; preds = %if.then36
  %26 = load i32, i32* %len, align 4, !dbg !9510
  %27 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9510
  %cdb_len45 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %27, i32 0, i32 19, !dbg !9510
  %28 = load i32, i32* %cdb_len45, align 32, !dbg !9510
  %cmp46 = icmp ugt i32 %26, %28, !dbg !9510
  br i1 %cmp46, label %lor.end53, label %lor.rhs48, !dbg !9510

lor.rhs48:                                        ; preds = %lor.lhs.false44
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9510
  %cmd_len49 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 12, !dbg !9510
  %30 = load i16, i16* %cmd_len49, align 4, !dbg !9510
  %conv50 = zext i16 %30 to i32, !dbg !9510
  %cmp51 = icmp sgt i32 %conv50, 16, !dbg !9510
  br label %lor.end53, !dbg !9510

lor.end53:                                        ; preds = %lor.rhs48, %lor.lhs.false44, %if.then36
  %31 = phi i1 [ true, %lor.lhs.false44 ], [ true, %if.then36 ], [ %cmp51, %lor.rhs48 ]
  %lnot54 = xor i1 %31, true, !dbg !9510
  %lnot56 = xor i1 %lnot54, true, !dbg !9510
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !9510
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !9510
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !9510
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !9512

if.then60:                                        ; preds = %lor.end53
  br label %bad_cdb_len, !dbg !9513

if.end61:                                         ; preds = %lor.end53
  store i32 (%struct.ata_queued_cmd*)* @atapi_xlat, i32 (%struct.ata_queued_cmd*)** %xlat_func, align 8, !dbg !9514
  br label %if.end76, !dbg !9515

if.else62:                                        ; preds = %lor.end29
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9516
  %cmd_len63 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %32, i32 0, i32 12, !dbg !9516
  %33 = load i16, i16* %cmd_len63, align 4, !dbg !9516
  %conv64 = zext i16 %33 to i32, !dbg !9516
  %cmp65 = icmp sgt i32 %conv64, 16, !dbg !9516
  %lnot67 = xor i1 %cmp65, true, !dbg !9516
  %lnot69 = xor i1 %lnot67, true, !dbg !9516
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !9516
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !9516
  %tobool72 = icmp ne i64 %conv71, 0, !dbg !9516
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !9519

if.then73:                                        ; preds = %if.else62
  br label %bad_cdb_len, !dbg !9520

if.end74:                                         ; preds = %if.else62
  %34 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9521
  %35 = load i8, i8* %scsi_op, align 1, !dbg !9522
  %call75 = call i32 (%struct.ata_queued_cmd*)* @ata_get_xlat_func(%struct.ata_device* %34, i8 zeroext %35) #10, !dbg !9523
  store i32 (%struct.ata_queued_cmd*)* %call75, i32 (%struct.ata_queued_cmd*)** %xlat_func, align 8, !dbg !9524
  br label %if.end76

if.end76:                                         ; preds = %if.end74, %if.end61
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end
  %36 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %xlat_func, align 8, !dbg !9525
  %tobool78 = icmp ne i32 (%struct.ata_queued_cmd*)* %36, null, !dbg !9525
  br i1 %tobool78, label %if.then79, label %if.else81, !dbg !9527

if.then79:                                        ; preds = %if.end77
  %37 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9528
  %38 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9529
  %39 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %xlat_func, align 8, !dbg !9530
  %call80 = call i32 @ata_scsi_translate(%struct.ata_device* %37, %struct.scsi_cmnd* %38, i32 (%struct.ata_queued_cmd*)* %39) #10, !dbg !9531
  store i32 %call80, i32* %rc, align 4, !dbg !9532
  br label %if.end82, !dbg !9533

if.else81:                                        ; preds = %if.end77
  %40 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9534
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9535
  call void @ata_scsi_simulate(%struct.ata_device* %40, %struct.scsi_cmnd* %41) #10, !dbg !9536
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.then79
  %42 = load i32, i32* %rc, align 4, !dbg !9537
  store i32 %42, i32* %retval, align 4, !dbg !9538
  br label %return, !dbg !9538

bad_cdb_len:                                      ; preds = %if.then73, %if.then60, %if.then20, %if.then9
  call void @llvm.dbg.label(metadata !9539), !dbg !9540
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9541
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %43, i32 0, i32 24, !dbg !9542
  store i32 458752, i32* %result, align 8, !dbg !9543
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9544
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %44, i32 0, i32 21, !dbg !9545
  %45 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !9545
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9546
  call void %45(%struct.scsi_cmnd* %46) #10, !dbg !9544
  store i32 0, i32* %retval, align 4, !dbg !9547
  br label %return, !dbg !9547

return:                                           ; preds = %bad_cdb_len, %if.end82
  %47 = load i32, i32* %retval, align 4, !dbg !9548
  ret i32 %47, !dbg !9548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 (%struct.ata_queued_cmd*)* @ata_get_xlat_func(%struct.ata_device* %dev, i8 zeroext %cmd) #0 !dbg !9549 {
entry:
  %retval = alloca i32 (%struct.ata_queued_cmd*)*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca i8, align 1
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9552, metadata !DIExpression()), !dbg !9553
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  %0 = load i8, i8* %cmd.addr, align 1, !dbg !9556
  %conv = zext i8 %0 to i32, !dbg !9556
  switch i32 %conv, label %sw.epilog [
    i32 8, label %sw.bb
    i32 40, label %sw.bb
    i32 136, label %sw.bb
    i32 10, label %sw.bb
    i32 42, label %sw.bb
    i32 138, label %sw.bb
    i32 147, label %sw.bb1
    i32 53, label %sw.bb2
    i32 47, label %sw.bb3
    i32 143, label %sw.bb3
    i32 161, label %sw.bb4
    i32 133, label %sw.bb4
    i32 127, label %sw.bb5
    i32 21, label %sw.bb6
    i32 85, label %sw.bb6
    i32 149, label %sw.bb7
    i32 148, label %sw.bb8
    i32 162, label %sw.bb9
    i32 181, label %sw.bb9
    i32 27, label %sw.bb13
  ], !dbg !9557

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_rw_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9558
  br label %return, !dbg !9558

sw.bb1:                                           ; preds = %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_write_same_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9560
  br label %return, !dbg !9560

sw.bb2:                                           ; preds = %entry
  %1 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9561
  %call = call i32 @ata_try_flush_cache(%struct.ata_device* %1) #10, !dbg !9563
  %tobool = icmp ne i32 %call, 0, !dbg !9563
  br i1 %tobool, label %if.then, label %if.end, !dbg !9564

if.then:                                          ; preds = %sw.bb2
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_flush_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9565
  br label %return, !dbg !9565

if.end:                                           ; preds = %sw.bb2
  br label %sw.epilog, !dbg !9566

sw.bb3:                                           ; preds = %entry, %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_verify_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9567
  br label %return, !dbg !9567

sw.bb4:                                           ; preds = %entry, %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_pass_thru, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9568
  br label %return, !dbg !9568

sw.bb5:                                           ; preds = %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_var_len_cdb_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9569
  br label %return, !dbg !9569

sw.bb6:                                           ; preds = %entry, %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_mode_select_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9570
  br label %return, !dbg !9570

sw.bb7:                                           ; preds = %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_zbc_in_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9571
  br label %return, !dbg !9571

sw.bb8:                                           ; preds = %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_zbc_out_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9572
  br label %return, !dbg !9572

sw.bb9:                                           ; preds = %entry, %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9573
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 3, !dbg !9575
  %3 = load i64, i64* %flags, align 16, !dbg !9575
  %and = and i64 %3, 256, !dbg !9576
  %tobool10 = icmp ne i64 %and, 0, !dbg !9576
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9577

if.then11:                                        ; preds = %sw.bb9
  br label %sw.epilog, !dbg !9578

if.end12:                                         ; preds = %sw.bb9
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_security_inout_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9579
  br label %return, !dbg !9579

sw.bb13:                                          ; preds = %entry
  store i32 (%struct.ata_queued_cmd*)* @ata_scsi_start_stop_xlat, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9580
  br label %return, !dbg !9580

sw.epilog:                                        ; preds = %entry, %if.then11, %if.end
  store i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9581
  br label %return, !dbg !9581

return:                                           ; preds = %sw.epilog, %sw.bb13, %if.end12, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %if.then, %sw.bb1, %sw.bb
  %4 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %retval, align 8, !dbg !9582
  ret i32 (%struct.ata_queued_cmd*)* %4, !dbg !9582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atapi_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !9583 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %nodata = alloca i32, align 4
  %using_pio = alloca i32, align 4
  %nbytes = alloca i32, align 4
  %__UNIQUE_ID___x317 = alloca i32, align 4
  %__UNIQUE_ID___y318 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9584, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !9586, metadata !DIExpression()), !dbg !9587
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9588
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !9589
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !9589
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !9587
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !9590, metadata !DIExpression()), !dbg !9591
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9592
  %dev1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 1, !dbg !9593
  %3 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !9593
  store %struct.ata_device* %3, %struct.ata_device** %dev, align 8, !dbg !9591
  call void @llvm.dbg.declare(metadata i32* %nodata, metadata !9594, metadata !DIExpression()), !dbg !9595
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9596
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 13, !dbg !9597
  %5 = load i32, i32* %sc_data_direction, align 8, !dbg !9597
  %cmp = icmp eq i32 %5, 3, !dbg !9598
  %conv = zext i1 %cmp to i32, !dbg !9598
  store i32 %conv, i32* %nodata, align 4, !dbg !9595
  call void @llvm.dbg.declare(metadata i32* %using_pio, metadata !9599, metadata !DIExpression()), !dbg !9600
  %6 = load i32, i32* %nodata, align 4, !dbg !9601
  %tobool = icmp ne i32 %6, 0, !dbg !9601
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !9602

land.rhs:                                         ; preds = %entry
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9603
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 3, !dbg !9604
  %8 = load i64, i64* %flags, align 16, !dbg !9604
  %and = and i64 %8, 4096, !dbg !9605
  %tobool2 = icmp ne i64 %and, 0, !dbg !9602
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !9606
  %land.ext = zext i1 %9 to i32, !dbg !9602
  store i32 %land.ext, i32* %using_pio, align 4, !dbg !9600
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !9607, metadata !DIExpression()), !dbg !9608
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9609
  %cdb = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 5, !dbg !9610
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %cdb, i64 0, i64 0, !dbg !9611
  %11 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9612
  %cdb_len = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 19, !dbg !9613
  %12 = load i32, i32* %cdb_len, align 32, !dbg !9613
  %conv3 = zext i32 %12 to i64, !dbg !9612
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay, i8 0, i64 %conv3, i1 false), !dbg !9611
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9614
  %cdb4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 5, !dbg !9615
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %cdb4, i64 0, i64 0, !dbg !9616
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9617
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 14, !dbg !9618
  %15 = load i8*, i8** %cmnd, align 8, !dbg !9618
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9619
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 12, !dbg !9620
  %17 = load i16, i16* %cmd_len, align 4, !dbg !9620
  %conv6 = zext i16 %17 to i64, !dbg !9619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay5, i8* align 1 %15, i64 %conv6, i1 false), !dbg !9616
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9621
  %complete_fn = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 22, !dbg !9622
  store void (%struct.ata_queued_cmd*)* @atapi_qc_complete, void (%struct.ata_queued_cmd*)** %complete_fn, align 8, !dbg !9623
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9624
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 4, !dbg !9625
  %flags7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !9626
  %20 = load i64, i64* %flags7, align 8, !dbg !9627
  %or = or i64 %20, 6, !dbg !9627
  store i64 %or, i64* %flags7, align 8, !dbg !9627
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9628
  %sc_data_direction8 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %21, i32 0, i32 13, !dbg !9630
  %22 = load i32, i32* %sc_data_direction8, align 8, !dbg !9630
  %cmp9 = icmp eq i32 %22, 1, !dbg !9631
  br i1 %cmp9, label %if.then, label %if.end, !dbg !9632

if.then:                                          ; preds = %land.end
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9633
  %tf11 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 4, !dbg !9635
  %flags12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf11, i32 0, i32 0, !dbg !9636
  %24 = load i64, i64* %flags12, align 8, !dbg !9637
  %or13 = or i64 %24, 8, !dbg !9637
  store i64 %or13, i64* %flags12, align 8, !dbg !9637
  br label %if.end, !dbg !9638

if.end:                                           ; preds = %if.then, %land.end
  %25 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9639
  %tf14 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %25, i32 0, i32 4, !dbg !9640
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf14, i32 0, i32 14, !dbg !9641
  store i8 -96, i8* %command, align 1, !dbg !9642
  %26 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9643
  call void @ata_qc_set_pc_nbytes(%struct.ata_queued_cmd* %26) #10, !dbg !9644
  %27 = load i32, i32* %nodata, align 4, !dbg !9645
  %tobool15 = icmp ne i32 %27, 0, !dbg !9645
  br i1 %tobool15, label %if.end20, label %land.lhs.true, !dbg !9647

land.lhs.true:                                    ; preds = %if.end
  %28 = load i32, i32* %using_pio, align 4, !dbg !9648
  %tobool16 = icmp ne i32 %28, 0, !dbg !9648
  br i1 %tobool16, label %if.end20, label %land.lhs.true17, !dbg !9649

land.lhs.true17:                                  ; preds = %land.lhs.true
  %29 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9650
  %call = call i32 @atapi_check_dma(%struct.ata_queued_cmd* %29) #10, !dbg !9651
  %tobool18 = icmp ne i32 %call, 0, !dbg !9651
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !9652

if.then19:                                        ; preds = %land.lhs.true17
  store i32 1, i32* %using_pio, align 4, !dbg !9653
  br label %if.end20, !dbg !9654

if.end20:                                         ; preds = %if.then19, %land.lhs.true17, %land.lhs.true, %if.end
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x317, metadata !9655, metadata !DIExpression()), !dbg !9657
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9657
  %call21 = call i32 @ata_qc_raw_nbytes(%struct.ata_queued_cmd* %30) #10, !dbg !9657
  store i32 %call21, i32* %__UNIQUE_ID___x317, align 4, !dbg !9657
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y318, metadata !9658, metadata !DIExpression()), !dbg !9657
  store i32 64512, i32* %__UNIQUE_ID___y318, align 4, !dbg !9657
  %31 = load i32, i32* %__UNIQUE_ID___x317, align 4, !dbg !9657
  %32 = load i32, i32* %__UNIQUE_ID___y318, align 4, !dbg !9657
  %cmp22 = icmp ult i32 %31, %32, !dbg !9657
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !9657

cond.true:                                        ; preds = %if.end20
  %33 = load i32, i32* %__UNIQUE_ID___x317, align 4, !dbg !9657
  br label %cond.end, !dbg !9657

cond.false:                                       ; preds = %if.end20
  %34 = load i32, i32* %__UNIQUE_ID___y318, align 4, !dbg !9657
  br label %cond.end, !dbg !9657

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %33, %cond.true ], [ %34, %cond.false ], !dbg !9657
  store i32 %cond, i32* %tmp, align 4, !dbg !9657
  %35 = load i32, i32* %tmp, align 4, !dbg !9657
  store i32 %35, i32* %nbytes, align 4, !dbg !9659
  %36 = load i32, i32* %nbytes, align 4, !dbg !9660
  %and24 = and i32 %36, 1, !dbg !9662
  %tobool25 = icmp ne i32 %and24, 0, !dbg !9662
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9663

if.then26:                                        ; preds = %cond.end
  %37 = load i32, i32* %nbytes, align 4, !dbg !9664
  %inc = add i32 %37, 1, !dbg !9664
  store i32 %inc, i32* %nbytes, align 4, !dbg !9664
  br label %if.end27, !dbg !9665

if.end27:                                         ; preds = %if.then26, %cond.end
  %38 = load i32, i32* %nbytes, align 4, !dbg !9666
  %and28 = and i32 %38, 255, !dbg !9667
  %conv29 = trunc i32 %and28 to i8, !dbg !9668
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9669
  %tf30 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %39, i32 0, i32 4, !dbg !9670
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf30, i32 0, i32 11, !dbg !9671
  store i8 %conv29, i8* %lbam, align 2, !dbg !9672
  %40 = load i32, i32* %nbytes, align 4, !dbg !9673
  %shr = lshr i32 %40, 8, !dbg !9674
  %conv31 = trunc i32 %shr to i8, !dbg !9675
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9676
  %tf32 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %41, i32 0, i32 4, !dbg !9677
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf32, i32 0, i32 12, !dbg !9678
  store i8 %conv31, i8* %lbah, align 1, !dbg !9679
  %42 = load i32, i32* %nodata, align 4, !dbg !9680
  %tobool33 = icmp ne i32 %42, 0, !dbg !9680
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !9682

if.then34:                                        ; preds = %if.end27
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9683
  %tf35 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 4, !dbg !9684
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf35, i32 0, i32 1, !dbg !9685
  store i8 8, i8* %protocol, align 8, !dbg !9686
  br label %if.end62, !dbg !9683

if.else:                                          ; preds = %if.end27
  %44 = load i32, i32* %using_pio, align 4, !dbg !9687
  %tobool36 = icmp ne i32 %44, 0, !dbg !9687
  br i1 %tobool36, label %if.then37, label %if.else40, !dbg !9689

if.then37:                                        ; preds = %if.else
  %45 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9690
  %tf38 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %45, i32 0, i32 4, !dbg !9691
  %protocol39 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf38, i32 0, i32 1, !dbg !9692
  store i8 9, i8* %protocol39, align 8, !dbg !9693
  br label %if.end61, !dbg !9690

if.else40:                                        ; preds = %if.else
  %46 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9694
  %tf41 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %46, i32 0, i32 4, !dbg !9696
  %protocol42 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf41, i32 0, i32 1, !dbg !9697
  store i8 10, i8* %protocol42, align 8, !dbg !9698
  %47 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9699
  %tf43 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %47, i32 0, i32 4, !dbg !9700
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf43, i32 0, i32 8, !dbg !9701
  %48 = load i8, i8* %feature, align 1, !dbg !9702
  %conv44 = zext i8 %48 to i32, !dbg !9702
  %or45 = or i32 %conv44, 1, !dbg !9702
  %conv46 = trunc i32 %or45 to i8, !dbg !9702
  store i8 %conv46, i8* %feature, align 1, !dbg !9702
  %49 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9703
  %flags47 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %49, i32 0, i32 3, !dbg !9705
  %50 = load i64, i64* %flags47, align 16, !dbg !9705
  %and48 = and i64 %50, 1024, !dbg !9706
  %tobool49 = icmp ne i64 %and48, 0, !dbg !9706
  br i1 %tobool49, label %land.lhs.true50, label %if.end60, !dbg !9707

land.lhs.true50:                                  ; preds = %if.else40
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9708
  %sc_data_direction51 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 13, !dbg !9709
  %52 = load i32, i32* %sc_data_direction51, align 8, !dbg !9709
  %cmp52 = icmp ne i32 %52, 1, !dbg !9710
  br i1 %cmp52, label %if.then54, label %if.end60, !dbg !9711

if.then54:                                        ; preds = %land.lhs.true50
  %53 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9712
  %tf55 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %53, i32 0, i32 4, !dbg !9713
  %feature56 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf55, i32 0, i32 8, !dbg !9714
  %54 = load i8, i8* %feature56, align 1, !dbg !9715
  %conv57 = zext i8 %54 to i32, !dbg !9715
  %or58 = or i32 %conv57, 4, !dbg !9715
  %conv59 = trunc i32 %or58 to i8, !dbg !9715
  store i8 %conv59, i8* %feature56, align 1, !dbg !9715
  br label %if.end60, !dbg !9712

if.end60:                                         ; preds = %if.then54, %land.lhs.true50, %if.else40
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then37
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then34
  ret i32 0, !dbg !9716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_translate(%struct.ata_device* %dev, %struct.scsi_cmnd* %cmd, i32 (%struct.ata_queued_cmd*)* %xlat_func) #0 !dbg !9717 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %xlat_func.addr = alloca i32 (%struct.ata_queued_cmd*)*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %rc = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9722, metadata !DIExpression()), !dbg !9723
  store i32 (%struct.ata_queued_cmd*)* %xlat_func, i32 (%struct.ata_queued_cmd*)** %xlat_func.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_queued_cmd*)** %xlat_func.addr, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9726, metadata !DIExpression()), !dbg !9727
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9728
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !9729
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !9729
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !9730
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9730
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !9727
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !9731, metadata !DIExpression()), !dbg !9732
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9733, metadata !DIExpression()), !dbg !9734
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9735
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9736
  %call = call %struct.ata_queued_cmd* @ata_scsi_qc_new(%struct.ata_device* %3, %struct.scsi_cmnd* %4) #10, !dbg !9737
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !9738
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9739
  %tobool = icmp ne %struct.ata_queued_cmd* %5, null, !dbg !9739
  br i1 %tobool, label %if.end, label %if.then, !dbg !9741

if.then:                                          ; preds = %entry
  br label %err_mem, !dbg !9742

if.end:                                           ; preds = %entry
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9743
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 13, !dbg !9745
  %7 = load i32, i32* %sc_data_direction, align 8, !dbg !9745
  %cmp = icmp eq i32 %7, 2, !dbg !9746
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !9747

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9748
  %sc_data_direction2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 13, !dbg !9749
  %9 = load i32, i32* %sc_data_direction2, align 8, !dbg !9749
  %cmp3 = icmp eq i32 %9, 1, !dbg !9750
  br i1 %cmp3, label %if.then4, label %if.end14, !dbg !9751

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9752
  %call5 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %10) #10, !dbg !9752
  %cmp6 = icmp ult i32 %call5, 1, !dbg !9752
  %lnot = xor i1 %cmp6, true, !dbg !9752
  %lnot7 = xor i1 %lnot, true, !dbg !9752
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !9752
  %conv = sext i32 %lnot.ext to i64, !dbg !9752
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9752
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !9755

if.then9:                                         ; preds = %if.then4
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9756
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #10, !dbg !9756
  br label %err_did, !dbg !9758

if.end10:                                         ; preds = %if.then4
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9759
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9760
  %call11 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %13) #10, !dbg !9761
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9762
  %call12 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %14) #10, !dbg !9763
  call void @ata_sg_init(%struct.ata_queued_cmd* %12, %struct.scatterlist* %call11, i32 %call12) #10, !dbg !9764
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9765
  %sc_data_direction13 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 13, !dbg !9766
  %16 = load i32, i32* %sc_data_direction13, align 8, !dbg !9766
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9767
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %17, i32 0, i32 11, !dbg !9768
  store i32 %16, i32* %dma_dir, align 8, !dbg !9769
  br label %if.end14, !dbg !9770

if.end14:                                         ; preds = %if.end10, %lor.lhs.false
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9771
  %complete_fn = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 22, !dbg !9772
  store void (%struct.ata_queued_cmd*)* @ata_scsi_qc_complete, void (%struct.ata_queued_cmd*)** %complete_fn, align 8, !dbg !9773
  %19 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %xlat_func.addr, align 8, !dbg !9774
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9776
  %call15 = call i32 %19(%struct.ata_queued_cmd* %20) #10, !dbg !9774
  %tobool16 = icmp ne i32 %call15, 0, !dbg !9774
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9777

if.then17:                                        ; preds = %if.end14
  br label %early_finish, !dbg !9778

if.end18:                                         ; preds = %if.end14
  %21 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9779
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 1, !dbg !9781
  %22 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9781
  %qc_defer = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %22, i32 0, i32 0, !dbg !9782
  %23 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %qc_defer, align 8, !dbg !9782
  %tobool19 = icmp ne i32 (%struct.ata_queued_cmd*)* %23, null, !dbg !9779
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !9783

if.then20:                                        ; preds = %if.end18
  %24 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9784
  %ops21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %24, i32 0, i32 1, !dbg !9787
  %25 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops21, align 8, !dbg !9787
  %qc_defer22 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %25, i32 0, i32 0, !dbg !9788
  %26 = load i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)** %qc_defer22, align 8, !dbg !9788
  %27 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9789
  %call23 = call i32 %26(%struct.ata_queued_cmd* %27) #10, !dbg !9784
  store i32 %call23, i32* %rc, align 4, !dbg !9790
  %tobool24 = icmp ne i32 %call23, 0, !dbg !9790
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !9791

if.then25:                                        ; preds = %if.then20
  br label %defer, !dbg !9792

if.end26:                                         ; preds = %if.then20
  br label %if.end27, !dbg !9793

if.end27:                                         ; preds = %if.end26, %if.end18
  %28 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9794
  call void @ata_qc_issue(%struct.ata_queued_cmd* %28) #10, !dbg !9795
  store i32 0, i32* %retval, align 4, !dbg !9796
  br label %return, !dbg !9796

early_finish:                                     ; preds = %if.then17
  call void @llvm.dbg.label(metadata !9797), !dbg !9798
  %29 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9799
  call void @ata_qc_free(%struct.ata_queued_cmd* %29) #10, !dbg !9800
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9801
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 21, !dbg !9802
  %31 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !9802
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9803
  call void %31(%struct.scsi_cmnd* %32) #10, !dbg !9801
  store i32 0, i32* %retval, align 4, !dbg !9804
  br label %return, !dbg !9804

err_did:                                          ; preds = %if.then9
  call void @llvm.dbg.label(metadata !9805), !dbg !9806
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9807
  call void @ata_qc_free(%struct.ata_queued_cmd* %33) #10, !dbg !9808
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9809
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 24, !dbg !9810
  store i32 458752, i32* %result, align 8, !dbg !9811
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9812
  %scsi_done28 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %35, i32 0, i32 21, !dbg !9813
  %36 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done28, align 8, !dbg !9813
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9814
  call void %36(%struct.scsi_cmnd* %37) #10, !dbg !9812
  br label %err_mem, !dbg !9812

err_mem:                                          ; preds = %err_did, %if.then
  call void @llvm.dbg.label(metadata !9815), !dbg !9816
  store i32 0, i32* %retval, align 4, !dbg !9817
  br label %return, !dbg !9817

defer:                                            ; preds = %if.then25
  call void @llvm.dbg.label(metadata !9818), !dbg !9819
  %38 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9820
  call void @ata_qc_free(%struct.ata_queued_cmd* %38) #10, !dbg !9821
  %39 = load i32, i32* %rc, align 4, !dbg !9822
  %cmp29 = icmp eq i32 %39, 1, !dbg !9824
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !9825

if.then31:                                        ; preds = %defer
  store i32 4182, i32* %retval, align 4, !dbg !9826
  br label %return, !dbg !9826

if.else:                                          ; preds = %defer
  store i32 4181, i32* %retval, align 4, !dbg !9827
  br label %return, !dbg !9827

return:                                           ; preds = %if.else, %if.then31, %err_mem, %early_finish, %if.end27
  %40 = load i32, i32* %retval, align 4, !dbg !9828
  ret i32 %40, !dbg !9828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_simulate(%struct.ata_device* %dev, %struct.scsi_cmnd* %cmd) #0 !dbg !9829 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %args = alloca %struct.ata_scsi_args, align 8
  %scsicmd = alloca i8*, align 8
  %tmp8 = alloca i8, align 1
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args* %args, metadata !9836, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.declare(metadata i8** %scsicmd, metadata !9838, metadata !DIExpression()), !dbg !9840
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9841
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 14, !dbg !9842
  %1 = load i8*, i8** %cmnd, align 8, !dbg !9842
  store i8* %1, i8** %scsicmd, align 8, !dbg !9840
  call void @llvm.dbg.declare(metadata i8* %tmp8, metadata !9843, metadata !DIExpression()), !dbg !9844
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9845
  %dev1 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %args, i32 0, i32 0, !dbg !9846
  store %struct.ata_device* %2, %struct.ata_device** %dev1, align 8, !dbg !9847
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9848
  %4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 27, !dbg !9849
  %id = bitcast %union.anon.90* %4 to [256 x i16]*, !dbg !9849
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !9848
  %id2 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %args, i32 0, i32 1, !dbg !9850
  store i16* %arraydecay, i16** %id2, align 8, !dbg !9851
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9852
  %cmd3 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %args, i32 0, i32 2, !dbg !9853
  store %struct.scsi_cmnd* %5, %struct.scsi_cmnd** %cmd3, align 8, !dbg !9854
  %6 = load i8*, i8** %scsicmd, align 8, !dbg !9855
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !9855
  %7 = load i8, i8* %arrayidx, align 1, !dbg !9855
  %conv = zext i8 %7 to i32, !dbg !9855
  switch i32 %conv, label %sw.default67 [
    i32 18, label %sw.bb
    i32 26, label %sw.bb27
    i32 90, label %sw.bb27
    i32 37, label %sw.bb28
    i32 158, label %sw.bb29
    i32 160, label %sw.bb38
    i32 3, label %sw.bb39
    i32 53, label %sw.bb40
    i32 1, label %sw.bb41
    i32 11, label %sw.bb41
    i32 43, label %sw.bb41
    i32 0, label %sw.bb41
    i32 29, label %sw.bb42
    i32 163, label %sw.bb59
  ], !dbg !9856

sw.bb:                                            ; preds = %entry
  %8 = load i8*, i8** %scsicmd, align 8, !dbg !9857
  %arrayidx4 = getelementptr i8, i8* %8, i64 1, !dbg !9857
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !9857
  %conv5 = zext i8 %9 to i32, !dbg !9857
  %and = and i32 %conv5, 2, !dbg !9860
  %tobool = icmp ne i32 %and, 0, !dbg !9860
  br i1 %tobool, label %if.then, label %if.else, !dbg !9861

if.then:                                          ; preds = %sw.bb
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9862
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9863
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %10, %struct.scsi_cmnd* %11, i16 zeroext 1, i8 zeroext -1) #10, !dbg !9864
  br label %if.end26, !dbg !9864

if.else:                                          ; preds = %sw.bb
  %12 = load i8*, i8** %scsicmd, align 8, !dbg !9865
  %arrayidx6 = getelementptr i8, i8* %12, i64 1, !dbg !9865
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !9865
  %conv7 = zext i8 %13 to i32, !dbg !9865
  %and8 = and i32 %conv7, 1, !dbg !9867
  %cmp = icmp eq i32 %and8, 0, !dbg !9868
  br i1 %cmp, label %if.then10, label %if.else11, !dbg !9869

if.then10:                                        ; preds = %if.else
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_std) #10, !dbg !9870
  br label %if.end25, !dbg !9870

if.else11:                                        ; preds = %if.else
  %14 = load i8*, i8** %scsicmd, align 8, !dbg !9871
  %arrayidx12 = getelementptr i8, i8* %14, i64 2, !dbg !9871
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !9871
  %conv13 = zext i8 %15 to i32, !dbg !9871
  switch i32 %conv13, label %sw.default [
    i32 0, label %sw.bb14
    i32 128, label %sw.bb15
    i32 131, label %sw.bb16
    i32 137, label %sw.bb17
    i32 176, label %sw.bb18
    i32 177, label %sw.bb19
    i32 178, label %sw.bb20
    i32 182, label %sw.bb21
  ], !dbg !9872

sw.bb14:                                          ; preds = %if.else11
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_00) #10, !dbg !9873
  br label %sw.epilog, !dbg !9875

sw.bb15:                                          ; preds = %if.else11
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_80) #10, !dbg !9876
  br label %sw.epilog, !dbg !9877

sw.bb16:                                          ; preds = %if.else11
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_83) #10, !dbg !9878
  br label %sw.epilog, !dbg !9879

sw.bb17:                                          ; preds = %if.else11
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_89) #10, !dbg !9880
  br label %sw.epilog, !dbg !9881

sw.bb18:                                          ; preds = %if.else11
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_b0) #10, !dbg !9882
  br label %sw.epilog, !dbg !9883

sw.bb19:                                          ; preds = %if.else11
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_b1) #10, !dbg !9884
  br label %sw.epilog, !dbg !9885

sw.bb20:                                          ; preds = %if.else11
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_b2) #10, !dbg !9886
  br label %sw.epilog, !dbg !9887

sw.bb21:                                          ; preds = %if.else11
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9888
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 3, !dbg !9890
  %17 = load i64, i64* %flags, align 16, !dbg !9890
  %and22 = and i64 %17, 1073741824, !dbg !9891
  %tobool23 = icmp ne i64 %and22, 0, !dbg !9891
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !9892

if.then24:                                        ; preds = %sw.bb21
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_inq_b6) #10, !dbg !9893
  br label %sw.epilog, !dbg !9895

if.end:                                           ; preds = %sw.bb21
  br label %sw.default, !dbg !9896

sw.default:                                       ; preds = %if.else11, %if.end
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9897
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9898
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %18, %struct.scsi_cmnd* %19, i16 zeroext 2, i8 zeroext -1) #10, !dbg !9899
  br label %sw.epilog, !dbg !9900

sw.epilog:                                        ; preds = %sw.default, %if.then24, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14
  br label %if.end25

if.end25:                                         ; preds = %sw.epilog, %if.then10
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then
  br label %sw.epilog68, !dbg !9901

sw.bb27:                                          ; preds = %entry, %entry
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_mode_sense) #10, !dbg !9902
  br label %sw.epilog68, !dbg !9903

sw.bb28:                                          ; preds = %entry
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_read_cap) #10, !dbg !9904
  br label %sw.epilog68, !dbg !9905

sw.bb29:                                          ; preds = %entry
  %20 = load i8*, i8** %scsicmd, align 8, !dbg !9906
  %arrayidx30 = getelementptr i8, i8* %20, i64 1, !dbg !9906
  %21 = load i8, i8* %arrayidx30, align 1, !dbg !9906
  %conv31 = zext i8 %21 to i32, !dbg !9906
  %and32 = and i32 %conv31, 31, !dbg !9908
  %cmp33 = icmp eq i32 %and32, 16, !dbg !9909
  br i1 %cmp33, label %if.then35, label %if.else36, !dbg !9910

if.then35:                                        ; preds = %sw.bb29
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_read_cap) #10, !dbg !9911
  br label %if.end37, !dbg !9911

if.else36:                                        ; preds = %sw.bb29
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9912
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9913
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %22, %struct.scsi_cmnd* %23, i16 zeroext 1, i8 zeroext -1) #10, !dbg !9914
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.then35
  br label %sw.epilog68, !dbg !9915

sw.bb38:                                          ; preds = %entry
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_report_luns) #10, !dbg !9916
  br label %sw.epilog68, !dbg !9917

sw.bb39:                                          ; preds = %entry
  %24 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9918
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9919
  call void @ata_scsi_set_sense(%struct.ata_device* %24, %struct.scsi_cmnd* %25, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #10, !dbg !9920
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9921
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %26, i32 0, i32 24, !dbg !9922
  store i32 134217728, i32* %result, align 8, !dbg !9923
  br label %sw.epilog68, !dbg !9924

sw.bb40:                                          ; preds = %entry
  br label %sw.bb41, !dbg !9924

sw.bb41:                                          ; preds = %entry, %entry, %entry, %entry, %sw.bb40
  br label %sw.epilog68, !dbg !9925

sw.bb42:                                          ; preds = %entry
  %27 = load i8*, i8** %scsicmd, align 8, !dbg !9926
  %arrayidx43 = getelementptr i8, i8* %27, i64 1, !dbg !9926
  %28 = load i8, i8* %arrayidx43, align 1, !dbg !9926
  %conv44 = zext i8 %28 to i32, !dbg !9926
  %and45 = and i32 %conv44, -9, !dbg !9927
  %conv46 = trunc i32 %and45 to i8, !dbg !9926
  store i8 %conv46, i8* %tmp8, align 1, !dbg !9928
  %29 = load i8, i8* %tmp8, align 1, !dbg !9929
  %conv47 = zext i8 %29 to i32, !dbg !9929
  %cmp48 = icmp ne i32 %conv47, 4, !dbg !9931
  br i1 %cmp48, label %if.then57, label %lor.lhs.false, !dbg !9932

lor.lhs.false:                                    ; preds = %sw.bb42
  %30 = load i8*, i8** %scsicmd, align 8, !dbg !9933
  %arrayidx50 = getelementptr i8, i8* %30, i64 3, !dbg !9933
  %31 = load i8, i8* %arrayidx50, align 1, !dbg !9933
  %conv51 = zext i8 %31 to i32, !dbg !9933
  %tobool52 = icmp ne i32 %conv51, 0, !dbg !9933
  br i1 %tobool52, label %if.then57, label %lor.lhs.false53, !dbg !9934

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %32 = load i8*, i8** %scsicmd, align 8, !dbg !9935
  %arrayidx54 = getelementptr i8, i8* %32, i64 4, !dbg !9935
  %33 = load i8, i8* %arrayidx54, align 1, !dbg !9935
  %conv55 = zext i8 %33 to i32, !dbg !9935
  %tobool56 = icmp ne i32 %conv55, 0, !dbg !9935
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !9936

if.then57:                                        ; preds = %lor.lhs.false53, %lor.lhs.false, %sw.bb42
  %34 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9937
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9938
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %34, %struct.scsi_cmnd* %35, i16 zeroext 1, i8 zeroext -1) #10, !dbg !9939
  br label %if.end58, !dbg !9939

if.end58:                                         ; preds = %if.then57, %lor.lhs.false53
  br label %sw.epilog68, !dbg !9940

sw.bb59:                                          ; preds = %entry
  %36 = load i8*, i8** %scsicmd, align 8, !dbg !9941
  %arrayidx60 = getelementptr i8, i8* %36, i64 1, !dbg !9941
  %37 = load i8, i8* %arrayidx60, align 1, !dbg !9941
  %conv61 = zext i8 %37 to i32, !dbg !9941
  %cmp62 = icmp eq i32 %conv61, 12, !dbg !9943
  br i1 %cmp62, label %if.then64, label %if.else65, !dbg !9944

if.then64:                                        ; preds = %sw.bb59
  call void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* @ata_scsiop_maint_in) #10, !dbg !9945
  br label %if.end66, !dbg !9945

if.else65:                                        ; preds = %sw.bb59
  %38 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9946
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9947
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %38, %struct.scsi_cmnd* %39, i16 zeroext 1, i8 zeroext -1) #10, !dbg !9948
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  br label %sw.epilog68, !dbg !9949

sw.default67:                                     ; preds = %entry
  %40 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9950
  %41 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9951
  call void @ata_scsi_set_sense(%struct.ata_device* %40, %struct.scsi_cmnd* %41, i8 zeroext 5, i8 zeroext 32, i8 zeroext 0) #10, !dbg !9952
  br label %sw.epilog68, !dbg !9953

sw.epilog68:                                      ; preds = %sw.default67, %if.end66, %if.end58, %sw.bb41, %sw.bb39, %sw.bb38, %if.end37, %sw.bb28, %sw.bb27, %if.end26
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9954
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 21, !dbg !9955
  %43 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !9955
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9956
  call void %43(%struct.scsi_cmnd* %44) #10, !dbg !9954
  ret void, !dbg !9957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_scsi_queuecmd(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %cmd) #0 !dbg !9958 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !7129, metadata !DIExpression()), !dbg !9959
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !9961
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !9962
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %scsidev = alloca %struct.scsi_device*, align 8
  %rc = alloca i32, align 4
  %irq_flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !9969, metadata !DIExpression()), !dbg !9970
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsidev, metadata !9977, metadata !DIExpression()), !dbg !9978
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9979
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !9980
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9980
  store %struct.scsi_device* %1, %struct.scsi_device** %scsidev, align 8, !dbg !9978
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9981, metadata !DIExpression()), !dbg !9982
  store i32 0, i32* %rc, align 4, !dbg !9982
  call void @llvm.dbg.declare(metadata i64* %irq_flags, metadata !9983, metadata !DIExpression()), !dbg !9984
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !9985
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %2) #10, !dbg !9986
  store %struct.ata_port* %call, %struct.ata_port** %ap, align 8, !dbg !9987
  br label %do.body, !dbg !9988

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9989

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9990, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9993, metadata !DIExpression()), !dbg !9992
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9992
  %conv = zext i1 %cmp to i32, !dbg !9992
  store i32 1, i32* %tmp, align 4, !dbg !9992
  %3 = load i32, i32* %tmp, align 4, !dbg !9992
  br label %do.body2, !dbg !9994

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9995

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9996

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9998, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10002, metadata !DIExpression()), !dbg !10001
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10001
  %conv8 = zext i1 %cmp7 to i32, !dbg !10001
  store i32 1, i32* %tmp9, align 4, !dbg !10001
  %4 = load i32, i32* %tmp9, align 4, !dbg !10001
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !10003
  store i64 %call10, i64* %irq_flags, align 8, !dbg !10003
  br label %do.end, !dbg !10003

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !9996

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9995

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !10004, !srcloc !10005
  br label %do.body13, !dbg !10004

do.body13:                                        ; preds = %do.body12
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10006
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 2, !dbg !10006
  %6 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !10006
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10007
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !10008
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !10008
  br label %do.end15, !dbg !10006

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !10004

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9995

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9994

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9989

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10009
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10010
  call void @ata_scsi_dump_cdb(%struct.ata_port* %9, %struct.scsi_cmnd* %10) #10, !dbg !10011
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10012
  %12 = load %struct.scsi_device*, %struct.scsi_device** %scsidev, align 8, !dbg !10013
  %call20 = call %struct.ata_device* @ata_scsi_find_dev(%struct.ata_port* %11, %struct.scsi_device* %12) #10, !dbg !10014
  store %struct.ata_device* %call20, %struct.ata_device** %dev, align 8, !dbg !10015
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10016
  %tobool = icmp ne %struct.ata_device* %13, null, !dbg !10016
  %lnot = xor i1 %tobool, true, !dbg !10016
  %lnot21 = xor i1 %lnot, true, !dbg !10016
  %lnot.ext = zext i1 %lnot21 to i32, !dbg !10016
  %conv22 = sext i32 %lnot.ext to i64, !dbg !10016
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !10016
  br i1 %tobool23, label %if.then, label %if.else, !dbg !10018

if.then:                                          ; preds = %do.end19
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10019
  %15 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10020
  %call24 = call i32 @__ata_scsi_queuecmd(%struct.scsi_cmnd* %14, %struct.ata_device* %15) #10, !dbg !10021
  store i32 %call24, i32* %rc, align 4, !dbg !10022
  br label %if.end, !dbg !10023

if.else:                                          ; preds = %do.end19
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10024
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 24, !dbg !10026
  store i32 262144, i32* %result, align 8, !dbg !10027
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10028
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 21, !dbg !10029
  %18 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !10029
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10030
  call void %18(%struct.scsi_cmnd* %19) #10, !dbg !10028
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10031
  %lock25 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 2, !dbg !10032
  %21 = load %struct.spinlock*, %struct.spinlock** %lock25, align 16, !dbg !10032
  %22 = load i64, i64* %irq_flags, align 8, !dbg !10033
  store %struct.spinlock* %21, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !10034
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !10034
  store i32 1, i32* %tmp.i, align 4, !dbg !10034
  %23 = load i32, i32* %tmp.i, align 4, !dbg !10034
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !10035
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !10035
  store i32 1, i32* %tmp8.i, align 4, !dbg !10035
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !10035
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !10036
  call void @arch_local_irq_restore(i64 %25) #11, !dbg !10036
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !10037, !srcloc !7307
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !10038
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !10038
  %rlock.i27 = bitcast %union.anon.1* %27 to %struct.raw_spinlock*, !dbg !10038
  %28 = load i32, i32* %rc, align 4, !dbg !10039
  ret i32 %28, !dbg !10040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_set_invalid_field(%struct.ata_device* %dev, %struct.scsi_cmnd* %cmd, i16 zeroext %field, i8 zeroext %bit) #0 !dbg !10041 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %field.addr = alloca i16, align 2
  %bit.addr = alloca i8, align 1
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !10044, metadata !DIExpression()), !dbg !10045
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10046, metadata !DIExpression()), !dbg !10047
  store i16 %field, i16* %field.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %field.addr, metadata !10048, metadata !DIExpression()), !dbg !10049
  store i8 %bit, i8* %bit.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bit.addr, metadata !10050, metadata !DIExpression()), !dbg !10051
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !10052
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10053
  call void @ata_scsi_set_sense(%struct.ata_device* %0, %struct.scsi_cmnd* %1, i8 zeroext 5, i8 zeroext 36, i8 zeroext 0) #10, !dbg !10054
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10055
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 20, !dbg !10056
  %3 = load i8*, i8** %sense_buffer, align 8, !dbg !10056
  %4 = load i16, i16* %field.addr, align 2, !dbg !10057
  %5 = load i8, i8* %bit.addr, align 1, !dbg !10058
  %call = call i32 @scsi_set_sense_field_pointer(i8* %3, i32 96, i16 zeroext %4, i8 zeroext %5, i1 zeroext true) #10, !dbg !10059
  ret void, !dbg !10060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_rbuf_fill(%struct.ata_scsi_args* %args, i32 (%struct.ata_scsi_args*, i8*)* %actor) #0 !dbg !10061 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %actor.addr = alloca i32 (%struct.ata_scsi_args*, i8*)*, align 8
  %rbuf = alloca i8*, align 8
  %rc = alloca i32, align 4
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %flags = alloca i64, align 8
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  store i32 (%struct.ata_scsi_args*, i8*)* %actor, i32 (%struct.ata_scsi_args*, i8*)** %actor.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_scsi_args*, i8*)** %actor.addr, metadata !10067, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.declare(metadata i8** %rbuf, metadata !10069, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10071, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !10073, metadata !DIExpression()), !dbg !10074
  %0 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10075
  %cmd1 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %0, i32 0, i32 2, !dbg !10076
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !10076
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !10074
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10077, metadata !DIExpression()), !dbg !10078
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10079
  %call = call i8* @ata_scsi_rbuf_get(%struct.scsi_cmnd* %2, i1 zeroext false, i64* %flags) #10, !dbg !10080
  store i8* %call, i8** %rbuf, align 8, !dbg !10081
  %3 = load i32 (%struct.ata_scsi_args*, i8*)*, i32 (%struct.ata_scsi_args*, i8*)** %actor.addr, align 8, !dbg !10082
  %4 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10083
  %5 = load i8*, i8** %rbuf, align 8, !dbg !10084
  %call2 = call i32 %3(%struct.ata_scsi_args* %4, i8* %5) #10, !dbg !10082
  store i32 %call2, i32* %rc, align 4, !dbg !10085
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10086
  %7 = load i32, i32* %rc, align 4, !dbg !10087
  %cmp = icmp eq i32 %7, 0, !dbg !10088
  call void @ata_scsi_rbuf_put(%struct.scsi_cmnd* %6, i1 zeroext %cmp, i64* %flags) #10, !dbg !10089
  %8 = load i32, i32* %rc, align 4, !dbg !10090
  %cmp3 = icmp eq i32 %8, 0, !dbg !10092
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10093

if.then:                                          ; preds = %entry
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10094
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %9, i32 0, i32 24, !dbg !10095
  store i32 0, i32* %result, align 8, !dbg !10096
  br label %if.end, !dbg !10094

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_std(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !6982 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %hdr = alloca [8 x i8], align 1
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10098, metadata !DIExpression()), !dbg !10099
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10100, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.declare(metadata [8 x i8]* %hdr, metadata !10102, metadata !DIExpression()), !dbg !10103
  %0 = bitcast [8 x i8]* %hdr to i8*, !dbg !10103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.ata_scsiop_inq_std.hdr, i32 0, i32 0), i64 8, i1 false), !dbg !10103
  %1 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10104
  %id = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %1, i32 0, i32 1, !dbg !10104
  %2 = load i16*, i16** %id, align 8, !dbg !10104
  %arrayidx = getelementptr i16, i16* %2, i64 0, !dbg !10104
  %3 = load i16, i16* %arrayidx, align 2, !dbg !10104
  %conv = zext i16 %3 to i32, !dbg !10104
  %and = and i32 %conv, 128, !dbg !10104
  %tobool = icmp ne i32 %and, 0, !dbg !10104
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10106

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10107
  %dev = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %4, i32 0, i32 0, !dbg !10108
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10108
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 0, !dbg !10109
  %6 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !10109
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %6, i32 0, i32 0, !dbg !10110
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !10110
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 4, !dbg !10111
  %8 = load i32, i32* %pflags, align 32, !dbg !10111
  %and1 = and i32 %8, 4194304, !dbg !10112
  %tobool2 = icmp ne i32 %and1, 0, !dbg !10112
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10113

if.then:                                          ; preds = %lor.lhs.false, %entry
  %arrayidx3 = getelementptr [8 x i8], [8 x i8]* %hdr, i64 0, i64 1, !dbg !10114
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !10115
  %conv4 = zext i8 %9 to i32, !dbg !10115
  %or = or i32 %conv4, 128, !dbg !10115
  %conv5 = trunc i32 %or to i8, !dbg !10115
  store i8 %conv5, i8* %arrayidx3, align 1, !dbg !10115
  br label %if.end, !dbg !10114

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %10 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10116
  %dev6 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %10, i32 0, i32 0, !dbg !10118
  %11 = load %struct.ata_device*, %struct.ata_device** %dev6, align 8, !dbg !10118
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 11, !dbg !10119
  %12 = load i32, i32* %class, align 64, !dbg !10119
  %cmp = icmp eq i32 %12, 9, !dbg !10120
  br i1 %cmp, label %if.then8, label %if.end11, !dbg !10121

if.then8:                                         ; preds = %if.end
  %arrayidx9 = getelementptr [8 x i8], [8 x i8]* %hdr, i64 0, i64 0, !dbg !10122
  store i8 20, i8* %arrayidx9, align 1, !dbg !10124
  %arrayidx10 = getelementptr [8 x i8], [8 x i8]* %hdr, i64 0, i64 2, !dbg !10125
  store i8 7, i8* %arrayidx10, align 1, !dbg !10126
  br label %if.end11, !dbg !10127

if.end11:                                         ; preds = %if.then8, %if.end
  %13 = load i8*, i8** %rbuf.addr, align 8, !dbg !10128
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %hdr, i64 0, i64 0, !dbg !10129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %arraydecay, i64 8, i1 false), !dbg !10129
  %14 = load i8*, i8** %rbuf.addr, align 8, !dbg !10130
  %arrayidx12 = getelementptr i8, i8* %14, i64 8, !dbg !10130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx12, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i64 8, i1 false), !dbg !10131
  %15 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10132
  %id13 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %15, i32 0, i32 1, !dbg !10133
  %16 = load i16*, i16** %id13, align 8, !dbg !10133
  %17 = load i8*, i8** %rbuf.addr, align 8, !dbg !10134
  %arrayidx14 = getelementptr i8, i8* %17, i64 16, !dbg !10134
  call void @ata_id_string(i16* %16, i8* %arrayidx14, i32 27, i32 16) #10, !dbg !10135
  %18 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10136
  %id15 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %18, i32 0, i32 1, !dbg !10137
  %19 = load i16*, i16** %id15, align 8, !dbg !10137
  %20 = load i8*, i8** %rbuf.addr, align 8, !dbg !10138
  %arrayidx16 = getelementptr i8, i8* %20, i64 32, !dbg !10138
  call void @ata_id_string(i16* %19, i8* %arrayidx16, i32 25, i32 4) #10, !dbg !10139
  %21 = load i8*, i8** %rbuf.addr, align 8, !dbg !10140
  %arrayidx17 = getelementptr i8, i8* %21, i64 32, !dbg !10140
  %call = call i32 @strncmp(i8* %arrayidx17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 4) #10, !dbg !10142
  %cmp18 = icmp eq i32 %call, 0, !dbg !10143
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !10144

if.then20:                                        ; preds = %if.end11
  %22 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10145
  %id21 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %22, i32 0, i32 1, !dbg !10146
  %23 = load i16*, i16** %id21, align 8, !dbg !10146
  %24 = load i8*, i8** %rbuf.addr, align 8, !dbg !10147
  %arrayidx22 = getelementptr i8, i8* %24, i64 32, !dbg !10147
  call void @ata_id_string(i16* %23, i8* %arrayidx22, i32 23, i32 4) #10, !dbg !10148
  br label %if.end23, !dbg !10148

if.end23:                                         ; preds = %if.then20, %if.end11
  %25 = load i8*, i8** %rbuf.addr, align 8, !dbg !10149
  %arrayidx24 = getelementptr i8, i8* %25, i64 32, !dbg !10149
  %26 = load i8, i8* %arrayidx24, align 1, !dbg !10149
  %conv25 = zext i8 %26 to i32, !dbg !10149
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !10151
  br i1 %cmp26, label %if.then33, label %lor.lhs.false28, !dbg !10152

lor.lhs.false28:                                  ; preds = %if.end23
  %27 = load i8*, i8** %rbuf.addr, align 8, !dbg !10153
  %arrayidx29 = getelementptr i8, i8* %27, i64 32, !dbg !10153
  %28 = load i8, i8* %arrayidx29, align 1, !dbg !10153
  %conv30 = zext i8 %28 to i32, !dbg !10153
  %cmp31 = icmp eq i32 %conv30, 32, !dbg !10154
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10155

if.then33:                                        ; preds = %lor.lhs.false28, %if.end23
  %29 = load i8*, i8** %rbuf.addr, align 8, !dbg !10156
  %arrayidx34 = getelementptr i8, i8* %29, i64 32, !dbg !10156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx34, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), i64 4, i1 false), !dbg !10157
  br label %if.end35, !dbg !10157

if.end35:                                         ; preds = %if.then33, %lor.lhs.false28
  %30 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10158
  %id36 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %30, i32 0, i32 1, !dbg !10160
  %31 = load i16*, i16** %id36, align 8, !dbg !10160
  %call37 = call zeroext i8 @ata_id_zoned_cap(i16* %31) #10, !dbg !10161
  %conv38 = zext i8 %call37 to i32, !dbg !10161
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !10161
  br i1 %tobool39, label %if.then45, label %lor.lhs.false40, !dbg !10162

lor.lhs.false40:                                  ; preds = %if.end35
  %32 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10163
  %dev41 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %32, i32 0, i32 0, !dbg !10164
  %33 = load %struct.ata_device*, %struct.ata_device** %dev41, align 8, !dbg !10164
  %class42 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 11, !dbg !10165
  %34 = load i32, i32* %class42, align 64, !dbg !10165
  %cmp43 = icmp eq i32 %34, 9, !dbg !10166
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !10167

if.then45:                                        ; preds = %lor.lhs.false40, %if.end35
  %35 = load i8*, i8** %rbuf.addr, align 8, !dbg !10168
  %add.ptr = getelementptr i8, i8* %35, i64 58, !dbg !10169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @ata_scsiop_inq_std.versions_zbc, i64 0, i64 0), i64 8, i1 false), !dbg !10170
  br label %if.end47, !dbg !10170

if.else:                                          ; preds = %lor.lhs.false40
  %36 = load i8*, i8** %rbuf.addr, align 8, !dbg !10171
  %add.ptr46 = getelementptr i8, i8* %36, i64 58, !dbg !10172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr46, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @ata_scsiop_inq_std.versions, i64 0, i64 0), i64 6, i1 false), !dbg !10173
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then45
  ret i32 0, !dbg !10174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_00(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !6997 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %num_pages = alloca i32, align 4
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10177, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.declare(metadata i32* %num_pages, metadata !10179, metadata !DIExpression()), !dbg !10180
  store i32 8, i32* %num_pages, align 4, !dbg !10181
  %0 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10182
  %dev = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %0, i32 0, i32 0, !dbg !10184
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10184
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 3, !dbg !10185
  %2 = load i64, i64* %flags, align 16, !dbg !10185
  %and = and i64 %2, 1073741824, !dbg !10186
  %tobool = icmp ne i64 %and, 0, !dbg !10186
  br i1 %tobool, label %if.end, label %if.then, !dbg !10187

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %num_pages, align 4, !dbg !10188
  %dec = add i32 %3, -1, !dbg !10188
  store i32 %dec, i32* %num_pages, align 4, !dbg !10188
  br label %if.end, !dbg !10189

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %num_pages, align 4, !dbg !10190
  %conv = trunc i32 %4 to i8, !dbg !10190
  %5 = load i8*, i8** %rbuf.addr, align 8, !dbg !10191
  %arrayidx = getelementptr i8, i8* %5, i64 3, !dbg !10191
  store i8 %conv, i8* %arrayidx, align 1, !dbg !10192
  %6 = load i8*, i8** %rbuf.addr, align 8, !dbg !10193
  %add.ptr = getelementptr i8, i8* %6, i64 4, !dbg !10194
  %7 = load i32, i32* %num_pages, align 4, !dbg !10195
  %conv1 = sext i32 %7 to i64, !dbg !10195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @ata_scsiop_inq_00.pages, i64 0, i64 0), i64 %conv1, i1 false), !dbg !10196
  ret i32 0, !dbg !10197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_80(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !7000 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  %0 = load i8*, i8** %rbuf.addr, align 8, !dbg !10202
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @ata_scsiop_inq_80.hdr, i64 0, i64 0), i64 4, i1 false), !dbg !10203
  %1 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10204
  %id = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %1, i32 0, i32 1, !dbg !10205
  %2 = load i16*, i16** %id, align 8, !dbg !10205
  %3 = load i8*, i8** %rbuf.addr, align 8, !dbg !10206
  %arrayidx = getelementptr i8, i8* %3, i64 4, !dbg !10206
  call void @ata_id_string(i16* %2, i8* %arrayidx, i32 10, i32 20) #10, !dbg !10207
  ret i32 0, !dbg !10208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_83(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10209 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %sat_model_serial_desc_len = alloca i32, align 4
  %num = alloca i32, align 4
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10210, metadata !DIExpression()), !dbg !10211
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.declare(metadata i32* %sat_model_serial_desc_len, metadata !10214, metadata !DIExpression()), !dbg !10216
  store i32 68, i32* %sat_model_serial_desc_len, align 4, !dbg !10216
  call void @llvm.dbg.declare(metadata i32* %num, metadata !10217, metadata !DIExpression()), !dbg !10218
  %0 = load i8*, i8** %rbuf.addr, align 8, !dbg !10219
  %arrayidx = getelementptr i8, i8* %0, i64 1, !dbg !10219
  store i8 -125, i8* %arrayidx, align 1, !dbg !10220
  store i32 4, i32* %num, align 4, !dbg !10221
  %1 = load i8*, i8** %rbuf.addr, align 8, !dbg !10222
  %2 = load i32, i32* %num, align 4, !dbg !10223
  %add = add i32 %2, 0, !dbg !10224
  %idxprom = sext i32 %add to i64, !dbg !10222
  %arrayidx1 = getelementptr i8, i8* %1, i64 %idxprom, !dbg !10222
  store i8 2, i8* %arrayidx1, align 1, !dbg !10225
  %3 = load i8*, i8** %rbuf.addr, align 8, !dbg !10226
  %4 = load i32, i32* %num, align 4, !dbg !10227
  %add2 = add i32 %4, 3, !dbg !10228
  %idxprom3 = sext i32 %add2 to i64, !dbg !10226
  %arrayidx4 = getelementptr i8, i8* %3, i64 %idxprom3, !dbg !10226
  store i8 20, i8* %arrayidx4, align 1, !dbg !10229
  %5 = load i32, i32* %num, align 4, !dbg !10230
  %add5 = add i32 %5, 4, !dbg !10230
  store i32 %add5, i32* %num, align 4, !dbg !10230
  %6 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10231
  %id = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %6, i32 0, i32 1, !dbg !10232
  %7 = load i16*, i16** %id, align 8, !dbg !10232
  %8 = load i8*, i8** %rbuf.addr, align 8, !dbg !10233
  %9 = load i32, i32* %num, align 4, !dbg !10234
  %idx.ext = sext i32 %9 to i64, !dbg !10235
  %add.ptr = getelementptr i8, i8* %8, i64 %idx.ext, !dbg !10235
  call void @ata_id_string(i16* %7, i8* %add.ptr, i32 10, i32 20) #10, !dbg !10236
  %10 = load i32, i32* %num, align 4, !dbg !10237
  %add6 = add i32 %10, 20, !dbg !10237
  store i32 %add6, i32* %num, align 4, !dbg !10237
  %11 = load i8*, i8** %rbuf.addr, align 8, !dbg !10238
  %12 = load i32, i32* %num, align 4, !dbg !10239
  %add7 = add i32 %12, 0, !dbg !10240
  %idxprom8 = sext i32 %add7 to i64, !dbg !10238
  %arrayidx9 = getelementptr i8, i8* %11, i64 %idxprom8, !dbg !10238
  store i8 2, i8* %arrayidx9, align 1, !dbg !10241
  %13 = load i8*, i8** %rbuf.addr, align 8, !dbg !10242
  %14 = load i32, i32* %num, align 4, !dbg !10243
  %add10 = add i32 %14, 1, !dbg !10244
  %idxprom11 = sext i32 %add10 to i64, !dbg !10242
  %arrayidx12 = getelementptr i8, i8* %13, i64 %idxprom11, !dbg !10242
  store i8 1, i8* %arrayidx12, align 1, !dbg !10245
  %15 = load i8*, i8** %rbuf.addr, align 8, !dbg !10246
  %16 = load i32, i32* %num, align 4, !dbg !10247
  %add13 = add i32 %16, 3, !dbg !10248
  %idxprom14 = sext i32 %add13 to i64, !dbg !10246
  %arrayidx15 = getelementptr i8, i8* %15, i64 %idxprom14, !dbg !10246
  store i8 68, i8* %arrayidx15, align 1, !dbg !10249
  %17 = load i32, i32* %num, align 4, !dbg !10250
  %add16 = add i32 %17, 4, !dbg !10250
  store i32 %add16, i32* %num, align 4, !dbg !10250
  %18 = load i8*, i8** %rbuf.addr, align 8, !dbg !10251
  %19 = load i32, i32* %num, align 4, !dbg !10252
  %idx.ext17 = sext i32 %19 to i64, !dbg !10253
  %add.ptr18 = getelementptr i8, i8* %18, i64 %idx.ext17, !dbg !10253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr18, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i64 8, i1 false), !dbg !10254
  %20 = load i32, i32* %num, align 4, !dbg !10255
  %add19 = add i32 %20, 8, !dbg !10255
  store i32 %add19, i32* %num, align 4, !dbg !10255
  %21 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10256
  %id20 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %21, i32 0, i32 1, !dbg !10257
  %22 = load i16*, i16** %id20, align 8, !dbg !10257
  %23 = load i8*, i8** %rbuf.addr, align 8, !dbg !10258
  %24 = load i32, i32* %num, align 4, !dbg !10259
  %idx.ext21 = sext i32 %24 to i64, !dbg !10260
  %add.ptr22 = getelementptr i8, i8* %23, i64 %idx.ext21, !dbg !10260
  call void @ata_id_string(i16* %22, i8* %add.ptr22, i32 27, i32 40) #10, !dbg !10261
  %25 = load i32, i32* %num, align 4, !dbg !10262
  %add23 = add i32 %25, 40, !dbg !10262
  store i32 %add23, i32* %num, align 4, !dbg !10262
  %26 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10263
  %id24 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %26, i32 0, i32 1, !dbg !10264
  %27 = load i16*, i16** %id24, align 8, !dbg !10264
  %28 = load i8*, i8** %rbuf.addr, align 8, !dbg !10265
  %29 = load i32, i32* %num, align 4, !dbg !10266
  %idx.ext25 = sext i32 %29 to i64, !dbg !10267
  %add.ptr26 = getelementptr i8, i8* %28, i64 %idx.ext25, !dbg !10267
  call void @ata_id_string(i16* %27, i8* %add.ptr26, i32 10, i32 20) #10, !dbg !10268
  %30 = load i32, i32* %num, align 4, !dbg !10269
  %add27 = add i32 %30, 20, !dbg !10269
  store i32 %add27, i32* %num, align 4, !dbg !10269
  %31 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10270
  %id28 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %31, i32 0, i32 1, !dbg !10272
  %32 = load i16*, i16** %id28, align 8, !dbg !10272
  %call = call zeroext i1 @ata_id_has_wwn(i16* %32) #10, !dbg !10273
  br i1 %call, label %if.then, label %if.end, !dbg !10274

if.then:                                          ; preds = %entry
  %33 = load i8*, i8** %rbuf.addr, align 8, !dbg !10275
  %34 = load i32, i32* %num, align 4, !dbg !10277
  %add29 = add i32 %34, 0, !dbg !10278
  %idxprom30 = sext i32 %add29 to i64, !dbg !10275
  %arrayidx31 = getelementptr i8, i8* %33, i64 %idxprom30, !dbg !10275
  store i8 1, i8* %arrayidx31, align 1, !dbg !10279
  %35 = load i8*, i8** %rbuf.addr, align 8, !dbg !10280
  %36 = load i32, i32* %num, align 4, !dbg !10281
  %add32 = add i32 %36, 1, !dbg !10282
  %idxprom33 = sext i32 %add32 to i64, !dbg !10280
  %arrayidx34 = getelementptr i8, i8* %35, i64 %idxprom33, !dbg !10280
  store i8 3, i8* %arrayidx34, align 1, !dbg !10283
  %37 = load i8*, i8** %rbuf.addr, align 8, !dbg !10284
  %38 = load i32, i32* %num, align 4, !dbg !10285
  %add35 = add i32 %38, 3, !dbg !10286
  %idxprom36 = sext i32 %add35 to i64, !dbg !10284
  %arrayidx37 = getelementptr i8, i8* %37, i64 %idxprom36, !dbg !10284
  store i8 8, i8* %arrayidx37, align 1, !dbg !10287
  %39 = load i32, i32* %num, align 4, !dbg !10288
  %add38 = add i32 %39, 4, !dbg !10288
  store i32 %add38, i32* %num, align 4, !dbg !10288
  %40 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10289
  %id39 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %40, i32 0, i32 1, !dbg !10290
  %41 = load i16*, i16** %id39, align 8, !dbg !10290
  %42 = load i8*, i8** %rbuf.addr, align 8, !dbg !10291
  %43 = load i32, i32* %num, align 4, !dbg !10292
  %idx.ext40 = sext i32 %43 to i64, !dbg !10293
  %add.ptr41 = getelementptr i8, i8* %42, i64 %idx.ext40, !dbg !10293
  call void @ata_id_string(i16* %41, i8* %add.ptr41, i32 108, i32 8) #10, !dbg !10294
  %44 = load i32, i32* %num, align 4, !dbg !10295
  %add42 = add i32 %44, 8, !dbg !10295
  store i32 %add42, i32* %num, align 4, !dbg !10295
  br label %if.end, !dbg !10296

if.end:                                           ; preds = %if.then, %entry
  %45 = load i32, i32* %num, align 4, !dbg !10297
  %sub = sub i32 %45, 4, !dbg !10298
  %conv = trunc i32 %sub to i8, !dbg !10297
  %46 = load i8*, i8** %rbuf.addr, align 8, !dbg !10299
  %arrayidx43 = getelementptr i8, i8* %46, i64 3, !dbg !10299
  store i8 %conv, i8* %arrayidx43, align 1, !dbg !10300
  ret i32 0, !dbg !10301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_89(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10302 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10303, metadata !DIExpression()), !dbg !10304
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10305, metadata !DIExpression()), !dbg !10306
  %0 = load i8*, i8** %rbuf.addr, align 8, !dbg !10307
  %arrayidx = getelementptr i8, i8* %0, i64 1, !dbg !10307
  store i8 -119, i8* %arrayidx, align 1, !dbg !10308
  %1 = load i8*, i8** %rbuf.addr, align 8, !dbg !10309
  %arrayidx1 = getelementptr i8, i8* %1, i64 2, !dbg !10309
  store i8 2, i8* %arrayidx1, align 1, !dbg !10310
  %2 = load i8*, i8** %rbuf.addr, align 8, !dbg !10311
  %arrayidx2 = getelementptr i8, i8* %2, i64 3, !dbg !10311
  store i8 56, i8* %arrayidx2, align 1, !dbg !10312
  %3 = load i8*, i8** %rbuf.addr, align 8, !dbg !10313
  %arrayidx3 = getelementptr i8, i8* %3, i64 8, !dbg !10313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx3, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0), i64 8, i1 false), !dbg !10314
  %4 = load i8*, i8** %rbuf.addr, align 8, !dbg !10315
  %arrayidx4 = getelementptr i8, i8* %4, i64 16, !dbg !10315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx4, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0), i64 16, i1 false), !dbg !10316
  %5 = load i8*, i8** %rbuf.addr, align 8, !dbg !10317
  %arrayidx5 = getelementptr i8, i8* %5, i64 32, !dbg !10317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx5, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i64 4, i1 false), !dbg !10318
  %6 = load i8*, i8** %rbuf.addr, align 8, !dbg !10319
  %arrayidx6 = getelementptr i8, i8* %6, i64 36, !dbg !10319
  store i8 52, i8* %arrayidx6, align 1, !dbg !10320
  %7 = load i8*, i8** %rbuf.addr, align 8, !dbg !10321
  %arrayidx7 = getelementptr i8, i8* %7, i64 37, !dbg !10321
  store i8 -128, i8* %arrayidx7, align 1, !dbg !10322
  %8 = load i8*, i8** %rbuf.addr, align 8, !dbg !10323
  %arrayidx8 = getelementptr i8, i8* %8, i64 38, !dbg !10323
  store i8 64, i8* %arrayidx8, align 1, !dbg !10324
  %9 = load i8*, i8** %rbuf.addr, align 8, !dbg !10325
  %arrayidx9 = getelementptr i8, i8* %9, i64 40, !dbg !10325
  store i8 1, i8* %arrayidx9, align 1, !dbg !10326
  %10 = load i8*, i8** %rbuf.addr, align 8, !dbg !10327
  %arrayidx10 = getelementptr i8, i8* %10, i64 48, !dbg !10327
  store i8 1, i8* %arrayidx10, align 1, !dbg !10328
  %11 = load i8*, i8** %rbuf.addr, align 8, !dbg !10329
  %arrayidx11 = getelementptr i8, i8* %11, i64 56, !dbg !10329
  store i8 -20, i8* %arrayidx11, align 1, !dbg !10330
  %12 = load i8*, i8** %rbuf.addr, align 8, !dbg !10331
  %arrayidx12 = getelementptr i8, i8* %12, i64 60, !dbg !10331
  %13 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10332
  %id = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %13, i32 0, i32 1, !dbg !10333
  %14 = load i16*, i16** %id, align 8, !dbg !10333
  %arrayidx13 = getelementptr i16, i16* %14, i64 0, !dbg !10332
  %15 = bitcast i16* %arrayidx13 to i8*, !dbg !10334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx12, i8* align 2 %15, i64 512, i1 false), !dbg !10334
  ret i32 0, !dbg !10335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_b0(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10336 {
entry:
  %val.addr.i21 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i21, metadata !10337, metadata !DIExpression()), !dbg !10342
  %p.addr.i22 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i22, metadata !10346, metadata !DIExpression()), !dbg !10347
  %val.addr.i11 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr.i11, metadata !10348, metadata !DIExpression()), !dbg !10352
  %p.addr.i12 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i12, metadata !10354, metadata !DIExpression()), !dbg !10355
  %val.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr.i, metadata !10356, metadata !DIExpression()), !dbg !10360
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10362, metadata !DIExpression()), !dbg !10363
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %min_io_sectors = alloca i16, align 2
  %max_blocks = alloca i64, align 8
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !10368, metadata !DIExpression()), !dbg !10369
  %0 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10370
  %dev1 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %0, i32 0, i32 0, !dbg !10371
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !10371
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !10369
  call void @llvm.dbg.declare(metadata i16* %min_io_sectors, metadata !10372, metadata !DIExpression()), !dbg !10373
  %2 = load i8*, i8** %rbuf.addr, align 8, !dbg !10374
  %arrayidx = getelementptr i8, i8* %2, i64 1, !dbg !10374
  store i8 -80, i8* %arrayidx, align 1, !dbg !10375
  %3 = load i8*, i8** %rbuf.addr, align 8, !dbg !10376
  %arrayidx2 = getelementptr i8, i8* %3, i64 3, !dbg !10376
  store i8 60, i8* %arrayidx2, align 1, !dbg !10377
  %4 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10378
  %id = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %4, i32 0, i32 1, !dbg !10379
  %5 = load i16*, i16** %id, align 8, !dbg !10379
  %call = call zeroext i8 @ata_id_log2_per_physical_sector(i16* %5) #10, !dbg !10380
  %conv = zext i8 %call to i32, !dbg !10380
  %shl = shl i32 1, %conv, !dbg !10381
  %conv3 = trunc i32 %shl to i16, !dbg !10382
  store i16 %conv3, i16* %min_io_sectors, align 2, !dbg !10383
  %6 = load i16, i16* %min_io_sectors, align 2, !dbg !10384
  %7 = load i8*, i8** %rbuf.addr, align 8, !dbg !10385
  %arrayidx4 = getelementptr i8, i8* %7, i64 6, !dbg !10385
  store i16 %6, i16* %val.addr.i, align 2
  store i8* %arrayidx4, i8** %p.addr.i, align 8
  %8 = load i16, i16* %val.addr.i, align 2, !dbg !10386
  %9 = call i1 @llvm.is.constant.i16(i16 %8) #5, !dbg !10386
  br i1 %9, label %cond.true.i, label %cond.false.i, !dbg !10386

cond.true.i:                                      ; preds = %entry
  %10 = load i16, i16* %val.addr.i, align 2, !dbg !10386
  %conv.i = zext i16 %10 to i32, !dbg !10386
  %and.i = and i32 %conv.i, 255, !dbg !10386
  %shl.i = shl i32 %and.i, 8, !dbg !10386
  %11 = load i16, i16* %val.addr.i, align 2, !dbg !10386
  %conv1.i = zext i16 %11 to i32, !dbg !10386
  %and2.i = and i32 %conv1.i, 65280, !dbg !10386
  %shr.i = ashr i32 %and2.i, 8, !dbg !10386
  %or.i = or i32 %shl.i, %shr.i, !dbg !10386
  %conv3.i = trunc i32 %or.i to i16, !dbg !10386
  %conv4.i = zext i16 %conv3.i to i32, !dbg !10386
  br label %put_unaligned_be16.exit, !dbg !10386

cond.false.i:                                     ; preds = %entry
  %12 = load i16, i16* %val.addr.i, align 2, !dbg !10386
  %call.i = call zeroext i16 @__fswab16(i16 zeroext %12) #12, !dbg !10386
  %conv5.i = zext i16 %call.i to i32, !dbg !10386
  br label %put_unaligned_be16.exit, !dbg !10386

put_unaligned_be16.exit:                          ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %conv4.i, %cond.true.i ], [ %conv5.i, %cond.false.i ], !dbg !10386
  %conv6.i = trunc i32 %cond.i to i16, !dbg !10386
  %13 = load i8*, i8** %p.addr.i, align 8, !dbg !10387
  %14 = bitcast i8* %13 to i16*, !dbg !10388
  store i16 %conv6.i, i16* %14, align 2, !dbg !10389
  %15 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10390
  %id5 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %15, i32 0, i32 1, !dbg !10391
  %16 = load i16*, i16** %id5, align 8, !dbg !10391
  %call6 = call zeroext i1 @ata_id_has_trim(i16* %16) #10, !dbg !10392
  br i1 %call6, label %if.then, label %if.end10, !dbg !10393

if.then:                                          ; preds = %put_unaligned_be16.exit
  call void @llvm.dbg.declare(metadata i64* %max_blocks, metadata !10394, metadata !DIExpression()), !dbg !10395
  store i64 4194240, i64* %max_blocks, align 8, !dbg !10395
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10396
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 2, !dbg !10398
  %18 = load i32, i32* %horkage, align 4, !dbg !10398
  %and = and i32 %18, 67108864, !dbg !10399
  %tobool = icmp ne i32 %and, 0, !dbg !10399
  br i1 %tobool, label %if.then7, label %if.end, !dbg !10400

if.then7:                                         ; preds = %if.then
  store i64 262144, i64* %max_blocks, align 8, !dbg !10401
  br label %if.end, !dbg !10402

if.end:                                           ; preds = %if.then7, %if.then
  %19 = load i64, i64* %max_blocks, align 8, !dbg !10403
  %20 = load i8*, i8** %rbuf.addr, align 8, !dbg !10404
  %arrayidx8 = getelementptr i8, i8* %20, i64 36, !dbg !10404
  store i64 %19, i64* %val.addr.i11, align 8
  store i8* %arrayidx8, i8** %p.addr.i12, align 8
  %21 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %22 = call i1 @llvm.is.constant.i64(i64 %21) #5, !dbg !10405
  br i1 %22, label %cond.true.i17, label %cond.false.i19, !dbg !10405

cond.true.i17:                                    ; preds = %if.end
  %23 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and.i13 = and i64 %23, 255, !dbg !10405
  %shl.i14 = shl i64 %and.i13, 56, !dbg !10405
  %24 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and1.i = and i64 %24, 65280, !dbg !10405
  %shl2.i = shl i64 %and1.i, 40, !dbg !10405
  %or.i15 = or i64 %shl.i14, %shl2.i, !dbg !10405
  %25 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and3.i = and i64 %25, 16711680, !dbg !10405
  %shl4.i = shl i64 %and3.i, 24, !dbg !10405
  %or5.i = or i64 %or.i15, %shl4.i, !dbg !10405
  %26 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and6.i = and i64 %26, 4278190080, !dbg !10405
  %shl7.i = shl i64 %and6.i, 8, !dbg !10405
  %or8.i = or i64 %or5.i, %shl7.i, !dbg !10405
  %27 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and9.i = and i64 %27, 1095216660480, !dbg !10405
  %shr.i16 = lshr i64 %and9.i, 8, !dbg !10405
  %or10.i = or i64 %or8.i, %shr.i16, !dbg !10405
  %28 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and11.i = and i64 %28, 280375465082880, !dbg !10405
  %shr12.i = lshr i64 %and11.i, 24, !dbg !10405
  %or13.i = or i64 %or10.i, %shr12.i, !dbg !10405
  %29 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and14.i = and i64 %29, 71776119061217280, !dbg !10405
  %shr15.i = lshr i64 %and14.i, 40, !dbg !10405
  %or16.i = or i64 %or13.i, %shr15.i, !dbg !10405
  %30 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %and17.i = and i64 %30, -72057594037927936, !dbg !10405
  %shr18.i = lshr i64 %and17.i, 56, !dbg !10405
  %or19.i = or i64 %or16.i, %shr18.i, !dbg !10405
  br label %put_unaligned_be64.exit, !dbg !10405

cond.false.i19:                                   ; preds = %if.end
  %31 = load i64, i64* %val.addr.i11, align 8, !dbg !10405
  %call.i18 = call i64 @__fswab64(i64 %31) #12, !dbg !10405
  br label %put_unaligned_be64.exit, !dbg !10405

put_unaligned_be64.exit:                          ; preds = %cond.true.i17, %cond.false.i19
  %cond.i20 = phi i64 [ %or19.i, %cond.true.i17 ], [ %call.i18, %cond.false.i19 ], !dbg !10405
  %32 = load i8*, i8** %p.addr.i12, align 8, !dbg !10406
  %33 = bitcast i8* %32 to i64*, !dbg !10407
  store i64 %cond.i20, i64* %33, align 8, !dbg !10408
  %34 = load i8*, i8** %rbuf.addr, align 8, !dbg !10409
  %arrayidx9 = getelementptr i8, i8* %34, i64 28, !dbg !10409
  store i32 1, i32* %val.addr.i21, align 4
  store i8* %arrayidx9, i8** %p.addr.i22, align 8
  %35 = load i32, i32* %val.addr.i21, align 4, !dbg !10410
  %36 = call i1 @llvm.is.constant.i32(i32 %35) #5, !dbg !10410
  br i1 %36, label %cond.true.i30, label %cond.false.i32, !dbg !10410

cond.true.i30:                                    ; preds = %put_unaligned_be64.exit
  %37 = load i32, i32* %val.addr.i21, align 4, !dbg !10410
  %and.i23 = and i32 %37, 255, !dbg !10410
  %shl.i24 = shl i32 %and.i23, 24, !dbg !10410
  %38 = load i32, i32* %val.addr.i21, align 4, !dbg !10410
  %and1.i25 = and i32 %38, 65280, !dbg !10410
  %shl2.i26 = shl i32 %and1.i25, 8, !dbg !10410
  %or.i27 = or i32 %shl.i24, %shl2.i26, !dbg !10410
  %39 = load i32, i32* %val.addr.i21, align 4, !dbg !10410
  %and3.i28 = and i32 %39, 16711680, !dbg !10410
  %shr.i29 = lshr i32 %and3.i28, 8, !dbg !10410
  %or4.i = or i32 %or.i27, %shr.i29, !dbg !10410
  %40 = load i32, i32* %val.addr.i21, align 4, !dbg !10410
  %and5.i = and i32 %40, -16777216, !dbg !10410
  %shr6.i = lshr i32 %and5.i, 24, !dbg !10410
  %or7.i = or i32 %or4.i, %shr6.i, !dbg !10410
  br label %put_unaligned_be32.exit, !dbg !10410

cond.false.i32:                                   ; preds = %put_unaligned_be64.exit
  %41 = load i32, i32* %val.addr.i21, align 4, !dbg !10410
  %call.i31 = call i32 @__fswab32(i32 %41) #12, !dbg !10410
  br label %put_unaligned_be32.exit, !dbg !10410

put_unaligned_be32.exit:                          ; preds = %cond.true.i30, %cond.false.i32
  %cond.i33 = phi i32 [ %or7.i, %cond.true.i30 ], [ %call.i31, %cond.false.i32 ], !dbg !10410
  %42 = load i8*, i8** %p.addr.i22, align 8, !dbg !10411
  %43 = bitcast i8* %42 to i32*, !dbg !10412
  store i32 %cond.i33, i32* %43, align 4, !dbg !10413
  br label %if.end10, !dbg !10414

if.end10:                                         ; preds = %put_unaligned_be32.exit, %put_unaligned_be16.exit
  ret i32 0, !dbg !10415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_b1(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10416 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %form_factor = alloca i32, align 4
  %media_rotation_rate = alloca i32, align 4
  %zoned = alloca i8, align 1
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.declare(metadata i32* %form_factor, metadata !10421, metadata !DIExpression()), !dbg !10422
  %0 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10423
  %id = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %0, i32 0, i32 1, !dbg !10424
  %1 = load i16*, i16** %id, align 8, !dbg !10424
  %call = call i32 @ata_id_form_factor(i16* %1) #10, !dbg !10425
  store i32 %call, i32* %form_factor, align 4, !dbg !10422
  call void @llvm.dbg.declare(metadata i32* %media_rotation_rate, metadata !10426, metadata !DIExpression()), !dbg !10427
  %2 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10428
  %id1 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %2, i32 0, i32 1, !dbg !10429
  %3 = load i16*, i16** %id1, align 8, !dbg !10429
  %call2 = call i32 @ata_id_rotation_rate(i16* %3) #10, !dbg !10430
  store i32 %call2, i32* %media_rotation_rate, align 4, !dbg !10427
  call void @llvm.dbg.declare(metadata i8* %zoned, metadata !10431, metadata !DIExpression()), !dbg !10432
  %4 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10433
  %id3 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %4, i32 0, i32 1, !dbg !10434
  %5 = load i16*, i16** %id3, align 8, !dbg !10434
  %call4 = call zeroext i8 @ata_id_zoned_cap(i16* %5) #10, !dbg !10435
  store i8 %call4, i8* %zoned, align 1, !dbg !10432
  %6 = load i8*, i8** %rbuf.addr, align 8, !dbg !10436
  %arrayidx = getelementptr i8, i8* %6, i64 1, !dbg !10436
  store i8 -79, i8* %arrayidx, align 1, !dbg !10437
  %7 = load i8*, i8** %rbuf.addr, align 8, !dbg !10438
  %arrayidx5 = getelementptr i8, i8* %7, i64 3, !dbg !10438
  store i8 60, i8* %arrayidx5, align 1, !dbg !10439
  %8 = load i32, i32* %media_rotation_rate, align 4, !dbg !10440
  %shr = ashr i32 %8, 8, !dbg !10441
  %conv = trunc i32 %shr to i8, !dbg !10440
  %9 = load i8*, i8** %rbuf.addr, align 8, !dbg !10442
  %arrayidx6 = getelementptr i8, i8* %9, i64 4, !dbg !10442
  store i8 %conv, i8* %arrayidx6, align 1, !dbg !10443
  %10 = load i32, i32* %media_rotation_rate, align 4, !dbg !10444
  %conv7 = trunc i32 %10 to i8, !dbg !10444
  %11 = load i8*, i8** %rbuf.addr, align 8, !dbg !10445
  %arrayidx8 = getelementptr i8, i8* %11, i64 5, !dbg !10445
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !10446
  %12 = load i32, i32* %form_factor, align 4, !dbg !10447
  %conv9 = trunc i32 %12 to i8, !dbg !10447
  %13 = load i8*, i8** %rbuf.addr, align 8, !dbg !10448
  %arrayidx10 = getelementptr i8, i8* %13, i64 7, !dbg !10448
  store i8 %conv9, i8* %arrayidx10, align 1, !dbg !10449
  %14 = load i8, i8* %zoned, align 1, !dbg !10450
  %tobool = icmp ne i8 %14, 0, !dbg !10450
  br i1 %tobool, label %if.then, label %if.end, !dbg !10452

if.then:                                          ; preds = %entry
  %15 = load i8, i8* %zoned, align 1, !dbg !10453
  %conv11 = zext i8 %15 to i32, !dbg !10453
  %shl = shl i32 %conv11, 4, !dbg !10454
  %conv12 = trunc i32 %shl to i8, !dbg !10455
  %16 = load i8*, i8** %rbuf.addr, align 8, !dbg !10456
  %arrayidx13 = getelementptr i8, i8* %16, i64 8, !dbg !10456
  store i8 %conv12, i8* %arrayidx13, align 1, !dbg !10457
  br label %if.end, !dbg !10456

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !10458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_b2(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10459 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10460, metadata !DIExpression()), !dbg !10461
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10462, metadata !DIExpression()), !dbg !10463
  %0 = load i8*, i8** %rbuf.addr, align 8, !dbg !10464
  %arrayidx = getelementptr i8, i8* %0, i64 1, !dbg !10464
  store i8 -78, i8* %arrayidx, align 1, !dbg !10465
  %1 = load i8*, i8** %rbuf.addr, align 8, !dbg !10466
  %arrayidx1 = getelementptr i8, i8* %1, i64 3, !dbg !10466
  store i8 4, i8* %arrayidx1, align 1, !dbg !10467
  %2 = load i8*, i8** %rbuf.addr, align 8, !dbg !10468
  %arrayidx2 = getelementptr i8, i8* %2, i64 5, !dbg !10468
  store i8 64, i8* %arrayidx2, align 1, !dbg !10469
  ret i32 0, !dbg !10470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_inq_b6(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10471 {
entry:
  %val.addr.i28 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i28, metadata !10337, metadata !DIExpression()), !dbg !10472
  %p.addr.i29 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i29, metadata !10346, metadata !DIExpression()), !dbg !10474
  %val.addr.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i10, metadata !10337, metadata !DIExpression()), !dbg !10475
  %p.addr.i11 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i11, metadata !10346, metadata !DIExpression()), !dbg !10477
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !10337, metadata !DIExpression()), !dbg !10478
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10346, metadata !DIExpression()), !dbg !10480
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  %0 = load i8*, i8** %rbuf.addr, align 8, !dbg !10485
  %arrayidx = getelementptr i8, i8* %0, i64 1, !dbg !10485
  store i8 -74, i8* %arrayidx, align 1, !dbg !10486
  %1 = load i8*, i8** %rbuf.addr, align 8, !dbg !10487
  %arrayidx1 = getelementptr i8, i8* %1, i64 3, !dbg !10487
  store i8 60, i8* %arrayidx1, align 1, !dbg !10488
  %2 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10489
  %dev = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %2, i32 0, i32 0, !dbg !10491
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10491
  %zac_zoned_cap = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 31, !dbg !10492
  %4 = load i32, i32* %zac_zoned_cap, align 4, !dbg !10492
  %and = and i32 %4, 1, !dbg !10493
  %tobool = icmp ne i32 %and, 0, !dbg !10493
  br i1 %tobool, label %if.then, label %if.end, !dbg !10494

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %rbuf.addr, align 8, !dbg !10495
  %arrayidx2 = getelementptr i8, i8* %5, i64 4, !dbg !10495
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !10496
  %conv = zext i8 %6 to i32, !dbg !10496
  %or = or i32 %conv, 1, !dbg !10496
  %conv3 = trunc i32 %or to i8, !dbg !10496
  store i8 %conv3, i8* %arrayidx2, align 1, !dbg !10496
  br label %if.end, !dbg !10495

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10497
  %dev4 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %7, i32 0, i32 0, !dbg !10498
  %8 = load %struct.ata_device*, %struct.ata_device** %dev4, align 8, !dbg !10498
  %zac_zones_optimal_open = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 32, !dbg !10499
  %9 = load i32, i32* %zac_zones_optimal_open, align 32, !dbg !10499
  %10 = load i8*, i8** %rbuf.addr, align 8, !dbg !10500
  %arrayidx5 = getelementptr i8, i8* %10, i64 8, !dbg !10500
  store i32 %9, i32* %val.addr.i, align 4
  store i8* %arrayidx5, i8** %p.addr.i, align 8
  %11 = load i32, i32* %val.addr.i, align 4, !dbg !10501
  %12 = call i1 @llvm.is.constant.i32(i32 %11) #5, !dbg !10501
  br i1 %12, label %cond.true.i, label %cond.false.i, !dbg !10501

cond.true.i:                                      ; preds = %if.end
  %13 = load i32, i32* %val.addr.i, align 4, !dbg !10501
  %and.i = and i32 %13, 255, !dbg !10501
  %shl.i = shl i32 %and.i, 24, !dbg !10501
  %14 = load i32, i32* %val.addr.i, align 4, !dbg !10501
  %and1.i = and i32 %14, 65280, !dbg !10501
  %shl2.i = shl i32 %and1.i, 8, !dbg !10501
  %or.i = or i32 %shl.i, %shl2.i, !dbg !10501
  %15 = load i32, i32* %val.addr.i, align 4, !dbg !10501
  %and3.i = and i32 %15, 16711680, !dbg !10501
  %shr.i = lshr i32 %and3.i, 8, !dbg !10501
  %or4.i = or i32 %or.i, %shr.i, !dbg !10501
  %16 = load i32, i32* %val.addr.i, align 4, !dbg !10501
  %and5.i = and i32 %16, -16777216, !dbg !10501
  %shr6.i = lshr i32 %and5.i, 24, !dbg !10501
  %or7.i = or i32 %or4.i, %shr6.i, !dbg !10501
  br label %put_unaligned_be32.exit, !dbg !10501

cond.false.i:                                     ; preds = %if.end
  %17 = load i32, i32* %val.addr.i, align 4, !dbg !10501
  %call.i = call i32 @__fswab32(i32 %17) #12, !dbg !10501
  br label %put_unaligned_be32.exit, !dbg !10501

put_unaligned_be32.exit:                          ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %or7.i, %cond.true.i ], [ %call.i, %cond.false.i ], !dbg !10501
  %18 = load i8*, i8** %p.addr.i, align 8, !dbg !10502
  %19 = bitcast i8* %18 to i32*, !dbg !10503
  store i32 %cond.i, i32* %19, align 4, !dbg !10504
  %20 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10505
  %dev6 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %20, i32 0, i32 0, !dbg !10506
  %21 = load %struct.ata_device*, %struct.ata_device** %dev6, align 8, !dbg !10506
  %zac_zones_optimal_nonseq = getelementptr inbounds %struct.ata_device, %struct.ata_device* %21, i32 0, i32 33, !dbg !10507
  %22 = load i32, i32* %zac_zones_optimal_nonseq, align 4, !dbg !10507
  %23 = load i8*, i8** %rbuf.addr, align 8, !dbg !10508
  %arrayidx7 = getelementptr i8, i8* %23, i64 12, !dbg !10508
  store i32 %22, i32* %val.addr.i10, align 4
  store i8* %arrayidx7, i8** %p.addr.i11, align 8
  %24 = load i32, i32* %val.addr.i10, align 4, !dbg !10509
  %25 = call i1 @llvm.is.constant.i32(i32 %24) #5, !dbg !10509
  br i1 %25, label %cond.true.i23, label %cond.false.i25, !dbg !10509

cond.true.i23:                                    ; preds = %put_unaligned_be32.exit
  %26 = load i32, i32* %val.addr.i10, align 4, !dbg !10509
  %and.i12 = and i32 %26, 255, !dbg !10509
  %shl.i13 = shl i32 %and.i12, 24, !dbg !10509
  %27 = load i32, i32* %val.addr.i10, align 4, !dbg !10509
  %and1.i14 = and i32 %27, 65280, !dbg !10509
  %shl2.i15 = shl i32 %and1.i14, 8, !dbg !10509
  %or.i16 = or i32 %shl.i13, %shl2.i15, !dbg !10509
  %28 = load i32, i32* %val.addr.i10, align 4, !dbg !10509
  %and3.i17 = and i32 %28, 16711680, !dbg !10509
  %shr.i18 = lshr i32 %and3.i17, 8, !dbg !10509
  %or4.i19 = or i32 %or.i16, %shr.i18, !dbg !10509
  %29 = load i32, i32* %val.addr.i10, align 4, !dbg !10509
  %and5.i20 = and i32 %29, -16777216, !dbg !10509
  %shr6.i21 = lshr i32 %and5.i20, 24, !dbg !10509
  %or7.i22 = or i32 %or4.i19, %shr6.i21, !dbg !10509
  br label %put_unaligned_be32.exit27, !dbg !10509

cond.false.i25:                                   ; preds = %put_unaligned_be32.exit
  %30 = load i32, i32* %val.addr.i10, align 4, !dbg !10509
  %call.i24 = call i32 @__fswab32(i32 %30) #12, !dbg !10509
  br label %put_unaligned_be32.exit27, !dbg !10509

put_unaligned_be32.exit27:                        ; preds = %cond.true.i23, %cond.false.i25
  %cond.i26 = phi i32 [ %or7.i22, %cond.true.i23 ], [ %call.i24, %cond.false.i25 ], !dbg !10509
  %31 = load i8*, i8** %p.addr.i11, align 8, !dbg !10510
  %32 = bitcast i8* %31 to i32*, !dbg !10511
  store i32 %cond.i26, i32* %32, align 4, !dbg !10512
  %33 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10513
  %dev8 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %33, i32 0, i32 0, !dbg !10514
  %34 = load %struct.ata_device*, %struct.ata_device** %dev8, align 8, !dbg !10514
  %zac_zones_max_open = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 34, !dbg !10515
  %35 = load i32, i32* %zac_zones_max_open, align 8, !dbg !10515
  %36 = load i8*, i8** %rbuf.addr, align 8, !dbg !10516
  %arrayidx9 = getelementptr i8, i8* %36, i64 16, !dbg !10516
  store i32 %35, i32* %val.addr.i28, align 4
  store i8* %arrayidx9, i8** %p.addr.i29, align 8
  %37 = load i32, i32* %val.addr.i28, align 4, !dbg !10517
  %38 = call i1 @llvm.is.constant.i32(i32 %37) #5, !dbg !10517
  br i1 %38, label %cond.true.i41, label %cond.false.i43, !dbg !10517

cond.true.i41:                                    ; preds = %put_unaligned_be32.exit27
  %39 = load i32, i32* %val.addr.i28, align 4, !dbg !10517
  %and.i30 = and i32 %39, 255, !dbg !10517
  %shl.i31 = shl i32 %and.i30, 24, !dbg !10517
  %40 = load i32, i32* %val.addr.i28, align 4, !dbg !10517
  %and1.i32 = and i32 %40, 65280, !dbg !10517
  %shl2.i33 = shl i32 %and1.i32, 8, !dbg !10517
  %or.i34 = or i32 %shl.i31, %shl2.i33, !dbg !10517
  %41 = load i32, i32* %val.addr.i28, align 4, !dbg !10517
  %and3.i35 = and i32 %41, 16711680, !dbg !10517
  %shr.i36 = lshr i32 %and3.i35, 8, !dbg !10517
  %or4.i37 = or i32 %or.i34, %shr.i36, !dbg !10517
  %42 = load i32, i32* %val.addr.i28, align 4, !dbg !10517
  %and5.i38 = and i32 %42, -16777216, !dbg !10517
  %shr6.i39 = lshr i32 %and5.i38, 24, !dbg !10517
  %or7.i40 = or i32 %or4.i37, %shr6.i39, !dbg !10517
  br label %put_unaligned_be32.exit45, !dbg !10517

cond.false.i43:                                   ; preds = %put_unaligned_be32.exit27
  %43 = load i32, i32* %val.addr.i28, align 4, !dbg !10517
  %call.i42 = call i32 @__fswab32(i32 %43) #12, !dbg !10517
  br label %put_unaligned_be32.exit45, !dbg !10517

put_unaligned_be32.exit45:                        ; preds = %cond.true.i41, %cond.false.i43
  %cond.i44 = phi i32 [ %or7.i40, %cond.true.i41 ], [ %call.i42, %cond.false.i43 ], !dbg !10517
  %44 = load i8*, i8** %p.addr.i29, align 8, !dbg !10518
  %45 = bitcast i8* %44 to i32*, !dbg !10519
  store i32 %cond.i44, i32* %45, align 4, !dbg !10520
  ret i32 0, !dbg !10521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_mode_sense(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !7004 {
entry:
  %retval = alloca i32, align 4
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %scsicmd = alloca i8*, align 8
  %p = alloca i8*, align 8
  %pg = alloca i8, align 1
  %spg = alloca i8, align 1
  %ebd = alloca i32, align 4
  %page_control = alloca i32, align 4
  %six_byte = alloca i32, align 4
  %dpofua = alloca i8, align 1
  %bp = alloca i8, align 1
  %fp = alloca i16, align 2
  %output_len = alloca i32, align 4
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10522, metadata !DIExpression()), !dbg !10523
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10524, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !10526, metadata !DIExpression()), !dbg !10527
  %0 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10528
  %dev1 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %0, i32 0, i32 0, !dbg !10529
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !10529
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !10527
  call void @llvm.dbg.declare(metadata i8** %scsicmd, metadata !10530, metadata !DIExpression()), !dbg !10531
  %2 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10532
  %cmd = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %2, i32 0, i32 2, !dbg !10533
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10533
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 14, !dbg !10534
  %4 = load i8*, i8** %cmnd, align 8, !dbg !10534
  store i8* %4, i8** %scsicmd, align 8, !dbg !10531
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10535, metadata !DIExpression()), !dbg !10536
  %5 = load i8*, i8** %rbuf.addr, align 8, !dbg !10537
  store i8* %5, i8** %p, align 8, !dbg !10536
  call void @llvm.dbg.declare(metadata i8* %pg, metadata !10538, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.declare(metadata i8* %spg, metadata !10540, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.declare(metadata i32* %ebd, metadata !10542, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.declare(metadata i32* %page_control, metadata !10544, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.declare(metadata i32* %six_byte, metadata !10546, metadata !DIExpression()), !dbg !10547
  call void @llvm.dbg.declare(metadata i8* %dpofua, metadata !10548, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.declare(metadata i8* %bp, metadata !10550, metadata !DIExpression()), !dbg !10551
  store i8 -1, i8* %bp, align 1, !dbg !10551
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !10552, metadata !DIExpression()), !dbg !10553
  %6 = load i8*, i8** %scsicmd, align 8, !dbg !10554
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !10554
  %7 = load i8, i8* %arrayidx, align 1, !dbg !10554
  %conv = zext i8 %7 to i32, !dbg !10554
  %cmp = icmp eq i32 %conv, 26, !dbg !10555
  %conv2 = zext i1 %cmp to i32, !dbg !10555
  store i32 %conv2, i32* %six_byte, align 4, !dbg !10556
  %8 = load i8*, i8** %scsicmd, align 8, !dbg !10557
  %arrayidx3 = getelementptr i8, i8* %8, i64 1, !dbg !10557
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !10557
  %conv4 = zext i8 %9 to i32, !dbg !10557
  %and = and i32 %conv4, 8, !dbg !10558
  %tobool = icmp ne i32 %and, 0, !dbg !10559
  %lnot = xor i1 %tobool, true, !dbg !10559
  %lnot.ext = zext i1 %lnot to i32, !dbg !10559
  store i32 %lnot.ext, i32* %ebd, align 4, !dbg !10560
  %10 = load i8*, i8** %scsicmd, align 8, !dbg !10561
  %arrayidx5 = getelementptr i8, i8* %10, i64 2, !dbg !10561
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !10561
  %conv6 = zext i8 %11 to i32, !dbg !10561
  %shr = ashr i32 %conv6, 6, !dbg !10562
  store i32 %shr, i32* %page_control, align 4, !dbg !10563
  %12 = load i32, i32* %page_control, align 4, !dbg !10564
  switch i32 %12, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb7
  ], !dbg !10565

sw.bb:                                            ; preds = %entry, %entry, %entry
  br label %sw.epilog, !dbg !10566

sw.bb7:                                           ; preds = %entry
  br label %saving_not_supp, !dbg !10568

sw.default:                                       ; preds = %entry
  store i16 2, i16* %fp, align 2, !dbg !10569
  store i8 6, i8* %bp, align 1, !dbg !10570
  br label %invalid_fld, !dbg !10571

sw.epilog:                                        ; preds = %sw.bb
  %13 = load i32, i32* %six_byte, align 4, !dbg !10572
  %tobool8 = icmp ne i32 %13, 0, !dbg !10572
  br i1 %tobool8, label %if.then, label %if.else, !dbg !10574

if.then:                                          ; preds = %sw.epilog
  %14 = load i32, i32* %ebd, align 4, !dbg !10575
  %tobool9 = icmp ne i32 %14, 0, !dbg !10575
  %15 = zext i1 %tobool9 to i64, !dbg !10575
  %cond = select i1 %tobool9, i32 8, i32 0, !dbg !10575
  %add = add i32 4, %cond, !dbg !10576
  %16 = load i8*, i8** %p, align 8, !dbg !10577
  %idx.ext = sext i32 %add to i64, !dbg !10577
  %add.ptr = getelementptr i8, i8* %16, i64 %idx.ext, !dbg !10577
  store i8* %add.ptr, i8** %p, align 8, !dbg !10577
  br label %if.end, !dbg !10578

if.else:                                          ; preds = %sw.epilog
  %17 = load i32, i32* %ebd, align 4, !dbg !10579
  %tobool10 = icmp ne i32 %17, 0, !dbg !10579
  %18 = zext i1 %tobool10 to i64, !dbg !10579
  %cond11 = select i1 %tobool10, i32 8, i32 0, !dbg !10579
  %add12 = add i32 8, %cond11, !dbg !10580
  %19 = load i8*, i8** %p, align 8, !dbg !10581
  %idx.ext13 = sext i32 %add12 to i64, !dbg !10581
  %add.ptr14 = getelementptr i8, i8* %19, i64 %idx.ext13, !dbg !10581
  store i8* %add.ptr14, i8** %p, align 8, !dbg !10581
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i8*, i8** %scsicmd, align 8, !dbg !10582
  %arrayidx15 = getelementptr i8, i8* %20, i64 2, !dbg !10582
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !10582
  %conv16 = zext i8 %21 to i32, !dbg !10582
  %and17 = and i32 %conv16, 63, !dbg !10583
  %conv18 = trunc i32 %and17 to i8, !dbg !10582
  store i8 %conv18, i8* %pg, align 1, !dbg !10584
  %22 = load i8*, i8** %scsicmd, align 8, !dbg !10585
  %arrayidx19 = getelementptr i8, i8* %22, i64 3, !dbg !10585
  %23 = load i8, i8* %arrayidx19, align 1, !dbg !10585
  store i8 %23, i8* %spg, align 1, !dbg !10586
  %24 = load i8, i8* %spg, align 1, !dbg !10587
  %conv20 = zext i8 %24 to i32, !dbg !10587
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !10587
  br i1 %tobool21, label %land.lhs.true, label %if.end26, !dbg !10589

land.lhs.true:                                    ; preds = %if.end
  %25 = load i8, i8* %spg, align 1, !dbg !10590
  %conv22 = zext i8 %25 to i32, !dbg !10590
  %cmp23 = icmp ne i32 %conv22, 255, !dbg !10591
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10592

if.then25:                                        ; preds = %land.lhs.true
  store i16 3, i16* %fp, align 2, !dbg !10593
  br label %invalid_fld, !dbg !10595

if.end26:                                         ; preds = %land.lhs.true, %if.end
  %26 = load i8, i8* %pg, align 1, !dbg !10596
  %conv27 = zext i8 %26 to i32, !dbg !10596
  switch i32 %conv27, label %sw.default64 [
    i32 1, label %sw.bb28
    i32 8, label %sw.bb33
    i32 10, label %sw.bb39
    i32 63, label %sw.bb46
  ], !dbg !10597

sw.bb28:                                          ; preds = %if.end26
  %27 = load i8*, i8** %p, align 8, !dbg !10598
  %28 = load i32, i32* %page_control, align 4, !dbg !10600
  %cmp29 = icmp eq i32 %28, 1, !dbg !10601
  %call = call i32 @ata_msense_rw_recovery(i8* %27, i1 zeroext %cmp29) #10, !dbg !10602
  %29 = load i8*, i8** %p, align 8, !dbg !10603
  %idx.ext31 = zext i32 %call to i64, !dbg !10603
  %add.ptr32 = getelementptr i8, i8* %29, i64 %idx.ext31, !dbg !10603
  store i8* %add.ptr32, i8** %p, align 8, !dbg !10603
  br label %sw.epilog65, !dbg !10604

sw.bb33:                                          ; preds = %if.end26
  %30 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10605
  %id = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %30, i32 0, i32 1, !dbg !10606
  %31 = load i16*, i16** %id, align 8, !dbg !10606
  %32 = load i8*, i8** %p, align 8, !dbg !10607
  %33 = load i32, i32* %page_control, align 4, !dbg !10608
  %cmp34 = icmp eq i32 %33, 1, !dbg !10609
  %call36 = call i32 @ata_msense_caching(i16* %31, i8* %32, i1 zeroext %cmp34) #10, !dbg !10610
  %34 = load i8*, i8** %p, align 8, !dbg !10611
  %idx.ext37 = zext i32 %call36 to i64, !dbg !10611
  %add.ptr38 = getelementptr i8, i8* %34, i64 %idx.ext37, !dbg !10611
  store i8* %add.ptr38, i8** %p, align 8, !dbg !10611
  br label %sw.epilog65, !dbg !10612

sw.bb39:                                          ; preds = %if.end26
  %35 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10613
  %dev40 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %35, i32 0, i32 0, !dbg !10614
  %36 = load %struct.ata_device*, %struct.ata_device** %dev40, align 8, !dbg !10614
  %37 = load i8*, i8** %p, align 8, !dbg !10615
  %38 = load i32, i32* %page_control, align 4, !dbg !10616
  %cmp41 = icmp eq i32 %38, 1, !dbg !10617
  %call43 = call i32 @ata_msense_control(%struct.ata_device* %36, i8* %37, i1 zeroext %cmp41) #10, !dbg !10618
  %39 = load i8*, i8** %p, align 8, !dbg !10619
  %idx.ext44 = zext i32 %call43 to i64, !dbg !10619
  %add.ptr45 = getelementptr i8, i8* %39, i64 %idx.ext44, !dbg !10619
  store i8* %add.ptr45, i8** %p, align 8, !dbg !10619
  br label %sw.epilog65, !dbg !10620

sw.bb46:                                          ; preds = %if.end26
  %40 = load i8*, i8** %p, align 8, !dbg !10621
  %41 = load i32, i32* %page_control, align 4, !dbg !10622
  %cmp47 = icmp eq i32 %41, 1, !dbg !10623
  %call49 = call i32 @ata_msense_rw_recovery(i8* %40, i1 zeroext %cmp47) #10, !dbg !10624
  %42 = load i8*, i8** %p, align 8, !dbg !10625
  %idx.ext50 = zext i32 %call49 to i64, !dbg !10625
  %add.ptr51 = getelementptr i8, i8* %42, i64 %idx.ext50, !dbg !10625
  store i8* %add.ptr51, i8** %p, align 8, !dbg !10625
  %43 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10626
  %id52 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %43, i32 0, i32 1, !dbg !10627
  %44 = load i16*, i16** %id52, align 8, !dbg !10627
  %45 = load i8*, i8** %p, align 8, !dbg !10628
  %46 = load i32, i32* %page_control, align 4, !dbg !10629
  %cmp53 = icmp eq i32 %46, 1, !dbg !10630
  %call55 = call i32 @ata_msense_caching(i16* %44, i8* %45, i1 zeroext %cmp53) #10, !dbg !10631
  %47 = load i8*, i8** %p, align 8, !dbg !10632
  %idx.ext56 = zext i32 %call55 to i64, !dbg !10632
  %add.ptr57 = getelementptr i8, i8* %47, i64 %idx.ext56, !dbg !10632
  store i8* %add.ptr57, i8** %p, align 8, !dbg !10632
  %48 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10633
  %dev58 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %48, i32 0, i32 0, !dbg !10634
  %49 = load %struct.ata_device*, %struct.ata_device** %dev58, align 8, !dbg !10634
  %50 = load i8*, i8** %p, align 8, !dbg !10635
  %51 = load i32, i32* %page_control, align 4, !dbg !10636
  %cmp59 = icmp eq i32 %51, 1, !dbg !10637
  %call61 = call i32 @ata_msense_control(%struct.ata_device* %49, i8* %50, i1 zeroext %cmp59) #10, !dbg !10638
  %52 = load i8*, i8** %p, align 8, !dbg !10639
  %idx.ext62 = zext i32 %call61 to i64, !dbg !10639
  %add.ptr63 = getelementptr i8, i8* %52, i64 %idx.ext62, !dbg !10639
  store i8* %add.ptr63, i8** %p, align 8, !dbg !10639
  br label %sw.epilog65, !dbg !10640

sw.default64:                                     ; preds = %if.end26
  store i16 2, i16* %fp, align 2, !dbg !10641
  br label %invalid_fld, !dbg !10642

sw.epilog65:                                      ; preds = %sw.bb46, %sw.bb39, %sw.bb33, %sw.bb28
  store i8 0, i8* %dpofua, align 1, !dbg !10643
  %53 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10644
  %id66 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %53, i32 0, i32 1, !dbg !10646
  %54 = load i16*, i16** %id66, align 8, !dbg !10646
  %call67 = call i32 @ata_dev_supports_fua(i16* %54) #10, !dbg !10647
  %tobool68 = icmp ne i32 %call67, 0, !dbg !10647
  br i1 %tobool68, label %land.lhs.true69, label %if.end78, !dbg !10648

land.lhs.true69:                                  ; preds = %sw.epilog65
  %55 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10649
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %55, i32 0, i32 3, !dbg !10650
  %56 = load i64, i64* %flags, align 16, !dbg !10650
  %and70 = and i64 %56, 2, !dbg !10651
  %tobool71 = icmp ne i64 %and70, 0, !dbg !10651
  br i1 %tobool71, label %land.lhs.true72, label %if.end78, !dbg !10652

land.lhs.true72:                                  ; preds = %land.lhs.true69
  %57 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10653
  %flags73 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %57, i32 0, i32 3, !dbg !10654
  %58 = load i64, i64* %flags73, align 16, !dbg !10654
  %and74 = and i64 %58, 4096, !dbg !10655
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10655
  br i1 %tobool75, label %lor.lhs.false, label %if.then77, !dbg !10656

lor.lhs.false:                                    ; preds = %land.lhs.true72
  %59 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10657
  %multi_count = getelementptr inbounds %struct.ata_device, %struct.ata_device* %59, i32 0, i32 17, !dbg !10658
  %60 = load i32, i32* %multi_count, align 8, !dbg !10658
  %tobool76 = icmp ne i32 %60, 0, !dbg !10657
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !10659

if.then77:                                        ; preds = %lor.lhs.false, %land.lhs.true72
  store i8 16, i8* %dpofua, align 1, !dbg !10660
  br label %if.end78, !dbg !10661

if.end78:                                         ; preds = %if.then77, %lor.lhs.false, %land.lhs.true69, %sw.epilog65
  %61 = load i32, i32* %six_byte, align 4, !dbg !10662
  %tobool79 = icmp ne i32 %61, 0, !dbg !10662
  br i1 %tobool79, label %if.then80, label %if.else92, !dbg !10664

if.then80:                                        ; preds = %if.end78
  %62 = load i8*, i8** %p, align 8, !dbg !10665
  %63 = load i8*, i8** %rbuf.addr, align 8, !dbg !10667
  %sub.ptr.lhs.cast = ptrtoint i8* %62 to i64, !dbg !10668
  %sub.ptr.rhs.cast = ptrtoint i8* %63 to i64, !dbg !10668
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10668
  %sub = sub i64 %sub.ptr.sub, 1, !dbg !10669
  %conv81 = trunc i64 %sub to i8, !dbg !10665
  %64 = load i8*, i8** %rbuf.addr, align 8, !dbg !10670
  %arrayidx82 = getelementptr i8, i8* %64, i64 0, !dbg !10670
  store i8 %conv81, i8* %arrayidx82, align 1, !dbg !10671
  %65 = load i8, i8* %dpofua, align 1, !dbg !10672
  %conv83 = zext i8 %65 to i32, !dbg !10672
  %66 = load i8*, i8** %rbuf.addr, align 8, !dbg !10673
  %arrayidx84 = getelementptr i8, i8* %66, i64 2, !dbg !10673
  %67 = load i8, i8* %arrayidx84, align 1, !dbg !10674
  %conv85 = zext i8 %67 to i32, !dbg !10674
  %or = or i32 %conv85, %conv83, !dbg !10674
  %conv86 = trunc i32 %or to i8, !dbg !10674
  store i8 %conv86, i8* %arrayidx84, align 1, !dbg !10674
  %68 = load i32, i32* %ebd, align 4, !dbg !10675
  %tobool87 = icmp ne i32 %68, 0, !dbg !10675
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !10677

if.then88:                                        ; preds = %if.then80
  %69 = load i8*, i8** %rbuf.addr, align 8, !dbg !10678
  %arrayidx89 = getelementptr i8, i8* %69, i64 3, !dbg !10678
  store i8 8, i8* %arrayidx89, align 1, !dbg !10680
  %70 = load i8*, i8** %rbuf.addr, align 8, !dbg !10681
  %add.ptr90 = getelementptr i8, i8* %70, i64 4, !dbg !10682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr90, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @ata_scsiop_mode_sense.sat_blk_desc, i64 0, i64 0), i64 8, i1 false), !dbg !10683
  br label %if.end91, !dbg !10684

if.end91:                                         ; preds = %if.then88, %if.then80
  br label %if.end113, !dbg !10685

if.else92:                                        ; preds = %if.end78
  call void @llvm.dbg.declare(metadata i32* %output_len, metadata !10686, metadata !DIExpression()), !dbg !10688
  %71 = load i8*, i8** %p, align 8, !dbg !10689
  %72 = load i8*, i8** %rbuf.addr, align 8, !dbg !10690
  %sub.ptr.lhs.cast93 = ptrtoint i8* %71 to i64, !dbg !10691
  %sub.ptr.rhs.cast94 = ptrtoint i8* %72 to i64, !dbg !10691
  %sub.ptr.sub95 = sub i64 %sub.ptr.lhs.cast93, %sub.ptr.rhs.cast94, !dbg !10691
  %sub96 = sub i64 %sub.ptr.sub95, 2, !dbg !10692
  %conv97 = trunc i64 %sub96 to i32, !dbg !10689
  store i32 %conv97, i32* %output_len, align 4, !dbg !10688
  %73 = load i32, i32* %output_len, align 4, !dbg !10693
  %shr98 = lshr i32 %73, 8, !dbg !10694
  %conv99 = trunc i32 %shr98 to i8, !dbg !10693
  %74 = load i8*, i8** %rbuf.addr, align 8, !dbg !10695
  %arrayidx100 = getelementptr i8, i8* %74, i64 0, !dbg !10695
  store i8 %conv99, i8* %arrayidx100, align 1, !dbg !10696
  %75 = load i32, i32* %output_len, align 4, !dbg !10697
  %conv101 = trunc i32 %75 to i8, !dbg !10697
  %76 = load i8*, i8** %rbuf.addr, align 8, !dbg !10698
  %arrayidx102 = getelementptr i8, i8* %76, i64 1, !dbg !10698
  store i8 %conv101, i8* %arrayidx102, align 1, !dbg !10699
  %77 = load i8, i8* %dpofua, align 1, !dbg !10700
  %conv103 = zext i8 %77 to i32, !dbg !10700
  %78 = load i8*, i8** %rbuf.addr, align 8, !dbg !10701
  %arrayidx104 = getelementptr i8, i8* %78, i64 3, !dbg !10701
  %79 = load i8, i8* %arrayidx104, align 1, !dbg !10702
  %conv105 = zext i8 %79 to i32, !dbg !10702
  %or106 = or i32 %conv105, %conv103, !dbg !10702
  %conv107 = trunc i32 %or106 to i8, !dbg !10702
  store i8 %conv107, i8* %arrayidx104, align 1, !dbg !10702
  %80 = load i32, i32* %ebd, align 4, !dbg !10703
  %tobool108 = icmp ne i32 %80, 0, !dbg !10703
  br i1 %tobool108, label %if.then109, label %if.end112, !dbg !10705

if.then109:                                       ; preds = %if.else92
  %81 = load i8*, i8** %rbuf.addr, align 8, !dbg !10706
  %arrayidx110 = getelementptr i8, i8* %81, i64 7, !dbg !10706
  store i8 8, i8* %arrayidx110, align 1, !dbg !10708
  %82 = load i8*, i8** %rbuf.addr, align 8, !dbg !10709
  %add.ptr111 = getelementptr i8, i8* %82, i64 8, !dbg !10710
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr111, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @ata_scsiop_mode_sense.sat_blk_desc, i64 0, i64 0), i64 8, i1 false), !dbg !10711
  br label %if.end112, !dbg !10712

if.end112:                                        ; preds = %if.then109, %if.else92
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end91
  store i32 0, i32* %retval, align 4, !dbg !10713
  br label %return, !dbg !10713

invalid_fld:                                      ; preds = %sw.default64, %if.then25, %sw.default
  call void @llvm.dbg.label(metadata !10714), !dbg !10715
  %83 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10716
  %84 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10717
  %cmd114 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %84, i32 0, i32 2, !dbg !10718
  %85 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd114, align 8, !dbg !10718
  %86 = load i16, i16* %fp, align 2, !dbg !10719
  %87 = load i8, i8* %bp, align 1, !dbg !10720
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %83, %struct.scsi_cmnd* %85, i16 zeroext %86, i8 zeroext %87) #10, !dbg !10721
  store i32 1, i32* %retval, align 4, !dbg !10722
  br label %return, !dbg !10722

saving_not_supp:                                  ; preds = %sw.bb7
  call void @llvm.dbg.label(metadata !10723), !dbg !10724
  %88 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10725
  %89 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10726
  %cmd115 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %89, i32 0, i32 2, !dbg !10727
  %90 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd115, align 8, !dbg !10727
  call void @ata_scsi_set_sense(%struct.ata_device* %88, %struct.scsi_cmnd* %90, i8 zeroext 5, i8 zeroext 57, i8 zeroext 0) #10, !dbg !10728
  store i32 1, i32* %retval, align 4, !dbg !10729
  br label %return, !dbg !10729

return:                                           ; preds = %saving_not_supp, %invalid_fld, %if.end113
  %91 = load i32, i32* %retval, align 4, !dbg !10730
  ret i32 %91, !dbg !10730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_read_cap(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10731 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %last_lba = alloca i64, align 8
  %sector_size = alloca i32, align 4
  %log2_per_phys = alloca i8, align 1
  %lowest_aligned = alloca i16, align 2
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10732, metadata !DIExpression()), !dbg !10733
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10734, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !10736, metadata !DIExpression()), !dbg !10737
  %0 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10738
  %dev1 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %0, i32 0, i32 0, !dbg !10739
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !10739
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !10737
  call void @llvm.dbg.declare(metadata i64* %last_lba, metadata !10740, metadata !DIExpression()), !dbg !10741
  %2 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10742
  %n_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 9, !dbg !10743
  %3 = load i64, i64* %n_sectors, align 16, !dbg !10743
  %sub = sub i64 %3, 1, !dbg !10744
  store i64 %sub, i64* %last_lba, align 8, !dbg !10741
  call void @llvm.dbg.declare(metadata i32* %sector_size, metadata !10745, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.declare(metadata i8* %log2_per_phys, metadata !10747, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.declare(metadata i16* %lowest_aligned, metadata !10749, metadata !DIExpression()), !dbg !10750
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10751
  %5 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 27, !dbg !10752
  %id = bitcast %union.anon.90* %5 to [256 x i16]*, !dbg !10752
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !10751
  %call = call i32 @ata_id_logical_sector_size(i16* %arraydecay) #10, !dbg !10753
  store i32 %call, i32* %sector_size, align 4, !dbg !10754
  %6 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10755
  %7 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 27, !dbg !10756
  %id2 = bitcast %union.anon.90* %7 to [256 x i16]*, !dbg !10756
  %arraydecay3 = getelementptr inbounds [256 x i16], [256 x i16]* %id2, i64 0, i64 0, !dbg !10755
  %call4 = call zeroext i8 @ata_id_log2_per_physical_sector(i16* %arraydecay3) #10, !dbg !10757
  store i8 %call4, i8* %log2_per_phys, align 1, !dbg !10758
  %8 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10759
  %9 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 27, !dbg !10760
  %id5 = bitcast %union.anon.90* %9 to [256 x i16]*, !dbg !10760
  %arraydecay6 = getelementptr inbounds [256 x i16], [256 x i16]* %id5, i64 0, i64 0, !dbg !10759
  %10 = load i8, i8* %log2_per_phys, align 1, !dbg !10761
  %call7 = call zeroext i16 @ata_id_logical_sector_offset(i16* %arraydecay6, i8 zeroext %10) #10, !dbg !10762
  store i16 %call7, i16* %lowest_aligned, align 2, !dbg !10763
  %11 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10764
  %cmd = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %11, i32 0, i32 2, !dbg !10766
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10766
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %12, i32 0, i32 14, !dbg !10767
  %13 = load i8*, i8** %cmnd, align 8, !dbg !10767
  %arrayidx = getelementptr i8, i8* %13, i64 0, !dbg !10764
  %14 = load i8, i8* %arrayidx, align 1, !dbg !10764
  %conv = zext i8 %14 to i32, !dbg !10764
  %cmp = icmp eq i32 %conv, 37, !dbg !10768
  br i1 %cmp, label %if.then, label %if.else, !dbg !10769

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %last_lba, align 8, !dbg !10770
  %cmp9 = icmp uge i64 %15, 4294967295, !dbg !10773
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !10774

if.then11:                                        ; preds = %if.then
  store i64 4294967295, i64* %last_lba, align 8, !dbg !10775
  br label %if.end, !dbg !10776

if.end:                                           ; preds = %if.then11, %if.then
  %16 = load i64, i64* %last_lba, align 8, !dbg !10777
  %shr = lshr i64 %16, 24, !dbg !10778
  %conv12 = trunc i64 %shr to i8, !dbg !10777
  %17 = load i8*, i8** %rbuf.addr, align 8, !dbg !10779
  %arrayidx13 = getelementptr i8, i8* %17, i64 0, !dbg !10779
  store i8 %conv12, i8* %arrayidx13, align 1, !dbg !10780
  %18 = load i64, i64* %last_lba, align 8, !dbg !10781
  %shr14 = lshr i64 %18, 16, !dbg !10782
  %conv15 = trunc i64 %shr14 to i8, !dbg !10781
  %19 = load i8*, i8** %rbuf.addr, align 8, !dbg !10783
  %arrayidx16 = getelementptr i8, i8* %19, i64 1, !dbg !10783
  store i8 %conv15, i8* %arrayidx16, align 1, !dbg !10784
  %20 = load i64, i64* %last_lba, align 8, !dbg !10785
  %shr17 = lshr i64 %20, 8, !dbg !10786
  %conv18 = trunc i64 %shr17 to i8, !dbg !10785
  %21 = load i8*, i8** %rbuf.addr, align 8, !dbg !10787
  %arrayidx19 = getelementptr i8, i8* %21, i64 2, !dbg !10787
  store i8 %conv18, i8* %arrayidx19, align 1, !dbg !10788
  %22 = load i64, i64* %last_lba, align 8, !dbg !10789
  %conv20 = trunc i64 %22 to i8, !dbg !10789
  %23 = load i8*, i8** %rbuf.addr, align 8, !dbg !10790
  %arrayidx21 = getelementptr i8, i8* %23, i64 3, !dbg !10790
  store i8 %conv20, i8* %arrayidx21, align 1, !dbg !10791
  %24 = load i32, i32* %sector_size, align 4, !dbg !10792
  %shr22 = lshr i32 %24, 24, !dbg !10793
  %conv23 = trunc i32 %shr22 to i8, !dbg !10792
  %25 = load i8*, i8** %rbuf.addr, align 8, !dbg !10794
  %arrayidx24 = getelementptr i8, i8* %25, i64 4, !dbg !10794
  store i8 %conv23, i8* %arrayidx24, align 1, !dbg !10795
  %26 = load i32, i32* %sector_size, align 4, !dbg !10796
  %shr25 = lshr i32 %26, 16, !dbg !10797
  %conv26 = trunc i32 %shr25 to i8, !dbg !10796
  %27 = load i8*, i8** %rbuf.addr, align 8, !dbg !10798
  %arrayidx27 = getelementptr i8, i8* %27, i64 5, !dbg !10798
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10799
  %28 = load i32, i32* %sector_size, align 4, !dbg !10800
  %shr28 = lshr i32 %28, 8, !dbg !10801
  %conv29 = trunc i32 %shr28 to i8, !dbg !10800
  %29 = load i8*, i8** %rbuf.addr, align 8, !dbg !10802
  %arrayidx30 = getelementptr i8, i8* %29, i64 6, !dbg !10802
  store i8 %conv29, i8* %arrayidx30, align 1, !dbg !10803
  %30 = load i32, i32* %sector_size, align 4, !dbg !10804
  %conv31 = trunc i32 %30 to i8, !dbg !10804
  %31 = load i8*, i8** %rbuf.addr, align 8, !dbg !10805
  %arrayidx32 = getelementptr i8, i8* %31, i64 7, !dbg !10805
  store i8 %conv31, i8* %arrayidx32, align 1, !dbg !10806
  br label %if.end107, !dbg !10807

if.else:                                          ; preds = %entry
  %32 = load i64, i64* %last_lba, align 8, !dbg !10808
  %shr33 = lshr i64 %32, 56, !dbg !10810
  %conv34 = trunc i64 %shr33 to i8, !dbg !10808
  %33 = load i8*, i8** %rbuf.addr, align 8, !dbg !10811
  %arrayidx35 = getelementptr i8, i8* %33, i64 0, !dbg !10811
  store i8 %conv34, i8* %arrayidx35, align 1, !dbg !10812
  %34 = load i64, i64* %last_lba, align 8, !dbg !10813
  %shr36 = lshr i64 %34, 48, !dbg !10814
  %conv37 = trunc i64 %shr36 to i8, !dbg !10813
  %35 = load i8*, i8** %rbuf.addr, align 8, !dbg !10815
  %arrayidx38 = getelementptr i8, i8* %35, i64 1, !dbg !10815
  store i8 %conv37, i8* %arrayidx38, align 1, !dbg !10816
  %36 = load i64, i64* %last_lba, align 8, !dbg !10817
  %shr39 = lshr i64 %36, 40, !dbg !10818
  %conv40 = trunc i64 %shr39 to i8, !dbg !10817
  %37 = load i8*, i8** %rbuf.addr, align 8, !dbg !10819
  %arrayidx41 = getelementptr i8, i8* %37, i64 2, !dbg !10819
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10820
  %38 = load i64, i64* %last_lba, align 8, !dbg !10821
  %shr42 = lshr i64 %38, 32, !dbg !10822
  %conv43 = trunc i64 %shr42 to i8, !dbg !10821
  %39 = load i8*, i8** %rbuf.addr, align 8, !dbg !10823
  %arrayidx44 = getelementptr i8, i8* %39, i64 3, !dbg !10823
  store i8 %conv43, i8* %arrayidx44, align 1, !dbg !10824
  %40 = load i64, i64* %last_lba, align 8, !dbg !10825
  %shr45 = lshr i64 %40, 24, !dbg !10826
  %conv46 = trunc i64 %shr45 to i8, !dbg !10825
  %41 = load i8*, i8** %rbuf.addr, align 8, !dbg !10827
  %arrayidx47 = getelementptr i8, i8* %41, i64 4, !dbg !10827
  store i8 %conv46, i8* %arrayidx47, align 1, !dbg !10828
  %42 = load i64, i64* %last_lba, align 8, !dbg !10829
  %shr48 = lshr i64 %42, 16, !dbg !10830
  %conv49 = trunc i64 %shr48 to i8, !dbg !10829
  %43 = load i8*, i8** %rbuf.addr, align 8, !dbg !10831
  %arrayidx50 = getelementptr i8, i8* %43, i64 5, !dbg !10831
  store i8 %conv49, i8* %arrayidx50, align 1, !dbg !10832
  %44 = load i64, i64* %last_lba, align 8, !dbg !10833
  %shr51 = lshr i64 %44, 8, !dbg !10834
  %conv52 = trunc i64 %shr51 to i8, !dbg !10833
  %45 = load i8*, i8** %rbuf.addr, align 8, !dbg !10835
  %arrayidx53 = getelementptr i8, i8* %45, i64 6, !dbg !10835
  store i8 %conv52, i8* %arrayidx53, align 1, !dbg !10836
  %46 = load i64, i64* %last_lba, align 8, !dbg !10837
  %conv54 = trunc i64 %46 to i8, !dbg !10837
  %47 = load i8*, i8** %rbuf.addr, align 8, !dbg !10838
  %arrayidx55 = getelementptr i8, i8* %47, i64 7, !dbg !10838
  store i8 %conv54, i8* %arrayidx55, align 1, !dbg !10839
  %48 = load i32, i32* %sector_size, align 4, !dbg !10840
  %shr56 = lshr i32 %48, 24, !dbg !10841
  %conv57 = trunc i32 %shr56 to i8, !dbg !10840
  %49 = load i8*, i8** %rbuf.addr, align 8, !dbg !10842
  %arrayidx58 = getelementptr i8, i8* %49, i64 8, !dbg !10842
  store i8 %conv57, i8* %arrayidx58, align 1, !dbg !10843
  %50 = load i32, i32* %sector_size, align 4, !dbg !10844
  %shr59 = lshr i32 %50, 16, !dbg !10845
  %conv60 = trunc i32 %shr59 to i8, !dbg !10844
  %51 = load i8*, i8** %rbuf.addr, align 8, !dbg !10846
  %arrayidx61 = getelementptr i8, i8* %51, i64 9, !dbg !10846
  store i8 %conv60, i8* %arrayidx61, align 1, !dbg !10847
  %52 = load i32, i32* %sector_size, align 4, !dbg !10848
  %shr62 = lshr i32 %52, 8, !dbg !10849
  %conv63 = trunc i32 %shr62 to i8, !dbg !10848
  %53 = load i8*, i8** %rbuf.addr, align 8, !dbg !10850
  %arrayidx64 = getelementptr i8, i8* %53, i64 10, !dbg !10850
  store i8 %conv63, i8* %arrayidx64, align 1, !dbg !10851
  %54 = load i32, i32* %sector_size, align 4, !dbg !10852
  %conv65 = trunc i32 %54 to i8, !dbg !10852
  %55 = load i8*, i8** %rbuf.addr, align 8, !dbg !10853
  %arrayidx66 = getelementptr i8, i8* %55, i64 11, !dbg !10853
  store i8 %conv65, i8* %arrayidx66, align 1, !dbg !10854
  %56 = load i8*, i8** %rbuf.addr, align 8, !dbg !10855
  %arrayidx67 = getelementptr i8, i8* %56, i64 12, !dbg !10855
  store i8 0, i8* %arrayidx67, align 1, !dbg !10856
  %57 = load i8, i8* %log2_per_phys, align 1, !dbg !10857
  %58 = load i8*, i8** %rbuf.addr, align 8, !dbg !10858
  %arrayidx68 = getelementptr i8, i8* %58, i64 13, !dbg !10858
  store i8 %57, i8* %arrayidx68, align 1, !dbg !10859
  %59 = load i16, i16* %lowest_aligned, align 2, !dbg !10860
  %conv69 = zext i16 %59 to i32, !dbg !10860
  %shr70 = ashr i32 %conv69, 8, !dbg !10861
  %and = and i32 %shr70, 63, !dbg !10862
  %conv71 = trunc i32 %and to i8, !dbg !10863
  %60 = load i8*, i8** %rbuf.addr, align 8, !dbg !10864
  %arrayidx72 = getelementptr i8, i8* %60, i64 14, !dbg !10864
  store i8 %conv71, i8* %arrayidx72, align 1, !dbg !10865
  %61 = load i16, i16* %lowest_aligned, align 2, !dbg !10866
  %conv73 = trunc i16 %61 to i8, !dbg !10866
  %62 = load i8*, i8** %rbuf.addr, align 8, !dbg !10867
  %arrayidx74 = getelementptr i8, i8* %62, i64 15, !dbg !10867
  store i8 %conv73, i8* %arrayidx74, align 1, !dbg !10868
  %63 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10869
  %id75 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %63, i32 0, i32 1, !dbg !10871
  %64 = load i16*, i16** %id75, align 8, !dbg !10871
  %call76 = call zeroext i1 @ata_id_has_trim(i16* %64) #10, !dbg !10872
  br i1 %call76, label %land.lhs.true, label %if.end96, !dbg !10873

land.lhs.true:                                    ; preds = %if.else
  %65 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10874
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %65, i32 0, i32 2, !dbg !10875
  %66 = load i32, i32* %horkage, align 4, !dbg !10875
  %and78 = and i32 %66, 16777216, !dbg !10876
  %tobool = icmp ne i32 %and78, 0, !dbg !10876
  br i1 %tobool, label %if.end96, label %if.then79, !dbg !10877

if.then79:                                        ; preds = %land.lhs.true
  %67 = load i8*, i8** %rbuf.addr, align 8, !dbg !10878
  %arrayidx80 = getelementptr i8, i8* %67, i64 14, !dbg !10878
  %68 = load i8, i8* %arrayidx80, align 1, !dbg !10880
  %conv81 = zext i8 %68 to i32, !dbg !10880
  %or = or i32 %conv81, 128, !dbg !10880
  %conv82 = trunc i32 %or to i8, !dbg !10880
  store i8 %conv82, i8* %arrayidx80, align 1, !dbg !10880
  %69 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10881
  %id83 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %69, i32 0, i32 1, !dbg !10883
  %70 = load i16*, i16** %id83, align 8, !dbg !10883
  %call84 = call zeroext i1 @ata_id_has_zero_after_trim(i16* %70) #10, !dbg !10884
  br i1 %call84, label %land.lhs.true86, label %if.end95, !dbg !10885

land.lhs.true86:                                  ; preds = %if.then79
  %71 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10886
  %horkage87 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %71, i32 0, i32 2, !dbg !10887
  %72 = load i32, i32* %horkage87, align 4, !dbg !10887
  %and88 = and i32 %72, 4194304, !dbg !10888
  %tobool89 = icmp ne i32 %and88, 0, !dbg !10888
  br i1 %tobool89, label %if.then90, label %if.end95, !dbg !10889

if.then90:                                        ; preds = %land.lhs.true86
  %73 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10890
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %73, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.48, i64 0, i64 0)) #10, !dbg !10890
  %74 = load i8*, i8** %rbuf.addr, align 8, !dbg !10892
  %arrayidx91 = getelementptr i8, i8* %74, i64 14, !dbg !10892
  %75 = load i8, i8* %arrayidx91, align 1, !dbg !10893
  %conv92 = zext i8 %75 to i32, !dbg !10893
  %or93 = or i32 %conv92, 64, !dbg !10893
  %conv94 = trunc i32 %or93 to i8, !dbg !10893
  store i8 %conv94, i8* %arrayidx91, align 1, !dbg !10893
  br label %if.end95, !dbg !10894

if.end95:                                         ; preds = %if.then90, %land.lhs.true86, %if.then79
  br label %if.end96, !dbg !10895

if.end96:                                         ; preds = %if.end95, %land.lhs.true, %if.else
  %76 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10896
  %id97 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %76, i32 0, i32 1, !dbg !10898
  %77 = load i16*, i16** %id97, align 8, !dbg !10898
  %call98 = call zeroext i8 @ata_id_zoned_cap(i16* %77) #10, !dbg !10899
  %conv99 = zext i8 %call98 to i32, !dbg !10899
  %tobool100 = icmp ne i32 %conv99, 0, !dbg !10899
  br i1 %tobool100, label %if.then104, label %lor.lhs.false, !dbg !10900

lor.lhs.false:                                    ; preds = %if.end96
  %78 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10901
  %dev101 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %78, i32 0, i32 0, !dbg !10902
  %79 = load %struct.ata_device*, %struct.ata_device** %dev101, align 8, !dbg !10902
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %79, i32 0, i32 11, !dbg !10903
  %80 = load i32, i32* %class, align 64, !dbg !10903
  %cmp102 = icmp eq i32 %80, 9, !dbg !10904
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !10905

if.then104:                                       ; preds = %lor.lhs.false, %if.end96
  %81 = load i8*, i8** %rbuf.addr, align 8, !dbg !10906
  %arrayidx105 = getelementptr i8, i8* %81, i64 12, !dbg !10906
  store i8 16, i8* %arrayidx105, align 1, !dbg !10907
  br label %if.end106, !dbg !10906

if.end106:                                        ; preds = %if.then104, %lor.lhs.false
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end
  ret i32 0, !dbg !10908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_report_luns(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10909 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  %0 = load i8*, i8** %rbuf.addr, align 8, !dbg !10914
  %arrayidx = getelementptr i8, i8* %0, i64 3, !dbg !10914
  store i8 8, i8* %arrayidx, align 1, !dbg !10915
  ret i32 0, !dbg !10916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsiop_maint_in(%struct.ata_scsi_args* %args, i8* %rbuf) #0 !dbg !10917 {
entry:
  %args.addr = alloca %struct.ata_scsi_args*, align 8
  %rbuf.addr = alloca i8*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %cdb = alloca i8*, align 8
  %supported = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.ata_scsi_args* %args, %struct.ata_scsi_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_scsi_args** %args.addr, metadata !10918, metadata !DIExpression()), !dbg !10919
  store i8* %rbuf, i8** %rbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rbuf.addr, metadata !10920, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !10922, metadata !DIExpression()), !dbg !10923
  %0 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10924
  %dev1 = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %0, i32 0, i32 0, !dbg !10925
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !10925
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !10923
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !10926, metadata !DIExpression()), !dbg !10927
  %2 = load %struct.ata_scsi_args*, %struct.ata_scsi_args** %args.addr, align 8, !dbg !10928
  %cmd = getelementptr inbounds %struct.ata_scsi_args, %struct.ata_scsi_args* %2, i32 0, i32 2, !dbg !10929
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10929
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 14, !dbg !10930
  %4 = load i8*, i8** %cmnd, align 8, !dbg !10930
  store i8* %4, i8** %cdb, align 8, !dbg !10927
  call void @llvm.dbg.declare(metadata i8* %supported, metadata !10931, metadata !DIExpression()), !dbg !10932
  store i8 0, i8* %supported, align 1, !dbg !10932
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10933, metadata !DIExpression()), !dbg !10934
  store i32 0, i32* %err, align 4, !dbg !10934
  %5 = load i8*, i8** %cdb, align 8, !dbg !10935
  %arrayidx = getelementptr i8, i8* %5, i64 2, !dbg !10935
  %6 = load i8, i8* %arrayidx, align 1, !dbg !10935
  %conv = zext i8 %6 to i32, !dbg !10935
  %cmp = icmp ne i32 %conv, 1, !dbg !10937
  br i1 %cmp, label %if.then, label %if.end, !dbg !10938

if.then:                                          ; preds = %entry
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10939
  %8 = load i8*, i8** %cdb, align 8, !dbg !10939
  %arrayidx3 = getelementptr i8, i8* %8, i64 2, !dbg !10939
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !10939
  %conv4 = zext i8 %9 to i32, !dbg !10939
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0), i32 %conv4) #10, !dbg !10939
  store i32 2, i32* %err, align 4, !dbg !10941
  br label %out, !dbg !10942

if.end:                                           ; preds = %entry
  %10 = load i8*, i8** %cdb, align 8, !dbg !10943
  %arrayidx5 = getelementptr i8, i8* %10, i64 3, !dbg !10943
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !10943
  %conv6 = zext i8 %11 to i32, !dbg !10943
  switch i32 %conv6, label %sw.default [
    i32 18, label %sw.bb
    i32 26, label %sw.bb
    i32 90, label %sw.bb
    i32 37, label %sw.bb
    i32 158, label %sw.bb
    i32 160, label %sw.bb
    i32 3, label %sw.bb
    i32 53, label %sw.bb
    i32 1, label %sw.bb
    i32 11, label %sw.bb
    i32 43, label %sw.bb
    i32 0, label %sw.bb
    i32 29, label %sw.bb
    i32 163, label %sw.bb
    i32 8, label %sw.bb
    i32 40, label %sw.bb
    i32 136, label %sw.bb
    i32 10, label %sw.bb
    i32 42, label %sw.bb
    i32 138, label %sw.bb
    i32 161, label %sw.bb
    i32 133, label %sw.bb
    i32 47, label %sw.bb
    i32 143, label %sw.bb
    i32 21, label %sw.bb
    i32 85, label %sw.bb
    i32 27, label %sw.bb
    i32 149, label %sw.bb7
    i32 148, label %sw.bb7
    i32 162, label %sw.bb13
    i32 181, label %sw.bb13
  ], !dbg !10944

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i8 3, i8* %supported, align 1, !dbg !10945
  br label %sw.epilog, !dbg !10947

sw.bb7:                                           ; preds = %if.end, %if.end
  %12 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10948
  %13 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 27, !dbg !10950
  %id = bitcast %union.anon.90* %13 to [256 x i16]*, !dbg !10950
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !10948
  %call = call zeroext i8 @ata_id_zoned_cap(i16* %arraydecay) #10, !dbg !10951
  %conv8 = zext i8 %call to i32, !dbg !10951
  %tobool = icmp ne i32 %conv8, 0, !dbg !10951
  br i1 %tobool, label %if.then11, label %lor.lhs.false, !dbg !10952

lor.lhs.false:                                    ; preds = %sw.bb7
  %14 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10953
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 11, !dbg !10954
  %15 = load i32, i32* %class, align 64, !dbg !10954
  %cmp9 = icmp eq i32 %15, 9, !dbg !10955
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10956

if.then11:                                        ; preds = %lor.lhs.false, %sw.bb7
  store i8 3, i8* %supported, align 1, !dbg !10957
  br label %if.end12, !dbg !10958

if.end12:                                         ; preds = %if.then11, %lor.lhs.false
  br label %sw.epilog, !dbg !10959

sw.bb13:                                          ; preds = %if.end, %if.end
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10960
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 3, !dbg !10962
  %17 = load i64, i64* %flags, align 16, !dbg !10962
  %and = and i64 %17, 256, !dbg !10963
  %tobool14 = icmp ne i64 %and, 0, !dbg !10963
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10964

if.then15:                                        ; preds = %sw.bb13
  store i8 3, i8* %supported, align 1, !dbg !10965
  br label %if.end16, !dbg !10966

if.end16:                                         ; preds = %if.then15, %sw.bb13
  br label %sw.epilog, !dbg !10967

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !10968

sw.epilog:                                        ; preds = %sw.default, %if.end16, %if.end12, %sw.bb
  br label %out, !dbg !10969

out:                                              ; preds = %sw.epilog, %if.then
  call void @llvm.dbg.label(metadata !10970), !dbg !10971
  %18 = load i8, i8* %supported, align 1, !dbg !10972
  %19 = load i8*, i8** %rbuf.addr, align 8, !dbg !10973
  %arrayidx17 = getelementptr i8, i8* %19, i64 1, !dbg !10973
  store i8 %18, i8* %arrayidx17, align 1, !dbg !10974
  %20 = load i32, i32* %err, align 4, !dbg !10975
  ret i32 %20, !dbg !10976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_scsi_add_hosts(%struct.ata_host* %host, %struct.scsi_host_template* %sht) #0 !dbg !10977 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %sht.addr = alloca %struct.scsi_host_template*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %shost = alloca %struct.Scsi_Host*, align 8
  %shost8 = alloca %struct.Scsi_Host*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !10980, metadata !DIExpression()), !dbg !10981
  store %struct.scsi_host_template* %sht, %struct.scsi_host_template** %sht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %sht.addr, metadata !10982, metadata !DIExpression()), !dbg !10983
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10986, metadata !DIExpression()), !dbg !10987
  store i32 0, i32* %i, align 4, !dbg !10988
  br label %for.cond, !dbg !10990

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10991
  %1 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10993
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 3, !dbg !10994
  %2 = load i32, i32* %n_ports, align 8, !dbg !10994
  %cmp = icmp ult i32 %0, %2, !dbg !10995
  br i1 %cmp, label %for.body, label %for.end, !dbg !10996

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10997, metadata !DIExpression()), !dbg !10999
  %3 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11000
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 12, !dbg !11001
  %4 = load i32, i32* %i, align 4, !dbg !11002
  %idxprom = sext i32 %4 to i64, !dbg !11000
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !11000
  %5 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !11000
  store %struct.ata_port* %5, %struct.ata_port** %ap, align 8, !dbg !10999
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost, metadata !11003, metadata !DIExpression()), !dbg !11004
  store i32 -12, i32* %rc, align 4, !dbg !11005
  %6 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !11006
  %call = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* %6, i32 8) #10, !dbg !11007
  store %struct.Scsi_Host* %call, %struct.Scsi_Host** %shost, align 8, !dbg !11008
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11009
  %tobool = icmp ne %struct.Scsi_Host* %7, null, !dbg !11009
  br i1 %tobool, label %if.end, label %if.then, !dbg !11011

if.then:                                          ; preds = %for.body
  br label %err_alloc, !dbg !11012

if.end:                                           ; preds = %for.body
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11013
  %eh_noresume = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 34, !dbg !11014
  %bf.load = load i16, i16* %eh_noresume, align 4, !dbg !11015
  %bf.clear = and i16 %bf.load, -129, !dbg !11015
  %bf.set = or i16 %bf.clear, 128, !dbg !11015
  store i16 %bf.set, i16* %eh_noresume, align 4, !dbg !11015
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11016
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11017
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %10, i32 0, i32 51, !dbg !11018
  %arrayidx1 = getelementptr [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !11017
  %11 = bitcast i64* %arrayidx1 to %struct.ata_port**, !dbg !11019
  store %struct.ata_port* %9, %struct.ata_port** %11, align 8, !dbg !11020
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11021
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11022
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 0, !dbg !11023
  store %struct.Scsi_Host* %12, %struct.Scsi_Host** %scsi_host, align 64, !dbg !11024
  %14 = load %struct.scsi_transport_template*, %struct.scsi_transport_template** @ata_scsi_transport_template, align 8, !dbg !11025
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11026
  %transportt = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 11, !dbg !11027
  store %struct.scsi_transport_template* %14, %struct.scsi_transport_template** %transportt, align 8, !dbg !11028
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11029
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 5, !dbg !11030
  %17 = load i32, i32* %print_id, align 4, !dbg !11030
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11031
  %unique_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 22, !dbg !11032
  store i32 %17, i32* %unique_id, align 8, !dbg !11033
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11034
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %19, i32 0, i32 20, !dbg !11035
  store i32 16, i32* %max_id, align 4, !dbg !11036
  %20 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11037
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %20, i32 0, i32 21, !dbg !11038
  store i64 1, i64* %max_lun, align 8, !dbg !11039
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11040
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 19, !dbg !11041
  store i32 1, i32* %max_channel, align 8, !dbg !11042
  %22 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11043
  %max_cmd_len = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %22, i32 0, i32 23, !dbg !11044
  store i16 32, i16* %max_cmd_len, align 4, !dbg !11045
  %23 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11046
  %max_host_blocked = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %23, i32 0, i32 38, !dbg !11047
  store i32 1, i32* %max_host_blocked, align 8, !dbg !11048
  %24 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost, align 8, !dbg !11049
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11050
  %tdev = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 33, !dbg !11051
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11052
  %host2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 31, !dbg !11053
  %27 = load %struct.ata_host*, %struct.ata_host** %host2, align 8, !dbg !11053
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %27, i32 0, i32 1, !dbg !11054
  %28 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11054
  %call3 = call i32 @scsi_add_host_with_dma(%struct.Scsi_Host* %24, %struct.device* %tdev, %struct.device* %28) #10, !dbg !11055
  store i32 %call3, i32* %rc, align 4, !dbg !11056
  %29 = load i32, i32* %rc, align 4, !dbg !11057
  %tobool4 = icmp ne i32 %29, 0, !dbg !11057
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !11059

if.then5:                                         ; preds = %if.end
  br label %err_alloc, !dbg !11060

if.end6:                                          ; preds = %if.end
  br label %for.inc, !dbg !11061

for.inc:                                          ; preds = %if.end6
  %30 = load i32, i32* %i, align 4, !dbg !11062
  %inc = add i32 %30, 1, !dbg !11062
  store i32 %inc, i32* %i, align 4, !dbg !11062
  br label %for.cond, !dbg !11063, !llvm.loop !11064

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11066
  br label %return, !dbg !11066

err_alloc:                                        ; preds = %if.then5, %if.then
  call void @llvm.dbg.label(metadata !11067), !dbg !11068
  br label %while.cond, !dbg !11069

while.cond:                                       ; preds = %while.body, %err_alloc
  %31 = load i32, i32* %i, align 4, !dbg !11070
  %dec = add i32 %31, -1, !dbg !11070
  store i32 %dec, i32* %i, align 4, !dbg !11070
  %cmp7 = icmp sge i32 %dec, 0, !dbg !11071
  br i1 %cmp7, label %while.body, label %while.end, !dbg !11069

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost8, metadata !11072, metadata !DIExpression()), !dbg !11074
  %32 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11075
  %ports9 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %32, i32 0, i32 12, !dbg !11076
  %33 = load i32, i32* %i, align 4, !dbg !11077
  %idxprom10 = sext i32 %33 to i64, !dbg !11075
  %arrayidx11 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports9, i64 0, i64 %idxprom10, !dbg !11075
  %34 = load %struct.ata_port*, %struct.ata_port** %arrayidx11, align 8, !dbg !11075
  %scsi_host12 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %34, i32 0, i32 0, !dbg !11078
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host12, align 64, !dbg !11078
  store %struct.Scsi_Host* %35, %struct.Scsi_Host** %shost8, align 8, !dbg !11074
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost8, align 8, !dbg !11079
  call void @scsi_remove_host(%struct.Scsi_Host* %36) #10, !dbg !11080
  br label %while.cond, !dbg !11069, !llvm.loop !11081

while.end:                                        ; preds = %while.cond
  %37 = load i32, i32* %rc, align 4, !dbg !11083
  store i32 %37, i32* %retval, align 4, !dbg !11084
  br label %return, !dbg !11084

return:                                           ; preds = %while.end, %for.end
  %38 = load i32, i32* %retval, align 4, !dbg !11085
  ret i32 %38, !dbg !11085
}

; Function Attrs: noredzone
declare dso_local %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_host_with_dma(%struct.Scsi_Host*, %struct.device*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_remove_host(%struct.Scsi_Host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_scan_host(%struct.ata_port* %ap, i32 %sync) #0 !dbg !11086 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %sync.addr = alloca i32, align 4
  %tries = alloca i32, align 4
  %last_failed_dev = alloca %struct.ata_device*, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %channel = alloca i32, align 4
  %id = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  store i32 %sync, i32* %sync.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync.addr, metadata !11091, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !11093, metadata !DIExpression()), !dbg !11094
  store i32 5, i32* %tries, align 4, !dbg !11094
  call void @llvm.dbg.declare(metadata %struct.ata_device** %last_failed_dev, metadata !11095, metadata !DIExpression()), !dbg !11096
  store %struct.ata_device* null, %struct.ata_device** %last_failed_dev, align 8, !dbg !11096
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !11097, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11099, metadata !DIExpression()), !dbg !11100
  br label %repeat, !dbg !11101

repeat:                                           ; preds = %if.then47, %if.then44, %entry
  call void @llvm.dbg.label(metadata !11102), !dbg !11103
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11104
  %call = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %0, i32 0) #10, !dbg !11104
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !11104
  br label %for.cond, !dbg !11104

for.cond:                                         ; preds = %for.inc18, %repeat
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11106
  %tobool = icmp ne %struct.ata_link* %1, null, !dbg !11104
  br i1 %tobool, label %for.body, label %for.end20, !dbg !11104

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11108
  %call1 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %2, i32 0) #10, !dbg !11108
  store %struct.ata_device* %call1, %struct.ata_device** %dev, align 8, !dbg !11108
  br label %for.cond2, !dbg !11108

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11111
  %tobool3 = icmp ne %struct.ata_device* %3, null, !dbg !11108
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11108

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !11113, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11116, metadata !DIExpression()), !dbg !11117
  store i32 0, i32* %channel, align 4, !dbg !11117
  call void @llvm.dbg.declare(metadata i32* %id, metadata !11118, metadata !DIExpression()), !dbg !11119
  store i32 0, i32* %id, align 4, !dbg !11119
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11120
  %sdev5 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 4, !dbg !11122
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev5, align 8, !dbg !11122
  %tobool6 = icmp ne %struct.scsi_device* %5, null, !dbg !11120
  br i1 %tobool6, label %if.then, label %if.end, !dbg !11123

if.then:                                          ; preds = %for.body4
  br label %for.inc, !dbg !11124

if.end:                                           ; preds = %for.body4
  %6 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11125
  %call7 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %6) #10, !dbg !11127
  br i1 %call7, label %if.then8, label %if.else, !dbg !11128

if.then8:                                         ; preds = %if.end
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11129
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 1, !dbg !11130
  %8 = load i32, i32* %devno, align 8, !dbg !11130
  store i32 %8, i32* %id, align 4, !dbg !11131
  br label %if.end9, !dbg !11132

if.else:                                          ; preds = %if.end
  %9 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11133
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %9, i32 0, i32 1, !dbg !11134
  %10 = load i32, i32* %pmp, align 8, !dbg !11134
  store i32 %10, i32* %channel, align 4, !dbg !11135
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11136
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 0, !dbg !11137
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !11137
  %13 = load i32, i32* %channel, align 4, !dbg !11138
  %14 = load i32, i32* %id, align 4, !dbg !11139
  %call10 = call %struct.scsi_device* @__scsi_add_device(%struct.Scsi_Host* %12, i32 %13, i32 %14, i64 0, i8* null) #10, !dbg !11140
  store %struct.scsi_device* %call10, %struct.scsi_device** %sdev, align 8, !dbg !11141
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11142
  %16 = bitcast %struct.scsi_device* %15 to i8*, !dbg !11142
  %call11 = call zeroext i1 @IS_ERR(i8* %16) #10, !dbg !11144
  br i1 %call11, label %if.else14, label %if.then12, !dbg !11145

if.then12:                                        ; preds = %if.end9
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11146
  %18 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11148
  %sdev13 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %18, i32 0, i32 4, !dbg !11149
  store %struct.scsi_device* %17, %struct.scsi_device** %sdev13, align 8, !dbg !11150
  %19 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11151
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11152
  call void @ata_scsi_assign_ofnode(%struct.ata_device* %19, %struct.ata_port* %20) #10, !dbg !11153
  %21 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11154
  call void @scsi_device_put(%struct.scsi_device* %21) #10, !dbg !11155
  br label %if.end16, !dbg !11156

if.else14:                                        ; preds = %if.end9
  %22 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11157
  %sdev15 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 4, !dbg !11159
  store %struct.scsi_device* null, %struct.scsi_device** %sdev15, align 8, !dbg !11160
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then12
  br label %for.inc, !dbg !11161

for.inc:                                          ; preds = %if.end16, %if.then
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11111
  %24 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11111
  %call17 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %23, %struct.ata_link* %24, i32 0) #10, !dbg !11111
  store %struct.ata_device* %call17, %struct.ata_device** %dev, align 8, !dbg !11111
  br label %for.cond2, !dbg !11111, !llvm.loop !11162

for.end:                                          ; preds = %for.cond2
  br label %for.inc18, !dbg !11164

for.inc18:                                        ; preds = %for.end
  %25 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11106
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11106
  %call19 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %25, %struct.ata_port* %26, i32 0) #10, !dbg !11106
  store %struct.ata_link* %call19, %struct.ata_link** %link, align 8, !dbg !11106
  br label %for.cond, !dbg !11106, !llvm.loop !11165

for.end20:                                        ; preds = %for.cond
  %27 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11167
  %call21 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %27, i32 0) #10, !dbg !11167
  store %struct.ata_link* %call21, %struct.ata_link** %link, align 8, !dbg !11167
  br label %for.cond22, !dbg !11167

for.cond22:                                       ; preds = %for.inc36, %for.end20
  %28 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11169
  %tobool23 = icmp ne %struct.ata_link* %28, null, !dbg !11167
  br i1 %tobool23, label %for.body24, label %for.end38, !dbg !11167

for.body24:                                       ; preds = %for.cond22
  %29 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11171
  %call25 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %29, i32 0) #10, !dbg !11171
  store %struct.ata_device* %call25, %struct.ata_device** %dev, align 8, !dbg !11171
  br label %for.cond26, !dbg !11171

for.cond26:                                       ; preds = %for.inc33, %for.body24
  %30 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11174
  %tobool27 = icmp ne %struct.ata_device* %30, null, !dbg !11171
  br i1 %tobool27, label %for.body28, label %for.end35, !dbg !11171

for.body28:                                       ; preds = %for.cond26
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11176
  %sdev29 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 4, !dbg !11179
  %32 = load %struct.scsi_device*, %struct.scsi_device** %sdev29, align 8, !dbg !11179
  %tobool30 = icmp ne %struct.scsi_device* %32, null, !dbg !11176
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !11180

if.then31:                                        ; preds = %for.body28
  br label %exit_loop, !dbg !11181

if.end32:                                         ; preds = %for.body28
  br label %for.inc33, !dbg !11182

for.inc33:                                        ; preds = %if.end32
  %33 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11174
  %34 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11174
  %call34 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %33, %struct.ata_link* %34, i32 0) #10, !dbg !11174
  store %struct.ata_device* %call34, %struct.ata_device** %dev, align 8, !dbg !11174
  br label %for.cond26, !dbg !11174, !llvm.loop !11183

for.end35:                                        ; preds = %for.cond26
  br label %for.inc36, !dbg !11185

for.inc36:                                        ; preds = %for.end35
  %35 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11169
  %36 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11169
  %call37 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %35, %struct.ata_port* %36, i32 0) #10, !dbg !11169
  store %struct.ata_link* %call37, %struct.ata_link** %link, align 8, !dbg !11169
  br label %for.cond22, !dbg !11169, !llvm.loop !11186

for.end38:                                        ; preds = %for.cond22
  br label %exit_loop, !dbg !11187

exit_loop:                                        ; preds = %for.end38, %if.then31
  call void @llvm.dbg.label(metadata !11188), !dbg !11189
  %37 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11190
  %tobool39 = icmp ne %struct.ata_link* %37, null, !dbg !11190
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !11192

if.then40:                                        ; preds = %exit_loop
  br label %return, !dbg !11193

if.end41:                                         ; preds = %exit_loop
  %38 = load i32, i32* %sync.addr, align 4, !dbg !11194
  %tobool42 = icmp ne i32 %38, 0, !dbg !11194
  br i1 %tobool42, label %if.then43, label %if.end49, !dbg !11196

if.then43:                                        ; preds = %if.end41
  %39 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11197
  %40 = load %struct.ata_device*, %struct.ata_device** %last_failed_dev, align 8, !dbg !11200
  %cmp = icmp ne %struct.ata_device* %39, %40, !dbg !11201
  br i1 %cmp, label %if.then44, label %if.end45, !dbg !11202

if.then44:                                        ; preds = %if.then43
  call void @msleep(i32 100) #10, !dbg !11203
  %41 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11205
  store %struct.ata_device* %41, %struct.ata_device** %last_failed_dev, align 8, !dbg !11206
  br label %repeat, !dbg !11207

if.end45:                                         ; preds = %if.then43
  %42 = load i32, i32* %tries, align 4, !dbg !11208
  %dec = add i32 %42, -1, !dbg !11208
  store i32 %dec, i32* %tries, align 4, !dbg !11208
  %tobool46 = icmp ne i32 %dec, 0, !dbg !11208
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !11210

if.then47:                                        ; preds = %if.end45
  call void @msleep(i32 100) #10, !dbg !11211
  br label %repeat, !dbg !11213

if.end48:                                         ; preds = %if.end45
  %43 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11214
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !11214
  br label %if.end49, !dbg !11215

if.end49:                                         ; preds = %if.end48, %if.end41
  %44 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !11216
  %45 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11217
  %hotplug_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %45, i32 0, i32 35, !dbg !11218
  %call50 = call i64 @round_jiffies_relative(i64 250) #10, !dbg !11219
  %call51 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %44, %struct.delayed_work* %hotplug_task, i64 %call50) #10, !dbg !11220
  br label %return, !dbg !11221

return:                                           ; preds = %if.end49, %if.then40
  ret void, !dbg !11221
}

; Function Attrs: noredzone
declare dso_local %struct.ata_link* @ata_link_next(%struct.ata_link*, %struct.ata_port*, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.ata_device* @ata_dev_next(%struct.ata_device*, %struct.ata_link*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_host_link(%struct.ata_link* %link) #0 !dbg !11222 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11227, metadata !DIExpression()), !dbg !11228
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11229
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11230
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !11231
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11231
  %link1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 25, !dbg !11232
  %cmp = icmp eq %struct.ata_link* %0, %link1, !dbg !11233
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11234

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11235
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11236
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 0, !dbg !11237
  %5 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !11237
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 26, !dbg !11238
  %6 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !11238
  %cmp3 = icmp eq %struct.ata_link* %3, %6, !dbg !11239
  br label %lor.end, !dbg !11234

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %7, !dbg !11240
}

; Function Attrs: noredzone
declare dso_local %struct.scsi_device* @__scsi_add_device(%struct.Scsi_Host*, i32, i32, i64, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !11241 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11245, metadata !DIExpression()), !dbg !11246
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11247
  %1 = ptrtoint i8* %0 to i64, !dbg !11247
  %2 = inttoptr i64 %1 to i8*, !dbg !11247
  %3 = ptrtoint i8* %2 to i64, !dbg !11247
  %cmp = icmp uge i64 %3, -4095, !dbg !11247
  %lnot = xor i1 %cmp, true, !dbg !11247
  %lnot1 = xor i1 %lnot, true, !dbg !11247
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11247
  %conv = sext i32 %lnot.ext to i64, !dbg !11247
  %tobool = icmp ne i64 %conv, 0, !dbg !11247
  ret i1 %tobool, !dbg !11248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_assign_ofnode(%struct.ata_device* %dev, %struct.ata_port* %ap) #0 !dbg !11249 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %d = alloca %struct.device*, align 8
  %np = alloca %struct.device_node*, align 8
  %child = alloca %struct.device_node*, align 8
  %ret = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11252, metadata !DIExpression()), !dbg !11253
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11254, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !11256, metadata !DIExpression()), !dbg !11257
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11258
  %sdev1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 4, !dbg !11259
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev1, align 8, !dbg !11259
  store %struct.scsi_device* %1, %struct.scsi_device** %sdev, align 8, !dbg !11257
  call void @llvm.dbg.declare(metadata %struct.device** %d, metadata !11260, metadata !DIExpression()), !dbg !11261
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11262
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 31, !dbg !11263
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !11263
  %dev2 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 1, !dbg !11264
  %4 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !11264
  store %struct.device* %4, %struct.device** %d, align 8, !dbg !11261
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !11265, metadata !DIExpression()), !dbg !11266
  %5 = load %struct.device*, %struct.device** %d, align 8, !dbg !11267
  %of_node = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 23, !dbg !11268
  %6 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !11268
  store %struct.device_node* %6, %struct.device_node** %np, align 8, !dbg !11266
  call void @llvm.dbg.declare(metadata %struct.device_node** %child, metadata !11269, metadata !DIExpression()), !dbg !11270
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !11271
  %call = call %struct.device_node* @of_get_next_available_child(%struct.device_node* %7, %struct.device_node* null) #10, !dbg !11271
  store %struct.device_node* %call, %struct.device_node** %child, align 8, !dbg !11271
  br label %for.cond, !dbg !11271

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !11273
  %cmp = icmp ne %struct.device_node* %8, null, !dbg !11273
  br i1 %cmp, label %for.body, label %for.end, !dbg !11271

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11275, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11278, metadata !DIExpression()), !dbg !11279
  %9 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !11280
  %call3 = call i32 @of_property_read_u32(%struct.device_node* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i32* %val) #10, !dbg !11281
  store i32 %call3, i32* %ret, align 4, !dbg !11282
  %10 = load i32, i32* %ret, align 4, !dbg !11283
  %tobool = icmp ne i32 %10, 0, !dbg !11283
  br i1 %tobool, label %if.then, label %if.end, !dbg !11285

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11286

if.end:                                           ; preds = %for.body
  %11 = load i32, i32* %val, align 4, !dbg !11287
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11289
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 1, !dbg !11290
  %13 = load i32, i32* %devno, align 8, !dbg !11290
  %cmp4 = icmp eq i32 %11, %13, !dbg !11291
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !11292

if.then5:                                         ; preds = %if.end
  %14 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !11293
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11295
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %15, i32 0, i32 50, !dbg !11296
  %of_node6 = getelementptr inbounds %struct.device, %struct.device* %sdev_gendev, i32 0, i32 23, !dbg !11297
  store %struct.device_node* %14, %struct.device_node** %of_node6, align 8, !dbg !11298
  br label %for.end, !dbg !11299

if.end7:                                          ; preds = %if.end
  br label %for.inc, !dbg !11300

for.inc:                                          ; preds = %if.end7, %if.then
  %16 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !11273
  %17 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !11273
  %call8 = call %struct.device_node* @of_get_next_available_child(%struct.device_node* %16, %struct.device_node* %17) #10, !dbg !11273
  store %struct.device_node* %call8, %struct.device_node** %child, align 8, !dbg !11273
  br label %for.cond, !dbg !11273, !llvm.loop !11301

for.end:                                          ; preds = %if.then5, %for.cond
  ret void, !dbg !11303
}

; Function Attrs: noredzone
declare dso_local void @scsi_device_put(%struct.scsi_device*) #2

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noredzone
declare dso_local void @ata_port_printk(%struct.ata_port*, i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !11304 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !11308, metadata !DIExpression()), !dbg !11309
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !11310, metadata !DIExpression()), !dbg !11311
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !11312, metadata !DIExpression()), !dbg !11313
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !11314
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !11315
  %2 = load i64, i64* %delay.addr, align 8, !dbg !11316
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #10, !dbg !11317
  ret i1 %call, !dbg !11318
}

; Function Attrs: noredzone
declare dso_local i64 @round_jiffies_relative(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_scsi_offline_dev(%struct.ata_device* %dev) #0 !dbg !11319 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11322, metadata !DIExpression()), !dbg !11323
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11324
  %sdev = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 4, !dbg !11326
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11326
  %tobool = icmp ne %struct.scsi_device* %1, null, !dbg !11324
  br i1 %tobool, label %if.then, label %if.end, !dbg !11327

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11328
  %sdev1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 4, !dbg !11330
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev1, align 8, !dbg !11330
  %call = call i32 @scsi_device_set_state(%struct.scsi_device* %3, i32 6) #10, !dbg !11331
  store i32 1, i32* %retval, align 4, !dbg !11332
  br label %return, !dbg !11332

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11333
  br label %return, !dbg !11333

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !11334
  ret i32 %4, !dbg !11334
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_device_set_state(%struct.scsi_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_media_change_notify(%struct.ata_device* %dev) #0 !dbg !11335 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !11336, metadata !DIExpression()), !dbg !11337
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11338
  %sdev = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 4, !dbg !11340
  %1 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11340
  %tobool = icmp ne %struct.scsi_device* %1, null, !dbg !11338
  br i1 %tobool, label %if.then, label %if.end, !dbg !11341

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !11342
  %sdev1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 4, !dbg !11343
  %3 = load %struct.scsi_device*, %struct.scsi_device** %sdev1, align 8, !dbg !11343
  call void @sdev_evt_send_simple(%struct.scsi_device* %3, i32 1, i32 2592) #10, !dbg !11344
  br label %if.end, !dbg !11344

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11345
}

; Function Attrs: noredzone
declare dso_local void @sdev_evt_send_simple(%struct.scsi_device*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_hotplug(%struct.work_struct* %work) #0 !dbg !11346 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %i = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11347, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11349, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11351, metadata !DIExpression()), !dbg !11353
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11353
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !11353
  store i8* %1, i8** %__mptr, align 8, !dbg !11353
  br label %do.body, !dbg !11353

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11354

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11353
  %add.ptr = getelementptr i8, i8* %2, i64 -14296, !dbg !11353
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !11353
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !11354
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !11353
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !11350
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11356, metadata !DIExpression()), !dbg !11357
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11358
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 4, !dbg !11360
  %6 = load i32, i32* %pflags, align 32, !dbg !11360
  %and = and i32 %6, 512, !dbg !11361
  %tobool = icmp ne i32 %and, 0, !dbg !11361
  br i1 %tobool, label %if.then, label %if.end, !dbg !11362

if.then:                                          ; preds = %do.end
  br label %return, !dbg !11363

if.end:                                           ; preds = %do.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11365
  %scsi_scan_mutex = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 34, !dbg !11366
  call void @mutex_lock(%struct.mutex* %scsi_scan_mutex) #10, !dbg !11367
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11368
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 25, !dbg !11369
  call void @ata_scsi_handle_link_detach(%struct.ata_link* %link) #10, !dbg !11370
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11371
  %pmp_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 28, !dbg !11373
  %10 = load %struct.ata_link*, %struct.ata_link** %pmp_link, align 16, !dbg !11373
  %tobool1 = icmp ne %struct.ata_link* %10, null, !dbg !11371
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !11374

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !11375
  br label %for.cond, !dbg !11377

for.cond:                                         ; preds = %for.inc, %if.then2
  %11 = load i32, i32* %i, align 4, !dbg !11378
  %cmp = icmp slt i32 %11, 15, !dbg !11380
  br i1 %cmp, label %for.body, label %for.end, !dbg !11381

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11382
  %pmp_link3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 28, !dbg !11383
  %13 = load %struct.ata_link*, %struct.ata_link** %pmp_link3, align 16, !dbg !11383
  %14 = load i32, i32* %i, align 4, !dbg !11384
  %idxprom = sext i32 %14 to i64, !dbg !11382
  %arrayidx = getelementptr %struct.ata_link, %struct.ata_link* %13, i64 %idxprom, !dbg !11382
  call void @ata_scsi_handle_link_detach(%struct.ata_link* %arrayidx) #10, !dbg !11385
  br label %for.inc, !dbg !11385

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !11386
  %inc = add i32 %15, 1, !dbg !11386
  store i32 %inc, i32* %i, align 4, !dbg !11386
  br label %for.cond, !dbg !11387, !llvm.loop !11388

for.end:                                          ; preds = %for.cond
  br label %if.end4, !dbg !11389

if.end4:                                          ; preds = %for.end, %if.end
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11390
  call void @ata_scsi_scan_host(%struct.ata_port* %16, i32 0) #10, !dbg !11391
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11392
  %scsi_scan_mutex5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 34, !dbg !11393
  call void @mutex_unlock(%struct.mutex* %scsi_scan_mutex5) #10, !dbg !11394
  br label %return, !dbg !11395

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !11395
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_handle_link_detach(%struct.ata_link* %link) #0 !dbg !11396 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !7129, metadata !DIExpression()), !dbg !11399
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !11404
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !11405
  %link.addr = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11414, metadata !DIExpression()), !dbg !11415
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11416
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !11417
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !11417
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !11415
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11418, metadata !DIExpression()), !dbg !11419
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11420
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %2, i32 2) #10, !dbg !11420
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !11420
  br label %for.cond, !dbg !11420

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11421
  %tobool = icmp ne %struct.ata_device* %3, null, !dbg !11420
  br i1 %tobool, label %for.body, label %for.end, !dbg !11420

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11422, metadata !DIExpression()), !dbg !11423
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11424
  %flags2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 3, !dbg !11426
  %5 = load i64, i64* %flags2, align 16, !dbg !11426
  %and = and i64 %5, 33554432, !dbg !11427
  %tobool3 = icmp ne i64 %and, 0, !dbg !11427
  br i1 %tobool3, label %if.end, label %if.then, !dbg !11428

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11429

if.end:                                           ; preds = %for.body
  br label %do.body, !dbg !11430

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !11431

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11432, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11435, metadata !DIExpression()), !dbg !11434
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11434
  %conv = zext i1 %cmp to i32, !dbg !11434
  store i32 1, i32* %tmp, align 4, !dbg !11434
  %6 = load i32, i32* %tmp, align 4, !dbg !11434
  br label %do.body5, !dbg !11436

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11437

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11438

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !11440, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11444, metadata !DIExpression()), !dbg !11443
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !11443
  %conv11 = zext i1 %cmp10 to i32, !dbg !11443
  store i32 1, i32* %tmp12, align 4, !dbg !11443
  %7 = load i32, i32* %tmp12, align 4, !dbg !11443
  %call13 = call i64 @arch_local_irq_save() #10, !dbg !11445
  store i64 %call13, i64* %flags, align 8, !dbg !11445
  br label %do.end, !dbg !11445

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !11438

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !11437

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11446, !srcloc !11447
  br label %do.body16, !dbg !11446

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11448
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !11448
  %9 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !11448
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11449
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !11450
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !11450
  br label %do.end18, !dbg !11448

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11446

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11437

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11436

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11431

do.end22:                                         ; preds = %do.end21
  %12 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11451
  %flags23 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 3, !dbg !11452
  %13 = load i64, i64* %flags23, align 16, !dbg !11453
  %and24 = and i64 %13, -33554433, !dbg !11453
  store i64 %and24, i64* %flags23, align 16, !dbg !11453
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11454
  %lock25 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 2, !dbg !11455
  %15 = load %struct.spinlock*, %struct.spinlock** %lock25, align 16, !dbg !11455
  %16 = load i64, i64* %flags, align 8, !dbg !11456
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !11457
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !11457
  store i32 1, i32* %tmp.i, align 4, !dbg !11457
  %17 = load i32, i32* %tmp.i, align 4, !dbg !11457
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !11458
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !11458
  store i32 1, i32* %tmp8.i, align 4, !dbg !11458
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !11458
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !11459
  call void @arch_local_irq_restore(i64 %19) #11, !dbg !11459
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11460, !srcloc !7307
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !11461
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !11461
  %rlock.i31 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !11461
  %22 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11462
  %call26 = call zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %22) #10, !dbg !11464
  br i1 %call26, label %if.then27, label %if.end28, !dbg !11465

if.then27:                                        ; preds = %do.end22
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11466
  call void @zpodd_exit(%struct.ata_device* %23) #10, !dbg !11467
  br label %if.end28, !dbg !11467

if.end28:                                         ; preds = %if.then27, %do.end22
  %24 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11468
  call void @ata_scsi_remove_dev(%struct.ata_device* %24) #10, !dbg !11469
  br label %for.inc, !dbg !11470

for.inc:                                          ; preds = %if.end28, %if.then
  %25 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11421
  %26 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11421
  %call29 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %25, %struct.ata_link* %26, i32 2) #10, !dbg !11421
  store %struct.ata_device* %call29, %struct.ata_device** %dev, align 8, !dbg !11421
  br label %for.cond, !dbg !11421, !llvm.loop !11471

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11473
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_scsi_user_scan(%struct.Scsi_Host* %shost, i32 %channel, i32 %id, i64 %lun) #0 !dbg !11474 {
entry:
  %lock.addr.i68 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i68, metadata !7129, metadata !DIExpression()), !dbg !11477
  %flags.addr.i69 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i69, metadata !7135, metadata !DIExpression()), !dbg !11481
  %tmp.i70 = alloca i32, align 4
  %tmp8.i71 = alloca i32, align 4
  %lock.addr.i66 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i66, metadata !7129, metadata !DIExpression()), !dbg !11482
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !11484
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !11485
  %retval = alloca i32, align 4
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %channel.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %lun.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %devno = alloca i32, align 4
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  %link = alloca %struct.ata_link*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %ehi48 = alloca %struct.ata_eh_info*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !11492, metadata !DIExpression()), !dbg !11493
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !11494, metadata !DIExpression()), !dbg !11495
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !11496, metadata !DIExpression()), !dbg !11497
  store i64 %lun, i64* %lun.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lun.addr, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11500, metadata !DIExpression()), !dbg !11501
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !11502
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %0) #10, !dbg !11503
  store %struct.ata_port* %call, %struct.ata_port** %ap, align 8, !dbg !11501
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11504, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.declare(metadata i32* %devno, metadata !11506, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11508, metadata !DIExpression()), !dbg !11509
  store i32 0, i32* %rc, align 4, !dbg !11509
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11510
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 1, !dbg !11512
  %2 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !11512
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %2, i32 0, i32 22, !dbg !11513
  %3 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !11513
  %tobool = icmp ne void (%struct.ata_port*)* %3, null, !dbg !11510
  br i1 %tobool, label %if.end, label %if.then, !dbg !11514

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !11515
  br label %return, !dbg !11515

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %lun.addr, align 8, !dbg !11516
  %cmp = icmp ne i64 %4, -1, !dbg !11518
  br i1 %cmp, label %land.lhs.true, label %if.end3, !dbg !11519

land.lhs.true:                                    ; preds = %if.end
  %5 = load i64, i64* %lun.addr, align 8, !dbg !11520
  %tobool1 = icmp ne i64 %5, 0, !dbg !11520
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !11521

if.then2:                                         ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !11522
  br label %return, !dbg !11522

if.end3:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11523
  %call4 = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %6) #10, !dbg !11525
  br i1 %call4, label %if.else, label %if.then5, !dbg !11526

if.then5:                                         ; preds = %if.end3
  %7 = load i32, i32* %channel.addr, align 4, !dbg !11527
  %cmp6 = icmp ne i32 %7, -1, !dbg !11530
  br i1 %cmp6, label %land.lhs.true7, label %if.end10, !dbg !11531

land.lhs.true7:                                   ; preds = %if.then5
  %8 = load i32, i32* %channel.addr, align 4, !dbg !11532
  %tobool8 = icmp ne i32 %8, 0, !dbg !11532
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !11533

if.then9:                                         ; preds = %land.lhs.true7
  store i32 -22, i32* %retval, align 4, !dbg !11534
  br label %return, !dbg !11534

if.end10:                                         ; preds = %land.lhs.true7, %if.then5
  %9 = load i32, i32* %id.addr, align 4, !dbg !11535
  store i32 %9, i32* %devno, align 4, !dbg !11536
  br label %if.end16, !dbg !11537

if.else:                                          ; preds = %if.end3
  %10 = load i32, i32* %id.addr, align 4, !dbg !11538
  %cmp11 = icmp ne i32 %10, -1, !dbg !11541
  br i1 %cmp11, label %land.lhs.true12, label %if.end15, !dbg !11542

land.lhs.true12:                                  ; preds = %if.else
  %11 = load i32, i32* %id.addr, align 4, !dbg !11543
  %tobool13 = icmp ne i32 %11, 0, !dbg !11543
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11544

if.then14:                                        ; preds = %land.lhs.true12
  store i32 -22, i32* %retval, align 4, !dbg !11545
  br label %return, !dbg !11545

if.end15:                                         ; preds = %land.lhs.true12, %if.else
  %12 = load i32, i32* %channel.addr, align 4, !dbg !11546
  store i32 %12, i32* %devno, align 4, !dbg !11547
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end10
  br label %do.body, !dbg !11548

do.body:                                          ; preds = %if.end16
  br label %do.body17, !dbg !11549

do.body17:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11550, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11553, metadata !DIExpression()), !dbg !11552
  %cmp18 = icmp eq i64* %__dummy, %__dummy2, !dbg !11552
  %conv = zext i1 %cmp18 to i32, !dbg !11552
  store i32 1, i32* %tmp, align 4, !dbg !11552
  %13 = load i32, i32* %tmp, align 4, !dbg !11552
  br label %do.body19, !dbg !11554

do.body19:                                        ; preds = %do.body17
  br label %do.body20, !dbg !11555

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !11556

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !11558, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !11562, metadata !DIExpression()), !dbg !11561
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !11561
  %conv25 = zext i1 %cmp24 to i32, !dbg !11561
  store i32 1, i32* %tmp26, align 4, !dbg !11561
  %14 = load i32, i32* %tmp26, align 4, !dbg !11561
  %call27 = call i64 @arch_local_irq_save() #10, !dbg !11563
  store i64 %call27, i64* %flags, align 8, !dbg !11563
  br label %do.end, !dbg !11563

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !11556

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !11555

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11564, !srcloc !11565
  br label %do.body30, !dbg !11564

do.body30:                                        ; preds = %do.body29
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11566
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 2, !dbg !11566
  %16 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !11566
  store %struct.spinlock* %16, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11567
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !11568
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !11568
  br label %do.end32, !dbg !11566

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !11564

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !11555

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !11554

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !11549

do.end36:                                         ; preds = %do.end35
  %19 = load i32, i32* %devno, align 4, !dbg !11569
  %cmp37 = icmp eq i32 %19, -1, !dbg !11571
  br i1 %cmp37, label %if.then39, label %if.else44, !dbg !11572

if.then39:                                        ; preds = %do.end36
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !11573, metadata !DIExpression()), !dbg !11575
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11576
  %call40 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %20, i32 0) #10, !dbg !11576
  store %struct.ata_link* %call40, %struct.ata_link** %link, align 8, !dbg !11576
  br label %for.cond, !dbg !11576

for.cond:                                         ; preds = %for.inc, %if.then39
  %21 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11578
  %tobool41 = icmp ne %struct.ata_link* %21, null, !dbg !11576
  br i1 %tobool41, label %for.body, label %for.end, !dbg !11576

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !11580, metadata !DIExpression()), !dbg !11583
  %22 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11584
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %22, i32 0, i32 11, !dbg !11585
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !11583
  %23 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !11586
  %probe_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %23, i32 0, i32 6, !dbg !11587
  %24 = load i32, i32* %probe_mask, align 8, !dbg !11588
  %or = or i32 %24, 3, !dbg !11588
  store i32 %or, i32* %probe_mask, align 8, !dbg !11588
  %25 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !11589
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %25, i32 0, i32 3, !dbg !11590
  %26 = load i32, i32* %action, align 8, !dbg !11591
  %or42 = or i32 %26, 6, !dbg !11591
  store i32 %or42, i32* %action, align 8, !dbg !11591
  br label %for.inc, !dbg !11592

for.inc:                                          ; preds = %for.body
  %27 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11578
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11578
  %call43 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %27, %struct.ata_port* %28, i32 0) #10, !dbg !11578
  store %struct.ata_link* %call43, %struct.ata_link** %link, align 8, !dbg !11578
  br label %for.cond, !dbg !11578, !llvm.loop !11593

for.end:                                          ; preds = %for.cond
  br label %if.end58, !dbg !11595

if.else44:                                        ; preds = %do.end36
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11596, metadata !DIExpression()), !dbg !11598
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11599
  %30 = load i32, i32* %devno, align 4, !dbg !11600
  %call45 = call %struct.ata_device* @ata_find_dev(%struct.ata_port* %29, i32 %30) #10, !dbg !11601
  store %struct.ata_device* %call45, %struct.ata_device** %dev, align 8, !dbg !11598
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11602
  %tobool46 = icmp ne %struct.ata_device* %31, null, !dbg !11602
  br i1 %tobool46, label %if.then47, label %if.else56, !dbg !11604

if.then47:                                        ; preds = %if.else44
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi48, metadata !11605, metadata !DIExpression()), !dbg !11607
  %32 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11608
  %link49 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %32, i32 0, i32 0, !dbg !11609
  %33 = load %struct.ata_link*, %struct.ata_link** %link49, align 64, !dbg !11609
  %eh_info50 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %33, i32 0, i32 11, !dbg !11610
  store %struct.ata_eh_info* %eh_info50, %struct.ata_eh_info** %ehi48, align 8, !dbg !11607
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11611
  %devno51 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 1, !dbg !11612
  %35 = load i32, i32* %devno51, align 8, !dbg !11612
  %shl = shl i32 1, %35, !dbg !11613
  %36 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi48, align 8, !dbg !11614
  %probe_mask52 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %36, i32 0, i32 6, !dbg !11615
  %37 = load i32, i32* %probe_mask52, align 8, !dbg !11616
  %or53 = or i32 %37, %shl, !dbg !11616
  store i32 %or53, i32* %probe_mask52, align 8, !dbg !11616
  %38 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi48, align 8, !dbg !11617
  %action54 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %38, i32 0, i32 3, !dbg !11618
  %39 = load i32, i32* %action54, align 8, !dbg !11619
  %or55 = or i32 %39, 6, !dbg !11619
  store i32 %or55, i32* %action54, align 8, !dbg !11619
  br label %if.end57, !dbg !11620

if.else56:                                        ; preds = %if.else44
  store i32 -22, i32* %rc, align 4, !dbg !11621
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.then47
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %for.end
  %40 = load i32, i32* %rc, align 4, !dbg !11622
  %cmp59 = icmp eq i32 %40, 0, !dbg !11623
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !11624

if.then61:                                        ; preds = %if.end58
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11625
  call void @ata_port_schedule_eh(%struct.ata_port* %41) #10, !dbg !11626
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11627
  %lock62 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 2, !dbg !11628
  %43 = load %struct.spinlock*, %struct.spinlock** %lock62, align 16, !dbg !11628
  %44 = load i64, i64* %flags, align 8, !dbg !11629
  store %struct.spinlock* %43, %struct.spinlock** %lock.addr.i68, align 8
  store i64 %44, i64* %flags.addr.i69, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !11630
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !11630
  store i32 1, i32* %tmp.i70, align 4, !dbg !11630
  %45 = load i32, i32* %tmp.i70, align 4, !dbg !11630
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !11631
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !11631
  store i32 1, i32* %tmp8.i71, align 4, !dbg !11631
  %46 = load i32, i32* %tmp8.i71, align 4, !dbg !11631
  %47 = load i64, i64* %flags.addr.i69, align 8, !dbg !11632
  call void @arch_local_irq_restore(i64 %47) #11, !dbg !11632
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11633, !srcloc !7307
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i68, align 8, !dbg !11634
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !11634
  %rlock.i72 = bitcast %union.anon.1* %49 to %struct.raw_spinlock*, !dbg !11634
  %50 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11635
  call void @ata_port_wait_eh(%struct.ata_port* %50) #10, !dbg !11636
  br label %if.end65, !dbg !11637

if.else63:                                        ; preds = %if.end58
  %51 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11638
  %lock64 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %51, i32 0, i32 2, !dbg !11639
  %52 = load %struct.spinlock*, %struct.spinlock** %lock64, align 16, !dbg !11639
  %53 = load i64, i64* %flags, align 8, !dbg !11640
  store %struct.spinlock* %52, %struct.spinlock** %lock.addr.i66, align 8
  store i64 %53, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !11641
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !11641
  store i32 1, i32* %tmp.i, align 4, !dbg !11641
  %54 = load i32, i32* %tmp.i, align 4, !dbg !11641
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !11642
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !11642
  store i32 1, i32* %tmp8.i, align 4, !dbg !11642
  %55 = load i32, i32* %tmp8.i, align 4, !dbg !11642
  %56 = load i64, i64* %flags.addr.i, align 8, !dbg !11643
  call void @arch_local_irq_restore(i64 %56) #11, !dbg !11643
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11644, !srcloc !7307
  %57 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i66, align 8, !dbg !11645
  %58 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %57, i32 0, i32 0, !dbg !11645
  %rlock.i67 = bitcast %union.anon.1* %58 to %struct.raw_spinlock*, !dbg !11645
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  %59 = load i32, i32* %rc, align 4, !dbg !11646
  store i32 %59, i32* %retval, align 4, !dbg !11647
  br label %return, !dbg !11647

return:                                           ; preds = %if.end65, %if.then14, %if.then9, %if.then2, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !11648
  ret i32 %60, !dbg !11648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sata_pmp_attached(%struct.ata_port* %ap) #0 !dbg !11649 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11650, metadata !DIExpression()), !dbg !11651
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11652
  %nr_pmp_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 27, !dbg !11653
  %1 = load i32, i32* %nr_pmp_links, align 8, !dbg !11653
  %cmp = icmp ne i32 %1, 0, !dbg !11654
  ret i1 %cmp, !dbg !11655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_device* @ata_find_dev(%struct.ata_port* %ap, i32 %devno) #0 !dbg !11656 {
entry:
  %retval = alloca %struct.ata_device*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %devno.addr = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  store i32 %devno, i32* %devno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devno.addr, metadata !11661, metadata !DIExpression()), !dbg !11662
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11663
  %call = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %0) #10, !dbg !11665
  br i1 %call, label %if.else, label %if.then, !dbg !11666

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %devno.addr, align 4, !dbg !11667
  %cmp = icmp sge i32 %1, 0, !dbg !11667
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11667

land.rhs:                                         ; preds = %if.then
  %2 = load i32, i32* %devno.addr, align 4, !dbg !11667
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11667
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 25, !dbg !11667
  %call1 = call i32 @ata_link_max_devices(%struct.ata_link* %link) #10, !dbg !11667
  %cmp2 = icmp slt i32 %2, %call1, !dbg !11667
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %4 = phi i1 [ false, %if.then ], [ %cmp2, %land.rhs ], !dbg !11670
  %lnot = xor i1 %4, true, !dbg !11667
  %lnot3 = xor i1 %lnot, true, !dbg !11667
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11667
  %conv = sext i32 %lnot.ext to i64, !dbg !11667
  %tobool = icmp ne i64 %conv, 0, !dbg !11667
  br i1 %tobool, label %if.then4, label %if.end, !dbg !11671

if.then4:                                         ; preds = %land.end
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11672
  %link5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 25, !dbg !11673
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link5, i32 0, i32 14, !dbg !11674
  %6 = load i32, i32* %devno.addr, align 4, !dbg !11675
  %idxprom = sext i32 %6 to i64, !dbg !11672
  %arrayidx = getelementptr [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 %idxprom, !dbg !11672
  store %struct.ata_device* %arrayidx, %struct.ata_device** %retval, align 8, !dbg !11676
  br label %return, !dbg !11676

if.end:                                           ; preds = %land.end
  br label %if.end24, !dbg !11677

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %devno.addr, align 4, !dbg !11678
  %cmp6 = icmp sge i32 %7, 0, !dbg !11678
  br i1 %cmp6, label %land.rhs8, label %land.end11, !dbg !11678

land.rhs8:                                        ; preds = %if.else
  %8 = load i32, i32* %devno.addr, align 4, !dbg !11678
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11678
  %nr_pmp_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 27, !dbg !11678
  %10 = load i32, i32* %nr_pmp_links, align 8, !dbg !11678
  %cmp9 = icmp slt i32 %8, %10, !dbg !11678
  br label %land.end11

land.end11:                                       ; preds = %land.rhs8, %if.else
  %11 = phi i1 [ false, %if.else ], [ %cmp9, %land.rhs8 ], !dbg !11681
  %lnot12 = xor i1 %11, true, !dbg !11678
  %lnot14 = xor i1 %lnot12, true, !dbg !11678
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !11678
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !11678
  %tobool17 = icmp ne i64 %conv16, 0, !dbg !11678
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !11682

if.then18:                                        ; preds = %land.end11
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11683
  %pmp_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 28, !dbg !11684
  %13 = load %struct.ata_link*, %struct.ata_link** %pmp_link, align 16, !dbg !11684
  %14 = load i32, i32* %devno.addr, align 4, !dbg !11685
  %idxprom19 = sext i32 %14 to i64, !dbg !11683
  %arrayidx20 = getelementptr %struct.ata_link, %struct.ata_link* %13, i64 %idxprom19, !dbg !11683
  %device21 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %arrayidx20, i32 0, i32 14, !dbg !11686
  %arrayidx22 = getelementptr [2 x %struct.ata_device], [2 x %struct.ata_device]* %device21, i64 0, i64 0, !dbg !11683
  store %struct.ata_device* %arrayidx22, %struct.ata_device** %retval, align 8, !dbg !11687
  br label %return, !dbg !11687

if.end23:                                         ; preds = %land.end11
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  store %struct.ata_device* null, %struct.ata_device** %retval, align 8, !dbg !11688
  br label %return, !dbg !11688

return:                                           ; preds = %if.end24, %if.then18, %if.then4
  %15 = load %struct.ata_device*, %struct.ata_device** %retval, align 8, !dbg !11689
  ret %struct.ata_device* %15, !dbg !11689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_dev_rescan(%struct.work_struct* %work) #0 !dbg !11690 {
entry:
  %lock.addr.i74 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i74, metadata !7137, metadata !DIExpression()), !dbg !11691
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !7129, metadata !DIExpression()), !dbg !11704
  %flags.addr.i70 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i70, metadata !7135, metadata !DIExpression()), !dbg !11706
  %tmp.i71 = alloca i32, align 4
  %tmp8.i72 = alloca i32, align 4
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !7129, metadata !DIExpression()), !dbg !11707
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !11709
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !11710
  %work.addr = alloca %struct.work_struct*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %sdev = alloca %struct.scsi_device*, align 8
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11719, metadata !DIExpression()), !dbg !11720
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11721, metadata !DIExpression()), !dbg !11723
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11723
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !11723
  store i8* %1, i8** %__mptr, align 8, !dbg !11723
  br label %do.body, !dbg !11723

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11724

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11723
  %add.ptr = getelementptr i8, i8* %2, i64 -14384, !dbg !11723
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !11723
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !11724
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !11723
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !11720
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !11726, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11728, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11730, metadata !DIExpression()), !dbg !11731
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11732
  %scsi_scan_mutex = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 34, !dbg !11733
  call void @mutex_lock(%struct.mutex* %scsi_scan_mutex) #10, !dbg !11734
  br label %do.body1, !dbg !11735

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !11736

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11737, metadata !DIExpression()), !dbg !11739
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11740, metadata !DIExpression()), !dbg !11739
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11739
  %conv = zext i1 %cmp to i32, !dbg !11739
  store i32 1, i32* %tmp3, align 4, !dbg !11739
  %6 = load i32, i32* %tmp3, align 4, !dbg !11739
  br label %do.body4, !dbg !11741

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !11742

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11743

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !11745, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !11749, metadata !DIExpression()), !dbg !11748
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !11748
  %conv10 = zext i1 %cmp9 to i32, !dbg !11748
  store i32 1, i32* %tmp11, align 4, !dbg !11748
  %7 = load i32, i32* %tmp11, align 4, !dbg !11748
  %call = call i64 @arch_local_irq_save() #10, !dbg !11750
  store i64 %call, i64* %flags, align 8, !dbg !11750
  br label %do.end12, !dbg !11750

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !11743

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !11742

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11751, !srcloc !11752
  br label %do.body15, !dbg !11751

do.body15:                                        ; preds = %do.body14
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11753
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !11753
  %9 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !11753
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11754
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !11755
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !11755
  br label %do.end17, !dbg !11753

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !11751

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11742

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11741

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11736

do.end21:                                         ; preds = %do.end20
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11756
  %call22 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %12, i32 0) #10, !dbg !11756
  store %struct.ata_link* %call22, %struct.ata_link** %link, align 8, !dbg !11756
  br label %for.cond, !dbg !11756

for.cond:                                         ; preds = %for.inc62, %do.end21
  %13 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11757
  %tobool = icmp ne %struct.ata_link* %13, null, !dbg !11756
  br i1 %tobool, label %for.body, label %for.end64, !dbg !11756

for.body:                                         ; preds = %for.cond
  %14 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11758
  %call23 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %14, i32 0) #10, !dbg !11758
  store %struct.ata_device* %call23, %struct.ata_device** %dev, align 8, !dbg !11758
  br label %for.cond24, !dbg !11758

for.cond24:                                       ; preds = %for.inc, %for.body
  %15 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11759
  %tobool25 = icmp ne %struct.ata_device* %15, null, !dbg !11758
  br i1 %tobool25, label %for.body26, label %for.end, !dbg !11758

for.body26:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !11760, metadata !DIExpression()), !dbg !11761
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11762
  %sdev27 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 4, !dbg !11763
  %17 = load %struct.scsi_device*, %struct.scsi_device** %sdev27, align 8, !dbg !11763
  store %struct.scsi_device* %17, %struct.scsi_device** %sdev, align 8, !dbg !11761
  %18 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11764
  %tobool28 = icmp ne %struct.scsi_device* %18, null, !dbg !11764
  br i1 %tobool28, label %if.end, label %if.then, !dbg !11766

if.then:                                          ; preds = %for.body26
  br label %for.inc, !dbg !11767

if.end:                                           ; preds = %for.body26
  %19 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11768
  %call29 = call i32 @scsi_device_get(%struct.scsi_device* %19) #10, !dbg !11770
  %tobool30 = icmp ne i32 %call29, 0, !dbg !11770
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11771

if.then31:                                        ; preds = %if.end
  br label %for.inc, !dbg !11772

if.end32:                                         ; preds = %if.end
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11773
  %lock33 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 2, !dbg !11774
  %21 = load %struct.spinlock*, %struct.spinlock** %lock33, align 16, !dbg !11774
  %22 = load i64, i64* %flags, align 8, !dbg !11775
  store %struct.spinlock* %21, %struct.spinlock** %lock.addr.i69, align 8
  store i64 %22, i64* %flags.addr.i70, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !11776
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !11776
  store i32 1, i32* %tmp.i71, align 4, !dbg !11776
  %23 = load i32, i32* %tmp.i71, align 4, !dbg !11776
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !11777
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !11777
  store i32 1, i32* %tmp8.i72, align 4, !dbg !11777
  %24 = load i32, i32* %tmp8.i72, align 4, !dbg !11777
  %25 = load i64, i64* %flags.addr.i70, align 8, !dbg !11778
  call void @arch_local_irq_restore(i64 %25) #11, !dbg !11778
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11779, !srcloc !7307
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !11780
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !11780
  %rlock.i73 = bitcast %union.anon.1* %27 to %struct.raw_spinlock*, !dbg !11780
  %28 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11781
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %28, i32 0, i32 50, !dbg !11782
  call void @scsi_rescan_device(%struct.device* %sdev_gendev) #10, !dbg !11783
  %29 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !11784
  call void @scsi_device_put(%struct.scsi_device* %29) #10, !dbg !11785
  br label %do.body34, !dbg !11786

do.body34:                                        ; preds = %if.end32
  br label %do.body35, !dbg !11787

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !11788, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !11791, metadata !DIExpression()), !dbg !11790
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !11790
  %conv39 = zext i1 %cmp38 to i32, !dbg !11790
  store i32 1, i32* %tmp40, align 4, !dbg !11790
  %30 = load i32, i32* %tmp40, align 4, !dbg !11790
  br label %do.body41, !dbg !11792

do.body41:                                        ; preds = %do.body35
  br label %do.body42, !dbg !11793

do.body42:                                        ; preds = %do.body41
  br label %do.body43, !dbg !11794

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !11796, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !11800, metadata !DIExpression()), !dbg !11799
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !11799
  %conv47 = zext i1 %cmp46 to i32, !dbg !11799
  store i32 1, i32* %tmp48, align 4, !dbg !11799
  %31 = load i32, i32* %tmp48, align 4, !dbg !11799
  %call49 = call i64 @arch_local_irq_save() #10, !dbg !11801
  store i64 %call49, i64* %flags, align 8, !dbg !11801
  br label %do.end50, !dbg !11801

do.end50:                                         ; preds = %do.body43
  br label %do.end51, !dbg !11794

do.end51:                                         ; preds = %do.end50
  br label %do.body52, !dbg !11793

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11802, !srcloc !11803
  br label %do.body53, !dbg !11802

do.body53:                                        ; preds = %do.body52
  %32 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11804
  %lock54 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 2, !dbg !11804
  %33 = load %struct.spinlock*, %struct.spinlock** %lock54, align 16, !dbg !11804
  store %struct.spinlock* %33, %struct.spinlock** %lock.addr.i74, align 8
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i74, align 8, !dbg !11805
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !11806
  %rlock.i75 = bitcast %union.anon.1* %35 to %struct.raw_spinlock*, !dbg !11806
  br label %do.end56, !dbg !11804

do.end56:                                         ; preds = %do.body53
  br label %do.end57, !dbg !11802

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !11793

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !11792

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !11787

do.end60:                                         ; preds = %do.end59
  br label %for.inc, !dbg !11807

for.inc:                                          ; preds = %do.end60, %if.then31, %if.then
  %36 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11759
  %37 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11759
  %call61 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %36, %struct.ata_link* %37, i32 0) #10, !dbg !11759
  store %struct.ata_device* %call61, %struct.ata_device** %dev, align 8, !dbg !11759
  br label %for.cond24, !dbg !11759, !llvm.loop !11808

for.end:                                          ; preds = %for.cond24
  br label %for.inc62, !dbg !11810

for.inc62:                                        ; preds = %for.end
  %38 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11757
  %39 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11757
  %call63 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %38, %struct.ata_port* %39, i32 0) #10, !dbg !11757
  store %struct.ata_link* %call63, %struct.ata_link** %link, align 8, !dbg !11757
  br label %for.cond, !dbg !11757, !llvm.loop !11811

for.end64:                                        ; preds = %for.cond
  %40 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11813
  %lock65 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %40, i32 0, i32 2, !dbg !11814
  %41 = load %struct.spinlock*, %struct.spinlock** %lock65, align 16, !dbg !11814
  %42 = load i64, i64* %flags, align 8, !dbg !11815
  store %struct.spinlock* %41, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !11816
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !11816
  store i32 1, i32* %tmp.i, align 4, !dbg !11816
  %43 = load i32, i32* %tmp.i, align 4, !dbg !11816
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !11817
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !11817
  store i32 1, i32* %tmp8.i, align 4, !dbg !11817
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !11817
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !11818
  call void @arch_local_irq_restore(i64 %45) #11, !dbg !11818
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11819, !srcloc !7307
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !11820
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !11820
  %rlock.i68 = bitcast %union.anon.1* %47 to %struct.raw_spinlock*, !dbg !11820
  %48 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11821
  %scsi_scan_mutex66 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %48, i32 0, i32 34, !dbg !11822
  call void @mutex_unlock(%struct.mutex* %scsi_scan_mutex66) #10, !dbg !11823
  ret void, !dbg !11824
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_device_get(%struct.scsi_device*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_rescan_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !11825 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11826, metadata !DIExpression()), !dbg !11828
  %0 = load i64, i64* %__edi, align 8, !dbg !11828
  store i64 %0, i64* %__edi, align 8, !dbg !11828
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11829, metadata !DIExpression()), !dbg !11828
  %1 = load i64, i64* %__esi, align 8, !dbg !11828
  store i64 %1, i64* %__esi, align 8, !dbg !11828
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11830, metadata !DIExpression()), !dbg !11828
  %2 = load i64, i64* %__edx, align 8, !dbg !11828
  store i64 %2, i64* %__edx, align 8, !dbg !11828
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11831, metadata !DIExpression()), !dbg !11828
  %3 = load i64, i64* %__ecx, align 8, !dbg !11828
  store i64 %3, i64* %__ecx, align 8, !dbg !11828
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11832, metadata !DIExpression()), !dbg !11828
  %4 = load i64, i64* %__eax, align 8, !dbg !11828
  store i64 %4, i64* %__eax, align 8, !dbg !11828
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !11828
  %6 = call i64 @llvm.read_register.i64(metadata !7007), !dbg !11828
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #5, !dbg !11828, !srcloc !11833
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11828
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11828
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11828
  call void @llvm.write_register.i64(metadata !7007, i64 %asmresult1), !dbg !11828
  ret void, !dbg !11834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !11835 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11836, metadata !DIExpression()), !dbg !11838
  %0 = load i64, i64* %__edi, align 8, !dbg !11838
  store i64 %0, i64* %__edi, align 8, !dbg !11838
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11839, metadata !DIExpression()), !dbg !11838
  %1 = load i64, i64* %__esi, align 8, !dbg !11838
  store i64 %1, i64* %__esi, align 8, !dbg !11838
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11840, metadata !DIExpression()), !dbg !11838
  %2 = load i64, i64* %__edx, align 8, !dbg !11838
  store i64 %2, i64* %__edx, align 8, !dbg !11838
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11841, metadata !DIExpression()), !dbg !11838
  %3 = load i64, i64* %__ecx, align 8, !dbg !11838
  store i64 %3, i64* %__ecx, align 8, !dbg !11838
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11842, metadata !DIExpression()), !dbg !11838
  %4 = load i64, i64* %__eax, align 8, !dbg !11838
  store i64 %4, i64* %__eax, align 8, !dbg !11838
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !11838
  %6 = call i64 @llvm.read_register.i64(metadata !7007), !dbg !11838
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #5, !dbg !11838, !srcloc !11843
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11838
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11838
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11838
  call void @llvm.write_register.i64(metadata !7007, i64 %asmresult1), !dbg !11838
  ret void, !dbg !11844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kstrtol(i8* %s, i32 %base, i64* %res) #0 !dbg !11845 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %res.addr = alloca i64*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !11849, metadata !DIExpression()), !dbg !11850
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !11851, metadata !DIExpression()), !dbg !11852
  store i64* %res, i64** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %res.addr, metadata !11853, metadata !DIExpression()), !dbg !11854
  %0 = load i8*, i8** %s.addr, align 8, !dbg !11855
  %1 = load i32, i32* %base.addr, align 4, !dbg !11857
  %2 = load i64*, i64** %res.addr, align 8, !dbg !11858
  %call = call i32 @kstrtoll(i8* %0, i32 %1, i64* %2) #10, !dbg !11859
  ret i32 %call, !dbg !11860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_deadline(i64 %from_jiffies, i64 %timeout_msecs) #0 !dbg !11861 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !11864, metadata !DIExpression()), !dbg !11869
  %from_jiffies.addr = alloca i64, align 8
  %timeout_msecs.addr = alloca i64, align 8
  store i64 %from_jiffies, i64* %from_jiffies.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from_jiffies.addr, metadata !11871, metadata !DIExpression()), !dbg !11872
  store i64 %timeout_msecs, i64* %timeout_msecs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout_msecs.addr, metadata !11873, metadata !DIExpression()), !dbg !11874
  %0 = load i64, i64* %from_jiffies.addr, align 8, !dbg !11875
  %1 = load i64, i64* %timeout_msecs.addr, align 8, !dbg !11876
  %conv = trunc i64 %1 to i32, !dbg !11876
  store i32 %conv, i32* %m.addr.i, align 4
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !11877
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #5, !dbg !11879
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !11880

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !11881
  %cmp.i = icmp slt i32 %4, 0, !dbg !11884
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11885

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !11886
  br label %msecs_to_jiffies.exit, !dbg !11886

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !11887
  %call.i = call i64 @_msecs_to_jiffies(i32 %5) #11, !dbg !11888
  store i64 %call.i, i64* %retval.i, align 8, !dbg !11889
  br label %msecs_to_jiffies.exit, !dbg !11889

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !11890
  %call2.i = call i64 @__msecs_to_jiffies(i32 %6) #11, !dbg !11892
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !11893
  br label %msecs_to_jiffies.exit, !dbg !11893

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !11894
  %add = add i64 %0, %7, !dbg !11895
  ret i64 %add, !dbg !11896
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local i32 @kstrtoll(i8*, i32, i64*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !11897 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !11898, metadata !DIExpression()), !dbg !11899
  %0 = load i32, i32* %m.addr, align 4, !dbg !11900
  %conv = zext i32 %0 to i64, !dbg !11900
  %add = add i64 %conv, 4, !dbg !11901
  %sub = sub i64 %add, 1, !dbg !11902
  %div = sdiv i64 %sub, 4, !dbg !11903
  ret i64 %div, !dbg !11904
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !11905 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !11906, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11909, metadata !DIExpression()), !dbg !11908
  %0 = load i64, i64* %__edi, align 8, !dbg !11908
  store i64 %0, i64* %__edi, align 8, !dbg !11908
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11910, metadata !DIExpression()), !dbg !11908
  %1 = load i64, i64* %__esi, align 8, !dbg !11908
  store i64 %1, i64* %__esi, align 8, !dbg !11908
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11911, metadata !DIExpression()), !dbg !11908
  %2 = load i64, i64* %__edx, align 8, !dbg !11908
  store i64 %2, i64* %__edx, align 8, !dbg !11908
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11912, metadata !DIExpression()), !dbg !11908
  %3 = load i64, i64* %__ecx, align 8, !dbg !11908
  store i64 %3, i64* %__ecx, align 8, !dbg !11908
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11913, metadata !DIExpression()), !dbg !11908
  %4 = load i64, i64* %__eax, align 8, !dbg !11908
  store i64 %4, i64* %__eax, align 8, !dbg !11908
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !11908
  %6 = call i64 @llvm.read_register.i64(metadata !7007), !dbg !11914
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #5, !dbg !11914, !srcloc !11917
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11914
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11914
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11914
  call void @llvm.write_register.i64(metadata !7007, i64 %asmresult1), !dbg !11914
  %8 = load i64, i64* %__eax, align 8, !dbg !11914
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !11918, metadata !DIExpression()), !dbg !11920
  store i64 -1, i64* %__mask, align 8, !dbg !11920
  %9 = load i64, i64* %__mask, align 8, !dbg !11920
  store i64 %9, i64* %tmp, align 8, !dbg !11920
  %10 = load i64, i64* %tmp, align 8, !dbg !11920
  %and = and i64 %8, %10, !dbg !11914
  store i64 %and, i64* %__ret, align 8, !dbg !11914
  %11 = load i64, i64* %__ret, align 8, !dbg !11908
  store i64 %11, i64* %tmp2, align 8, !dbg !11921
  %12 = load i64, i64* %tmp2, align 8, !dbg !11908
  ret i64 %12, !dbg !11922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !11923 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11926, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11928, metadata !DIExpression()), !dbg !11930
  %0 = load i64, i64* %__edi, align 8, !dbg !11930
  store i64 %0, i64* %__edi, align 8, !dbg !11930
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11931, metadata !DIExpression()), !dbg !11930
  %1 = load i64, i64* %__esi, align 8, !dbg !11930
  store i64 %1, i64* %__esi, align 8, !dbg !11930
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11932, metadata !DIExpression()), !dbg !11930
  %2 = load i64, i64* %__edx, align 8, !dbg !11930
  store i64 %2, i64* %__edx, align 8, !dbg !11930
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11933, metadata !DIExpression()), !dbg !11930
  %3 = load i64, i64* %__ecx, align 8, !dbg !11930
  store i64 %3, i64* %__ecx, align 8, !dbg !11930
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11934, metadata !DIExpression()), !dbg !11930
  %4 = load i64, i64* %__eax, align 8, !dbg !11930
  store i64 %4, i64* %__eax, align 8, !dbg !11930
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11930
  %6 = call i64 @llvm.read_register.i64(metadata !7007), !dbg !11930
  %7 = load i64, i64* %f.addr, align 8, !dbg !11930
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #5, !dbg !11930, !srcloc !11935
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11930
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11930
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11930
  call void @llvm.write_register.i64(metadata !7007, i64 %asmresult1), !dbg !11930
  ret void, !dbg !11936
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !11937 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11944, metadata !DIExpression()), !dbg !11946
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11946
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !11947
  %tobool = icmp ne i32 %0, 0, !dbg !11947
  %lnot = xor i1 %tobool, true, !dbg !11947
  %lnot1 = xor i1 %lnot, true, !dbg !11947
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11947
  %conv = sext i32 %lnot.ext to i64, !dbg !11947
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11947
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11946

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11947

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !11949

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !11951

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !11949
  %2 = load i64, i64* %count.addr, align 8, !dbg !11949
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i32 %1, i64 %2) #10, !dbg !11949
  br label %do.body4, !dbg !11949

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !11953

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !11955

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11953

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 134, i32 2313, i64 12) #5, !dbg !11957, !srcloc !11959
  br label %do.end8, !dbg !11957

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #5, !dbg !11960, !srcloc !11962
  br label %do.body9, !dbg !11953

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !11963

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !11953

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !11949

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !11965

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !11949

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !11949

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11946
  %tobool15 = icmp ne i32 %3, 0, !dbg !11946
  %lnot16 = xor i1 %tobool15, true, !dbg !11946
  %lnot18 = xor i1 %lnot16, true, !dbg !11946
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11946
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11946
  store i64 %conv20, i64* %tmp, align 8, !dbg !11947
  %4 = load i64, i64* %tmp, align 8, !dbg !11946
  ret void, !dbg !11967
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !11968 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11971, metadata !DIExpression()), !dbg !11972
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11973, metadata !DIExpression()), !dbg !11974
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !11975, metadata !DIExpression()), !dbg !11976
  ret void, !dbg !11977
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !11978 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11982, metadata !DIExpression()), !dbg !11986
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11988, metadata !DIExpression()), !dbg !11989
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11990, metadata !DIExpression()), !dbg !11991
  %0 = load i64, i64* %size.addr, align 8, !dbg !11992
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11994
  br i1 %1, label %if.then, label %if.end447, !dbg !11995

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11996
  %tobool = icmp ne i64 %2, 0, !dbg !11996
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11999

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !12000
  br label %return, !dbg !12000

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !12001
  %cmp = icmp ult i64 %3, 4096, !dbg !12003
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12004

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12005
  br label %return, !dbg !12005

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub = sub i64 %4, 1, !dbg !12006
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !12006
  br i1 %5, label %cond.true, label %cond.false442, !dbg !12006

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub4 = sub i64 %6, 1, !dbg !12006
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !12006
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !12006

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub6 = sub i64 %8, 1, !dbg !12006
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !12006
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !12006

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !12006

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub9 = sub i64 %9, 1, !dbg !12006
  %and = and i64 %sub9, -9223372036854775808, !dbg !12006
  %tobool10 = icmp ne i64 %and, 0, !dbg !12006
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !12006

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !12006

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub13 = sub i64 %10, 1, !dbg !12006
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !12006
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12006
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !12006

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !12006

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub18 = sub i64 %11, 1, !dbg !12006
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !12006
  %tobool20 = icmp ne i64 %and19, 0, !dbg !12006
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !12006

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !12006

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub23 = sub i64 %12, 1, !dbg !12006
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !12006
  %tobool25 = icmp ne i64 %and24, 0, !dbg !12006
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !12006

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !12006

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub28 = sub i64 %13, 1, !dbg !12006
  %and29 = and i64 %sub28, 576460752303423488, !dbg !12006
  %tobool30 = icmp ne i64 %and29, 0, !dbg !12006
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !12006

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !12006

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub33 = sub i64 %14, 1, !dbg !12006
  %and34 = and i64 %sub33, 288230376151711744, !dbg !12006
  %tobool35 = icmp ne i64 %and34, 0, !dbg !12006
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12006

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !12006

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub38 = sub i64 %15, 1, !dbg !12006
  %and39 = and i64 %sub38, 144115188075855872, !dbg !12006
  %tobool40 = icmp ne i64 %and39, 0, !dbg !12006
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !12006

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !12006

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub43 = sub i64 %16, 1, !dbg !12006
  %and44 = and i64 %sub43, 72057594037927936, !dbg !12006
  %tobool45 = icmp ne i64 %and44, 0, !dbg !12006
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !12006

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !12006

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub48 = sub i64 %17, 1, !dbg !12006
  %and49 = and i64 %sub48, 36028797018963968, !dbg !12006
  %tobool50 = icmp ne i64 %and49, 0, !dbg !12006
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !12006

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !12006

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub53 = sub i64 %18, 1, !dbg !12006
  %and54 = and i64 %sub53, 18014398509481984, !dbg !12006
  %tobool55 = icmp ne i64 %and54, 0, !dbg !12006
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !12006

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !12006

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub58 = sub i64 %19, 1, !dbg !12006
  %and59 = and i64 %sub58, 9007199254740992, !dbg !12006
  %tobool60 = icmp ne i64 %and59, 0, !dbg !12006
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !12006

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !12006

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub63 = sub i64 %20, 1, !dbg !12006
  %and64 = and i64 %sub63, 4503599627370496, !dbg !12006
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12006
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !12006

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !12006

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub68 = sub i64 %21, 1, !dbg !12006
  %and69 = and i64 %sub68, 2251799813685248, !dbg !12006
  %tobool70 = icmp ne i64 %and69, 0, !dbg !12006
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !12006

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !12006

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub73 = sub i64 %22, 1, !dbg !12006
  %and74 = and i64 %sub73, 1125899906842624, !dbg !12006
  %tobool75 = icmp ne i64 %and74, 0, !dbg !12006
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !12006

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !12006

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub78 = sub i64 %23, 1, !dbg !12006
  %and79 = and i64 %sub78, 562949953421312, !dbg !12006
  %tobool80 = icmp ne i64 %and79, 0, !dbg !12006
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !12006

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !12006

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub83 = sub i64 %24, 1, !dbg !12006
  %and84 = and i64 %sub83, 281474976710656, !dbg !12006
  %tobool85 = icmp ne i64 %and84, 0, !dbg !12006
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !12006

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !12006

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub88 = sub i64 %25, 1, !dbg !12006
  %and89 = and i64 %sub88, 140737488355328, !dbg !12006
  %tobool90 = icmp ne i64 %and89, 0, !dbg !12006
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !12006

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !12006

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub93 = sub i64 %26, 1, !dbg !12006
  %and94 = and i64 %sub93, 70368744177664, !dbg !12006
  %tobool95 = icmp ne i64 %and94, 0, !dbg !12006
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !12006

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !12006

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub98 = sub i64 %27, 1, !dbg !12006
  %and99 = and i64 %sub98, 35184372088832, !dbg !12006
  %tobool100 = icmp ne i64 %and99, 0, !dbg !12006
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !12006

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !12006

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub103 = sub i64 %28, 1, !dbg !12006
  %and104 = and i64 %sub103, 17592186044416, !dbg !12006
  %tobool105 = icmp ne i64 %and104, 0, !dbg !12006
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !12006

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !12006

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub108 = sub i64 %29, 1, !dbg !12006
  %and109 = and i64 %sub108, 8796093022208, !dbg !12006
  %tobool110 = icmp ne i64 %and109, 0, !dbg !12006
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !12006

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !12006

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub113 = sub i64 %30, 1, !dbg !12006
  %and114 = and i64 %sub113, 4398046511104, !dbg !12006
  %tobool115 = icmp ne i64 %and114, 0, !dbg !12006
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !12006

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !12006

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub118 = sub i64 %31, 1, !dbg !12006
  %and119 = and i64 %sub118, 2199023255552, !dbg !12006
  %tobool120 = icmp ne i64 %and119, 0, !dbg !12006
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !12006

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !12006

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub123 = sub i64 %32, 1, !dbg !12006
  %and124 = and i64 %sub123, 1099511627776, !dbg !12006
  %tobool125 = icmp ne i64 %and124, 0, !dbg !12006
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !12006

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !12006

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub128 = sub i64 %33, 1, !dbg !12006
  %and129 = and i64 %sub128, 549755813888, !dbg !12006
  %tobool130 = icmp ne i64 %and129, 0, !dbg !12006
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !12006

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !12006

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub133 = sub i64 %34, 1, !dbg !12006
  %and134 = and i64 %sub133, 274877906944, !dbg !12006
  %tobool135 = icmp ne i64 %and134, 0, !dbg !12006
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !12006

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !12006

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub138 = sub i64 %35, 1, !dbg !12006
  %and139 = and i64 %sub138, 137438953472, !dbg !12006
  %tobool140 = icmp ne i64 %and139, 0, !dbg !12006
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !12006

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !12006

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub143 = sub i64 %36, 1, !dbg !12006
  %and144 = and i64 %sub143, 68719476736, !dbg !12006
  %tobool145 = icmp ne i64 %and144, 0, !dbg !12006
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !12006

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !12006

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub148 = sub i64 %37, 1, !dbg !12006
  %and149 = and i64 %sub148, 34359738368, !dbg !12006
  %tobool150 = icmp ne i64 %and149, 0, !dbg !12006
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !12006

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !12006

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub153 = sub i64 %38, 1, !dbg !12006
  %and154 = and i64 %sub153, 17179869184, !dbg !12006
  %tobool155 = icmp ne i64 %and154, 0, !dbg !12006
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !12006

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !12006

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub158 = sub i64 %39, 1, !dbg !12006
  %and159 = and i64 %sub158, 8589934592, !dbg !12006
  %tobool160 = icmp ne i64 %and159, 0, !dbg !12006
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !12006

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !12006

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub163 = sub i64 %40, 1, !dbg !12006
  %and164 = and i64 %sub163, 4294967296, !dbg !12006
  %tobool165 = icmp ne i64 %and164, 0, !dbg !12006
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !12006

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !12006

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub168 = sub i64 %41, 1, !dbg !12006
  %and169 = and i64 %sub168, 2147483648, !dbg !12006
  %tobool170 = icmp ne i64 %and169, 0, !dbg !12006
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !12006

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !12006

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub173 = sub i64 %42, 1, !dbg !12006
  %and174 = and i64 %sub173, 1073741824, !dbg !12006
  %tobool175 = icmp ne i64 %and174, 0, !dbg !12006
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !12006

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !12006

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub178 = sub i64 %43, 1, !dbg !12006
  %and179 = and i64 %sub178, 536870912, !dbg !12006
  %tobool180 = icmp ne i64 %and179, 0, !dbg !12006
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !12006

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !12006

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub183 = sub i64 %44, 1, !dbg !12006
  %and184 = and i64 %sub183, 268435456, !dbg !12006
  %tobool185 = icmp ne i64 %and184, 0, !dbg !12006
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !12006

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !12006

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub188 = sub i64 %45, 1, !dbg !12006
  %and189 = and i64 %sub188, 134217728, !dbg !12006
  %tobool190 = icmp ne i64 %and189, 0, !dbg !12006
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !12006

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !12006

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub193 = sub i64 %46, 1, !dbg !12006
  %and194 = and i64 %sub193, 67108864, !dbg !12006
  %tobool195 = icmp ne i64 %and194, 0, !dbg !12006
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !12006

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !12006

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub198 = sub i64 %47, 1, !dbg !12006
  %and199 = and i64 %sub198, 33554432, !dbg !12006
  %tobool200 = icmp ne i64 %and199, 0, !dbg !12006
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !12006

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !12006

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub203 = sub i64 %48, 1, !dbg !12006
  %and204 = and i64 %sub203, 16777216, !dbg !12006
  %tobool205 = icmp ne i64 %and204, 0, !dbg !12006
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !12006

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !12006

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub208 = sub i64 %49, 1, !dbg !12006
  %and209 = and i64 %sub208, 8388608, !dbg !12006
  %tobool210 = icmp ne i64 %and209, 0, !dbg !12006
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !12006

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !12006

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub213 = sub i64 %50, 1, !dbg !12006
  %and214 = and i64 %sub213, 4194304, !dbg !12006
  %tobool215 = icmp ne i64 %and214, 0, !dbg !12006
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !12006

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !12006

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub218 = sub i64 %51, 1, !dbg !12006
  %and219 = and i64 %sub218, 2097152, !dbg !12006
  %tobool220 = icmp ne i64 %and219, 0, !dbg !12006
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !12006

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !12006

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub223 = sub i64 %52, 1, !dbg !12006
  %and224 = and i64 %sub223, 1048576, !dbg !12006
  %tobool225 = icmp ne i64 %and224, 0, !dbg !12006
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !12006

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !12006

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub228 = sub i64 %53, 1, !dbg !12006
  %and229 = and i64 %sub228, 524288, !dbg !12006
  %tobool230 = icmp ne i64 %and229, 0, !dbg !12006
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !12006

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !12006

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub233 = sub i64 %54, 1, !dbg !12006
  %and234 = and i64 %sub233, 262144, !dbg !12006
  %tobool235 = icmp ne i64 %and234, 0, !dbg !12006
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !12006

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !12006

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub238 = sub i64 %55, 1, !dbg !12006
  %and239 = and i64 %sub238, 131072, !dbg !12006
  %tobool240 = icmp ne i64 %and239, 0, !dbg !12006
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !12006

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !12006

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub243 = sub i64 %56, 1, !dbg !12006
  %and244 = and i64 %sub243, 65536, !dbg !12006
  %tobool245 = icmp ne i64 %and244, 0, !dbg !12006
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !12006

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !12006

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub248 = sub i64 %57, 1, !dbg !12006
  %and249 = and i64 %sub248, 32768, !dbg !12006
  %tobool250 = icmp ne i64 %and249, 0, !dbg !12006
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !12006

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !12006

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub253 = sub i64 %58, 1, !dbg !12006
  %and254 = and i64 %sub253, 16384, !dbg !12006
  %tobool255 = icmp ne i64 %and254, 0, !dbg !12006
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !12006

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !12006

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub258 = sub i64 %59, 1, !dbg !12006
  %and259 = and i64 %sub258, 8192, !dbg !12006
  %tobool260 = icmp ne i64 %and259, 0, !dbg !12006
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !12006

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !12006

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub263 = sub i64 %60, 1, !dbg !12006
  %and264 = and i64 %sub263, 4096, !dbg !12006
  %tobool265 = icmp ne i64 %and264, 0, !dbg !12006
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !12006

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !12006

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub268 = sub i64 %61, 1, !dbg !12006
  %and269 = and i64 %sub268, 2048, !dbg !12006
  %tobool270 = icmp ne i64 %and269, 0, !dbg !12006
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !12006

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !12006

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub273 = sub i64 %62, 1, !dbg !12006
  %and274 = and i64 %sub273, 1024, !dbg !12006
  %tobool275 = icmp ne i64 %and274, 0, !dbg !12006
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !12006

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !12006

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub278 = sub i64 %63, 1, !dbg !12006
  %and279 = and i64 %sub278, 512, !dbg !12006
  %tobool280 = icmp ne i64 %and279, 0, !dbg !12006
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !12006

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !12006

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub283 = sub i64 %64, 1, !dbg !12006
  %and284 = and i64 %sub283, 256, !dbg !12006
  %tobool285 = icmp ne i64 %and284, 0, !dbg !12006
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !12006

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !12006

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub288 = sub i64 %65, 1, !dbg !12006
  %and289 = and i64 %sub288, 128, !dbg !12006
  %tobool290 = icmp ne i64 %and289, 0, !dbg !12006
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !12006

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !12006

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub293 = sub i64 %66, 1, !dbg !12006
  %and294 = and i64 %sub293, 64, !dbg !12006
  %tobool295 = icmp ne i64 %and294, 0, !dbg !12006
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !12006

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !12006

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub298 = sub i64 %67, 1, !dbg !12006
  %and299 = and i64 %sub298, 32, !dbg !12006
  %tobool300 = icmp ne i64 %and299, 0, !dbg !12006
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !12006

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !12006

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub303 = sub i64 %68, 1, !dbg !12006
  %and304 = and i64 %sub303, 16, !dbg !12006
  %tobool305 = icmp ne i64 %and304, 0, !dbg !12006
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !12006

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !12006

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub308 = sub i64 %69, 1, !dbg !12006
  %and309 = and i64 %sub308, 8, !dbg !12006
  %tobool310 = icmp ne i64 %and309, 0, !dbg !12006
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !12006

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !12006

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub313 = sub i64 %70, 1, !dbg !12006
  %and314 = and i64 %sub313, 4, !dbg !12006
  %tobool315 = icmp ne i64 %and314, 0, !dbg !12006
  %71 = zext i1 %tobool315 to i64, !dbg !12006
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !12006
  br label %cond.end, !dbg !12006

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !12006
  br label %cond.end317, !dbg !12006

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !12006
  br label %cond.end319, !dbg !12006

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !12006
  br label %cond.end321, !dbg !12006

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !12006
  br label %cond.end323, !dbg !12006

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !12006
  br label %cond.end325, !dbg !12006

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !12006
  br label %cond.end327, !dbg !12006

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !12006
  br label %cond.end329, !dbg !12006

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !12006
  br label %cond.end331, !dbg !12006

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !12006
  br label %cond.end333, !dbg !12006

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !12006
  br label %cond.end335, !dbg !12006

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !12006
  br label %cond.end337, !dbg !12006

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !12006
  br label %cond.end339, !dbg !12006

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !12006
  br label %cond.end341, !dbg !12006

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !12006
  br label %cond.end343, !dbg !12006

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !12006
  br label %cond.end345, !dbg !12006

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !12006
  br label %cond.end347, !dbg !12006

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !12006
  br label %cond.end349, !dbg !12006

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !12006
  br label %cond.end351, !dbg !12006

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !12006
  br label %cond.end353, !dbg !12006

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !12006
  br label %cond.end355, !dbg !12006

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !12006
  br label %cond.end357, !dbg !12006

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !12006
  br label %cond.end359, !dbg !12006

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !12006
  br label %cond.end361, !dbg !12006

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !12006
  br label %cond.end363, !dbg !12006

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !12006
  br label %cond.end365, !dbg !12006

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !12006
  br label %cond.end367, !dbg !12006

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !12006
  br label %cond.end369, !dbg !12006

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !12006
  br label %cond.end371, !dbg !12006

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !12006
  br label %cond.end373, !dbg !12006

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !12006
  br label %cond.end375, !dbg !12006

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !12006
  br label %cond.end377, !dbg !12006

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !12006
  br label %cond.end379, !dbg !12006

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !12006
  br label %cond.end381, !dbg !12006

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !12006
  br label %cond.end383, !dbg !12006

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !12006
  br label %cond.end385, !dbg !12006

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !12006
  br label %cond.end387, !dbg !12006

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !12006
  br label %cond.end389, !dbg !12006

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !12006
  br label %cond.end391, !dbg !12006

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !12006
  br label %cond.end393, !dbg !12006

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !12006
  br label %cond.end395, !dbg !12006

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !12006
  br label %cond.end397, !dbg !12006

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !12006
  br label %cond.end399, !dbg !12006

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !12006
  br label %cond.end401, !dbg !12006

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !12006
  br label %cond.end403, !dbg !12006

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !12006
  br label %cond.end405, !dbg !12006

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !12006
  br label %cond.end407, !dbg !12006

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !12006
  br label %cond.end409, !dbg !12006

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !12006
  br label %cond.end411, !dbg !12006

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !12006
  br label %cond.end413, !dbg !12006

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !12006
  br label %cond.end415, !dbg !12006

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !12006
  br label %cond.end417, !dbg !12006

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !12006
  br label %cond.end419, !dbg !12006

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !12006
  br label %cond.end421, !dbg !12006

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !12006
  br label %cond.end423, !dbg !12006

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !12006
  br label %cond.end425, !dbg !12006

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !12006
  br label %cond.end427, !dbg !12006

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !12006
  br label %cond.end429, !dbg !12006

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !12006
  br label %cond.end431, !dbg !12006

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !12006
  br label %cond.end433, !dbg !12006

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !12006
  br label %cond.end435, !dbg !12006

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !12006
  br label %cond.end437, !dbg !12006

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !12006
  br label %cond.end440, !dbg !12006

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !12006

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !12006
  br label %cond.end444, !dbg !12006

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !12006
  %sub443 = sub i64 %72, 1, !dbg !12006
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !12006
  br label %cond.end444, !dbg !12006

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !12006
  %sub446 = sub i32 %cond445, 12, !dbg !12007
  %add = add i32 %sub446, 1, !dbg !12008
  store i32 %add, i32* %retval, align 4, !dbg !12009
  br label %return, !dbg !12009

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !12010
  %dec = add i64 %73, -1, !dbg !12010
  store i64 %dec, i64* %size.addr, align 8, !dbg !12010
  %74 = load i64, i64* %size.addr, align 8, !dbg !12011
  %shr = lshr i64 %74, 12, !dbg !12011
  store i64 %shr, i64* %size.addr, align 8, !dbg !12011
  %75 = load i64, i64* %size.addr, align 8, !dbg !12012
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11989
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !12013
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !12014
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #4, !dbg !12013, !srcloc !12015
  store i32 %78, i32* %bitpos.i, align 4, !dbg !12013
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !12016
  %add.i = add i32 %79, 1, !dbg !12017
  store i32 %add.i, i32* %retval, align 4, !dbg !12018
  br label %return, !dbg !12018

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !12019
  ret i32 %80, !dbg !12019
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !12020 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11982, metadata !DIExpression()), !dbg !12024
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11988, metadata !DIExpression()), !dbg !12026
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12027, metadata !DIExpression()), !dbg !12028
  %0 = load i64, i64* %n.addr, align 8, !dbg !12029
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12026
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !12030
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !12031
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #4, !dbg !12030, !srcloc !12015
  store i32 %3, i32* %bitpos.i, align 4, !dbg !12030
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !12032
  %add.i = add i32 %4, 1, !dbg !12033
  %sub = sub i32 %add.i, 1, !dbg !12034
  ret i32 %sub, !dbg !12035
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !12036 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !12040, metadata !DIExpression()), !dbg !12041
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !12042, metadata !DIExpression()), !dbg !12043
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12044, metadata !DIExpression()), !dbg !12045
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12046, metadata !DIExpression()), !dbg !12047
  %0 = load i8*, i8** %object.addr, align 8, !dbg !12048
  ret i8* %0, !dbg !12049
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local void @ata_id_string(i16*, i8*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @blk_mq_rq_to_pdu(%struct.request* %rq) #0 !dbg !12050 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !12053, metadata !DIExpression()), !dbg !12054
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !12055
  %add.ptr = getelementptr %struct.request, %struct.request* %0, i64 1, !dbg !12056
  %1 = bitcast %struct.request* %add.ptr to i8*, !dbg !12055
  ret i8* %1, !dbg !12057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_id_major_version(i16* %id) #0 !dbg !12058 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16*, align 8
  %mver = alloca i32, align 4
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.declare(metadata i32* %mver, metadata !12063, metadata !DIExpression()), !dbg !12064
  %0 = load i16*, i16** %id.addr, align 8, !dbg !12065
  %arrayidx = getelementptr i16, i16* %0, i64 80, !dbg !12065
  %1 = load i16, i16* %arrayidx, align 2, !dbg !12065
  %conv = zext i16 %1 to i32, !dbg !12065
  %cmp = icmp eq i32 %conv, 65535, !dbg !12067
  br i1 %cmp, label %if.then, label %if.end, !dbg !12068

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12069
  br label %return, !dbg !12069

if.end:                                           ; preds = %entry
  store i32 14, i32* %mver, align 4, !dbg !12070
  br label %for.cond, !dbg !12072

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %mver, align 4, !dbg !12073
  %cmp2 = icmp uge i32 %2, 1, !dbg !12075
  br i1 %cmp2, label %for.body, label %for.end, !dbg !12076

for.body:                                         ; preds = %for.cond
  %3 = load i16*, i16** %id.addr, align 8, !dbg !12077
  %arrayidx4 = getelementptr i16, i16* %3, i64 80, !dbg !12077
  %4 = load i16, i16* %arrayidx4, align 2, !dbg !12077
  %conv5 = zext i16 %4 to i32, !dbg !12077
  %5 = load i32, i32* %mver, align 4, !dbg !12079
  %shl = shl i32 1, %5, !dbg !12080
  %and = and i32 %conv5, %shl, !dbg !12081
  %tobool = icmp ne i32 %and, 0, !dbg !12081
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !12082

if.then6:                                         ; preds = %for.body
  br label %for.end, !dbg !12083

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !12084

for.inc:                                          ; preds = %if.end7
  %6 = load i32, i32* %mver, align 4, !dbg !12085
  %dec = add i32 %6, -1, !dbg !12085
  store i32 %dec, i32* %mver, align 4, !dbg !12085
  br label %for.cond, !dbg !12086, !llvm.loop !12087

for.end:                                          ; preds = %if.then6, %for.cond
  %7 = load i32, i32* %mver, align 4, !dbg !12089
  store i32 %7, i32* %retval, align 4, !dbg !12090
  br label %return, !dbg !12090

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !12091
  ret i32 %8, !dbg !12091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !12092 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12096, metadata !DIExpression()), !dbg !12097
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12098, metadata !DIExpression()), !dbg !12099
  ret i1 true, !dbg !12100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !12101 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12105, metadata !DIExpression()), !dbg !12106
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12107, metadata !DIExpression()), !dbg !12108
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12109, metadata !DIExpression()), !dbg !12110
  ret void, !dbg !12111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_class_enabled(i32 %class) #0 !dbg !12112 {
entry:
  %class.addr = alloca i32, align 4
  store i32 %class, i32* %class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %class.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  %0 = load i32, i32* %class.addr, align 4, !dbg !12117
  %cmp = icmp eq i32 %0, 1, !dbg !12118
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !12119

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %class.addr, align 4, !dbg !12120
  %cmp1 = icmp eq i32 %1, 3, !dbg !12121
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !12122

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %class.addr, align 4, !dbg !12123
  %cmp3 = icmp eq i32 %2, 5, !dbg !12124
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !12125

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %class.addr, align 4, !dbg !12126
  %cmp5 = icmp eq i32 %3, 7, !dbg !12127
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !12128

lor.rhs:                                          ; preds = %lor.lhs.false4
  %4 = load i32, i32* %class.addr, align 4, !dbg !12129
  %cmp6 = icmp eq i32 %4, 9, !dbg !12130
  br label %lor.end, !dbg !12128

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %5 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32, !dbg !12128
  ret i32 %lor.ext, !dbg !12131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_rw_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !12132 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cdb = alloca i8*, align 8
  %rq = alloca %struct.request*, align 8
  %class = alloca i32, align 4
  %tf_flags = alloca i32, align 4
  %block = alloca i64, align 8
  %n_block = alloca i32, align 4
  %rc = alloca i32, align 4
  %fp = alloca i16, align 2
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !12133, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !12135, metadata !DIExpression()), !dbg !12136
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12137
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !12138
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !12138
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !12136
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !12139, metadata !DIExpression()), !dbg !12140
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12141
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 14, !dbg !12142
  %3 = load i8*, i8** %cmnd, align 8, !dbg !12142
  store i8* %3, i8** %cdb, align 8, !dbg !12140
  call void @llvm.dbg.declare(metadata %struct.request** %rq, metadata !12143, metadata !DIExpression()), !dbg !12144
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12145
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 19, !dbg !12146
  %5 = load %struct.request*, %struct.request** %request, align 8, !dbg !12146
  store %struct.request* %5, %struct.request** %rq, align 8, !dbg !12144
  call void @llvm.dbg.declare(metadata i32* %class, metadata !12147, metadata !DIExpression()), !dbg !12148
  %6 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12149
  %call = call zeroext i16 @req_get_ioprio(%struct.request* %6) #10, !dbg !12149
  %conv = zext i16 %call to i32, !dbg !12149
  %shr = ashr i32 %conv, 13, !dbg !12149
  store i32 %shr, i32* %class, align 4, !dbg !12148
  call void @llvm.dbg.declare(metadata i32* %tf_flags, metadata !12150, metadata !DIExpression()), !dbg !12151
  store i32 0, i32* %tf_flags, align 4, !dbg !12151
  call void @llvm.dbg.declare(metadata i64* %block, metadata !12152, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.declare(metadata i32* %n_block, metadata !12154, metadata !DIExpression()), !dbg !12155
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12156, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !12158, metadata !DIExpression()), !dbg !12159
  store i16 0, i16* %fp, align 2, !dbg !12159
  %7 = load i8*, i8** %cdb, align 8, !dbg !12160
  %arrayidx = getelementptr i8, i8* %7, i64 0, !dbg !12160
  %8 = load i8, i8* %arrayidx, align 1, !dbg !12160
  %conv1 = zext i8 %8 to i32, !dbg !12160
  %cmp = icmp eq i32 %conv1, 42, !dbg !12162
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12163

lor.lhs.false:                                    ; preds = %entry
  %9 = load i8*, i8** %cdb, align 8, !dbg !12164
  %arrayidx3 = getelementptr i8, i8* %9, i64 0, !dbg !12164
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !12164
  %conv4 = zext i8 %10 to i32, !dbg !12164
  %cmp5 = icmp eq i32 %conv4, 10, !dbg !12165
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !12166

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %11 = load i8*, i8** %cdb, align 8, !dbg !12167
  %arrayidx8 = getelementptr i8, i8* %11, i64 0, !dbg !12167
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !12167
  %conv9 = zext i8 %12 to i32, !dbg !12167
  %cmp10 = icmp eq i32 %conv9, 138, !dbg !12168
  br i1 %cmp10, label %if.then, label %if.end, !dbg !12169

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  %13 = load i32, i32* %tf_flags, align 4, !dbg !12170
  %or = or i32 %13, 8, !dbg !12170
  store i32 %or, i32* %tf_flags, align 4, !dbg !12170
  br label %if.end, !dbg !12171

if.end:                                           ; preds = %if.then, %lor.lhs.false7
  %14 = load i8*, i8** %cdb, align 8, !dbg !12172
  %arrayidx12 = getelementptr i8, i8* %14, i64 0, !dbg !12172
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !12172
  %conv13 = zext i8 %15 to i32, !dbg !12172
  switch i32 %conv13, label %sw.default [
    i32 40, label %sw.bb
    i32 42, label %sw.bb
    i32 8, label %sw.bb30
    i32 10, label %sw.bb30
    i32 136, label %sw.bb49
    i32 138, label %sw.bb49
  ], !dbg !12173

sw.bb:                                            ; preds = %if.end, %if.end
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12174
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 12, !dbg !12174
  %17 = load i16, i16* %cmd_len, align 4, !dbg !12174
  %conv14 = zext i16 %17 to i32, !dbg !12174
  %cmp15 = icmp slt i32 %conv14, 10, !dbg !12174
  %lnot = xor i1 %cmp15, true, !dbg !12174
  %lnot17 = xor i1 %lnot, true, !dbg !12174
  %lnot.ext = zext i1 %lnot17 to i32, !dbg !12174
  %conv18 = sext i32 %lnot.ext to i64, !dbg !12174
  %tobool = icmp ne i64 %conv18, 0, !dbg !12174
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !12177

if.then19:                                        ; preds = %sw.bb
  store i16 9, i16* %fp, align 2, !dbg !12178
  br label %invalid_fld, !dbg !12180

if.end20:                                         ; preds = %sw.bb
  %18 = load i8*, i8** %cdb, align 8, !dbg !12181
  call void @scsi_10_lba_len(i8* %18, i64* %block, i32* %n_block) #10, !dbg !12182
  %19 = load i8*, i8** %cdb, align 8, !dbg !12183
  %arrayidx21 = getelementptr i8, i8* %19, i64 1, !dbg !12183
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !12183
  %conv22 = zext i8 %20 to i32, !dbg !12183
  %and = and i32 %conv22, 8, !dbg !12185
  %tobool23 = icmp ne i32 %and, 0, !dbg !12185
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !12186

if.then24:                                        ; preds = %if.end20
  %21 = load i32, i32* %tf_flags, align 4, !dbg !12187
  %or25 = or i32 %21, 32, !dbg !12187
  store i32 %or25, i32* %tf_flags, align 4, !dbg !12187
  br label %if.end26, !dbg !12188

if.end26:                                         ; preds = %if.then24, %if.end20
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12189
  %23 = load i32, i32* %n_block, align 4, !dbg !12191
  %call27 = call zeroext i1 @ata_check_nblocks(%struct.scsi_cmnd* %22, i32 %23) #10, !dbg !12192
  br i1 %call27, label %if.end29, label %if.then28, !dbg !12193

if.then28:                                        ; preds = %if.end26
  br label %invalid_fld, !dbg !12194

if.end29:                                         ; preds = %if.end26
  br label %sw.epilog, !dbg !12195

sw.bb30:                                          ; preds = %if.end, %if.end
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12196
  %cmd_len31 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 12, !dbg !12196
  %25 = load i16, i16* %cmd_len31, align 4, !dbg !12196
  %conv32 = zext i16 %25 to i32, !dbg !12196
  %cmp33 = icmp slt i32 %conv32, 6, !dbg !12196
  %lnot35 = xor i1 %cmp33, true, !dbg !12196
  %lnot37 = xor i1 %lnot35, true, !dbg !12196
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !12196
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !12196
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !12196
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !12198

if.then41:                                        ; preds = %sw.bb30
  store i16 5, i16* %fp, align 2, !dbg !12199
  br label %invalid_fld, !dbg !12201

if.end42:                                         ; preds = %sw.bb30
  %26 = load i8*, i8** %cdb, align 8, !dbg !12202
  call void @scsi_6_lba_len(i8* %26, i64* %block, i32* %n_block) #10, !dbg !12203
  %27 = load i32, i32* %n_block, align 4, !dbg !12204
  %tobool43 = icmp ne i32 %27, 0, !dbg !12204
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !12206

if.then44:                                        ; preds = %if.end42
  store i32 256, i32* %n_block, align 4, !dbg !12207
  br label %if.end45, !dbg !12208

if.end45:                                         ; preds = %if.then44, %if.end42
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12209
  %29 = load i32, i32* %n_block, align 4, !dbg !12211
  %call46 = call zeroext i1 @ata_check_nblocks(%struct.scsi_cmnd* %28, i32 %29) #10, !dbg !12212
  br i1 %call46, label %if.end48, label %if.then47, !dbg !12213

if.then47:                                        ; preds = %if.end45
  br label %invalid_fld, !dbg !12214

if.end48:                                         ; preds = %if.end45
  br label %sw.epilog, !dbg !12215

sw.bb49:                                          ; preds = %if.end, %if.end
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12216
  %cmd_len50 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 12, !dbg !12216
  %31 = load i16, i16* %cmd_len50, align 4, !dbg !12216
  %conv51 = zext i16 %31 to i32, !dbg !12216
  %cmp52 = icmp slt i32 %conv51, 16, !dbg !12216
  %lnot54 = xor i1 %cmp52, true, !dbg !12216
  %lnot56 = xor i1 %lnot54, true, !dbg !12216
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !12216
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !12216
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !12216
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !12218

if.then60:                                        ; preds = %sw.bb49
  store i16 15, i16* %fp, align 2, !dbg !12219
  br label %invalid_fld, !dbg !12221

if.end61:                                         ; preds = %sw.bb49
  %32 = load i8*, i8** %cdb, align 8, !dbg !12222
  call void @scsi_16_lba_len(i8* %32, i64* %block, i32* %n_block) #10, !dbg !12223
  %33 = load i8*, i8** %cdb, align 8, !dbg !12224
  %arrayidx62 = getelementptr i8, i8* %33, i64 1, !dbg !12224
  %34 = load i8, i8* %arrayidx62, align 1, !dbg !12224
  %conv63 = zext i8 %34 to i32, !dbg !12224
  %and64 = and i32 %conv63, 8, !dbg !12226
  %tobool65 = icmp ne i32 %and64, 0, !dbg !12226
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !12227

if.then66:                                        ; preds = %if.end61
  %35 = load i32, i32* %tf_flags, align 4, !dbg !12228
  %or67 = or i32 %35, 32, !dbg !12228
  store i32 %or67, i32* %tf_flags, align 4, !dbg !12228
  br label %if.end68, !dbg !12229

if.end68:                                         ; preds = %if.then66, %if.end61
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12230
  %37 = load i32, i32* %n_block, align 4, !dbg !12232
  %call69 = call zeroext i1 @ata_check_nblocks(%struct.scsi_cmnd* %36, i32 %37) #10, !dbg !12233
  br i1 %call69, label %if.end71, label %if.then70, !dbg !12234

if.then70:                                        ; preds = %if.end68
  br label %invalid_fld, !dbg !12235

if.end71:                                         ; preds = %if.end68
  br label %sw.epilog, !dbg !12236

sw.default:                                       ; preds = %if.end
  store i16 0, i16* %fp, align 2, !dbg !12237
  br label %invalid_fld, !dbg !12238

sw.epilog:                                        ; preds = %if.end71, %if.end48, %if.end29
  %38 = load i32, i32* %n_block, align 4, !dbg !12239
  %tobool72 = icmp ne i32 %38, 0, !dbg !12239
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !12241

if.then73:                                        ; preds = %sw.epilog
  br label %nothing_to_do, !dbg !12242

if.end74:                                         ; preds = %sw.epilog
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12243
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %39, i32 0, i32 6, !dbg !12244
  %40 = load i64, i64* %flags, align 8, !dbg !12245
  %or75 = or i64 %40, 8, !dbg !12245
  store i64 %or75, i64* %flags, align 8, !dbg !12245
  %41 = load i32, i32* %n_block, align 4, !dbg !12246
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12247
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 1, !dbg !12248
  %43 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !12248
  %sector_size = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %43, i32 0, i32 20, !dbg !12249
  %44 = load i32, i32* %sector_size, align 4, !dbg !12249
  %mul = mul i32 %41, %44, !dbg !12250
  %45 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12251
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %45, i32 0, i32 13, !dbg !12252
  store i32 %mul, i32* %nbytes, align 8, !dbg !12253
  %46 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12254
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %46, i32 0, i32 4, !dbg !12255
  %47 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12256
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %47, i32 0, i32 1, !dbg !12257
  %48 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12257
  %49 = load i64, i64* %block, align 8, !dbg !12258
  %50 = load i32, i32* %n_block, align 4, !dbg !12259
  %51 = load i32, i32* %tf_flags, align 4, !dbg !12260
  %52 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12261
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %52, i32 0, i32 8, !dbg !12262
  %53 = load i32, i32* %hw_tag, align 4, !dbg !12262
  %54 = load i32, i32* %class, align 4, !dbg !12263
  %call76 = call i32 @ata_build_rw_tf(%struct.ata_taskfile* %tf, %struct.ata_device* %48, i64 %49, i32 %50, i32 %51, i32 %53, i32 %54) #10, !dbg !12264
  store i32 %call76, i32* %rc, align 4, !dbg !12265
  %55 = load i32, i32* %rc, align 4, !dbg !12266
  %cmp77 = icmp eq i32 %55, 0, !dbg !12266
  %lnot79 = xor i1 %cmp77, true, !dbg !12266
  %lnot81 = xor i1 %lnot79, true, !dbg !12266
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !12266
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !12266
  %tobool84 = icmp ne i64 %conv83, 0, !dbg !12266
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !12268

if.then85:                                        ; preds = %if.end74
  store i32 0, i32* %retval, align 4, !dbg !12269
  br label %return, !dbg !12269

if.end86:                                         ; preds = %if.end74
  %56 = load i32, i32* %rc, align 4, !dbg !12270
  %cmp87 = icmp eq i32 %56, -34, !dbg !12272
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !12273

if.then89:                                        ; preds = %if.end86
  br label %out_of_range, !dbg !12274

if.end90:                                         ; preds = %if.end86
  br label %invalid_fld, !dbg !12275

invalid_fld:                                      ; preds = %if.end90, %sw.default, %if.then70, %if.then60, %if.then47, %if.then41, %if.then28, %if.then19
  call void @llvm.dbg.label(metadata !12276), !dbg !12277
  %57 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12278
  %dev91 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %57, i32 0, i32 1, !dbg !12279
  %58 = load %struct.ata_device*, %struct.ata_device** %dev91, align 8, !dbg !12279
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12280
  %60 = load i16, i16* %fp, align 2, !dbg !12281
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %58, %struct.scsi_cmnd* %59, i16 zeroext %60, i8 zeroext -1) #10, !dbg !12282
  store i32 1, i32* %retval, align 4, !dbg !12283
  br label %return, !dbg !12283

out_of_range:                                     ; preds = %if.then89
  call void @llvm.dbg.label(metadata !12284), !dbg !12285
  %61 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12286
  %dev92 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %61, i32 0, i32 1, !dbg !12287
  %62 = load %struct.ata_device*, %struct.ata_device** %dev92, align 8, !dbg !12287
  %63 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12288
  call void @ata_scsi_set_sense(%struct.ata_device* %62, %struct.scsi_cmnd* %63, i8 zeroext 5, i8 zeroext 33, i8 zeroext 0) #10, !dbg !12289
  store i32 1, i32* %retval, align 4, !dbg !12290
  br label %return, !dbg !12290

nothing_to_do:                                    ; preds = %if.then73
  call void @llvm.dbg.label(metadata !12291), !dbg !12292
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12293
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %64, i32 0, i32 24, !dbg !12294
  store i32 0, i32* %result, align 8, !dbg !12295
  store i32 1, i32* %retval, align 4, !dbg !12296
  br label %return, !dbg !12296

return:                                           ; preds = %nothing_to_do, %out_of_range, %invalid_fld, %if.then85
  %65 = load i32, i32* %retval, align 4, !dbg !12297
  ret i32 %65, !dbg !12297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_write_same_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !12298 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %sdp = alloca %struct.scsi_device*, align 8
  %len = alloca i64, align 8
  %dev = alloca %struct.ata_device*, align 8
  %cdb = alloca i8*, align 8
  %block = alloca i64, align 8
  %n_block = alloca i32, align 4
  %trmax = alloca i32, align 4
  %size = alloca i32, align 4
  %fp = alloca i16, align 2
  %bp = alloca i8, align 1
  %unmap = alloca i8, align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !12299, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !12301, metadata !DIExpression()), !dbg !12302
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12303
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !12304
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !12302
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !12305, metadata !DIExpression()), !dbg !12306
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12307
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 2, !dbg !12308
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !12308
  store %struct.scsi_cmnd* %2, %struct.scsi_cmnd** %scmd, align 8, !dbg !12306
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdp, metadata !12309, metadata !DIExpression()), !dbg !12310
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12311
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 1, !dbg !12312
  %4 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !12312
  store %struct.scsi_device* %4, %struct.scsi_device** %sdp, align 8, !dbg !12310
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12313, metadata !DIExpression()), !dbg !12314
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdp, align 8, !dbg !12315
  %sector_size = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 20, !dbg !12316
  %6 = load i32, i32* %sector_size, align 4, !dbg !12316
  %conv = zext i32 %6 to i64, !dbg !12315
  store i64 %conv, i64* %len, align 8, !dbg !12314
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12317, metadata !DIExpression()), !dbg !12318
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12319
  %dev2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 1, !dbg !12320
  %8 = load %struct.ata_device*, %struct.ata_device** %dev2, align 8, !dbg !12320
  store %struct.ata_device* %8, %struct.ata_device** %dev, align 8, !dbg !12318
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !12321, metadata !DIExpression()), !dbg !12322
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12323
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %9, i32 0, i32 14, !dbg !12324
  %10 = load i8*, i8** %cmnd, align 8, !dbg !12324
  store i8* %10, i8** %cdb, align 8, !dbg !12322
  call void @llvm.dbg.declare(metadata i64* %block, metadata !12325, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.declare(metadata i32* %n_block, metadata !12327, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.declare(metadata i32* %trmax, metadata !12329, metadata !DIExpression()), !dbg !12330
  %11 = load i64, i64* %len, align 8, !dbg !12331
  %shr = lshr i64 %11, 3, !dbg !12332
  %conv3 = trunc i64 %shr to i32, !dbg !12331
  store i32 %conv3, i32* %trmax, align 4, !dbg !12330
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12333, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !12335, metadata !DIExpression()), !dbg !12336
  call void @llvm.dbg.declare(metadata i8* %bp, metadata !12337, metadata !DIExpression()), !dbg !12338
  store i8 -1, i8* %bp, align 1, !dbg !12338
  call void @llvm.dbg.declare(metadata i8* %unmap, metadata !12339, metadata !DIExpression()), !dbg !12340
  %12 = load i8*, i8** %cdb, align 8, !dbg !12341
  %arrayidx = getelementptr i8, i8* %12, i64 1, !dbg !12341
  %13 = load i8, i8* %arrayidx, align 1, !dbg !12341
  %conv4 = zext i8 %13 to i32, !dbg !12341
  %and = and i32 %conv4, 8, !dbg !12342
  %conv5 = trunc i32 %and to i8, !dbg !12341
  store i8 %conv5, i8* %unmap, align 1, !dbg !12340
  %14 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12343
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 14, !dbg !12343
  %15 = load i8, i8* %dma_mode, align 1, !dbg !12343
  %tobool = icmp ne i8 %15, 0, !dbg !12343
  %lnot = xor i1 %tobool, true, !dbg !12343
  %lnot6 = xor i1 %lnot, true, !dbg !12343
  %lnot7 = xor i1 %lnot6, true, !dbg !12343
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !12343
  %conv8 = sext i32 %lnot.ext to i64, !dbg !12343
  %tobool9 = icmp ne i64 %conv8, 0, !dbg !12343
  br i1 %tobool9, label %if.then, label %if.end, !dbg !12345

if.then:                                          ; preds = %entry
  br label %invalid_opcode, !dbg !12346

if.end:                                           ; preds = %entry
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12347
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 19, !dbg !12347
  %17 = load %struct.request*, %struct.request** %request, align 8, !dbg !12347
  %call = call zeroext i1 @blk_rq_is_passthrough(%struct.request* %17) #10, !dbg !12347
  %lnot10 = xor i1 %call, true, !dbg !12347
  %lnot12 = xor i1 %lnot10, true, !dbg !12347
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !12347
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !12347
  %tobool15 = icmp ne i64 %conv14, 0, !dbg !12347
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12349

if.then16:                                        ; preds = %if.end
  br label %invalid_opcode, !dbg !12350

if.end17:                                         ; preds = %if.end
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12351
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 12, !dbg !12351
  %19 = load i16, i16* %cmd_len, align 4, !dbg !12351
  %conv18 = zext i16 %19 to i32, !dbg !12351
  %cmp = icmp slt i32 %conv18, 16, !dbg !12351
  %lnot20 = xor i1 %cmp, true, !dbg !12351
  %lnot22 = xor i1 %lnot20, true, !dbg !12351
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !12351
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !12351
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !12351
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !12353

if.then26:                                        ; preds = %if.end17
  store i16 15, i16* %fp, align 2, !dbg !12354
  br label %invalid_fld, !dbg !12356

if.end27:                                         ; preds = %if.end17
  %20 = load i8*, i8** %cdb, align 8, !dbg !12357
  call void @scsi_16_lba_len(i8* %20, i64* %block, i32* %n_block) #10, !dbg !12358
  %21 = load i8, i8* %unmap, align 1, !dbg !12359
  %tobool28 = icmp ne i8 %21, 0, !dbg !12359
  br i1 %tobool28, label %lor.lhs.false, label %if.then33, !dbg !12361

lor.lhs.false:                                    ; preds = %if.end27
  %22 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12362
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 2, !dbg !12363
  %23 = load i32, i32* %horkage, align 4, !dbg !12363
  %and29 = and i32 %23, 16777216, !dbg !12364
  %tobool30 = icmp ne i32 %and29, 0, !dbg !12364
  br i1 %tobool30, label %if.then33, label %lor.lhs.false31, !dbg !12365

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %24 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12366
  %25 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %24, i32 0, i32 27, !dbg !12367
  %id = bitcast %union.anon.90* %25 to [256 x i16]*, !dbg !12367
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !12366
  %call32 = call zeroext i1 @ata_id_has_trim(i16* %arraydecay) #10, !dbg !12368
  br i1 %call32, label %if.end34, label %if.then33, !dbg !12369

if.then33:                                        ; preds = %lor.lhs.false31, %lor.lhs.false, %if.end27
  store i16 1, i16* %fp, align 2, !dbg !12370
  store i8 3, i8* %bp, align 1, !dbg !12372
  br label %invalid_fld, !dbg !12373

if.end34:                                         ; preds = %lor.lhs.false31
  %26 = load i32, i32* %n_block, align 4, !dbg !12374
  %27 = load i32, i32* %trmax, align 4, !dbg !12376
  %mul = mul i32 65535, %27, !dbg !12377
  %cmp35 = icmp ugt i32 %26, %mul, !dbg !12378
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12379

if.then37:                                        ; preds = %if.end34
  store i16 2, i16* %fp, align 2, !dbg !12380
  br label %invalid_fld, !dbg !12382

if.end38:                                         ; preds = %if.end34
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12383
  %call39 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %28) #10, !dbg !12385
  %tobool40 = icmp ne i32 %call39, 0, !dbg !12385
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !12386

if.then41:                                        ; preds = %if.end38
  br label %invalid_param_len, !dbg !12387

if.end42:                                         ; preds = %if.end38
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12388
  %30 = load i32, i32* %trmax, align 4, !dbg !12389
  %31 = load i64, i64* %block, align 8, !dbg !12390
  %32 = load i32, i32* %n_block, align 4, !dbg !12391
  %call43 = call i64 @ata_format_dsm_trim_descr(%struct.scsi_cmnd* %29, i32 %30, i64 %31, i32 %32) #10, !dbg !12392
  %conv44 = trunc i64 %call43 to i32, !dbg !12392
  store i32 %conv44, i32* %size, align 4, !dbg !12393
  %33 = load i32, i32* %size, align 4, !dbg !12394
  %conv45 = zext i32 %33 to i64, !dbg !12394
  %34 = load i64, i64* %len, align 8, !dbg !12396
  %cmp46 = icmp ne i64 %conv45, %34, !dbg !12397
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !12398

if.then48:                                        ; preds = %if.end42
  br label %invalid_param_len, !dbg !12399

if.end49:                                         ; preds = %if.end42
  %35 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12400
  %call50 = call i32 @ata_ncq_enabled(%struct.ata_device* %35) #10, !dbg !12402
  %tobool51 = icmp ne i32 %call50, 0, !dbg !12402
  br i1 %tobool51, label %land.lhs.true, label %if.else, !dbg !12403

land.lhs.true:                                    ; preds = %if.end49
  %36 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12404
  %call52 = call zeroext i1 @ata_fpdma_dsm_supported(%struct.ata_device* %36) #10, !dbg !12405
  br i1 %call52, label %if.then54, label %if.else, !dbg !12406

if.then54:                                        ; preds = %land.lhs.true
  %37 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12407
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %37, i32 0, i32 1, !dbg !12409
  store i8 6, i8* %protocol, align 8, !dbg !12410
  %38 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12411
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %38, i32 0, i32 14, !dbg !12412
  store i8 100, i8* %command, align 1, !dbg !12413
  %39 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12414
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %39, i32 0, i32 4, !dbg !12415
  store i8 0, i8* %hob_nsect, align 1, !dbg !12416
  %40 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12417
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %40, i32 0, i32 8, !dbg !12418
  %41 = load i32, i32* %hw_tag, align 4, !dbg !12418
  %shl = shl i32 %41, 3, !dbg !12419
  %conv55 = trunc i32 %shl to i8, !dbg !12417
  %42 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12420
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %42, i32 0, i32 9, !dbg !12421
  store i8 %conv55, i8* %nsect, align 8, !dbg !12422
  %43 = load i32, i32* %size, align 4, !dbg !12423
  %div = udiv i32 %43, 512, !dbg !12424
  %shr56 = lshr i32 %div, 8, !dbg !12425
  %conv57 = trunc i32 %shr56 to i8, !dbg !12426
  %44 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12427
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %44, i32 0, i32 3, !dbg !12428
  store i8 %conv57, i8* %hob_feature, align 2, !dbg !12429
  %45 = load i32, i32* %size, align 4, !dbg !12430
  %div58 = udiv i32 %45, 512, !dbg !12431
  %conv59 = trunc i32 %div58 to i8, !dbg !12430
  %46 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12432
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %46, i32 0, i32 8, !dbg !12433
  store i8 %conv59, i8* %feature, align 1, !dbg !12434
  %47 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12435
  %auxiliary = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %47, i32 0, i32 15, !dbg !12436
  store i32 1, i32* %auxiliary, align 8, !dbg !12437
  br label %if.end71, !dbg !12438

if.else:                                          ; preds = %land.lhs.true, %if.end49
  %48 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12439
  %protocol60 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %48, i32 0, i32 1, !dbg !12441
  store i8 2, i8* %protocol60, align 8, !dbg !12442
  %49 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12443
  %hob_feature61 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %49, i32 0, i32 3, !dbg !12444
  store i8 0, i8* %hob_feature61, align 2, !dbg !12445
  %50 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12446
  %feature62 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %50, i32 0, i32 8, !dbg !12447
  store i8 1, i8* %feature62, align 1, !dbg !12448
  %51 = load i32, i32* %size, align 4, !dbg !12449
  %div63 = udiv i32 %51, 512, !dbg !12450
  %shr64 = lshr i32 %div63, 8, !dbg !12451
  %conv65 = trunc i32 %shr64 to i8, !dbg !12452
  %52 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12453
  %hob_nsect66 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %52, i32 0, i32 4, !dbg !12454
  store i8 %conv65, i8* %hob_nsect66, align 1, !dbg !12455
  %53 = load i32, i32* %size, align 4, !dbg !12456
  %div67 = udiv i32 %53, 512, !dbg !12457
  %conv68 = trunc i32 %div67 to i8, !dbg !12456
  %54 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12458
  %nsect69 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %54, i32 0, i32 9, !dbg !12459
  store i8 %conv68, i8* %nsect69, align 8, !dbg !12460
  %55 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12461
  %command70 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %55, i32 0, i32 14, !dbg !12462
  store i8 6, i8* %command70, align 1, !dbg !12463
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then54
  %56 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12464
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %56, i32 0, i32 0, !dbg !12465
  %57 = load i64, i64* %flags, align 8, !dbg !12466
  %or = or i64 %57, 15, !dbg !12466
  store i64 %or, i64* %flags, align 8, !dbg !12466
  %58 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12467
  call void @ata_qc_set_pc_nbytes(%struct.ata_queued_cmd* %58) #10, !dbg !12468
  store i32 0, i32* %retval, align 4, !dbg !12469
  br label %return, !dbg !12469

invalid_fld:                                      ; preds = %if.then37, %if.then33, %if.then26
  call void @llvm.dbg.label(metadata !12470), !dbg !12471
  %59 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12472
  %60 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12473
  %61 = load i16, i16* %fp, align 2, !dbg !12474
  %62 = load i8, i8* %bp, align 1, !dbg !12475
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %59, %struct.scsi_cmnd* %60, i16 zeroext %61, i8 zeroext %62) #10, !dbg !12476
  store i32 1, i32* %retval, align 4, !dbg !12477
  br label %return, !dbg !12477

invalid_param_len:                                ; preds = %if.then48, %if.then41
  call void @llvm.dbg.label(metadata !12478), !dbg !12479
  %63 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12480
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12481
  call void @ata_scsi_set_sense(%struct.ata_device* %63, %struct.scsi_cmnd* %64, i8 zeroext 5, i8 zeroext 26, i8 zeroext 0) #10, !dbg !12482
  store i32 1, i32* %retval, align 4, !dbg !12483
  br label %return, !dbg !12483

invalid_opcode:                                   ; preds = %if.then16, %if.then
  call void @llvm.dbg.label(metadata !12484), !dbg !12485
  %65 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12486
  %66 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12487
  call void @ata_scsi_set_sense(%struct.ata_device* %65, %struct.scsi_cmnd* %66, i8 zeroext 5, i8 zeroext 32, i8 zeroext 0) #10, !dbg !12488
  store i32 1, i32* %retval, align 4, !dbg !12489
  br label %return, !dbg !12489

return:                                           ; preds = %invalid_opcode, %invalid_param_len, %invalid_fld, %if.end71
  %67 = load i32, i32* %retval, align 4, !dbg !12490
  ret i32 %67, !dbg !12490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_try_flush_cache(%struct.ata_device* %dev) #0 !dbg !12491 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12494, metadata !DIExpression()), !dbg !12495
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12496
  %1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 27, !dbg !12497
  %id = bitcast %union.anon.90* %1 to [256 x i16]*, !dbg !12497
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !12496
  %call = call zeroext i1 @ata_id_wcache_enabled(i16* %arraydecay) #10, !dbg !12498
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !12499

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12500
  %3 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 27, !dbg !12501
  %id1 = bitcast %union.anon.90* %3 to [256 x i16]*, !dbg !12501
  %arraydecay2 = getelementptr inbounds [256 x i16], [256 x i16]* %id1, i64 0, i64 0, !dbg !12500
  %call3 = call zeroext i1 @ata_id_has_flush(i16* %arraydecay2) #10, !dbg !12502
  br i1 %call3, label %lor.end, label %lor.rhs, !dbg !12503

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12504
  %5 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 27, !dbg !12505
  %id4 = bitcast %union.anon.90* %5 to [256 x i16]*, !dbg !12505
  %arraydecay5 = getelementptr inbounds [256 x i16], [256 x i16]* %id4, i64 0, i64 0, !dbg !12504
  %call6 = call zeroext i1 @ata_id_has_flush_ext(i16* %arraydecay5) #10, !dbg !12506
  br label %lor.end, !dbg !12503

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %call6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !12503
  ret i32 %lor.ext, !dbg !12507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_flush_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !12508 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !12509, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !12511, metadata !DIExpression()), !dbg !12512
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12513
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !12514
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !12512
  %1 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12515
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %1, i32 0, i32 0, !dbg !12516
  %2 = load i64, i64* %flags, align 8, !dbg !12517
  %or = or i64 %2, 4, !dbg !12517
  store i64 %or, i64* %flags, align 8, !dbg !12517
  %3 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12518
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %3, i32 0, i32 1, !dbg !12519
  store i8 0, i8* %protocol, align 8, !dbg !12520
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12521
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 1, !dbg !12523
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12523
  %flags2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 3, !dbg !12524
  %6 = load i64, i64* %flags2, align 16, !dbg !12524
  %and = and i64 %6, 16, !dbg !12525
  %tobool = icmp ne i64 %and, 0, !dbg !12525
  br i1 %tobool, label %if.then, label %if.else, !dbg !12526

if.then:                                          ; preds = %entry
  %7 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12527
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %7, i32 0, i32 14, !dbg !12528
  store i8 -22, i8* %command, align 1, !dbg !12529
  br label %if.end, !dbg !12527

if.else:                                          ; preds = %entry
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12530
  %command3 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 14, !dbg !12531
  store i8 -25, i8* %command3, align 1, !dbg !12532
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12533
  %flags4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 6, !dbg !12534
  %10 = load i64, i64* %flags4, align 8, !dbg !12535
  %or5 = or i64 %10, 8, !dbg !12535
  store i64 %or5, i64* %flags4, align 8, !dbg !12535
  ret i32 0, !dbg !12536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_verify_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !12537 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %dev_sectors = alloca i64, align 8
  %cdb = alloca i8*, align 8
  %block = alloca i64, align 8
  %n_block = alloca i32, align 4
  %fp = alloca i16, align 2
  %sect = alloca i32, align 4
  %head = alloca i32, align 4
  %cyl = alloca i32, align 4
  %track = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !12538, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !12540, metadata !DIExpression()), !dbg !12541
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12542
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !12543
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !12543
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !12541
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !12544, metadata !DIExpression()), !dbg !12545
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12546
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 4, !dbg !12547
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !12545
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12548, metadata !DIExpression()), !dbg !12549
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12550
  %dev2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 1, !dbg !12551
  %4 = load %struct.ata_device*, %struct.ata_device** %dev2, align 8, !dbg !12551
  store %struct.ata_device* %4, %struct.ata_device** %dev, align 8, !dbg !12549
  call void @llvm.dbg.declare(metadata i64* %dev_sectors, metadata !12552, metadata !DIExpression()), !dbg !12553
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12554
  %dev3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 1, !dbg !12555
  %6 = load %struct.ata_device*, %struct.ata_device** %dev3, align 8, !dbg !12555
  %n_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 9, !dbg !12556
  %7 = load i64, i64* %n_sectors, align 16, !dbg !12556
  store i64 %7, i64* %dev_sectors, align 8, !dbg !12553
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !12557, metadata !DIExpression()), !dbg !12558
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12559
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 14, !dbg !12560
  %9 = load i8*, i8** %cmnd, align 8, !dbg !12560
  store i8* %9, i8** %cdb, align 8, !dbg !12558
  call void @llvm.dbg.declare(metadata i64* %block, metadata !12561, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.declare(metadata i32* %n_block, metadata !12563, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !12565, metadata !DIExpression()), !dbg !12566
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12567
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 0, !dbg !12568
  %11 = load i64, i64* %flags, align 8, !dbg !12569
  %or = or i64 %11, 6, !dbg !12569
  store i64 %or, i64* %flags, align 8, !dbg !12569
  %12 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12570
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %12, i32 0, i32 1, !dbg !12571
  store i8 0, i8* %protocol, align 8, !dbg !12572
  %13 = load i8*, i8** %cdb, align 8, !dbg !12573
  %arrayidx = getelementptr i8, i8* %13, i64 0, !dbg !12573
  %14 = load i8, i8* %arrayidx, align 1, !dbg !12573
  %conv = zext i8 %14 to i32, !dbg !12573
  %cmp = icmp eq i32 %conv, 47, !dbg !12575
  br i1 %cmp, label %if.then, label %if.else, !dbg !12576

if.then:                                          ; preds = %entry
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12577
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 12, !dbg !12580
  %16 = load i16, i16* %cmd_len, align 4, !dbg !12580
  %conv5 = zext i16 %16 to i32, !dbg !12577
  %cmp6 = icmp slt i32 %conv5, 10, !dbg !12581
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !12582

if.then8:                                         ; preds = %if.then
  store i16 9, i16* %fp, align 2, !dbg !12583
  br label %invalid_fld, !dbg !12585

if.end:                                           ; preds = %if.then
  %17 = load i8*, i8** %cdb, align 8, !dbg !12586
  call void @scsi_10_lba_len(i8* %17, i64* %block, i32* %n_block) #10, !dbg !12587
  br label %if.end22, !dbg !12588

if.else:                                          ; preds = %entry
  %18 = load i8*, i8** %cdb, align 8, !dbg !12589
  %arrayidx9 = getelementptr i8, i8* %18, i64 0, !dbg !12589
  %19 = load i8, i8* %arrayidx9, align 1, !dbg !12589
  %conv10 = zext i8 %19 to i32, !dbg !12589
  %cmp11 = icmp eq i32 %conv10, 143, !dbg !12591
  br i1 %cmp11, label %if.then13, label %if.else20, !dbg !12592

if.then13:                                        ; preds = %if.else
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12593
  %cmd_len14 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 12, !dbg !12596
  %21 = load i16, i16* %cmd_len14, align 4, !dbg !12596
  %conv15 = zext i16 %21 to i32, !dbg !12593
  %cmp16 = icmp slt i32 %conv15, 16, !dbg !12597
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !12598

if.then18:                                        ; preds = %if.then13
  store i16 15, i16* %fp, align 2, !dbg !12599
  br label %invalid_fld, !dbg !12601

if.end19:                                         ; preds = %if.then13
  %22 = load i8*, i8** %cdb, align 8, !dbg !12602
  call void @scsi_16_lba_len(i8* %22, i64* %block, i32* %n_block) #10, !dbg !12603
  br label %if.end21, !dbg !12604

if.else20:                                        ; preds = %if.else
  store i16 0, i16* %fp, align 2, !dbg !12605
  br label %invalid_fld, !dbg !12607

if.end21:                                         ; preds = %if.end19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %23 = load i32, i32* %n_block, align 4, !dbg !12608
  %tobool = icmp ne i32 %23, 0, !dbg !12608
  br i1 %tobool, label %if.end24, label %if.then23, !dbg !12610

if.then23:                                        ; preds = %if.end22
  br label %nothing_to_do, !dbg !12611

if.end24:                                         ; preds = %if.end22
  %24 = load i64, i64* %block, align 8, !dbg !12612
  %25 = load i64, i64* %dev_sectors, align 8, !dbg !12614
  %cmp25 = icmp uge i64 %24, %25, !dbg !12615
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !12616

if.then27:                                        ; preds = %if.end24
  br label %out_of_range, !dbg !12617

if.end28:                                         ; preds = %if.end24
  %26 = load i64, i64* %block, align 8, !dbg !12618
  %27 = load i32, i32* %n_block, align 4, !dbg !12620
  %conv29 = zext i32 %27 to i64, !dbg !12620
  %add = add i64 %26, %conv29, !dbg !12621
  %28 = load i64, i64* %dev_sectors, align 8, !dbg !12622
  %cmp30 = icmp ugt i64 %add, %28, !dbg !12623
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !12624

if.then32:                                        ; preds = %if.end28
  br label %out_of_range, !dbg !12625

if.end33:                                         ; preds = %if.end28
  %29 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12626
  %flags34 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %29, i32 0, i32 3, !dbg !12628
  %30 = load i64, i64* %flags34, align 16, !dbg !12628
  %and = and i64 %30, 1, !dbg !12629
  %tobool35 = icmp ne i64 %and, 0, !dbg !12629
  br i1 %tobool35, label %if.then36, label %if.else84, !dbg !12630

if.then36:                                        ; preds = %if.end33
  %31 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12631
  %flags37 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %31, i32 0, i32 0, !dbg !12633
  %32 = load i64, i64* %flags37, align 8, !dbg !12634
  %or38 = or i64 %32, 16, !dbg !12634
  store i64 %or38, i64* %flags37, align 8, !dbg !12634
  %33 = load i64, i64* %block, align 8, !dbg !12635
  %34 = load i32, i32* %n_block, align 4, !dbg !12637
  %call = call zeroext i1 @lba_28_ok(i64 %33, i32 %34) #10, !dbg !12638
  br i1 %call, label %if.then39, label %if.else44, !dbg !12639

if.then39:                                        ; preds = %if.then36
  %35 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12640
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %35, i32 0, i32 14, !dbg !12642
  store i8 64, i8* %command, align 1, !dbg !12643
  %36 = load i64, i64* %block, align 8, !dbg !12644
  %shr = lshr i64 %36, 24, !dbg !12645
  %and40 = and i64 %shr, 15, !dbg !12646
  %37 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12647
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %37, i32 0, i32 13, !dbg !12648
  %38 = load i8, i8* %device, align 4, !dbg !12649
  %conv41 = zext i8 %38 to i64, !dbg !12649
  %or42 = or i64 %conv41, %and40, !dbg !12649
  %conv43 = trunc i64 %or42 to i8, !dbg !12649
  store i8 %conv43, i8* %device, align 4, !dbg !12649
  br label %if.end69, !dbg !12650

if.else44:                                        ; preds = %if.then36
  %39 = load i64, i64* %block, align 8, !dbg !12651
  %40 = load i32, i32* %n_block, align 4, !dbg !12653
  %call45 = call zeroext i1 @lba_48_ok(i64 %39, i32 %40) #10, !dbg !12654
  br i1 %call45, label %if.then46, label %if.else67, !dbg !12655

if.then46:                                        ; preds = %if.else44
  %41 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12656
  %flags47 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %41, i32 0, i32 3, !dbg !12659
  %42 = load i64, i64* %flags47, align 16, !dbg !12659
  %and48 = and i64 %42, 2, !dbg !12660
  %tobool49 = icmp ne i64 %and48, 0, !dbg !12660
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !12661

if.then50:                                        ; preds = %if.then46
  br label %out_of_range, !dbg !12662

if.end51:                                         ; preds = %if.then46
  %43 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12663
  %flags52 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %43, i32 0, i32 0, !dbg !12664
  %44 = load i64, i64* %flags52, align 8, !dbg !12665
  %or53 = or i64 %44, 1, !dbg !12665
  store i64 %or53, i64* %flags52, align 8, !dbg !12665
  %45 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12666
  %command54 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %45, i32 0, i32 14, !dbg !12667
  store i8 66, i8* %command54, align 1, !dbg !12668
  %46 = load i32, i32* %n_block, align 4, !dbg !12669
  %shr55 = lshr i32 %46, 8, !dbg !12670
  %and56 = and i32 %shr55, 255, !dbg !12671
  %conv57 = trunc i32 %and56 to i8, !dbg !12672
  %47 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12673
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %47, i32 0, i32 4, !dbg !12674
  store i8 %conv57, i8* %hob_nsect, align 1, !dbg !12675
  %48 = load i64, i64* %block, align 8, !dbg !12676
  %shr58 = lshr i64 %48, 40, !dbg !12677
  %and59 = and i64 %shr58, 255, !dbg !12678
  %conv60 = trunc i64 %and59 to i8, !dbg !12679
  %49 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12680
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %49, i32 0, i32 7, !dbg !12681
  store i8 %conv60, i8* %hob_lbah, align 2, !dbg !12682
  %50 = load i64, i64* %block, align 8, !dbg !12683
  %shr61 = lshr i64 %50, 32, !dbg !12684
  %and62 = and i64 %shr61, 255, !dbg !12685
  %conv63 = trunc i64 %and62 to i8, !dbg !12686
  %51 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12687
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %51, i32 0, i32 6, !dbg !12688
  store i8 %conv63, i8* %hob_lbam, align 1, !dbg !12689
  %52 = load i64, i64* %block, align 8, !dbg !12690
  %shr64 = lshr i64 %52, 24, !dbg !12691
  %and65 = and i64 %shr64, 255, !dbg !12692
  %conv66 = trunc i64 %and65 to i8, !dbg !12693
  %53 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12694
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %53, i32 0, i32 5, !dbg !12695
  store i8 %conv66, i8* %hob_lbal, align 4, !dbg !12696
  br label %if.end68, !dbg !12697

if.else67:                                        ; preds = %if.else44
  br label %out_of_range, !dbg !12698

if.end68:                                         ; preds = %if.end51
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then39
  %54 = load i32, i32* %n_block, align 4, !dbg !12699
  %and70 = and i32 %54, 255, !dbg !12700
  %conv71 = trunc i32 %and70 to i8, !dbg !12699
  %55 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12701
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %55, i32 0, i32 9, !dbg !12702
  store i8 %conv71, i8* %nsect, align 8, !dbg !12703
  %56 = load i64, i64* %block, align 8, !dbg !12704
  %shr72 = lshr i64 %56, 16, !dbg !12705
  %and73 = and i64 %shr72, 255, !dbg !12706
  %conv74 = trunc i64 %and73 to i8, !dbg !12707
  %57 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12708
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %57, i32 0, i32 12, !dbg !12709
  store i8 %conv74, i8* %lbah, align 1, !dbg !12710
  %58 = load i64, i64* %block, align 8, !dbg !12711
  %shr75 = lshr i64 %58, 8, !dbg !12712
  %and76 = and i64 %shr75, 255, !dbg !12713
  %conv77 = trunc i64 %and76 to i8, !dbg !12714
  %59 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12715
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %59, i32 0, i32 11, !dbg !12716
  store i8 %conv77, i8* %lbam, align 2, !dbg !12717
  %60 = load i64, i64* %block, align 8, !dbg !12718
  %and78 = and i64 %60, 255, !dbg !12719
  %conv79 = trunc i64 %and78 to i8, !dbg !12718
  %61 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12720
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %61, i32 0, i32 10, !dbg !12721
  store i8 %conv79, i8* %lbal, align 1, !dbg !12722
  %62 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12723
  %device80 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %62, i32 0, i32 13, !dbg !12724
  %63 = load i8, i8* %device80, align 4, !dbg !12725
  %conv81 = zext i8 %63 to i32, !dbg !12725
  %or82 = or i32 %conv81, 64, !dbg !12725
  %conv83 = trunc i32 %or82 to i8, !dbg !12725
  store i8 %conv83, i8* %device80, align 4, !dbg !12725
  br label %if.end125, !dbg !12726

if.else84:                                        ; preds = %if.end33
  call void @llvm.dbg.declare(metadata i32* %sect, metadata !12727, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.declare(metadata i32* %head, metadata !12730, metadata !DIExpression()), !dbg !12731
  call void @llvm.dbg.declare(metadata i32* %cyl, metadata !12732, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.declare(metadata i32* %track, metadata !12734, metadata !DIExpression()), !dbg !12735
  %64 = load i64, i64* %block, align 8, !dbg !12736
  %65 = load i32, i32* %n_block, align 4, !dbg !12738
  %call85 = call zeroext i1 @lba_28_ok(i64 %64, i32 %65) #10, !dbg !12739
  br i1 %call85, label %if.end87, label %if.then86, !dbg !12740

if.then86:                                        ; preds = %if.else84
  br label %out_of_range, !dbg !12741

if.end87:                                         ; preds = %if.else84
  %66 = load i64, i64* %block, align 8, !dbg !12742
  %conv88 = trunc i64 %66 to i32, !dbg !12743
  %67 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12744
  %sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %67, i32 0, i32 25, !dbg !12745
  %68 = load i16, i16* %sectors, align 4, !dbg !12745
  %conv89 = zext i16 %68 to i32, !dbg !12744
  %div = udiv i32 %conv88, %conv89, !dbg !12746
  store i32 %div, i32* %track, align 4, !dbg !12747
  %69 = load i32, i32* %track, align 4, !dbg !12748
  %70 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12749
  %heads = getelementptr inbounds %struct.ata_device, %struct.ata_device* %70, i32 0, i32 24, !dbg !12750
  %71 = load i16, i16* %heads, align 2, !dbg !12750
  %conv90 = zext i16 %71 to i32, !dbg !12749
  %div91 = udiv i32 %69, %conv90, !dbg !12751
  store i32 %div91, i32* %cyl, align 4, !dbg !12752
  %72 = load i32, i32* %track, align 4, !dbg !12753
  %73 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12754
  %heads92 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %73, i32 0, i32 24, !dbg !12755
  %74 = load i16, i16* %heads92, align 2, !dbg !12755
  %conv93 = zext i16 %74 to i32, !dbg !12754
  %rem = urem i32 %72, %conv93, !dbg !12756
  store i32 %rem, i32* %head, align 4, !dbg !12757
  %75 = load i64, i64* %block, align 8, !dbg !12758
  %conv94 = trunc i64 %75 to i32, !dbg !12759
  %76 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12760
  %sectors95 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %76, i32 0, i32 25, !dbg !12761
  %77 = load i16, i16* %sectors95, align 4, !dbg !12761
  %conv96 = zext i16 %77 to i32, !dbg !12760
  %rem97 = urem i32 %conv94, %conv96, !dbg !12762
  %add98 = add i32 %rem97, 1, !dbg !12763
  store i32 %add98, i32* %sect, align 4, !dbg !12764
  %78 = load i32, i32* %cyl, align 4, !dbg !12765
  %shr99 = lshr i32 %78, 16, !dbg !12767
  %tobool100 = icmp ne i32 %shr99, 0, !dbg !12767
  br i1 %tobool100, label %if.then108, label %lor.lhs.false, !dbg !12768

lor.lhs.false:                                    ; preds = %if.end87
  %79 = load i32, i32* %head, align 4, !dbg !12769
  %shr101 = lshr i32 %79, 4, !dbg !12770
  %tobool102 = icmp ne i32 %shr101, 0, !dbg !12770
  br i1 %tobool102, label %if.then108, label %lor.lhs.false103, !dbg !12771

lor.lhs.false103:                                 ; preds = %lor.lhs.false
  %80 = load i32, i32* %sect, align 4, !dbg !12772
  %shr104 = lshr i32 %80, 8, !dbg !12773
  %tobool105 = icmp ne i32 %shr104, 0, !dbg !12773
  br i1 %tobool105, label %if.then108, label %lor.lhs.false106, !dbg !12774

lor.lhs.false106:                                 ; preds = %lor.lhs.false103
  %81 = load i32, i32* %sect, align 4, !dbg !12775
  %tobool107 = icmp ne i32 %81, 0, !dbg !12775
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !12776

if.then108:                                       ; preds = %lor.lhs.false106, %lor.lhs.false103, %lor.lhs.false, %if.end87
  br label %out_of_range, !dbg !12777

if.end109:                                        ; preds = %lor.lhs.false106
  %82 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12778
  %command110 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %82, i32 0, i32 14, !dbg !12779
  store i8 64, i8* %command110, align 1, !dbg !12780
  %83 = load i32, i32* %n_block, align 4, !dbg !12781
  %and111 = and i32 %83, 255, !dbg !12782
  %conv112 = trunc i32 %and111 to i8, !dbg !12781
  %84 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12783
  %nsect113 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %84, i32 0, i32 9, !dbg !12784
  store i8 %conv112, i8* %nsect113, align 8, !dbg !12785
  %85 = load i32, i32* %sect, align 4, !dbg !12786
  %conv114 = trunc i32 %85 to i8, !dbg !12786
  %86 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12787
  %lbal115 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %86, i32 0, i32 10, !dbg !12788
  store i8 %conv114, i8* %lbal115, align 1, !dbg !12789
  %87 = load i32, i32* %cyl, align 4, !dbg !12790
  %conv116 = trunc i32 %87 to i8, !dbg !12790
  %88 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12791
  %lbam117 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %88, i32 0, i32 11, !dbg !12792
  store i8 %conv116, i8* %lbam117, align 2, !dbg !12793
  %89 = load i32, i32* %cyl, align 4, !dbg !12794
  %shr118 = lshr i32 %89, 8, !dbg !12795
  %conv119 = trunc i32 %shr118 to i8, !dbg !12794
  %90 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12796
  %lbah120 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %90, i32 0, i32 12, !dbg !12797
  store i8 %conv119, i8* %lbah120, align 1, !dbg !12798
  %91 = load i32, i32* %head, align 4, !dbg !12799
  %92 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12800
  %device121 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %92, i32 0, i32 13, !dbg !12801
  %93 = load i8, i8* %device121, align 4, !dbg !12802
  %conv122 = zext i8 %93 to i32, !dbg !12802
  %or123 = or i32 %conv122, %91, !dbg !12802
  %conv124 = trunc i32 %or123 to i8, !dbg !12802
  store i8 %conv124, i8* %device121, align 4, !dbg !12802
  br label %if.end125

if.end125:                                        ; preds = %if.end109, %if.end69
  store i32 0, i32* %retval, align 4, !dbg !12803
  br label %return, !dbg !12803

invalid_fld:                                      ; preds = %if.else20, %if.then18, %if.then8
  call void @llvm.dbg.label(metadata !12804), !dbg !12805
  %94 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12806
  %dev126 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %94, i32 0, i32 1, !dbg !12807
  %95 = load %struct.ata_device*, %struct.ata_device** %dev126, align 8, !dbg !12807
  %96 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12808
  %97 = load i16, i16* %fp, align 2, !dbg !12809
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %95, %struct.scsi_cmnd* %96, i16 zeroext %97, i8 zeroext -1) #10, !dbg !12810
  store i32 1, i32* %retval, align 4, !dbg !12811
  br label %return, !dbg !12811

out_of_range:                                     ; preds = %if.then108, %if.then86, %if.else67, %if.then50, %if.then32, %if.then27
  call void @llvm.dbg.label(metadata !12812), !dbg !12813
  %98 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12814
  %dev127 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %98, i32 0, i32 1, !dbg !12815
  %99 = load %struct.ata_device*, %struct.ata_device** %dev127, align 8, !dbg !12815
  %100 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12816
  call void @ata_scsi_set_sense(%struct.ata_device* %99, %struct.scsi_cmnd* %100, i8 zeroext 5, i8 zeroext 33, i8 zeroext 0) #10, !dbg !12817
  store i32 1, i32* %retval, align 4, !dbg !12818
  br label %return, !dbg !12818

nothing_to_do:                                    ; preds = %if.then23
  call void @llvm.dbg.label(metadata !12819), !dbg !12820
  %101 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12821
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %101, i32 0, i32 24, !dbg !12822
  store i32 0, i32* %result, align 8, !dbg !12823
  store i32 1, i32* %retval, align 4, !dbg !12824
  br label %return, !dbg !12824

return:                                           ; preds = %nothing_to_do, %out_of_range, %invalid_fld, %if.end125
  %102 = load i32, i32* %retval, align 4, !dbg !12825
  ret i32 %102, !dbg !12825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_pass_thru(%struct.ata_queued_cmd* %qc) #0 !dbg !12826 {
entry:
  %p.addr.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i.i, metadata !12827, metadata !DIExpression()), !dbg !12834
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !12850, metadata !DIExpression()), !dbg !12851
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !12852, metadata !DIExpression()), !dbg !12853
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %cdb = alloca i8*, align 8
  %fp = alloca i16, align 2
  %cdb_offset = alloca i16, align 2
  %multi_count = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !12854, metadata !DIExpression()), !dbg !12855
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !12856, metadata !DIExpression()), !dbg !12857
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12858
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !12859
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !12857
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !12860, metadata !DIExpression()), !dbg !12861
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12862
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 2, !dbg !12863
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !12863
  store %struct.scsi_cmnd* %2, %struct.scsi_cmnd** %scmd, align 8, !dbg !12861
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12864, metadata !DIExpression()), !dbg !12865
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12866
  %dev2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 1, !dbg !12867
  %4 = load %struct.ata_device*, %struct.ata_device** %dev2, align 8, !dbg !12867
  store %struct.ata_device* %4, %struct.ata_device** %dev, align 8, !dbg !12865
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !12868, metadata !DIExpression()), !dbg !12869
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !12870
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 14, !dbg !12871
  %6 = load i8*, i8** %cmnd, align 8, !dbg !12871
  store i8* %6, i8** %cdb, align 8, !dbg !12869
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !12872, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.declare(metadata i16* %cdb_offset, metadata !12874, metadata !DIExpression()), !dbg !12875
  store i16 0, i16* %cdb_offset, align 2, !dbg !12875
  %7 = load i8*, i8** %cdb, align 8, !dbg !12876
  %arrayidx = getelementptr i8, i8* %7, i64 0, !dbg !12876
  %8 = load i8, i8* %arrayidx, align 1, !dbg !12876
  %conv = zext i8 %8 to i32, !dbg !12876
  %cmp = icmp eq i32 %conv, 127, !dbg !12878
  br i1 %cmp, label %if.then, label %if.end, !dbg !12879

if.then:                                          ; preds = %entry
  store i16 9, i16* %cdb_offset, align 2, !dbg !12880
  br label %if.end, !dbg !12881

if.end:                                           ; preds = %if.then, %entry
  %9 = load i8*, i8** %cdb, align 8, !dbg !12882
  %10 = load i16, i16* %cdb_offset, align 2, !dbg !12883
  %conv4 = zext i16 %10 to i32, !dbg !12883
  %add = add i32 1, %conv4, !dbg !12884
  %idxprom = sext i32 %add to i64, !dbg !12882
  %arrayidx5 = getelementptr i8, i8* %9, i64 %idxprom, !dbg !12882
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !12882
  %call = call zeroext i8 @ata_scsi_map_proto(i8 zeroext %11) #10, !dbg !12885
  %12 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12886
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %12, i32 0, i32 1, !dbg !12887
  store i8 %call, i8* %protocol, align 8, !dbg !12888
  %13 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12889
  %protocol6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %13, i32 0, i32 1, !dbg !12891
  %14 = load i8, i8* %protocol6, align 8, !dbg !12891
  %conv7 = zext i8 %14 to i32, !dbg !12889
  %cmp8 = icmp eq i32 %conv7, 255, !dbg !12892
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !12893

if.then10:                                        ; preds = %if.end
  store i16 1, i16* %fp, align 2, !dbg !12894
  br label %invalid_fld, !dbg !12896

if.end11:                                         ; preds = %if.end
  %15 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12897
  %protocol12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %15, i32 0, i32 1, !dbg !12899
  %16 = load i8, i8* %protocol12, align 8, !dbg !12899
  %call13 = call zeroext i1 @ata_is_ncq(i8 zeroext %16) #10, !dbg !12900
  br i1 %call13, label %land.lhs.true, label %if.end24, !dbg !12901

land.lhs.true:                                    ; preds = %if.end11
  %17 = load i8*, i8** %cdb, align 8, !dbg !12902
  %18 = load i16, i16* %cdb_offset, align 2, !dbg !12903
  %conv15 = zext i16 %18 to i32, !dbg !12903
  %add16 = add i32 2, %conv15, !dbg !12904
  %idxprom17 = sext i32 %add16 to i64, !dbg !12902
  %arrayidx18 = getelementptr i8, i8* %17, i64 %idxprom17, !dbg !12902
  %19 = load i8, i8* %arrayidx18, align 1, !dbg !12902
  %conv19 = zext i8 %19 to i32, !dbg !12902
  %and = and i32 %conv19, 3, !dbg !12905
  %cmp20 = icmp eq i32 %and, 0, !dbg !12906
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !12907

if.then22:                                        ; preds = %land.lhs.true
  %20 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12908
  %protocol23 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %20, i32 0, i32 1, !dbg !12909
  store i8 4, i8* %protocol23, align 8, !dbg !12910
  br label %if.end24, !dbg !12908

if.end24:                                         ; preds = %if.then22, %land.lhs.true, %if.end11
  %21 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12911
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %21, i32 0, i32 0, !dbg !12912
  %22 = load i64, i64* %flags, align 8, !dbg !12913
  %or = or i64 %22, 16, !dbg !12913
  store i64 %or, i64* %flags, align 8, !dbg !12913
  %23 = load i8*, i8** %cdb, align 8, !dbg !12914
  %arrayidx25 = getelementptr i8, i8* %23, i64 0, !dbg !12914
  %24 = load i8, i8* %arrayidx25, align 1, !dbg !12914
  %conv26 = zext i8 %24 to i32, !dbg !12914
  %cmp27 = icmp eq i32 %conv26, 133, !dbg !12915
  br i1 %cmp27, label %if.then29, label %if.else51, !dbg !12916

if.then29:                                        ; preds = %if.end24
  %25 = load i8*, i8** %cdb, align 8, !dbg !12917
  %arrayidx30 = getelementptr i8, i8* %25, i64 1, !dbg !12917
  %26 = load i8, i8* %arrayidx30, align 1, !dbg !12917
  %conv31 = zext i8 %26 to i32, !dbg !12917
  %and32 = and i32 %conv31, 1, !dbg !12920
  %tobool = icmp ne i32 %and32, 0, !dbg !12920
  br i1 %tobool, label %if.then33, label %if.else, !dbg !12921

if.then33:                                        ; preds = %if.then29
  %27 = load i8*, i8** %cdb, align 8, !dbg !12922
  %arrayidx34 = getelementptr i8, i8* %27, i64 3, !dbg !12922
  %28 = load i8, i8* %arrayidx34, align 1, !dbg !12922
  %29 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12924
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %29, i32 0, i32 3, !dbg !12925
  store i8 %28, i8* %hob_feature, align 2, !dbg !12926
  %30 = load i8*, i8** %cdb, align 8, !dbg !12927
  %arrayidx35 = getelementptr i8, i8* %30, i64 5, !dbg !12927
  %31 = load i8, i8* %arrayidx35, align 1, !dbg !12927
  %32 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12928
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %32, i32 0, i32 4, !dbg !12929
  store i8 %31, i8* %hob_nsect, align 1, !dbg !12930
  %33 = load i8*, i8** %cdb, align 8, !dbg !12931
  %arrayidx36 = getelementptr i8, i8* %33, i64 7, !dbg !12931
  %34 = load i8, i8* %arrayidx36, align 1, !dbg !12931
  %35 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12932
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %35, i32 0, i32 5, !dbg !12933
  store i8 %34, i8* %hob_lbal, align 4, !dbg !12934
  %36 = load i8*, i8** %cdb, align 8, !dbg !12935
  %arrayidx37 = getelementptr i8, i8* %36, i64 9, !dbg !12935
  %37 = load i8, i8* %arrayidx37, align 1, !dbg !12935
  %38 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12936
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %38, i32 0, i32 6, !dbg !12937
  store i8 %37, i8* %hob_lbam, align 1, !dbg !12938
  %39 = load i8*, i8** %cdb, align 8, !dbg !12939
  %arrayidx38 = getelementptr i8, i8* %39, i64 11, !dbg !12939
  %40 = load i8, i8* %arrayidx38, align 1, !dbg !12939
  %41 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12940
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %41, i32 0, i32 7, !dbg !12941
  store i8 %40, i8* %hob_lbah, align 2, !dbg !12942
  %42 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12943
  %flags39 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %42, i32 0, i32 0, !dbg !12944
  %43 = load i64, i64* %flags39, align 8, !dbg !12945
  %or40 = or i64 %43, 1, !dbg !12945
  store i64 %or40, i64* %flags39, align 8, !dbg !12945
  br label %if.end43, !dbg !12946

if.else:                                          ; preds = %if.then29
  %44 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12947
  %flags41 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %44, i32 0, i32 0, !dbg !12948
  %45 = load i64, i64* %flags41, align 8, !dbg !12949
  %and42 = and i64 %45, -2, !dbg !12949
  store i64 %and42, i64* %flags41, align 8, !dbg !12949
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then33
  %46 = load i8*, i8** %cdb, align 8, !dbg !12950
  %arrayidx44 = getelementptr i8, i8* %46, i64 4, !dbg !12950
  %47 = load i8, i8* %arrayidx44, align 1, !dbg !12950
  %48 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12951
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %48, i32 0, i32 8, !dbg !12952
  store i8 %47, i8* %feature, align 1, !dbg !12953
  %49 = load i8*, i8** %cdb, align 8, !dbg !12954
  %arrayidx45 = getelementptr i8, i8* %49, i64 6, !dbg !12954
  %50 = load i8, i8* %arrayidx45, align 1, !dbg !12954
  %51 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12955
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %51, i32 0, i32 9, !dbg !12956
  store i8 %50, i8* %nsect, align 8, !dbg !12957
  %52 = load i8*, i8** %cdb, align 8, !dbg !12958
  %arrayidx46 = getelementptr i8, i8* %52, i64 8, !dbg !12958
  %53 = load i8, i8* %arrayidx46, align 1, !dbg !12958
  %54 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12959
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %54, i32 0, i32 10, !dbg !12960
  store i8 %53, i8* %lbal, align 1, !dbg !12961
  %55 = load i8*, i8** %cdb, align 8, !dbg !12962
  %arrayidx47 = getelementptr i8, i8* %55, i64 10, !dbg !12962
  %56 = load i8, i8* %arrayidx47, align 1, !dbg !12962
  %57 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12963
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %57, i32 0, i32 11, !dbg !12964
  store i8 %56, i8* %lbam, align 2, !dbg !12965
  %58 = load i8*, i8** %cdb, align 8, !dbg !12966
  %arrayidx48 = getelementptr i8, i8* %58, i64 12, !dbg !12966
  %59 = load i8, i8* %arrayidx48, align 1, !dbg !12966
  %60 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12967
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %60, i32 0, i32 12, !dbg !12968
  store i8 %59, i8* %lbah, align 1, !dbg !12969
  %61 = load i8*, i8** %cdb, align 8, !dbg !12970
  %arrayidx49 = getelementptr i8, i8* %61, i64 13, !dbg !12970
  %62 = load i8, i8* %arrayidx49, align 1, !dbg !12970
  %63 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12971
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %63, i32 0, i32 13, !dbg !12972
  store i8 %62, i8* %device, align 4, !dbg !12973
  %64 = load i8*, i8** %cdb, align 8, !dbg !12974
  %arrayidx50 = getelementptr i8, i8* %64, i64 14, !dbg !12974
  %65 = load i8, i8* %arrayidx50, align 1, !dbg !12974
  %66 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12975
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %66, i32 0, i32 14, !dbg !12976
  store i8 %65, i8* %command, align 1, !dbg !12977
  br label %if.end112, !dbg !12978

if.else51:                                        ; preds = %if.end24
  %67 = load i8*, i8** %cdb, align 8, !dbg !12979
  %arrayidx52 = getelementptr i8, i8* %67, i64 0, !dbg !12979
  %68 = load i8, i8* %arrayidx52, align 1, !dbg !12979
  %conv53 = zext i8 %68 to i32, !dbg !12979
  %cmp54 = icmp eq i32 %conv53, 161, !dbg !12980
  br i1 %cmp54, label %if.then56, label %if.else73, !dbg !12981

if.then56:                                        ; preds = %if.else51
  %69 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12982
  %flags57 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %69, i32 0, i32 0, !dbg !12984
  %70 = load i64, i64* %flags57, align 8, !dbg !12985
  %and58 = and i64 %70, -2, !dbg !12985
  store i64 %and58, i64* %flags57, align 8, !dbg !12985
  %71 = load i8*, i8** %cdb, align 8, !dbg !12986
  %arrayidx59 = getelementptr i8, i8* %71, i64 3, !dbg !12986
  %72 = load i8, i8* %arrayidx59, align 1, !dbg !12986
  %73 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12987
  %feature60 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %73, i32 0, i32 8, !dbg !12988
  store i8 %72, i8* %feature60, align 1, !dbg !12989
  %74 = load i8*, i8** %cdb, align 8, !dbg !12990
  %arrayidx61 = getelementptr i8, i8* %74, i64 4, !dbg !12990
  %75 = load i8, i8* %arrayidx61, align 1, !dbg !12990
  %76 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12991
  %nsect62 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %76, i32 0, i32 9, !dbg !12992
  store i8 %75, i8* %nsect62, align 8, !dbg !12993
  %77 = load i8*, i8** %cdb, align 8, !dbg !12994
  %arrayidx63 = getelementptr i8, i8* %77, i64 5, !dbg !12994
  %78 = load i8, i8* %arrayidx63, align 1, !dbg !12994
  %79 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12995
  %lbal64 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %79, i32 0, i32 10, !dbg !12996
  store i8 %78, i8* %lbal64, align 1, !dbg !12997
  %80 = load i8*, i8** %cdb, align 8, !dbg !12998
  %arrayidx65 = getelementptr i8, i8* %80, i64 6, !dbg !12998
  %81 = load i8, i8* %arrayidx65, align 1, !dbg !12998
  %82 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !12999
  %lbam66 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %82, i32 0, i32 11, !dbg !13000
  store i8 %81, i8* %lbam66, align 2, !dbg !13001
  %83 = load i8*, i8** %cdb, align 8, !dbg !13002
  %arrayidx67 = getelementptr i8, i8* %83, i64 7, !dbg !13002
  %84 = load i8, i8* %arrayidx67, align 1, !dbg !13002
  %85 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13003
  %lbah68 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %85, i32 0, i32 12, !dbg !13004
  store i8 %84, i8* %lbah68, align 1, !dbg !13005
  %86 = load i8*, i8** %cdb, align 8, !dbg !13006
  %arrayidx69 = getelementptr i8, i8* %86, i64 8, !dbg !13006
  %87 = load i8, i8* %arrayidx69, align 1, !dbg !13006
  %88 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13007
  %device70 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %88, i32 0, i32 13, !dbg !13008
  store i8 %87, i8* %device70, align 4, !dbg !13009
  %89 = load i8*, i8** %cdb, align 8, !dbg !13010
  %arrayidx71 = getelementptr i8, i8* %89, i64 9, !dbg !13010
  %90 = load i8, i8* %arrayidx71, align 1, !dbg !13010
  %91 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13011
  %command72 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %91, i32 0, i32 14, !dbg !13012
  store i8 %90, i8* %command72, align 1, !dbg !13013
  br label %if.end111, !dbg !13014

if.else73:                                        ; preds = %if.else51
  %92 = load i8*, i8** %cdb, align 8, !dbg !13015
  %arrayidx74 = getelementptr i8, i8* %92, i64 10, !dbg !13015
  %93 = load i8, i8* %arrayidx74, align 1, !dbg !13015
  %conv75 = zext i8 %93 to i32, !dbg !13015
  %and76 = and i32 %conv75, 1, !dbg !13017
  %tobool77 = icmp ne i32 %and76, 0, !dbg !13017
  br i1 %tobool77, label %if.then78, label %if.else91, !dbg !13018

if.then78:                                        ; preds = %if.else73
  %94 = load i8*, i8** %cdb, align 8, !dbg !13019
  %arrayidx79 = getelementptr i8, i8* %94, i64 20, !dbg !13019
  %95 = load i8, i8* %arrayidx79, align 1, !dbg !13019
  %96 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13021
  %hob_feature80 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %96, i32 0, i32 3, !dbg !13022
  store i8 %95, i8* %hob_feature80, align 2, !dbg !13023
  %97 = load i8*, i8** %cdb, align 8, !dbg !13024
  %arrayidx81 = getelementptr i8, i8* %97, i64 22, !dbg !13024
  %98 = load i8, i8* %arrayidx81, align 1, !dbg !13024
  %99 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13025
  %hob_nsect82 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %99, i32 0, i32 4, !dbg !13026
  store i8 %98, i8* %hob_nsect82, align 1, !dbg !13027
  %100 = load i8*, i8** %cdb, align 8, !dbg !13028
  %arrayidx83 = getelementptr i8, i8* %100, i64 16, !dbg !13028
  %101 = load i8, i8* %arrayidx83, align 1, !dbg !13028
  %102 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13029
  %hob_lbal84 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %102, i32 0, i32 5, !dbg !13030
  store i8 %101, i8* %hob_lbal84, align 4, !dbg !13031
  %103 = load i8*, i8** %cdb, align 8, !dbg !13032
  %arrayidx85 = getelementptr i8, i8* %103, i64 15, !dbg !13032
  %104 = load i8, i8* %arrayidx85, align 1, !dbg !13032
  %105 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13033
  %hob_lbam86 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %105, i32 0, i32 6, !dbg !13034
  store i8 %104, i8* %hob_lbam86, align 1, !dbg !13035
  %106 = load i8*, i8** %cdb, align 8, !dbg !13036
  %arrayidx87 = getelementptr i8, i8* %106, i64 14, !dbg !13036
  %107 = load i8, i8* %arrayidx87, align 1, !dbg !13036
  %108 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13037
  %hob_lbah88 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %108, i32 0, i32 7, !dbg !13038
  store i8 %107, i8* %hob_lbah88, align 2, !dbg !13039
  %109 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13040
  %flags89 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %109, i32 0, i32 0, !dbg !13041
  %110 = load i64, i64* %flags89, align 8, !dbg !13042
  %or90 = or i64 %110, 1, !dbg !13042
  store i64 %or90, i64* %flags89, align 8, !dbg !13042
  br label %if.end94, !dbg !13043

if.else91:                                        ; preds = %if.else73
  %111 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13044
  %flags92 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %111, i32 0, i32 0, !dbg !13045
  %112 = load i64, i64* %flags92, align 8, !dbg !13046
  %and93 = and i64 %112, -2, !dbg !13046
  store i64 %and93, i64* %flags92, align 8, !dbg !13046
  br label %if.end94

if.end94:                                         ; preds = %if.else91, %if.then78
  %113 = load i8*, i8** %cdb, align 8, !dbg !13047
  %arrayidx95 = getelementptr i8, i8* %113, i64 21, !dbg !13047
  %114 = load i8, i8* %arrayidx95, align 1, !dbg !13047
  %115 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13048
  %feature96 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %115, i32 0, i32 8, !dbg !13049
  store i8 %114, i8* %feature96, align 1, !dbg !13050
  %116 = load i8*, i8** %cdb, align 8, !dbg !13051
  %arrayidx97 = getelementptr i8, i8* %116, i64 23, !dbg !13051
  %117 = load i8, i8* %arrayidx97, align 1, !dbg !13051
  %118 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13052
  %nsect98 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %118, i32 0, i32 9, !dbg !13053
  store i8 %117, i8* %nsect98, align 8, !dbg !13054
  %119 = load i8*, i8** %cdb, align 8, !dbg !13055
  %arrayidx99 = getelementptr i8, i8* %119, i64 19, !dbg !13055
  %120 = load i8, i8* %arrayidx99, align 1, !dbg !13055
  %121 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13056
  %lbal100 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %121, i32 0, i32 10, !dbg !13057
  store i8 %120, i8* %lbal100, align 1, !dbg !13058
  %122 = load i8*, i8** %cdb, align 8, !dbg !13059
  %arrayidx101 = getelementptr i8, i8* %122, i64 18, !dbg !13059
  %123 = load i8, i8* %arrayidx101, align 1, !dbg !13059
  %124 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13060
  %lbam102 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %124, i32 0, i32 11, !dbg !13061
  store i8 %123, i8* %lbam102, align 2, !dbg !13062
  %125 = load i8*, i8** %cdb, align 8, !dbg !13063
  %arrayidx103 = getelementptr i8, i8* %125, i64 17, !dbg !13063
  %126 = load i8, i8* %arrayidx103, align 1, !dbg !13063
  %127 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13064
  %lbah104 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %127, i32 0, i32 12, !dbg !13065
  store i8 %126, i8* %lbah104, align 1, !dbg !13066
  %128 = load i8*, i8** %cdb, align 8, !dbg !13067
  %arrayidx105 = getelementptr i8, i8* %128, i64 24, !dbg !13067
  %129 = load i8, i8* %arrayidx105, align 1, !dbg !13067
  %130 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13068
  %device106 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %130, i32 0, i32 13, !dbg !13069
  store i8 %129, i8* %device106, align 4, !dbg !13070
  %131 = load i8*, i8** %cdb, align 8, !dbg !13071
  %arrayidx107 = getelementptr i8, i8* %131, i64 25, !dbg !13071
  %132 = load i8, i8* %arrayidx107, align 1, !dbg !13071
  %133 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13072
  %command108 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %133, i32 0, i32 14, !dbg !13073
  store i8 %132, i8* %command108, align 1, !dbg !13074
  %134 = load i8*, i8** %cdb, align 8, !dbg !13075
  %arrayidx109 = getelementptr i8, i8* %134, i64 28, !dbg !13075
  store i8* %arrayidx109, i8** %p.addr.i, align 8
  %135 = load i8*, i8** %p.addr.i, align 8, !dbg !13076
  %136 = bitcast i8* %135 to i32*, !dbg !13077
  store i32* %136, i32** %p.addr.i.i, align 8
  %137 = load i32*, i32** %p.addr.i.i, align 8, !dbg !13078
  store i32* %137, i32** %p.addr.i.i.i, align 8
  %138 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !13079
  %139 = load i32, i32* %138, align 4, !dbg !13079
  %140 = call i1 @llvm.is.constant.i32(i32 %139) #5, !dbg !13079
  br i1 %140, label %cond.true.i.i.i, label %cond.false.i.i.i, !dbg !13079

cond.true.i.i.i:                                  ; preds = %if.end94
  %141 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !13079
  %142 = load i32, i32* %141, align 4, !dbg !13079
  %and.i.i.i = and i32 %142, 255, !dbg !13079
  %shl.i.i.i = shl i32 %and.i.i.i, 24, !dbg !13079
  %143 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !13079
  %144 = load i32, i32* %143, align 4, !dbg !13079
  %and1.i.i.i = and i32 %144, 65280, !dbg !13079
  %shl2.i.i.i = shl i32 %and1.i.i.i, 8, !dbg !13079
  %or.i.i.i = or i32 %shl.i.i.i, %shl2.i.i.i, !dbg !13079
  %145 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !13079
  %146 = load i32, i32* %145, align 4, !dbg !13079
  %and3.i.i.i = and i32 %146, 16711680, !dbg !13079
  %shr.i.i.i = lshr i32 %and3.i.i.i, 8, !dbg !13079
  %or4.i.i.i = or i32 %or.i.i.i, %shr.i.i.i, !dbg !13079
  %147 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !13079
  %148 = load i32, i32* %147, align 4, !dbg !13079
  %and5.i.i.i = and i32 %148, -16777216, !dbg !13079
  %shr6.i.i.i = lshr i32 %and5.i.i.i, 24, !dbg !13079
  %or7.i.i.i = or i32 %or4.i.i.i, %shr6.i.i.i, !dbg !13079
  br label %get_unaligned_be32.exit, !dbg !13079

cond.false.i.i.i:                                 ; preds = %if.end94
  %149 = load i32*, i32** %p.addr.i.i.i, align 8, !dbg !13079
  %150 = load i32, i32* %149, align 4, !dbg !13079
  %call.i.i.i = call i32 @__fswab32(i32 %150) #12, !dbg !13079
  br label %get_unaligned_be32.exit, !dbg !13079

get_unaligned_be32.exit:                          ; preds = %cond.true.i.i.i, %cond.false.i.i.i
  %cond.i.i.i = phi i32 [ %or7.i.i.i, %cond.true.i.i.i ], [ %call.i.i.i, %cond.false.i.i.i ], !dbg !13079
  %151 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13080
  %auxiliary = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %151, i32 0, i32 15, !dbg !13081
  store i32 %cond.i.i.i, i32* %auxiliary, align 8, !dbg !13082
  br label %if.end111

if.end111:                                        ; preds = %get_unaligned_be32.exit, %if.then56
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.end43
  %152 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13083
  %protocol113 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %152, i32 0, i32 1, !dbg !13085
  %153 = load i8, i8* %protocol113, align 8, !dbg !13085
  %call114 = call zeroext i1 @ata_is_ncq(i8 zeroext %153) #10, !dbg !13086
  br i1 %call114, label %if.then115, label %if.end118, !dbg !13087

if.then115:                                       ; preds = %if.end112
  %154 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13088
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %154, i32 0, i32 8, !dbg !13089
  %155 = load i32, i32* %hw_tag, align 4, !dbg !13089
  %shl = shl i32 %155, 3, !dbg !13090
  %conv116 = trunc i32 %shl to i8, !dbg !13088
  %156 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13091
  %nsect117 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %156, i32 0, i32 9, !dbg !13092
  store i8 %conv116, i8* %nsect117, align 8, !dbg !13093
  br label %if.end118, !dbg !13091

if.end118:                                        ; preds = %if.then115, %if.end112
  %157 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13094
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %157, i32 0, i32 1, !dbg !13095
  %158 = load i32, i32* %devno, align 8, !dbg !13095
  %tobool119 = icmp ne i32 %158, 0, !dbg !13094
  br i1 %tobool119, label %cond.true, label %cond.false, !dbg !13094

cond.true:                                        ; preds = %if.end118
  %159 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13096
  %device120 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %159, i32 0, i32 13, !dbg !13097
  %160 = load i8, i8* %device120, align 4, !dbg !13097
  %conv121 = zext i8 %160 to i32, !dbg !13096
  %or122 = or i32 %conv121, 16, !dbg !13098
  br label %cond.end, !dbg !13094

cond.false:                                       ; preds = %if.end118
  %161 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13099
  %device123 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %161, i32 0, i32 13, !dbg !13100
  %162 = load i8, i8* %device123, align 4, !dbg !13100
  %conv124 = zext i8 %162 to i32, !dbg !13099
  %and125 = and i32 %conv124, -17, !dbg !13101
  br label %cond.end, !dbg !13094

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or122, %cond.true ], [ %and125, %cond.false ], !dbg !13094
  %conv126 = trunc i32 %cond to i8, !dbg !13094
  %163 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13102
  %device127 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %163, i32 0, i32 13, !dbg !13103
  store i8 %conv126, i8* %device127, align 4, !dbg !13104
  %164 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13105
  %command128 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %164, i32 0, i32 14, !dbg !13106
  %165 = load i8, i8* %command128, align 1, !dbg !13106
  %conv129 = zext i8 %165 to i32, !dbg !13105
  switch i32 %conv129, label %sw.default [
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 56, label %sw.bb141
    i32 135, label %sw.bb141
    i32 205, label %sw.bb141
    i32 200, label %sw.bb141
    i32 37, label %sw.bb141
    i32 38, label %sw.bb141
    i32 96, label %sw.bb141
    i32 196, label %sw.bb141
    i32 41, label %sw.bb141
    i32 32, label %sw.bb141
    i32 36, label %sw.bb141
    i32 42, label %sw.bb141
    i32 43, label %sw.bb141
    i32 64, label %sw.bb141
    i32 66, label %sw.bb141
    i32 202, label %sw.bb141
    i32 53, label %sw.bb141
    i32 61, label %sw.bb141
    i32 54, label %sw.bb141
    i32 62, label %sw.bb141
    i32 97, label %sw.bb141
    i32 197, label %sw.bb141
    i32 57, label %sw.bb141
    i32 206, label %sw.bb141
    i32 48, label %sw.bb141
    i32 52, label %sw.bb141
    i32 58, label %sw.bb141
    i32 59, label %sw.bb141
  ], !dbg !13107

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end, %cond.end
  %166 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13108
  %protocol130 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %166, i32 0, i32 1, !dbg !13111
  %167 = load i8, i8* %protocol130, align 8, !dbg !13111
  %conv131 = zext i8 %167 to i32, !dbg !13108
  %cmp132 = icmp ne i32 %conv131, 1, !dbg !13112
  br i1 %cmp132, label %if.then138, label %lor.lhs.false, !dbg !13113

lor.lhs.false:                                    ; preds = %sw.bb
  %168 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13114
  %nsect134 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %168, i32 0, i32 9, !dbg !13115
  %169 = load i8, i8* %nsect134, align 8, !dbg !13115
  %conv135 = zext i8 %169 to i32, !dbg !13114
  %cmp136 = icmp ne i32 %conv135, 1, !dbg !13116
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !13117

if.then138:                                       ; preds = %lor.lhs.false, %sw.bb
  store i16 1, i16* %fp, align 2, !dbg !13118
  br label %invalid_fld, !dbg !13120

if.end139:                                        ; preds = %lor.lhs.false
  %170 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13121
  %call140 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %170) #10, !dbg !13122
  %171 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13123
  %sect_size = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %171, i32 0, i32 12, !dbg !13124
  store i32 %call140, i32* %sect_size, align 4, !dbg !13125
  br label %sw.epilog, !dbg !13126

sw.bb141:                                         ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %172 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13127
  %device142 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %172, i32 0, i32 1, !dbg !13128
  %173 = load %struct.scsi_device*, %struct.scsi_device** %device142, align 8, !dbg !13128
  %sector_size = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %173, i32 0, i32 20, !dbg !13129
  %174 = load i32, i32* %sector_size, align 4, !dbg !13129
  %175 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13130
  %sect_size143 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %175, i32 0, i32 12, !dbg !13131
  store i32 %174, i32* %sect_size143, align 4, !dbg !13132
  br label %sw.epilog, !dbg !13133

sw.default:                                       ; preds = %cond.end
  %176 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13134
  %sect_size144 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %176, i32 0, i32 12, !dbg !13135
  store i32 512, i32* %sect_size144, align 4, !dbg !13136
  br label %sw.epilog, !dbg !13137

sw.epilog:                                        ; preds = %sw.default, %sw.bb141, %if.end139
  %177 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13138
  %flags145 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %177, i32 0, i32 0, !dbg !13139
  %178 = load i64, i64* %flags145, align 8, !dbg !13140
  %or146 = or i64 %178, 6, !dbg !13140
  store i64 %or146, i64* %flags145, align 8, !dbg !13140
  %179 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13141
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %179, i32 0, i32 13, !dbg !13143
  %180 = load i32, i32* %sc_data_direction, align 8, !dbg !13143
  %cmp147 = icmp eq i32 %180, 1, !dbg !13144
  br i1 %cmp147, label %if.then149, label %if.end152, !dbg !13145

if.then149:                                       ; preds = %sw.epilog
  %181 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13146
  %flags150 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %181, i32 0, i32 0, !dbg !13147
  %182 = load i64, i64* %flags150, align 8, !dbg !13148
  %or151 = or i64 %182, 8, !dbg !13148
  store i64 %or151, i64* %flags150, align 8, !dbg !13148
  br label %if.end152, !dbg !13146

if.end152:                                        ; preds = %if.then149, %sw.epilog
  %183 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13149
  %flags153 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %183, i32 0, i32 6, !dbg !13150
  %184 = load i64, i64* %flags153, align 8, !dbg !13151
  %or154 = or i64 %184, 80, !dbg !13151
  store i64 %or154, i64* %flags153, align 8, !dbg !13151
  %185 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13152
  call void @ata_qc_set_pc_nbytes(%struct.ata_queued_cmd* %185) #10, !dbg !13153
  %186 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13154
  %protocol155 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %186, i32 0, i32 1, !dbg !13156
  %187 = load i8, i8* %protocol155, align 8, !dbg !13156
  %conv156 = zext i8 %187 to i32, !dbg !13154
  %cmp157 = icmp eq i32 %conv156, 2, !dbg !13157
  br i1 %cmp157, label %land.lhs.true159, label %if.end164, !dbg !13158

land.lhs.true159:                                 ; preds = %if.end152
  %188 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13159
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %188, i32 0, i32 14, !dbg !13160
  %189 = load i8, i8* %dma_mode, align 1, !dbg !13160
  %conv160 = zext i8 %189 to i32, !dbg !13159
  %cmp161 = icmp eq i32 %conv160, 0, !dbg !13161
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !13162

if.then163:                                       ; preds = %land.lhs.true159
  store i16 1, i16* %fp, align 2, !dbg !13163
  br label %invalid_fld, !dbg !13165

if.end164:                                        ; preds = %land.lhs.true159, %if.end152
  %190 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13166
  %protocol165 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %190, i32 0, i32 1, !dbg !13168
  %191 = load i8, i8* %protocol165, align 8, !dbg !13168
  %call166 = call zeroext i1 @ata_is_ncq(i8 zeroext %191) #10, !dbg !13169
  br i1 %call166, label %land.lhs.true168, label %if.end172, !dbg !13170

land.lhs.true168:                                 ; preds = %if.end164
  %192 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13171
  %call169 = call i32 @ata_ncq_enabled(%struct.ata_device* %192) #10, !dbg !13172
  %tobool170 = icmp ne i32 %call169, 0, !dbg !13172
  br i1 %tobool170, label %if.end172, label %if.then171, !dbg !13173

if.then171:                                       ; preds = %land.lhs.true168
  store i16 1, i16* %fp, align 2, !dbg !13174
  br label %invalid_fld, !dbg !13176

if.end172:                                        ; preds = %land.lhs.true168, %if.end164
  %193 = load i8*, i8** %cdb, align 8, !dbg !13177
  %arrayidx173 = getelementptr i8, i8* %193, i64 1, !dbg !13177
  %194 = load i8, i8* %arrayidx173, align 1, !dbg !13177
  %conv174 = zext i8 %194 to i32, !dbg !13177
  %and175 = and i32 %conv174, 224, !dbg !13179
  %tobool176 = icmp ne i32 %and175, 0, !dbg !13179
  br i1 %tobool176, label %land.lhs.true177, label %if.end181, !dbg !13180

land.lhs.true177:                                 ; preds = %if.end172
  %195 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13181
  %call178 = call i32 @is_multi_taskfile(%struct.ata_taskfile* %195) #10, !dbg !13182
  %tobool179 = icmp ne i32 %call178, 0, !dbg !13182
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !13183

if.then180:                                       ; preds = %land.lhs.true177
  store i16 1, i16* %fp, align 2, !dbg !13184
  br label %invalid_fld, !dbg !13186

if.end181:                                        ; preds = %land.lhs.true177, %if.end172
  %196 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13187
  %call182 = call i32 @is_multi_taskfile(%struct.ata_taskfile* %196) #10, !dbg !13189
  %tobool183 = icmp ne i32 %call182, 0, !dbg !13189
  br i1 %tobool183, label %if.then184, label %if.end193, !dbg !13190

if.then184:                                       ; preds = %if.end181
  call void @llvm.dbg.declare(metadata i32* %multi_count, metadata !13191, metadata !DIExpression()), !dbg !13193
  %197 = load i8*, i8** %cdb, align 8, !dbg !13194
  %arrayidx185 = getelementptr i8, i8* %197, i64 1, !dbg !13194
  %198 = load i8, i8* %arrayidx185, align 1, !dbg !13194
  %conv186 = zext i8 %198 to i32, !dbg !13194
  %shr = ashr i32 %conv186, 5, !dbg !13195
  %shl187 = shl i32 1, %shr, !dbg !13196
  store i32 %shl187, i32* %multi_count, align 4, !dbg !13193
  %199 = load i32, i32* %multi_count, align 4, !dbg !13197
  %200 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13199
  %multi_count188 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %200, i32 0, i32 17, !dbg !13200
  %201 = load i32, i32* %multi_count188, align 8, !dbg !13200
  %cmp189 = icmp ne i32 %199, %201, !dbg !13201
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !13202

if.then191:                                       ; preds = %if.then184
  %202 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13203
  %203 = load i32, i32* %multi_count, align 4, !dbg !13203
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %202, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i32 %203) #10, !dbg !13203
  br label %if.end192, !dbg !13203

if.end192:                                        ; preds = %if.then191, %if.then184
  br label %if.end193, !dbg !13204

if.end193:                                        ; preds = %if.end192, %if.end181
  %204 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13205
  %command194 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %204, i32 0, i32 14, !dbg !13207
  %205 = load i8, i8* %command194, align 1, !dbg !13207
  %conv195 = zext i8 %205 to i32, !dbg !13205
  %cmp196 = icmp eq i32 %conv195, 239, !dbg !13208
  br i1 %cmp196, label %land.lhs.true198, label %if.end210, !dbg !13209

land.lhs.true198:                                 ; preds = %if.end193
  %206 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13210
  %feature199 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %206, i32 0, i32 8, !dbg !13211
  %207 = load i8, i8* %feature199, align 1, !dbg !13211
  %conv200 = zext i8 %207 to i32, !dbg !13210
  %cmp201 = icmp eq i32 %conv200, 3, !dbg !13212
  br i1 %cmp201, label %if.then203, label %if.end210, !dbg !13213

if.then203:                                       ; preds = %land.lhs.true198
  %208 = load i8*, i8** %cdb, align 8, !dbg !13214
  %arrayidx204 = getelementptr i8, i8* %208, i64 0, !dbg !13214
  %209 = load i8, i8* %arrayidx204, align 1, !dbg !13214
  %conv205 = zext i8 %209 to i32, !dbg !13214
  %cmp206 = icmp eq i32 %conv205, 133, !dbg !13216
  %210 = zext i1 %cmp206 to i64, !dbg !13217
  %cond208 = select i1 %cmp206, i32 4, i32 3, !dbg !13217
  %conv209 = trunc i32 %cond208 to i16, !dbg !13217
  store i16 %conv209, i16* %fp, align 2, !dbg !13218
  br label %invalid_fld, !dbg !13219

if.end210:                                        ; preds = %land.lhs.true198, %if.end193
  %211 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13220
  %command211 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %211, i32 0, i32 14, !dbg !13222
  %212 = load i8, i8* %command211, align 1, !dbg !13222
  %conv212 = zext i8 %212 to i32, !dbg !13220
  %cmp213 = icmp sge i32 %conv212, 92, !dbg !13223
  br i1 %cmp213, label %land.lhs.true215, label %if.end229, !dbg !13224

land.lhs.true215:                                 ; preds = %if.end210
  %213 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13225
  %command216 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %213, i32 0, i32 14, !dbg !13226
  %214 = load i8, i8* %command216, align 1, !dbg !13226
  %conv217 = zext i8 %214 to i32, !dbg !13225
  %cmp218 = icmp sle i32 %conv217, 95, !dbg !13227
  br i1 %cmp218, label %land.lhs.true220, label %if.end229, !dbg !13228

land.lhs.true220:                                 ; preds = %land.lhs.true215
  %215 = load i32, i32* @libata_allow_tpm, align 4, !dbg !13229
  %tobool221 = icmp ne i32 %215, 0, !dbg !13229
  br i1 %tobool221, label %if.end229, label %if.then222, !dbg !13230

if.then222:                                       ; preds = %land.lhs.true220
  %216 = load i8*, i8** %cdb, align 8, !dbg !13231
  %arrayidx223 = getelementptr i8, i8* %216, i64 0, !dbg !13231
  %217 = load i8, i8* %arrayidx223, align 1, !dbg !13231
  %conv224 = zext i8 %217 to i32, !dbg !13231
  %cmp225 = icmp eq i32 %conv224, 133, !dbg !13233
  %218 = zext i1 %cmp225 to i64, !dbg !13234
  %cond227 = select i1 %cmp225, i32 14, i32 9, !dbg !13234
  %conv228 = trunc i32 %cond227 to i16, !dbg !13234
  store i16 %conv228, i16* %fp, align 2, !dbg !13235
  br label %invalid_fld, !dbg !13236

if.end229:                                        ; preds = %land.lhs.true220, %land.lhs.true215, %if.end210
  store i32 0, i32* %retval, align 4, !dbg !13237
  br label %return, !dbg !13237

invalid_fld:                                      ; preds = %if.then222, %if.then203, %if.then180, %if.then171, %if.then163, %if.then138, %if.then10
  call void @llvm.dbg.label(metadata !13238), !dbg !13239
  %219 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13240
  %220 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13241
  %221 = load i16, i16* %fp, align 2, !dbg !13242
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %219, %struct.scsi_cmnd* %220, i16 zeroext %221, i8 zeroext -1) #10, !dbg !13243
  store i32 1, i32* %retval, align 4, !dbg !13244
  br label %return, !dbg !13244

return:                                           ; preds = %invalid_fld, %if.end229
  %222 = load i32, i32* %retval, align 4, !dbg !13245
  ret i32 %222, !dbg !13245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_var_len_cdb_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !13246 {
entry:
  %p.addr.i.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i.i, metadata !13247, metadata !DIExpression()), !dbg !13253
  %p.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i, metadata !13265, metadata !DIExpression()), !dbg !13266
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !13267, metadata !DIExpression()), !dbg !13268
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cdb = alloca i8*, align 8
  %sa = alloca i16, align 2
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13269, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !13271, metadata !DIExpression()), !dbg !13272
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13273
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !13274
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !13274
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !13272
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !13275, metadata !DIExpression()), !dbg !13276
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13277
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 14, !dbg !13278
  %3 = load i8*, i8** %cmnd, align 8, !dbg !13278
  store i8* %3, i8** %cdb, align 8, !dbg !13276
  call void @llvm.dbg.declare(metadata i16* %sa, metadata !13279, metadata !DIExpression()), !dbg !13280
  %4 = load i8*, i8** %cdb, align 8, !dbg !13281
  %arrayidx = getelementptr i8, i8* %4, i64 8, !dbg !13281
  store i8* %arrayidx, i8** %p.addr.i, align 8
  %5 = load i8*, i8** %p.addr.i, align 8, !dbg !13282
  %6 = bitcast i8* %5 to i16*, !dbg !13283
  store i16* %6, i16** %p.addr.i.i, align 8
  %7 = load i16*, i16** %p.addr.i.i, align 8, !dbg !13284
  store i16* %7, i16** %p.addr.i.i.i, align 8
  %8 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !13285
  %9 = load i16, i16* %8, align 2, !dbg !13285
  %10 = call i1 @llvm.is.constant.i16(i16 %9) #5, !dbg !13285
  br i1 %10, label %cond.true.i.i.i, label %cond.false.i.i.i, !dbg !13285

cond.true.i.i.i:                                  ; preds = %entry
  %11 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !13285
  %12 = load i16, i16* %11, align 2, !dbg !13285
  %conv.i.i.i = zext i16 %12 to i32, !dbg !13285
  %and.i.i.i = and i32 %conv.i.i.i, 255, !dbg !13285
  %shl.i.i.i = shl i32 %and.i.i.i, 8, !dbg !13285
  %13 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !13285
  %14 = load i16, i16* %13, align 2, !dbg !13285
  %conv1.i.i.i = zext i16 %14 to i32, !dbg !13285
  %and2.i.i.i = and i32 %conv1.i.i.i, 65280, !dbg !13285
  %shr.i.i.i = ashr i32 %and2.i.i.i, 8, !dbg !13285
  %or.i.i.i = or i32 %shl.i.i.i, %shr.i.i.i, !dbg !13285
  %conv3.i.i.i = trunc i32 %or.i.i.i to i16, !dbg !13285
  %conv4.i.i.i = zext i16 %conv3.i.i.i to i32, !dbg !13285
  br label %get_unaligned_be16.exit, !dbg !13285

cond.false.i.i.i:                                 ; preds = %entry
  %15 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !13285
  %16 = load i16, i16* %15, align 2, !dbg !13285
  %call.i.i.i = call zeroext i16 @__fswab16(i16 zeroext %16) #12, !dbg !13285
  %conv5.i.i.i = zext i16 %call.i.i.i to i32, !dbg !13285
  br label %get_unaligned_be16.exit, !dbg !13285

get_unaligned_be16.exit:                          ; preds = %cond.true.i.i.i, %cond.false.i.i.i
  %cond.i.i.i = phi i32 [ %conv4.i.i.i, %cond.true.i.i.i ], [ %conv5.i.i.i, %cond.false.i.i.i ], !dbg !13285
  %conv6.i.i.i = trunc i32 %cond.i.i.i to i16, !dbg !13285
  store i16 %conv6.i.i.i, i16* %sa, align 2, !dbg !13280
  %17 = load i16, i16* %sa, align 2, !dbg !13286
  %conv = zext i16 %17 to i32, !dbg !13286
  %cmp = icmp eq i32 %conv, 8176, !dbg !13288
  br i1 %cmp, label %if.then, label %if.end, !dbg !13289

if.then:                                          ; preds = %get_unaligned_be16.exit
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13290
  %call2 = call i32 @ata_scsi_pass_thru(%struct.ata_queued_cmd* %18) #10, !dbg !13291
  store i32 %call2, i32* %retval, align 4, !dbg !13292
  br label %return, !dbg !13292

if.end:                                           ; preds = %get_unaligned_be16.exit
  store i32 1, i32* %retval, align 4, !dbg !13293
  br label %return, !dbg !13293

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !13294
  ret i32 %19, !dbg !13294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_mode_select_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !13295 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cdb = alloca i8*, align 8
  %pg = alloca i8, align 1
  %spg = alloca i8, align 1
  %six_byte = alloca i32, align 4
  %pg_len = alloca i32, align 4
  %hdr_len = alloca i32, align 4
  %bd_len = alloca i32, align 4
  %len = alloca i32, align 4
  %fp = alloca i16, align 2
  %bp = alloca i8, align 1
  %buffer = alloca [64 x i8], align 16
  %p = alloca i8*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13296, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !13298, metadata !DIExpression()), !dbg !13299
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13300
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !13301
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !13301
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !13299
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !13302, metadata !DIExpression()), !dbg !13303
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13304
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 14, !dbg !13305
  %3 = load i8*, i8** %cmnd, align 8, !dbg !13305
  store i8* %3, i8** %cdb, align 8, !dbg !13303
  call void @llvm.dbg.declare(metadata i8* %pg, metadata !13306, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.declare(metadata i8* %spg, metadata !13308, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.declare(metadata i32* %six_byte, metadata !13310, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.declare(metadata i32* %pg_len, metadata !13312, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.declare(metadata i32* %hdr_len, metadata !13314, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.declare(metadata i32* %bd_len, metadata !13316, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13318, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !13320, metadata !DIExpression()), !dbg !13321
  store i16 -1, i16* %fp, align 2, !dbg !13321
  call void @llvm.dbg.declare(metadata i8* %bp, metadata !13322, metadata !DIExpression()), !dbg !13323
  store i8 -1, i8* %bp, align 1, !dbg !13323
  call void @llvm.dbg.declare(metadata [64 x i8]* %buffer, metadata !13324, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13326, metadata !DIExpression()), !dbg !13327
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %buffer, i64 0, i64 0, !dbg !13328
  store i8* %arraydecay, i8** %p, align 8, !dbg !13327
  %4 = load i8*, i8** %cdb, align 8, !dbg !13329
  %arrayidx = getelementptr i8, i8* %4, i64 0, !dbg !13329
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13329
  %conv = zext i8 %5 to i32, !dbg !13329
  %cmp = icmp eq i32 %conv, 21, !dbg !13330
  %conv1 = zext i1 %cmp to i32, !dbg !13330
  store i32 %conv1, i32* %six_byte, align 4, !dbg !13331
  %6 = load i32, i32* %six_byte, align 4, !dbg !13332
  %tobool = icmp ne i32 %6, 0, !dbg !13332
  br i1 %tobool, label %if.then, label %if.else, !dbg !13334

if.then:                                          ; preds = %entry
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13335
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 12, !dbg !13338
  %8 = load i16, i16* %cmd_len, align 4, !dbg !13338
  %conv2 = zext i16 %8 to i32, !dbg !13335
  %cmp3 = icmp slt i32 %conv2, 5, !dbg !13339
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !13340

if.then5:                                         ; preds = %if.then
  store i16 4, i16* %fp, align 2, !dbg !13341
  br label %invalid_fld, !dbg !13343

if.end:                                           ; preds = %if.then
  %9 = load i8*, i8** %cdb, align 8, !dbg !13344
  %arrayidx6 = getelementptr i8, i8* %9, i64 4, !dbg !13344
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !13344
  %conv7 = zext i8 %10 to i32, !dbg !13344
  store i32 %conv7, i32* %len, align 4, !dbg !13345
  store i32 4, i32* %hdr_len, align 4, !dbg !13346
  br label %if.end18, !dbg !13347

if.else:                                          ; preds = %entry
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13348
  %cmd_len8 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 12, !dbg !13351
  %12 = load i16, i16* %cmd_len8, align 4, !dbg !13351
  %conv9 = zext i16 %12 to i32, !dbg !13348
  %cmp10 = icmp slt i32 %conv9, 9, !dbg !13352
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !13353

if.then12:                                        ; preds = %if.else
  store i16 8, i16* %fp, align 2, !dbg !13354
  br label %invalid_fld, !dbg !13356

if.end13:                                         ; preds = %if.else
  %13 = load i8*, i8** %cdb, align 8, !dbg !13357
  %arrayidx14 = getelementptr i8, i8* %13, i64 7, !dbg !13357
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !13357
  %conv15 = zext i8 %14 to i32, !dbg !13357
  %shl = shl i32 %conv15, 8, !dbg !13358
  %15 = load i8*, i8** %cdb, align 8, !dbg !13359
  %arrayidx16 = getelementptr i8, i8* %15, i64 8, !dbg !13359
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !13359
  %conv17 = zext i8 %16 to i32, !dbg !13359
  %add = add i32 %shl, %conv17, !dbg !13360
  store i32 %add, i32* %len, align 4, !dbg !13361
  store i32 8, i32* %hdr_len, align 4, !dbg !13362
  br label %if.end18

if.end18:                                         ; preds = %if.end13, %if.end
  %17 = load i8*, i8** %cdb, align 8, !dbg !13363
  %arrayidx19 = getelementptr i8, i8* %17, i64 1, !dbg !13363
  %18 = load i8, i8* %arrayidx19, align 1, !dbg !13363
  %conv20 = zext i8 %18 to i32, !dbg !13363
  %and = and i32 %conv20, 17, !dbg !13365
  %cmp21 = icmp ne i32 %and, 16, !dbg !13366
  br i1 %cmp21, label %if.then23, label %if.end29, !dbg !13367

if.then23:                                        ; preds = %if.end18
  store i16 1, i16* %fp, align 2, !dbg !13368
  %19 = load i8*, i8** %cdb, align 8, !dbg !13370
  %arrayidx24 = getelementptr i8, i8* %19, i64 1, !dbg !13370
  %20 = load i8, i8* %arrayidx24, align 1, !dbg !13370
  %conv25 = zext i8 %20 to i32, !dbg !13370
  %and26 = and i32 %conv25, 1, !dbg !13371
  %tobool27 = icmp ne i32 %and26, 0, !dbg !13372
  %21 = zext i1 %tobool27 to i64, !dbg !13372
  %cond = select i1 %tobool27, i32 1, i32 5, !dbg !13372
  %conv28 = trunc i32 %cond to i8, !dbg !13372
  store i8 %conv28, i8* %bp, align 1, !dbg !13373
  br label %invalid_fld, !dbg !13374

if.end29:                                         ; preds = %if.end18
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13375
  %call = call i32 @scsi_sg_count(%struct.scsi_cmnd* %22) #10, !dbg !13377
  %tobool30 = icmp ne i32 %call, 0, !dbg !13377
  br i1 %tobool30, label %lor.lhs.false, label %if.then34, !dbg !13378

lor.lhs.false:                                    ; preds = %if.end29
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13379
  %call31 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %23) #10, !dbg !13380
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %call31, i32 0, i32 2, !dbg !13381
  %24 = load i32, i32* %length, align 4, !dbg !13381
  %25 = load i32, i32* %len, align 4, !dbg !13382
  %cmp32 = icmp ult i32 %24, %25, !dbg !13383
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !13384

if.then34:                                        ; preds = %lor.lhs.false, %if.end29
  br label %invalid_param_len, !dbg !13385

if.end35:                                         ; preds = %lor.lhs.false
  %26 = load i32, i32* %len, align 4, !dbg !13386
  %27 = load i32, i32* %hdr_len, align 4, !dbg !13388
  %cmp36 = icmp ult i32 %26, %27, !dbg !13389
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !13390

if.then38:                                        ; preds = %if.end35
  br label %invalid_param_len, !dbg !13391

if.end39:                                         ; preds = %if.end35
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13392
  %call40 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %28) #10, !dbg !13394
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13395
  %call41 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %29) #10, !dbg !13396
  %arraydecay42 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer, i64 0, i64 0, !dbg !13397
  %call43 = call i64 @sg_copy_to_buffer(%struct.scatterlist* %call40, i32 %call41, i8* %arraydecay42, i64 64) #10, !dbg !13398
  %tobool44 = icmp ne i64 %call43, 0, !dbg !13398
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !13399

if.then45:                                        ; preds = %if.end39
  br label %invalid_param_len, !dbg !13400

if.end46:                                         ; preds = %if.end39
  %30 = load i32, i32* %six_byte, align 4, !dbg !13401
  %tobool47 = icmp ne i32 %30, 0, !dbg !13401
  br i1 %tobool47, label %if.then48, label %if.else51, !dbg !13403

if.then48:                                        ; preds = %if.end46
  %31 = load i8*, i8** %p, align 8, !dbg !13404
  %arrayidx49 = getelementptr i8, i8* %31, i64 3, !dbg !13404
  %32 = load i8, i8* %arrayidx49, align 1, !dbg !13404
  %conv50 = zext i8 %32 to i32, !dbg !13404
  store i32 %conv50, i32* %bd_len, align 4, !dbg !13405
  br label %if.end58, !dbg !13406

if.else51:                                        ; preds = %if.end46
  %33 = load i8*, i8** %p, align 8, !dbg !13407
  %arrayidx52 = getelementptr i8, i8* %33, i64 6, !dbg !13407
  %34 = load i8, i8* %arrayidx52, align 1, !dbg !13407
  %conv53 = zext i8 %34 to i32, !dbg !13407
  %shl54 = shl i32 %conv53, 8, !dbg !13408
  %35 = load i8*, i8** %p, align 8, !dbg !13409
  %arrayidx55 = getelementptr i8, i8* %35, i64 7, !dbg !13409
  %36 = load i8, i8* %arrayidx55, align 1, !dbg !13409
  %conv56 = zext i8 %36 to i32, !dbg !13409
  %add57 = add i32 %shl54, %conv56, !dbg !13410
  store i32 %add57, i32* %bd_len, align 4, !dbg !13411
  br label %if.end58

if.end58:                                         ; preds = %if.else51, %if.then48
  %37 = load i32, i32* %hdr_len, align 4, !dbg !13412
  %38 = load i32, i32* %len, align 4, !dbg !13413
  %sub = sub i32 %38, %37, !dbg !13413
  store i32 %sub, i32* %len, align 4, !dbg !13413
  %39 = load i32, i32* %hdr_len, align 4, !dbg !13414
  %40 = load i8*, i8** %p, align 8, !dbg !13415
  %idx.ext = zext i32 %39 to i64, !dbg !13415
  %add.ptr = getelementptr i8, i8* %40, i64 %idx.ext, !dbg !13415
  store i8* %add.ptr, i8** %p, align 8, !dbg !13415
  %41 = load i32, i32* %len, align 4, !dbg !13416
  %42 = load i32, i32* %bd_len, align 4, !dbg !13418
  %cmp59 = icmp ult i32 %41, %42, !dbg !13419
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !13420

if.then61:                                        ; preds = %if.end58
  br label %invalid_param_len, !dbg !13421

if.end62:                                         ; preds = %if.end58
  %43 = load i32, i32* %bd_len, align 4, !dbg !13422
  %cmp63 = icmp ne i32 %43, 0, !dbg !13424
  br i1 %cmp63, label %land.lhs.true, label %if.end75, !dbg !13425

land.lhs.true:                                    ; preds = %if.end62
  %44 = load i32, i32* %bd_len, align 4, !dbg !13426
  %cmp65 = icmp ne i32 %44, 8, !dbg !13427
  br i1 %cmp65, label %if.then67, label %if.end75, !dbg !13428

if.then67:                                        ; preds = %land.lhs.true
  %45 = load i32, i32* %six_byte, align 4, !dbg !13429
  %tobool68 = icmp ne i32 %45, 0, !dbg !13431
  %46 = zext i1 %tobool68 to i64, !dbg !13431
  %cond69 = select i1 %tobool68, i32 3, i32 6, !dbg !13431
  %conv70 = trunc i32 %cond69 to i16, !dbg !13431
  store i16 %conv70, i16* %fp, align 2, !dbg !13432
  %47 = load i32, i32* %bd_len, align 4, !dbg !13433
  %48 = load i32, i32* %hdr_len, align 4, !dbg !13434
  %add71 = add i32 %47, %48, !dbg !13435
  %49 = load i16, i16* %fp, align 2, !dbg !13436
  %conv72 = zext i16 %49 to i32, !dbg !13436
  %add73 = add i32 %conv72, %add71, !dbg !13436
  %conv74 = trunc i32 %add73 to i16, !dbg !13436
  store i16 %conv74, i16* %fp, align 2, !dbg !13436
  br label %invalid_param, !dbg !13437

if.end75:                                         ; preds = %land.lhs.true, %if.end62
  %50 = load i32, i32* %bd_len, align 4, !dbg !13438
  %51 = load i32, i32* %len, align 4, !dbg !13439
  %sub76 = sub i32 %51, %50, !dbg !13439
  store i32 %sub76, i32* %len, align 4, !dbg !13439
  %52 = load i32, i32* %bd_len, align 4, !dbg !13440
  %53 = load i8*, i8** %p, align 8, !dbg !13441
  %idx.ext77 = zext i32 %52 to i64, !dbg !13441
  %add.ptr78 = getelementptr i8, i8* %53, i64 %idx.ext77, !dbg !13441
  store i8* %add.ptr78, i8** %p, align 8, !dbg !13441
  %54 = load i32, i32* %len, align 4, !dbg !13442
  %cmp79 = icmp eq i32 %54, 0, !dbg !13444
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !13445

if.then81:                                        ; preds = %if.end75
  br label %skip, !dbg !13446

if.end82:                                         ; preds = %if.end75
  %55 = load i8*, i8** %p, align 8, !dbg !13447
  %arrayidx83 = getelementptr i8, i8* %55, i64 0, !dbg !13447
  %56 = load i8, i8* %arrayidx83, align 1, !dbg !13447
  %conv84 = zext i8 %56 to i32, !dbg !13447
  %and85 = and i32 %conv84, 63, !dbg !13448
  %conv86 = trunc i32 %and85 to i8, !dbg !13447
  store i8 %conv86, i8* %pg, align 1, !dbg !13449
  %57 = load i8*, i8** %p, align 8, !dbg !13450
  %arrayidx87 = getelementptr i8, i8* %57, i64 0, !dbg !13450
  %58 = load i8, i8* %arrayidx87, align 1, !dbg !13450
  %conv88 = zext i8 %58 to i32, !dbg !13450
  %and89 = and i32 %conv88, 64, !dbg !13452
  %tobool90 = icmp ne i32 %and89, 0, !dbg !13452
  br i1 %tobool90, label %if.then91, label %if.else104, !dbg !13453

if.then91:                                        ; preds = %if.end82
  %59 = load i32, i32* %len, align 4, !dbg !13454
  %cmp92 = icmp slt i32 %59, 4, !dbg !13457
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !13458

if.then94:                                        ; preds = %if.then91
  br label %invalid_param_len, !dbg !13459

if.end95:                                         ; preds = %if.then91
  %60 = load i8*, i8** %p, align 8, !dbg !13460
  %arrayidx96 = getelementptr i8, i8* %60, i64 1, !dbg !13460
  %61 = load i8, i8* %arrayidx96, align 1, !dbg !13460
  store i8 %61, i8* %spg, align 1, !dbg !13461
  %62 = load i8*, i8** %p, align 8, !dbg !13462
  %arrayidx97 = getelementptr i8, i8* %62, i64 2, !dbg !13462
  %63 = load i8, i8* %arrayidx97, align 1, !dbg !13462
  %conv98 = zext i8 %63 to i32, !dbg !13462
  %shl99 = shl i32 %conv98, 8, !dbg !13463
  %64 = load i8*, i8** %p, align 8, !dbg !13464
  %arrayidx100 = getelementptr i8, i8* %64, i64 3, !dbg !13464
  %65 = load i8, i8* %arrayidx100, align 1, !dbg !13464
  %conv101 = zext i8 %65 to i32, !dbg !13464
  %or = or i32 %shl99, %conv101, !dbg !13465
  store i32 %or, i32* %pg_len, align 4, !dbg !13466
  %66 = load i8*, i8** %p, align 8, !dbg !13467
  %add.ptr102 = getelementptr i8, i8* %66, i64 4, !dbg !13467
  store i8* %add.ptr102, i8** %p, align 8, !dbg !13467
  %67 = load i32, i32* %len, align 4, !dbg !13468
  %sub103 = sub i32 %67, 4, !dbg !13468
  store i32 %sub103, i32* %len, align 4, !dbg !13468
  br label %if.end113, !dbg !13469

if.else104:                                       ; preds = %if.end82
  %68 = load i32, i32* %len, align 4, !dbg !13470
  %cmp105 = icmp slt i32 %68, 2, !dbg !13473
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !13474

if.then107:                                       ; preds = %if.else104
  br label %invalid_param_len, !dbg !13475

if.end108:                                        ; preds = %if.else104
  store i8 0, i8* %spg, align 1, !dbg !13476
  %69 = load i8*, i8** %p, align 8, !dbg !13477
  %arrayidx109 = getelementptr i8, i8* %69, i64 1, !dbg !13477
  %70 = load i8, i8* %arrayidx109, align 1, !dbg !13477
  %conv110 = zext i8 %70 to i32, !dbg !13477
  store i32 %conv110, i32* %pg_len, align 4, !dbg !13478
  %71 = load i8*, i8** %p, align 8, !dbg !13479
  %add.ptr111 = getelementptr i8, i8* %71, i64 2, !dbg !13479
  store i8* %add.ptr111, i8** %p, align 8, !dbg !13479
  %72 = load i32, i32* %len, align 4, !dbg !13480
  %sub112 = sub i32 %72, 2, !dbg !13480
  store i32 %sub112, i32* %len, align 4, !dbg !13480
  br label %if.end113

if.end113:                                        ; preds = %if.end108, %if.end95
  %73 = load i8, i8* %spg, align 1, !dbg !13481
  %conv114 = zext i8 %73 to i32, !dbg !13481
  %tobool115 = icmp ne i32 %conv114, 0, !dbg !13481
  br i1 %tobool115, label %land.lhs.true116, label %if.end131, !dbg !13483

land.lhs.true116:                                 ; preds = %if.end113
  %74 = load i8, i8* %spg, align 1, !dbg !13484
  %conv117 = zext i8 %74 to i32, !dbg !13484
  %cmp118 = icmp ne i32 %conv117, 255, !dbg !13485
  br i1 %cmp118, label %if.then120, label %if.end131, !dbg !13486

if.then120:                                       ; preds = %land.lhs.true116
  %75 = load i8*, i8** %p, align 8, !dbg !13487
  %arrayidx121 = getelementptr i8, i8* %75, i64 0, !dbg !13487
  %76 = load i8, i8* %arrayidx121, align 1, !dbg !13487
  %conv122 = zext i8 %76 to i32, !dbg !13487
  %and123 = and i32 %conv122, 64, !dbg !13489
  %tobool124 = icmp ne i32 %and123, 0, !dbg !13490
  %77 = zext i1 %tobool124 to i64, !dbg !13490
  %cond125 = select i1 %tobool124, i32 1, i32 0, !dbg !13490
  %conv126 = trunc i32 %cond125 to i16, !dbg !13490
  store i16 %conv126, i16* %fp, align 2, !dbg !13491
  %78 = load i32, i32* %hdr_len, align 4, !dbg !13492
  %79 = load i32, i32* %bd_len, align 4, !dbg !13493
  %add127 = add i32 %78, %79, !dbg !13494
  %80 = load i16, i16* %fp, align 2, !dbg !13495
  %conv128 = zext i16 %80 to i32, !dbg !13495
  %add129 = add i32 %conv128, %add127, !dbg !13495
  %conv130 = trunc i32 %add129 to i16, !dbg !13495
  store i16 %conv130, i16* %fp, align 2, !dbg !13495
  br label %invalid_param, !dbg !13496

if.end131:                                        ; preds = %land.lhs.true116, %if.end113
  %81 = load i32, i32* %pg_len, align 4, !dbg !13497
  %82 = load i32, i32* %len, align 4, !dbg !13499
  %cmp132 = icmp ugt i32 %81, %82, !dbg !13500
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !13501

if.then134:                                       ; preds = %if.end131
  br label %invalid_param_len, !dbg !13502

if.end135:                                        ; preds = %if.end131
  %83 = load i8, i8* %pg, align 1, !dbg !13503
  %conv136 = zext i8 %83 to i32, !dbg !13503
  switch i32 %conv136, label %sw.default [
    i32 8, label %sw.bb
    i32 10, label %sw.bb146
  ], !dbg !13504

sw.bb:                                            ; preds = %if.end135
  %84 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13505
  %85 = load i8*, i8** %p, align 8, !dbg !13508
  %86 = load i32, i32* %pg_len, align 4, !dbg !13509
  %call137 = call i32 @ata_mselect_caching(%struct.ata_queued_cmd* %84, i8* %85, i32 %86, i16* %fp) #10, !dbg !13510
  %cmp138 = icmp slt i32 %call137, 0, !dbg !13511
  br i1 %cmp138, label %if.then140, label %if.end145, !dbg !13512

if.then140:                                       ; preds = %sw.bb
  %87 = load i32, i32* %hdr_len, align 4, !dbg !13513
  %88 = load i32, i32* %bd_len, align 4, !dbg !13515
  %add141 = add i32 %87, %88, !dbg !13516
  %89 = load i16, i16* %fp, align 2, !dbg !13517
  %conv142 = zext i16 %89 to i32, !dbg !13517
  %add143 = add i32 %conv142, %add141, !dbg !13517
  %conv144 = trunc i32 %add143 to i16, !dbg !13517
  store i16 %conv144, i16* %fp, align 2, !dbg !13517
  br label %invalid_param, !dbg !13518

if.end145:                                        ; preds = %sw.bb
  br label %sw.epilog, !dbg !13519

sw.bb146:                                         ; preds = %if.end135
  %90 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13520
  %91 = load i8*, i8** %p, align 8, !dbg !13522
  %92 = load i32, i32* %pg_len, align 4, !dbg !13523
  %call147 = call i32 @ata_mselect_control(%struct.ata_queued_cmd* %90, i8* %91, i32 %92, i16* %fp) #10, !dbg !13524
  %cmp148 = icmp slt i32 %call147, 0, !dbg !13525
  br i1 %cmp148, label %if.then150, label %if.else155, !dbg !13526

if.then150:                                       ; preds = %sw.bb146
  %93 = load i32, i32* %hdr_len, align 4, !dbg !13527
  %94 = load i32, i32* %bd_len, align 4, !dbg !13529
  %add151 = add i32 %93, %94, !dbg !13530
  %95 = load i16, i16* %fp, align 2, !dbg !13531
  %conv152 = zext i16 %95 to i32, !dbg !13531
  %add153 = add i32 %conv152, %add151, !dbg !13531
  %conv154 = trunc i32 %add153 to i16, !dbg !13531
  store i16 %conv154, i16* %fp, align 2, !dbg !13531
  br label %invalid_param, !dbg !13532

if.else155:                                       ; preds = %sw.bb146
  br label %skip, !dbg !13533

sw.default:                                       ; preds = %if.end135
  %96 = load i32, i32* %bd_len, align 4, !dbg !13535
  %97 = load i32, i32* %hdr_len, align 4, !dbg !13536
  %add156 = add i32 %96, %97, !dbg !13537
  %conv157 = trunc i32 %add156 to i16, !dbg !13535
  store i16 %conv157, i16* %fp, align 2, !dbg !13538
  br label %invalid_param, !dbg !13539

sw.epilog:                                        ; preds = %if.end145
  %98 = load i32, i32* %len, align 4, !dbg !13540
  %99 = load i32, i32* %pg_len, align 4, !dbg !13542
  %cmp158 = icmp ugt i32 %98, %99, !dbg !13543
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !13544

if.then160:                                       ; preds = %sw.epilog
  br label %invalid_param, !dbg !13545

if.end161:                                        ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !13546
  br label %return, !dbg !13546

invalid_fld:                                      ; preds = %if.then23, %if.then12, %if.then5
  call void @llvm.dbg.label(metadata !13547), !dbg !13548
  %100 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13549
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %100, i32 0, i32 1, !dbg !13550
  %101 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13550
  %102 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13551
  %103 = load i16, i16* %fp, align 2, !dbg !13552
  %104 = load i8, i8* %bp, align 1, !dbg !13553
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %101, %struct.scsi_cmnd* %102, i16 zeroext %103, i8 zeroext %104) #10, !dbg !13554
  store i32 1, i32* %retval, align 4, !dbg !13555
  br label %return, !dbg !13555

invalid_param:                                    ; preds = %if.then160, %sw.default, %if.then150, %if.then140, %if.then120, %if.then67
  call void @llvm.dbg.label(metadata !13556), !dbg !13557
  %105 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13558
  %dev162 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %105, i32 0, i32 1, !dbg !13559
  %106 = load %struct.ata_device*, %struct.ata_device** %dev162, align 8, !dbg !13559
  %107 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13560
  %108 = load i16, i16* %fp, align 2, !dbg !13561
  call void @ata_scsi_set_invalid_parameter(%struct.ata_device* %106, %struct.scsi_cmnd* %107, i16 zeroext %108) #10, !dbg !13562
  store i32 1, i32* %retval, align 4, !dbg !13563
  br label %return, !dbg !13563

invalid_param_len:                                ; preds = %if.then134, %if.then107, %if.then94, %if.then61, %if.then45, %if.then38, %if.then34
  call void @llvm.dbg.label(metadata !13564), !dbg !13565
  %109 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13566
  %dev163 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %109, i32 0, i32 1, !dbg !13567
  %110 = load %struct.ata_device*, %struct.ata_device** %dev163, align 8, !dbg !13567
  %111 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13568
  call void @ata_scsi_set_sense(%struct.ata_device* %110, %struct.scsi_cmnd* %111, i8 zeroext 5, i8 zeroext 26, i8 zeroext 0) #10, !dbg !13569
  store i32 1, i32* %retval, align 4, !dbg !13570
  br label %return, !dbg !13570

skip:                                             ; preds = %if.else155, %if.then81
  call void @llvm.dbg.label(metadata !13571), !dbg !13572
  %112 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13573
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %112, i32 0, i32 24, !dbg !13574
  store i32 0, i32* %result, align 8, !dbg !13575
  store i32 1, i32* %retval, align 4, !dbg !13576
  br label %return, !dbg !13576

return:                                           ; preds = %skip, %invalid_param_len, %invalid_param, %invalid_fld, %if.end161
  %113 = load i32, i32* %retval, align 4, !dbg !13577
  ret i32 %113, !dbg !13577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_zbc_in_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !13578 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cdb = alloca i8*, align 8
  %sect = alloca i16, align 2
  %fp = alloca i16, align 2
  %sa = alloca i8, align 1
  %options = alloca i8, align 1
  %bp = alloca i8, align 1
  %block = alloca i64, align 8
  %n_block = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13579, metadata !DIExpression()), !dbg !13580
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !13581, metadata !DIExpression()), !dbg !13582
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13583
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !13584
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !13582
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !13585, metadata !DIExpression()), !dbg !13586
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13587
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 2, !dbg !13588
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !13588
  store %struct.scsi_cmnd* %2, %struct.scsi_cmnd** %scmd, align 8, !dbg !13586
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !13589, metadata !DIExpression()), !dbg !13590
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13591
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 14, !dbg !13592
  %4 = load i8*, i8** %cmnd, align 8, !dbg !13592
  store i8* %4, i8** %cdb, align 8, !dbg !13590
  call void @llvm.dbg.declare(metadata i16* %sect, metadata !13593, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !13595, metadata !DIExpression()), !dbg !13596
  store i16 -1, i16* %fp, align 2, !dbg !13596
  call void @llvm.dbg.declare(metadata i8* %sa, metadata !13597, metadata !DIExpression()), !dbg !13598
  call void @llvm.dbg.declare(metadata i8* %options, metadata !13599, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.declare(metadata i8* %bp, metadata !13601, metadata !DIExpression()), !dbg !13602
  store i8 -1, i8* %bp, align 1, !dbg !13602
  call void @llvm.dbg.declare(metadata i64* %block, metadata !13603, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.declare(metadata i32* %n_block, metadata !13605, metadata !DIExpression()), !dbg !13606
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13607
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 12, !dbg !13607
  %6 = load i16, i16* %cmd_len, align 4, !dbg !13607
  %conv = zext i16 %6 to i32, !dbg !13607
  %cmp = icmp slt i32 %conv, 16, !dbg !13607
  %lnot = xor i1 %cmp, true, !dbg !13607
  %lnot3 = xor i1 %lnot, true, !dbg !13607
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13607
  %conv4 = sext i32 %lnot.ext to i64, !dbg !13607
  %tobool = icmp ne i64 %conv4, 0, !dbg !13607
  br i1 %tobool, label %if.then, label %if.end, !dbg !13609

if.then:                                          ; preds = %entry
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13610
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 1, !dbg !13610
  %8 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13610
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13610
  %cmd_len5 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %9, i32 0, i32 12, !dbg !13610
  %10 = load i16, i16* %cmd_len5, align 4, !dbg !13610
  %conv6 = zext i16 %10 to i32, !dbg !13610
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i32 %conv6) #10, !dbg !13610
  store i16 15, i16* %fp, align 2, !dbg !13612
  br label %invalid_fld, !dbg !13613

if.end:                                           ; preds = %entry
  %11 = load i8*, i8** %cdb, align 8, !dbg !13614
  call void @scsi_16_lba_len(i8* %11, i64* %block, i32* %n_block) #10, !dbg !13615
  %12 = load i32, i32* %n_block, align 4, !dbg !13616
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13618
  %call = call i32 @scsi_bufflen(%struct.scsi_cmnd* %13) #10, !dbg !13619
  %cmp7 = icmp ne i32 %12, %call, !dbg !13620
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !13621

if.then9:                                         ; preds = %if.end
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13622
  %dev10 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 1, !dbg !13622
  %15 = load %struct.ata_device*, %struct.ata_device** %dev10, align 8, !dbg !13622
  %16 = load i32, i32* %n_block, align 4, !dbg !13622
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13622
  %call11 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %17) #10, !dbg !13622
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0), i32 %16, i32 %call11) #10, !dbg !13622
  br label %invalid_param_len, !dbg !13624

if.end12:                                         ; preds = %if.end
  %18 = load i8*, i8** %cdb, align 8, !dbg !13625
  %arrayidx = getelementptr i8, i8* %18, i64 1, !dbg !13625
  %19 = load i8, i8* %arrayidx, align 1, !dbg !13625
  %conv13 = zext i8 %19 to i32, !dbg !13625
  %and = and i32 %conv13, 31, !dbg !13626
  %conv14 = trunc i32 %and to i8, !dbg !13625
  store i8 %conv14, i8* %sa, align 1, !dbg !13627
  %20 = load i8, i8* %sa, align 1, !dbg !13628
  %conv15 = zext i8 %20 to i32, !dbg !13628
  %cmp16 = icmp ne i32 %conv15, 0, !dbg !13630
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !13631

if.then18:                                        ; preds = %if.end12
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13632
  %dev19 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %21, i32 0, i32 1, !dbg !13632
  %22 = load %struct.ata_device*, %struct.ata_device** %dev19, align 8, !dbg !13632
  %23 = load i8, i8* %sa, align 1, !dbg !13632
  %conv20 = zext i8 %23 to i32, !dbg !13632
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i32 %conv20) #10, !dbg !13632
  store i16 1, i16* %fp, align 2, !dbg !13634
  br label %invalid_fld, !dbg !13635

if.end21:                                         ; preds = %if.end12
  %24 = load i32, i32* %n_block, align 4, !dbg !13636
  %div = udiv i32 %24, 512, !dbg !13638
  %cmp22 = icmp ugt i32 %div, 65535, !dbg !13639
  br i1 %cmp22, label %if.then28, label %lor.lhs.false, !dbg !13640

lor.lhs.false:                                    ; preds = %if.end21
  %25 = load i32, i32* %n_block, align 4, !dbg !13641
  %cmp24 = icmp ult i32 %25, 512, !dbg !13642
  br i1 %cmp24, label %if.then28, label %lor.lhs.false26, !dbg !13643

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %26 = load i32, i32* %n_block, align 4, !dbg !13644
  %rem = urem i32 %26, 512, !dbg !13645
  %tobool27 = icmp ne i32 %rem, 0, !dbg !13645
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !13646

if.then28:                                        ; preds = %lor.lhs.false26, %lor.lhs.false, %if.end21
  %27 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13647
  %dev29 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %27, i32 0, i32 1, !dbg !13647
  %28 = load %struct.ata_device*, %struct.ata_device** %dev29, align 8, !dbg !13647
  %29 = load i32, i32* %n_block, align 4, !dbg !13647
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i32 %29) #10, !dbg !13647
  br label %invalid_param_len, !dbg !13649

if.end30:                                         ; preds = %lor.lhs.false26
  %30 = load i32, i32* %n_block, align 4, !dbg !13650
  %div31 = udiv i32 %30, 512, !dbg !13651
  %conv32 = trunc i32 %div31 to i16, !dbg !13650
  store i16 %conv32, i16* %sect, align 2, !dbg !13652
  %31 = load i8*, i8** %cdb, align 8, !dbg !13653
  %arrayidx33 = getelementptr i8, i8* %31, i64 14, !dbg !13653
  %32 = load i8, i8* %arrayidx33, align 1, !dbg !13653
  %conv34 = zext i8 %32 to i32, !dbg !13653
  %and35 = and i32 %conv34, 191, !dbg !13654
  %conv36 = trunc i32 %and35 to i8, !dbg !13653
  store i8 %conv36, i8* %options, align 1, !dbg !13655
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13656
  %dev37 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %33, i32 0, i32 1, !dbg !13658
  %34 = load %struct.ata_device*, %struct.ata_device** %dev37, align 8, !dbg !13658
  %call38 = call i32 @ata_ncq_enabled(%struct.ata_device* %34) #10, !dbg !13659
  %tobool39 = icmp ne i32 %call38, 0, !dbg !13659
  br i1 %tobool39, label %land.lhs.true, label %if.else, !dbg !13660

land.lhs.true:                                    ; preds = %if.end30
  %35 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13661
  %dev40 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %35, i32 0, i32 1, !dbg !13662
  %36 = load %struct.ata_device*, %struct.ata_device** %dev40, align 8, !dbg !13662
  %call41 = call zeroext i1 @ata_fpdma_zac_mgmt_in_supported(%struct.ata_device* %36) #10, !dbg !13663
  br i1 %call41, label %if.then43, label %if.else, !dbg !13664

if.then43:                                        ; preds = %land.lhs.true
  %37 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13665
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %37, i32 0, i32 1, !dbg !13667
  store i8 6, i8* %protocol, align 8, !dbg !13668
  %38 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13669
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %38, i32 0, i32 14, !dbg !13670
  store i8 101, i8* %command, align 1, !dbg !13671
  %39 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13672
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %39, i32 0, i32 4, !dbg !13673
  store i8 2, i8* %hob_nsect, align 1, !dbg !13674
  %40 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13675
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %40, i32 0, i32 8, !dbg !13676
  %41 = load i32, i32* %hw_tag, align 4, !dbg !13676
  %shl = shl i32 %41, 3, !dbg !13677
  %conv44 = trunc i32 %shl to i8, !dbg !13675
  %42 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13678
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %42, i32 0, i32 9, !dbg !13679
  store i8 %conv44, i8* %nsect, align 8, !dbg !13680
  %43 = load i16, i16* %sect, align 2, !dbg !13681
  %conv45 = zext i16 %43 to i32, !dbg !13681
  %and46 = and i32 %conv45, 255, !dbg !13682
  %conv47 = trunc i32 %and46 to i8, !dbg !13681
  %44 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13683
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %44, i32 0, i32 8, !dbg !13684
  store i8 %conv47, i8* %feature, align 1, !dbg !13685
  %45 = load i16, i16* %sect, align 2, !dbg !13686
  %conv48 = zext i16 %45 to i32, !dbg !13686
  %shr = ashr i32 %conv48, 8, !dbg !13687
  %and49 = and i32 %shr, 255, !dbg !13688
  %conv50 = trunc i32 %and49 to i8, !dbg !13689
  %46 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13690
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %46, i32 0, i32 3, !dbg !13691
  store i8 %conv50, i8* %hob_feature, align 2, !dbg !13692
  %47 = load i8, i8* %options, align 1, !dbg !13693
  %conv51 = zext i8 %47 to i32, !dbg !13693
  %shl52 = shl i32 %conv51, 8, !dbg !13694
  %or = or i32 0, %shl52, !dbg !13695
  %48 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13696
  %auxiliary = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %48, i32 0, i32 15, !dbg !13697
  store i32 %or, i32* %auxiliary, align 8, !dbg !13698
  br label %if.end66, !dbg !13699

if.else:                                          ; preds = %land.lhs.true, %if.end30
  %49 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13700
  %command53 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %49, i32 0, i32 14, !dbg !13702
  store i8 74, i8* %command53, align 1, !dbg !13703
  %50 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13704
  %feature54 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %50, i32 0, i32 8, !dbg !13705
  store i8 0, i8* %feature54, align 1, !dbg !13706
  %51 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13707
  %protocol55 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %51, i32 0, i32 1, !dbg !13708
  store i8 2, i8* %protocol55, align 8, !dbg !13709
  %52 = load i8, i8* %options, align 1, !dbg !13710
  %53 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13711
  %hob_feature56 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %53, i32 0, i32 3, !dbg !13712
  store i8 %52, i8* %hob_feature56, align 2, !dbg !13713
  %54 = load i16, i16* %sect, align 2, !dbg !13714
  %conv57 = zext i16 %54 to i32, !dbg !13714
  %shr58 = ashr i32 %conv57, 8, !dbg !13715
  %and59 = and i32 %shr58, 255, !dbg !13716
  %conv60 = trunc i32 %and59 to i8, !dbg !13717
  %55 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13718
  %hob_nsect61 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %55, i32 0, i32 4, !dbg !13719
  store i8 %conv60, i8* %hob_nsect61, align 1, !dbg !13720
  %56 = load i16, i16* %sect, align 2, !dbg !13721
  %conv62 = zext i16 %56 to i32, !dbg !13721
  %and63 = and i32 %conv62, 255, !dbg !13722
  %conv64 = trunc i32 %and63 to i8, !dbg !13721
  %57 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13723
  %nsect65 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %57, i32 0, i32 9, !dbg !13724
  store i8 %conv64, i8* %nsect65, align 8, !dbg !13725
  br label %if.end66

if.end66:                                         ; preds = %if.else, %if.then43
  %58 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13726
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %58, i32 0, i32 13, !dbg !13727
  store i8 64, i8* %device, align 4, !dbg !13728
  %59 = load i64, i64* %block, align 8, !dbg !13729
  %shr67 = lshr i64 %59, 16, !dbg !13730
  %and68 = and i64 %shr67, 255, !dbg !13731
  %conv69 = trunc i64 %and68 to i8, !dbg !13732
  %60 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13733
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %60, i32 0, i32 12, !dbg !13734
  store i8 %conv69, i8* %lbah, align 1, !dbg !13735
  %61 = load i64, i64* %block, align 8, !dbg !13736
  %shr70 = lshr i64 %61, 8, !dbg !13737
  %and71 = and i64 %shr70, 255, !dbg !13738
  %conv72 = trunc i64 %and71 to i8, !dbg !13739
  %62 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13740
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %62, i32 0, i32 11, !dbg !13741
  store i8 %conv72, i8* %lbam, align 2, !dbg !13742
  %63 = load i64, i64* %block, align 8, !dbg !13743
  %and73 = and i64 %63, 255, !dbg !13744
  %conv74 = trunc i64 %and73 to i8, !dbg !13743
  %64 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13745
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %64, i32 0, i32 10, !dbg !13746
  store i8 %conv74, i8* %lbal, align 1, !dbg !13747
  %65 = load i64, i64* %block, align 8, !dbg !13748
  %shr75 = lshr i64 %65, 40, !dbg !13749
  %and76 = and i64 %shr75, 255, !dbg !13750
  %conv77 = trunc i64 %and76 to i8, !dbg !13751
  %66 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13752
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %66, i32 0, i32 7, !dbg !13753
  store i8 %conv77, i8* %hob_lbah, align 2, !dbg !13754
  %67 = load i64, i64* %block, align 8, !dbg !13755
  %shr78 = lshr i64 %67, 32, !dbg !13756
  %and79 = and i64 %shr78, 255, !dbg !13757
  %conv80 = trunc i64 %and79 to i8, !dbg !13758
  %68 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13759
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %68, i32 0, i32 6, !dbg !13760
  store i8 %conv80, i8* %hob_lbam, align 1, !dbg !13761
  %69 = load i64, i64* %block, align 8, !dbg !13762
  %shr81 = lshr i64 %69, 24, !dbg !13763
  %and82 = and i64 %shr81, 255, !dbg !13764
  %conv83 = trunc i64 %and82 to i8, !dbg !13765
  %70 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13766
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %70, i32 0, i32 5, !dbg !13767
  store i8 %conv83, i8* %hob_lbal, align 4, !dbg !13768
  %71 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13769
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %71, i32 0, i32 0, !dbg !13770
  %72 = load i64, i64* %flags, align 8, !dbg !13771
  %or84 = or i64 %72, 7, !dbg !13771
  store i64 %or84, i64* %flags, align 8, !dbg !13771
  %73 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13772
  %flags85 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %73, i32 0, i32 6, !dbg !13773
  %74 = load i64, i64* %flags85, align 8, !dbg !13774
  %or86 = or i64 %74, 16, !dbg !13774
  store i64 %or86, i64* %flags85, align 8, !dbg !13774
  %75 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13775
  call void @ata_qc_set_pc_nbytes(%struct.ata_queued_cmd* %75) #10, !dbg !13776
  %76 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13777
  %complete_fn = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %76, i32 0, i32 22, !dbg !13778
  store void (%struct.ata_queued_cmd*)* @ata_scsi_report_zones_complete, void (%struct.ata_queued_cmd*)** %complete_fn, align 8, !dbg !13779
  store i32 0, i32* %retval, align 4, !dbg !13780
  br label %return, !dbg !13780

invalid_fld:                                      ; preds = %if.then18, %if.then
  call void @llvm.dbg.label(metadata !13781), !dbg !13782
  %77 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13783
  %dev87 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %77, i32 0, i32 1, !dbg !13784
  %78 = load %struct.ata_device*, %struct.ata_device** %dev87, align 8, !dbg !13784
  %79 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13785
  %80 = load i16, i16* %fp, align 2, !dbg !13786
  %81 = load i8, i8* %bp, align 1, !dbg !13787
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %78, %struct.scsi_cmnd* %79, i16 zeroext %80, i8 zeroext %81) #10, !dbg !13788
  store i32 1, i32* %retval, align 4, !dbg !13789
  br label %return, !dbg !13789

invalid_param_len:                                ; preds = %if.then28, %if.then9
  call void @llvm.dbg.label(metadata !13790), !dbg !13791
  %82 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13792
  %dev88 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %82, i32 0, i32 1, !dbg !13793
  %83 = load %struct.ata_device*, %struct.ata_device** %dev88, align 8, !dbg !13793
  %84 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13794
  call void @ata_scsi_set_sense(%struct.ata_device* %83, %struct.scsi_cmnd* %84, i8 zeroext 5, i8 zeroext 26, i8 zeroext 0) #10, !dbg !13795
  store i32 1, i32* %retval, align 4, !dbg !13796
  br label %return, !dbg !13796

return:                                           ; preds = %invalid_param_len, %invalid_fld, %if.end66
  %85 = load i32, i32* %retval, align 4, !dbg !13797
  ret i32 %85, !dbg !13797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_zbc_out_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !13798 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %cdb = alloca i8*, align 8
  %all = alloca i8, align 1
  %sa = alloca i8, align 1
  %block = alloca i64, align 8
  %n_block = alloca i32, align 4
  %fp = alloca i16, align 2
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13799, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !13801, metadata !DIExpression()), !dbg !13802
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13803
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !13804
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !13802
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !13805, metadata !DIExpression()), !dbg !13806
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13807
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 2, !dbg !13808
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !13808
  store %struct.scsi_cmnd* %2, %struct.scsi_cmnd** %scmd, align 8, !dbg !13806
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !13809, metadata !DIExpression()), !dbg !13810
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13811
  %dev2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 1, !dbg !13812
  %4 = load %struct.ata_device*, %struct.ata_device** %dev2, align 8, !dbg !13812
  store %struct.ata_device* %4, %struct.ata_device** %dev, align 8, !dbg !13810
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !13813, metadata !DIExpression()), !dbg !13814
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13815
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 14, !dbg !13816
  %6 = load i8*, i8** %cmnd, align 8, !dbg !13816
  store i8* %6, i8** %cdb, align 8, !dbg !13814
  call void @llvm.dbg.declare(metadata i8* %all, metadata !13817, metadata !DIExpression()), !dbg !13818
  call void @llvm.dbg.declare(metadata i8* %sa, metadata !13819, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.declare(metadata i64* %block, metadata !13821, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.declare(metadata i32* %n_block, metadata !13823, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !13825, metadata !DIExpression()), !dbg !13826
  store i16 -1, i16* %fp, align 2, !dbg !13826
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13827
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 12, !dbg !13827
  %8 = load i16, i16* %cmd_len, align 4, !dbg !13827
  %conv = zext i16 %8 to i32, !dbg !13827
  %cmp = icmp slt i32 %conv, 16, !dbg !13827
  %lnot = xor i1 %cmp, true, !dbg !13827
  %lnot4 = xor i1 %lnot, true, !dbg !13827
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !13827
  %conv5 = sext i32 %lnot.ext to i64, !dbg !13827
  %tobool = icmp ne i64 %conv5, 0, !dbg !13827
  br i1 %tobool, label %if.then, label %if.end, !dbg !13829

if.then:                                          ; preds = %entry
  store i16 15, i16* %fp, align 2, !dbg !13830
  br label %invalid_fld, !dbg !13832

if.end:                                           ; preds = %entry
  %9 = load i8*, i8** %cdb, align 8, !dbg !13833
  %arrayidx = getelementptr i8, i8* %9, i64 1, !dbg !13833
  %10 = load i8, i8* %arrayidx, align 1, !dbg !13833
  %conv6 = zext i8 %10 to i32, !dbg !13833
  %and = and i32 %conv6, 31, !dbg !13834
  %conv7 = trunc i32 %and to i8, !dbg !13833
  store i8 %conv7, i8* %sa, align 1, !dbg !13835
  %11 = load i8, i8* %sa, align 1, !dbg !13836
  %conv8 = zext i8 %11 to i32, !dbg !13836
  %cmp9 = icmp ne i32 %conv8, 1, !dbg !13838
  br i1 %cmp9, label %land.lhs.true, label %if.end23, !dbg !13839

land.lhs.true:                                    ; preds = %if.end
  %12 = load i8, i8* %sa, align 1, !dbg !13840
  %conv11 = zext i8 %12 to i32, !dbg !13840
  %cmp12 = icmp ne i32 %conv11, 2, !dbg !13841
  br i1 %cmp12, label %land.lhs.true14, label %if.end23, !dbg !13842

land.lhs.true14:                                  ; preds = %land.lhs.true
  %13 = load i8, i8* %sa, align 1, !dbg !13843
  %conv15 = zext i8 %13 to i32, !dbg !13843
  %cmp16 = icmp ne i32 %conv15, 3, !dbg !13844
  br i1 %cmp16, label %land.lhs.true18, label %if.end23, !dbg !13845

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %14 = load i8, i8* %sa, align 1, !dbg !13846
  %conv19 = zext i8 %14 to i32, !dbg !13846
  %cmp20 = icmp ne i32 %conv19, 4, !dbg !13847
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !13848

if.then22:                                        ; preds = %land.lhs.true18
  store i16 1, i16* %fp, align 2, !dbg !13849
  br label %invalid_fld, !dbg !13851

if.end23:                                         ; preds = %land.lhs.true18, %land.lhs.true14, %land.lhs.true, %if.end
  %15 = load i8*, i8** %cdb, align 8, !dbg !13852
  call void @scsi_16_lba_len(i8* %15, i64* %block, i32* %n_block) #10, !dbg !13853
  %16 = load i32, i32* %n_block, align 4, !dbg !13854
  %tobool24 = icmp ne i32 %16, 0, !dbg !13854
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !13856

if.then25:                                        ; preds = %if.end23
  br label %invalid_param_len, !dbg !13857

if.end26:                                         ; preds = %if.end23
  %17 = load i8*, i8** %cdb, align 8, !dbg !13859
  %arrayidx27 = getelementptr i8, i8* %17, i64 14, !dbg !13859
  %18 = load i8, i8* %arrayidx27, align 1, !dbg !13859
  %conv28 = zext i8 %18 to i32, !dbg !13859
  %and29 = and i32 %conv28, 1, !dbg !13860
  %conv30 = trunc i32 %and29 to i8, !dbg !13859
  store i8 %conv30, i8* %all, align 1, !dbg !13861
  %19 = load i8, i8* %all, align 1, !dbg !13862
  %tobool31 = icmp ne i8 %19, 0, !dbg !13862
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !13864

if.then32:                                        ; preds = %if.end26
  store i64 0, i64* %block, align 8, !dbg !13865
  br label %if.end37, !dbg !13867

if.else:                                          ; preds = %if.end26
  %20 = load i64, i64* %block, align 8, !dbg !13868
  %21 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13870
  %n_sectors = getelementptr inbounds %struct.ata_device, %struct.ata_device* %21, i32 0, i32 9, !dbg !13871
  %22 = load i64, i64* %n_sectors, align 16, !dbg !13871
  %cmp33 = icmp uge i64 %20, %22, !dbg !13872
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !13873

if.then35:                                        ; preds = %if.else
  store i16 2, i16* %fp, align 2, !dbg !13874
  br label %invalid_fld, !dbg !13876

if.end36:                                         ; preds = %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then32
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13877
  %dev38 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 1, !dbg !13879
  %24 = load %struct.ata_device*, %struct.ata_device** %dev38, align 8, !dbg !13879
  %call = call i32 @ata_ncq_enabled(%struct.ata_device* %24) #10, !dbg !13880
  %tobool39 = icmp ne i32 %call, 0, !dbg !13880
  br i1 %tobool39, label %land.lhs.true40, label %if.else50, !dbg !13881

land.lhs.true40:                                  ; preds = %if.end37
  %25 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13882
  %dev41 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %25, i32 0, i32 1, !dbg !13883
  %26 = load %struct.ata_device*, %struct.ata_device** %dev41, align 8, !dbg !13883
  %call42 = call zeroext i1 @ata_fpdma_zac_mgmt_out_supported(%struct.ata_device* %26) #10, !dbg !13884
  br i1 %call42, label %if.then44, label %if.else50, !dbg !13885

if.then44:                                        ; preds = %land.lhs.true40
  %27 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13886
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %27, i32 0, i32 1, !dbg !13888
  store i8 4, i8* %protocol, align 8, !dbg !13889
  %28 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13890
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %28, i32 0, i32 14, !dbg !13891
  store i8 99, i8* %command, align 1, !dbg !13892
  %29 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13893
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %29, i32 0, i32 8, !dbg !13894
  store i8 7, i8* %feature, align 1, !dbg !13895
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13896
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %30, i32 0, i32 8, !dbg !13897
  %31 = load i32, i32* %hw_tag, align 4, !dbg !13897
  %shl = shl i32 %31, 3, !dbg !13898
  %conv45 = trunc i32 %shl to i8, !dbg !13896
  %32 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13899
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %32, i32 0, i32 9, !dbg !13900
  store i8 %conv45, i8* %nsect, align 8, !dbg !13901
  %33 = load i8, i8* %sa, align 1, !dbg !13902
  %conv46 = zext i8 %33 to i32, !dbg !13902
  %34 = load i8, i8* %all, align 1, !dbg !13903
  %conv47 = zext i8 %34 to i16, !dbg !13904
  %conv48 = zext i16 %conv47 to i32, !dbg !13904
  %shl49 = shl i32 %conv48, 8, !dbg !13905
  %or = or i32 %conv46, %shl49, !dbg !13906
  %35 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13907
  %auxiliary = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %35, i32 0, i32 15, !dbg !13908
  store i32 %or, i32* %auxiliary, align 8, !dbg !13909
  br label %if.end54, !dbg !13910

if.else50:                                        ; preds = %land.lhs.true40, %if.end37
  %36 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13911
  %protocol51 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %36, i32 0, i32 1, !dbg !13913
  store i8 0, i8* %protocol51, align 8, !dbg !13914
  %37 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13915
  %command52 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %37, i32 0, i32 14, !dbg !13916
  store i8 -97, i8* %command52, align 1, !dbg !13917
  %38 = load i8, i8* %sa, align 1, !dbg !13918
  %39 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13919
  %feature53 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %39, i32 0, i32 8, !dbg !13920
  store i8 %38, i8* %feature53, align 1, !dbg !13921
  %40 = load i8, i8* %all, align 1, !dbg !13922
  %41 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13923
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %41, i32 0, i32 3, !dbg !13924
  store i8 %40, i8* %hob_feature, align 2, !dbg !13925
  br label %if.end54

if.end54:                                         ; preds = %if.else50, %if.then44
  %42 = load i64, i64* %block, align 8, !dbg !13926
  %shr = lshr i64 %42, 16, !dbg !13927
  %and55 = and i64 %shr, 255, !dbg !13928
  %conv56 = trunc i64 %and55 to i8, !dbg !13929
  %43 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13930
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %43, i32 0, i32 12, !dbg !13931
  store i8 %conv56, i8* %lbah, align 1, !dbg !13932
  %44 = load i64, i64* %block, align 8, !dbg !13933
  %shr57 = lshr i64 %44, 8, !dbg !13934
  %and58 = and i64 %shr57, 255, !dbg !13935
  %conv59 = trunc i64 %and58 to i8, !dbg !13936
  %45 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13937
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %45, i32 0, i32 11, !dbg !13938
  store i8 %conv59, i8* %lbam, align 2, !dbg !13939
  %46 = load i64, i64* %block, align 8, !dbg !13940
  %and60 = and i64 %46, 255, !dbg !13941
  %conv61 = trunc i64 %and60 to i8, !dbg !13940
  %47 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13942
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %47, i32 0, i32 10, !dbg !13943
  store i8 %conv61, i8* %lbal, align 1, !dbg !13944
  %48 = load i64, i64* %block, align 8, !dbg !13945
  %shr62 = lshr i64 %48, 40, !dbg !13946
  %and63 = and i64 %shr62, 255, !dbg !13947
  %conv64 = trunc i64 %and63 to i8, !dbg !13948
  %49 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13949
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %49, i32 0, i32 7, !dbg !13950
  store i8 %conv64, i8* %hob_lbah, align 2, !dbg !13951
  %50 = load i64, i64* %block, align 8, !dbg !13952
  %shr65 = lshr i64 %50, 32, !dbg !13953
  %and66 = and i64 %shr65, 255, !dbg !13954
  %conv67 = trunc i64 %and66 to i8, !dbg !13955
  %51 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13956
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %51, i32 0, i32 6, !dbg !13957
  store i8 %conv67, i8* %hob_lbam, align 1, !dbg !13958
  %52 = load i64, i64* %block, align 8, !dbg !13959
  %shr68 = lshr i64 %52, 24, !dbg !13960
  %and69 = and i64 %shr68, 255, !dbg !13961
  %conv70 = trunc i64 %and69 to i8, !dbg !13962
  %53 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13963
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %53, i32 0, i32 5, !dbg !13964
  store i8 %conv70, i8* %hob_lbal, align 4, !dbg !13965
  %54 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13966
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %54, i32 0, i32 13, !dbg !13967
  store i8 64, i8* %device, align 4, !dbg !13968
  %55 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !13969
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %55, i32 0, i32 0, !dbg !13970
  %56 = load i64, i64* %flags, align 8, !dbg !13971
  %or71 = or i64 %56, 7, !dbg !13971
  store i64 %or71, i64* %flags, align 8, !dbg !13971
  store i32 0, i32* %retval, align 4, !dbg !13972
  br label %return, !dbg !13972

invalid_fld:                                      ; preds = %if.then35, %if.then22, %if.then
  call void @llvm.dbg.label(metadata !13973), !dbg !13974
  %57 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13975
  %dev72 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %57, i32 0, i32 1, !dbg !13976
  %58 = load %struct.ata_device*, %struct.ata_device** %dev72, align 8, !dbg !13976
  %59 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13977
  %60 = load i16, i16* %fp, align 2, !dbg !13978
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %58, %struct.scsi_cmnd* %59, i16 zeroext %60, i8 zeroext -1) #10, !dbg !13979
  store i32 1, i32* %retval, align 4, !dbg !13980
  br label %return, !dbg !13980

invalid_param_len:                                ; preds = %if.then25
  call void @llvm.dbg.label(metadata !13981), !dbg !13982
  %61 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13983
  %dev73 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %61, i32 0, i32 1, !dbg !13984
  %62 = load %struct.ata_device*, %struct.ata_device** %dev73, align 8, !dbg !13984
  %63 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !13985
  call void @ata_scsi_set_sense(%struct.ata_device* %62, %struct.scsi_cmnd* %63, i8 zeroext 5, i8 zeroext 26, i8 zeroext 0) #10, !dbg !13986
  store i32 1, i32* %retval, align 4, !dbg !13987
  br label %return, !dbg !13987

return:                                           ; preds = %invalid_param_len, %invalid_fld, %if.end54
  %64 = load i32, i32* %retval, align 4, !dbg !13988
  ret i32 %64, !dbg !13988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_security_inout_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !13989 {
entry:
  %p.addr.i.i.i57 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i.i57, metadata !12827, metadata !DIExpression()), !dbg !13990
  %p.addr.i.i58 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i58, metadata !12850, metadata !DIExpression()), !dbg !13994
  %p.addr.i59 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i59, metadata !12852, metadata !DIExpression()), !dbg !13995
  %p.addr.i.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i.i, metadata !13247, metadata !DIExpression()), !dbg !13996
  %p.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i, metadata !13265, metadata !DIExpression()), !dbg !14000
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !13267, metadata !DIExpression()), !dbg !14001
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %cdb = alloca i8*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %secp = alloca i8, align 1
  %send = alloca i8, align 1
  %spsp = alloca i16, align 2
  %len = alloca i32, align 4
  %dma = alloca i8, align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14002, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !14004, metadata !DIExpression()), !dbg !14005
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14006
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !14007
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !14007
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !14005
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !14008, metadata !DIExpression()), !dbg !14009
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14010
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 14, !dbg !14011
  %3 = load i8*, i8** %cmnd, align 8, !dbg !14011
  store i8* %3, i8** %cdb, align 8, !dbg !14009
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !14012, metadata !DIExpression()), !dbg !14013
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14014
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 4, !dbg !14015
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !14013
  call void @llvm.dbg.declare(metadata i8* %secp, metadata !14016, metadata !DIExpression()), !dbg !14017
  %5 = load i8*, i8** %cdb, align 8, !dbg !14018
  %arrayidx = getelementptr i8, i8* %5, i64 1, !dbg !14018
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14018
  store i8 %6, i8* %secp, align 1, !dbg !14017
  call void @llvm.dbg.declare(metadata i8* %send, metadata !14019, metadata !DIExpression()), !dbg !14020
  %7 = load i8*, i8** %cdb, align 8, !dbg !14021
  %arrayidx2 = getelementptr i8, i8* %7, i64 0, !dbg !14021
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !14021
  %conv = zext i8 %8 to i32, !dbg !14021
  %cmp = icmp eq i32 %conv, 181, !dbg !14022
  %frombool = zext i1 %cmp to i8, !dbg !14020
  store i8 %frombool, i8* %send, align 1, !dbg !14020
  call void @llvm.dbg.declare(metadata i16* %spsp, metadata !14023, metadata !DIExpression()), !dbg !14024
  %9 = load i8*, i8** %cdb, align 8, !dbg !14025
  %arrayidx4 = getelementptr i8, i8* %9, i64 2, !dbg !14025
  store i8* %arrayidx4, i8** %p.addr.i, align 8
  %10 = load i8*, i8** %p.addr.i, align 8, !dbg !14026
  %11 = bitcast i8* %10 to i16*, !dbg !14027
  store i16* %11, i16** %p.addr.i.i, align 8
  %12 = load i16*, i16** %p.addr.i.i, align 8, !dbg !14028
  store i16* %12, i16** %p.addr.i.i.i, align 8
  %13 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !14029
  %14 = load i16, i16* %13, align 2, !dbg !14029
  %15 = call i1 @llvm.is.constant.i16(i16 %14) #5, !dbg !14029
  br i1 %15, label %cond.true.i.i.i, label %cond.false.i.i.i, !dbg !14029

cond.true.i.i.i:                                  ; preds = %entry
  %16 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !14029
  %17 = load i16, i16* %16, align 2, !dbg !14029
  %conv.i.i.i = zext i16 %17 to i32, !dbg !14029
  %and.i.i.i = and i32 %conv.i.i.i, 255, !dbg !14029
  %shl.i.i.i = shl i32 %and.i.i.i, 8, !dbg !14029
  %18 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !14029
  %19 = load i16, i16* %18, align 2, !dbg !14029
  %conv1.i.i.i = zext i16 %19 to i32, !dbg !14029
  %and2.i.i.i = and i32 %conv1.i.i.i, 65280, !dbg !14029
  %shr.i.i.i = ashr i32 %and2.i.i.i, 8, !dbg !14029
  %or.i.i.i = or i32 %shl.i.i.i, %shr.i.i.i, !dbg !14029
  %conv3.i.i.i = trunc i32 %or.i.i.i to i16, !dbg !14029
  %conv4.i.i.i = zext i16 %conv3.i.i.i to i32, !dbg !14029
  br label %get_unaligned_be16.exit, !dbg !14029

cond.false.i.i.i:                                 ; preds = %entry
  %20 = load i16*, i16** %p.addr.i.i.i, align 8, !dbg !14029
  %21 = load i16, i16* %20, align 2, !dbg !14029
  %call.i.i.i = call zeroext i16 @__fswab16(i16 zeroext %21) #12, !dbg !14029
  %conv5.i.i.i = zext i16 %call.i.i.i to i32, !dbg !14029
  br label %get_unaligned_be16.exit, !dbg !14029

get_unaligned_be16.exit:                          ; preds = %cond.true.i.i.i, %cond.false.i.i.i
  %cond.i.i.i = phi i32 [ %conv4.i.i.i, %cond.true.i.i.i ], [ %conv5.i.i.i, %cond.false.i.i.i ], !dbg !14029
  %conv6.i.i.i = trunc i32 %cond.i.i.i to i16, !dbg !14029
  store i16 %conv6.i.i.i, i16* %spsp, align 2, !dbg !14024
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14030, metadata !DIExpression()), !dbg !14031
  %22 = load i8*, i8** %cdb, align 8, !dbg !14032
  %arrayidx5 = getelementptr i8, i8* %22, i64 6, !dbg !14032
  store i8* %arrayidx5, i8** %p.addr.i59, align 8
  %23 = load i8*, i8** %p.addr.i59, align 8, !dbg !14033
  %24 = bitcast i8* %23 to i32*, !dbg !14034
  store i32* %24, i32** %p.addr.i.i58, align 8
  %25 = load i32*, i32** %p.addr.i.i58, align 8, !dbg !14035
  store i32* %25, i32** %p.addr.i.i.i57, align 8
  %26 = load i32*, i32** %p.addr.i.i.i57, align 8, !dbg !14036
  %27 = load i32, i32* %26, align 4, !dbg !14036
  %28 = call i1 @llvm.is.constant.i32(i32 %27) #5, !dbg !14036
  br i1 %28, label %cond.true.i.i.i64, label %cond.false.i.i.i66, !dbg !14036

cond.true.i.i.i64:                                ; preds = %get_unaligned_be16.exit
  %29 = load i32*, i32** %p.addr.i.i.i57, align 8, !dbg !14036
  %30 = load i32, i32* %29, align 4, !dbg !14036
  %and.i.i.i60 = and i32 %30, 255, !dbg !14036
  %shl.i.i.i61 = shl i32 %and.i.i.i60, 24, !dbg !14036
  %31 = load i32*, i32** %p.addr.i.i.i57, align 8, !dbg !14036
  %32 = load i32, i32* %31, align 4, !dbg !14036
  %and1.i.i.i = and i32 %32, 65280, !dbg !14036
  %shl2.i.i.i = shl i32 %and1.i.i.i, 8, !dbg !14036
  %or.i.i.i62 = or i32 %shl.i.i.i61, %shl2.i.i.i, !dbg !14036
  %33 = load i32*, i32** %p.addr.i.i.i57, align 8, !dbg !14036
  %34 = load i32, i32* %33, align 4, !dbg !14036
  %and3.i.i.i = and i32 %34, 16711680, !dbg !14036
  %shr.i.i.i63 = lshr i32 %and3.i.i.i, 8, !dbg !14036
  %or4.i.i.i = or i32 %or.i.i.i62, %shr.i.i.i63, !dbg !14036
  %35 = load i32*, i32** %p.addr.i.i.i57, align 8, !dbg !14036
  %36 = load i32, i32* %35, align 4, !dbg !14036
  %and5.i.i.i = and i32 %36, -16777216, !dbg !14036
  %shr6.i.i.i = lshr i32 %and5.i.i.i, 24, !dbg !14036
  %or7.i.i.i = or i32 %or4.i.i.i, %shr6.i.i.i, !dbg !14036
  br label %get_unaligned_be32.exit, !dbg !14036

cond.false.i.i.i66:                               ; preds = %get_unaligned_be16.exit
  %37 = load i32*, i32** %p.addr.i.i.i57, align 8, !dbg !14036
  %38 = load i32, i32* %37, align 4, !dbg !14036
  %call.i.i.i65 = call i32 @__fswab32(i32 %38) #12, !dbg !14036
  br label %get_unaligned_be32.exit, !dbg !14036

get_unaligned_be32.exit:                          ; preds = %cond.true.i.i.i64, %cond.false.i.i.i66
  %cond.i.i.i67 = phi i32 [ %or7.i.i.i, %cond.true.i.i.i64 ], [ %call.i.i.i65, %cond.false.i.i.i66 ], !dbg !14036
  store i32 %cond.i.i.i67, i32* %len, align 4, !dbg !14031
  call void @llvm.dbg.declare(metadata i8* %dma, metadata !14037, metadata !DIExpression()), !dbg !14038
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14039
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %39, i32 0, i32 1, !dbg !14040
  %40 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14040
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %40, i32 0, i32 3, !dbg !14041
  %41 = load i64, i64* %flags, align 16, !dbg !14041
  %and = and i64 %41, 4096, !dbg !14042
  %tobool = icmp ne i64 %and, 0, !dbg !14043
  %lnot = xor i1 %tobool, true, !dbg !14043
  %frombool7 = zext i1 %lnot to i8, !dbg !14038
  store i8 %frombool7, i8* %dma, align 1, !dbg !14038
  %42 = load i8, i8* %secp, align 1, !dbg !14044
  %conv8 = zext i8 %42 to i32, !dbg !14044
  %cmp9 = icmp eq i32 %conv8, 239, !dbg !14046
  br i1 %cmp9, label %if.then, label %if.end, !dbg !14047

if.then:                                          ; preds = %get_unaligned_be32.exit
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14048
  %dev11 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 1, !dbg !14050
  %44 = load %struct.ata_device*, %struct.ata_device** %dev11, align 8, !dbg !14050
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14051
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %44, %struct.scsi_cmnd* %45, i16 zeroext 1, i8 zeroext 0) #10, !dbg !14052
  store i32 1, i32* %retval, align 4, !dbg !14053
  br label %return, !dbg !14053

if.end:                                           ; preds = %get_unaligned_be32.exit
  %46 = load i8*, i8** %cdb, align 8, !dbg !14054
  %arrayidx12 = getelementptr i8, i8* %46, i64 4, !dbg !14054
  %47 = load i8, i8* %arrayidx12, align 1, !dbg !14054
  %conv13 = zext i8 %47 to i32, !dbg !14054
  %and14 = and i32 %conv13, 7, !dbg !14056
  %tobool15 = icmp ne i32 %and14, 0, !dbg !14056
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !14057

if.then16:                                        ; preds = %if.end
  %48 = load i32, i32* %len, align 4, !dbg !14058
  %cmp17 = icmp ugt i32 %48, 65535, !dbg !14061
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !14062

if.then19:                                        ; preds = %if.then16
  %49 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14063
  %dev20 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %49, i32 0, i32 1, !dbg !14065
  %50 = load %struct.ata_device*, %struct.ata_device** %dev20, align 8, !dbg !14065
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14066
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %50, %struct.scsi_cmnd* %51, i16 zeroext 6, i8 zeroext 0) #10, !dbg !14067
  store i32 1, i32* %retval, align 4, !dbg !14068
  br label %return, !dbg !14068

if.end21:                                         ; preds = %if.then16
  br label %if.end27, !dbg !14069

if.else:                                          ; preds = %if.end
  %52 = load i32, i32* %len, align 4, !dbg !14070
  %cmp22 = icmp ugt i32 %52, 33553920, !dbg !14073
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !14074

if.then24:                                        ; preds = %if.else
  %53 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14075
  %dev25 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %53, i32 0, i32 1, !dbg !14077
  %54 = load %struct.ata_device*, %struct.ata_device** %dev25, align 8, !dbg !14077
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14078
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %54, %struct.scsi_cmnd* %55, i16 zeroext 6, i8 zeroext 0) #10, !dbg !14079
  store i32 1, i32* %retval, align 4, !dbg !14080
  br label %return, !dbg !14080

if.end26:                                         ; preds = %if.else
  %56 = load i32, i32* %len, align 4, !dbg !14081
  %add = add i32 %56, 511, !dbg !14082
  %div = udiv i32 %add, 512, !dbg !14083
  store i32 %div, i32* %len, align 4, !dbg !14084
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end21
  %57 = load i8, i8* %dma, align 1, !dbg !14085
  %tobool28 = trunc i8 %57 to i1, !dbg !14085
  %58 = zext i1 %tobool28 to i64, !dbg !14085
  %cond = select i1 %tobool28, i32 2, i32 1, !dbg !14085
  %conv30 = trunc i32 %cond to i8, !dbg !14085
  %59 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14086
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %59, i32 0, i32 1, !dbg !14087
  store i8 %conv30, i8* %protocol, align 8, !dbg !14088
  %60 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14089
  %flags31 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %60, i32 0, i32 0, !dbg !14090
  %61 = load i64, i64* %flags31, align 8, !dbg !14091
  %or = or i64 %61, 22, !dbg !14091
  store i64 %or, i64* %flags31, align 8, !dbg !14091
  %62 = load i8, i8* %send, align 1, !dbg !14092
  %tobool32 = trunc i8 %62 to i1, !dbg !14092
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !14094

if.then33:                                        ; preds = %if.end27
  %63 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14095
  %flags34 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %63, i32 0, i32 0, !dbg !14096
  %64 = load i64, i64* %flags34, align 8, !dbg !14097
  %or35 = or i64 %64, 8, !dbg !14097
  store i64 %or35, i64* %flags34, align 8, !dbg !14097
  br label %if.end36, !dbg !14095

if.end36:                                         ; preds = %if.then33, %if.end27
  %65 = load i32, i32* %len, align 4, !dbg !14098
  %66 = load i8, i8* %send, align 1, !dbg !14099
  %tobool37 = trunc i8 %66 to i1, !dbg !14099
  %67 = load i8, i8* %dma, align 1, !dbg !14100
  %tobool38 = trunc i8 %67 to i1, !dbg !14100
  %call39 = call zeroext i8 @ata_scsi_trusted_op(i32 %65, i1 zeroext %tobool37, i1 zeroext %tobool38) #10, !dbg !14101
  %68 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14102
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %68, i32 0, i32 14, !dbg !14103
  store i8 %call39, i8* %command, align 1, !dbg !14104
  %69 = load i8, i8* %secp, align 1, !dbg !14105
  %70 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14106
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %70, i32 0, i32 8, !dbg !14107
  store i8 %69, i8* %feature, align 1, !dbg !14108
  %71 = load i16, i16* %spsp, align 2, !dbg !14109
  %conv40 = zext i16 %71 to i32, !dbg !14109
  %and41 = and i32 %conv40, 255, !dbg !14110
  %conv42 = trunc i32 %and41 to i8, !dbg !14109
  %72 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14111
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %72, i32 0, i32 11, !dbg !14112
  store i8 %conv42, i8* %lbam, align 2, !dbg !14113
  %73 = load i16, i16* %spsp, align 2, !dbg !14114
  %conv43 = zext i16 %73 to i32, !dbg !14114
  %shr = ashr i32 %conv43, 8, !dbg !14115
  %conv44 = trunc i32 %shr to i8, !dbg !14114
  %74 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14116
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %74, i32 0, i32 12, !dbg !14117
  store i8 %conv44, i8* %lbah, align 1, !dbg !14118
  %75 = load i32, i32* %len, align 4, !dbg !14119
  %tobool45 = icmp ne i32 %75, 0, !dbg !14119
  br i1 %tobool45, label %if.then46, label %if.else51, !dbg !14121

if.then46:                                        ; preds = %if.end36
  %76 = load i32, i32* %len, align 4, !dbg !14122
  %and47 = and i32 %76, 255, !dbg !14124
  %conv48 = trunc i32 %and47 to i8, !dbg !14122
  %77 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14125
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %77, i32 0, i32 9, !dbg !14126
  store i8 %conv48, i8* %nsect, align 8, !dbg !14127
  %78 = load i32, i32* %len, align 4, !dbg !14128
  %shr49 = lshr i32 %78, 8, !dbg !14129
  %conv50 = trunc i32 %shr49 to i8, !dbg !14128
  %79 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14130
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %79, i32 0, i32 10, !dbg !14131
  store i8 %conv50, i8* %lbal, align 1, !dbg !14132
  br label %if.end56, !dbg !14133

if.else51:                                        ; preds = %if.end36
  %80 = load i8, i8* %send, align 1, !dbg !14134
  %tobool52 = trunc i8 %80 to i1, !dbg !14134
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !14137

if.then53:                                        ; preds = %if.else51
  %81 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14138
  %lbah54 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %81, i32 0, i32 12, !dbg !14139
  store i8 -128, i8* %lbah54, align 1, !dbg !14140
  br label %if.end55, !dbg !14138

if.end55:                                         ; preds = %if.then53, %if.else51
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then46
  %82 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14141
  call void @ata_qc_set_pc_nbytes(%struct.ata_queued_cmd* %82) #10, !dbg !14142
  store i32 0, i32* %retval, align 4, !dbg !14143
  br label %return, !dbg !14143

return:                                           ; preds = %if.end56, %if.then24, %if.then19, %if.then
  %83 = load i32, i32* %retval, align 4, !dbg !14144
  ret i32 %83, !dbg !14144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_scsi_start_stop_xlat(%struct.ata_queued_cmd* %qc) #0 !dbg !14145 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %cdb = alloca i8*, align 8
  %fp = alloca i16, align 2
  %bp = alloca i8, align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14146, metadata !DIExpression()), !dbg !14147
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !14148, metadata !DIExpression()), !dbg !14149
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14150
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !14151
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !14151
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !14149
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !14152, metadata !DIExpression()), !dbg !14153
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14154
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 4, !dbg !14155
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !14153
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !14156, metadata !DIExpression()), !dbg !14157
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14158
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 14, !dbg !14159
  %4 = load i8*, i8** %cmnd, align 8, !dbg !14159
  store i8* %4, i8** %cdb, align 8, !dbg !14157
  call void @llvm.dbg.declare(metadata i16* %fp, metadata !14160, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.declare(metadata i8* %bp, metadata !14162, metadata !DIExpression()), !dbg !14163
  store i8 -1, i8* %bp, align 1, !dbg !14163
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14164
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 12, !dbg !14166
  %6 = load i16, i16* %cmd_len, align 4, !dbg !14166
  %conv = zext i16 %6 to i32, !dbg !14164
  %cmp = icmp slt i32 %conv, 5, !dbg !14167
  br i1 %cmp, label %if.then, label %if.end, !dbg !14168

if.then:                                          ; preds = %entry
  store i16 4, i16* %fp, align 2, !dbg !14169
  br label %invalid_fld, !dbg !14171

if.end:                                           ; preds = %entry
  %7 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14172
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %7, i32 0, i32 0, !dbg !14173
  %8 = load i64, i64* %flags, align 8, !dbg !14174
  %or = or i64 %8, 6, !dbg !14174
  store i64 %or, i64* %flags, align 8, !dbg !14174
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14175
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 1, !dbg !14176
  store i8 0, i8* %protocol, align 8, !dbg !14177
  %10 = load i8*, i8** %cdb, align 8, !dbg !14178
  %arrayidx = getelementptr i8, i8* %10, i64 1, !dbg !14178
  %11 = load i8, i8* %arrayidx, align 1, !dbg !14178
  %conv3 = zext i8 %11 to i32, !dbg !14178
  %and = and i32 %conv3, 1, !dbg !14180
  %tobool = icmp ne i32 %and, 0, !dbg !14180
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !14181

if.then4:                                         ; preds = %if.end
  br label %if.end5, !dbg !14182

if.end5:                                          ; preds = %if.then4, %if.end
  %12 = load i8*, i8** %cdb, align 8, !dbg !14184
  %arrayidx6 = getelementptr i8, i8* %12, i64 4, !dbg !14184
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !14184
  %conv7 = zext i8 %13 to i32, !dbg !14184
  %and8 = and i32 %conv7, 2, !dbg !14186
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14186
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !14187

if.then10:                                        ; preds = %if.end5
  store i16 4, i16* %fp, align 2, !dbg !14188
  store i8 1, i8* %bp, align 1, !dbg !14190
  br label %invalid_fld, !dbg !14191

if.end11:                                         ; preds = %if.end5
  %14 = load i8*, i8** %cdb, align 8, !dbg !14192
  %arrayidx12 = getelementptr i8, i8* %14, i64 4, !dbg !14192
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !14192
  %conv13 = zext i8 %15 to i32, !dbg !14192
  %shr = ashr i32 %conv13, 4, !dbg !14194
  %and14 = and i32 %shr, 15, !dbg !14195
  %cmp15 = icmp ne i32 %and14, 0, !dbg !14196
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !14197

if.then17:                                        ; preds = %if.end11
  store i16 4, i16* %fp, align 2, !dbg !14198
  store i8 3, i8* %bp, align 1, !dbg !14200
  br label %invalid_fld, !dbg !14201

if.end18:                                         ; preds = %if.end11
  %16 = load i8*, i8** %cdb, align 8, !dbg !14202
  %arrayidx19 = getelementptr i8, i8* %16, i64 4, !dbg !14202
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !14202
  %conv20 = zext i8 %17 to i32, !dbg !14202
  %and21 = and i32 %conv20, 1, !dbg !14204
  %tobool22 = icmp ne i32 %and21, 0, !dbg !14204
  br i1 %tobool22, label %if.then23, label %if.else37, !dbg !14205

if.then23:                                        ; preds = %if.end18
  %18 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14206
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %18, i32 0, i32 9, !dbg !14208
  store i8 1, i8* %nsect, align 8, !dbg !14209
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14210
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 1, !dbg !14212
  %20 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14212
  %flags24 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %20, i32 0, i32 3, !dbg !14213
  %21 = load i64, i64* %flags24, align 16, !dbg !14213
  %and25 = and i64 %21, 1, !dbg !14214
  %tobool26 = icmp ne i64 %and25, 0, !dbg !14214
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !14215

if.then27:                                        ; preds = %if.then23
  %22 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14216
  %flags28 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %22, i32 0, i32 0, !dbg !14218
  %23 = load i64, i64* %flags28, align 8, !dbg !14219
  %or29 = or i64 %23, 16, !dbg !14219
  store i64 %or29, i64* %flags28, align 8, !dbg !14219
  %24 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14220
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %24, i32 0, i32 12, !dbg !14221
  store i8 0, i8* %lbah, align 1, !dbg !14222
  %25 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14223
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %25, i32 0, i32 11, !dbg !14224
  store i8 0, i8* %lbam, align 2, !dbg !14225
  %26 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14226
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %26, i32 0, i32 10, !dbg !14227
  store i8 0, i8* %lbal, align 1, !dbg !14228
  %27 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14229
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %27, i32 0, i32 13, !dbg !14230
  %28 = load i8, i8* %device, align 4, !dbg !14231
  %conv30 = zext i8 %28 to i32, !dbg !14231
  %or31 = or i32 %conv30, 64, !dbg !14231
  %conv32 = trunc i32 %or31 to i8, !dbg !14231
  store i8 %conv32, i8* %device, align 4, !dbg !14231
  br label %if.end36, !dbg !14232

if.else:                                          ; preds = %if.then23
  %29 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14233
  %lbal33 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %29, i32 0, i32 10, !dbg !14235
  store i8 1, i8* %lbal33, align 1, !dbg !14236
  %30 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14237
  %lbam34 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %30, i32 0, i32 11, !dbg !14238
  store i8 0, i8* %lbam34, align 2, !dbg !14239
  %31 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14240
  %lbah35 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %31, i32 0, i32 12, !dbg !14241
  store i8 0, i8* %lbah35, align 1, !dbg !14242
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then27
  %32 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14243
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %32, i32 0, i32 14, !dbg !14244
  store i8 64, i8* %command, align 1, !dbg !14245
  br label %if.end54, !dbg !14246

if.else37:                                        ; preds = %if.end18
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14247
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %33, i32 0, i32 0, !dbg !14250
  %34 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14250
  %flags38 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %34, i32 0, i32 3, !dbg !14251
  %35 = load i64, i64* %flags38, align 8, !dbg !14251
  %and39 = and i64 %35, 2048, !dbg !14252
  %tobool40 = icmp ne i64 %and39, 0, !dbg !14252
  br i1 %tobool40, label %land.lhs.true, label %if.end44, !dbg !14253

land.lhs.true:                                    ; preds = %if.else37
  %36 = load i32, i32* @system_state, align 4, !dbg !14254
  %cmp41 = icmp eq i32 %36, 4, !dbg !14255
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !14256

if.then43:                                        ; preds = %land.lhs.true
  br label %skip, !dbg !14257

if.end44:                                         ; preds = %land.lhs.true, %if.else37
  %37 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14258
  %ap45 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %37, i32 0, i32 0, !dbg !14260
  %38 = load %struct.ata_port*, %struct.ata_port** %ap45, align 8, !dbg !14260
  %flags46 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 3, !dbg !14261
  %39 = load i64, i64* %flags46, align 8, !dbg !14261
  %and47 = and i64 %39, 4096, !dbg !14262
  %tobool48 = icmp ne i64 %and47, 0, !dbg !14262
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !14263

land.lhs.true49:                                  ; preds = %if.end44
  %call = call zeroext i1 @system_entering_hibernation() #10, !dbg !14264
  br i1 %call, label %if.then51, label %if.end52, !dbg !14265

if.then51:                                        ; preds = %land.lhs.true49
  br label %skip, !dbg !14266

if.end52:                                         ; preds = %land.lhs.true49, %if.end44
  %40 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14267
  %command53 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %40, i32 0, i32 14, !dbg !14268
  store i8 -32, i8* %command53, align 1, !dbg !14269
  br label %if.end54

if.end54:                                         ; preds = %if.end52, %if.end36
  store i32 0, i32* %retval, align 4, !dbg !14270
  br label %return, !dbg !14270

invalid_fld:                                      ; preds = %if.then17, %if.then10, %if.then
  call void @llvm.dbg.label(metadata !14271), !dbg !14272
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14273
  %dev55 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %41, i32 0, i32 1, !dbg !14274
  %42 = load %struct.ata_device*, %struct.ata_device** %dev55, align 8, !dbg !14274
  %43 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14275
  %44 = load i16, i16* %fp, align 2, !dbg !14276
  %45 = load i8, i8* %bp, align 1, !dbg !14277
  call void @ata_scsi_set_invalid_field(%struct.ata_device* %42, %struct.scsi_cmnd* %43, i16 zeroext %44, i8 zeroext %45) #10, !dbg !14278
  store i32 1, i32* %retval, align 4, !dbg !14279
  br label %return, !dbg !14279

skip:                                             ; preds = %if.then51, %if.then43
  call void @llvm.dbg.label(metadata !14280), !dbg !14281
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14282
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %46, i32 0, i32 24, !dbg !14283
  store i32 0, i32* %result, align 8, !dbg !14284
  store i32 1, i32* %retval, align 4, !dbg !14285
  br label %return, !dbg !14285

return:                                           ; preds = %skip, %invalid_fld, %if.end54
  %47 = load i32, i32* %retval, align 4, !dbg !14286
  ret i32 %47, !dbg !14286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @req_get_ioprio(%struct.request* %req) #0 !dbg !14287 {
entry:
  %req.addr = alloca %struct.request*, align 8
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !14290, metadata !DIExpression()), !dbg !14291
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !14292
  %ioprio = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 23, !dbg !14293
  %1 = load i16, i16* %ioprio, align 8, !dbg !14293
  ret i16 %1, !dbg !14294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_10_lba_len(i8* %cdb, i64* %plba, i32* %plen) #0 !dbg !14295 {
entry:
  %cdb.addr = alloca i8*, align 8
  %plba.addr = alloca i64*, align 8
  %plen.addr = alloca i32*, align 8
  %lba = alloca i64, align 8
  %len = alloca i32, align 4
  store i8* %cdb, i8** %cdb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdb.addr, metadata !14298, metadata !DIExpression()), !dbg !14299
  store i64* %plba, i64** %plba.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %plba.addr, metadata !14300, metadata !DIExpression()), !dbg !14301
  store i32* %plen, i32** %plen.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %plen.addr, metadata !14302, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.declare(metadata i64* %lba, metadata !14304, metadata !DIExpression()), !dbg !14305
  store i64 0, i64* %lba, align 8, !dbg !14305
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14306, metadata !DIExpression()), !dbg !14307
  store i32 0, i32* %len, align 4, !dbg !14307
  %0 = load i8*, i8** %cdb.addr, align 8, !dbg !14308
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !14308
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14308
  %conv = zext i8 %1 to i64, !dbg !14309
  %shl = shl i64 %conv, 24, !dbg !14310
  %2 = load i64, i64* %lba, align 8, !dbg !14311
  %or = or i64 %2, %shl, !dbg !14311
  store i64 %or, i64* %lba, align 8, !dbg !14311
  %3 = load i8*, i8** %cdb.addr, align 8, !dbg !14312
  %arrayidx1 = getelementptr i8, i8* %3, i64 3, !dbg !14312
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !14312
  %conv2 = zext i8 %4 to i64, !dbg !14313
  %shl3 = shl i64 %conv2, 16, !dbg !14314
  %5 = load i64, i64* %lba, align 8, !dbg !14315
  %or4 = or i64 %5, %shl3, !dbg !14315
  store i64 %or4, i64* %lba, align 8, !dbg !14315
  %6 = load i8*, i8** %cdb.addr, align 8, !dbg !14316
  %arrayidx5 = getelementptr i8, i8* %6, i64 4, !dbg !14316
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !14316
  %conv6 = zext i8 %7 to i64, !dbg !14317
  %shl7 = shl i64 %conv6, 8, !dbg !14318
  %8 = load i64, i64* %lba, align 8, !dbg !14319
  %or8 = or i64 %8, %shl7, !dbg !14319
  store i64 %or8, i64* %lba, align 8, !dbg !14319
  %9 = load i8*, i8** %cdb.addr, align 8, !dbg !14320
  %arrayidx9 = getelementptr i8, i8* %9, i64 5, !dbg !14320
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !14320
  %conv10 = zext i8 %10 to i64, !dbg !14321
  %11 = load i64, i64* %lba, align 8, !dbg !14322
  %or11 = or i64 %11, %conv10, !dbg !14322
  store i64 %or11, i64* %lba, align 8, !dbg !14322
  %12 = load i8*, i8** %cdb.addr, align 8, !dbg !14323
  %arrayidx12 = getelementptr i8, i8* %12, i64 7, !dbg !14323
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !14323
  %conv13 = zext i8 %13 to i32, !dbg !14324
  %shl14 = shl i32 %conv13, 8, !dbg !14325
  %14 = load i32, i32* %len, align 4, !dbg !14326
  %or15 = or i32 %14, %shl14, !dbg !14326
  store i32 %or15, i32* %len, align 4, !dbg !14326
  %15 = load i8*, i8** %cdb.addr, align 8, !dbg !14327
  %arrayidx16 = getelementptr i8, i8* %15, i64 8, !dbg !14327
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !14327
  %conv17 = zext i8 %16 to i32, !dbg !14328
  %17 = load i32, i32* %len, align 4, !dbg !14329
  %or18 = or i32 %17, %conv17, !dbg !14329
  store i32 %or18, i32* %len, align 4, !dbg !14329
  %18 = load i64, i64* %lba, align 8, !dbg !14330
  %19 = load i64*, i64** %plba.addr, align 8, !dbg !14331
  store i64 %18, i64* %19, align 8, !dbg !14332
  %20 = load i32, i32* %len, align 4, !dbg !14333
  %21 = load i32*, i32** %plen.addr, align 8, !dbg !14334
  store i32 %20, i32* %21, align 4, !dbg !14335
  ret void, !dbg !14336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_check_nblocks(%struct.scsi_cmnd* %scmd, i32 %n_blocks) #0 !dbg !14337 {
entry:
  %retval = alloca i1, align 1
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %n_blocks.addr = alloca i32, align 4
  %rq = alloca %struct.request*, align 8
  %req_blocks = alloca i32, align 4
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !14340, metadata !DIExpression()), !dbg !14341
  store i32 %n_blocks, i32* %n_blocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_blocks.addr, metadata !14342, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.declare(metadata %struct.request** %rq, metadata !14344, metadata !DIExpression()), !dbg !14345
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !14346
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 19, !dbg !14347
  %1 = load %struct.request*, %struct.request** %request, align 8, !dbg !14347
  store %struct.request* %1, %struct.request** %rq, align 8, !dbg !14345
  call void @llvm.dbg.declare(metadata i32* %req_blocks, metadata !14348, metadata !DIExpression()), !dbg !14349
  %2 = load %struct.request*, %struct.request** %rq, align 8, !dbg !14350
  %call = call zeroext i1 @blk_rq_is_passthrough(%struct.request* %2) #10, !dbg !14352
  br i1 %call, label %if.end, label %if.then, !dbg !14353

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !14354
  br label %return, !dbg !14354

if.end:                                           ; preds = %entry
  %3 = load %struct.request*, %struct.request** %rq, align 8, !dbg !14355
  %call1 = call i32 @blk_rq_bytes(%struct.request* %3) #10, !dbg !14356
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !14357
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 1, !dbg !14358
  %5 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !14358
  %sector_size = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 20, !dbg !14359
  %6 = load i32, i32* %sector_size, align 4, !dbg !14359
  %div = udiv i32 %call1, %6, !dbg !14360
  store i32 %div, i32* %req_blocks, align 4, !dbg !14361
  %7 = load i32, i32* %n_blocks.addr, align 4, !dbg !14362
  %8 = load i32, i32* %req_blocks, align 4, !dbg !14364
  %cmp = icmp ugt i32 %7, %8, !dbg !14365
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14366

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !14367
  br label %return, !dbg !14367

if.end3:                                          ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !14368
  br label %return, !dbg !14368

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !14369
  ret i1 %9, !dbg !14369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_6_lba_len(i8* %cdb, i64* %plba, i32* %plen) #0 !dbg !14370 {
entry:
  %cdb.addr = alloca i8*, align 8
  %plba.addr = alloca i64*, align 8
  %plen.addr = alloca i32*, align 8
  %lba = alloca i64, align 8
  %len = alloca i32, align 4
  store i8* %cdb, i8** %cdb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdb.addr, metadata !14371, metadata !DIExpression()), !dbg !14372
  store i64* %plba, i64** %plba.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %plba.addr, metadata !14373, metadata !DIExpression()), !dbg !14374
  store i32* %plen, i32** %plen.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %plen.addr, metadata !14375, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.declare(metadata i64* %lba, metadata !14377, metadata !DIExpression()), !dbg !14378
  store i64 0, i64* %lba, align 8, !dbg !14378
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14379, metadata !DIExpression()), !dbg !14380
  %0 = load i8*, i8** %cdb.addr, align 8, !dbg !14381
  %arrayidx = getelementptr i8, i8* %0, i64 1, !dbg !14381
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14381
  %conv = zext i8 %1 to i32, !dbg !14381
  %and = and i32 %conv, 31, !dbg !14382
  %conv1 = sext i32 %and to i64, !dbg !14383
  %shl = shl i64 %conv1, 16, !dbg !14384
  %2 = load i64, i64* %lba, align 8, !dbg !14385
  %or = or i64 %2, %shl, !dbg !14385
  store i64 %or, i64* %lba, align 8, !dbg !14385
  %3 = load i8*, i8** %cdb.addr, align 8, !dbg !14386
  %arrayidx2 = getelementptr i8, i8* %3, i64 2, !dbg !14386
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !14386
  %conv3 = zext i8 %4 to i64, !dbg !14387
  %shl4 = shl i64 %conv3, 8, !dbg !14388
  %5 = load i64, i64* %lba, align 8, !dbg !14389
  %or5 = or i64 %5, %shl4, !dbg !14389
  store i64 %or5, i64* %lba, align 8, !dbg !14389
  %6 = load i8*, i8** %cdb.addr, align 8, !dbg !14390
  %arrayidx6 = getelementptr i8, i8* %6, i64 3, !dbg !14390
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !14390
  %conv7 = zext i8 %7 to i64, !dbg !14391
  %8 = load i64, i64* %lba, align 8, !dbg !14392
  %or8 = or i64 %8, %conv7, !dbg !14392
  store i64 %or8, i64* %lba, align 8, !dbg !14392
  %9 = load i8*, i8** %cdb.addr, align 8, !dbg !14393
  %arrayidx9 = getelementptr i8, i8* %9, i64 4, !dbg !14393
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !14393
  %conv10 = zext i8 %10 to i32, !dbg !14393
  store i32 %conv10, i32* %len, align 4, !dbg !14394
  %11 = load i64, i64* %lba, align 8, !dbg !14395
  %12 = load i64*, i64** %plba.addr, align 8, !dbg !14396
  store i64 %11, i64* %12, align 8, !dbg !14397
  %13 = load i32, i32* %len, align 4, !dbg !14398
  %14 = load i32*, i32** %plen.addr, align 8, !dbg !14399
  store i32 %13, i32* %14, align 4, !dbg !14400
  ret void, !dbg !14401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_16_lba_len(i8* %cdb, i64* %plba, i32* %plen) #0 !dbg !14402 {
entry:
  %cdb.addr = alloca i8*, align 8
  %plba.addr = alloca i64*, align 8
  %plen.addr = alloca i32*, align 8
  %lba = alloca i64, align 8
  %len = alloca i32, align 4
  store i8* %cdb, i8** %cdb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cdb.addr, metadata !14403, metadata !DIExpression()), !dbg !14404
  store i64* %plba, i64** %plba.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %plba.addr, metadata !14405, metadata !DIExpression()), !dbg !14406
  store i32* %plen, i32** %plen.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %plen.addr, metadata !14407, metadata !DIExpression()), !dbg !14408
  call void @llvm.dbg.declare(metadata i64* %lba, metadata !14409, metadata !DIExpression()), !dbg !14410
  store i64 0, i64* %lba, align 8, !dbg !14410
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14411, metadata !DIExpression()), !dbg !14412
  store i32 0, i32* %len, align 4, !dbg !14412
  %0 = load i8*, i8** %cdb.addr, align 8, !dbg !14413
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !14413
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14413
  %conv = zext i8 %1 to i64, !dbg !14414
  %shl = shl i64 %conv, 56, !dbg !14415
  %2 = load i64, i64* %lba, align 8, !dbg !14416
  %or = or i64 %2, %shl, !dbg !14416
  store i64 %or, i64* %lba, align 8, !dbg !14416
  %3 = load i8*, i8** %cdb.addr, align 8, !dbg !14417
  %arrayidx1 = getelementptr i8, i8* %3, i64 3, !dbg !14417
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !14417
  %conv2 = zext i8 %4 to i64, !dbg !14418
  %shl3 = shl i64 %conv2, 48, !dbg !14419
  %5 = load i64, i64* %lba, align 8, !dbg !14420
  %or4 = or i64 %5, %shl3, !dbg !14420
  store i64 %or4, i64* %lba, align 8, !dbg !14420
  %6 = load i8*, i8** %cdb.addr, align 8, !dbg !14421
  %arrayidx5 = getelementptr i8, i8* %6, i64 4, !dbg !14421
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !14421
  %conv6 = zext i8 %7 to i64, !dbg !14422
  %shl7 = shl i64 %conv6, 40, !dbg !14423
  %8 = load i64, i64* %lba, align 8, !dbg !14424
  %or8 = or i64 %8, %shl7, !dbg !14424
  store i64 %or8, i64* %lba, align 8, !dbg !14424
  %9 = load i8*, i8** %cdb.addr, align 8, !dbg !14425
  %arrayidx9 = getelementptr i8, i8* %9, i64 5, !dbg !14425
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !14425
  %conv10 = zext i8 %10 to i64, !dbg !14426
  %shl11 = shl i64 %conv10, 32, !dbg !14427
  %11 = load i64, i64* %lba, align 8, !dbg !14428
  %or12 = or i64 %11, %shl11, !dbg !14428
  store i64 %or12, i64* %lba, align 8, !dbg !14428
  %12 = load i8*, i8** %cdb.addr, align 8, !dbg !14429
  %arrayidx13 = getelementptr i8, i8* %12, i64 6, !dbg !14429
  %13 = load i8, i8* %arrayidx13, align 1, !dbg !14429
  %conv14 = zext i8 %13 to i64, !dbg !14430
  %shl15 = shl i64 %conv14, 24, !dbg !14431
  %14 = load i64, i64* %lba, align 8, !dbg !14432
  %or16 = or i64 %14, %shl15, !dbg !14432
  store i64 %or16, i64* %lba, align 8, !dbg !14432
  %15 = load i8*, i8** %cdb.addr, align 8, !dbg !14433
  %arrayidx17 = getelementptr i8, i8* %15, i64 7, !dbg !14433
  %16 = load i8, i8* %arrayidx17, align 1, !dbg !14433
  %conv18 = zext i8 %16 to i64, !dbg !14434
  %shl19 = shl i64 %conv18, 16, !dbg !14435
  %17 = load i64, i64* %lba, align 8, !dbg !14436
  %or20 = or i64 %17, %shl19, !dbg !14436
  store i64 %or20, i64* %lba, align 8, !dbg !14436
  %18 = load i8*, i8** %cdb.addr, align 8, !dbg !14437
  %arrayidx21 = getelementptr i8, i8* %18, i64 8, !dbg !14437
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !14437
  %conv22 = zext i8 %19 to i64, !dbg !14438
  %shl23 = shl i64 %conv22, 8, !dbg !14439
  %20 = load i64, i64* %lba, align 8, !dbg !14440
  %or24 = or i64 %20, %shl23, !dbg !14440
  store i64 %or24, i64* %lba, align 8, !dbg !14440
  %21 = load i8*, i8** %cdb.addr, align 8, !dbg !14441
  %arrayidx25 = getelementptr i8, i8* %21, i64 9, !dbg !14441
  %22 = load i8, i8* %arrayidx25, align 1, !dbg !14441
  %conv26 = zext i8 %22 to i64, !dbg !14442
  %23 = load i64, i64* %lba, align 8, !dbg !14443
  %or27 = or i64 %23, %conv26, !dbg !14443
  store i64 %or27, i64* %lba, align 8, !dbg !14443
  %24 = load i8*, i8** %cdb.addr, align 8, !dbg !14444
  %arrayidx28 = getelementptr i8, i8* %24, i64 10, !dbg !14444
  %25 = load i8, i8* %arrayidx28, align 1, !dbg !14444
  %conv29 = zext i8 %25 to i32, !dbg !14445
  %shl30 = shl i32 %conv29, 24, !dbg !14446
  %26 = load i32, i32* %len, align 4, !dbg !14447
  %or31 = or i32 %26, %shl30, !dbg !14447
  store i32 %or31, i32* %len, align 4, !dbg !14447
  %27 = load i8*, i8** %cdb.addr, align 8, !dbg !14448
  %arrayidx32 = getelementptr i8, i8* %27, i64 11, !dbg !14448
  %28 = load i8, i8* %arrayidx32, align 1, !dbg !14448
  %conv33 = zext i8 %28 to i32, !dbg !14449
  %shl34 = shl i32 %conv33, 16, !dbg !14450
  %29 = load i32, i32* %len, align 4, !dbg !14451
  %or35 = or i32 %29, %shl34, !dbg !14451
  store i32 %or35, i32* %len, align 4, !dbg !14451
  %30 = load i8*, i8** %cdb.addr, align 8, !dbg !14452
  %arrayidx36 = getelementptr i8, i8* %30, i64 12, !dbg !14452
  %31 = load i8, i8* %arrayidx36, align 1, !dbg !14452
  %conv37 = zext i8 %31 to i32, !dbg !14453
  %shl38 = shl i32 %conv37, 8, !dbg !14454
  %32 = load i32, i32* %len, align 4, !dbg !14455
  %or39 = or i32 %32, %shl38, !dbg !14455
  store i32 %or39, i32* %len, align 4, !dbg !14455
  %33 = load i8*, i8** %cdb.addr, align 8, !dbg !14456
  %arrayidx40 = getelementptr i8, i8* %33, i64 13, !dbg !14456
  %34 = load i8, i8* %arrayidx40, align 1, !dbg !14456
  %conv41 = zext i8 %34 to i32, !dbg !14457
  %35 = load i32, i32* %len, align 4, !dbg !14458
  %or42 = or i32 %35, %conv41, !dbg !14458
  store i32 %or42, i32* %len, align 4, !dbg !14458
  %36 = load i64, i64* %lba, align 8, !dbg !14459
  %37 = load i64*, i64** %plba.addr, align 8, !dbg !14460
  store i64 %36, i64* %37, align 8, !dbg !14461
  %38 = load i32, i32* %len, align 4, !dbg !14462
  %39 = load i32*, i32** %plen.addr, align 8, !dbg !14463
  store i32 %38, i32* %39, align 4, !dbg !14464
  ret void, !dbg !14465
}

; Function Attrs: noredzone
declare dso_local i32 @ata_build_rw_tf(%struct.ata_taskfile*, %struct.ata_device*, i64, i32, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_passthrough(%struct.request* %rq) #0 !dbg !14466 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14467, metadata !DIExpression()), !dbg !14468
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14469
  %call = call zeroext i1 @blk_rq_is_scsi(%struct.request* %0) #10, !dbg !14470
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !14471

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14472
  %call1 = call zeroext i1 @blk_rq_is_private(%struct.request* %1) #10, !dbg !14473
  br label %lor.end, !dbg !14471

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  ret i1 %2, !dbg !14474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_bytes(%struct.request* %rq) #0 !dbg !14475 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14480, metadata !DIExpression()), !dbg !14481
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14482
  %__data_len = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 7, !dbg !14483
  %1 = load i32, i32* %__data_len, align 8, !dbg !14483
  ret i32 %1, !dbg !14484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_scsi(%struct.request* %rq) #0 !dbg !14485 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14486, metadata !DIExpression()), !dbg !14487
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14488
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !14488
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !14488
  %and = and i32 %1, 255, !dbg !14488
  %call = call zeroext i1 @blk_op_is_scsi(i32 %and) #10, !dbg !14489
  ret i1 %call, !dbg !14490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_private(%struct.request* %rq) #0 !dbg !14491 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14492, metadata !DIExpression()), !dbg !14493
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14494
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !14494
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !14494
  %and = and i32 %1, 255, !dbg !14494
  %call = call zeroext i1 @blk_op_is_private(i32 %and) #10, !dbg !14495
  ret i1 %call, !dbg !14496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_op_is_scsi(i32 %op) #0 !dbg !14497 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !14500, metadata !DIExpression()), !dbg !14501
  %0 = load i32, i32* %op.addr, align 4, !dbg !14502
  %cmp = icmp eq i32 %0, 32, !dbg !14503
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14504

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %op.addr, align 4, !dbg !14505
  %cmp1 = icmp eq i32 %1, 33, !dbg !14506
  br label %lor.end, !dbg !14504

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !14507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_op_is_private(i32 %op) #0 !dbg !14508 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !14509, metadata !DIExpression()), !dbg !14510
  %0 = load i32, i32* %op.addr, align 4, !dbg !14511
  %cmp = icmp eq i32 %0, 34, !dbg !14512
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14513

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %op.addr, align 4, !dbg !14514
  %cmp1 = icmp eq i32 %1, 35, !dbg !14515
  br label %lor.end, !dbg !14513

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !14516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_trim(i16* %id) #0 !dbg !14517 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !14518, metadata !DIExpression()), !dbg !14519
  %0 = load i16*, i16** %id.addr, align 8, !dbg !14520
  %call = call i32 @ata_id_major_version(i16* %0) #10, !dbg !14522
  %cmp = icmp uge i32 %call, 7, !dbg !14523
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14524

land.lhs.true:                                    ; preds = %entry
  %1 = load i16*, i16** %id.addr, align 8, !dbg !14525
  %arrayidx = getelementptr i16, i16* %1, i64 169, !dbg !14525
  %2 = load i16, i16* %arrayidx, align 2, !dbg !14525
  %conv = zext i16 %2 to i32, !dbg !14525
  %and = and i32 %conv, 1, !dbg !14526
  %tobool = icmp ne i32 %and, 0, !dbg !14526
  br i1 %tobool, label %if.then, label %if.end, !dbg !14527

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !14528
  br label %return, !dbg !14528

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !14529
  br label %return, !dbg !14529

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !14530
  ret i1 %3, !dbg !14530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_count(%struct.scsi_cmnd* %cmd) #0 !dbg !14531 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !14534, metadata !DIExpression()), !dbg !14535
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14536
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !14537
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !14538
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !14539
  %1 = load i32, i32* %nents, align 8, !dbg !14539
  ret i32 %1, !dbg !14540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_format_dsm_trim_descr(%struct.scsi_cmnd* %cmd, i32 %trmax, i64 %sector, i32 %count) #0 !dbg !14541 {
entry:
  %lock.addr.i61 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i61, metadata !7129, metadata !DIExpression()), !dbg !14544
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !14546
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !14547
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %trmax.addr = alloca i32, align 4
  %sector.addr = alloca i64, align 8
  %count.addr = alloca i32, align 4
  %sdp = alloca %struct.scsi_device*, align 8
  %len = alloca i64, align 8
  %r = alloca i64, align 8
  %buf = alloca i64*, align 8
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp29 = alloca i32, align 4
  %__dummy33 = alloca i64, align 8
  %__dummy234 = alloca i64, align 8
  %tmp37 = alloca i32, align 4
  %entry50 = alloca i64, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !14554, metadata !DIExpression()), !dbg !14555
  store i32 %trmax, i32* %trmax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trmax.addr, metadata !14556, metadata !DIExpression()), !dbg !14557
  store i64 %sector, i64* %sector.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sector.addr, metadata !14558, metadata !DIExpression()), !dbg !14559
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !14560, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdp, metadata !14562, metadata !DIExpression()), !dbg !14563
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14564
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !14565
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !14565
  store %struct.scsi_device* %1, %struct.scsi_device** %sdp, align 8, !dbg !14563
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14566, metadata !DIExpression()), !dbg !14567
  %2 = load %struct.scsi_device*, %struct.scsi_device** %sdp, align 8, !dbg !14568
  %sector_size = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 20, !dbg !14569
  %3 = load i32, i32* %sector_size, align 4, !dbg !14569
  %conv = zext i32 %3 to i64, !dbg !14568
  store i64 %conv, i64* %len, align 8, !dbg !14567
  call void @llvm.dbg.declare(metadata i64* %r, metadata !14570, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.declare(metadata i64** %buf, metadata !14572, metadata !DIExpression()), !dbg !14573
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14574, metadata !DIExpression()), !dbg !14575
  store i32 0, i32* %i, align 4, !dbg !14575
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14576, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14578, metadata !DIExpression()), !dbg !14580
  %4 = load i64, i64* %len, align 8, !dbg !14580
  %cmp = icmp ugt i64 %4, 576, !dbg !14580
  %lnot = xor i1 %cmp, true, !dbg !14580
  %lnot2 = xor i1 %lnot, true, !dbg !14580
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14580
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !14580
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !14581
  %tobool = icmp ne i32 %5, 0, !dbg !14581
  %lnot3 = xor i1 %tobool, true, !dbg !14581
  %lnot5 = xor i1 %lnot3, true, !dbg !14581
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !14581
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !14581
  %tobool8 = icmp ne i64 %conv7, 0, !dbg !14581
  br i1 %tobool8, label %if.then, label %if.end, !dbg !14580

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14581

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !14583

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !14585

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !14583

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i32 3127, i32 2305, i64 12) #5, !dbg !14587, !srcloc !14589
  br label %do.end11, !dbg !14587

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 319) #5, !dbg !14590, !srcloc !14592
  br label %do.body12, !dbg !14583

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !14593

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !14583

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !14583

if.end:                                           ; preds = %do.end14, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !14580
  %tobool15 = icmp ne i32 %6, 0, !dbg !14580
  %lnot16 = xor i1 %tobool15, true, !dbg !14580
  %lnot18 = xor i1 %lnot16, true, !dbg !14580
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !14580
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !14580
  store i64 %conv20, i64* %tmp, align 8, !dbg !14581
  %7 = load i64, i64* %tmp, align 8, !dbg !14580
  %8 = load i64, i64* %len, align 8, !dbg !14595
  %cmp21 = icmp ugt i64 %8, 576, !dbg !14597
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !14598

if.then23:                                        ; preds = %if.end
  store i64 576, i64* %len, align 8, !dbg !14599
  br label %if.end24, !dbg !14600

if.end24:                                         ; preds = %if.then23, %if.end
  br label %do.body25, !dbg !14601

do.body25:                                        ; preds = %if.end24
  br label %do.body26, !dbg !14602

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14603, metadata !DIExpression()), !dbg !14605
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14606, metadata !DIExpression()), !dbg !14605
  %cmp27 = icmp eq i64* %__dummy, %__dummy2, !dbg !14605
  %conv28 = zext i1 %cmp27 to i32, !dbg !14605
  store i32 1, i32* %tmp29, align 4, !dbg !14605
  %9 = load i32, i32* %tmp29, align 4, !dbg !14605
  br label %do.body30, !dbg !14607

do.body30:                                        ; preds = %do.body26
  br label %do.body31, !dbg !14608

do.body31:                                        ; preds = %do.body30
  br label %do.body32, !dbg !14609

do.body32:                                        ; preds = %do.body31
  call void @llvm.dbg.declare(metadata i64* %__dummy33, metadata !14611, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.declare(metadata i64* %__dummy234, metadata !14615, metadata !DIExpression()), !dbg !14614
  %cmp35 = icmp eq i64* %__dummy33, %__dummy234, !dbg !14614
  %conv36 = zext i1 %cmp35 to i32, !dbg !14614
  store i32 1, i32* %tmp37, align 4, !dbg !14614
  %10 = load i32, i32* %tmp37, align 4, !dbg !14614
  %call = call i64 @arch_local_irq_save() #10, !dbg !14616
  store i64 %call, i64* %flags, align 8, !dbg !14616
  br label %do.end38, !dbg !14616

do.end38:                                         ; preds = %do.body32
  br label %do.end39, !dbg !14609

do.end39:                                         ; preds = %do.end38
  br label %do.body40, !dbg !14608

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !14617, !srcloc !14618
  br label %do.body41, !dbg !14617

do.body41:                                        ; preds = %do.body40
  store %struct.spinlock* @ata_scsi_rbuf_lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14619
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !14620
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !14620
  br label %do.end43, !dbg !14621

do.end43:                                         ; preds = %do.body41
  br label %do.end44, !dbg !14617

do.end44:                                         ; preds = %do.end43
  br label %do.end45, !dbg !14608

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !14607

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !14602

do.end47:                                         ; preds = %do.end46
  store i64* bitcast ([576 x i8]* @ata_scsi_rbuf to i64*), i64** %buf, align 8, !dbg !14622
  %13 = load i64*, i64** %buf, align 8, !dbg !14623
  %14 = bitcast i64* %13 to i8*, !dbg !14624
  %15 = load i64, i64* %len, align 8, !dbg !14625
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 %15, i1 false), !dbg !14624
  br label %while.cond, !dbg !14626

while.cond:                                       ; preds = %if.end57, %do.end47
  %16 = load i32, i32* %i, align 4, !dbg !14627
  %17 = load i32, i32* %trmax.addr, align 4, !dbg !14628
  %cmp48 = icmp ult i32 %16, %17, !dbg !14629
  br i1 %cmp48, label %while.body, label %while.end, !dbg !14626

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %entry50, metadata !14630, metadata !DIExpression()), !dbg !14632
  %18 = load i64, i64* %sector.addr, align 8, !dbg !14633
  %19 = load i32, i32* %count.addr, align 4, !dbg !14634
  %cmp51 = icmp ugt i32 %19, 65535, !dbg !14635
  br i1 %cmp51, label %cond.true, label %cond.false, !dbg !14634

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !14634

cond.false:                                       ; preds = %while.body
  %20 = load i32, i32* %count.addr, align 4, !dbg !14636
  br label %cond.end, !dbg !14634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 65535, %cond.true ], [ %20, %cond.false ], !dbg !14634
  %conv53 = zext i32 %cond to i64, !dbg !14637
  %shl = shl i64 %conv53, 48, !dbg !14638
  %or = or i64 %18, %shl, !dbg !14639
  store i64 %or, i64* %entry50, align 8, !dbg !14632
  %21 = load i64, i64* %entry50, align 8, !dbg !14640
  %22 = load i64*, i64** %buf, align 8, !dbg !14641
  %23 = load i32, i32* %i, align 4, !dbg !14642
  %inc = add i32 %23, 1, !dbg !14642
  store i32 %inc, i32* %i, align 4, !dbg !14642
  %idxprom = zext i32 %23 to i64, !dbg !14641
  %arrayidx = getelementptr i64, i64* %22, i64 %idxprom, !dbg !14641
  store i64 %21, i64* %arrayidx, align 8, !dbg !14643
  %24 = load i32, i32* %count.addr, align 4, !dbg !14644
  %cmp54 = icmp ule i32 %24, 65535, !dbg !14646
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !14647

if.then56:                                        ; preds = %cond.end
  br label %while.end, !dbg !14648

if.end57:                                         ; preds = %cond.end
  %25 = load i32, i32* %count.addr, align 4, !dbg !14649
  %sub = sub i32 %25, 65535, !dbg !14649
  store i32 %sub, i32* %count.addr, align 4, !dbg !14649
  %26 = load i64, i64* %sector.addr, align 8, !dbg !14650
  %add = add i64 %26, 65535, !dbg !14650
  store i64 %add, i64* %sector.addr, align 8, !dbg !14650
  br label %while.cond, !dbg !14626, !llvm.loop !14651

while.end:                                        ; preds = %if.then56, %while.cond
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14653
  %call58 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %27) #10, !dbg !14654
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14655
  %call59 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %28) #10, !dbg !14656
  %29 = load i64*, i64** %buf, align 8, !dbg !14657
  %30 = bitcast i64* %29 to i8*, !dbg !14657
  %31 = load i64, i64* %len, align 8, !dbg !14658
  %call60 = call i64 @sg_copy_from_buffer(%struct.scatterlist* %call58, i32 %call59, i8* %30, i64 %31) #10, !dbg !14659
  store i64 %call60, i64* %r, align 8, !dbg !14660
  %32 = load i64, i64* %flags, align 8, !dbg !14661
  store %struct.spinlock* @ata_scsi_rbuf_lock, %struct.spinlock** %lock.addr.i61, align 8
  store i64 %32, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !14662
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !14662
  store i32 1, i32* %tmp.i, align 4, !dbg !14662
  %33 = load i32, i32* %tmp.i, align 4, !dbg !14662
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !14663
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !14663
  store i32 1, i32* %tmp8.i, align 4, !dbg !14663
  %34 = load i32, i32* %tmp8.i, align 4, !dbg !14663
  %35 = load i64, i64* %flags.addr.i, align 8, !dbg !14664
  call void @arch_local_irq_restore(i64 %35) #11, !dbg !14664
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !14665, !srcloc !7307
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i61, align 8, !dbg !14666
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !14666
  %rlock.i62 = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !14666
  %38 = load i64, i64* %r, align 8, !dbg !14667
  ret i64 %38, !dbg !14668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_ncq_enabled(%struct.ata_device* %dev) #0 !dbg !14669 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14670, metadata !DIExpression()), !dbg !14671
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14672
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 3, !dbg !14673
  %1 = load i64, i64* %flags, align 16, !dbg !14673
  %and = and i64 %1, 12296, !dbg !14674
  %cmp = icmp eq i64 %and, 8, !dbg !14675
  %conv = zext i1 %cmp to i32, !dbg !14675
  ret i32 %conv, !dbg !14676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_fpdma_dsm_supported(%struct.ata_device* %dev) #0 !dbg !14677 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14680, metadata !DIExpression()), !dbg !14681
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14682
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 3, !dbg !14683
  %1 = load i64, i64* %flags, align 16, !dbg !14683
  %and = and i64 %1, 524288, !dbg !14684
  %tobool = icmp ne i64 %and, 0, !dbg !14684
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14685

land.rhs:                                         ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14686
  %ncq_send_recv_cmds = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 29, !dbg !14687
  %arrayidx = getelementptr [20 x i8], [20 x i8]* %ncq_send_recv_cmds, i64 0, i64 4, !dbg !14686
  %3 = load i8, i8* %arrayidx, align 4, !dbg !14686
  %conv = zext i8 %3 to i32, !dbg !14686
  %and1 = and i32 %conv, 1, !dbg !14688
  %tobool2 = icmp ne i32 %and1, 0, !dbg !14685
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !14689
  ret i1 %4, !dbg !14690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_qc_set_pc_nbytes(%struct.ata_queued_cmd* %qc) #0 !dbg !14691 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14692, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !14694, metadata !DIExpression()), !dbg !14695
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14696
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !14697
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !14697
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !14695
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14698
  %extra_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 28, !dbg !14699
  %3 = load i32, i32* %extra_len, align 4, !dbg !14699
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14700
  %extrabytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 14, !dbg !14701
  store i32 %3, i32* %extrabytes, align 4, !dbg !14702
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !14703
  %call = call i32 @scsi_bufflen(%struct.scsi_cmnd* %5) #10, !dbg !14704
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14705
  %extrabytes1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 14, !dbg !14706
  %7 = load i32, i32* %extrabytes1, align 4, !dbg !14706
  %add = add i32 %call, %7, !dbg !14707
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14708
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 13, !dbg !14709
  store i32 %add, i32* %nbytes, align 8, !dbg !14710
  ret void, !dbg !14711
}

; Function Attrs: noredzone
declare dso_local i64 @sg_copy_from_buffer(%struct.scatterlist*, i32, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %cmd) #0 !dbg !14712 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !14715, metadata !DIExpression()), !dbg !14716
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14717
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !14718
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !14719
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !14720
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !14720
  ret %struct.scatterlist* %1, !dbg !14721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_bufflen(%struct.scsi_cmnd* %cmd) #0 !dbg !14722 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !14723, metadata !DIExpression()), !dbg !14724
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14725
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !14726
  %length = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 1, !dbg !14727
  %1 = load i32, i32* %length, align 8, !dbg !14727
  ret i32 %1, !dbg !14728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_wcache_enabled(i16* %id) #0 !dbg !14729 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !14730, metadata !DIExpression()), !dbg !14731
  %0 = load i16*, i16** %id.addr, align 8, !dbg !14732
  %arrayidx = getelementptr i16, i16* %0, i64 87, !dbg !14732
  %1 = load i16, i16* %arrayidx, align 2, !dbg !14732
  %conv = zext i16 %1 to i32, !dbg !14732
  %and = and i32 %conv, 49152, !dbg !14734
  %cmp = icmp ne i32 %and, 16384, !dbg !14735
  br i1 %cmp, label %if.then, label %if.end, !dbg !14736

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14737
  br label %return, !dbg !14737

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !14738
  %arrayidx2 = getelementptr i16, i16* %2, i64 85, !dbg !14738
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !14738
  %conv3 = zext i16 %3 to i32, !dbg !14738
  %and4 = and i32 %conv3, 32, !dbg !14739
  %tobool = icmp ne i32 %and4, 0, !dbg !14738
  store i1 %tobool, i1* %retval, align 1, !dbg !14740
  br label %return, !dbg !14740

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !14741
  ret i1 %4, !dbg !14741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_flush(i16* %id) #0 !dbg !14742 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !14743, metadata !DIExpression()), !dbg !14744
  %0 = load i16*, i16** %id.addr, align 8, !dbg !14745
  %arrayidx = getelementptr i16, i16* %0, i64 83, !dbg !14745
  %1 = load i16, i16* %arrayidx, align 2, !dbg !14745
  %conv = zext i16 %1 to i32, !dbg !14745
  %and = and i32 %conv, 49152, !dbg !14747
  %cmp = icmp ne i32 %and, 16384, !dbg !14748
  br i1 %cmp, label %if.then, label %if.end, !dbg !14749

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14750
  br label %return, !dbg !14750

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !14751
  %arrayidx2 = getelementptr i16, i16* %2, i64 83, !dbg !14751
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !14751
  %conv3 = zext i16 %3 to i32, !dbg !14751
  %and4 = and i32 %conv3, 4096, !dbg !14752
  %tobool = icmp ne i32 %and4, 0, !dbg !14751
  store i1 %tobool, i1* %retval, align 1, !dbg !14753
  br label %return, !dbg !14753

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !14754
  ret i1 %4, !dbg !14754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_flush_ext(i16* %id) #0 !dbg !14755 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !14756, metadata !DIExpression()), !dbg !14757
  %0 = load i16*, i16** %id.addr, align 8, !dbg !14758
  %arrayidx = getelementptr i16, i16* %0, i64 83, !dbg !14758
  %1 = load i16, i16* %arrayidx, align 2, !dbg !14758
  %conv = zext i16 %1 to i32, !dbg !14758
  %and = and i32 %conv, 49152, !dbg !14760
  %cmp = icmp ne i32 %and, 16384, !dbg !14761
  br i1 %cmp, label %if.then, label %if.end, !dbg !14762

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14763
  br label %return, !dbg !14763

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !14764
  %arrayidx2 = getelementptr i16, i16* %2, i64 83, !dbg !14764
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !14764
  %conv3 = zext i16 %3 to i32, !dbg !14764
  %and4 = and i32 %conv3, 8192, !dbg !14765
  %tobool = icmp ne i32 %and4, 0, !dbg !14764
  store i1 %tobool, i1* %retval, align 1, !dbg !14766
  br label %return, !dbg !14766

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !14767
  ret i1 %4, !dbg !14767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @lba_28_ok(i64 %block, i32 %n_block) #0 !dbg !14768 {
entry:
  %block.addr = alloca i64, align 8
  %n_block.addr = alloca i32, align 4
  store i64 %block, i64* %block.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %block.addr, metadata !14771, metadata !DIExpression()), !dbg !14772
  store i32 %n_block, i32* %n_block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_block.addr, metadata !14773, metadata !DIExpression()), !dbg !14774
  %0 = load i64, i64* %block.addr, align 8, !dbg !14775
  %1 = load i32, i32* %n_block.addr, align 4, !dbg !14776
  %conv = zext i32 %1 to i64, !dbg !14776
  %add = add i64 %0, %conv, !dbg !14777
  %cmp = icmp ult i64 %add, 268435455, !dbg !14778
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14779

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %n_block.addr, align 4, !dbg !14780
  %cmp2 = icmp ule i32 %2, 256, !dbg !14781
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !14782
  ret i1 %3, !dbg !14783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @lba_48_ok(i64 %block, i32 %n_block) #0 !dbg !14784 {
entry:
  %block.addr = alloca i64, align 8
  %n_block.addr = alloca i32, align 4
  store i64 %block, i64* %block.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %block.addr, metadata !14785, metadata !DIExpression()), !dbg !14786
  store i32 %n_block, i32* %n_block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_block.addr, metadata !14787, metadata !DIExpression()), !dbg !14788
  %0 = load i64, i64* %block.addr, align 8, !dbg !14789
  %1 = load i32, i32* %n_block.addr, align 4, !dbg !14790
  %conv = zext i32 %1 to i64, !dbg !14790
  %add = add i64 %0, %conv, !dbg !14791
  %sub = sub i64 %add, 1, !dbg !14792
  %cmp = icmp ult i64 %sub, 281474976710656, !dbg !14793
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14794

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %n_block.addr, align 4, !dbg !14795
  %cmp2 = icmp ule i32 %2, 65535, !dbg !14796
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !14797
  ret i1 %3, !dbg !14798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_scsi_map_proto(i8 zeroext %byte1) #0 !dbg !14799 {
entry:
  %retval = alloca i8, align 1
  %byte1.addr = alloca i8, align 1
  store i8 %byte1, i8* %byte1.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte1.addr, metadata !14802, metadata !DIExpression()), !dbg !14803
  %0 = load i8, i8* %byte1.addr, align 1, !dbg !14804
  %conv = zext i8 %0 to i32, !dbg !14804
  %and = and i32 %conv, 30, !dbg !14805
  %shr = ashr i32 %and, 1, !dbg !14806
  switch i32 %shr, label %sw.default [
    i32 3, label %sw.bb
    i32 6, label %sw.bb1
    i32 10, label %sw.bb1
    i32 11, label %sw.bb1
    i32 4, label %sw.bb2
    i32 5, label %sw.bb2
    i32 12, label %sw.bb3
    i32 0, label %sw.bb4
    i32 1, label %sw.bb4
    i32 8, label %sw.bb4
    i32 9, label %sw.bb4
    i32 7, label %sw.bb4
    i32 15, label %sw.bb4
  ], !dbg !14807

sw.bb:                                            ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !14808
  br label %return, !dbg !14808

sw.bb1:                                           ; preds = %entry, %entry, %entry
  store i8 2, i8* %retval, align 1, !dbg !14810
  br label %return, !dbg !14810

sw.bb2:                                           ; preds = %entry, %entry
  store i8 1, i8* %retval, align 1, !dbg !14811
  br label %return, !dbg !14811

sw.bb3:                                           ; preds = %entry
  store i8 6, i8* %retval, align 1, !dbg !14812
  br label %return, !dbg !14812

sw.bb4:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  br label %sw.default, !dbg !14812

sw.default:                                       ; preds = %entry, %sw.bb4
  br label %sw.epilog, !dbg !14813

sw.epilog:                                        ; preds = %sw.default
  store i8 -1, i8* %retval, align 1, !dbg !14814
  br label %return, !dbg !14814

return:                                           ; preds = %sw.epilog, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8, i8* %retval, align 1, !dbg !14815
  ret i8 %1, !dbg !14815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_ncq(i8 zeroext %prot) #0 !dbg !14816 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !14819, metadata !DIExpression()), !dbg !14820
  %0 = load i8, i8* %prot.addr, align 1, !dbg !14821
  %conv = zext i8 %0 to i32, !dbg !14821
  %and = and i32 %conv, 4, !dbg !14822
  %tobool = icmp ne i32 %and, 0, !dbg !14821
  ret i1 %tobool, !dbg !14823
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_multi_taskfile(%struct.ata_taskfile* %tf) #0 !dbg !14824 {
entry:
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !14827, metadata !DIExpression()), !dbg !14828
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !14829
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 14, !dbg !14830
  %1 = load i8, i8* %command, align 1, !dbg !14830
  %conv = zext i8 %1 to i32, !dbg !14829
  %cmp = icmp eq i32 %conv, 196, !dbg !14831
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !14832

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !14833
  %command2 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 14, !dbg !14834
  %3 = load i8, i8* %command2, align 1, !dbg !14834
  %conv3 = zext i8 %3 to i32, !dbg !14833
  %cmp4 = icmp eq i32 %conv3, 197, !dbg !14835
  br i1 %cmp4, label %lor.end, label %lor.lhs.false6, !dbg !14836

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %4 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !14837
  %command7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %4, i32 0, i32 14, !dbg !14838
  %5 = load i8, i8* %command7, align 1, !dbg !14838
  %conv8 = zext i8 %5 to i32, !dbg !14837
  %cmp9 = icmp eq i32 %conv8, 41, !dbg !14839
  br i1 %cmp9, label %lor.end, label %lor.lhs.false11, !dbg !14840

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !14841
  %command12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 14, !dbg !14842
  %7 = load i8, i8* %command12, align 1, !dbg !14842
  %conv13 = zext i8 %7 to i32, !dbg !14841
  %cmp14 = icmp eq i32 %conv13, 57, !dbg !14843
  br i1 %cmp14, label %lor.end, label %lor.rhs, !dbg !14844

lor.rhs:                                          ; preds = %lor.lhs.false11
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !14845
  %command16 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 14, !dbg !14846
  %9 = load i8, i8* %command16, align 1, !dbg !14846
  %conv17 = zext i8 %9 to i32, !dbg !14845
  %cmp18 = icmp eq i32 %conv17, 206, !dbg !14847
  br label %lor.end, !dbg !14844

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false, %entry
  %10 = phi i1 [ true, %lor.lhs.false11 ], [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp18, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !14844
  ret i32 %lor.ext, !dbg !14848
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #8 !dbg !14849 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14852, metadata !DIExpression()), !dbg !14853
  %0 = load i32, i32* %val.addr, align 4, !dbg !14854
  %call = call i32 @__arch_swab32(i32 %0) #12, !dbg !14855
  ret i32 %call, !dbg !14856
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #8 !dbg !14857 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14859, metadata !DIExpression()), !dbg !14860
  %0 = load i32, i32* %val.addr, align 4, !dbg !14861
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #13, !dbg !14862, !srcloc !14863
  store i32 %1, i32* %val.addr, align 4, !dbg !14862
  %2 = load i32, i32* %val.addr, align 4, !dbg !14864
  ret i32 %2, !dbg !14865
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #8 !dbg !14866 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14869, metadata !DIExpression()), !dbg !14870
  %0 = load i16, i16* %val.addr, align 2, !dbg !14871
  %conv = zext i16 %0 to i32, !dbg !14871
  %and = and i32 %conv, 255, !dbg !14871
  %shl = shl i32 %and, 8, !dbg !14871
  %1 = load i16, i16* %val.addr, align 2, !dbg !14871
  %conv1 = zext i16 %1 to i32, !dbg !14871
  %and2 = and i32 %conv1, 65280, !dbg !14871
  %shr = ashr i32 %and2, 8, !dbg !14871
  %or = or i32 %shl, %shr, !dbg !14871
  %conv3 = trunc i32 %or to i16, !dbg !14871
  ret i16 %conv3, !dbg !14872
}

; Function Attrs: noredzone
declare dso_local i64 @sg_copy_to_buffer(%struct.scatterlist*, i32, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_mselect_caching(%struct.ata_queued_cmd* %qc, i8* %buf, i32 %len, i16* %fp) #0 !dbg !14873 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %fp.addr = alloca i16*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %mpage = alloca [20 x i8], align 16
  %wce = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14876, metadata !DIExpression()), !dbg !14877
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14878, metadata !DIExpression()), !dbg !14879
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !14880, metadata !DIExpression()), !dbg !14881
  store i16* %fp, i16** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %fp.addr, metadata !14882, metadata !DIExpression()), !dbg !14883
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !14884, metadata !DIExpression()), !dbg !14885
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14886
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !14887
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !14885
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !14888, metadata !DIExpression()), !dbg !14889
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14890
  %dev2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 1, !dbg !14891
  %2 = load %struct.ata_device*, %struct.ata_device** %dev2, align 8, !dbg !14891
  store %struct.ata_device* %2, %struct.ata_device** %dev, align 8, !dbg !14889
  call void @llvm.dbg.declare(metadata [20 x i8]* %mpage, metadata !14892, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.declare(metadata i8* %wce, metadata !14894, metadata !DIExpression()), !dbg !14895
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14896, metadata !DIExpression()), !dbg !14897
  %3 = load i32, i32* %len.addr, align 4, !dbg !14898
  %cmp = icmp ne i32 %3, 18, !dbg !14900
  br i1 %cmp, label %if.then, label %if.end5, !dbg !14901

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %len.addr, align 4, !dbg !14902
  %cmp3 = icmp slt i32 %4, 18, !dbg !14905
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !14906

if.then4:                                         ; preds = %if.then
  %5 = load i32, i32* %len.addr, align 4, !dbg !14907
  %conv = trunc i32 %5 to i16, !dbg !14907
  %6 = load i16*, i16** %fp.addr, align 8, !dbg !14908
  store i16 %conv, i16* %6, align 2, !dbg !14909
  br label %if.end, !dbg !14910

if.else:                                          ; preds = %if.then
  %7 = load i16*, i16** %fp.addr, align 8, !dbg !14911
  store i16 18, i16* %7, align 2, !dbg !14912
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  store i32 -22, i32* %retval, align 4, !dbg !14913
  br label %return, !dbg !14913

if.end5:                                          ; preds = %entry
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !14914
  %arrayidx = getelementptr i8, i8* %8, i64 0, !dbg !14914
  %9 = load i8, i8* %arrayidx, align 1, !dbg !14914
  %conv6 = zext i8 %9 to i32, !dbg !14914
  %and = and i32 %conv6, 4, !dbg !14915
  %conv7 = trunc i32 %and to i8, !dbg !14914
  store i8 %conv7, i8* %wce, align 1, !dbg !14916
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14917
  %11 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 27, !dbg !14918
  %id = bitcast %union.anon.90* %11 to [256 x i16]*, !dbg !14918
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !14917
  %arraydecay8 = getelementptr inbounds [20 x i8], [20 x i8]* %mpage, i64 0, i64 0, !dbg !14919
  %call = call i32 @ata_msense_caching(i16* %arraydecay, i8* %arraydecay8, i1 zeroext false) #10, !dbg !14920
  store i32 0, i32* %i, align 4, !dbg !14921
  br label %for.cond, !dbg !14923

for.cond:                                         ; preds = %for.inc, %if.end5
  %12 = load i32, i32* %i, align 4, !dbg !14924
  %cmp9 = icmp slt i32 %12, 18, !dbg !14926
  br i1 %cmp9, label %for.body, label %for.end, !dbg !14927

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !14928
  %cmp11 = icmp eq i32 %13, 0, !dbg !14931
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !14932

if.then13:                                        ; preds = %for.body
  br label %for.inc, !dbg !14933

if.end14:                                         ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !14934
  %add = add i32 %14, 2, !dbg !14936
  %idxprom = sext i32 %add to i64, !dbg !14937
  %arrayidx15 = getelementptr [20 x i8], [20 x i8]* %mpage, i64 0, i64 %idxprom, !dbg !14937
  %15 = load i8, i8* %arrayidx15, align 1, !dbg !14937
  %conv16 = zext i8 %15 to i32, !dbg !14937
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !14938
  %17 = load i32, i32* %i, align 4, !dbg !14939
  %idxprom17 = sext i32 %17 to i64, !dbg !14938
  %arrayidx18 = getelementptr i8, i8* %16, i64 %idxprom17, !dbg !14938
  %18 = load i8, i8* %arrayidx18, align 1, !dbg !14938
  %conv19 = zext i8 %18 to i32, !dbg !14938
  %cmp20 = icmp ne i32 %conv16, %conv19, !dbg !14940
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !14941

if.then22:                                        ; preds = %if.end14
  %19 = load i32, i32* %i, align 4, !dbg !14942
  %conv23 = trunc i32 %19 to i16, !dbg !14942
  %20 = load i16*, i16** %fp.addr, align 8, !dbg !14944
  store i16 %conv23, i16* %20, align 2, !dbg !14945
  store i32 -22, i32* %retval, align 4, !dbg !14946
  br label %return, !dbg !14946

if.end24:                                         ; preds = %if.end14
  br label %for.inc, !dbg !14947

for.inc:                                          ; preds = %if.end24, %if.then13
  %21 = load i32, i32* %i, align 4, !dbg !14948
  %inc = add i32 %21, 1, !dbg !14948
  store i32 %inc, i32* %i, align 4, !dbg !14948
  br label %for.cond, !dbg !14949, !llvm.loop !14950

for.end:                                          ; preds = %for.cond
  %22 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14952
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %22, i32 0, i32 0, !dbg !14953
  %23 = load i64, i64* %flags, align 8, !dbg !14954
  %or = or i64 %23, 6, !dbg !14954
  store i64 %or, i64* %flags, align 8, !dbg !14954
  %24 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14955
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %24, i32 0, i32 1, !dbg !14956
  store i8 0, i8* %protocol, align 8, !dbg !14957
  %25 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14958
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %25, i32 0, i32 9, !dbg !14959
  store i8 0, i8* %nsect, align 8, !dbg !14960
  %26 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14961
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %26, i32 0, i32 14, !dbg !14962
  store i8 -17, i8* %command, align 1, !dbg !14963
  %27 = load i8, i8* %wce, align 1, !dbg !14964
  %conv25 = zext i8 %27 to i32, !dbg !14964
  %tobool = icmp ne i32 %conv25, 0, !dbg !14964
  %28 = zext i1 %tobool to i64, !dbg !14964
  %cond = select i1 %tobool, i32 2, i32 130, !dbg !14964
  %conv26 = trunc i32 %cond to i8, !dbg !14964
  %29 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !14965
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %29, i32 0, i32 8, !dbg !14966
  store i8 %conv26, i8* %feature, align 1, !dbg !14967
  store i32 0, i32* %retval, align 4, !dbg !14968
  br label %return, !dbg !14968

return:                                           ; preds = %for.end, %if.then22, %if.end
  %30 = load i32, i32* %retval, align 4, !dbg !14969
  ret i32 %30, !dbg !14969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_mselect_control(%struct.ata_queued_cmd* %qc, i8* %buf, i32 %len, i16* %fp) #0 !dbg !14970 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %fp.addr = alloca i16*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %mpage = alloca [12 x i8], align 1
  %d_sense = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14971, metadata !DIExpression()), !dbg !14972
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14973, metadata !DIExpression()), !dbg !14974
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !14975, metadata !DIExpression()), !dbg !14976
  store i16* %fp, i16** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %fp.addr, metadata !14977, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !14979, metadata !DIExpression()), !dbg !14980
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14981
  %dev1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !14982
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !14982
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !14980
  call void @llvm.dbg.declare(metadata [12 x i8]* %mpage, metadata !14983, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.declare(metadata i8* %d_sense, metadata !14986, metadata !DIExpression()), !dbg !14987
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14988, metadata !DIExpression()), !dbg !14989
  %2 = load i32, i32* %len.addr, align 4, !dbg !14990
  %cmp = icmp ne i32 %2, 10, !dbg !14992
  br i1 %cmp, label %if.then, label %if.end4, !dbg !14993

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %len.addr, align 4, !dbg !14994
  %cmp2 = icmp slt i32 %3, 10, !dbg !14997
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !14998

if.then3:                                         ; preds = %if.then
  %4 = load i32, i32* %len.addr, align 4, !dbg !14999
  %conv = trunc i32 %4 to i16, !dbg !14999
  %5 = load i16*, i16** %fp.addr, align 8, !dbg !15000
  store i16 %conv, i16* %5, align 2, !dbg !15001
  br label %if.end, !dbg !15002

if.else:                                          ; preds = %if.then
  %6 = load i16*, i16** %fp.addr, align 8, !dbg !15003
  store i16 10, i16* %6, align 2, !dbg !15004
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  store i32 -22, i32* %retval, align 4, !dbg !15005
  br label %return, !dbg !15005

if.end4:                                          ; preds = %entry
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !15006
  %arrayidx = getelementptr i8, i8* %7, i64 0, !dbg !15006
  %8 = load i8, i8* %arrayidx, align 1, !dbg !15006
  %conv5 = zext i8 %8 to i32, !dbg !15006
  %and = and i32 %conv5, 4, !dbg !15007
  %conv6 = trunc i32 %and to i8, !dbg !15006
  store i8 %conv6, i8* %d_sense, align 1, !dbg !15008
  %9 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15009
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %mpage, i64 0, i64 0, !dbg !15010
  %call = call i32 @ata_msense_control(%struct.ata_device* %9, i8* %arraydecay, i1 zeroext false) #10, !dbg !15011
  store i32 0, i32* %i, align 4, !dbg !15012
  br label %for.cond, !dbg !15014

for.cond:                                         ; preds = %for.inc, %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !15015
  %cmp7 = icmp slt i32 %10, 10, !dbg !15017
  br i1 %cmp7, label %for.body, label %for.end, !dbg !15018

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !15019
  %cmp9 = icmp eq i32 %11, 0, !dbg !15022
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !15023

if.then11:                                        ; preds = %for.body
  br label %for.inc, !dbg !15024

if.end12:                                         ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !15025
  %add = add i32 2, %12, !dbg !15027
  %idxprom = sext i32 %add to i64, !dbg !15028
  %arrayidx13 = getelementptr [12 x i8], [12 x i8]* %mpage, i64 0, i64 %idxprom, !dbg !15028
  %13 = load i8, i8* %arrayidx13, align 1, !dbg !15028
  %conv14 = zext i8 %13 to i32, !dbg !15028
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !15029
  %15 = load i32, i32* %i, align 4, !dbg !15030
  %idxprom15 = sext i32 %15 to i64, !dbg !15029
  %arrayidx16 = getelementptr i8, i8* %14, i64 %idxprom15, !dbg !15029
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !15029
  %conv17 = zext i8 %16 to i32, !dbg !15029
  %cmp18 = icmp ne i32 %conv14, %conv17, !dbg !15031
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !15032

if.then20:                                        ; preds = %if.end12
  %17 = load i32, i32* %i, align 4, !dbg !15033
  %conv21 = trunc i32 %17 to i16, !dbg !15033
  %18 = load i16*, i16** %fp.addr, align 8, !dbg !15035
  store i16 %conv21, i16* %18, align 2, !dbg !15036
  store i32 -22, i32* %retval, align 4, !dbg !15037
  br label %return, !dbg !15037

if.end22:                                         ; preds = %if.end12
  br label %for.inc, !dbg !15038

for.inc:                                          ; preds = %if.end22, %if.then11
  %19 = load i32, i32* %i, align 4, !dbg !15039
  %inc = add i32 %19, 1, !dbg !15039
  store i32 %inc, i32* %i, align 4, !dbg !15039
  br label %for.cond, !dbg !15040, !llvm.loop !15041

for.end:                                          ; preds = %for.cond
  %20 = load i8, i8* %d_sense, align 1, !dbg !15043
  %conv23 = zext i8 %20 to i32, !dbg !15043
  %and24 = and i32 %conv23, 4, !dbg !15045
  %tobool = icmp ne i32 %and24, 0, !dbg !15045
  br i1 %tobool, label %if.then25, label %if.else26, !dbg !15046

if.then25:                                        ; preds = %for.end
  %21 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15047
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %21, i32 0, i32 3, !dbg !15048
  %22 = load i64, i64* %flags, align 16, !dbg !15049
  %or = or i64 %22, 536870912, !dbg !15049
  store i64 %or, i64* %flags, align 16, !dbg !15049
  br label %if.end29, !dbg !15047

if.else26:                                        ; preds = %for.end
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15050
  %flags27 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %23, i32 0, i32 3, !dbg !15051
  %24 = load i64, i64* %flags27, align 16, !dbg !15052
  %and28 = and i64 %24, -536870913, !dbg !15052
  store i64 %and28, i64* %flags27, align 16, !dbg !15052
  br label %if.end29

if.end29:                                         ; preds = %if.else26, %if.then25
  store i32 0, i32* %retval, align 4, !dbg !15053
  br label %return, !dbg !15053

return:                                           ; preds = %if.end29, %if.then20, %if.end
  %25 = load i32, i32* %retval, align 4, !dbg !15054
  ret i32 %25, !dbg !15054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_set_invalid_parameter(%struct.ata_device* %dev, %struct.scsi_cmnd* %cmd, i16 zeroext %field) #0 !dbg !15055 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %field.addr = alloca i16, align 2
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !15058, metadata !DIExpression()), !dbg !15059
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !15060, metadata !DIExpression()), !dbg !15061
  store i16 %field, i16* %field.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %field.addr, metadata !15062, metadata !DIExpression()), !dbg !15063
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !15064
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !15065
  call void @ata_scsi_set_sense(%struct.ata_device* %0, %struct.scsi_cmnd* %1, i8 zeroext 5, i8 zeroext 38, i8 zeroext 0) #10, !dbg !15066
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !15067
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 20, !dbg !15068
  %3 = load i8*, i8** %sense_buffer, align 8, !dbg !15068
  %4 = load i16, i16* %field.addr, align 2, !dbg !15069
  %call = call i32 @scsi_set_sense_field_pointer(i8* %3, i32 96, i16 zeroext %4, i8 zeroext -1, i1 zeroext false) #10, !dbg !15070
  ret void, !dbg !15071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_msense_caching(i16* %id, i8* %buf, i1 zeroext %changeable) #0 !dbg !15072 {
entry:
  %id.addr = alloca i16*, align 8
  %buf.addr = alloca i8*, align 8
  %changeable.addr = alloca i8, align 1
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !15075, metadata !DIExpression()), !dbg !15076
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15077, metadata !DIExpression()), !dbg !15078
  %frombool = zext i1 %changeable to i8
  store i8 %frombool, i8* %changeable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %changeable.addr, metadata !15079, metadata !DIExpression()), !dbg !15080
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15081
  %1 = load i8, i8* %changeable.addr, align 1, !dbg !15082
  %tobool = trunc i8 %1 to i1, !dbg !15082
  call void @modecpy(i8* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* bitcast (<{ i8, i8, [18 x i8] }>* @def_cache_mpage to [20 x i8]*), i64 0, i64 0), i32 20, i1 zeroext %tobool) #10, !dbg !15083
  %2 = load i8, i8* %changeable.addr, align 1, !dbg !15084
  %tobool1 = trunc i8 %2 to i1, !dbg !15084
  br i1 %tobool1, label %if.then, label %if.else, !dbg !15086

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !15087
  %arrayidx = getelementptr i8, i8* %3, i64 2, !dbg !15087
  %4 = load i8, i8* %arrayidx, align 1, !dbg !15089
  %conv = zext i8 %4 to i32, !dbg !15089
  %or = or i32 %conv, 4, !dbg !15089
  %conv2 = trunc i32 %or to i8, !dbg !15089
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !15089
  br label %if.end, !dbg !15090

if.else:                                          ; preds = %entry
  %5 = load i16*, i16** %id.addr, align 8, !dbg !15091
  %call = call zeroext i1 @ata_id_wcache_enabled(i16* %5) #10, !dbg !15093
  %conv3 = zext i1 %call to i32, !dbg !15093
  %shl = shl i32 %conv3, 2, !dbg !15094
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15095
  %arrayidx4 = getelementptr i8, i8* %6, i64 2, !dbg !15095
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !15096
  %conv5 = zext i8 %7 to i32, !dbg !15096
  %or6 = or i32 %conv5, %shl, !dbg !15096
  %conv7 = trunc i32 %or6 to i8, !dbg !15096
  store i8 %conv7, i8* %arrayidx4, align 1, !dbg !15096
  %8 = load i16*, i16** %id.addr, align 8, !dbg !15097
  %call8 = call zeroext i1 @ata_id_rahead_enabled(i16* %8) #10, !dbg !15098
  %lnot = xor i1 %call8, true, !dbg !15099
  %lnot.ext = zext i1 %lnot to i32, !dbg !15099
  %shl9 = shl i32 %lnot.ext, 5, !dbg !15100
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !15101
  %arrayidx10 = getelementptr i8, i8* %9, i64 12, !dbg !15101
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !15102
  %conv11 = zext i8 %10 to i32, !dbg !15102
  %or12 = or i32 %conv11, %shl9, !dbg !15102
  %conv13 = trunc i32 %or12 to i8, !dbg !15102
  store i8 %conv13, i8* %arrayidx10, align 1, !dbg !15102
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 20, !dbg !15103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @modecpy(i8* %dest, i8* %src, i32 %n, i1 zeroext %changeable) #0 !dbg !15104 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %changeable.addr = alloca i8, align 1
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15107, metadata !DIExpression()), !dbg !15108
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15109, metadata !DIExpression()), !dbg !15110
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15111, metadata !DIExpression()), !dbg !15112
  %frombool = zext i1 %changeable to i8
  store i8 %frombool, i8* %changeable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %changeable.addr, metadata !15113, metadata !DIExpression()), !dbg !15114
  %0 = load i8, i8* %changeable.addr, align 1, !dbg !15115
  %tobool = trunc i8 %0 to i1, !dbg !15115
  br i1 %tobool, label %if.then, label %if.else, !dbg !15117

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15118
  %2 = load i8*, i8** %src.addr, align 8, !dbg !15120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 2, i1 false), !dbg !15121
  %3 = load i8*, i8** %dest.addr, align 8, !dbg !15122
  %add.ptr = getelementptr i8, i8* %3, i64 2, !dbg !15123
  %4 = load i32, i32* %n.addr, align 4, !dbg !15124
  %sub = sub i32 %4, 2, !dbg !15125
  %conv = sext i32 %sub to i64, !dbg !15124
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 0, i64 %conv, i1 false), !dbg !15126
  br label %if.end, !dbg !15127

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %dest.addr, align 8, !dbg !15128
  %6 = load i8*, i8** %src.addr, align 8, !dbg !15130
  %7 = load i32, i32* %n.addr, align 4, !dbg !15131
  %conv1 = sext i32 %7 to i64, !dbg !15131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 %conv1, i1 false), !dbg !15132
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !15133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_rahead_enabled(i16* %id) #0 !dbg !15134 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !15135, metadata !DIExpression()), !dbg !15136
  %0 = load i16*, i16** %id.addr, align 8, !dbg !15137
  %arrayidx = getelementptr i16, i16* %0, i64 87, !dbg !15137
  %1 = load i16, i16* %arrayidx, align 2, !dbg !15137
  %conv = zext i16 %1 to i32, !dbg !15137
  %and = and i32 %conv, 49152, !dbg !15139
  %cmp = icmp ne i32 %and, 16384, !dbg !15140
  br i1 %cmp, label %if.then, label %if.end, !dbg !15141

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !15142
  br label %return, !dbg !15142

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !15143
  %arrayidx2 = getelementptr i16, i16* %2, i64 85, !dbg !15143
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !15143
  %conv3 = zext i16 %3 to i32, !dbg !15143
  %and4 = and i32 %conv3, 64, !dbg !15144
  %tobool = icmp ne i32 %and4, 0, !dbg !15143
  store i1 %tobool, i1* %retval, align 1, !dbg !15145
  br label %return, !dbg !15145

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !15146
  ret i1 %4, !dbg !15146
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_msense_control(%struct.ata_device* %dev, i8* %buf, i1 zeroext %changeable) #0 !dbg !15147 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %buf.addr = alloca i8*, align 8
  %changeable.addr = alloca i8, align 1
  %d_sense = alloca i8, align 1
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !15150, metadata !DIExpression()), !dbg !15151
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15152, metadata !DIExpression()), !dbg !15153
  %frombool = zext i1 %changeable to i8
  store i8 %frombool, i8* %changeable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %changeable.addr, metadata !15154, metadata !DIExpression()), !dbg !15155
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15156
  %1 = load i8, i8* %changeable.addr, align 1, !dbg !15157
  %tobool = trunc i8 %1 to i1, !dbg !15157
  call void @modecpy(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @def_control_mpage, i64 0, i64 0), i32 12, i1 zeroext %tobool) #10, !dbg !15158
  %2 = load i8, i8* %changeable.addr, align 1, !dbg !15159
  %tobool1 = trunc i8 %2 to i1, !dbg !15159
  br i1 %tobool1, label %if.then, label %if.else, !dbg !15161

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !15162
  %arrayidx = getelementptr i8, i8* %3, i64 2, !dbg !15162
  %4 = load i8, i8* %arrayidx, align 1, !dbg !15164
  %conv = zext i8 %4 to i32, !dbg !15164
  %or = or i32 %conv, 4, !dbg !15164
  %conv2 = trunc i32 %or to i8, !dbg !15164
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !15164
  br label %if.end, !dbg !15165

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %d_sense, metadata !15166, metadata !DIExpression()), !dbg !15168
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !15169
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 3, !dbg !15170
  %6 = load i64, i64* %flags, align 16, !dbg !15170
  %and = and i64 %6, 536870912, !dbg !15171
  %tobool3 = icmp ne i64 %and, 0, !dbg !15172
  %frombool4 = zext i1 %tobool3 to i8, !dbg !15168
  store i8 %frombool4, i8* %d_sense, align 1, !dbg !15168
  %7 = load i8, i8* %d_sense, align 1, !dbg !15173
  %tobool5 = trunc i8 %7 to i1, !dbg !15173
  %conv6 = zext i1 %tobool5 to i32, !dbg !15173
  %shl = shl i32 %conv6, 2, !dbg !15174
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !15175
  %arrayidx7 = getelementptr i8, i8* %8, i64 2, !dbg !15175
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !15176
  %conv8 = zext i8 %9 to i32, !dbg !15176
  %or9 = or i32 %conv8, %shl, !dbg !15176
  %conv10 = trunc i32 %or9 to i8, !dbg !15176
  store i8 %conv10, i8* %arrayidx7, align 1, !dbg !15176
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 12, !dbg !15177
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_set_sense_field_pointer(i8*, i32, i16 zeroext, i8 zeroext, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_fpdma_zac_mgmt_in_supported(%struct.ata_device* %dev) #0 !dbg !15178 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !15179, metadata !DIExpression()), !dbg !15180
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !15181
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 3, !dbg !15182
  %1 = load i64, i64* %flags, align 16, !dbg !15182
  %and = and i64 %1, 524288, !dbg !15183
  %tobool = icmp ne i64 %and, 0, !dbg !15183
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15184

land.rhs:                                         ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !15185
  %ncq_send_recv_cmds = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 29, !dbg !15186
  %arrayidx = getelementptr [20 x i8], [20 x i8]* %ncq_send_recv_cmds, i64 0, i64 16, !dbg !15185
  %3 = load i8, i8* %arrayidx, align 8, !dbg !15185
  %conv = zext i8 %3 to i32, !dbg !15185
  %and1 = and i32 %conv, 2, !dbg !15187
  %tobool2 = icmp ne i32 %and1, 0, !dbg !15184
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !15188
  ret i1 %4, !dbg !15189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_report_zones_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !15190 {
entry:
  %val.addr.i217 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr.i217, metadata !10348, metadata !DIExpression()), !dbg !15191
  %p.addr.i218 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i218, metadata !10354, metadata !DIExpression()), !dbg !15195
  %p.addr.i.i215 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i215, metadata !15196, metadata !DIExpression()), !dbg !15202
  %p.addr.i216 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i216, metadata !15208, metadata !DIExpression()), !dbg !15209
  %val.addr.i185 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr.i185, metadata !10348, metadata !DIExpression()), !dbg !15210
  %p.addr.i186 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i186, metadata !10354, metadata !DIExpression()), !dbg !15212
  %p.addr.i.i183 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i183, metadata !15196, metadata !DIExpression()), !dbg !15213
  %p.addr.i184 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i184, metadata !15208, metadata !DIExpression()), !dbg !15216
  %val.addr.i153 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr.i153, metadata !10348, metadata !DIExpression()), !dbg !15217
  %p.addr.i154 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i154, metadata !10354, metadata !DIExpression()), !dbg !15219
  %p.addr.i.i151 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i151, metadata !15196, metadata !DIExpression()), !dbg !15220
  %p.addr.i152 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i152, metadata !15208, metadata !DIExpression()), !dbg !15223
  %val.addr.i121 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr.i121, metadata !10348, metadata !DIExpression()), !dbg !15224
  %p.addr.i122 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i122, metadata !10354, metadata !DIExpression()), !dbg !15228
  %val.addr.i108 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr.i108, metadata !10348, metadata !DIExpression()), !dbg !15229
  %p.addr.i109 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i109, metadata !10354, metadata !DIExpression()), !dbg !15231
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !10337, metadata !DIExpression()), !dbg !15232
  %p.addr.i107 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i107, metadata !10346, metadata !DIExpression()), !dbg !15234
  %p.addr.i.i105 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i105, metadata !15196, metadata !DIExpression()), !dbg !15235
  %p.addr.i106 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i106, metadata !15208, metadata !DIExpression()), !dbg !15238
  %p.addr.i.i103 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %p.addr.i.i103, metadata !15196, metadata !DIExpression()), !dbg !15239
  %p.addr.i104 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i104, metadata !15208, metadata !DIExpression()), !dbg !15242
  %p.addr.i.i101 = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i101, metadata !15243, metadata !DIExpression()), !dbg !15249
  %p.addr.i102 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i102, metadata !15253, metadata !DIExpression()), !dbg !15254
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !15255, metadata !DIExpression()), !dbg !15261
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !15265, metadata !DIExpression()), !dbg !15266
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %miter = alloca %struct.sg_mapping_iter, align 8
  %flags = alloca i64, align 8
  %bytes = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %offset = alloca i32, align 4
  %hdr = alloca i8*, align 8
  %list_length = alloca i32, align 4
  %max_lba = alloca i64, align 8
  %opt_lba = alloca i64, align 8
  %same = alloca i16, align 2
  %rec = alloca i8*, align 8
  %cond = alloca i8, align 1
  %type = alloca i8, align 1
  %non_seq = alloca i8, align 1
  %reset = alloca i8, align 1
  %size = alloca i64, align 8
  %start = alloca i64, align 8
  %wp = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp82 = alloca i64, align 8
  %__dummy94 = alloca i64, align 8
  %__dummy295 = alloca i64, align 8
  %tmp98 = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !15267, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !15269, metadata !DIExpression()), !dbg !15270
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15271
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !15272
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !15272
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !15270
  call void @llvm.dbg.declare(metadata %struct.sg_mapping_iter* %miter, metadata !15273, metadata !DIExpression()), !dbg !15290
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15291, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !15293, metadata !DIExpression()), !dbg !15294
  store i32 0, i32* %bytes, align 4, !dbg !15294
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !15295
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %2) #10, !dbg !15296
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !15297
  %call1 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %3) #10, !dbg !15298
  call void @sg_miter_start(%struct.sg_mapping_iter* %miter, %struct.scatterlist* %call, i32 %call1, i32 3) #10, !dbg !15299
  br label %do.body, !dbg !15300

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !15301

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15303, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15307, metadata !DIExpression()), !dbg !15306
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15306
  %conv = zext i1 %cmp to i32, !dbg !15306
  store i32 1, i32* %tmp, align 4, !dbg !15306
  %4 = load i32, i32* %tmp, align 4, !dbg !15306
  %call3 = call i64 @arch_local_irq_save() #10, !dbg !15308
  store i64 %call3, i64* %flags, align 8, !dbg !15308
  br label %do.end, !dbg !15308

do.end:                                           ; preds = %do.body2
  br label %do.end4, !dbg !15301

do.end4:                                          ; preds = %do.end
  br label %while.cond, !dbg !15309

while.cond:                                       ; preds = %while.end, %do.end4
  %call5 = call zeroext i1 @sg_miter_next(%struct.sg_mapping_iter* %miter) #10, !dbg !15310
  br i1 %call5, label %while.body, label %while.end91, !dbg !15309

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !15311, metadata !DIExpression()), !dbg !15312
  store i32 0, i32* %offset, align 4, !dbg !15312
  %5 = load i32, i32* %bytes, align 4, !dbg !15313
  %cmp6 = icmp eq i32 %5, 0, !dbg !15314
  br i1 %cmp6, label %if.then, label %if.end, !dbg !15315

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %hdr, metadata !15316, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.declare(metadata i32* %list_length, metadata !15318, metadata !DIExpression()), !dbg !15319
  call void @llvm.dbg.declare(metadata i64* %max_lba, metadata !15320, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.declare(metadata i64* %opt_lba, metadata !15322, metadata !DIExpression()), !dbg !15323
  call void @llvm.dbg.declare(metadata i16* %same, metadata !15324, metadata !DIExpression()), !dbg !15325
  %addr = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %miter, i32 0, i32 1, !dbg !15326
  %6 = load i8*, i8** %addr, align 8, !dbg !15326
  store i8* %6, i8** %hdr, align 8, !dbg !15327
  %7 = load i8*, i8** %hdr, align 8, !dbg !15328
  %arrayidx = getelementptr i8, i8* %7, i64 0, !dbg !15328
  store i8* %arrayidx, i8** %p.addr.i, align 8
  %8 = load i8*, i8** %p.addr.i, align 8, !dbg !15329
  %9 = bitcast i8* %8 to i32*, !dbg !15330
  store i32* %9, i32** %p.addr.i.i, align 8
  %10 = load i32*, i32** %p.addr.i.i, align 8, !dbg !15331
  %11 = load i32, i32* %10, align 4, !dbg !15332
  store i32 %11, i32* %list_length, align 4, !dbg !15333
  %12 = load i8*, i8** %hdr, align 8, !dbg !15334
  %arrayidx9 = getelementptr i8, i8* %12, i64 4, !dbg !15334
  store i8* %arrayidx9, i8** %p.addr.i102, align 8
  %13 = load i8*, i8** %p.addr.i102, align 8, !dbg !15335
  %14 = bitcast i8* %13 to i16*, !dbg !15336
  store i16* %14, i16** %p.addr.i.i101, align 8
  %15 = load i16*, i16** %p.addr.i.i101, align 8, !dbg !15337
  %16 = load i16, i16* %15, align 2, !dbg !15338
  store i16 %16, i16* %same, align 2, !dbg !15339
  %17 = load i8*, i8** %hdr, align 8, !dbg !15340
  %arrayidx11 = getelementptr i8, i8* %17, i64 8, !dbg !15340
  store i8* %arrayidx11, i8** %p.addr.i104, align 8
  %18 = load i8*, i8** %p.addr.i104, align 8, !dbg !15341
  %19 = bitcast i8* %18 to i64*, !dbg !15342
  store i64* %19, i64** %p.addr.i.i103, align 8
  %20 = load i64*, i64** %p.addr.i.i103, align 8, !dbg !15343
  %21 = load i64, i64* %20, align 8, !dbg !15344
  store i64 %21, i64* %max_lba, align 8, !dbg !15345
  %22 = load i8*, i8** %hdr, align 8, !dbg !15346
  %arrayidx13 = getelementptr i8, i8* %22, i64 16, !dbg !15346
  store i8* %arrayidx13, i8** %p.addr.i106, align 8
  %23 = load i8*, i8** %p.addr.i106, align 8, !dbg !15347
  %24 = bitcast i8* %23 to i64*, !dbg !15348
  store i64* %24, i64** %p.addr.i.i105, align 8
  %25 = load i64*, i64** %p.addr.i.i105, align 8, !dbg !15349
  %26 = load i64, i64* %25, align 8, !dbg !15350
  store i64 %26, i64* %opt_lba, align 8, !dbg !15351
  %27 = load i32, i32* %list_length, align 4, !dbg !15352
  %28 = load i8*, i8** %hdr, align 8, !dbg !15353
  %arrayidx15 = getelementptr i8, i8* %28, i64 0, !dbg !15353
  store i32 %27, i32* %val.addr.i, align 4
  store i8* %arrayidx15, i8** %p.addr.i107, align 8
  %29 = load i32, i32* %val.addr.i, align 4, !dbg !15354
  %30 = call i1 @llvm.is.constant.i32(i32 %29) #5, !dbg !15354
  br i1 %30, label %cond.true.i, label %cond.false.i, !dbg !15354

cond.true.i:                                      ; preds = %if.then
  %31 = load i32, i32* %val.addr.i, align 4, !dbg !15354
  %and.i = and i32 %31, 255, !dbg !15354
  %shl.i = shl i32 %and.i, 24, !dbg !15354
  %32 = load i32, i32* %val.addr.i, align 4, !dbg !15354
  %and1.i = and i32 %32, 65280, !dbg !15354
  %shl2.i = shl i32 %and1.i, 8, !dbg !15354
  %or.i = or i32 %shl.i, %shl2.i, !dbg !15354
  %33 = load i32, i32* %val.addr.i, align 4, !dbg !15354
  %and3.i = and i32 %33, 16711680, !dbg !15354
  %shr.i = lshr i32 %and3.i, 8, !dbg !15354
  %or4.i = or i32 %or.i, %shr.i, !dbg !15354
  %34 = load i32, i32* %val.addr.i, align 4, !dbg !15354
  %and5.i = and i32 %34, -16777216, !dbg !15354
  %shr6.i = lshr i32 %and5.i, 24, !dbg !15354
  %or7.i = or i32 %or4.i, %shr6.i, !dbg !15354
  br label %put_unaligned_be32.exit, !dbg !15354

cond.false.i:                                     ; preds = %if.then
  %35 = load i32, i32* %val.addr.i, align 4, !dbg !15354
  %call.i = call i32 @__fswab32(i32 %35) #12, !dbg !15354
  br label %put_unaligned_be32.exit, !dbg !15354

put_unaligned_be32.exit:                          ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %or7.i, %cond.true.i ], [ %call.i, %cond.false.i ], !dbg !15354
  %36 = load i8*, i8** %p.addr.i107, align 8, !dbg !15355
  %37 = bitcast i8* %36 to i32*, !dbg !15356
  store i32 %cond.i, i32* %37, align 4, !dbg !15357
  %38 = load i16, i16* %same, align 2, !dbg !15358
  %conv16 = zext i16 %38 to i32, !dbg !15358
  %and = and i32 %conv16, 15, !dbg !15359
  %conv17 = trunc i32 %and to i8, !dbg !15358
  %39 = load i8*, i8** %hdr, align 8, !dbg !15360
  %arrayidx18 = getelementptr i8, i8* %39, i64 4, !dbg !15360
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !15361
  %40 = load i64, i64* %max_lba, align 8, !dbg !15362
  %41 = load i8*, i8** %hdr, align 8, !dbg !15363
  %arrayidx19 = getelementptr i8, i8* %41, i64 8, !dbg !15363
  store i64 %40, i64* %val.addr.i108, align 8
  store i8* %arrayidx19, i8** %p.addr.i109, align 8
  %42 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %43 = call i1 @llvm.is.constant.i64(i64 %42) #5, !dbg !15364
  br i1 %43, label %cond.true.i117, label %cond.false.i119, !dbg !15364

cond.true.i117:                                   ; preds = %put_unaligned_be32.exit
  %44 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and.i110 = and i64 %44, 255, !dbg !15364
  %shl.i111 = shl i64 %and.i110, 56, !dbg !15364
  %45 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and1.i112 = and i64 %45, 65280, !dbg !15364
  %shl2.i113 = shl i64 %and1.i112, 40, !dbg !15364
  %or.i114 = or i64 %shl.i111, %shl2.i113, !dbg !15364
  %46 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and3.i115 = and i64 %46, 16711680, !dbg !15364
  %shl4.i = shl i64 %and3.i115, 24, !dbg !15364
  %or5.i = or i64 %or.i114, %shl4.i, !dbg !15364
  %47 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and6.i = and i64 %47, 4278190080, !dbg !15364
  %shl7.i = shl i64 %and6.i, 8, !dbg !15364
  %or8.i = or i64 %or5.i, %shl7.i, !dbg !15364
  %48 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and9.i = and i64 %48, 1095216660480, !dbg !15364
  %shr.i116 = lshr i64 %and9.i, 8, !dbg !15364
  %or10.i = or i64 %or8.i, %shr.i116, !dbg !15364
  %49 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and11.i = and i64 %49, 280375465082880, !dbg !15364
  %shr12.i = lshr i64 %and11.i, 24, !dbg !15364
  %or13.i = or i64 %or10.i, %shr12.i, !dbg !15364
  %50 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and14.i = and i64 %50, 71776119061217280, !dbg !15364
  %shr15.i = lshr i64 %and14.i, 40, !dbg !15364
  %or16.i = or i64 %or13.i, %shr15.i, !dbg !15364
  %51 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %and17.i = and i64 %51, -72057594037927936, !dbg !15364
  %shr18.i = lshr i64 %and17.i, 56, !dbg !15364
  %or19.i = or i64 %or16.i, %shr18.i, !dbg !15364
  br label %put_unaligned_be64.exit, !dbg !15364

cond.false.i119:                                  ; preds = %put_unaligned_be32.exit
  %52 = load i64, i64* %val.addr.i108, align 8, !dbg !15364
  %call.i118 = call i64 @__fswab64(i64 %52) #12, !dbg !15364
  br label %put_unaligned_be64.exit, !dbg !15364

put_unaligned_be64.exit:                          ; preds = %cond.true.i117, %cond.false.i119
  %cond.i120 = phi i64 [ %or19.i, %cond.true.i117 ], [ %call.i118, %cond.false.i119 ], !dbg !15364
  %53 = load i8*, i8** %p.addr.i109, align 8, !dbg !15365
  %54 = bitcast i8* %53 to i64*, !dbg !15366
  store i64 %cond.i120, i64* %54, align 8, !dbg !15367
  %55 = load i64, i64* %opt_lba, align 8, !dbg !15368
  %56 = load i8*, i8** %hdr, align 8, !dbg !15369
  %arrayidx20 = getelementptr i8, i8* %56, i64 16, !dbg !15369
  store i64 %55, i64* %val.addr.i121, align 8
  store i8* %arrayidx20, i8** %p.addr.i122, align 8
  %57 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %58 = call i1 @llvm.is.constant.i64(i64 %57) #5, !dbg !15370
  br i1 %58, label %cond.true.i146, label %cond.false.i148, !dbg !15370

cond.true.i146:                                   ; preds = %put_unaligned_be64.exit
  %59 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and.i123 = and i64 %59, 255, !dbg !15370
  %shl.i124 = shl i64 %and.i123, 56, !dbg !15370
  %60 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and1.i125 = and i64 %60, 65280, !dbg !15370
  %shl2.i126 = shl i64 %and1.i125, 40, !dbg !15370
  %or.i127 = or i64 %shl.i124, %shl2.i126, !dbg !15370
  %61 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and3.i128 = and i64 %61, 16711680, !dbg !15370
  %shl4.i129 = shl i64 %and3.i128, 24, !dbg !15370
  %or5.i130 = or i64 %or.i127, %shl4.i129, !dbg !15370
  %62 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and6.i131 = and i64 %62, 4278190080, !dbg !15370
  %shl7.i132 = shl i64 %and6.i131, 8, !dbg !15370
  %or8.i133 = or i64 %or5.i130, %shl7.i132, !dbg !15370
  %63 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and9.i134 = and i64 %63, 1095216660480, !dbg !15370
  %shr.i135 = lshr i64 %and9.i134, 8, !dbg !15370
  %or10.i136 = or i64 %or8.i133, %shr.i135, !dbg !15370
  %64 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and11.i137 = and i64 %64, 280375465082880, !dbg !15370
  %shr12.i138 = lshr i64 %and11.i137, 24, !dbg !15370
  %or13.i139 = or i64 %or10.i136, %shr12.i138, !dbg !15370
  %65 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and14.i140 = and i64 %65, 71776119061217280, !dbg !15370
  %shr15.i141 = lshr i64 %and14.i140, 40, !dbg !15370
  %or16.i142 = or i64 %or13.i139, %shr15.i141, !dbg !15370
  %66 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %and17.i143 = and i64 %66, -72057594037927936, !dbg !15370
  %shr18.i144 = lshr i64 %and17.i143, 56, !dbg !15370
  %or19.i145 = or i64 %or16.i142, %shr18.i144, !dbg !15370
  br label %put_unaligned_be64.exit150, !dbg !15370

cond.false.i148:                                  ; preds = %put_unaligned_be64.exit
  %67 = load i64, i64* %val.addr.i121, align 8, !dbg !15370
  %call.i147 = call i64 @__fswab64(i64 %67) #12, !dbg !15370
  br label %put_unaligned_be64.exit150, !dbg !15370

put_unaligned_be64.exit150:                       ; preds = %cond.true.i146, %cond.false.i148
  %cond.i149 = phi i64 [ %or19.i145, %cond.true.i146 ], [ %call.i147, %cond.false.i148 ], !dbg !15370
  %68 = load i8*, i8** %p.addr.i122, align 8, !dbg !15371
  %69 = bitcast i8* %68 to i64*, !dbg !15372
  store i64 %cond.i149, i64* %69, align 8, !dbg !15373
  %70 = load i32, i32* %offset, align 4, !dbg !15374
  %add = add i32 %70, 64, !dbg !15374
  store i32 %add, i32* %offset, align 4, !dbg !15374
  %71 = load i32, i32* %bytes, align 4, !dbg !15375
  %add21 = add i32 %71, 64, !dbg !15375
  store i32 %add21, i32* %bytes, align 4, !dbg !15375
  br label %if.end, !dbg !15376

if.end:                                           ; preds = %put_unaligned_be64.exit150, %while.body
  br label %while.cond22, !dbg !15377

while.cond22:                                     ; preds = %if.end81, %if.end
  %72 = load i32, i32* %offset, align 4, !dbg !15378
  %conv23 = zext i32 %72 to i64, !dbg !15378
  %length = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %miter, i32 0, i32 2, !dbg !15379
  %73 = load i64, i64* %length, align 8, !dbg !15379
  %cmp24 = icmp ult i64 %conv23, %73, !dbg !15380
  br i1 %cmp24, label %while.body26, label %while.end, !dbg !15377

while.body26:                                     ; preds = %while.cond22
  call void @llvm.dbg.declare(metadata i8** %rec, metadata !15381, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.declare(metadata i8* %cond, metadata !15383, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.declare(metadata i8* %type, metadata !15385, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.declare(metadata i8* %non_seq, metadata !15387, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.declare(metadata i8* %reset, metadata !15389, metadata !DIExpression()), !dbg !15390
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15391, metadata !DIExpression()), !dbg !15392
  call void @llvm.dbg.declare(metadata i64* %start, metadata !15393, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.declare(metadata i64* %wp, metadata !15395, metadata !DIExpression()), !dbg !15396
  %addr27 = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %miter, i32 0, i32 1, !dbg !15397
  %74 = load i8*, i8** %addr27, align 8, !dbg !15397
  %75 = load i32, i32* %offset, align 4, !dbg !15398
  %idx.ext = zext i32 %75 to i64, !dbg !15399
  %add.ptr = getelementptr i8, i8* %74, i64 %idx.ext, !dbg !15399
  store i8* %add.ptr, i8** %rec, align 8, !dbg !15400
  %76 = load i8*, i8** %rec, align 8, !dbg !15401
  %arrayidx28 = getelementptr i8, i8* %76, i64 0, !dbg !15401
  %77 = load i8, i8* %arrayidx28, align 1, !dbg !15401
  %conv29 = sext i8 %77 to i32, !dbg !15401
  %and30 = and i32 %conv29, 15, !dbg !15402
  %conv31 = trunc i32 %and30 to i8, !dbg !15401
  store i8 %conv31, i8* %type, align 1, !dbg !15403
  %78 = load i8*, i8** %rec, align 8, !dbg !15404
  %arrayidx32 = getelementptr i8, i8* %78, i64 1, !dbg !15404
  %79 = load i8, i8* %arrayidx32, align 1, !dbg !15404
  %conv33 = sext i8 %79 to i32, !dbg !15404
  %shr = ashr i32 %conv33, 4, !dbg !15405
  %and34 = and i32 %shr, 15, !dbg !15406
  %conv35 = trunc i32 %and34 to i8, !dbg !15407
  store i8 %conv35, i8* %cond, align 1, !dbg !15408
  %80 = load i8*, i8** %rec, align 8, !dbg !15409
  %arrayidx36 = getelementptr i8, i8* %80, i64 1, !dbg !15409
  %81 = load i8, i8* %arrayidx36, align 1, !dbg !15409
  %conv37 = sext i8 %81 to i32, !dbg !15409
  %and38 = and i32 %conv37, 2, !dbg !15410
  %conv39 = trunc i32 %and38 to i8, !dbg !15411
  store i8 %conv39, i8* %non_seq, align 1, !dbg !15412
  %82 = load i8*, i8** %rec, align 8, !dbg !15413
  %arrayidx40 = getelementptr i8, i8* %82, i64 1, !dbg !15413
  %83 = load i8, i8* %arrayidx40, align 1, !dbg !15413
  %conv41 = sext i8 %83 to i32, !dbg !15413
  %and42 = and i32 %conv41, 1, !dbg !15414
  %conv43 = trunc i32 %and42 to i8, !dbg !15415
  store i8 %conv43, i8* %reset, align 1, !dbg !15416
  %84 = load i8*, i8** %rec, align 8, !dbg !15417
  %arrayidx44 = getelementptr i8, i8* %84, i64 8, !dbg !15417
  store i8* %arrayidx44, i8** %p.addr.i152, align 8
  %85 = load i8*, i8** %p.addr.i152, align 8, !dbg !15418
  %86 = bitcast i8* %85 to i64*, !dbg !15419
  store i64* %86, i64** %p.addr.i.i151, align 8
  %87 = load i64*, i64** %p.addr.i.i151, align 8, !dbg !15420
  %88 = load i64, i64* %87, align 8, !dbg !15421
  store i64 %88, i64* %size, align 8, !dbg !15422
  %89 = load i8*, i8** %rec, align 8, !dbg !15423
  %arrayidx46 = getelementptr i8, i8* %89, i64 16, !dbg !15423
  store i8* %arrayidx46, i8** %p.addr.i184, align 8
  %90 = load i8*, i8** %p.addr.i184, align 8, !dbg !15424
  %91 = bitcast i8* %90 to i64*, !dbg !15425
  store i64* %91, i64** %p.addr.i.i183, align 8
  %92 = load i64*, i64** %p.addr.i.i183, align 8, !dbg !15426
  %93 = load i64, i64* %92, align 8, !dbg !15427
  store i64 %93, i64* %start, align 8, !dbg !15428
  %94 = load i8*, i8** %rec, align 8, !dbg !15429
  %arrayidx48 = getelementptr i8, i8* %94, i64 24, !dbg !15429
  store i8* %arrayidx48, i8** %p.addr.i216, align 8
  %95 = load i8*, i8** %p.addr.i216, align 8, !dbg !15430
  %96 = bitcast i8* %95 to i64*, !dbg !15431
  store i64* %96, i64** %p.addr.i.i215, align 8
  %97 = load i64*, i64** %p.addr.i.i215, align 8, !dbg !15432
  %98 = load i64, i64* %97, align 8, !dbg !15433
  store i64 %98, i64* %wp, align 8, !dbg !15434
  %99 = load i8, i8* %type, align 1, !dbg !15435
  %100 = load i8*, i8** %rec, align 8, !dbg !15436
  %arrayidx50 = getelementptr i8, i8* %100, i64 0, !dbg !15436
  store i8 %99, i8* %arrayidx50, align 1, !dbg !15437
  %101 = load i8, i8* %cond, align 1, !dbg !15438
  %conv51 = zext i8 %101 to i32, !dbg !15438
  %shl = shl i32 %conv51, 4, !dbg !15439
  %102 = load i8, i8* %non_seq, align 1, !dbg !15440
  %conv52 = zext i8 %102 to i32, !dbg !15440
  %or = or i32 %shl, %conv52, !dbg !15441
  %103 = load i8, i8* %reset, align 1, !dbg !15442
  %conv53 = zext i8 %103 to i32, !dbg !15442
  %or54 = or i32 %or, %conv53, !dbg !15443
  %conv55 = trunc i32 %or54 to i8, !dbg !15444
  %104 = load i8*, i8** %rec, align 8, !dbg !15445
  %arrayidx56 = getelementptr i8, i8* %104, i64 1, !dbg !15445
  store i8 %conv55, i8* %arrayidx56, align 1, !dbg !15446
  %105 = load i64, i64* %size, align 8, !dbg !15447
  %106 = load i8*, i8** %rec, align 8, !dbg !15448
  %arrayidx57 = getelementptr i8, i8* %106, i64 8, !dbg !15448
  store i64 %105, i64* %val.addr.i217, align 8
  store i8* %arrayidx57, i8** %p.addr.i218, align 8
  %107 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %108 = call i1 @llvm.is.constant.i64(i64 %107) #5, !dbg !15449
  br i1 %108, label %cond.true.i242, label %cond.false.i244, !dbg !15449

cond.true.i242:                                   ; preds = %while.body26
  %109 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and.i219 = and i64 %109, 255, !dbg !15449
  %shl.i220 = shl i64 %and.i219, 56, !dbg !15449
  %110 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and1.i221 = and i64 %110, 65280, !dbg !15449
  %shl2.i222 = shl i64 %and1.i221, 40, !dbg !15449
  %or.i223 = or i64 %shl.i220, %shl2.i222, !dbg !15449
  %111 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and3.i224 = and i64 %111, 16711680, !dbg !15449
  %shl4.i225 = shl i64 %and3.i224, 24, !dbg !15449
  %or5.i226 = or i64 %or.i223, %shl4.i225, !dbg !15449
  %112 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and6.i227 = and i64 %112, 4278190080, !dbg !15449
  %shl7.i228 = shl i64 %and6.i227, 8, !dbg !15449
  %or8.i229 = or i64 %or5.i226, %shl7.i228, !dbg !15449
  %113 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and9.i230 = and i64 %113, 1095216660480, !dbg !15449
  %shr.i231 = lshr i64 %and9.i230, 8, !dbg !15449
  %or10.i232 = or i64 %or8.i229, %shr.i231, !dbg !15449
  %114 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and11.i233 = and i64 %114, 280375465082880, !dbg !15449
  %shr12.i234 = lshr i64 %and11.i233, 24, !dbg !15449
  %or13.i235 = or i64 %or10.i232, %shr12.i234, !dbg !15449
  %115 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and14.i236 = and i64 %115, 71776119061217280, !dbg !15449
  %shr15.i237 = lshr i64 %and14.i236, 40, !dbg !15449
  %or16.i238 = or i64 %or13.i235, %shr15.i237, !dbg !15449
  %116 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %and17.i239 = and i64 %116, -72057594037927936, !dbg !15449
  %shr18.i240 = lshr i64 %and17.i239, 56, !dbg !15449
  %or19.i241 = or i64 %or16.i238, %shr18.i240, !dbg !15449
  br label %put_unaligned_be64.exit246, !dbg !15449

cond.false.i244:                                  ; preds = %while.body26
  %117 = load i64, i64* %val.addr.i217, align 8, !dbg !15449
  %call.i243 = call i64 @__fswab64(i64 %117) #12, !dbg !15449
  br label %put_unaligned_be64.exit246, !dbg !15449

put_unaligned_be64.exit246:                       ; preds = %cond.true.i242, %cond.false.i244
  %cond.i245 = phi i64 [ %or19.i241, %cond.true.i242 ], [ %call.i243, %cond.false.i244 ], !dbg !15449
  %118 = load i8*, i8** %p.addr.i218, align 8, !dbg !15450
  %119 = bitcast i8* %118 to i64*, !dbg !15451
  store i64 %cond.i245, i64* %119, align 8, !dbg !15452
  %120 = load i64, i64* %start, align 8, !dbg !15453
  %121 = load i8*, i8** %rec, align 8, !dbg !15454
  %arrayidx58 = getelementptr i8, i8* %121, i64 16, !dbg !15454
  store i64 %120, i64* %val.addr.i185, align 8
  store i8* %arrayidx58, i8** %p.addr.i186, align 8
  %122 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %123 = call i1 @llvm.is.constant.i64(i64 %122) #5, !dbg !15455
  br i1 %123, label %cond.true.i210, label %cond.false.i212, !dbg !15455

cond.true.i210:                                   ; preds = %put_unaligned_be64.exit246
  %124 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and.i187 = and i64 %124, 255, !dbg !15455
  %shl.i188 = shl i64 %and.i187, 56, !dbg !15455
  %125 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and1.i189 = and i64 %125, 65280, !dbg !15455
  %shl2.i190 = shl i64 %and1.i189, 40, !dbg !15455
  %or.i191 = or i64 %shl.i188, %shl2.i190, !dbg !15455
  %126 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and3.i192 = and i64 %126, 16711680, !dbg !15455
  %shl4.i193 = shl i64 %and3.i192, 24, !dbg !15455
  %or5.i194 = or i64 %or.i191, %shl4.i193, !dbg !15455
  %127 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and6.i195 = and i64 %127, 4278190080, !dbg !15455
  %shl7.i196 = shl i64 %and6.i195, 8, !dbg !15455
  %or8.i197 = or i64 %or5.i194, %shl7.i196, !dbg !15455
  %128 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and9.i198 = and i64 %128, 1095216660480, !dbg !15455
  %shr.i199 = lshr i64 %and9.i198, 8, !dbg !15455
  %or10.i200 = or i64 %or8.i197, %shr.i199, !dbg !15455
  %129 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and11.i201 = and i64 %129, 280375465082880, !dbg !15455
  %shr12.i202 = lshr i64 %and11.i201, 24, !dbg !15455
  %or13.i203 = or i64 %or10.i200, %shr12.i202, !dbg !15455
  %130 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and14.i204 = and i64 %130, 71776119061217280, !dbg !15455
  %shr15.i205 = lshr i64 %and14.i204, 40, !dbg !15455
  %or16.i206 = or i64 %or13.i203, %shr15.i205, !dbg !15455
  %131 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %and17.i207 = and i64 %131, -72057594037927936, !dbg !15455
  %shr18.i208 = lshr i64 %and17.i207, 56, !dbg !15455
  %or19.i209 = or i64 %or16.i206, %shr18.i208, !dbg !15455
  br label %put_unaligned_be64.exit214, !dbg !15455

cond.false.i212:                                  ; preds = %put_unaligned_be64.exit246
  %132 = load i64, i64* %val.addr.i185, align 8, !dbg !15455
  %call.i211 = call i64 @__fswab64(i64 %132) #12, !dbg !15455
  br label %put_unaligned_be64.exit214, !dbg !15455

put_unaligned_be64.exit214:                       ; preds = %cond.true.i210, %cond.false.i212
  %cond.i213 = phi i64 [ %or19.i209, %cond.true.i210 ], [ %call.i211, %cond.false.i212 ], !dbg !15455
  %133 = load i8*, i8** %p.addr.i186, align 8, !dbg !15456
  %134 = bitcast i8* %133 to i64*, !dbg !15457
  store i64 %cond.i213, i64* %134, align 8, !dbg !15458
  %135 = load i64, i64* %wp, align 8, !dbg !15459
  %136 = load i8*, i8** %rec, align 8, !dbg !15460
  %arrayidx59 = getelementptr i8, i8* %136, i64 24, !dbg !15460
  store i64 %135, i64* %val.addr.i153, align 8
  store i8* %arrayidx59, i8** %p.addr.i154, align 8
  %137 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %138 = call i1 @llvm.is.constant.i64(i64 %137) #5, !dbg !15461
  br i1 %138, label %cond.true.i178, label %cond.false.i180, !dbg !15461

cond.true.i178:                                   ; preds = %put_unaligned_be64.exit214
  %139 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and.i155 = and i64 %139, 255, !dbg !15461
  %shl.i156 = shl i64 %and.i155, 56, !dbg !15461
  %140 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and1.i157 = and i64 %140, 65280, !dbg !15461
  %shl2.i158 = shl i64 %and1.i157, 40, !dbg !15461
  %or.i159 = or i64 %shl.i156, %shl2.i158, !dbg !15461
  %141 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and3.i160 = and i64 %141, 16711680, !dbg !15461
  %shl4.i161 = shl i64 %and3.i160, 24, !dbg !15461
  %or5.i162 = or i64 %or.i159, %shl4.i161, !dbg !15461
  %142 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and6.i163 = and i64 %142, 4278190080, !dbg !15461
  %shl7.i164 = shl i64 %and6.i163, 8, !dbg !15461
  %or8.i165 = or i64 %or5.i162, %shl7.i164, !dbg !15461
  %143 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and9.i166 = and i64 %143, 1095216660480, !dbg !15461
  %shr.i167 = lshr i64 %and9.i166, 8, !dbg !15461
  %or10.i168 = or i64 %or8.i165, %shr.i167, !dbg !15461
  %144 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and11.i169 = and i64 %144, 280375465082880, !dbg !15461
  %shr12.i170 = lshr i64 %and11.i169, 24, !dbg !15461
  %or13.i171 = or i64 %or10.i168, %shr12.i170, !dbg !15461
  %145 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and14.i172 = and i64 %145, 71776119061217280, !dbg !15461
  %shr15.i173 = lshr i64 %and14.i172, 40, !dbg !15461
  %or16.i174 = or i64 %or13.i171, %shr15.i173, !dbg !15461
  %146 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %and17.i175 = and i64 %146, -72057594037927936, !dbg !15461
  %shr18.i176 = lshr i64 %and17.i175, 56, !dbg !15461
  %or19.i177 = or i64 %or16.i174, %shr18.i176, !dbg !15461
  br label %put_unaligned_be64.exit182, !dbg !15461

cond.false.i180:                                  ; preds = %put_unaligned_be64.exit214
  %147 = load i64, i64* %val.addr.i153, align 8, !dbg !15461
  %call.i179 = call i64 @__fswab64(i64 %147) #12, !dbg !15461
  br label %put_unaligned_be64.exit182, !dbg !15461

put_unaligned_be64.exit182:                       ; preds = %cond.true.i178, %cond.false.i180
  %cond.i181 = phi i64 [ %or19.i177, %cond.true.i178 ], [ %call.i179, %cond.false.i180 ], !dbg !15461
  %148 = load i8*, i8** %p.addr.i154, align 8, !dbg !15462
  %149 = bitcast i8* %148 to i64*, !dbg !15463
  store i64 %cond.i181, i64* %149, align 8, !dbg !15464
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15465, metadata !DIExpression()), !dbg !15467
  %150 = load i32, i32* %offset, align 4, !dbg !15467
  %add60 = add i32 %150, 64, !dbg !15467
  %conv61 = zext i32 %add60 to i64, !dbg !15467
  %length62 = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %miter, i32 0, i32 2, !dbg !15467
  %151 = load i64, i64* %length62, align 8, !dbg !15467
  %cmp63 = icmp ugt i64 %conv61, %151, !dbg !15467
  %lnot = xor i1 %cmp63, true, !dbg !15467
  %lnot65 = xor i1 %lnot, true, !dbg !15467
  %lnot.ext = zext i1 %lnot65 to i32, !dbg !15467
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !15467
  %152 = load i32, i32* %__ret_warn_on, align 4, !dbg !15468
  %tobool = icmp ne i32 %152, 0, !dbg !15468
  %lnot66 = xor i1 %tobool, true, !dbg !15468
  %lnot68 = xor i1 %lnot66, true, !dbg !15468
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !15468
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !15468
  %tobool71 = icmp ne i64 %conv70, 0, !dbg !15468
  br i1 %tobool71, label %if.then72, label %if.end81, !dbg !15467

if.then72:                                        ; preds = %put_unaligned_be64.exit182
  br label %do.body73, !dbg !15468

do.body73:                                        ; preds = %if.then72
  br label %do.body74, !dbg !15470

do.body74:                                        ; preds = %do.body73
  br label %do.end75, !dbg !15472

do.end75:                                         ; preds = %do.body74
  br label %do.body76, !dbg !15470

do.body76:                                        ; preds = %do.end75
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i32 3395, i32 2305, i64 12) #5, !dbg !15474, !srcloc !15476
  br label %do.end77, !dbg !15474

do.end77:                                         ; preds = %do.body76
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 320) #5, !dbg !15477, !srcloc !15479
  br label %do.body78, !dbg !15470

do.body78:                                        ; preds = %do.end77
  br label %do.end79, !dbg !15480

do.end79:                                         ; preds = %do.body78
  br label %do.end80, !dbg !15470

do.end80:                                         ; preds = %do.end79
  br label %if.end81, !dbg !15470

if.end81:                                         ; preds = %do.end80, %put_unaligned_be64.exit182
  %153 = load i32, i32* %__ret_warn_on, align 4, !dbg !15467
  %tobool83 = icmp ne i32 %153, 0, !dbg !15467
  %lnot84 = xor i1 %tobool83, true, !dbg !15467
  %lnot86 = xor i1 %lnot84, true, !dbg !15467
  %lnot.ext87 = zext i1 %lnot86 to i32, !dbg !15467
  %conv88 = sext i32 %lnot.ext87 to i64, !dbg !15467
  store i64 %conv88, i64* %tmp82, align 8, !dbg !15468
  %154 = load i64, i64* %tmp82, align 8, !dbg !15467
  %155 = load i32, i32* %offset, align 4, !dbg !15482
  %add89 = add i32 %155, 64, !dbg !15482
  store i32 %add89, i32* %offset, align 4, !dbg !15482
  %156 = load i32, i32* %bytes, align 4, !dbg !15483
  %add90 = add i32 %156, 64, !dbg !15483
  store i32 %add90, i32* %bytes, align 4, !dbg !15483
  br label %while.cond22, !dbg !15377, !llvm.loop !15484

while.end:                                        ; preds = %while.cond22
  br label %while.cond, !dbg !15309, !llvm.loop !15486

while.end91:                                      ; preds = %while.cond
  call void @sg_miter_stop(%struct.sg_mapping_iter* %miter) #10, !dbg !15488
  br label %do.body92, !dbg !15489

do.body92:                                        ; preds = %while.end91
  br label %do.body93, !dbg !15490

do.body93:                                        ; preds = %do.body92
  call void @llvm.dbg.declare(metadata i64* %__dummy94, metadata !15492, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.declare(metadata i64* %__dummy295, metadata !15496, metadata !DIExpression()), !dbg !15495
  %cmp96 = icmp eq i64* %__dummy94, %__dummy295, !dbg !15495
  %conv97 = zext i1 %cmp96 to i32, !dbg !15495
  store i32 1, i32* %tmp98, align 4, !dbg !15495
  %157 = load i32, i32* %tmp98, align 4, !dbg !15495
  %158 = load i64, i64* %flags, align 8, !dbg !15497
  call void @arch_local_irq_restore(i64 %158) #10, !dbg !15497
  br label %do.end99, !dbg !15497

do.end99:                                         ; preds = %do.body93
  br label %do.end100, !dbg !15490

do.end100:                                        ; preds = %do.end99
  %159 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15498
  call void @ata_scsi_qc_complete(%struct.ata_queued_cmd* %159) #10, !dbg !15499
  ret void, !dbg !15500
}

; Function Attrs: noredzone
declare dso_local void @sg_miter_start(%struct.sg_mapping_iter*, %struct.scatterlist*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @sg_miter_next(%struct.sg_mapping_iter*) #2

; Function Attrs: noredzone
declare dso_local void @sg_miter_stop(%struct.sg_mapping_iter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_qc_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !15501 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %cdb = alloca i8*, align 8
  %need_sense = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !15502, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !15504, metadata !DIExpression()), !dbg !15505
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15506
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !15507
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !15507
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !15505
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !15508, metadata !DIExpression()), !dbg !15509
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15510
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 2, !dbg !15511
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !15511
  store %struct.scsi_cmnd* %3, %struct.scsi_cmnd** %cmd, align 8, !dbg !15509
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !15512, metadata !DIExpression()), !dbg !15513
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15514
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 14, !dbg !15515
  %5 = load i8*, i8** %cmnd, align 8, !dbg !15515
  store i8* %5, i8** %cdb, align 8, !dbg !15513
  call void @llvm.dbg.declare(metadata i32* %need_sense, metadata !15516, metadata !DIExpression()), !dbg !15517
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15518
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 20, !dbg !15519
  %7 = load i32, i32* %err_mask, align 4, !dbg !15519
  %cmp = icmp ne i32 %7, 0, !dbg !15520
  %conv = zext i1 %cmp to i32, !dbg !15520
  store i32 %conv, i32* %need_sense, align 4, !dbg !15517
  %8 = load i8*, i8** %cdb, align 8, !dbg !15521
  %arrayidx = getelementptr i8, i8* %8, i64 0, !dbg !15521
  %9 = load i8, i8* %arrayidx, align 1, !dbg !15521
  %conv2 = zext i8 %9 to i32, !dbg !15521
  %cmp3 = icmp eq i32 %conv2, 133, !dbg !15523
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false, !dbg !15524

lor.lhs.false:                                    ; preds = %entry
  %10 = load i8*, i8** %cdb, align 8, !dbg !15525
  %arrayidx5 = getelementptr i8, i8* %10, i64 0, !dbg !15525
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !15525
  %conv6 = zext i8 %11 to i32, !dbg !15525
  %cmp7 = icmp eq i32 %conv6, 161, !dbg !15526
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !15527

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %12 = load i8*, i8** %cdb, align 8, !dbg !15528
  %arrayidx9 = getelementptr i8, i8* %12, i64 2, !dbg !15528
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !15528
  %conv10 = zext i8 %13 to i32, !dbg !15528
  %and = and i32 %conv10, 32, !dbg !15529
  %tobool = icmp ne i32 %and, 0, !dbg !15529
  br i1 %tobool, label %if.then, label %lor.lhs.false11, !dbg !15530

lor.lhs.false11:                                  ; preds = %land.lhs.true
  %14 = load i32, i32* %need_sense, align 4, !dbg !15531
  %tobool12 = icmp ne i32 %14, 0, !dbg !15531
  br i1 %tobool12, label %if.then, label %if.else, !dbg !15532

if.then:                                          ; preds = %lor.lhs.false11, %land.lhs.true
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15533
  call void @ata_gen_passthru_sense(%struct.ata_queued_cmd* %15) #10, !dbg !15534
  br label %if.end22, !dbg !15534

if.else:                                          ; preds = %lor.lhs.false11, %lor.lhs.false
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15535
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 6, !dbg !15537
  %17 = load i64, i64* %flags, align 8, !dbg !15537
  %and13 = and i64 %17, 131072, !dbg !15538
  %tobool14 = icmp ne i64 %and13, 0, !dbg !15538
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !15539

if.then15:                                        ; preds = %if.else
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15540
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 24, !dbg !15541
  store i32 2, i32* %result, align 8, !dbg !15542
  br label %if.end21, !dbg !15540

if.else16:                                        ; preds = %if.else
  %19 = load i32, i32* %need_sense, align 4, !dbg !15543
  %tobool17 = icmp ne i32 %19, 0, !dbg !15543
  br i1 %tobool17, label %if.then18, label %if.else19, !dbg !15545

if.then18:                                        ; preds = %if.else16
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15546
  call void @ata_gen_ata_sense(%struct.ata_queued_cmd* %20) #10, !dbg !15547
  br label %if.end, !dbg !15547

if.else19:                                        ; preds = %if.else16
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15548
  %result20 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %21, i32 0, i32 24, !dbg !15549
  store i32 0, i32* %result20, align 8, !dbg !15550
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then15
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %need_sense, align 4, !dbg !15551
  %tobool23 = icmp ne i32 %22, 0, !dbg !15551
  br i1 %tobool23, label %land.lhs.true24, label %if.end27, !dbg !15553

land.lhs.true24:                                  ; preds = %if.end22
  %23 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15554
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %23, i32 0, i32 1, !dbg !15555
  %24 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !15555
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %24, i32 0, i32 22, !dbg !15556
  %25 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !15556
  %tobool25 = icmp ne void (%struct.ata_port*)* %25, null, !dbg !15554
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !15557

if.then26:                                        ; preds = %land.lhs.true24
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15558
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 5, !dbg !15559
  %27 = load i32, i32* %print_id, align 4, !dbg !15559
  %28 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15560
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %28, i32 0, i32 21, !dbg !15561
  call void @ata_dump_status(i32 %27, %struct.ata_taskfile* %result_tf) #10, !dbg !15562
  br label %if.end27, !dbg !15562

if.end27:                                         ; preds = %if.then26, %land.lhs.true24, %if.end22
  %29 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15563
  call void @ata_qc_done(%struct.ata_queued_cmd* %29) #10, !dbg !15564
  ret void, !dbg !15565
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__fswab64(i64 %val) #8 !dbg !15566 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  %0 = load i64, i64* %val.addr, align 8, !dbg !15571
  %call = call i64 @__arch_swab64(i64 %0) #12, !dbg !15572
  ret i64 %call, !dbg !15573
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__arch_swab64(i64 %val) #8 !dbg !15574 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !15575, metadata !DIExpression()), !dbg !15576
  %0 = load i64, i64* %val.addr, align 8, !dbg !15577
  %1 = call i64 asm "bswapq $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %0) #13, !dbg !15578, !srcloc !15579
  store i64 %1, i64* %val.addr, align 8, !dbg !15578
  %2 = load i64, i64* %val.addr, align 8, !dbg !15580
  ret i64 %2, !dbg !15581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_gen_passthru_sense(%struct.ata_queued_cmd* %qc) #0 !dbg !15582 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %sb = alloca i8*, align 8
  %desc = alloca i8*, align 8
  %verbose = alloca i32, align 4
  %sense_key = alloca i8, align 1
  %asc = alloca i8, align 1
  %ascq = alloca i8, align 1
  %len = alloca i8, align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !15583, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !15585, metadata !DIExpression()), !dbg !15586
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15587
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !15588
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !15588
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !15586
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !15589, metadata !DIExpression()), !dbg !15590
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15591
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 21, !dbg !15592
  store %struct.ata_taskfile* %result_tf, %struct.ata_taskfile** %tf, align 8, !dbg !15590
  call void @llvm.dbg.declare(metadata i8** %sb, metadata !15593, metadata !DIExpression()), !dbg !15594
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15595
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 20, !dbg !15596
  %4 = load i8*, i8** %sense_buffer, align 8, !dbg !15596
  store i8* %4, i8** %sb, align 8, !dbg !15594
  call void @llvm.dbg.declare(metadata i8** %desc, metadata !15597, metadata !DIExpression()), !dbg !15598
  %5 = load i8*, i8** %sb, align 8, !dbg !15599
  %add.ptr = getelementptr i8, i8* %5, i64 8, !dbg !15600
  store i8* %add.ptr, i8** %desc, align 8, !dbg !15598
  call void @llvm.dbg.declare(metadata i32* %verbose, metadata !15601, metadata !DIExpression()), !dbg !15602
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15603
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 0, !dbg !15604
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15604
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 1, !dbg !15605
  %8 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !15605
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %8, i32 0, i32 22, !dbg !15606
  %9 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !15606
  %cmp = icmp eq void (%struct.ata_port*)* %9, null, !dbg !15607
  %conv = zext i1 %cmp to i32, !dbg !15607
  store i32 %conv, i32* %verbose, align 4, !dbg !15602
  call void @llvm.dbg.declare(metadata i8* %sense_key, metadata !15608, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.declare(metadata i8* %asc, metadata !15610, metadata !DIExpression()), !dbg !15611
  call void @llvm.dbg.declare(metadata i8* %ascq, metadata !15612, metadata !DIExpression()), !dbg !15613
  %10 = load i8*, i8** %sb, align 8, !dbg !15614
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 96, i1 false), !dbg !15615
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15616
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 24, !dbg !15617
  store i32 134217730, i32* %result, align 8, !dbg !15618
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15619
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %12, i32 0, i32 20, !dbg !15621
  %13 = load i32, i32* %err_mask, align 4, !dbg !15621
  %tobool = icmp ne i32 %13, 0, !dbg !15619
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15622

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15623
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %14, i32 0, i32 14, !dbg !15624
  %15 = load i8, i8* %command, align 1, !dbg !15624
  %conv1 = zext i8 %15 to i32, !dbg !15623
  %and = and i32 %conv1, 169, !dbg !15625
  %tobool2 = icmp ne i32 %and, 0, !dbg !15625
  br i1 %tobool2, label %if.then, label %if.else, !dbg !15626

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15627
  %ap3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 0, !dbg !15629
  %17 = load %struct.ata_port*, %struct.ata_port** %ap3, align 8, !dbg !15629
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 5, !dbg !15630
  %18 = load i32, i32* %print_id, align 4, !dbg !15630
  %19 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15631
  %command4 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %19, i32 0, i32 14, !dbg !15632
  %20 = load i8, i8* %command4, align 1, !dbg !15632
  %21 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15633
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %21, i32 0, i32 8, !dbg !15634
  %22 = load i8, i8* %feature, align 1, !dbg !15634
  %23 = load i32, i32* %verbose, align 4, !dbg !15635
  call void @ata_to_sense_error(i32 %18, i8 zeroext %20, i8 zeroext %22, i8* %sense_key, i8* %asc, i8* %ascq, i32 %23) #10, !dbg !15636
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15637
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %24, i32 0, i32 1, !dbg !15638
  %25 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15638
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15639
  %27 = load i8, i8* %sense_key, align 1, !dbg !15640
  %28 = load i8, i8* %asc, align 1, !dbg !15641
  %29 = load i8, i8* %ascq, align 1, !dbg !15642
  call void @ata_scsi_set_sense(%struct.ata_device* %25, %struct.scsi_cmnd* %26, i8 zeroext %27, i8 zeroext %28, i8 zeroext %29) #10, !dbg !15643
  br label %if.end, !dbg !15644

if.else:                                          ; preds = %lor.lhs.false
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15645
  %sense_buffer5 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %30, i32 0, i32 20, !dbg !15647
  %31 = load i8*, i8** %sense_buffer5, align 8, !dbg !15647
  call void @scsi_build_sense_buffer(i32 1, i8* %31, i8 zeroext 1, i8 zeroext 0, i8 zeroext 29) #10, !dbg !15648
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15649
  %sense_buffer6 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %32, i32 0, i32 20, !dbg !15651
  %33 = load i8*, i8** %sense_buffer6, align 8, !dbg !15651
  %arrayidx = getelementptr i8, i8* %33, i64 0, !dbg !15649
  %34 = load i8, i8* %arrayidx, align 1, !dbg !15649
  %conv7 = zext i8 %34 to i32, !dbg !15649
  %and8 = and i32 %conv7, 127, !dbg !15652
  %cmp9 = icmp sge i32 %and8, 114, !dbg !15653
  br i1 %cmp9, label %if.then11, label %if.else53, !dbg !15654

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %len, metadata !15655, metadata !DIExpression()), !dbg !15657
  %35 = load i8*, i8** %sb, align 8, !dbg !15658
  %arrayidx12 = getelementptr i8, i8* %35, i64 7, !dbg !15658
  %36 = load i8, i8* %arrayidx12, align 1, !dbg !15658
  store i8 %36, i8* %len, align 1, !dbg !15659
  %37 = load i8*, i8** %sb, align 8, !dbg !15660
  %38 = load i8, i8* %len, align 1, !dbg !15661
  %conv13 = zext i8 %38 to i32, !dbg !15661
  %add = add i32 %conv13, 8, !dbg !15662
  %call = call i8* @scsi_sense_desc_find(i8* %37, i32 %add, i32 9) #10, !dbg !15663
  store i8* %call, i8** %desc, align 8, !dbg !15664
  %39 = load i8*, i8** %desc, align 8, !dbg !15665
  %tobool14 = icmp ne i8* %39, null, !dbg !15665
  br i1 %tobool14, label %if.end29, label %if.then15, !dbg !15667

if.then15:                                        ; preds = %if.then11
  %40 = load i8, i8* %len, align 1, !dbg !15668
  %conv16 = zext i8 %40 to i32, !dbg !15668
  %add17 = add i32 %conv16, 14, !dbg !15671
  %cmp18 = icmp slt i32 96, %add17, !dbg !15672
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !15673

if.then20:                                        ; preds = %if.then15
  br label %if.end103, !dbg !15674

if.end21:                                         ; preds = %if.then15
  %41 = load i8, i8* %len, align 1, !dbg !15675
  %conv22 = zext i8 %41 to i32, !dbg !15675
  %add23 = add i32 %conv22, 14, !dbg !15676
  %conv24 = trunc i32 %add23 to i8, !dbg !15675
  %42 = load i8*, i8** %sb, align 8, !dbg !15677
  %arrayidx25 = getelementptr i8, i8* %42, i64 7, !dbg !15677
  store i8 %conv24, i8* %arrayidx25, align 1, !dbg !15678
  %43 = load i8*, i8** %sb, align 8, !dbg !15679
  %add.ptr26 = getelementptr i8, i8* %43, i64 8, !dbg !15680
  %44 = load i8, i8* %len, align 1, !dbg !15681
  %conv27 = zext i8 %44 to i32, !dbg !15681
  %idx.ext = sext i32 %conv27 to i64, !dbg !15682
  %add.ptr28 = getelementptr i8, i8* %add.ptr26, i64 %idx.ext, !dbg !15682
  store i8* %add.ptr28, i8** %desc, align 8, !dbg !15683
  br label %if.end29, !dbg !15684

if.end29:                                         ; preds = %if.end21, %if.then11
  %45 = load i8*, i8** %desc, align 8, !dbg !15685
  %arrayidx30 = getelementptr i8, i8* %45, i64 0, !dbg !15685
  store i8 9, i8* %arrayidx30, align 1, !dbg !15686
  %46 = load i8*, i8** %desc, align 8, !dbg !15687
  %arrayidx31 = getelementptr i8, i8* %46, i64 1, !dbg !15687
  store i8 12, i8* %arrayidx31, align 1, !dbg !15688
  %47 = load i8*, i8** %desc, align 8, !dbg !15689
  %arrayidx32 = getelementptr i8, i8* %47, i64 2, !dbg !15689
  store i8 0, i8* %arrayidx32, align 1, !dbg !15690
  %48 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15691
  %feature33 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %48, i32 0, i32 8, !dbg !15692
  %49 = load i8, i8* %feature33, align 1, !dbg !15692
  %50 = load i8*, i8** %desc, align 8, !dbg !15693
  %arrayidx34 = getelementptr i8, i8* %50, i64 3, !dbg !15693
  store i8 %49, i8* %arrayidx34, align 1, !dbg !15694
  %51 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15695
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %51, i32 0, i32 9, !dbg !15696
  %52 = load i8, i8* %nsect, align 8, !dbg !15696
  %53 = load i8*, i8** %desc, align 8, !dbg !15697
  %arrayidx35 = getelementptr i8, i8* %53, i64 5, !dbg !15697
  store i8 %52, i8* %arrayidx35, align 1, !dbg !15698
  %54 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15699
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %54, i32 0, i32 10, !dbg !15700
  %55 = load i8, i8* %lbal, align 1, !dbg !15700
  %56 = load i8*, i8** %desc, align 8, !dbg !15701
  %arrayidx36 = getelementptr i8, i8* %56, i64 7, !dbg !15701
  store i8 %55, i8* %arrayidx36, align 1, !dbg !15702
  %57 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15703
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %57, i32 0, i32 11, !dbg !15704
  %58 = load i8, i8* %lbam, align 2, !dbg !15704
  %59 = load i8*, i8** %desc, align 8, !dbg !15705
  %arrayidx37 = getelementptr i8, i8* %59, i64 9, !dbg !15705
  store i8 %58, i8* %arrayidx37, align 1, !dbg !15706
  %60 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15707
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %60, i32 0, i32 12, !dbg !15708
  %61 = load i8, i8* %lbah, align 1, !dbg !15708
  %62 = load i8*, i8** %desc, align 8, !dbg !15709
  %arrayidx38 = getelementptr i8, i8* %62, i64 11, !dbg !15709
  store i8 %61, i8* %arrayidx38, align 1, !dbg !15710
  %63 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15711
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %63, i32 0, i32 13, !dbg !15712
  %64 = load i8, i8* %device, align 4, !dbg !15712
  %65 = load i8*, i8** %desc, align 8, !dbg !15713
  %arrayidx39 = getelementptr i8, i8* %65, i64 12, !dbg !15713
  store i8 %64, i8* %arrayidx39, align 1, !dbg !15714
  %66 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15715
  %command40 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %66, i32 0, i32 14, !dbg !15716
  %67 = load i8, i8* %command40, align 1, !dbg !15716
  %68 = load i8*, i8** %desc, align 8, !dbg !15717
  %arrayidx41 = getelementptr i8, i8* %68, i64 13, !dbg !15717
  store i8 %67, i8* %arrayidx41, align 1, !dbg !15718
  %69 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15719
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %69, i32 0, i32 0, !dbg !15721
  %70 = load i64, i64* %flags, align 8, !dbg !15721
  %and42 = and i64 %70, 1, !dbg !15722
  %tobool43 = icmp ne i64 %and42, 0, !dbg !15722
  br i1 %tobool43, label %if.then44, label %if.end52, !dbg !15723

if.then44:                                        ; preds = %if.end29
  %71 = load i8*, i8** %desc, align 8, !dbg !15724
  %arrayidx45 = getelementptr i8, i8* %71, i64 2, !dbg !15724
  %72 = load i8, i8* %arrayidx45, align 1, !dbg !15726
  %conv46 = zext i8 %72 to i32, !dbg !15726
  %or = or i32 %conv46, 1, !dbg !15726
  %conv47 = trunc i32 %or to i8, !dbg !15726
  store i8 %conv47, i8* %arrayidx45, align 1, !dbg !15726
  %73 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15727
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %73, i32 0, i32 4, !dbg !15728
  %74 = load i8, i8* %hob_nsect, align 1, !dbg !15728
  %75 = load i8*, i8** %desc, align 8, !dbg !15729
  %arrayidx48 = getelementptr i8, i8* %75, i64 4, !dbg !15729
  store i8 %74, i8* %arrayidx48, align 1, !dbg !15730
  %76 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15731
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %76, i32 0, i32 5, !dbg !15732
  %77 = load i8, i8* %hob_lbal, align 4, !dbg !15732
  %78 = load i8*, i8** %desc, align 8, !dbg !15733
  %arrayidx49 = getelementptr i8, i8* %78, i64 6, !dbg !15733
  store i8 %77, i8* %arrayidx49, align 1, !dbg !15734
  %79 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15735
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %79, i32 0, i32 6, !dbg !15736
  %80 = load i8, i8* %hob_lbam, align 1, !dbg !15736
  %81 = load i8*, i8** %desc, align 8, !dbg !15737
  %arrayidx50 = getelementptr i8, i8* %81, i64 8, !dbg !15737
  store i8 %80, i8* %arrayidx50, align 1, !dbg !15738
  %82 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15739
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %82, i32 0, i32 7, !dbg !15740
  %83 = load i8, i8* %hob_lbah, align 2, !dbg !15740
  %84 = load i8*, i8** %desc, align 8, !dbg !15741
  %arrayidx51 = getelementptr i8, i8* %84, i64 10, !dbg !15741
  store i8 %83, i8* %arrayidx51, align 1, !dbg !15742
  br label %if.end52, !dbg !15743

if.end52:                                         ; preds = %if.then44, %if.end29
  br label %if.end103, !dbg !15744

if.else53:                                        ; preds = %if.end
  %85 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15745
  %feature54 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %85, i32 0, i32 8, !dbg !15747
  %86 = load i8, i8* %feature54, align 1, !dbg !15747
  %87 = load i8*, i8** %desc, align 8, !dbg !15748
  %arrayidx55 = getelementptr i8, i8* %87, i64 0, !dbg !15748
  store i8 %86, i8* %arrayidx55, align 1, !dbg !15749
  %88 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15750
  %command56 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %88, i32 0, i32 14, !dbg !15751
  %89 = load i8, i8* %command56, align 1, !dbg !15751
  %90 = load i8*, i8** %desc, align 8, !dbg !15752
  %arrayidx57 = getelementptr i8, i8* %90, i64 1, !dbg !15752
  store i8 %89, i8* %arrayidx57, align 1, !dbg !15753
  %91 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15754
  %device58 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %91, i32 0, i32 13, !dbg !15755
  %92 = load i8, i8* %device58, align 4, !dbg !15755
  %93 = load i8*, i8** %desc, align 8, !dbg !15756
  %arrayidx59 = getelementptr i8, i8* %93, i64 2, !dbg !15756
  store i8 %92, i8* %arrayidx59, align 1, !dbg !15757
  %94 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15758
  %nsect60 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %94, i32 0, i32 9, !dbg !15759
  %95 = load i8, i8* %nsect60, align 8, !dbg !15759
  %96 = load i8*, i8** %desc, align 8, !dbg !15760
  %arrayidx61 = getelementptr i8, i8* %96, i64 3, !dbg !15760
  store i8 %95, i8* %arrayidx61, align 1, !dbg !15761
  %97 = load i8*, i8** %desc, align 8, !dbg !15762
  %arrayidx62 = getelementptr i8, i8* %97, i64 7, !dbg !15762
  store i8 0, i8* %arrayidx62, align 1, !dbg !15763
  %98 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15764
  %flags63 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %98, i32 0, i32 0, !dbg !15766
  %99 = load i64, i64* %flags63, align 8, !dbg !15766
  %and64 = and i64 %99, 1, !dbg !15767
  %tobool65 = icmp ne i64 %and64, 0, !dbg !15767
  br i1 %tobool65, label %if.then66, label %if.end96, !dbg !15768

if.then66:                                        ; preds = %if.else53
  %100 = load i8*, i8** %desc, align 8, !dbg !15769
  %arrayidx67 = getelementptr i8, i8* %100, i64 8, !dbg !15769
  %101 = load i8, i8* %arrayidx67, align 1, !dbg !15771
  %conv68 = zext i8 %101 to i32, !dbg !15771
  %or69 = or i32 %conv68, 128, !dbg !15771
  %conv70 = trunc i32 %or69 to i8, !dbg !15771
  store i8 %conv70, i8* %arrayidx67, align 1, !dbg !15771
  %102 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15772
  %hob_nsect71 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %102, i32 0, i32 4, !dbg !15774
  %103 = load i8, i8* %hob_nsect71, align 1, !dbg !15774
  %tobool72 = icmp ne i8 %103, 0, !dbg !15772
  br i1 %tobool72, label %if.then73, label %if.end78, !dbg !15775

if.then73:                                        ; preds = %if.then66
  %104 = load i8*, i8** %desc, align 8, !dbg !15776
  %arrayidx74 = getelementptr i8, i8* %104, i64 8, !dbg !15776
  %105 = load i8, i8* %arrayidx74, align 1, !dbg !15777
  %conv75 = zext i8 %105 to i32, !dbg !15777
  %or76 = or i32 %conv75, 64, !dbg !15777
  %conv77 = trunc i32 %or76 to i8, !dbg !15777
  store i8 %conv77, i8* %arrayidx74, align 1, !dbg !15777
  br label %if.end78, !dbg !15776

if.end78:                                         ; preds = %if.then73, %if.then66
  %106 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15778
  %hob_lbal79 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %106, i32 0, i32 5, !dbg !15780
  %107 = load i8, i8* %hob_lbal79, align 4, !dbg !15780
  %conv80 = zext i8 %107 to i32, !dbg !15778
  %tobool81 = icmp ne i32 %conv80, 0, !dbg !15778
  br i1 %tobool81, label %if.then90, label %lor.lhs.false82, !dbg !15781

lor.lhs.false82:                                  ; preds = %if.end78
  %108 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15782
  %hob_lbam83 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %108, i32 0, i32 6, !dbg !15783
  %109 = load i8, i8* %hob_lbam83, align 1, !dbg !15783
  %conv84 = zext i8 %109 to i32, !dbg !15782
  %tobool85 = icmp ne i32 %conv84, 0, !dbg !15782
  br i1 %tobool85, label %if.then90, label %lor.lhs.false86, !dbg !15784

lor.lhs.false86:                                  ; preds = %lor.lhs.false82
  %110 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15785
  %hob_lbah87 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %110, i32 0, i32 7, !dbg !15786
  %111 = load i8, i8* %hob_lbah87, align 2, !dbg !15786
  %conv88 = zext i8 %111 to i32, !dbg !15785
  %tobool89 = icmp ne i32 %conv88, 0, !dbg !15785
  br i1 %tobool89, label %if.then90, label %if.end95, !dbg !15787

if.then90:                                        ; preds = %lor.lhs.false86, %lor.lhs.false82, %if.end78
  %112 = load i8*, i8** %desc, align 8, !dbg !15788
  %arrayidx91 = getelementptr i8, i8* %112, i64 8, !dbg !15788
  %113 = load i8, i8* %arrayidx91, align 1, !dbg !15789
  %conv92 = zext i8 %113 to i32, !dbg !15789
  %or93 = or i32 %conv92, 32, !dbg !15789
  %conv94 = trunc i32 %or93 to i8, !dbg !15789
  store i8 %conv94, i8* %arrayidx91, align 1, !dbg !15789
  br label %if.end95, !dbg !15788

if.end95:                                         ; preds = %if.then90, %lor.lhs.false86
  br label %if.end96, !dbg !15790

if.end96:                                         ; preds = %if.end95, %if.else53
  %114 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15791
  %lbal97 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %114, i32 0, i32 10, !dbg !15792
  %115 = load i8, i8* %lbal97, align 1, !dbg !15792
  %116 = load i8*, i8** %desc, align 8, !dbg !15793
  %arrayidx98 = getelementptr i8, i8* %116, i64 9, !dbg !15793
  store i8 %115, i8* %arrayidx98, align 1, !dbg !15794
  %117 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15795
  %lbam99 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %117, i32 0, i32 11, !dbg !15796
  %118 = load i8, i8* %lbam99, align 2, !dbg !15796
  %119 = load i8*, i8** %desc, align 8, !dbg !15797
  %arrayidx100 = getelementptr i8, i8* %119, i64 10, !dbg !15797
  store i8 %118, i8* %arrayidx100, align 1, !dbg !15798
  %120 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15799
  %lbah101 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %120, i32 0, i32 12, !dbg !15800
  %121 = load i8, i8* %lbah101, align 1, !dbg !15800
  %122 = load i8*, i8** %desc, align 8, !dbg !15801
  %arrayidx102 = getelementptr i8, i8* %122, i64 11, !dbg !15801
  store i8 %121, i8* %arrayidx102, align 1, !dbg !15802
  br label %if.end103

if.end103:                                        ; preds = %if.then20, %if.end96, %if.end52
  ret void, !dbg !15803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_gen_ata_sense(%struct.ata_queued_cmd* %qc) #0 !dbg !15804 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %sb = alloca i8*, align 8
  %verbose = alloca i32, align 4
  %block = alloca i64, align 8
  %sense_key = alloca i8, align 1
  %asc = alloca i8, align 1
  %ascq = alloca i8, align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !15805, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !15807, metadata !DIExpression()), !dbg !15808
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15809
  %dev1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !15810
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !15810
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !15808
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !15811, metadata !DIExpression()), !dbg !15812
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15813
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 2, !dbg !15814
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !15814
  store %struct.scsi_cmnd* %3, %struct.scsi_cmnd** %cmd, align 8, !dbg !15812
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !15815, metadata !DIExpression()), !dbg !15816
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15817
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 21, !dbg !15818
  store %struct.ata_taskfile* %result_tf, %struct.ata_taskfile** %tf, align 8, !dbg !15816
  call void @llvm.dbg.declare(metadata i8** %sb, metadata !15819, metadata !DIExpression()), !dbg !15820
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15821
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 20, !dbg !15822
  %6 = load i8*, i8** %sense_buffer, align 8, !dbg !15822
  store i8* %6, i8** %sb, align 8, !dbg !15820
  call void @llvm.dbg.declare(metadata i32* %verbose, metadata !15823, metadata !DIExpression()), !dbg !15824
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15825
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 0, !dbg !15826
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !15826
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 1, !dbg !15827
  %9 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !15827
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %9, i32 0, i32 22, !dbg !15828
  %10 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !15828
  %cmp = icmp eq void (%struct.ata_port*)* %10, null, !dbg !15829
  %conv = zext i1 %cmp to i32, !dbg !15829
  store i32 %conv, i32* %verbose, align 4, !dbg !15824
  call void @llvm.dbg.declare(metadata i64* %block, metadata !15830, metadata !DIExpression()), !dbg !15831
  call void @llvm.dbg.declare(metadata i8* %sense_key, metadata !15832, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.declare(metadata i8* %asc, metadata !15834, metadata !DIExpression()), !dbg !15835
  call void @llvm.dbg.declare(metadata i8* %ascq, metadata !15836, metadata !DIExpression()), !dbg !15837
  %11 = load i8*, i8** %sb, align 8, !dbg !15838
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 96, i1 false), !dbg !15839
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15840
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %12, i32 0, i32 24, !dbg !15841
  store i32 134217730, i32* %result, align 8, !dbg !15842
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15843
  %call = call i32 @ata_dev_disabled(%struct.ata_device* %13) #10, !dbg !15845
  %tobool = icmp ne i32 %call, 0, !dbg !15845
  br i1 %tobool, label %if.then, label %if.end, !dbg !15846

if.then:                                          ; preds = %entry
  %14 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15847
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15849
  call void @ata_scsi_set_sense(%struct.ata_device* %14, %struct.scsi_cmnd* %15, i8 zeroext 2, i8 zeroext 4, i8 zeroext 33) #10, !dbg !15850
  br label %return, !dbg !15851

if.end:                                           ; preds = %entry
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15852
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 20, !dbg !15854
  %17 = load i32, i32* %err_mask, align 4, !dbg !15854
  %tobool2 = icmp ne i32 %17, 0, !dbg !15852
  br i1 %tobool2, label %if.then5, label %lor.lhs.false, !dbg !15855

lor.lhs.false:                                    ; preds = %if.end
  %18 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15856
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %18, i32 0, i32 14, !dbg !15857
  %19 = load i8, i8* %command, align 1, !dbg !15857
  %conv3 = zext i8 %19 to i32, !dbg !15856
  %and = and i32 %conv3, 169, !dbg !15858
  %tobool4 = icmp ne i32 %and, 0, !dbg !15858
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !15859

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15860
  %ap6 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %20, i32 0, i32 0, !dbg !15862
  %21 = load %struct.ata_port*, %struct.ata_port** %ap6, align 8, !dbg !15862
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 5, !dbg !15863
  %22 = load i32, i32* %print_id, align 4, !dbg !15863
  %23 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15864
  %command7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %23, i32 0, i32 14, !dbg !15865
  %24 = load i8, i8* %command7, align 1, !dbg !15865
  %25 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15866
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %25, i32 0, i32 8, !dbg !15867
  %26 = load i8, i8* %feature, align 1, !dbg !15867
  %27 = load i32, i32* %verbose, align 4, !dbg !15868
  call void @ata_to_sense_error(i32 %22, i8 zeroext %24, i8 zeroext %26, i8* %sense_key, i8* %asc, i8* %ascq, i32 %27) #10, !dbg !15869
  %28 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15870
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15871
  %30 = load i8, i8* %sense_key, align 1, !dbg !15872
  %31 = load i8, i8* %asc, align 1, !dbg !15873
  %32 = load i8, i8* %ascq, align 1, !dbg !15874
  call void @ata_scsi_set_sense(%struct.ata_device* %28, %struct.scsi_cmnd* %29, i8 zeroext %30, i8 zeroext %31, i8 zeroext %32) #10, !dbg !15875
  br label %if.end11, !dbg !15876

if.else:                                          ; preds = %lor.lhs.false
  %33 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15877
  %34 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !15877
  %command8 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %34, i32 0, i32 14, !dbg !15877
  %35 = load i8, i8* %command8, align 1, !dbg !15877
  %conv9 = zext i8 %35 to i32, !dbg !15877
  %36 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15877
  %err_mask10 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %36, i32 0, i32 20, !dbg !15877
  %37 = load i32, i32* %err_mask10, align 4, !dbg !15877
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18, i64 0, i64 0), i32 %conv9, i32 %37) #10, !dbg !15877
  %38 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15879
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !15880
  call void @ata_scsi_set_sense(%struct.ata_device* %38, %struct.scsi_cmnd* %39, i8 zeroext 11, i8 zeroext 0, i8 zeroext 0) #10, !dbg !15881
  br label %return, !dbg !15882

if.end11:                                         ; preds = %if.then5
  %40 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !15883
  %result_tf12 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %40, i32 0, i32 21, !dbg !15884
  %41 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !15885
  %call13 = call i64 @ata_tf_read_block(%struct.ata_taskfile* %result_tf12, %struct.ata_device* %41) #10, !dbg !15886
  store i64 %call13, i64* %block, align 8, !dbg !15887
  %42 = load i64, i64* %block, align 8, !dbg !15888
  %cmp14 = icmp eq i64 %42, -1, !dbg !15890
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !15891

if.then16:                                        ; preds = %if.end11
  br label %return, !dbg !15892

if.end17:                                         ; preds = %if.end11
  %43 = load i8*, i8** %sb, align 8, !dbg !15893
  %44 = load i64, i64* %block, align 8, !dbg !15894
  %call18 = call i32 @scsi_set_sense_information(i8* %43, i32 96, i64 %44) #10, !dbg !15895
  br label %return, !dbg !15896

return:                                           ; preds = %if.end17, %if.then16, %if.else, %if.then
  ret void, !dbg !15896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dump_status(i32 %id, %struct.ata_taskfile* %tf) #0 !dbg !15897 {
entry:
  %id.addr = alloca i32, align 4
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %stat = alloca i8, align 1
  %err = alloca i8, align 1
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !15900, metadata !DIExpression()), !dbg !15901
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !15902, metadata !DIExpression()), !dbg !15903
  call void @llvm.dbg.declare(metadata i8* %stat, metadata !15904, metadata !DIExpression()), !dbg !15905
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !15906
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 14, !dbg !15907
  %1 = load i8, i8* %command, align 1, !dbg !15907
  store i8 %1, i8* %stat, align 1, !dbg !15905
  call void @llvm.dbg.declare(metadata i8* %err, metadata !15908, metadata !DIExpression()), !dbg !15909
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !15910
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 8, !dbg !15911
  %3 = load i8, i8* %feature, align 1, !dbg !15911
  store i8 %3, i8* %err, align 1, !dbg !15909
  %4 = load i32, i32* %id.addr, align 4, !dbg !15912
  %5 = load i8, i8* %stat, align 1, !dbg !15912
  %conv = zext i8 %5 to i32, !dbg !15912
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i32 %4, i32 %conv) #14, !dbg !15912
  %6 = load i8, i8* %stat, align 1, !dbg !15913
  %conv1 = zext i8 %6 to i32, !dbg !15913
  %and = and i32 %conv1, 128, !dbg !15915
  %tobool = icmp ne i32 %and, 0, !dbg !15915
  br i1 %tobool, label %if.then, label %if.else, !dbg !15916

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0)) #14, !dbg !15917
  br label %if.end94, !dbg !15919

if.else:                                          ; preds = %entry
  %7 = load i8, i8* %stat, align 1, !dbg !15920
  %conv3 = zext i8 %7 to i32, !dbg !15920
  %and4 = and i32 %conv3, 64, !dbg !15923
  %tobool5 = icmp ne i32 %and4, 0, !dbg !15923
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !15924

if.then6:                                         ; preds = %if.else
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0)) #14, !dbg !15925
  br label %if.end, !dbg !15925

if.end:                                           ; preds = %if.then6, %if.else
  %8 = load i8, i8* %stat, align 1, !dbg !15926
  %conv8 = zext i8 %8 to i32, !dbg !15926
  %and9 = and i32 %conv8, 32, !dbg !15928
  %tobool10 = icmp ne i32 %and9, 0, !dbg !15928
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !15929

if.then11:                                        ; preds = %if.end
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #14, !dbg !15930
  br label %if.end13, !dbg !15930

if.end13:                                         ; preds = %if.then11, %if.end
  %9 = load i8, i8* %stat, align 1, !dbg !15931
  %conv14 = zext i8 %9 to i32, !dbg !15931
  %and15 = and i32 %conv14, 16, !dbg !15933
  %tobool16 = icmp ne i32 %and15, 0, !dbg !15933
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !15934

if.then17:                                        ; preds = %if.end13
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0)) #14, !dbg !15935
  br label %if.end19, !dbg !15935

if.end19:                                         ; preds = %if.then17, %if.end13
  %10 = load i8, i8* %stat, align 1, !dbg !15936
  %conv20 = zext i8 %10 to i32, !dbg !15936
  %and21 = and i32 %conv20, 8, !dbg !15938
  %tobool22 = icmp ne i32 %and21, 0, !dbg !15938
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !15939

if.then23:                                        ; preds = %if.end19
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0)) #14, !dbg !15940
  br label %if.end25, !dbg !15940

if.end25:                                         ; preds = %if.then23, %if.end19
  %11 = load i8, i8* %stat, align 1, !dbg !15941
  %conv26 = zext i8 %11 to i32, !dbg !15941
  %and27 = and i32 %conv26, 4, !dbg !15943
  %tobool28 = icmp ne i32 %and27, 0, !dbg !15943
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !15944

if.then29:                                        ; preds = %if.end25
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)) #14, !dbg !15945
  br label %if.end31, !dbg !15945

if.end31:                                         ; preds = %if.then29, %if.end25
  %12 = load i8, i8* %stat, align 1, !dbg !15946
  %conv32 = zext i8 %12 to i32, !dbg !15946
  %and33 = and i32 %conv32, 2, !dbg !15948
  %tobool34 = icmp ne i32 %and33, 0, !dbg !15948
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !15949

if.then35:                                        ; preds = %if.end31
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)) #14, !dbg !15950
  br label %if.end37, !dbg !15950

if.end37:                                         ; preds = %if.then35, %if.end31
  %13 = load i8, i8* %stat, align 1, !dbg !15951
  %conv38 = zext i8 %13 to i32, !dbg !15951
  %and39 = and i32 %conv38, 1, !dbg !15953
  %tobool40 = icmp ne i32 %and39, 0, !dbg !15953
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !15954

if.then41:                                        ; preds = %if.end37
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)) #14, !dbg !15955
  br label %if.end43, !dbg !15955

if.end43:                                         ; preds = %if.then41, %if.end37
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #14, !dbg !15956
  %14 = load i8, i8* %err, align 1, !dbg !15957
  %tobool45 = icmp ne i8 %14, 0, !dbg !15957
  br i1 %tobool45, label %if.then46, label %if.end93, !dbg !15959

if.then46:                                        ; preds = %if.end43
  %15 = load i32, i32* %id.addr, align 4, !dbg !15960
  %16 = load i8, i8* %err, align 1, !dbg !15960
  %conv47 = zext i8 %16 to i32, !dbg !15960
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0), i32 %15, i32 %conv47) #14, !dbg !15960
  %17 = load i8, i8* %err, align 1, !dbg !15962
  %conv49 = zext i8 %17 to i32, !dbg !15962
  %and50 = and i32 %conv49, 4, !dbg !15964
  %tobool51 = icmp ne i32 %and50, 0, !dbg !15964
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !15965

if.then52:                                        ; preds = %if.then46
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0)) #14, !dbg !15966
  br label %if.end54, !dbg !15966

if.end54:                                         ; preds = %if.then52, %if.then46
  %18 = load i8, i8* %err, align 1, !dbg !15967
  %conv55 = zext i8 %18 to i32, !dbg !15967
  %and56 = and i32 %conv55, 128, !dbg !15969
  %tobool57 = icmp ne i32 %and56, 0, !dbg !15969
  br i1 %tobool57, label %if.then58, label %if.end67, !dbg !15970

if.then58:                                        ; preds = %if.end54
  %19 = load i8, i8* %err, align 1, !dbg !15971
  %conv59 = zext i8 %19 to i32, !dbg !15971
  %and60 = and i32 %conv59, 4, !dbg !15974
  %tobool61 = icmp ne i32 %and60, 0, !dbg !15974
  br i1 %tobool61, label %if.then62, label %if.else64, !dbg !15975

if.then62:                                        ; preds = %if.then58
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0)) #14, !dbg !15976
  br label %if.end66, !dbg !15976

if.else64:                                        ; preds = %if.then58
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #14, !dbg !15977
  br label %if.end66

if.end66:                                         ; preds = %if.else64, %if.then62
  br label %if.end67, !dbg !15978

if.end67:                                         ; preds = %if.end66, %if.end54
  %20 = load i8, i8* %err, align 1, !dbg !15979
  %conv68 = zext i8 %20 to i32, !dbg !15979
  %and69 = and i32 %conv68, 64, !dbg !15981
  %tobool70 = icmp ne i32 %and69, 0, !dbg !15981
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !15982

if.then71:                                        ; preds = %if.end67
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i64 0, i64 0)) #14, !dbg !15983
  br label %if.end73, !dbg !15983

if.end73:                                         ; preds = %if.then71, %if.end67
  %21 = load i8, i8* %err, align 1, !dbg !15984
  %conv74 = zext i8 %21 to i32, !dbg !15984
  %and75 = and i32 %conv74, 16, !dbg !15986
  %tobool76 = icmp ne i32 %and75, 0, !dbg !15986
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !15987

if.then77:                                        ; preds = %if.end73
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0)) #14, !dbg !15988
  br label %if.end79, !dbg !15988

if.end79:                                         ; preds = %if.then77, %if.end73
  %22 = load i8, i8* %err, align 1, !dbg !15989
  %conv80 = zext i8 %22 to i32, !dbg !15989
  %and81 = and i32 %conv80, 2, !dbg !15991
  %tobool82 = icmp ne i32 %and81, 0, !dbg !15991
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !15992

if.then83:                                        ; preds = %if.end79
  %call84 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0)) #14, !dbg !15993
  br label %if.end85, !dbg !15993

if.end85:                                         ; preds = %if.then83, %if.end79
  %23 = load i8, i8* %err, align 1, !dbg !15994
  %conv86 = zext i8 %23 to i32, !dbg !15994
  %and87 = and i32 %conv86, 1, !dbg !15996
  %tobool88 = icmp ne i32 %and87, 0, !dbg !15996
  br i1 %tobool88, label %if.then89, label %if.end91, !dbg !15997

if.then89:                                        ; preds = %if.end85
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0)) #14, !dbg !15998
  br label %if.end91, !dbg !15998

if.end91:                                         ; preds = %if.then89, %if.end85
  %call92 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #14, !dbg !15999
  br label %if.end93, !dbg !16000

if.end93:                                         ; preds = %if.end91, %if.end43
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then
  ret void, !dbg !16001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_qc_done(%struct.ata_queued_cmd* %qc) #0 !dbg !16002 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %done = alloca void (%struct.scsi_cmnd*)*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !16003, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !16005, metadata !DIExpression()), !dbg !16006
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16007
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !16008
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !16008
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !16006
  call void @llvm.dbg.declare(metadata void (%struct.scsi_cmnd*)** %done, metadata !16009, metadata !DIExpression()), !dbg !16010
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16011
  %scsidone = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 3, !dbg !16012
  %3 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsidone, align 8, !dbg !16012
  store void (%struct.scsi_cmnd*)* %3, void (%struct.scsi_cmnd*)** %done, align 8, !dbg !16010
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16013
  call void @ata_qc_free(%struct.ata_queued_cmd* %4) #10, !dbg !16014
  %5 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done, align 8, !dbg !16015
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16016
  call void %5(%struct.scsi_cmnd* %6) #10, !dbg !16015
  ret void, !dbg !16017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_to_sense_error(i32 %id, i8 zeroext %drv_stat, i8 zeroext %drv_err, i8* %sk, i8* %asc, i8* %ascq, i32 %verbose) #0 !dbg !6970 {
entry:
  %id.addr = alloca i32, align 4
  %drv_stat.addr = alloca i8, align 1
  %drv_err.addr = alloca i8, align 1
  %sk.addr = alloca i8*, align 8
  %asc.addr = alloca i8*, align 8
  %ascq.addr = alloca i8*, align 8
  %verbose.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !16018, metadata !DIExpression()), !dbg !16019
  store i8 %drv_stat, i8* %drv_stat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drv_stat.addr, metadata !16020, metadata !DIExpression()), !dbg !16021
  store i8 %drv_err, i8* %drv_err.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drv_err.addr, metadata !16022, metadata !DIExpression()), !dbg !16023
  store i8* %sk, i8** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sk.addr, metadata !16024, metadata !DIExpression()), !dbg !16025
  store i8* %asc, i8** %asc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %asc.addr, metadata !16026, metadata !DIExpression()), !dbg !16027
  store i8* %ascq, i8** %ascq.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ascq.addr, metadata !16028, metadata !DIExpression()), !dbg !16029
  store i32 %verbose, i32* %verbose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verbose.addr, metadata !16030, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16032, metadata !DIExpression()), !dbg !16033
  %0 = load i8, i8* %drv_stat.addr, align 1, !dbg !16034
  %conv = zext i8 %0 to i32, !dbg !16034
  %and = and i32 %conv, 128, !dbg !16036
  %tobool = icmp ne i32 %and, 0, !dbg !16036
  br i1 %tobool, label %if.then, label %if.end, !dbg !16037

if.then:                                          ; preds = %entry
  store i8 0, i8* %drv_err.addr, align 1, !dbg !16038
  br label %if.end, !dbg !16040

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8, i8* %drv_err.addr, align 1, !dbg !16041
  %tobool1 = icmp ne i8 %1, 0, !dbg !16041
  br i1 %tobool1, label %if.then2, label %if.end29, !dbg !16043

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !16044
  br label %for.cond, !dbg !16047

for.cond:                                         ; preds = %for.inc, %if.then2
  %2 = load i32, i32* %i, align 4, !dbg !16048
  %idxprom = sext i32 %2 to i64, !dbg !16050
  %arrayidx = getelementptr [14 x [4 x i8]], [14 x [4 x i8]]* @ata_to_sense_error.sense_table, i64 0, i64 %idxprom, !dbg !16050
  %arrayidx3 = getelementptr [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 0, !dbg !16050
  %3 = load i8, i8* %arrayidx3, align 4, !dbg !16050
  %conv4 = zext i8 %3 to i32, !dbg !16050
  %cmp = icmp ne i32 %conv4, 255, !dbg !16051
  br i1 %cmp, label %for.body, label %for.end, !dbg !16052

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !16053
  %idxprom6 = sext i32 %4 to i64, !dbg !16056
  %arrayidx7 = getelementptr [14 x [4 x i8]], [14 x [4 x i8]]* @ata_to_sense_error.sense_table, i64 0, i64 %idxprom6, !dbg !16056
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %arrayidx7, i64 0, i64 0, !dbg !16056
  %5 = load i8, i8* %arrayidx8, align 4, !dbg !16056
  %conv9 = zext i8 %5 to i32, !dbg !16056
  %6 = load i8, i8* %drv_err.addr, align 1, !dbg !16057
  %conv10 = zext i8 %6 to i32, !dbg !16057
  %and11 = and i32 %conv9, %conv10, !dbg !16058
  %7 = load i32, i32* %i, align 4, !dbg !16059
  %idxprom12 = sext i32 %7 to i64, !dbg !16060
  %arrayidx13 = getelementptr [14 x [4 x i8]], [14 x [4 x i8]]* @ata_to_sense_error.sense_table, i64 0, i64 %idxprom12, !dbg !16060
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %arrayidx13, i64 0, i64 0, !dbg !16060
  %8 = load i8, i8* %arrayidx14, align 4, !dbg !16060
  %conv15 = zext i8 %8 to i32, !dbg !16060
  %cmp16 = icmp eq i32 %and11, %conv15, !dbg !16061
  br i1 %cmp16, label %if.then18, label %if.end28, !dbg !16062

if.then18:                                        ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !16063
  %idxprom19 = sext i32 %9 to i64, !dbg !16065
  %arrayidx20 = getelementptr [14 x [4 x i8]], [14 x [4 x i8]]* @ata_to_sense_error.sense_table, i64 0, i64 %idxprom19, !dbg !16065
  %arrayidx21 = getelementptr [4 x i8], [4 x i8]* %arrayidx20, i64 0, i64 1, !dbg !16065
  %10 = load i8, i8* %arrayidx21, align 1, !dbg !16065
  %11 = load i8*, i8** %sk.addr, align 8, !dbg !16066
  store i8 %10, i8* %11, align 1, !dbg !16067
  %12 = load i32, i32* %i, align 4, !dbg !16068
  %idxprom22 = sext i32 %12 to i64, !dbg !16069
  %arrayidx23 = getelementptr [14 x [4 x i8]], [14 x [4 x i8]]* @ata_to_sense_error.sense_table, i64 0, i64 %idxprom22, !dbg !16069
  %arrayidx24 = getelementptr [4 x i8], [4 x i8]* %arrayidx23, i64 0, i64 2, !dbg !16069
  %13 = load i8, i8* %arrayidx24, align 2, !dbg !16069
  %14 = load i8*, i8** %asc.addr, align 8, !dbg !16070
  store i8 %13, i8* %14, align 1, !dbg !16071
  %15 = load i32, i32* %i, align 4, !dbg !16072
  %idxprom25 = sext i32 %15 to i64, !dbg !16073
  %arrayidx26 = getelementptr [14 x [4 x i8]], [14 x [4 x i8]]* @ata_to_sense_error.sense_table, i64 0, i64 %idxprom25, !dbg !16073
  %arrayidx27 = getelementptr [4 x i8], [4 x i8]* %arrayidx26, i64 0, i64 3, !dbg !16073
  %16 = load i8, i8* %arrayidx27, align 1, !dbg !16073
  %17 = load i8*, i8** %ascq.addr, align 8, !dbg !16074
  store i8 %16, i8* %17, align 1, !dbg !16075
  br label %translate_done, !dbg !16076

if.end28:                                         ; preds = %for.body
  br label %for.inc, !dbg !16077

for.inc:                                          ; preds = %if.end28
  %18 = load i32, i32* %i, align 4, !dbg !16078
  %inc = add i32 %18, 1, !dbg !16078
  store i32 %inc, i32* %i, align 4, !dbg !16078
  br label %for.cond, !dbg !16079, !llvm.loop !16080

for.end:                                          ; preds = %for.cond
  br label %if.end29, !dbg !16082

if.end29:                                         ; preds = %for.end, %if.end
  store i32 0, i32* %i, align 4, !dbg !16083
  br label %for.cond30, !dbg !16085

for.cond30:                                       ; preds = %for.inc56, %if.end29
  %19 = load i32, i32* %i, align 4, !dbg !16086
  %idxprom31 = sext i32 %19 to i64, !dbg !16088
  %arrayidx32 = getelementptr [6 x [4 x i8]], [6 x [4 x i8]]* @ata_to_sense_error.stat_table, i64 0, i64 %idxprom31, !dbg !16088
  %arrayidx33 = getelementptr [4 x i8], [4 x i8]* %arrayidx32, i64 0, i64 0, !dbg !16088
  %20 = load i8, i8* %arrayidx33, align 4, !dbg !16088
  %conv34 = zext i8 %20 to i32, !dbg !16088
  %cmp35 = icmp ne i32 %conv34, 255, !dbg !16089
  br i1 %cmp35, label %for.body37, label %for.end58, !dbg !16090

for.body37:                                       ; preds = %for.cond30
  %21 = load i32, i32* %i, align 4, !dbg !16091
  %idxprom38 = sext i32 %21 to i64, !dbg !16094
  %arrayidx39 = getelementptr [6 x [4 x i8]], [6 x [4 x i8]]* @ata_to_sense_error.stat_table, i64 0, i64 %idxprom38, !dbg !16094
  %arrayidx40 = getelementptr [4 x i8], [4 x i8]* %arrayidx39, i64 0, i64 0, !dbg !16094
  %22 = load i8, i8* %arrayidx40, align 4, !dbg !16094
  %conv41 = zext i8 %22 to i32, !dbg !16094
  %23 = load i8, i8* %drv_stat.addr, align 1, !dbg !16095
  %conv42 = zext i8 %23 to i32, !dbg !16095
  %and43 = and i32 %conv41, %conv42, !dbg !16096
  %tobool44 = icmp ne i32 %and43, 0, !dbg !16096
  br i1 %tobool44, label %if.then45, label %if.end55, !dbg !16097

if.then45:                                        ; preds = %for.body37
  %24 = load i32, i32* %i, align 4, !dbg !16098
  %idxprom46 = sext i32 %24 to i64, !dbg !16100
  %arrayidx47 = getelementptr [6 x [4 x i8]], [6 x [4 x i8]]* @ata_to_sense_error.stat_table, i64 0, i64 %idxprom46, !dbg !16100
  %arrayidx48 = getelementptr [4 x i8], [4 x i8]* %arrayidx47, i64 0, i64 1, !dbg !16100
  %25 = load i8, i8* %arrayidx48, align 1, !dbg !16100
  %26 = load i8*, i8** %sk.addr, align 8, !dbg !16101
  store i8 %25, i8* %26, align 1, !dbg !16102
  %27 = load i32, i32* %i, align 4, !dbg !16103
  %idxprom49 = sext i32 %27 to i64, !dbg !16104
  %arrayidx50 = getelementptr [6 x [4 x i8]], [6 x [4 x i8]]* @ata_to_sense_error.stat_table, i64 0, i64 %idxprom49, !dbg !16104
  %arrayidx51 = getelementptr [4 x i8], [4 x i8]* %arrayidx50, i64 0, i64 2, !dbg !16104
  %28 = load i8, i8* %arrayidx51, align 2, !dbg !16104
  %29 = load i8*, i8** %asc.addr, align 8, !dbg !16105
  store i8 %28, i8* %29, align 1, !dbg !16106
  %30 = load i32, i32* %i, align 4, !dbg !16107
  %idxprom52 = sext i32 %30 to i64, !dbg !16108
  %arrayidx53 = getelementptr [6 x [4 x i8]], [6 x [4 x i8]]* @ata_to_sense_error.stat_table, i64 0, i64 %idxprom52, !dbg !16108
  %arrayidx54 = getelementptr [4 x i8], [4 x i8]* %arrayidx53, i64 0, i64 3, !dbg !16108
  %31 = load i8, i8* %arrayidx54, align 1, !dbg !16108
  %32 = load i8*, i8** %ascq.addr, align 8, !dbg !16109
  store i8 %31, i8* %32, align 1, !dbg !16110
  br label %translate_done, !dbg !16111

if.end55:                                         ; preds = %for.body37
  br label %for.inc56, !dbg !16112

for.inc56:                                        ; preds = %if.end55
  %33 = load i32, i32* %i, align 4, !dbg !16113
  %inc57 = add i32 %33, 1, !dbg !16113
  store i32 %inc57, i32* %i, align 4, !dbg !16113
  br label %for.cond30, !dbg !16114, !llvm.loop !16115

for.end58:                                        ; preds = %for.cond30
  %34 = load i8*, i8** %sk.addr, align 8, !dbg !16117
  store i8 11, i8* %34, align 1, !dbg !16118
  %35 = load i8*, i8** %asc.addr, align 8, !dbg !16119
  store i8 0, i8* %35, align 1, !dbg !16120
  %36 = load i8*, i8** %ascq.addr, align 8, !dbg !16121
  store i8 0, i8* %36, align 1, !dbg !16122
  br label %translate_done, !dbg !16123

translate_done:                                   ; preds = %for.end58, %if.then45, %if.then18
  call void @llvm.dbg.label(metadata !16124), !dbg !16125
  %37 = load i32, i32* %verbose.addr, align 4, !dbg !16126
  %tobool59 = icmp ne i32 %37, 0, !dbg !16126
  br i1 %tobool59, label %if.then60, label %if.end66, !dbg !16128

if.then60:                                        ; preds = %translate_done
  %38 = load i32, i32* %id.addr, align 4, !dbg !16129
  %39 = load i8, i8* %drv_stat.addr, align 1, !dbg !16129
  %conv61 = zext i8 %39 to i32, !dbg !16129
  %40 = load i8, i8* %drv_err.addr, align 1, !dbg !16129
  %conv62 = zext i8 %40 to i32, !dbg !16129
  %41 = load i8*, i8** %sk.addr, align 8, !dbg !16129
  %42 = load i8, i8* %41, align 1, !dbg !16129
  %conv63 = zext i8 %42 to i32, !dbg !16129
  %43 = load i8*, i8** %asc.addr, align 8, !dbg !16129
  %44 = load i8, i8* %43, align 1, !dbg !16129
  %conv64 = zext i8 %44 to i32, !dbg !16129
  %45 = load i8*, i8** %ascq.addr, align 8, !dbg !16129
  %46 = load i8, i8* %45, align 1, !dbg !16129
  %conv65 = zext i8 %46 to i32, !dbg !16129
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.17, i64 0, i64 0), i32 %38, i32 %conv61, i32 %conv62, i32 %conv63, i32 %conv64, i32 %conv65) #14, !dbg !16129
  br label %if.end66, !dbg !16129

if.end66:                                         ; preds = %if.then60, %translate_done
  ret void, !dbg !16130
}

; Function Attrs: noredzone
declare dso_local i8* @scsi_sense_desc_find(i8*, i32, i32) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_disabled(%struct.ata_device* %dev) #0 !dbg !16131 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !16132, metadata !DIExpression()), !dbg !16133
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16134
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 11, !dbg !16135
  %1 = load i32, i32* %class, align 64, !dbg !16135
  %call = call i32 @ata_class_disabled(i32 %1) #10, !dbg !16136
  ret i32 %call, !dbg !16137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_class_disabled(i32 %class) #0 !dbg !16138 {
entry:
  %class.addr = alloca i32, align 4
  store i32 %class, i32* %class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %class.addr, metadata !16139, metadata !DIExpression()), !dbg !16140
  %0 = load i32, i32* %class.addr, align 4, !dbg !16141
  %cmp = icmp eq i32 %0, 2, !dbg !16142
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !16143

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %class.addr, align 4, !dbg !16144
  %cmp1 = icmp eq i32 %1, 4, !dbg !16145
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !16146

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %class.addr, align 4, !dbg !16147
  %cmp3 = icmp eq i32 %2, 6, !dbg !16148
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !16149

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %class.addr, align 4, !dbg !16150
  %cmp5 = icmp eq i32 %3, 8, !dbg !16151
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !16152

lor.rhs:                                          ; preds = %lor.lhs.false4
  %4 = load i32, i32* %class.addr, align 4, !dbg !16153
  %cmp6 = icmp eq i32 %4, 10, !dbg !16154
  br label %lor.end, !dbg !16152

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %5 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32, !dbg !16152
  ret i32 %lor.ext, !dbg !16155
}

; Function Attrs: noredzone
declare dso_local void @ata_qc_free(%struct.ata_queued_cmd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_fpdma_zac_mgmt_out_supported(%struct.ata_device* %dev) #0 !dbg !16156 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !16157, metadata !DIExpression()), !dbg !16158
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16159
  %ncq_non_data_cmds = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 30, !dbg !16160
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %ncq_non_data_cmds, i64 0, i64 28, !dbg !16159
  %1 = load i8, i8* %arrayidx, align 4, !dbg !16159
  %conv = zext i8 %1 to i32, !dbg !16159
  %and = and i32 %conv, 1, !dbg !16161
  %tobool = icmp ne i32 %and, 0, !dbg !16162
  ret i1 %tobool, !dbg !16163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_scsi_trusted_op(i32 %len, i1 zeroext %send, i1 zeroext %dma) #0 !dbg !16164 {
entry:
  %retval = alloca i8, align 1
  %len.addr = alloca i32, align 4
  %send.addr = alloca i8, align 1
  %dma.addr = alloca i8, align 1
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16167, metadata !DIExpression()), !dbg !16168
  %frombool = zext i1 %send to i8
  store i8 %frombool, i8* %send.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %send.addr, metadata !16169, metadata !DIExpression()), !dbg !16170
  %frombool1 = zext i1 %dma to i8
  store i8 %frombool1, i8* %dma.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dma.addr, metadata !16171, metadata !DIExpression()), !dbg !16172
  %0 = load i32, i32* %len.addr, align 4, !dbg !16173
  %cmp = icmp eq i32 %0, 0, !dbg !16175
  br i1 %cmp, label %if.then, label %if.else, !dbg !16176

if.then:                                          ; preds = %entry
  store i8 91, i8* %retval, align 1, !dbg !16177
  br label %return, !dbg !16177

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %send.addr, align 1, !dbg !16178
  %tobool = trunc i8 %1 to i1, !dbg !16178
  br i1 %tobool, label %if.then2, label %if.else4, !dbg !16180

if.then2:                                         ; preds = %if.else
  %2 = load i8, i8* %dma.addr, align 1, !dbg !16181
  %tobool3 = trunc i8 %2 to i1, !dbg !16181
  %3 = zext i1 %tobool3 to i64, !dbg !16181
  %cond = select i1 %tobool3, i32 95, i32 94, !dbg !16181
  %conv = trunc i32 %cond to i8, !dbg !16181
  store i8 %conv, i8* %retval, align 1, !dbg !16182
  br label %return, !dbg !16182

if.else4:                                         ; preds = %if.else
  %4 = load i8, i8* %dma.addr, align 1, !dbg !16183
  %tobool5 = trunc i8 %4 to i1, !dbg !16183
  %5 = zext i1 %tobool5 to i64, !dbg !16183
  %cond7 = select i1 %tobool5, i32 93, i32 92, !dbg !16183
  %conv8 = trunc i32 %cond7 to i8, !dbg !16183
  store i8 %conv8, i8* %retval, align 1, !dbg !16184
  br label %return, !dbg !16184

return:                                           ; preds = %if.else4, %if.then2, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !16185
  ret i8 %6, !dbg !16185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @system_entering_hibernation() #0 !dbg !16186 {
entry:
  ret i1 false, !dbg !16188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atapi_qc_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !16189 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !16190, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !16192, metadata !DIExpression()), !dbg !16193
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16194
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !16195
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !16195
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !16193
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !16196, metadata !DIExpression()), !dbg !16197
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16198
  %err_mask1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 20, !dbg !16199
  %3 = load i32, i32* %err_mask1, align 4, !dbg !16199
  store i32 %3, i32* %err_mask, align 4, !dbg !16197
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16200
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 0, !dbg !16200
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16200
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 1, !dbg !16200
  %6 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !16200
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %6, i32 0, i32 22, !dbg !16200
  %7 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !16200
  %tobool = icmp ne void (%struct.ata_port*)* %7, null, !dbg !16200
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16200

land.rhs:                                         ; preds = %entry
  %8 = load i32, i32* %err_mask, align 4, !dbg !16200
  %tobool2 = icmp ne i32 %8, 0, !dbg !16200
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !16200

lor.rhs:                                          ; preds = %land.rhs
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16200
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 6, !dbg !16200
  %10 = load i64, i64* %flags, align 8, !dbg !16200
  %and = and i64 %10, 131072, !dbg !16200
  %tobool3 = icmp ne i64 %and, 0, !dbg !16200
  br label %lor.end, !dbg !16200

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %11 = phi i1 [ true, %land.rhs ], [ %tobool3, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %12 = phi i1 [ false, %entry ], [ %11, %lor.end ], !dbg !16202
  %lnot = xor i1 %12, true, !dbg !16200
  %lnot4 = xor i1 %lnot, true, !dbg !16200
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !16200
  %conv = sext i32 %lnot.ext to i64, !dbg !16200
  %tobool5 = icmp ne i64 %conv, 0, !dbg !16200
  br i1 %tobool5, label %if.then, label %if.end18, !dbg !16203

if.then:                                          ; preds = %land.end
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16204
  %flags6 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 6, !dbg !16207
  %14 = load i64, i64* %flags6, align 8, !dbg !16207
  %and7 = and i64 %14, 131072, !dbg !16208
  %tobool8 = icmp ne i64 %and7, 0, !dbg !16208
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !16209

if.then9:                                         ; preds = %if.then
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16210
  call void @ata_gen_passthru_sense(%struct.ata_queued_cmd* %15) #10, !dbg !16212
  br label %if.end, !dbg !16213

if.end:                                           ; preds = %if.then9, %if.then
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16214
  %cdb = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 5, !dbg !16216
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %cdb, i64 0, i64 0, !dbg !16214
  %17 = load i8, i8* %arrayidx, align 8, !dbg !16214
  %conv10 = zext i8 %17 to i32, !dbg !16214
  %cmp = icmp eq i32 %conv10, 30, !dbg !16217
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !16218

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16219
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 1, !dbg !16220
  %19 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !16220
  %sdev = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 4, !dbg !16221
  %20 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !16221
  %tobool12 = icmp ne %struct.scsi_device* %20, null, !dbg !16219
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !16222

if.then13:                                        ; preds = %land.lhs.true
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16223
  %dev14 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %21, i32 0, i32 1, !dbg !16224
  %22 = load %struct.ata_device*, %struct.ata_device** %dev14, align 8, !dbg !16224
  %sdev15 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 4, !dbg !16225
  %23 = load %struct.scsi_device*, %struct.scsi_device** %sdev15, align 8, !dbg !16225
  %locked = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %23, i32 0, i32 39, !dbg !16226
  %24 = bitcast [6 x i8]* %locked to i48*, !dbg !16226
  %bf.load = load i48, i48* %24, align 4, !dbg !16227
  %bf.clear = and i48 %bf.load, -17, !dbg !16227
  store i48 %bf.clear, i48* %24, align 4, !dbg !16227
  br label %if.end16, !dbg !16223

if.end16:                                         ; preds = %if.then13, %land.lhs.true, %if.end
  %25 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16228
  %scsicmd17 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %25, i32 0, i32 2, !dbg !16229
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd17, align 8, !dbg !16229
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %26, i32 0, i32 24, !dbg !16230
  store i32 2, i32* %result, align 8, !dbg !16231
  %27 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16232
  call void @ata_qc_done(%struct.ata_queued_cmd* %27) #10, !dbg !16233
  br label %return, !dbg !16234

if.end18:                                         ; preds = %land.end
  %28 = load i32, i32* %err_mask, align 4, !dbg !16235
  %and19 = and i32 %28, 1, !dbg !16235
  %tobool20 = icmp ne i32 %and19, 0, !dbg !16235
  %lnot21 = xor i1 %tobool20, true, !dbg !16235
  %lnot23 = xor i1 %lnot21, true, !dbg !16235
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !16235
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !16235
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !16235
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !16237

if.then27:                                        ; preds = %if.end18
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16238
  %result28 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 24, !dbg !16240
  store i32 2, i32* %result28, align 8, !dbg !16241
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16242
  call void @atapi_request_sense(%struct.ata_queued_cmd* %30) #10, !dbg !16243
  br label %return, !dbg !16244

if.else:                                          ; preds = %if.end18
  %31 = load i32, i32* %err_mask, align 4, !dbg !16245
  %tobool29 = icmp ne i32 %31, 0, !dbg !16245
  %lnot30 = xor i1 %tobool29, true, !dbg !16245
  %lnot32 = xor i1 %lnot30, true, !dbg !16245
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !16245
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !16245
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !16245
  br i1 %tobool35, label %if.then36, label %if.else37, !dbg !16247

if.then36:                                        ; preds = %if.else
  %32 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16248
  call void @ata_gen_passthru_sense(%struct.ata_queued_cmd* %32) #10, !dbg !16250
  br label %if.end52, !dbg !16251

if.else37:                                        ; preds = %if.else
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16252
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 14, !dbg !16255
  %34 = load i8*, i8** %cmnd, align 8, !dbg !16255
  %arrayidx38 = getelementptr i8, i8* %34, i64 0, !dbg !16252
  %35 = load i8, i8* %arrayidx38, align 1, !dbg !16252
  %conv39 = zext i8 %35 to i32, !dbg !16252
  %cmp40 = icmp eq i32 %conv39, 18, !dbg !16256
  br i1 %cmp40, label %land.lhs.true42, label %if.end50, !dbg !16257

land.lhs.true42:                                  ; preds = %if.else37
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16258
  %cmnd43 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %36, i32 0, i32 14, !dbg !16259
  %37 = load i8*, i8** %cmnd43, align 8, !dbg !16259
  %arrayidx44 = getelementptr i8, i8* %37, i64 1, !dbg !16258
  %38 = load i8, i8* %arrayidx44, align 1, !dbg !16258
  %conv45 = zext i8 %38 to i32, !dbg !16258
  %and46 = and i32 %conv45, 3, !dbg !16260
  %cmp47 = icmp eq i32 %and46, 0, !dbg !16261
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !16262

if.then49:                                        ; preds = %land.lhs.true42
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16263
  call void @atapi_fixup_inquiry(%struct.scsi_cmnd* %39) #10, !dbg !16264
  br label %if.end50, !dbg !16264

if.end50:                                         ; preds = %if.then49, %land.lhs.true42, %if.else37
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16265
  %result51 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 24, !dbg !16266
  store i32 0, i32* %result51, align 8, !dbg !16267
  br label %if.end52

if.end52:                                         ; preds = %if.end50, %if.then36
  br label %if.end53

if.end53:                                         ; preds = %if.end52
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16268
  call void @ata_qc_done(%struct.ata_queued_cmd* %41) #10, !dbg !16269
  br label %return, !dbg !16270

return:                                           ; preds = %if.end53, %if.then27, %if.end16
  ret void, !dbg !16270
}

; Function Attrs: noredzone
declare dso_local i32 @atapi_check_dma(%struct.ata_queued_cmd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_qc_raw_nbytes(%struct.ata_queued_cmd* %qc) #0 !dbg !16271 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %__UNIQUE_ID___x304 = alloca i32, align 4
  %__UNIQUE_ID___y305 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !16272, metadata !DIExpression()), !dbg !16273
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16274
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 13, !dbg !16275
  %1 = load i32, i32* %nbytes, align 8, !dbg !16275
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x304, metadata !16276, metadata !DIExpression()), !dbg !16278
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16278
  %extrabytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 14, !dbg !16278
  %3 = load i32, i32* %extrabytes, align 4, !dbg !16278
  store i32 %3, i32* %__UNIQUE_ID___x304, align 4, !dbg !16278
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y305, metadata !16279, metadata !DIExpression()), !dbg !16278
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16278
  %nbytes1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 13, !dbg !16278
  %5 = load i32, i32* %nbytes1, align 8, !dbg !16278
  store i32 %5, i32* %__UNIQUE_ID___y305, align 4, !dbg !16278
  %6 = load i32, i32* %__UNIQUE_ID___x304, align 4, !dbg !16278
  %7 = load i32, i32* %__UNIQUE_ID___y305, align 4, !dbg !16278
  %cmp = icmp ult i32 %6, %7, !dbg !16278
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16278

cond.true:                                        ; preds = %entry
  %8 = load i32, i32* %__UNIQUE_ID___x304, align 4, !dbg !16278
  br label %cond.end, !dbg !16278

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %__UNIQUE_ID___y305, align 4, !dbg !16278
  br label %cond.end, !dbg !16278

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %9, %cond.false ], !dbg !16278
  store i32 %cond, i32* %tmp, align 4, !dbg !16278
  %10 = load i32, i32* %tmp, align 4, !dbg !16278
  %sub = sub i32 %1, %10, !dbg !16280
  ret i32 %sub, !dbg !16281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atapi_request_sense(%struct.ata_queued_cmd* %qc) #0 !dbg !16282 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !16283, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !16285, metadata !DIExpression()), !dbg !16286
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16287
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !16288
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !16288
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !16286
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !16289, metadata !DIExpression()), !dbg !16290
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16291
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 2, !dbg !16292
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !16292
  store %struct.scsi_cmnd* %3, %struct.scsi_cmnd** %cmd, align 8, !dbg !16290
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16293
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 20, !dbg !16294
  %5 = load i8*, i8** %sense_buffer, align 8, !dbg !16294
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 96, i1 false), !dbg !16295
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16296
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 1, !dbg !16298
  %7 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !16298
  %sff_tf_read = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %7, i32 0, i32 42, !dbg !16299
  %8 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_read, align 8, !dbg !16299
  %tobool = icmp ne void (%struct.ata_port*, %struct.ata_taskfile*)* %8, null, !dbg !16296
  br i1 %tobool, label %if.then, label %if.end, !dbg !16300

if.then:                                          ; preds = %entry
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16301
  %ops2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 1, !dbg !16302
  %10 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops2, align 8, !dbg !16302
  %sff_tf_read3 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %10, i32 0, i32 42, !dbg !16303
  %11 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_read3, align 8, !dbg !16303
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16304
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16305
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 4, !dbg !16306
  call void %11(%struct.ata_port* %12, %struct.ata_taskfile* %tf) #10, !dbg !16301
  br label %if.end, !dbg !16301

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16307
  %sense_buffer4 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 20, !dbg !16308
  %15 = load i8*, i8** %sense_buffer4, align 8, !dbg !16308
  %arrayidx = getelementptr i8, i8* %15, i64 0, !dbg !16307
  store i8 112, i8* %arrayidx, align 1, !dbg !16309
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16310
  %tf5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 4, !dbg !16311
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf5, i32 0, i32 8, !dbg !16312
  %17 = load i8, i8* %feature, align 1, !dbg !16312
  %conv = zext i8 %17 to i32, !dbg !16310
  %shr = ashr i32 %conv, 4, !dbg !16313
  %conv6 = trunc i32 %shr to i8, !dbg !16310
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16314
  %sense_buffer7 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %18, i32 0, i32 20, !dbg !16315
  %19 = load i8*, i8** %sense_buffer7, align 8, !dbg !16315
  %arrayidx8 = getelementptr i8, i8* %19, i64 2, !dbg !16314
  store i8 %conv6, i8* %arrayidx8, align 1, !dbg !16316
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16317
  call void @ata_qc_reinit(%struct.ata_queued_cmd* %20) #10, !dbg !16318
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16319
  %sgent = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %21, i32 0, i32 16, !dbg !16320
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !16321
  %sense_buffer9 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 20, !dbg !16322
  %23 = load i8*, i8** %sense_buffer9, align 8, !dbg !16322
  call void @sg_init_one(%struct.scatterlist* %sgent, i8* %23, i32 96) #10, !dbg !16323
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16324
  %25 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16325
  %sgent10 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %25, i32 0, i32 16, !dbg !16326
  call void @ata_sg_init(%struct.ata_queued_cmd* %24, %struct.scatterlist* %sgent10, i32 1) #10, !dbg !16327
  %26 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16328
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %26, i32 0, i32 11, !dbg !16329
  store i32 2, i32* %dma_dir, align 8, !dbg !16330
  %27 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16331
  %cdb = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %27, i32 0, i32 5, !dbg !16332
  %28 = bitcast [16 x i8]* %cdb to i8*, !dbg !16333
  %29 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16334
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %29, i32 0, i32 1, !dbg !16335
  %30 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !16335
  %cdb_len = getelementptr inbounds %struct.ata_device, %struct.ata_device* %30, i32 0, i32 19, !dbg !16336
  %31 = load i32, i32* %cdb_len, align 32, !dbg !16336
  %conv11 = zext i32 %31 to i64, !dbg !16334
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 %conv11, i1 false), !dbg !16333
  %32 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16337
  %cdb12 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %32, i32 0, i32 5, !dbg !16338
  %arrayidx13 = getelementptr [16 x i8], [16 x i8]* %cdb12, i64 0, i64 0, !dbg !16337
  store i8 3, i8* %arrayidx13, align 8, !dbg !16339
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16340
  %cdb14 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %33, i32 0, i32 5, !dbg !16341
  %arrayidx15 = getelementptr [16 x i8], [16 x i8]* %cdb14, i64 0, i64 4, !dbg !16340
  store i8 96, i8* %arrayidx15, align 4, !dbg !16342
  %34 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16343
  %tf16 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %34, i32 0, i32 4, !dbg !16344
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf16, i32 0, i32 0, !dbg !16345
  %35 = load i64, i64* %flags, align 8, !dbg !16346
  %or = or i64 %35, 6, !dbg !16346
  store i64 %or, i64* %flags, align 8, !dbg !16346
  %36 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16347
  %tf17 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %36, i32 0, i32 4, !dbg !16348
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf17, i32 0, i32 14, !dbg !16349
  store i8 -96, i8* %command, align 1, !dbg !16350
  %37 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16351
  %call = call i32 @ata_pio_use_silly(%struct.ata_port* %37) #10, !dbg !16353
  %tobool18 = icmp ne i32 %call, 0, !dbg !16353
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !16354

if.then19:                                        ; preds = %if.end
  %38 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16355
  %tf20 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %38, i32 0, i32 4, !dbg !16357
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf20, i32 0, i32 1, !dbg !16358
  store i8 10, i8* %protocol, align 8, !dbg !16359
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16360
  %tf21 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %39, i32 0, i32 4, !dbg !16361
  %feature22 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf21, i32 0, i32 8, !dbg !16362
  %40 = load i8, i8* %feature22, align 1, !dbg !16363
  %conv23 = zext i8 %40 to i32, !dbg !16363
  %or24 = or i32 %conv23, 1, !dbg !16363
  %conv25 = trunc i32 %or24 to i8, !dbg !16363
  store i8 %conv25, i8* %feature22, align 1, !dbg !16363
  br label %if.end30, !dbg !16364

if.else:                                          ; preds = %if.end
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16365
  %tf26 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %41, i32 0, i32 4, !dbg !16367
  %protocol27 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf26, i32 0, i32 1, !dbg !16368
  store i8 9, i8* %protocol27, align 8, !dbg !16369
  %42 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16370
  %tf28 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %42, i32 0, i32 4, !dbg !16371
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf28, i32 0, i32 11, !dbg !16372
  store i8 96, i8* %lbam, align 2, !dbg !16373
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16374
  %tf29 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 4, !dbg !16375
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf29, i32 0, i32 12, !dbg !16376
  store i8 0, i8* %lbah, align 1, !dbg !16377
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then19
  %44 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16378
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %44, i32 0, i32 13, !dbg !16379
  store i32 96, i32* %nbytes, align 8, !dbg !16380
  %45 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16381
  %complete_fn = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %45, i32 0, i32 22, !dbg !16382
  store void (%struct.ata_queued_cmd*)* @atapi_sense_complete, void (%struct.ata_queued_cmd*)** %complete_fn, align 8, !dbg !16383
  %46 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16384
  call void @ata_qc_issue(%struct.ata_queued_cmd* %46) #10, !dbg !16385
  ret void, !dbg !16386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atapi_fixup_inquiry(%struct.scsi_cmnd* %cmd) #0 !dbg !16387 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %buf = alloca [4 x i8], align 1
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !16388, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !16390, metadata !DIExpression()), !dbg !16391
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16392
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %0) #10, !dbg !16393
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16394
  %call1 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %1) #10, !dbg !16395
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !16396
  %call2 = call i64 @sg_copy_to_buffer(%struct.scatterlist* %call, i32 %call1, i8* %arraydecay, i64 4) #10, !dbg !16397
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %buf, i64 0, i64 2, !dbg !16398
  %2 = load i8, i8* %arrayidx, align 1, !dbg !16398
  %conv = zext i8 %2 to i32, !dbg !16398
  %cmp = icmp eq i32 %conv, 0, !dbg !16400
  br i1 %cmp, label %if.then, label %if.end, !dbg !16401

if.then:                                          ; preds = %entry
  %arrayidx4 = getelementptr [4 x i8], [4 x i8]* %buf, i64 0, i64 2, !dbg !16402
  store i8 5, i8* %arrayidx4, align 1, !dbg !16404
  %arrayidx5 = getelementptr [4 x i8], [4 x i8]* %buf, i64 0, i64 3, !dbg !16405
  store i8 50, i8* %arrayidx5, align 1, !dbg !16406
  br label %if.end, !dbg !16407

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16408
  %call6 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %3) #10, !dbg !16409
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16410
  %call7 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %4) #10, !dbg !16411
  %arraydecay8 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !16412
  %call9 = call i64 @sg_copy_from_buffer(%struct.scatterlist* %call6, i32 %call7, i8* %arraydecay8, i64 4) #10, !dbg !16413
  ret void, !dbg !16414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_qc_reinit(%struct.ata_queued_cmd* %qc) #0 !dbg !16415 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !16416, metadata !DIExpression()), !dbg !16417
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16418
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 11, !dbg !16419
  store i32 3, i32* %dma_dir, align 8, !dbg !16420
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16421
  %sg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 17, !dbg !16422
  store %struct.scatterlist* null, %struct.scatterlist** %sg, align 8, !dbg !16423
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16424
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 6, !dbg !16425
  store i64 0, i64* %flags, align 8, !dbg !16426
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16427
  %cursg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 18, !dbg !16428
  store %struct.scatterlist* null, %struct.scatterlist** %cursg, align 8, !dbg !16429
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16430
  %cursg_ofs = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 19, !dbg !16431
  store i32 0, i32* %cursg_ofs, align 8, !dbg !16432
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16433
  %curbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 15, !dbg !16434
  store i32 0, i32* %curbytes, align 8, !dbg !16435
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16436
  %extrabytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 14, !dbg !16437
  store i32 0, i32* %extrabytes, align 4, !dbg !16438
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16439
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 13, !dbg !16440
  store i32 0, i32* %nbytes, align 8, !dbg !16441
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16442
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 9, !dbg !16443
  store i32 0, i32* %n_elem, align 8, !dbg !16444
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16445
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 20, !dbg !16446
  store i32 0, i32* %err_mask, align 4, !dbg !16447
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16448
  %sect_size = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 12, !dbg !16449
  store i32 512, i32* %sect_size, align 4, !dbg !16450
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16451
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 1, !dbg !16452
  %12 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !16452
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16453
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 4, !dbg !16454
  call void @ata_tf_init(%struct.ata_device* %12, %struct.ata_taskfile* %tf) #10, !dbg !16455
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16456
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 21, !dbg !16457
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf, i32 0, i32 14, !dbg !16458
  store i8 64, i8* %command, align 1, !dbg !16459
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16460
  %result_tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 21, !dbg !16461
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf1, i32 0, i32 8, !dbg !16462
  store i8 0, i8* %feature, align 1, !dbg !16463
  ret void, !dbg !16464
}

; Function Attrs: noredzone
declare dso_local void @sg_init_one(%struct.scatterlist*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @ata_sg_init(%struct.ata_queued_cmd*, %struct.scatterlist*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_pio_use_silly(%struct.ata_port* %ap) #0 !dbg !16465 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !16466, metadata !DIExpression()), !dbg !16467
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !16468
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 3, !dbg !16469
  %1 = load i64, i64* %flags, align 8, !dbg !16469
  %and = and i64 %1, 128, !dbg !16470
  %conv = trunc i64 %and to i32, !dbg !16471
  ret i32 %conv, !dbg !16472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atapi_sense_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !16473 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !16474, metadata !DIExpression()), !dbg !16475
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16476
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 20, !dbg !16478
  %1 = load i32, i32* %err_mask, align 4, !dbg !16478
  %tobool = icmp ne i32 %1, 0, !dbg !16476
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !16479

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16480
  %err_mask1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 20, !dbg !16481
  %3 = load i32, i32* %err_mask1, align 4, !dbg !16481
  %and = and i32 %3, 1, !dbg !16482
  %cmp = icmp eq i32 %and, 0, !dbg !16483
  br i1 %cmp, label %if.then, label %if.end, !dbg !16484

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16485
  call void @ata_gen_passthru_sense(%struct.ata_queued_cmd* %4) #10, !dbg !16487
  br label %if.end, !dbg !16488

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !16489
  call void @ata_qc_done(%struct.ata_queued_cmd* %5) #10, !dbg !16490
  ret void, !dbg !16491
}

; Function Attrs: noredzone
declare dso_local void @ata_qc_issue(%struct.ata_queued_cmd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_tf_init(%struct.ata_device* %dev, %struct.ata_taskfile* %tf) #0 !dbg !16492 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !16495, metadata !DIExpression()), !dbg !16496
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !16497, metadata !DIExpression()), !dbg !16498
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !16499
  %1 = bitcast %struct.ata_taskfile* %0 to i8*, !dbg !16500
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !16500
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16501
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 0, !dbg !16502
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !16502
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !16503
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !16503
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 9, !dbg !16504
  %5 = load i8, i8* %ctl, align 8, !dbg !16504
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !16505
  %ctl1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 2, !dbg !16506
  store i8 %5, i8* %ctl1, align 1, !dbg !16507
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16508
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 1, !dbg !16510
  %8 = load i32, i32* %devno, align 8, !dbg !16510
  %cmp = icmp eq i32 %8, 0, !dbg !16511
  br i1 %cmp, label %if.then, label %if.else, !dbg !16512

if.then:                                          ; preds = %entry
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !16513
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 13, !dbg !16514
  store i8 -96, i8* %device, align 4, !dbg !16515
  br label %if.end, !dbg !16513

if.else:                                          ; preds = %entry
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !16516
  %device2 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 13, !dbg !16517
  store i8 -80, i8* %device2, align 4, !dbg !16518
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @ata_scsi_qc_new(%struct.ata_device* %dev, %struct.scsi_cmnd* %cmd) #0 !dbg !16520 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !16523, metadata !DIExpression()), !dbg !16524
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !16525, metadata !DIExpression()), !dbg !16526
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !16527, metadata !DIExpression()), !dbg !16528
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16529
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16530
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 19, !dbg !16531
  %2 = load %struct.request*, %struct.request** %request, align 8, !dbg !16531
  %tag = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 5, !dbg !16532
  %3 = load i32, i32* %tag, align 8, !dbg !16532
  %call = call %struct.ata_queued_cmd* @ata_qc_new_init(%struct.ata_device* %0, i32 %3) #10, !dbg !16533
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !16534
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !16535
  %tobool = icmp ne %struct.ata_queued_cmd* %4, null, !dbg !16535
  br i1 %tobool, label %if.then, label %if.else, !dbg !16537

if.then:                                          ; preds = %entry
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16538
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !16540
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 2, !dbg !16541
  store %struct.scsi_cmnd* %5, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !16542
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16543
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 21, !dbg !16544
  %8 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !16544
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !16545
  %scsidone = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 3, !dbg !16546
  store void (%struct.scsi_cmnd*)* %8, void (%struct.scsi_cmnd*)** %scsidone, align 8, !dbg !16547
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16548
  %call1 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %10) #10, !dbg !16549
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !16550
  %sg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 17, !dbg !16551
  store %struct.scatterlist* %call1, %struct.scatterlist** %sg, align 8, !dbg !16552
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16553
  %call2 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %12) #10, !dbg !16554
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !16555
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 9, !dbg !16556
  store i32 %call2, i32* %n_elem, align 8, !dbg !16557
  %14 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16558
  %request3 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %14, i32 0, i32 19, !dbg !16560
  %15 = load %struct.request*, %struct.request** %request3, align 8, !dbg !16560
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %15, i32 0, i32 4, !dbg !16561
  %16 = load i32, i32* %rq_flags, align 4, !dbg !16561
  %and = and i32 %16, 2048, !dbg !16562
  %tobool4 = icmp ne i32 %and, 0, !dbg !16562
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16563

if.then5:                                         ; preds = %if.then
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !16564
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %17, i32 0, i32 6, !dbg !16565
  %18 = load i64, i64* %flags, align 8, !dbg !16566
  %or = or i64 %18, 64, !dbg !16566
  store i64 %or, i64* %flags, align 8, !dbg !16566
  br label %if.end, !dbg !16564

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end7, !dbg !16567

if.else:                                          ; preds = %entry
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16568
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %19, i32 0, i32 24, !dbg !16570
  store i32 40, i32* %result, align 8, !dbg !16571
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16572
  %scsi_done6 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 21, !dbg !16573
  %21 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done6, align 8, !dbg !16573
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16574
  call void %21(%struct.scsi_cmnd* %22) #10, !dbg !16572
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !16575
  ret %struct.ata_queued_cmd* %23, !dbg !16576
}

; Function Attrs: noredzone
declare dso_local %struct.ata_queued_cmd* @ata_qc_new_init(%struct.ata_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ata_scsi_rbuf_get(%struct.scsi_cmnd* %cmd, i1 zeroext %copy_in, i64* %flags) #0 !dbg !16577 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !16580
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %copy_in.addr = alloca i8, align 1
  %flags.addr = alloca i64*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !16587, metadata !DIExpression()), !dbg !16588
  %frombool = zext i1 %copy_in to i8
  store i8 %frombool, i8* %copy_in.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_in.addr, metadata !16589, metadata !DIExpression()), !dbg !16590
  store i64* %flags, i64** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flags.addr, metadata !16591, metadata !DIExpression()), !dbg !16592
  br label %do.body, !dbg !16593

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16594

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16595, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16598, metadata !DIExpression()), !dbg !16597
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16597
  %conv = zext i1 %cmp to i32, !dbg !16597
  store i32 1, i32* %tmp, align 4, !dbg !16597
  %0 = load i32, i32* %tmp, align 4, !dbg !16597
  br label %do.body2, !dbg !16599

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !16600

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16601

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !16603, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16607, metadata !DIExpression()), !dbg !16606
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16606
  %conv8 = zext i1 %cmp7 to i32, !dbg !16606
  store i32 1, i32* %tmp9, align 4, !dbg !16606
  %1 = load i32, i32* %tmp9, align 4, !dbg !16606
  %call = call i64 @arch_local_irq_save() #10, !dbg !16608
  %2 = load i64*, i64** %flags.addr, align 8, !dbg !16608
  store i64 %call, i64* %2, align 8, !dbg !16608
  br label %do.end, !dbg !16608

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !16601

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !16600

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !16609, !srcloc !16610
  br label %do.body12, !dbg !16609

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @ata_scsi_rbuf_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16611
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !16612
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !16612
  br label %do.end14, !dbg !16613

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !16609

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !16600

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16599

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16594

do.end18:                                         ; preds = %do.end17
  call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([576 x i8], [576 x i8]* @ata_scsi_rbuf, i64 0, i64 0), i8 0, i64 576, i1 false), !dbg !16614
  %5 = load i8, i8* %copy_in.addr, align 1, !dbg !16615
  %tobool = trunc i8 %5 to i1, !dbg !16615
  br i1 %tobool, label %if.then, label %if.end, !dbg !16617

if.then:                                          ; preds = %do.end18
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16618
  %call19 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %6) #10, !dbg !16619
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16620
  %call20 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %7) #10, !dbg !16621
  %call21 = call i64 @sg_copy_to_buffer(%struct.scatterlist* %call19, i32 %call20, i8* getelementptr inbounds ([576 x i8], [576 x i8]* @ata_scsi_rbuf, i64 0, i64 0), i64 576) #10, !dbg !16622
  br label %if.end, !dbg !16622

if.end:                                           ; preds = %if.then, %do.end18
  ret i8* getelementptr inbounds ([576 x i8], [576 x i8]* @ata_scsi_rbuf, i64 0, i64 0), !dbg !16623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_rbuf_put(%struct.scsi_cmnd* %cmd, i1 zeroext %copy_out, i64* %flags) #0 !dbg !16624 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7129, metadata !DIExpression()), !dbg !16627
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !16629
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %copy_out.addr = alloca i8, align 1
  %flags.addr = alloca i64*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !16630, metadata !DIExpression()), !dbg !16631
  %frombool = zext i1 %copy_out to i8
  store i8 %frombool, i8* %copy_out.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_out.addr, metadata !16632, metadata !DIExpression()), !dbg !16633
  store i64* %flags, i64** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %flags.addr, metadata !16634, metadata !DIExpression()), !dbg !16635
  %0 = load i8, i8* %copy_out.addr, align 1, !dbg !16636
  %tobool = trunc i8 %0 to i1, !dbg !16636
  br i1 %tobool, label %if.then, label %if.end, !dbg !16638

if.then:                                          ; preds = %entry
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16639
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %1) #10, !dbg !16640
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !16641
  %call1 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %2) #10, !dbg !16642
  %call2 = call i64 @sg_copy_from_buffer(%struct.scatterlist* %call, i32 %call1, i8* getelementptr inbounds ([576 x i8], [576 x i8]* @ata_scsi_rbuf, i64 0, i64 0), i64 576) #10, !dbg !16643
  br label %if.end, !dbg !16643

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64*, i64** %flags.addr, align 8, !dbg !16644
  %4 = load i64, i64* %3, align 8, !dbg !16645
  store %struct.spinlock* @ata_scsi_rbuf_lock, %struct.spinlock** %lock.addr.i, align 8
  store i64 %4, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !16646
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !16646
  store i32 1, i32* %tmp.i, align 4, !dbg !16646
  %5 = load i32, i32* %tmp.i, align 4, !dbg !16646
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !16647
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !16647
  store i32 1, i32* %tmp8.i, align 4, !dbg !16647
  %6 = load i32, i32* %tmp8.i, align 4, !dbg !16647
  %7 = load i64, i64* %flags.addr.i, align 8, !dbg !16648
  call void @arch_local_irq_restore(i64 %7) #11, !dbg !16648
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !16649, !srcloc !7307
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16650
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !16650
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !16650
  ret void, !dbg !16651
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_id_zoned_cap(i16* %id) #0 !dbg !16652 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16655, metadata !DIExpression()), !dbg !16656
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16657
  %arrayidx = getelementptr i16, i16* %0, i64 69, !dbg !16657
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16657
  %conv = zext i16 %1 to i32, !dbg !16657
  %and = and i32 %conv, 3, !dbg !16658
  %conv1 = trunc i32 %and to i8, !dbg !16659
  ret i8 %conv1, !dbg !16660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_wwn(i16* %id) #0 !dbg !16661 {
entry:
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16662, metadata !DIExpression()), !dbg !16663
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16664
  %arrayidx = getelementptr i16, i16* %0, i64 87, !dbg !16664
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16664
  %conv = zext i16 %1 to i32, !dbg !16664
  %and = and i32 %conv, 49408, !dbg !16665
  %cmp = icmp eq i32 %and, 16640, !dbg !16666
  ret i1 %cmp, !dbg !16667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_id_log2_per_physical_sector(i16* %id) #0 !dbg !16668 {
entry:
  %retval = alloca i8, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16669, metadata !DIExpression()), !dbg !16670
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16671
  %arrayidx = getelementptr i16, i16* %0, i64 106, !dbg !16671
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16671
  %conv = zext i16 %1 to i32, !dbg !16671
  %and = and i32 %conv, 57344, !dbg !16673
  %cmp = icmp eq i32 %and, 24576, !dbg !16674
  br i1 %cmp, label %if.then, label %if.end, !dbg !16675

if.then:                                          ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !16676
  %arrayidx2 = getelementptr i16, i16* %2, i64 106, !dbg !16676
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !16676
  %conv3 = zext i16 %3 to i32, !dbg !16676
  %and4 = and i32 %conv3, 15, !dbg !16677
  %conv5 = trunc i32 %and4 to i8, !dbg !16678
  store i8 %conv5, i8* %retval, align 1, !dbg !16679
  br label %return, !dbg !16679

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !16680
  br label %return, !dbg !16680

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !16681
  ret i8 %4, !dbg !16681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_id_form_factor(i16* %id) #0 !dbg !16682 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16*, align 8
  %val = alloca i16, align 2
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16685, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.declare(metadata i16* %val, metadata !16687, metadata !DIExpression()), !dbg !16688
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16689
  %arrayidx = getelementptr i16, i16* %0, i64 168, !dbg !16689
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16689
  store i16 %1, i16* %val, align 2, !dbg !16688
  %2 = load i16*, i16** %id.addr, align 8, !dbg !16690
  %call = call i32 @ata_id_major_version(i16* %2) #10, !dbg !16692
  %cmp = icmp ult i32 %call, 7, !dbg !16693
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16694

lor.lhs.false:                                    ; preds = %entry
  %3 = load i16, i16* %val, align 2, !dbg !16695
  %conv = zext i16 %3 to i32, !dbg !16695
  %cmp1 = icmp eq i32 %conv, 0, !dbg !16696
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !16697

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load i16, i16* %val, align 2, !dbg !16698
  %conv4 = zext i16 %4 to i32, !dbg !16698
  %cmp5 = icmp eq i32 %conv4, 65535, !dbg !16699
  br i1 %cmp5, label %if.then, label %if.end, !dbg !16700

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !16701
  br label %return, !dbg !16701

if.end:                                           ; preds = %lor.lhs.false3
  %5 = load i16, i16* %val, align 2, !dbg !16702
  %conv7 = zext i16 %5 to i32, !dbg !16702
  %and = and i32 %conv7, 15, !dbg !16702
  %conv8 = trunc i32 %and to i16, !dbg !16702
  store i16 %conv8, i16* %val, align 2, !dbg !16702
  %6 = load i16, i16* %val, align 2, !dbg !16703
  %conv9 = zext i16 %6 to i32, !dbg !16703
  %cmp10 = icmp sgt i32 %conv9, 5, !dbg !16705
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !16706

if.then12:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16707
  br label %return, !dbg !16707

if.end13:                                         ; preds = %if.end
  %7 = load i16, i16* %val, align 2, !dbg !16708
  %conv14 = zext i16 %7 to i32, !dbg !16708
  store i32 %conv14, i32* %retval, align 4, !dbg !16709
  br label %return, !dbg !16709

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !16710
  ret i32 %8, !dbg !16710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_id_rotation_rate(i16* %id) #0 !dbg !16711 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16*, align 8
  %val = alloca i16, align 2
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16712, metadata !DIExpression()), !dbg !16713
  call void @llvm.dbg.declare(metadata i16* %val, metadata !16714, metadata !DIExpression()), !dbg !16715
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16716
  %arrayidx = getelementptr i16, i16* %0, i64 217, !dbg !16716
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16716
  store i16 %1, i16* %val, align 2, !dbg !16715
  %2 = load i16*, i16** %id.addr, align 8, !dbg !16717
  %call = call i32 @ata_id_major_version(i16* %2) #10, !dbg !16719
  %cmp = icmp ult i32 %call, 7, !dbg !16720
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16721

lor.lhs.false:                                    ; preds = %entry
  %3 = load i16, i16* %val, align 2, !dbg !16722
  %conv = zext i16 %3 to i32, !dbg !16722
  %cmp1 = icmp eq i32 %conv, 0, !dbg !16723
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !16724

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load i16, i16* %val, align 2, !dbg !16725
  %conv4 = zext i16 %4 to i32, !dbg !16725
  %cmp5 = icmp eq i32 %conv4, 65535, !dbg !16726
  br i1 %cmp5, label %if.then, label %if.end, !dbg !16727

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !16728
  br label %return, !dbg !16728

if.end:                                           ; preds = %lor.lhs.false3
  %5 = load i16, i16* %val, align 2, !dbg !16729
  %conv7 = zext i16 %5 to i32, !dbg !16729
  %cmp8 = icmp sgt i32 %conv7, 1, !dbg !16731
  br i1 %cmp8, label %land.lhs.true, label %if.end14, !dbg !16732

land.lhs.true:                                    ; preds = %if.end
  %6 = load i16, i16* %val, align 2, !dbg !16733
  %conv10 = zext i16 %6 to i32, !dbg !16733
  %cmp11 = icmp slt i32 %conv10, 1025, !dbg !16734
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !16735

if.then13:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !16736
  br label %return, !dbg !16736

if.end14:                                         ; preds = %land.lhs.true, %if.end
  %7 = load i16, i16* %val, align 2, !dbg !16737
  %conv15 = zext i16 %7 to i32, !dbg !16737
  store i32 %conv15, i32* %retval, align 4, !dbg !16738
  br label %return, !dbg !16738

return:                                           ; preds = %if.end14, %if.then13, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !16739
  ret i32 %8, !dbg !16739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_msense_rw_recovery(i8* %buf, i1 zeroext %changeable) #0 !dbg !16740 {
entry:
  %buf.addr = alloca i8*, align 8
  %changeable.addr = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16743, metadata !DIExpression()), !dbg !16744
  %frombool = zext i1 %changeable to i8
  store i8 %frombool, i8* %changeable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %changeable.addr, metadata !16745, metadata !DIExpression()), !dbg !16746
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16747
  %1 = load i8, i8* %changeable.addr, align 1, !dbg !16748
  %tobool = trunc i8 %1 to i1, !dbg !16748
  call void @modecpy(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (<{ i8, i8, i8, [9 x i8] }>* @def_rw_recovery_mpage to [12 x i8]*), i64 0, i64 0), i32 12, i1 zeroext %tobool) #10, !dbg !16749
  ret i32 12, !dbg !16750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_supports_fua(i16* %id) #0 !dbg !16751 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16*, align 8
  %model = alloca [41 x i8], align 16
  %fw = alloca [9 x i8], align 1
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16754, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.declare(metadata [41 x i8]* %model, metadata !16756, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.declare(metadata [9 x i8]* %fw, metadata !16761, metadata !DIExpression()), !dbg !16763
  %0 = load i32, i32* @libata_fua, align 4, !dbg !16764
  %tobool = icmp ne i32 %0, 0, !dbg !16764
  br i1 %tobool, label %if.end, label %if.then, !dbg !16766

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16767
  br label %return, !dbg !16767

if.end:                                           ; preds = %entry
  %1 = load i16*, i16** %id.addr, align 8, !dbg !16768
  %call = call zeroext i1 @ata_id_has_fua(i16* %1) #10, !dbg !16770
  br i1 %call, label %if.end2, label %if.then1, !dbg !16771

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16772
  br label %return, !dbg !16772

if.end2:                                          ; preds = %if.end
  %2 = load i16*, i16** %id.addr, align 8, !dbg !16773
  %arraydecay = getelementptr inbounds [41 x i8], [41 x i8]* %model, i64 0, i64 0, !dbg !16774
  call void @ata_id_c_string(i16* %2, i8* %arraydecay, i32 27, i32 41) #10, !dbg !16775
  %3 = load i16*, i16** %id.addr, align 8, !dbg !16776
  %arraydecay3 = getelementptr inbounds [9 x i8], [9 x i8]* %fw, i64 0, i64 0, !dbg !16777
  call void @ata_id_c_string(i16* %3, i8* %arraydecay3, i32 23, i32 9) #10, !dbg !16778
  %arraydecay4 = getelementptr inbounds [41 x i8], [41 x i8]* %model, i64 0, i64 0, !dbg !16779
  %call5 = call i32 @strcmp(i8* %arraydecay4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #10, !dbg !16781
  %tobool6 = icmp ne i32 %call5, 0, !dbg !16781
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !16782

if.then7:                                         ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !16783
  br label %return, !dbg !16783

if.end8:                                          ; preds = %if.end2
  %arraydecay9 = getelementptr inbounds [9 x i8], [9 x i8]* %fw, i64 0, i64 0, !dbg !16784
  %call10 = call i32 @strcmp(i8* %arraydecay9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0)) #10, !dbg !16786
  %tobool11 = icmp ne i32 %call10, 0, !dbg !16786
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !16787

if.then12:                                        ; preds = %if.end8
  store i32 1, i32* %retval, align 4, !dbg !16788
  br label %return, !dbg !16788

if.end13:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !16789
  br label %return, !dbg !16789

return:                                           ; preds = %if.end13, %if.then12, %if.then7, %if.then1, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !16790
  ret i32 %4, !dbg !16790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_fua(i16* %id) #0 !dbg !16791 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16792, metadata !DIExpression()), !dbg !16793
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16794
  %arrayidx = getelementptr i16, i16* %0, i64 84, !dbg !16794
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16794
  %conv = zext i16 %1 to i32, !dbg !16794
  %and = and i32 %conv, 49152, !dbg !16796
  %cmp = icmp ne i32 %and, 16384, !dbg !16797
  br i1 %cmp, label %if.then, label %if.end, !dbg !16798

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !16799
  br label %return, !dbg !16799

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !16800
  %arrayidx2 = getelementptr i16, i16* %2, i64 84, !dbg !16800
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !16800
  %conv3 = zext i16 %3 to i32, !dbg !16800
  %and4 = and i32 %conv3, 64, !dbg !16801
  %tobool = icmp ne i32 %and4, 0, !dbg !16800
  store i1 %tobool, i1* %retval, align 1, !dbg !16802
  br label %return, !dbg !16802

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !16803
  ret i1 %4, !dbg !16803
}

; Function Attrs: noredzone
declare dso_local void @ata_id_c_string(i16*, i8*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @ata_id_logical_sector_offset(i16* %id, i8 zeroext %log2_per_phys) #0 !dbg !16804 {
entry:
  %retval = alloca i16, align 2
  %id.addr = alloca i16*, align 8
  %log2_per_phys.addr = alloca i8, align 1
  %word_209 = alloca i16, align 2
  %first = alloca i16, align 2
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16807, metadata !DIExpression()), !dbg !16808
  store i8 %log2_per_phys, i8* %log2_per_phys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %log2_per_phys.addr, metadata !16809, metadata !DIExpression()), !dbg !16810
  call void @llvm.dbg.declare(metadata i16* %word_209, metadata !16811, metadata !DIExpression()), !dbg !16812
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16813
  %arrayidx = getelementptr i16, i16* %0, i64 209, !dbg !16813
  %1 = load i16, i16* %arrayidx, align 2, !dbg !16813
  store i16 %1, i16* %word_209, align 2, !dbg !16812
  %2 = load i8, i8* %log2_per_phys.addr, align 1, !dbg !16814
  %conv = zext i8 %2 to i32, !dbg !16814
  %cmp = icmp sgt i32 %conv, 1, !dbg !16816
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !16817

land.lhs.true:                                    ; preds = %entry
  %3 = load i16, i16* %word_209, align 2, !dbg !16818
  %conv2 = zext i16 %3 to i32, !dbg !16818
  %and = and i32 %conv2, 49152, !dbg !16819
  %cmp3 = icmp eq i32 %and, 16384, !dbg !16820
  br i1 %cmp3, label %if.then, label %if.end15, !dbg !16821

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i16* %first, metadata !16822, metadata !DIExpression()), !dbg !16824
  %4 = load i16, i16* %word_209, align 2, !dbg !16825
  %conv5 = zext i16 %4 to i32, !dbg !16825
  %and6 = and i32 %conv5, 16383, !dbg !16826
  %conv7 = trunc i32 %and6 to i16, !dbg !16825
  store i16 %conv7, i16* %first, align 2, !dbg !16824
  %5 = load i16, i16* %first, align 2, !dbg !16827
  %conv8 = zext i16 %5 to i32, !dbg !16827
  %cmp9 = icmp sgt i32 %conv8, 0, !dbg !16829
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !16830

if.then11:                                        ; preds = %if.then
  %6 = load i8, i8* %log2_per_phys.addr, align 1, !dbg !16831
  %conv12 = zext i8 %6 to i32, !dbg !16831
  %shl = shl i32 1, %conv12, !dbg !16832
  %7 = load i16, i16* %first, align 2, !dbg !16833
  %conv13 = zext i16 %7 to i32, !dbg !16833
  %sub = sub i32 %shl, %conv13, !dbg !16834
  %conv14 = trunc i32 %sub to i16, !dbg !16835
  store i16 %conv14, i16* %retval, align 2, !dbg !16836
  br label %return, !dbg !16836

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !16837

if.end15:                                         ; preds = %if.end, %land.lhs.true, %entry
  store i16 0, i16* %retval, align 2, !dbg !16838
  br label %return, !dbg !16838

return:                                           ; preds = %if.end15, %if.then11
  %8 = load i16, i16* %retval, align 2, !dbg !16839
  ret i16 %8, !dbg !16839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_zero_after_trim(i16* %id) #0 !dbg !16840 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !16841, metadata !DIExpression()), !dbg !16842
  %0 = load i16*, i16** %id.addr, align 8, !dbg !16843
  %call = call zeroext i1 @ata_id_has_trim(i16* %0) #10, !dbg !16845
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !16846

land.lhs.true:                                    ; preds = %entry
  %1 = load i16*, i16** %id.addr, align 8, !dbg !16847
  %arrayidx = getelementptr i16, i16* %1, i64 69, !dbg !16847
  %2 = load i16, i16* %arrayidx, align 2, !dbg !16847
  %conv = zext i16 %2 to i32, !dbg !16847
  %and = and i32 %conv, 16416, !dbg !16848
  %cmp = icmp eq i32 %and, 16416, !dbg !16849
  br i1 %cmp, label %if.then, label %if.end, !dbg !16850

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !16851
  br label %return, !dbg !16851

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !16852
  br label %return, !dbg !16852

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !16853
  ret i1 %3, !dbg !16853
}

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_get_next_available_child(%struct.device_node*, %struct.device_node*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32(%struct.device_node* %np, i8* %propname, i32* %out_value) #0 !dbg !16854 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_value.addr = alloca i32*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !16859, metadata !DIExpression()), !dbg !16860
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !16861, metadata !DIExpression()), !dbg !16862
  store i32* %out_value, i32** %out_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_value.addr, metadata !16863, metadata !DIExpression()), !dbg !16864
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !16865
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !16866
  %2 = load i32*, i32** %out_value.addr, align 8, !dbg !16867
  %call = call i32 @of_property_read_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 1) #10, !dbg !16868
  ret i32 %call, !dbg !16869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #0 !dbg !16870 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !16873, metadata !DIExpression()), !dbg !16874
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !16875, metadata !DIExpression()), !dbg !16876
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !16877, metadata !DIExpression()), !dbg !16878
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !16879, metadata !DIExpression()), !dbg !16880
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16881, metadata !DIExpression()), !dbg !16882
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !16883
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !16884
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !16885
  %3 = load i64, i64* %sz.addr, align 8, !dbg !16886
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #10, !dbg !16887
  store i32 %call, i32* %ret, align 4, !dbg !16882
  %4 = load i32, i32* %ret, align 4, !dbg !16888
  %cmp = icmp sge i32 %4, 0, !dbg !16890
  br i1 %cmp, label %if.then, label %if.else, !dbg !16891

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16892
  br label %return, !dbg !16892

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !16893
  store i32 %5, i32* %retval, align 4, !dbg !16894
  br label %return, !dbg !16894

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !16895
  ret i32 %6, !dbg !16895
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %dev) #0 !dbg !16896 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !16898, metadata !DIExpression()), !dbg !16899
  ret i1 false, !dbg !16900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @zpodd_exit(%struct.ata_device* %dev) #0 !dbg !16901 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !16902, metadata !DIExpression()), !dbg !16903
  ret void, !dbg !16904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_scsi_remove_dev(%struct.ata_device* %dev) #0 !dbg !16905 {
entry:
  %lock.addr.i56 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i56, metadata !7129, metadata !DIExpression()), !dbg !16906
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7135, metadata !DIExpression()), !dbg !16908
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7137, metadata !DIExpression()), !dbg !16909
  %dev.addr = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %sdev = alloca %struct.scsi_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp40 = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !16916, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !16918, metadata !DIExpression()), !dbg !16919
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16920
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !16921
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !16921
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !16922
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !16922
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !16919
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev, metadata !16923, metadata !DIExpression()), !dbg !16924
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16925, metadata !DIExpression()), !dbg !16926
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16927
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 0, !dbg !16928
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !16928
  %scan_mutex = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 5, !dbg !16929
  call void @mutex_lock(%struct.mutex* %scan_mutex) #10, !dbg !16930
  br label %do.body, !dbg !16931

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !16932

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16933, metadata !DIExpression()), !dbg !16935
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16936, metadata !DIExpression()), !dbg !16935
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16935
  %conv = zext i1 %cmp to i32, !dbg !16935
  store i32 1, i32* %tmp, align 4, !dbg !16935
  %5 = load i32, i32* %tmp, align 4, !dbg !16935
  br label %do.body3, !dbg !16937

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16938

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !16939

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !16941, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !16945, metadata !DIExpression()), !dbg !16944
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !16944
  %conv9 = zext i1 %cmp8 to i32, !dbg !16944
  store i32 1, i32* %tmp10, align 4, !dbg !16944
  %6 = load i32, i32* %tmp10, align 4, !dbg !16944
  %call = call i64 @arch_local_irq_save() #10, !dbg !16946
  store i64 %call, i64* %flags, align 8, !dbg !16946
  br label %do.end, !dbg !16946

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !16939

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !16938

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !16947, !srcloc !16948
  br label %do.body13, !dbg !16947

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16949
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 2, !dbg !16949
  %8 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !16949
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16950
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !16951
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !16951
  br label %do.end15, !dbg !16949

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !16947

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16938

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16937

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !16932

do.end19:                                         ; preds = %do.end18
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16952
  %sdev20 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 4, !dbg !16953
  %12 = load %struct.scsi_device*, %struct.scsi_device** %sdev20, align 8, !dbg !16953
  store %struct.scsi_device* %12, %struct.scsi_device** %sdev, align 8, !dbg !16954
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !16955
  %sdev21 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 4, !dbg !16956
  store %struct.scsi_device* null, %struct.scsi_device** %sdev21, align 8, !dbg !16957
  %14 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !16958
  %tobool = icmp ne %struct.scsi_device* %14, null, !dbg !16958
  br i1 %tobool, label %if.then, label %if.end48, !dbg !16960

if.then:                                          ; preds = %do.end19
  %15 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !16961
  %call22 = call i32 @scsi_device_get(%struct.scsi_device* %15) #10, !dbg !16964
  %cmp23 = icmp eq i32 %call22, 0, !dbg !16965
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !16966

if.then25:                                        ; preds = %if.then
  %16 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !16967
  %call26 = call i32 @scsi_device_set_state(%struct.scsi_device* %16, i32 6) #10, !dbg !16969
  br label %if.end47, !dbg !16970

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16971, metadata !DIExpression()), !dbg !16974
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !16974
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !16975
  %tobool27 = icmp ne i32 %17, 0, !dbg !16975
  %lnot = xor i1 %tobool27, true, !dbg !16975
  %lnot28 = xor i1 %lnot, true, !dbg !16975
  %lnot.ext = zext i1 %lnot28 to i32, !dbg !16975
  %conv29 = sext i32 %lnot.ext to i64, !dbg !16975
  %tobool30 = icmp ne i64 %conv29, 0, !dbg !16975
  br i1 %tobool30, label %if.then31, label %if.end, !dbg !16974

if.then31:                                        ; preds = %if.else
  br label %do.body32, !dbg !16975

do.body32:                                        ; preds = %if.then31
  br label %do.body33, !dbg !16977

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !16979

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !16977

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i32 4455, i32 2305, i64 12) #5, !dbg !16981, !srcloc !16983
  br label %do.end36, !dbg !16981

do.end36:                                         ; preds = %do.body35
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 321) #5, !dbg !16984, !srcloc !16986
  br label %do.body37, !dbg !16977

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !16987

do.end38:                                         ; preds = %do.body37
  br label %do.end39, !dbg !16977

do.end39:                                         ; preds = %do.end38
  br label %if.end, !dbg !16977

if.end:                                           ; preds = %do.end39, %if.else
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !16974
  %tobool41 = icmp ne i32 %18, 0, !dbg !16974
  %lnot42 = xor i1 %tobool41, true, !dbg !16974
  %lnot44 = xor i1 %lnot42, true, !dbg !16974
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !16974
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !16974
  store i64 %conv46, i64* %tmp40, align 8, !dbg !16975
  %19 = load i64, i64* %tmp40, align 8, !dbg !16974
  store %struct.scsi_device* null, %struct.scsi_device** %sdev, align 8, !dbg !16989
  br label %if.end47

if.end47:                                         ; preds = %if.end, %if.then25
  br label %if.end48, !dbg !16990

if.end48:                                         ; preds = %if.end47, %do.end19
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16991
  %lock49 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 2, !dbg !16992
  %21 = load %struct.spinlock*, %struct.spinlock** %lock49, align 16, !dbg !16992
  %22 = load i64, i64* %flags, align 8, !dbg !16993
  store %struct.spinlock* %21, %struct.spinlock** %lock.addr.i56, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1018, metadata !7292, metadata !DIExpression()) #5, !dbg !16994
  call void @llvm.dbg.declare(metadata !1018, metadata !7296, metadata !DIExpression()) #5, !dbg !16994
  store i32 1, i32* %tmp.i, align 4, !dbg !16994
  %23 = load i32, i32* %tmp.i, align 4, !dbg !16994
  call void @llvm.dbg.declare(metadata !1018, metadata !7297, metadata !DIExpression()) #5, !dbg !16995
  call void @llvm.dbg.declare(metadata !1018, metadata !7303, metadata !DIExpression()) #5, !dbg !16995
  store i32 1, i32* %tmp8.i, align 4, !dbg !16995
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !16995
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !16996
  call void @arch_local_irq_restore(i64 %25) #11, !dbg !16996
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !16997, !srcloc !7307
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i56, align 8, !dbg !16998
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !16998
  %rlock.i57 = bitcast %union.anon.1* %27 to %struct.raw_spinlock*, !dbg !16998
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !16999
  %scsi_host50 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 0, !dbg !17000
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host50, align 64, !dbg !17000
  %scan_mutex51 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 5, !dbg !17001
  call void @mutex_unlock(%struct.mutex* %scan_mutex51) #10, !dbg !17002
  %30 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !17003
  %tobool52 = icmp ne %struct.scsi_device* %30, null, !dbg !17003
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !17005

if.then53:                                        ; preds = %if.end48
  %31 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !17006
  %32 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !17006
  %sdev_gendev = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %32, i32 0, i32 50, !dbg !17006
  %call54 = call i8* @dev_name(%struct.device* %sdev_gendev) #10, !dbg !17006
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i64 0, i64 0), i8* %call54) #10, !dbg !17006
  %33 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !17008
  call void @scsi_remove_device(%struct.scsi_device* %33) #10, !dbg !17009
  %34 = load %struct.scsi_device*, %struct.scsi_device** %sdev, align 8, !dbg !17010
  call void @scsi_device_put(%struct.scsi_device* %34) #10, !dbg !17011
  br label %if.end55, !dbg !17012

if.end55:                                         ; preds = %if.then53, %if.end48
  ret void, !dbg !17013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !17014 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17017, metadata !DIExpression()), !dbg !17018
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17019
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !17021
  %1 = load i8*, i8** %init_name, align 8, !dbg !17021
  %tobool = icmp ne i8* %1, null, !dbg !17019
  br i1 %tobool, label %if.then, label %if.end, !dbg !17022

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17023
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !17024
  %3 = load i8*, i8** %init_name1, align 8, !dbg !17024
  store i8* %3, i8** %retval, align 8, !dbg !17025
  br label %return, !dbg !17025

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17026
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !17027
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #10, !dbg !17028
  store i8* %call, i8** %retval, align 8, !dbg !17029
  br label %return, !dbg !17029

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !17030
  ret i8* %5, !dbg !17030
}

; Function Attrs: noredzone
declare dso_local void @scsi_remove_device(%struct.scsi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !17031 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !17036, metadata !DIExpression()), !dbg !17037
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !17038
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !17039
  %1 = load i8*, i8** %name, align 8, !dbg !17039
  ret i8* %1, !dbg !17040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_link_max_devices(%struct.ata_link* %link) #0 !dbg !17041 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !17044, metadata !DIExpression()), !dbg !17045
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !17046
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %0) #10, !dbg !17048
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !17049

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !17050
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !17051
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !17051
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 3, !dbg !17052
  %3 = load i64, i64* %flags, align 8, !dbg !17052
  %and = and i64 %3, 1, !dbg !17053
  %tobool = icmp ne i64 %and, 0, !dbg !17053
  br i1 %tobool, label %if.then, label %if.end, !dbg !17054

if.then:                                          ; preds = %land.lhs.true
  store i32 2, i32* %retval, align 4, !dbg !17055
  br label %return, !dbg !17055

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !17056
  br label %return, !dbg !17056

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !17057
  ret i32 %4, !dbg !17057
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { nounwind readnone }
attributes #14 = { cold noredzone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!7007}
!llvm.module.flags = !{!7008, !7009, !7010, !7011}
!llvm.ident = !{!7012}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dev_attr_unload_heads", scope: !2, file: !3, line: 187, type: !6317, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !975, globals: !6950, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/ata/libata-scsi.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !31, !35, !47, !54, !59, !65, !70, !76, !83, !89, !98, !106, !112, !118, !125, !132, !146, !154, !165, !172, !182, !197, !205, !210, !448, !860, !873, !878, !884, !889, !896, !917, !932, !942}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !19, line: 118, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !25, line: 19, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !19, line: 293, baseType: !7, size: 32, elements: !32)
!32 = !{!33, !34}
!33 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !36, line: 49, baseType: !7, size: 32, elements: !37)
!36 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46}
!38 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !48, line: 502, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !19, line: 315, baseType: !7, size: 32, elements: !55)
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !60, line: 546, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64}
!62 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !66, line: 65, baseType: !7, size: 32, elements: !67)
!66 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!67 = !{!68, !69}
!68 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !71, line: 16, baseType: !7, size: 32, elements: !72)
!71 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!72 = !{!73, !74, !75}
!73 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !77, line: 59, baseType: !7, size: 32, elements: !78)
!77 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !84, line: 54, baseType: !7, size: 32, elements: !85)
!84 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!85 = !{!86, !87, !88}
!86 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!88 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !90, line: 296, baseType: !7, size: 32, elements: !91)
!90 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!91 = !{!92, !93, !94, !95, !96, !97}
!92 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!95 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!96 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!97 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !99, line: 9, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!100 = !{!101, !102, !103, !104, !105}
!101 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !107, line: 26, baseType: !7, size: 32, elements: !108)
!107 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!108 = !{!109, !110, !111}
!109 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!110 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!111 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!112 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !113, line: 44, baseType: !7, size: 32, elements: !114)
!113 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!114 = !{!115, !116, !117}
!115 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !119, line: 343, baseType: !7, size: 32, elements: !120)
!119 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!120 = !{!121, !122, !123, !124}
!121 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !48, line: 524, baseType: !7, size: 32, elements: !126)
!126 = !{!127, !128, !129, !130, !131}
!127 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!130 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!131 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !133, line: 76, baseType: !7, size: 32, elements: !134)
!133 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!134 = !{!135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145}
!135 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!139 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!140 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!141 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!142 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!143 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!144 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!145 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !147, line: 276, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152, !153}
!149 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !147, line: 36, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157, !158, !159, !160, !161, !162, !163, !164}
!156 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!163 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!164 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !166, line: 5, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!167 = !{!168, !169, !170, !171}
!168 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!170 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!171 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !173, line: 514, baseType: !7, size: 32, elements: !174)
!173 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!174 = !{!175, !176, !177, !178, !179, !180, !181}
!175 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!176 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!177 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!178 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!179 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!180 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!181 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_completion_errors", file: !183, line: 487, baseType: !7, size: 32, elements: !184)
!183 = !DIFile(filename: "./include/linux/libata.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196}
!185 = !DIEnumerator(name: "AC_ERR_OK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "AC_ERR_DEV", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "AC_ERR_HSM", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "AC_ERR_TIMEOUT", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "AC_ERR_MEDIA", value: 8, isUnsigned: true)
!190 = !DIEnumerator(name: "AC_ERR_ATA_BUS", value: 16, isUnsigned: true)
!191 = !DIEnumerator(name: "AC_ERR_HOST_BUS", value: 32, isUnsigned: true)
!192 = !DIEnumerator(name: "AC_ERR_SYSTEM", value: 64, isUnsigned: true)
!193 = !DIEnumerator(name: "AC_ERR_INVALID", value: 128, isUnsigned: true)
!194 = !DIEnumerator(name: "AC_ERR_OTHER", value: 256, isUnsigned: true)
!195 = !DIEnumerator(name: "AC_ERR_NODEV_HINT", value: 512, isUnsigned: true)
!196 = !DIEnumerator(name: "AC_ERR_NCQ", value: 1024, isUnsigned: true)
!197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_lpm_policy", file: !183, line: 506, baseType: !7, size: 32, elements: !198)
!198 = !{!199, !200, !201, !202, !203, !204}
!199 = !DIEnumerator(name: "ATA_LPM_UNKNOWN", value: 0, isUnsigned: true)
!200 = !DIEnumerator(name: "ATA_LPM_MAX_POWER", value: 1, isUnsigned: true)
!201 = !DIEnumerator(name: "ATA_LPM_MED_POWER", value: 2, isUnsigned: true)
!202 = !DIEnumerator(name: "ATA_LPM_MED_POWER_WITH_DIPM", value: 3, isUnsigned: true)
!203 = !DIEnumerator(name: "ATA_LPM_MIN_POWER_WITH_PARTIAL", value: 4, isUnsigned: true)
!204 = !DIEnumerator(name: "ATA_LPM_MIN_POWER", value: 5, isUnsigned: true)
!205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sw_activity", file: !183, line: 544, baseType: !7, size: 32, elements: !206)
!206 = !{!207, !208, !209}
!207 = !DIEnumerator(name: "OFF", value: 0, isUnsigned: true)
!208 = !DIEnumerator(name: "BLINK_ON", value: 1, isUnsigned: true)
!209 = !DIEnumerator(name: "BLINK_OFF", value: 2, isUnsigned: true)
!210 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 106, baseType: !211, size: 32, elements: !212)
!211 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447}
!213 = !DIEnumerator(name: "LIBATA_MAX_PRD", value: 128)
!214 = !DIEnumerator(name: "LIBATA_DUMB_MAX_PRD", value: 64)
!215 = !DIEnumerator(name: "ATA_DEF_QUEUE", value: 1)
!216 = !DIEnumerator(name: "ATA_MAX_QUEUE", value: 32)
!217 = !DIEnumerator(name: "ATA_TAG_INTERNAL", value: 32)
!218 = !DIEnumerator(name: "ATA_SHORT_PAUSE", value: 16)
!219 = !DIEnumerator(name: "ATAPI_MAX_DRAIN", value: 16384)
!220 = !DIEnumerator(name: "ATA_ALL_DEVICES", value: 3)
!221 = !DIEnumerator(name: "ATA_SHT_EMULATED", value: 1)
!222 = !DIEnumerator(name: "ATA_SHT_THIS_ID", value: -1)
!223 = !DIEnumerator(name: "ATA_TFLAG_LBA48", value: 1)
!224 = !DIEnumerator(name: "ATA_TFLAG_ISADDR", value: 2)
!225 = !DIEnumerator(name: "ATA_TFLAG_DEVICE", value: 4)
!226 = !DIEnumerator(name: "ATA_TFLAG_WRITE", value: 8)
!227 = !DIEnumerator(name: "ATA_TFLAG_LBA", value: 16)
!228 = !DIEnumerator(name: "ATA_TFLAG_FUA", value: 32)
!229 = !DIEnumerator(name: "ATA_TFLAG_POLLING", value: 64)
!230 = !DIEnumerator(name: "ATA_DFLAG_LBA", value: 1)
!231 = !DIEnumerator(name: "ATA_DFLAG_LBA48", value: 2)
!232 = !DIEnumerator(name: "ATA_DFLAG_CDB_INTR", value: 4)
!233 = !DIEnumerator(name: "ATA_DFLAG_NCQ", value: 8)
!234 = !DIEnumerator(name: "ATA_DFLAG_FLUSH_EXT", value: 16)
!235 = !DIEnumerator(name: "ATA_DFLAG_ACPI_PENDING", value: 32)
!236 = !DIEnumerator(name: "ATA_DFLAG_ACPI_FAILED", value: 64)
!237 = !DIEnumerator(name: "ATA_DFLAG_AN", value: 128)
!238 = !DIEnumerator(name: "ATA_DFLAG_TRUSTED", value: 256)
!239 = !DIEnumerator(name: "ATA_DFLAG_DMADIR", value: 1024)
!240 = !DIEnumerator(name: "ATA_DFLAG_CFG_MASK", value: 4095)
!241 = !DIEnumerator(name: "ATA_DFLAG_PIO", value: 4096)
!242 = !DIEnumerator(name: "ATA_DFLAG_NCQ_OFF", value: 8192)
!243 = !DIEnumerator(name: "ATA_DFLAG_SLEEPING", value: 32768)
!244 = !DIEnumerator(name: "ATA_DFLAG_DUBIOUS_XFER", value: 65536)
!245 = !DIEnumerator(name: "ATA_DFLAG_NO_UNLOAD", value: 131072)
!246 = !DIEnumerator(name: "ATA_DFLAG_UNLOCK_HPA", value: 262144)
!247 = !DIEnumerator(name: "ATA_DFLAG_NCQ_SEND_RECV", value: 524288)
!248 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO", value: 1048576)
!249 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO_ENABLE", value: 2097152)
!250 = !DIEnumerator(name: "ATA_DFLAG_INIT_MASK", value: 16777215)
!251 = !DIEnumerator(name: "ATA_DFLAG_DETACH", value: 16777216)
!252 = !DIEnumerator(name: "ATA_DFLAG_DETACHED", value: 33554432)
!253 = !DIEnumerator(name: "ATA_DFLAG_DA", value: 67108864)
!254 = !DIEnumerator(name: "ATA_DFLAG_DEVSLP", value: 134217728)
!255 = !DIEnumerator(name: "ATA_DFLAG_ACPI_DISABLED", value: 268435456)
!256 = !DIEnumerator(name: "ATA_DFLAG_D_SENSE", value: 536870912)
!257 = !DIEnumerator(name: "ATA_DFLAG_ZAC", value: 1073741824)
!258 = !DIEnumerator(name: "ATA_DEV_UNKNOWN", value: 0)
!259 = !DIEnumerator(name: "ATA_DEV_ATA", value: 1)
!260 = !DIEnumerator(name: "ATA_DEV_ATA_UNSUP", value: 2)
!261 = !DIEnumerator(name: "ATA_DEV_ATAPI", value: 3)
!262 = !DIEnumerator(name: "ATA_DEV_ATAPI_UNSUP", value: 4)
!263 = !DIEnumerator(name: "ATA_DEV_PMP", value: 5)
!264 = !DIEnumerator(name: "ATA_DEV_PMP_UNSUP", value: 6)
!265 = !DIEnumerator(name: "ATA_DEV_SEMB", value: 7)
!266 = !DIEnumerator(name: "ATA_DEV_SEMB_UNSUP", value: 8)
!267 = !DIEnumerator(name: "ATA_DEV_ZAC", value: 9)
!268 = !DIEnumerator(name: "ATA_DEV_ZAC_UNSUP", value: 10)
!269 = !DIEnumerator(name: "ATA_DEV_NONE", value: 11)
!270 = !DIEnumerator(name: "ATA_LFLAG_NO_HRST", value: 2)
!271 = !DIEnumerator(name: "ATA_LFLAG_NO_SRST", value: 4)
!272 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_ATA", value: 8)
!273 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_SEMB", value: 16)
!274 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_CLASS", value: 24)
!275 = !DIEnumerator(name: "ATA_LFLAG_NO_RETRY", value: 32)
!276 = !DIEnumerator(name: "ATA_LFLAG_DISABLED", value: 64)
!277 = !DIEnumerator(name: "ATA_LFLAG_SW_ACTIVITY", value: 128)
!278 = !DIEnumerator(name: "ATA_LFLAG_NO_LPM", value: 256)
!279 = !DIEnumerator(name: "ATA_LFLAG_RST_ONCE", value: 512)
!280 = !DIEnumerator(name: "ATA_LFLAG_CHANGED", value: 1024)
!281 = !DIEnumerator(name: "ATA_LFLAG_NO_DB_DELAY", value: 2048)
!282 = !DIEnumerator(name: "ATA_FLAG_SLAVE_POSS", value: 1)
!283 = !DIEnumerator(name: "ATA_FLAG_SATA", value: 2)
!284 = !DIEnumerator(name: "ATA_FLAG_NO_LPM", value: 4)
!285 = !DIEnumerator(name: "ATA_FLAG_NO_LOG_PAGE", value: 32)
!286 = !DIEnumerator(name: "ATA_FLAG_NO_ATAPI", value: 64)
!287 = !DIEnumerator(name: "ATA_FLAG_PIO_DMA", value: 128)
!288 = !DIEnumerator(name: "ATA_FLAG_PIO_LBA48", value: 256)
!289 = !DIEnumerator(name: "ATA_FLAG_PIO_POLLING", value: 512)
!290 = !DIEnumerator(name: "ATA_FLAG_NCQ", value: 1024)
!291 = !DIEnumerator(name: "ATA_FLAG_NO_POWEROFF_SPINDOWN", value: 2048)
!292 = !DIEnumerator(name: "ATA_FLAG_NO_HIBERNATE_SPINDOWN", value: 4096)
!293 = !DIEnumerator(name: "ATA_FLAG_DEBUGMSG", value: 8192)
!294 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AA", value: 16384)
!295 = !DIEnumerator(name: "ATA_FLAG_IGN_SIMPLEX", value: 32768)
!296 = !DIEnumerator(name: "ATA_FLAG_NO_IORDY", value: 65536)
!297 = !DIEnumerator(name: "ATA_FLAG_ACPI_SATA", value: 131072)
!298 = !DIEnumerator(name: "ATA_FLAG_AN", value: 262144)
!299 = !DIEnumerator(name: "ATA_FLAG_PMP", value: 524288)
!300 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AUX", value: 1048576)
!301 = !DIEnumerator(name: "ATA_FLAG_EM", value: 2097152)
!302 = !DIEnumerator(name: "ATA_FLAG_SW_ACTIVITY", value: 4194304)
!303 = !DIEnumerator(name: "ATA_FLAG_NO_DIPM", value: 8388608)
!304 = !DIEnumerator(name: "ATA_FLAG_SAS_HOST", value: 16777216)
!305 = !DIEnumerator(name: "ATA_PFLAG_EH_PENDING", value: 1)
!306 = !DIEnumerator(name: "ATA_PFLAG_EH_IN_PROGRESS", value: 2)
!307 = !DIEnumerator(name: "ATA_PFLAG_FROZEN", value: 4)
!308 = !DIEnumerator(name: "ATA_PFLAG_RECOVERED", value: 8)
!309 = !DIEnumerator(name: "ATA_PFLAG_LOADING", value: 16)
!310 = !DIEnumerator(name: "ATA_PFLAG_SCSI_HOTPLUG", value: 64)
!311 = !DIEnumerator(name: "ATA_PFLAG_INITIALIZING", value: 128)
!312 = !DIEnumerator(name: "ATA_PFLAG_RESETTING", value: 256)
!313 = !DIEnumerator(name: "ATA_PFLAG_UNLOADING", value: 512)
!314 = !DIEnumerator(name: "ATA_PFLAG_UNLOADED", value: 1024)
!315 = !DIEnumerator(name: "ATA_PFLAG_SUSPENDED", value: 131072)
!316 = !DIEnumerator(name: "ATA_PFLAG_PM_PENDING", value: 262144)
!317 = !DIEnumerator(name: "ATA_PFLAG_INIT_GTM_VALID", value: 524288)
!318 = !DIEnumerator(name: "ATA_PFLAG_PIO32", value: 1048576)
!319 = !DIEnumerator(name: "ATA_PFLAG_PIO32CHANGE", value: 2097152)
!320 = !DIEnumerator(name: "ATA_PFLAG_EXTERNAL", value: 4194304)
!321 = !DIEnumerator(name: "ATA_QCFLAG_ACTIVE", value: 1)
!322 = !DIEnumerator(name: "ATA_QCFLAG_DMAMAP", value: 2)
!323 = !DIEnumerator(name: "ATA_QCFLAG_IO", value: 8)
!324 = !DIEnumerator(name: "ATA_QCFLAG_RESULT_TF", value: 16)
!325 = !DIEnumerator(name: "ATA_QCFLAG_CLEAR_EXCL", value: 32)
!326 = !DIEnumerator(name: "ATA_QCFLAG_QUIET", value: 64)
!327 = !DIEnumerator(name: "ATA_QCFLAG_RETRY", value: 128)
!328 = !DIEnumerator(name: "ATA_QCFLAG_FAILED", value: 65536)
!329 = !DIEnumerator(name: "ATA_QCFLAG_SENSE_VALID", value: 131072)
!330 = !DIEnumerator(name: "ATA_QCFLAG_EH_SCHEDULED", value: 262144)
!331 = !DIEnumerator(name: "ATA_HOST_SIMPLEX", value: 1)
!332 = !DIEnumerator(name: "ATA_HOST_STARTED", value: 2)
!333 = !DIEnumerator(name: "ATA_HOST_PARALLEL_SCAN", value: 4)
!334 = !DIEnumerator(name: "ATA_HOST_IGNORE_ATA", value: 8)
!335 = !DIEnumerator(name: "ATA_TMOUT_BOOT", value: 30000)
!336 = !DIEnumerator(name: "ATA_TMOUT_BOOT_QUICK", value: 7000)
!337 = !DIEnumerator(name: "ATA_TMOUT_INTERNAL_QUICK", value: 5000)
!338 = !DIEnumerator(name: "ATA_TMOUT_MAX_PARK", value: 30000)
!339 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT_LONG", value: 2000)
!340 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT", value: 800)
!341 = !DIEnumerator(name: "ATA_WAIT_AFTER_RESET", value: 150)
!342 = !DIEnumerator(name: "ATA_TMOUT_PMP_SRST_WAIT", value: 5000)
!343 = !DIEnumerator(name: "ATA_TMOUT_SPURIOUS_PHY", value: 10000)
!344 = !DIEnumerator(name: "BUS_UNKNOWN", value: 0)
!345 = !DIEnumerator(name: "BUS_DMA", value: 1)
!346 = !DIEnumerator(name: "BUS_IDLE", value: 2)
!347 = !DIEnumerator(name: "BUS_NOINTR", value: 3)
!348 = !DIEnumerator(name: "BUS_NODATA", value: 4)
!349 = !DIEnumerator(name: "BUS_TIMER", value: 5)
!350 = !DIEnumerator(name: "BUS_PIO", value: 6)
!351 = !DIEnumerator(name: "BUS_EDD", value: 7)
!352 = !DIEnumerator(name: "BUS_IDENTIFY", value: 8)
!353 = !DIEnumerator(name: "BUS_PACKET", value: 9)
!354 = !DIEnumerator(name: "PORT_UNKNOWN", value: 0)
!355 = !DIEnumerator(name: "PORT_ENABLED", value: 1)
!356 = !DIEnumerator(name: "PORT_DISABLED", value: 2)
!357 = !DIEnumerator(name: "ATA_NR_PIO_MODES", value: 7)
!358 = !DIEnumerator(name: "ATA_NR_MWDMA_MODES", value: 5)
!359 = !DIEnumerator(name: "ATA_NR_UDMA_MODES", value: 8)
!360 = !DIEnumerator(name: "ATA_SHIFT_PIO", value: 0)
!361 = !DIEnumerator(name: "ATA_SHIFT_MWDMA", value: 7)
!362 = !DIEnumerator(name: "ATA_SHIFT_UDMA", value: 12)
!363 = !DIEnumerator(name: "ATA_SHIFT_PRIO", value: 6)
!364 = !DIEnumerator(name: "ATA_PRIO_HIGH", value: 2)
!365 = !DIEnumerator(name: "ATA_DMA_PAD_SZ", value: 4)
!366 = !DIEnumerator(name: "ATA_ERING_SIZE", value: 32)
!367 = !DIEnumerator(name: "ATA_DEFER_LINK", value: 1)
!368 = !DIEnumerator(name: "ATA_DEFER_PORT", value: 2)
!369 = !DIEnumerator(name: "ATA_EH_DESC_LEN", value: 80)
!370 = !DIEnumerator(name: "ATA_EH_REVALIDATE", value: 1)
!371 = !DIEnumerator(name: "ATA_EH_SOFTRESET", value: 2)
!372 = !DIEnumerator(name: "ATA_EH_HARDRESET", value: 4)
!373 = !DIEnumerator(name: "ATA_EH_RESET", value: 6)
!374 = !DIEnumerator(name: "ATA_EH_ENABLE_LINK", value: 8)
!375 = !DIEnumerator(name: "ATA_EH_PARK", value: 32)
!376 = !DIEnumerator(name: "ATA_EH_PERDEV_MASK", value: 33)
!377 = !DIEnumerator(name: "ATA_EH_ALL_ACTIONS", value: 15)
!378 = !DIEnumerator(name: "ATA_EHI_HOTPLUGGED", value: 1)
!379 = !DIEnumerator(name: "ATA_EHI_NO_AUTOPSY", value: 4)
!380 = !DIEnumerator(name: "ATA_EHI_QUIET", value: 8)
!381 = !DIEnumerator(name: "ATA_EHI_NO_RECOVERY", value: 16)
!382 = !DIEnumerator(name: "ATA_EHI_DID_SOFTRESET", value: 65536)
!383 = !DIEnumerator(name: "ATA_EHI_DID_HARDRESET", value: 131072)
!384 = !DIEnumerator(name: "ATA_EHI_PRINTINFO", value: 262144)
!385 = !DIEnumerator(name: "ATA_EHI_SETMODE", value: 524288)
!386 = !DIEnumerator(name: "ATA_EHI_POST_SETMODE", value: 1048576)
!387 = !DIEnumerator(name: "ATA_EHI_DID_RESET", value: 196608)
!388 = !DIEnumerator(name: "ATA_EHI_TO_SLAVE_MASK", value: 12)
!389 = !DIEnumerator(name: "ATA_EH_MAX_TRIES", value: 5)
!390 = !DIEnumerator(name: "ATA_LINK_RESUME_TRIES", value: 5)
!391 = !DIEnumerator(name: "ATA_PROBE_MAX_TRIES", value: 3)
!392 = !DIEnumerator(name: "ATA_EH_DEV_TRIES", value: 3)
!393 = !DIEnumerator(name: "ATA_EH_PMP_TRIES", value: 5)
!394 = !DIEnumerator(name: "ATA_EH_PMP_LINK_TRIES", value: 3)
!395 = !DIEnumerator(name: "SATA_PMP_RW_TIMEOUT", value: 3000)
!396 = !DIEnumerator(name: "ATA_EH_CMD_TIMEOUT_TABLE_SIZE", value: 6)
!397 = !DIEnumerator(name: "ATA_HORKAGE_DIAGNOSTIC", value: 1)
!398 = !DIEnumerator(name: "ATA_HORKAGE_NODMA", value: 2)
!399 = !DIEnumerator(name: "ATA_HORKAGE_NONCQ", value: 4)
!400 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_128", value: 8)
!401 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_HPA", value: 16)
!402 = !DIEnumerator(name: "ATA_HORKAGE_DISABLE", value: 32)
!403 = !DIEnumerator(name: "ATA_HORKAGE_HPA_SIZE", value: 64)
!404 = !DIEnumerator(name: "ATA_HORKAGE_IVB", value: 256)
!405 = !DIEnumerator(name: "ATA_HORKAGE_STUCK_ERR", value: 512)
!406 = !DIEnumerator(name: "ATA_HORKAGE_BRIDGE_OK", value: 1024)
!407 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_MOD16_DMA", value: 2048)
!408 = !DIEnumerator(name: "ATA_HORKAGE_FIRMWARE_WARN", value: 4096)
!409 = !DIEnumerator(name: "ATA_HORKAGE_1_5_GBPS", value: 8192)
!410 = !DIEnumerator(name: "ATA_HORKAGE_NOSETXFER", value: 16384)
!411 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_FPDMA_AA", value: 32768)
!412 = !DIEnumerator(name: "ATA_HORKAGE_DUMP_ID", value: 65536)
!413 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_LBA48", value: 131072)
!414 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_DMADIR", value: 262144)
!415 = !DIEnumerator(name: "ATA_HORKAGE_NO_NCQ_TRIM", value: 524288)
!416 = !DIEnumerator(name: "ATA_HORKAGE_NOLPM", value: 1048576)
!417 = !DIEnumerator(name: "ATA_HORKAGE_WD_BROKEN_LPM", value: 2097152)
!418 = !DIEnumerator(name: "ATA_HORKAGE_ZERO_AFTER_TRIM", value: 4194304)
!419 = !DIEnumerator(name: "ATA_HORKAGE_NO_DMA_LOG", value: 8388608)
!420 = !DIEnumerator(name: "ATA_HORKAGE_NOTRIM", value: 16777216)
!421 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_1024", value: 33554432)
!422 = !DIEnumerator(name: "ATA_HORKAGE_MAX_TRIM_128M", value: 67108864)
!423 = !DIEnumerator(name: "ATA_DMA_MASK_ATA", value: 1)
!424 = !DIEnumerator(name: "ATA_DMA_MASK_ATAPI", value: 2)
!425 = !DIEnumerator(name: "ATA_DMA_MASK_CFA", value: 4)
!426 = !DIEnumerator(name: "ATAPI_READ", value: 0)
!427 = !DIEnumerator(name: "ATAPI_WRITE", value: 1)
!428 = !DIEnumerator(name: "ATAPI_READ_CD", value: 2)
!429 = !DIEnumerator(name: "ATAPI_PASS_THRU", value: 3)
!430 = !DIEnumerator(name: "ATAPI_MISC", value: 4)
!431 = !DIEnumerator(name: "ATA_TIMING_SETUP", value: 1)
!432 = !DIEnumerator(name: "ATA_TIMING_ACT8B", value: 2)
!433 = !DIEnumerator(name: "ATA_TIMING_REC8B", value: 4)
!434 = !DIEnumerator(name: "ATA_TIMING_CYC8B", value: 8)
!435 = !DIEnumerator(name: "ATA_TIMING_8BIT", value: 14)
!436 = !DIEnumerator(name: "ATA_TIMING_ACTIVE", value: 16)
!437 = !DIEnumerator(name: "ATA_TIMING_RECOVER", value: 32)
!438 = !DIEnumerator(name: "ATA_TIMING_DMACK_HOLD", value: 64)
!439 = !DIEnumerator(name: "ATA_TIMING_CYCLE", value: 128)
!440 = !DIEnumerator(name: "ATA_TIMING_UDMA", value: 256)
!441 = !DIEnumerator(name: "ATA_TIMING_ALL", value: 511)
!442 = !DIEnumerator(name: "ATA_ACPI_FILTER_SETXFER", value: 1)
!443 = !DIEnumerator(name: "ATA_ACPI_FILTER_LOCK", value: 2)
!444 = !DIEnumerator(name: "ATA_ACPI_FILTER_DIPM", value: 4)
!445 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_OFFSET", value: 8)
!446 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_AA", value: 16)
!447 = !DIEnumerator(name: "ATA_ACPI_FILTER_DEFAULT", value: 7)
!448 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !449, line: 25, baseType: !211, size: 32, elements: !450)
!449 = !DIFile(filename: "./include/linux/ata.h", directory: "/home/lizy2001/genbc/linux")
!450 = !{!451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859}
!451 = !DIEnumerator(name: "ATA_MAX_DEVICES", value: 2)
!452 = !DIEnumerator(name: "ATA_MAX_PRD", value: 256)
!453 = !DIEnumerator(name: "ATA_SECT_SIZE", value: 512)
!454 = !DIEnumerator(name: "ATA_MAX_SECTORS_128", value: 128)
!455 = !DIEnumerator(name: "ATA_MAX_SECTORS", value: 256)
!456 = !DIEnumerator(name: "ATA_MAX_SECTORS_1024", value: 1024)
!457 = !DIEnumerator(name: "ATA_MAX_SECTORS_LBA48", value: 65535)
!458 = !DIEnumerator(name: "ATA_MAX_SECTORS_TAPE", value: 65535)
!459 = !DIEnumerator(name: "ATA_MAX_TRIM_RNUM", value: 64)
!460 = !DIEnumerator(name: "ATA_ID_WORDS", value: 256)
!461 = !DIEnumerator(name: "ATA_ID_CONFIG", value: 0)
!462 = !DIEnumerator(name: "ATA_ID_CYLS", value: 1)
!463 = !DIEnumerator(name: "ATA_ID_HEADS", value: 3)
!464 = !DIEnumerator(name: "ATA_ID_SECTORS", value: 6)
!465 = !DIEnumerator(name: "ATA_ID_SERNO", value: 10)
!466 = !DIEnumerator(name: "ATA_ID_BUF_SIZE", value: 21)
!467 = !DIEnumerator(name: "ATA_ID_FW_REV", value: 23)
!468 = !DIEnumerator(name: "ATA_ID_PROD", value: 27)
!469 = !DIEnumerator(name: "ATA_ID_MAX_MULTSECT", value: 47)
!470 = !DIEnumerator(name: "ATA_ID_DWORD_IO", value: 48)
!471 = !DIEnumerator(name: "ATA_ID_TRUSTED", value: 48)
!472 = !DIEnumerator(name: "ATA_ID_CAPABILITY", value: 49)
!473 = !DIEnumerator(name: "ATA_ID_OLD_PIO_MODES", value: 51)
!474 = !DIEnumerator(name: "ATA_ID_OLD_DMA_MODES", value: 52)
!475 = !DIEnumerator(name: "ATA_ID_FIELD_VALID", value: 53)
!476 = !DIEnumerator(name: "ATA_ID_CUR_CYLS", value: 54)
!477 = !DIEnumerator(name: "ATA_ID_CUR_HEADS", value: 55)
!478 = !DIEnumerator(name: "ATA_ID_CUR_SECTORS", value: 56)
!479 = !DIEnumerator(name: "ATA_ID_MULTSECT", value: 59)
!480 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY", value: 60)
!481 = !DIEnumerator(name: "ATA_ID_SWDMA_MODES", value: 62)
!482 = !DIEnumerator(name: "ATA_ID_MWDMA_MODES", value: 63)
!483 = !DIEnumerator(name: "ATA_ID_PIO_MODES", value: 64)
!484 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_MIN", value: 65)
!485 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_TIME", value: 66)
!486 = !DIEnumerator(name: "ATA_ID_EIDE_PIO", value: 67)
!487 = !DIEnumerator(name: "ATA_ID_EIDE_PIO_IORDY", value: 68)
!488 = !DIEnumerator(name: "ATA_ID_ADDITIONAL_SUPP", value: 69)
!489 = !DIEnumerator(name: "ATA_ID_QUEUE_DEPTH", value: 75)
!490 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY", value: 76)
!491 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY_2", value: 77)
!492 = !DIEnumerator(name: "ATA_ID_FEATURE_SUPP", value: 78)
!493 = !DIEnumerator(name: "ATA_ID_MAJOR_VER", value: 80)
!494 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_1", value: 82)
!495 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_2", value: 83)
!496 = !DIEnumerator(name: "ATA_ID_CFSSE", value: 84)
!497 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_1", value: 85)
!498 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_2", value: 86)
!499 = !DIEnumerator(name: "ATA_ID_CSF_DEFAULT", value: 87)
!500 = !DIEnumerator(name: "ATA_ID_UDMA_MODES", value: 88)
!501 = !DIEnumerator(name: "ATA_ID_HW_CONFIG", value: 93)
!502 = !DIEnumerator(name: "ATA_ID_SPG", value: 98)
!503 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY_2", value: 100)
!504 = !DIEnumerator(name: "ATA_ID_SECTOR_SIZE", value: 106)
!505 = !DIEnumerator(name: "ATA_ID_WWN", value: 108)
!506 = !DIEnumerator(name: "ATA_ID_LOGICAL_SECTOR_SIZE", value: 117)
!507 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_3", value: 119)
!508 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_4", value: 120)
!509 = !DIEnumerator(name: "ATA_ID_LAST_LUN", value: 126)
!510 = !DIEnumerator(name: "ATA_ID_DLF", value: 128)
!511 = !DIEnumerator(name: "ATA_ID_CSFO", value: 129)
!512 = !DIEnumerator(name: "ATA_ID_CFA_POWER", value: 160)
!513 = !DIEnumerator(name: "ATA_ID_CFA_KEY_MGMT", value: 162)
!514 = !DIEnumerator(name: "ATA_ID_CFA_MODES", value: 163)
!515 = !DIEnumerator(name: "ATA_ID_DATA_SET_MGMT", value: 169)
!516 = !DIEnumerator(name: "ATA_ID_SCT_CMD_XPORT", value: 206)
!517 = !DIEnumerator(name: "ATA_ID_ROT_SPEED", value: 217)
!518 = !DIEnumerator(name: "ATA_ID_PIO4", value: 2)
!519 = !DIEnumerator(name: "ATA_ID_SERNO_LEN", value: 20)
!520 = !DIEnumerator(name: "ATA_ID_FW_REV_LEN", value: 8)
!521 = !DIEnumerator(name: "ATA_ID_PROD_LEN", value: 40)
!522 = !DIEnumerator(name: "ATA_ID_WWN_LEN", value: 8)
!523 = !DIEnumerator(name: "ATA_PCI_CTL_OFS", value: 2)
!524 = !DIEnumerator(name: "ATA_PIO0", value: 1)
!525 = !DIEnumerator(name: "ATA_PIO1", value: 3)
!526 = !DIEnumerator(name: "ATA_PIO2", value: 7)
!527 = !DIEnumerator(name: "ATA_PIO3", value: 15)
!528 = !DIEnumerator(name: "ATA_PIO4", value: 31)
!529 = !DIEnumerator(name: "ATA_PIO5", value: 63)
!530 = !DIEnumerator(name: "ATA_PIO6", value: 127)
!531 = !DIEnumerator(name: "ATA_PIO4_ONLY", value: 16)
!532 = !DIEnumerator(name: "ATA_SWDMA0", value: 1)
!533 = !DIEnumerator(name: "ATA_SWDMA1", value: 3)
!534 = !DIEnumerator(name: "ATA_SWDMA2", value: 7)
!535 = !DIEnumerator(name: "ATA_SWDMA2_ONLY", value: 4)
!536 = !DIEnumerator(name: "ATA_MWDMA0", value: 1)
!537 = !DIEnumerator(name: "ATA_MWDMA1", value: 3)
!538 = !DIEnumerator(name: "ATA_MWDMA2", value: 7)
!539 = !DIEnumerator(name: "ATA_MWDMA3", value: 15)
!540 = !DIEnumerator(name: "ATA_MWDMA4", value: 31)
!541 = !DIEnumerator(name: "ATA_MWDMA12_ONLY", value: 6)
!542 = !DIEnumerator(name: "ATA_MWDMA2_ONLY", value: 4)
!543 = !DIEnumerator(name: "ATA_UDMA0", value: 1)
!544 = !DIEnumerator(name: "ATA_UDMA1", value: 3)
!545 = !DIEnumerator(name: "ATA_UDMA2", value: 7)
!546 = !DIEnumerator(name: "ATA_UDMA3", value: 15)
!547 = !DIEnumerator(name: "ATA_UDMA4", value: 31)
!548 = !DIEnumerator(name: "ATA_UDMA5", value: 63)
!549 = !DIEnumerator(name: "ATA_UDMA6", value: 127)
!550 = !DIEnumerator(name: "ATA_UDMA7", value: 255)
!551 = !DIEnumerator(name: "ATA_UDMA24_ONLY", value: 20)
!552 = !DIEnumerator(name: "ATA_UDMA_MASK_40C", value: 7)
!553 = !DIEnumerator(name: "ATA_PRD_SZ", value: 8)
!554 = !DIEnumerator(name: "ATA_PRD_TBL_SZ", value: 2048)
!555 = !DIEnumerator(name: "ATA_PRD_EOT", value: -2147483648)
!556 = !DIEnumerator(name: "ATA_DMA_TABLE_OFS", value: 4)
!557 = !DIEnumerator(name: "ATA_DMA_STATUS", value: 2)
!558 = !DIEnumerator(name: "ATA_DMA_CMD", value: 0)
!559 = !DIEnumerator(name: "ATA_DMA_WR", value: 8)
!560 = !DIEnumerator(name: "ATA_DMA_START", value: 1)
!561 = !DIEnumerator(name: "ATA_DMA_INTR", value: 4)
!562 = !DIEnumerator(name: "ATA_DMA_ERR", value: 2)
!563 = !DIEnumerator(name: "ATA_DMA_ACTIVE", value: 1)
!564 = !DIEnumerator(name: "ATA_HOB", value: 128)
!565 = !DIEnumerator(name: "ATA_NIEN", value: 2)
!566 = !DIEnumerator(name: "ATA_LBA", value: 64)
!567 = !DIEnumerator(name: "ATA_DEV1", value: 16)
!568 = !DIEnumerator(name: "ATA_DEVICE_OBS", value: 160)
!569 = !DIEnumerator(name: "ATA_DEVCTL_OBS", value: 8)
!570 = !DIEnumerator(name: "ATA_BUSY", value: 128)
!571 = !DIEnumerator(name: "ATA_DRDY", value: 64)
!572 = !DIEnumerator(name: "ATA_DF", value: 32)
!573 = !DIEnumerator(name: "ATA_DSC", value: 16)
!574 = !DIEnumerator(name: "ATA_DRQ", value: 8)
!575 = !DIEnumerator(name: "ATA_CORR", value: 4)
!576 = !DIEnumerator(name: "ATA_SENSE", value: 2)
!577 = !DIEnumerator(name: "ATA_ERR", value: 1)
!578 = !DIEnumerator(name: "ATA_SRST", value: 4)
!579 = !DIEnumerator(name: "ATA_ICRC", value: 128)
!580 = !DIEnumerator(name: "ATA_BBK", value: 128)
!581 = !DIEnumerator(name: "ATA_UNC", value: 64)
!582 = !DIEnumerator(name: "ATA_MC", value: 32)
!583 = !DIEnumerator(name: "ATA_IDNF", value: 16)
!584 = !DIEnumerator(name: "ATA_MCR", value: 8)
!585 = !DIEnumerator(name: "ATA_ABORTED", value: 4)
!586 = !DIEnumerator(name: "ATA_TRK0NF", value: 2)
!587 = !DIEnumerator(name: "ATA_AMNF", value: 1)
!588 = !DIEnumerator(name: "ATAPI_LFS", value: 240)
!589 = !DIEnumerator(name: "ATAPI_EOM", value: 2)
!590 = !DIEnumerator(name: "ATAPI_ILI", value: 1)
!591 = !DIEnumerator(name: "ATAPI_IO", value: 2)
!592 = !DIEnumerator(name: "ATAPI_COD", value: 1)
!593 = !DIEnumerator(name: "ATA_REG_DATA", value: 0)
!594 = !DIEnumerator(name: "ATA_REG_ERR", value: 1)
!595 = !DIEnumerator(name: "ATA_REG_NSECT", value: 2)
!596 = !DIEnumerator(name: "ATA_REG_LBAL", value: 3)
!597 = !DIEnumerator(name: "ATA_REG_LBAM", value: 4)
!598 = !DIEnumerator(name: "ATA_REG_LBAH", value: 5)
!599 = !DIEnumerator(name: "ATA_REG_DEVICE", value: 6)
!600 = !DIEnumerator(name: "ATA_REG_STATUS", value: 7)
!601 = !DIEnumerator(name: "ATA_REG_FEATURE", value: 1)
!602 = !DIEnumerator(name: "ATA_REG_CMD", value: 7)
!603 = !DIEnumerator(name: "ATA_REG_BYTEL", value: 4)
!604 = !DIEnumerator(name: "ATA_REG_BYTEH", value: 5)
!605 = !DIEnumerator(name: "ATA_REG_DEVSEL", value: 6)
!606 = !DIEnumerator(name: "ATA_REG_IRQ", value: 2)
!607 = !DIEnumerator(name: "ATA_CMD_DEV_RESET", value: 8)
!608 = !DIEnumerator(name: "ATA_CMD_CHK_POWER", value: 229)
!609 = !DIEnumerator(name: "ATA_CMD_STANDBY", value: 226)
!610 = !DIEnumerator(name: "ATA_CMD_IDLE", value: 227)
!611 = !DIEnumerator(name: "ATA_CMD_EDD", value: 144)
!612 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO", value: 146)
!613 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO_DMA", value: 147)
!614 = !DIEnumerator(name: "ATA_CMD_NOP", value: 0)
!615 = !DIEnumerator(name: "ATA_CMD_FLUSH", value: 231)
!616 = !DIEnumerator(name: "ATA_CMD_FLUSH_EXT", value: 234)
!617 = !DIEnumerator(name: "ATA_CMD_ID_ATA", value: 236)
!618 = !DIEnumerator(name: "ATA_CMD_ID_ATAPI", value: 161)
!619 = !DIEnumerator(name: "ATA_CMD_SERVICE", value: 162)
!620 = !DIEnumerator(name: "ATA_CMD_READ", value: 200)
!621 = !DIEnumerator(name: "ATA_CMD_READ_EXT", value: 37)
!622 = !DIEnumerator(name: "ATA_CMD_READ_QUEUED", value: 38)
!623 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_EXT", value: 43)
!624 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_DMA_EXT", value: 42)
!625 = !DIEnumerator(name: "ATA_CMD_WRITE", value: 202)
!626 = !DIEnumerator(name: "ATA_CMD_WRITE_EXT", value: 53)
!627 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED", value: 54)
!628 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_EXT", value: 59)
!629 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_DMA_EXT", value: 58)
!630 = !DIEnumerator(name: "ATA_CMD_WRITE_FUA_EXT", value: 61)
!631 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED_FUA_EXT", value: 62)
!632 = !DIEnumerator(name: "ATA_CMD_FPDMA_READ", value: 96)
!633 = !DIEnumerator(name: "ATA_CMD_FPDMA_WRITE", value: 97)
!634 = !DIEnumerator(name: "ATA_CMD_NCQ_NON_DATA", value: 99)
!635 = !DIEnumerator(name: "ATA_CMD_FPDMA_SEND", value: 100)
!636 = !DIEnumerator(name: "ATA_CMD_FPDMA_RECV", value: 101)
!637 = !DIEnumerator(name: "ATA_CMD_PIO_READ", value: 32)
!638 = !DIEnumerator(name: "ATA_CMD_PIO_READ_EXT", value: 36)
!639 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE", value: 48)
!640 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE_EXT", value: 52)
!641 = !DIEnumerator(name: "ATA_CMD_READ_MULTI", value: 196)
!642 = !DIEnumerator(name: "ATA_CMD_READ_MULTI_EXT", value: 41)
!643 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI", value: 197)
!644 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_EXT", value: 57)
!645 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_FUA_EXT", value: 206)
!646 = !DIEnumerator(name: "ATA_CMD_SET_FEATURES", value: 239)
!647 = !DIEnumerator(name: "ATA_CMD_SET_MULTI", value: 198)
!648 = !DIEnumerator(name: "ATA_CMD_PACKET", value: 160)
!649 = !DIEnumerator(name: "ATA_CMD_VERIFY", value: 64)
!650 = !DIEnumerator(name: "ATA_CMD_VERIFY_EXT", value: 66)
!651 = !DIEnumerator(name: "ATA_CMD_WRITE_UNCORR_EXT", value: 69)
!652 = !DIEnumerator(name: "ATA_CMD_STANDBYNOW1", value: 224)
!653 = !DIEnumerator(name: "ATA_CMD_IDLEIMMEDIATE", value: 225)
!654 = !DIEnumerator(name: "ATA_CMD_SLEEP", value: 230)
!655 = !DIEnumerator(name: "ATA_CMD_INIT_DEV_PARAMS", value: 145)
!656 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX", value: 248)
!657 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX_EXT", value: 39)
!658 = !DIEnumerator(name: "ATA_CMD_SET_MAX", value: 249)
!659 = !DIEnumerator(name: "ATA_CMD_SET_MAX_EXT", value: 55)
!660 = !DIEnumerator(name: "ATA_CMD_READ_LOG_EXT", value: 47)
!661 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_EXT", value: 63)
!662 = !DIEnumerator(name: "ATA_CMD_READ_LOG_DMA_EXT", value: 71)
!663 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_DMA_EXT", value: 87)
!664 = !DIEnumerator(name: "ATA_CMD_TRUSTED_NONDATA", value: 91)
!665 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV", value: 92)
!666 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV_DMA", value: 93)
!667 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND", value: 94)
!668 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND_DMA", value: 95)
!669 = !DIEnumerator(name: "ATA_CMD_PMP_READ", value: 228)
!670 = !DIEnumerator(name: "ATA_CMD_PMP_READ_DMA", value: 233)
!671 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE", value: 232)
!672 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE_DMA", value: 235)
!673 = !DIEnumerator(name: "ATA_CMD_CONF_OVERLAY", value: 177)
!674 = !DIEnumerator(name: "ATA_CMD_SEC_SET_PASS", value: 241)
!675 = !DIEnumerator(name: "ATA_CMD_SEC_UNLOCK", value: 242)
!676 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_PREP", value: 243)
!677 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_UNIT", value: 244)
!678 = !DIEnumerator(name: "ATA_CMD_SEC_FREEZE_LOCK", value: 245)
!679 = !DIEnumerator(name: "ATA_CMD_SEC_DISABLE_PASS", value: 246)
!680 = !DIEnumerator(name: "ATA_CMD_CONFIG_STREAM", value: 81)
!681 = !DIEnumerator(name: "ATA_CMD_SMART", value: 176)
!682 = !DIEnumerator(name: "ATA_CMD_MEDIA_LOCK", value: 222)
!683 = !DIEnumerator(name: "ATA_CMD_MEDIA_UNLOCK", value: 223)
!684 = !DIEnumerator(name: "ATA_CMD_DSM", value: 6)
!685 = !DIEnumerator(name: "ATA_CMD_CHK_MED_CRD_TYP", value: 209)
!686 = !DIEnumerator(name: "ATA_CMD_CFA_REQ_EXT_ERR", value: 3)
!687 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_NE", value: 56)
!688 = !DIEnumerator(name: "ATA_CMD_CFA_TRANS_SECT", value: 135)
!689 = !DIEnumerator(name: "ATA_CMD_CFA_ERASE", value: 192)
!690 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_MULT_NE", value: 205)
!691 = !DIEnumerator(name: "ATA_CMD_REQ_SENSE_DATA", value: 11)
!692 = !DIEnumerator(name: "ATA_CMD_SANITIZE_DEVICE", value: 180)
!693 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_IN", value: 74)
!694 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_OUT", value: 159)
!695 = !DIEnumerator(name: "ATA_CMD_RESTORE", value: 16)
!696 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_RD_LOG_DMA_EXT", value: 1)
!697 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_ZAC_MGMT_IN", value: 2)
!698 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_DSM", value: 0)
!699 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_WR_LOG_DMA_EXT", value: 2)
!700 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ABORT_QUEUE", value: 0)
!701 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_SET_FEATURES", value: 5)
!702 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZERO_EXT", value: 6)
!703 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 7)
!704 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_IN_REPORT_ZONES", value: 0)
!705 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_CLOSE_ZONE", value: 1)
!706 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_FINISH_ZONE", value: 2)
!707 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_OPEN_ZONE", value: 3)
!708 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_RESET_WRITE_POINTER", value: 4)
!709 = !DIEnumerator(name: "ATA_LOG_DIRECTORY", value: 0)
!710 = !DIEnumerator(name: "ATA_LOG_SATA_NCQ", value: 16)
!711 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA", value: 18)
!712 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV", value: 19)
!713 = !DIEnumerator(name: "ATA_LOG_IDENTIFY_DEVICE", value: 48)
!714 = !DIEnumerator(name: "ATA_LOG_SECURITY", value: 6)
!715 = !DIEnumerator(name: "ATA_LOG_SATA_SETTINGS", value: 8)
!716 = !DIEnumerator(name: "ATA_LOG_ZONED_INFORMATION", value: 9)
!717 = !DIEnumerator(name: "ATA_LOG_DEVSLP_OFFSET", value: 48)
!718 = !DIEnumerator(name: "ATA_LOG_DEVSLP_SIZE", value: 8)
!719 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT", value: 0)
!720 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT_MASK", value: 31)
!721 = !DIEnumerator(name: "ATA_LOG_DEVSLP_DETO", value: 1)
!722 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID", value: 7)
!723 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID_MASK", value: 128)
!724 = !DIEnumerator(name: "ATA_LOG_NCQ_PRIO_OFFSET", value: 9)
!725 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_OFFSET", value: 0)
!726 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_DSM", value: 1)
!727 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_OFFSET", value: 4)
!728 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_TRIM", value: 1)
!729 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_OFFSET", value: 8)
!730 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_SUPPORTED", value: 1)
!731 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_OFFSET", value: 12)
!732 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_SUPPORTED", value: 1)
!733 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OFFSET", value: 16)
!734 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OUT_SUPPORTED", value: 1)
!735 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_IN_SUPPORTED", value: 2)
!736 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SIZE", value: 20)
!737 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SUBCMDS_OFFSET", value: 0)
!738 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_OFFSET", value: 0)
!739 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NCQ", value: 1)
!740 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_ALL", value: 2)
!741 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_STREAMING", value: 4)
!742 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NON_STREAMING", value: 8)
!743 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_SELECTED", value: 16)
!744 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OFFSET", value: 28)
!745 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 1)
!746 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SIZE", value: 64)
!747 = !DIEnumerator(name: "ATA_CMD_READ_LONG", value: 34)
!748 = !DIEnumerator(name: "ATA_CMD_READ_LONG_ONCE", value: 35)
!749 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG", value: 50)
!750 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG_ONCE", value: 51)
!751 = !DIEnumerator(name: "SETFEATURES_XFER", value: 3)
!752 = !DIEnumerator(name: "XFER_UDMA_7", value: 71)
!753 = !DIEnumerator(name: "XFER_UDMA_6", value: 70)
!754 = !DIEnumerator(name: "XFER_UDMA_5", value: 69)
!755 = !DIEnumerator(name: "XFER_UDMA_4", value: 68)
!756 = !DIEnumerator(name: "XFER_UDMA_3", value: 67)
!757 = !DIEnumerator(name: "XFER_UDMA_2", value: 66)
!758 = !DIEnumerator(name: "XFER_UDMA_1", value: 65)
!759 = !DIEnumerator(name: "XFER_UDMA_0", value: 64)
!760 = !DIEnumerator(name: "XFER_MW_DMA_4", value: 36)
!761 = !DIEnumerator(name: "XFER_MW_DMA_3", value: 35)
!762 = !DIEnumerator(name: "XFER_MW_DMA_2", value: 34)
!763 = !DIEnumerator(name: "XFER_MW_DMA_1", value: 33)
!764 = !DIEnumerator(name: "XFER_MW_DMA_0", value: 32)
!765 = !DIEnumerator(name: "XFER_SW_DMA_2", value: 18)
!766 = !DIEnumerator(name: "XFER_SW_DMA_1", value: 17)
!767 = !DIEnumerator(name: "XFER_SW_DMA_0", value: 16)
!768 = !DIEnumerator(name: "XFER_PIO_6", value: 14)
!769 = !DIEnumerator(name: "XFER_PIO_5", value: 13)
!770 = !DIEnumerator(name: "XFER_PIO_4", value: 12)
!771 = !DIEnumerator(name: "XFER_PIO_3", value: 11)
!772 = !DIEnumerator(name: "XFER_PIO_2", value: 10)
!773 = !DIEnumerator(name: "XFER_PIO_1", value: 9)
!774 = !DIEnumerator(name: "XFER_PIO_0", value: 8)
!775 = !DIEnumerator(name: "XFER_PIO_SLOW", value: 0)
!776 = !DIEnumerator(name: "SETFEATURES_WC_ON", value: 2)
!777 = !DIEnumerator(name: "SETFEATURES_WC_OFF", value: 130)
!778 = !DIEnumerator(name: "SETFEATURES_RA_ON", value: 170)
!779 = !DIEnumerator(name: "SETFEATURES_RA_OFF", value: 85)
!780 = !DIEnumerator(name: "SETFEATURES_AAM_ON", value: 66)
!781 = !DIEnumerator(name: "SETFEATURES_AAM_OFF", value: 194)
!782 = !DIEnumerator(name: "SETFEATURES_SPINUP", value: 7)
!783 = !DIEnumerator(name: "SETFEATURES_SPINUP_TIMEOUT", value: 30000)
!784 = !DIEnumerator(name: "SETFEATURES_SATA_ENABLE", value: 16)
!785 = !DIEnumerator(name: "SETFEATURES_SATA_DISABLE", value: 144)
!786 = !DIEnumerator(name: "SATA_FPDMA_OFFSET", value: 1)
!787 = !DIEnumerator(name: "SATA_FPDMA_AA", value: 2)
!788 = !DIEnumerator(name: "SATA_DIPM", value: 3)
!789 = !DIEnumerator(name: "SATA_FPDMA_IN_ORDER", value: 4)
!790 = !DIEnumerator(name: "SATA_AN", value: 5)
!791 = !DIEnumerator(name: "SATA_SSP", value: 6)
!792 = !DIEnumerator(name: "SATA_DEVSLP", value: 9)
!793 = !DIEnumerator(name: "SETFEATURE_SENSE_DATA", value: 195)
!794 = !DIEnumerator(name: "ATA_SET_MAX_ADDR", value: 0)
!795 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD", value: 1)
!796 = !DIEnumerator(name: "ATA_SET_MAX_LOCK", value: 2)
!797 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK", value: 3)
!798 = !DIEnumerator(name: "ATA_SET_MAX_FREEZE_LOCK", value: 4)
!799 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD_DMA", value: 5)
!800 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK_DMA", value: 6)
!801 = !DIEnumerator(name: "ATA_DCO_RESTORE", value: 192)
!802 = !DIEnumerator(name: "ATA_DCO_FREEZE_LOCK", value: 193)
!803 = !DIEnumerator(name: "ATA_DCO_IDENTIFY", value: 194)
!804 = !DIEnumerator(name: "ATA_DCO_SET", value: 195)
!805 = !DIEnumerator(name: "ATA_SMART_ENABLE", value: 216)
!806 = !DIEnumerator(name: "ATA_SMART_READ_VALUES", value: 208)
!807 = !DIEnumerator(name: "ATA_SMART_READ_THRESHOLDS", value: 209)
!808 = !DIEnumerator(name: "ATA_DSM_TRIM", value: 1)
!809 = !DIEnumerator(name: "ATA_SMART_LBAM_PASS", value: 79)
!810 = !DIEnumerator(name: "ATA_SMART_LBAH_PASS", value: 194)
!811 = !DIEnumerator(name: "ATAPI_PKT_DMA", value: 1)
!812 = !DIEnumerator(name: "ATAPI_DMADIR", value: 4)
!813 = !DIEnumerator(name: "ATAPI_CDB_LEN", value: 16)
!814 = !DIEnumerator(name: "SATA_PMP_MAX_PORTS", value: 15)
!815 = !DIEnumerator(name: "SATA_PMP_CTRL_PORT", value: 15)
!816 = !DIEnumerator(name: "SATA_PMP_GSCR_DWORDS", value: 128)
!817 = !DIEnumerator(name: "SATA_PMP_GSCR_PROD_ID", value: 0)
!818 = !DIEnumerator(name: "SATA_PMP_GSCR_REV", value: 1)
!819 = !DIEnumerator(name: "SATA_PMP_GSCR_PORT_INFO", value: 2)
!820 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR", value: 32)
!821 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR_EN", value: 33)
!822 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT", value: 64)
!823 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT_EN", value: 96)
!824 = !DIEnumerator(name: "SATA_PMP_PSCR_STATUS", value: 0)
!825 = !DIEnumerator(name: "SATA_PMP_PSCR_ERROR", value: 1)
!826 = !DIEnumerator(name: "SATA_PMP_PSCR_CONTROL", value: 2)
!827 = !DIEnumerator(name: "SATA_PMP_FEAT_BIST", value: 1)
!828 = !DIEnumerator(name: "SATA_PMP_FEAT_PMREQ", value: 2)
!829 = !DIEnumerator(name: "SATA_PMP_FEAT_DYNSSC", value: 4)
!830 = !DIEnumerator(name: "SATA_PMP_FEAT_NOTIFY", value: 8)
!831 = !DIEnumerator(name: "ATA_CBL_NONE", value: 0)
!832 = !DIEnumerator(name: "ATA_CBL_PATA40", value: 1)
!833 = !DIEnumerator(name: "ATA_CBL_PATA80", value: 2)
!834 = !DIEnumerator(name: "ATA_CBL_PATA40_SHORT", value: 3)
!835 = !DIEnumerator(name: "ATA_CBL_PATA_UNK", value: 4)
!836 = !DIEnumerator(name: "ATA_CBL_PATA_IGN", value: 5)
!837 = !DIEnumerator(name: "ATA_CBL_SATA", value: 6)
!838 = !DIEnumerator(name: "SCR_STATUS", value: 0)
!839 = !DIEnumerator(name: "SCR_ERROR", value: 1)
!840 = !DIEnumerator(name: "SCR_CONTROL", value: 2)
!841 = !DIEnumerator(name: "SCR_ACTIVE", value: 3)
!842 = !DIEnumerator(name: "SCR_NOTIFICATION", value: 4)
!843 = !DIEnumerator(name: "SERR_DATA_RECOVERED", value: 1)
!844 = !DIEnumerator(name: "SERR_COMM_RECOVERED", value: 2)
!845 = !DIEnumerator(name: "SERR_DATA", value: 256)
!846 = !DIEnumerator(name: "SERR_PERSISTENT", value: 512)
!847 = !DIEnumerator(name: "SERR_PROTOCOL", value: 1024)
!848 = !DIEnumerator(name: "SERR_INTERNAL", value: 2048)
!849 = !DIEnumerator(name: "SERR_PHYRDY_CHG", value: 65536)
!850 = !DIEnumerator(name: "SERR_PHY_INT_ERR", value: 131072)
!851 = !DIEnumerator(name: "SERR_COMM_WAKE", value: 262144)
!852 = !DIEnumerator(name: "SERR_10B_8B_ERR", value: 524288)
!853 = !DIEnumerator(name: "SERR_DISPARITY", value: 1048576)
!854 = !DIEnumerator(name: "SERR_CRC", value: 2097152)
!855 = !DIEnumerator(name: "SERR_HANDSHAKE", value: 4194304)
!856 = !DIEnumerator(name: "SERR_LINK_SEQ_ERR", value: 8388608)
!857 = !DIEnumerator(name: "SERR_TRANS_ST_ERROR", value: 16777216)
!858 = !DIEnumerator(name: "SERR_UNRECOG_FIS", value: 33554432)
!859 = !DIEnumerator(name: "SERR_DEV_XCHG", value: 67108864)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_event", file: !147, line: 64, baseType: !7, size: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872}
!862 = !DIEnumerator(name: "SDEV_EVT_MEDIA_CHANGE", value: 1, isUnsigned: true)
!863 = !DIEnumerator(name: "SDEV_EVT_INQUIRY_CHANGE_REPORTED", value: 2, isUnsigned: true)
!864 = !DIEnumerator(name: "SDEV_EVT_CAPACITY_CHANGE_REPORTED", value: 3, isUnsigned: true)
!865 = !DIEnumerator(name: "SDEV_EVT_SOFT_THRESHOLD_REACHED_REPORTED", value: 4, isUnsigned: true)
!866 = !DIEnumerator(name: "SDEV_EVT_MODE_PARAMETER_CHANGE_REPORTED", value: 5, isUnsigned: true)
!867 = !DIEnumerator(name: "SDEV_EVT_LUN_CHANGE_REPORTED", value: 6, isUnsigned: true)
!868 = !DIEnumerator(name: "SDEV_EVT_ALUA_STATE_CHANGE_REPORTED", value: 7, isUnsigned: true)
!869 = !DIEnumerator(name: "SDEV_EVT_POWER_ON_RESET_OCCURRED", value: 8, isUnsigned: true)
!870 = !DIEnumerator(name: "SDEV_EVT_FIRST", value: 1, isUnsigned: true)
!871 = !DIEnumerator(name: "SDEV_EVT_LAST", value: 8, isUnsigned: true)
!872 = !DIEnumerator(name: "SDEV_EVT_MAXBITS", value: 9, isUnsigned: true)
!873 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_link_iter_mode", file: !183, line: 1637, baseType: !7, size: 32, elements: !874)
!874 = !{!875, !876, !877}
!875 = !DIEnumerator(name: "ATA_LITER_EDGE", value: 0, isUnsigned: true)
!876 = !DIEnumerator(name: "ATA_LITER_HOST_FIRST", value: 1, isUnsigned: true)
!877 = !DIEnumerator(name: "ATA_LITER_PMP_FIRST", value: 2, isUnsigned: true)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_dev_iter_mode", file: !183, line: 1645, baseType: !7, size: 32, elements: !879)
!879 = !{!880, !881, !882, !883}
!880 = !DIEnumerator(name: "ATA_DITER_ENABLED", value: 0, isUnsigned: true)
!881 = !DIEnumerator(name: "ATA_DITER_ENABLED_REVERSE", value: 1, isUnsigned: true)
!882 = !DIEnumerator(name: "ATA_DITER_ALL", value: 2, isUnsigned: true)
!883 = !DIEnumerator(name: "ATA_DITER_ALL_REVERSE", value: 3, isUnsigned: true)
!884 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !885, line: 10, baseType: !7, size: 32, elements: !886)
!885 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!886 = !{!887, !888}
!887 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!888 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !890, line: 305, baseType: !7, size: 32, elements: !891)
!890 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!891 = !{!892, !893, !894, !895}
!892 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!893 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!894 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!895 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!896 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "req_opf", file: !897, line: 336, baseType: !7, size: 32, elements: !898)
!897 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916}
!899 = !DIEnumerator(name: "REQ_OP_READ", value: 0, isUnsigned: true)
!900 = !DIEnumerator(name: "REQ_OP_WRITE", value: 1, isUnsigned: true)
!901 = !DIEnumerator(name: "REQ_OP_FLUSH", value: 2, isUnsigned: true)
!902 = !DIEnumerator(name: "REQ_OP_DISCARD", value: 3, isUnsigned: true)
!903 = !DIEnumerator(name: "REQ_OP_SECURE_ERASE", value: 5, isUnsigned: true)
!904 = !DIEnumerator(name: "REQ_OP_WRITE_SAME", value: 7, isUnsigned: true)
!905 = !DIEnumerator(name: "REQ_OP_WRITE_ZEROES", value: 9, isUnsigned: true)
!906 = !DIEnumerator(name: "REQ_OP_ZONE_OPEN", value: 10, isUnsigned: true)
!907 = !DIEnumerator(name: "REQ_OP_ZONE_CLOSE", value: 11, isUnsigned: true)
!908 = !DIEnumerator(name: "REQ_OP_ZONE_FINISH", value: 12, isUnsigned: true)
!909 = !DIEnumerator(name: "REQ_OP_ZONE_APPEND", value: 13, isUnsigned: true)
!910 = !DIEnumerator(name: "REQ_OP_ZONE_RESET", value: 15, isUnsigned: true)
!911 = !DIEnumerator(name: "REQ_OP_ZONE_RESET_ALL", value: 17, isUnsigned: true)
!912 = !DIEnumerator(name: "REQ_OP_SCSI_IN", value: 32, isUnsigned: true)
!913 = !DIEnumerator(name: "REQ_OP_SCSI_OUT", value: 33, isUnsigned: true)
!914 = !DIEnumerator(name: "REQ_OP_DRV_IN", value: 34, isUnsigned: true)
!915 = !DIEnumerator(name: "REQ_OP_DRV_OUT", value: 35, isUnsigned: true)
!916 = !DIEnumerator(name: "REQ_OP_LAST", value: 36, isUnsigned: true)
!917 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_prot_flags", file: !449, line: 520, baseType: !7, size: 32, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931}
!919 = !DIEnumerator(name: "ATA_PROT_FLAG_PIO", value: 1, isUnsigned: true)
!920 = !DIEnumerator(name: "ATA_PROT_FLAG_DMA", value: 2, isUnsigned: true)
!921 = !DIEnumerator(name: "ATA_PROT_FLAG_NCQ", value: 4, isUnsigned: true)
!922 = !DIEnumerator(name: "ATA_PROT_FLAG_ATAPI", value: 8, isUnsigned: true)
!923 = !DIEnumerator(name: "ATA_PROT_UNKNOWN", value: 255, isUnsigned: true)
!924 = !DIEnumerator(name: "ATA_PROT_NODATA", value: 0, isUnsigned: true)
!925 = !DIEnumerator(name: "ATA_PROT_PIO", value: 1, isUnsigned: true)
!926 = !DIEnumerator(name: "ATA_PROT_DMA", value: 2, isUnsigned: true)
!927 = !DIEnumerator(name: "ATA_PROT_NCQ_NODATA", value: 4, isUnsigned: true)
!928 = !DIEnumerator(name: "ATA_PROT_NCQ", value: 6, isUnsigned: true)
!929 = !DIEnumerator(name: "ATAPI_PROT_NODATA", value: 8, isUnsigned: true)
!930 = !DIEnumerator(name: "ATAPI_PROT_PIO", value: 9, isUnsigned: true)
!931 = !DIEnumerator(name: "ATAPI_PROT_DMA", value: 10, isUnsigned: true)
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "system_states", file: !933, line: 576, baseType: !7, size: 32, elements: !934)
!933 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!934 = !{!935, !936, !937, !938, !939, !940, !941}
!935 = !DIEnumerator(name: "SYSTEM_BOOTING", value: 0, isUnsigned: true)
!936 = !DIEnumerator(name: "SYSTEM_SCHEDULING", value: 1, isUnsigned: true)
!937 = !DIEnumerator(name: "SYSTEM_RUNNING", value: 2, isUnsigned: true)
!938 = !DIEnumerator(name: "SYSTEM_HALT", value: 3, isUnsigned: true)
!939 = !DIEnumerator(name: "SYSTEM_POWER_OFF", value: 4, isUnsigned: true)
!940 = !DIEnumerator(name: "SYSTEM_RESTART", value: 5, isUnsigned: true)
!941 = !DIEnumerator(name: "SYSTEM_SUSPEND", value: 6, isUnsigned: true)
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 30, baseType: !944, size: 64, elements: !945)
!943 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!944 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974}
!946 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!947 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!948 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!949 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!950 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!951 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!952 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!953 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!954 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!955 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!956 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!957 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!958 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!959 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!960 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!961 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!962 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!963 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!964 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!965 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!966 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!967 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!968 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!969 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!970 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!971 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!972 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!973 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!974 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!975 = !{!976, !981, !983, !984, !985, !986, !987, !988, !5987, !944, !6933, !211, !6934, !6936, !1049, !6937, !978, !6938, !6940, !1050, !6941, !6943, !1727, !1726, !6944, !6945, !6947, !6939, !6948, !6949, !1463, !7, !3867, !4944, !6942}
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !977, line: 23, baseType: !978)
!977 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !979, line: 31, baseType: !980)
!979 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!980 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !982, line: 107, baseType: !976)
!982 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !982, line: 148, baseType: !7)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port", file: !183, line: 811, size: 120832, elements: !990)
!990 = !{!991, !6442, !6839, !6840, !6841, !6842, !6843, !6844, !6845, !6863, !6864, !6865, !6866, !6867, !6874, !6875, !6876, !6877, !6878, !6879, !6883, !6884, !6885, !6886, !6887, !6888, !6889, !6890, !6891, !6892, !6898, !6899, !6900, !6901, !6902, !6903, !6904, !6905, !6906, !6907, !6908, !6909, !6910, !6911, !6912, !6913, !6914, !6917, !6918, !6919, !6929}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_host", scope: !989, file: !183, line: 812, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !173, line: 524, size: 16256, elements: !994)
!994 = !{!995, !1001, !1002, !1003, !1019, !1021, !1037, !1038, !5971, !5972, !5973, !6336, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413, !6414, !6415, !6416, !6417, !6418, !6419, !6420, !6421, !6422, !6423, !6424, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433, !6434, !6435, !6436, !6437, !6438, !6439, !6440, !6441}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !993, file: !173, line: 533, baseType: !996, size: 128)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !982, line: 178, size: 128, elements: !997)
!997 = !{!998, !1000}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !996, file: !982, line: 179, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !996, file: !982, line: 179, baseType: !999, size: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !993, file: !173, line: 534, baseType: !996, size: 128, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !993, file: !173, line: 536, baseType: !996, size: 128, offset: 256)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !993, file: !173, line: 538, baseType: !1004, offset: 384)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1005, line: 83, baseType: !1006)
!1005 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1005, line: 71, elements: !1007)
!1007 = !{!1008}
!1008 = !DIDerivedType(tag: DW_TAG_member, scope: !1006, file: !1005, line: 72, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !1005, line: 72, elements: !1010)
!1010 = !{!1011}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1009, file: !1005, line: 73, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1005, line: 20, elements: !1013)
!1013 = !{!1014}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1012, file: !1005, line: 21, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1016, line: 25, baseType: !1017)
!1016 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1016, line: 25, elements: !1018)
!1018 = !{}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !993, file: !173, line: 539, baseType: !1020, size: 64, offset: 384)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !993, file: !173, line: 541, baseType: !1022, size: 192, offset: 448)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1023, line: 53, size: 192, elements: !1024)
!1023 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1024 = !{!1025, !1035, !1036}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1022, file: !1023, line: 54, baseType: !1026, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1027, line: 13, baseType: !1028)
!1027 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !982, line: 175, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !982, line: 173, size: 64, elements: !1030)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1029, file: !982, line: 174, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !977, line: 22, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !979, line: 30, baseType: !1034)
!1034 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1022, file: !1023, line: 55, baseType: !1004, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1022, file: !1023, line: 59, baseType: !996, size: 128, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !993, file: !173, line: 543, baseType: !996, size: 128, offset: 640)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !993, file: !173, line: 544, baseType: !1039, size: 64, offset: 768)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1041, line: 640, size: 48640, elements: !1042)
!1041 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !{!1043, !1051, !1053, !1054, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1075, !1100, !1112, !1212, !1213, !1214, !1225, !1226, !1228, !1229, !5271, !5272, !5278, !5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5349, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5396, !5401, !5402, !5403, !5404, !5405, !5407, !5410, !5413, !5416, !5419, !5455, !5556, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5602, !5603, !5604, !5605, !5606, !5611, !5612, !5613, !5616, !5617, !5619, !5628, !5633, !5634, !5635, !5638, !5639, !5718, !5719, !5722, !5723, !5726, !5727, !5728, !5732, !5733, !5734, !5747, !5748, !5749, !5759, !5764, !5765, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1040, file: !1041, line: 646, baseType: !1044, size: 128)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1045, line: 56, size: 128, elements: !1046)
!1045 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1044, file: !1045, line: 57, baseType: !986, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1044, file: !1045, line: 58, baseType: !1049, size: 32, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !977, line: 21, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !979, line: 27, baseType: !7)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1040, file: !1041, line: 649, baseType: !1052, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !944)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1040, file: !1041, line: 657, baseType: !983, size: 64, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1040, file: !1041, line: 658, baseType: !1055, size: 32, offset: 256)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1056, line: 113, baseType: !1057)
!1056 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1056, line: 111, size: 32, elements: !1058)
!1058 = !{!1059}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1057, file: !1056, line: 112, baseType: !1060, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !982, line: 168, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !982, line: 166, size: 32, elements: !1062)
!1062 = !{!1063}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1061, file: !982, line: 167, baseType: !211, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1040, file: !1041, line: 660, baseType: !7, size: 32, offset: 288)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1040, file: !1041, line: 661, baseType: !7, size: 32, offset: 320)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1040, file: !1041, line: 684, baseType: !211, size: 32, offset: 352)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1040, file: !1041, line: 686, baseType: !211, size: 32, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1040, file: !1041, line: 687, baseType: !211, size: 32, offset: 416)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1040, file: !1041, line: 688, baseType: !211, size: 32, offset: 448)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1040, file: !1041, line: 689, baseType: !7, size: 32, offset: 480)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1040, file: !1041, line: 691, baseType: !1072, size: 64, offset: 512)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1041, line: 691, flags: DIFlagFwdDecl)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1040, file: !1041, line: 692, baseType: !1076, size: 832, offset: 576)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1041, line: 451, size: 832, elements: !1077)
!1077 = !{!1078, !1083, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1076, file: !1041, line: 453, baseType: !1079, size: 128)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1041, line: 325, size: 128, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1079, file: !1041, line: 326, baseType: !986, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1079, file: !1041, line: 327, baseType: !1049, size: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1076, file: !1041, line: 454, baseType: !1084, size: 192, align: 64, offset: 128)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1085, line: 24, size: 192, align: 64, elements: !1086)
!1085 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1086 = !{!1087, !1088, !1090}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1084, file: !1085, line: 25, baseType: !986, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1084, file: !1085, line: 26, baseType: !1089, size: 64, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1084, file: !1085, line: 27, baseType: !1089, size: 64, offset: 128)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1076, file: !1041, line: 455, baseType: !996, size: 128, offset: 320)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1076, file: !1041, line: 456, baseType: !7, size: 32, offset: 448)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1076, file: !1041, line: 458, baseType: !976, size: 64, offset: 512)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1076, file: !1041, line: 459, baseType: !976, size: 64, offset: 576)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1076, file: !1041, line: 460, baseType: !976, size: 64, offset: 640)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1076, file: !1041, line: 461, baseType: !976, size: 64, offset: 704)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1076, file: !1041, line: 463, baseType: !976, size: 64, offset: 768)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1076, file: !1041, line: 465, baseType: !1099, offset: 832)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1041, line: 415, elements: !1018)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1040, file: !1041, line: 693, baseType: !1101, size: 384, offset: 1408)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1041, line: 489, size: 384, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106, !1107, !1109, !1110}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1101, file: !1041, line: 490, baseType: !996, size: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1101, file: !1041, line: 491, baseType: !986, size: 64, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1101, file: !1041, line: 492, baseType: !986, size: 64, offset: 192)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1101, file: !1041, line: 493, baseType: !7, size: 32, offset: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1101, file: !1041, line: 494, baseType: !1108, size: 16, offset: 288)
!1108 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1101, file: !1041, line: 495, baseType: !1108, size: 16, offset: 304)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1101, file: !1041, line: 497, baseType: !1111, size: 64, offset: 320)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1040, file: !1041, line: 697, baseType: !1113, size: 1792, offset: 1792)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1041, line: 507, size: 1792, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1209, !1210}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1113, file: !1041, line: 508, baseType: !1084, size: 192, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1113, file: !1041, line: 515, baseType: !976, size: 64, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1113, file: !1041, line: 516, baseType: !976, size: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1113, file: !1041, line: 517, baseType: !976, size: 64, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1113, file: !1041, line: 518, baseType: !976, size: 64, offset: 384)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1113, file: !1041, line: 519, baseType: !976, size: 64, offset: 448)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1113, file: !1041, line: 526, baseType: !1032, size: 64, offset: 512)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1113, file: !1041, line: 527, baseType: !976, size: 64, offset: 576)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1113, file: !1041, line: 528, baseType: !7, size: 32, offset: 640)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1113, file: !1041, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1113, file: !1041, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1113, file: !1041, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1113, file: !1041, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1113, file: !1041, line: 563, baseType: !1129, size: 512, offset: 704)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !66, line: 118, size: 512, elements: !1130)
!1130 = !{!1131, !1139, !1140, !1145, !1202, !1206, !1207, !1208}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1129, file: !66, line: 119, baseType: !1132, size: 256)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1133, line: 9, size: 256, elements: !1134)
!1133 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1134 = !{!1135, !1136}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1132, file: !1133, line: 10, baseType: !1084, size: 192, align: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1132, file: !1133, line: 11, baseType: !1137, size: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1138, line: 29, baseType: !1032)
!1138 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1129, file: !66, line: 120, baseType: !1137, size: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1129, file: !66, line: 121, baseType: !1141, size: 64, offset: 320)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!65, !1144}
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1129, file: !66, line: 122, baseType: !1146, size: 64, offset: 384)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !66, line: 159, size: 512, align: 512, elements: !1148)
!1148 = !{!1149, !1170, !1171, !1175, !1185, !1186, !1197, !1201}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1147, file: !66, line: 160, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !66, line: 214, size: 4608, align: 512, elements: !1152)
!1152 = !{!1153, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1151, file: !66, line: 215, baseType: !1154)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1005, line: 29, baseType: !1012)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1151, file: !66, line: 216, baseType: !7, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1151, file: !66, line: 217, baseType: !7, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1151, file: !66, line: 218, baseType: !7, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1151, file: !66, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1151, file: !66, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1151, file: !66, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1151, file: !66, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1151, file: !66, line: 233, baseType: !1137, size: 64, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1151, file: !66, line: 234, baseType: !1144, size: 64, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1151, file: !66, line: 235, baseType: !1137, size: 64, offset: 256)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1151, file: !66, line: 236, baseType: !1144, size: 64, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1151, file: !66, line: 237, baseType: !1167, size: 4096, offset: 512)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1147, size: 4096, elements: !1168)
!1168 = !{!1169}
!1169 = !DISubrange(count: 8)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1147, file: !66, line: 161, baseType: !7, size: 32, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1147, file: !66, line: 162, baseType: !1172, size: 32, offset: 96)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !982, line: 27, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1174, line: 96, baseType: !211)
!1174 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1147, file: !66, line: 163, baseType: !1176, size: 32, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1177, line: 276, baseType: !1178)
!1177 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1177, line: 276, size: 32, elements: !1179)
!1179 = !{!1180}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1178, file: !1177, line: 276, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1177, line: 70, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1177, line: 65, size: 32, elements: !1183)
!1183 = !{!1184}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1182, file: !1177, line: 66, baseType: !7, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1147, file: !66, line: 164, baseType: !1144, size: 64, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1147, file: !66, line: 165, baseType: !1187, size: 128, offset: 256)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1133, line: 14, size: 128, elements: !1188)
!1188 = !{!1189}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1187, file: !1133, line: 15, baseType: !1190, size: 128)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1085, line: 125, size: 128, elements: !1191)
!1191 = !{!1192, !1196}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1190, file: !1085, line: 126, baseType: !1193, size: 64)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1085, line: 31, size: 64, elements: !1194)
!1194 = !{!1195}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1193, file: !1085, line: 32, baseType: !1089, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1190, file: !1085, line: 127, baseType: !1089, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1147, file: !66, line: 166, baseType: !1198, size: 64, offset: 384)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!1137}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1147, file: !66, line: 167, baseType: !1137, size: 64, offset: 448)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1129, file: !66, line: 123, baseType: !1203, size: 8, offset: 448)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !977, line: 17, baseType: !1204)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !979, line: 21, baseType: !1205)
!1205 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1129, file: !66, line: 124, baseType: !1203, size: 8, offset: 456)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1129, file: !66, line: 125, baseType: !1203, size: 8, offset: 464)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1129, file: !66, line: 126, baseType: !1203, size: 8, offset: 472)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1113, file: !1041, line: 572, baseType: !1129, size: 512, offset: 1216)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1113, file: !1041, line: 580, baseType: !1211, size: 64, offset: 1728)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1040, file: !1041, line: 721, baseType: !7, size: 32, offset: 3584)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1040, file: !1041, line: 722, baseType: !211, size: 32, offset: 3616)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1040, file: !1041, line: 723, baseType: !1215, size: 64, offset: 3648)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1218, line: 17, baseType: !1219)
!1218 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1218, line: 17, size: 64, elements: !1220)
!1220 = !{!1221}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1219, file: !1218, line: 17, baseType: !1222, size: 64)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 64, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 1)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1040, file: !1041, line: 724, baseType: !1217, size: 64, offset: 3712)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1040, file: !1041, line: 749, baseType: !1227, offset: 3776)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1041, line: 290, elements: !1018)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1040, file: !1041, line: 751, baseType: !996, size: 128, offset: 3776)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1040, file: !1041, line: 757, baseType: !1230, size: 64, offset: 3904)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1232, line: 388, size: 7296, elements: !1233)
!1232 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1233 = !{!1234, !5269}
!1234 = !DIDerivedType(tag: DW_TAG_member, scope: !1231, file: !1232, line: 389, baseType: !1235, size: 7296)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1231, file: !1232, line: 389, size: 7296, elements: !1236)
!1236 = !{!1237, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5192, !5198, !5201, !5240, !5241, !5253, !5254, !5257, !5258, !5259, !5262, !5263, !5264, !5267, !5268}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1235, file: !1232, line: 390, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1232, line: 305, size: 1472, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1256, !1257, !1262, !1263, !1266, !5138, !5139, !5140, !5141, !5142}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1239, file: !1232, line: 308, baseType: !986, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1239, file: !1232, line: 309, baseType: !986, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1239, file: !1232, line: 313, baseType: !1238, size: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1239, file: !1232, line: 313, baseType: !1238, size: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1239, file: !1232, line: 315, baseType: !1084, size: 192, align: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1239, file: !1232, line: 323, baseType: !986, size: 64, offset: 448)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1239, file: !1232, line: 327, baseType: !1230, size: 64, offset: 512)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1239, file: !1232, line: 333, baseType: !1249, size: 64, offset: 576)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1250, line: 284, baseType: !1251)
!1250 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1250, line: 284, size: 64, elements: !1252)
!1252 = !{!1253}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1251, file: !1250, line: 284, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1255, line: 19, baseType: !986)
!1255 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1239, file: !1232, line: 334, baseType: !986, size: 64, offset: 640)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1239, file: !1232, line: 343, baseType: !1258, size: 256, offset: 704)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1239, file: !1232, line: 340, size: 256, elements: !1259)
!1259 = !{!1260, !1261}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1258, file: !1232, line: 341, baseType: !1084, size: 192, align: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1258, file: !1232, line: 342, baseType: !986, size: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1239, file: !1232, line: 351, baseType: !996, size: 128, offset: 960)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1239, file: !1232, line: 353, baseType: !1264, size: 64, offset: 1088)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1232, line: 353, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1239, file: !1232, line: 356, baseType: !1267, size: 64, offset: 1152)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !60, line: 557, size: 832, elements: !1270)
!1270 = !{!1271, !1275, !1276, !1280, !1284, !5112, !5116, !5120, !5124, !5125, !5126, !5130, !5134}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1269, file: !60, line: 558, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{null, !1238}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1269, file: !60, line: 559, baseType: !1272, size: 64, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1269, file: !60, line: 560, baseType: !1277, size: 64, offset: 128)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!211, !1238, !986}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1269, file: !60, line: 561, baseType: !1281, size: 64, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!211, !1238}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1269, file: !60, line: 562, baseType: !1285, size: 64, offset: 256)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!1288, !1289}
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1232, line: 682, baseType: !7)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !60, line: 508, size: 768, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296, !1297, !1304, !1311, !1317, !5107, !5108, !5110, !5111}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1290, file: !60, line: 509, baseType: !1238, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1290, file: !60, line: 510, baseType: !7, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1290, file: !60, line: 511, baseType: !984, size: 32, offset: 96)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1290, file: !60, line: 512, baseType: !986, size: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1290, file: !60, line: 513, baseType: !986, size: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1290, file: !60, line: 514, baseType: !1298, size: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1250, line: 385, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 385, size: 64, elements: !1301)
!1301 = !{!1302}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1300, file: !1250, line: 385, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1255, line: 15, baseType: !986)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1290, file: !60, line: 516, baseType: !1305, size: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1250, line: 359, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 359, size: 64, elements: !1308)
!1308 = !{!1309}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1307, file: !1250, line: 359, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1255, line: 16, baseType: !986)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1290, file: !60, line: 519, baseType: !1312, size: 64, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1255, line: 21, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1255, line: 21, size: 64, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1313, file: !1255, line: 21, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1255, line: 14, baseType: !986)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1290, file: !60, line: 521, baseType: !1318, size: 64, offset: 448)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1232, line: 68, size: 512, align: 128, elements: !1320)
!1320 = !{!1321, !1322, !5099, !5106}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1319, file: !1232, line: 69, baseType: !986, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, scope: !1319, file: !1232, line: 77, baseType: !1323, size: 320, offset: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1319, file: !1232, line: 77, size: 320, elements: !1324)
!1324 = !{!1325, !4992, !4997, !5023, !5031, !5037, !5050, !5098}
!1325 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !1232, line: 78, baseType: !1326, size: 320)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1323, file: !1232, line: 78, size: 320, elements: !1327)
!1327 = !{!1328, !1329, !4990, !4991}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1326, file: !1232, line: 84, baseType: !996, size: 128)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1326, file: !1232, line: 86, baseType: !1330, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !90, line: 451, size: 1216, align: 64, elements: !1332)
!1332 = !{!1333, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4985, !4986, !4987, !4988, !4989}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1331, file: !90, line: 452, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !90, line: 610, size: 4224, elements: !1336)
!1336 = !{!1337, !1339, !1340, !1348, !1355, !1356, !4760, !4761, !4762, !4763, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4803, !4811, !4812, !4813, !4823, !4824, !4825, !4826}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1335, file: !90, line: 611, baseType: !1338, size: 16)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !982, line: 19, baseType: !1108)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1335, file: !90, line: 612, baseType: !1108, size: 16, offset: 16)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1335, file: !90, line: 613, baseType: !1341, size: 32, offset: 32)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1342, line: 23, baseType: !1343)
!1342 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 21, size: 32, elements: !1344)
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1343, file: !1342, line: 22, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !982, line: 32, baseType: !1347)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1174, line: 49, baseType: !7)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1335, file: !90, line: 614, baseType: !1349, size: 32, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1342, line: 28, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 26, size: 32, elements: !1351)
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1350, file: !1342, line: 27, baseType: !1353, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !982, line: 33, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1174, line: 50, baseType: !7)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1335, file: !90, line: 615, baseType: !7, size: 32, offset: 96)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1335, file: !90, line: 622, baseType: !1357, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !90, line: 1864, size: 1536, align: 512, elements: !1360)
!1360 = !{!1361, !4637, !4647, !4651, !4657, !4661, !4665, !4669, !4673, !4677, !4681, !4682, !4686, !4690, !4710, !4736, !4740, !4746, !4751, !4755, !4756}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1359, file: !90, line: 1865, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!1365, !1334, !1365, !7}
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1367, line: 89, size: 1536, elements: !1368)
!1367 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1368 = !{!1369, !1370, !1375, !1383, !1384, !1399, !1400, !1404, !1416, !1490, !4621, !4622, !4623, !4629, !4630, !4631}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1366, file: !1367, line: 91, baseType: !7, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1366, file: !1367, line: 92, baseType: !1371, size: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1177, line: 277, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1177, line: 277, size: 32, elements: !1373)
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1372, file: !1177, line: 277, baseType: !1181, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1366, file: !1367, line: 93, baseType: !1376, size: 128, offset: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1377, line: 38, size: 128, elements: !1378)
!1377 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1378 = !{!1379, !1381}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1376, file: !1377, line: 39, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1376, file: !1377, line: 39, baseType: !1382, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1366, file: !1367, line: 94, baseType: !1365, size: 64, offset: 192)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1366, file: !1367, line: 95, baseType: !1385, size: 128, offset: 256)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1367, line: 47, size: 128, elements: !1386)
!1386 = !{!1387, !1396}
!1387 = !DIDerivedType(tag: DW_TAG_member, scope: !1385, file: !1367, line: 48, baseType: !1388, size: 64)
!1388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !1367, line: 48, size: 64, elements: !1389)
!1389 = !{!1390, !1395}
!1390 = !DIDerivedType(tag: DW_TAG_member, scope: !1388, file: !1367, line: 49, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1388, file: !1367, line: 49, size: 64, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1391, file: !1367, line: 50, baseType: !1049, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1391, file: !1367, line: 50, baseType: !1049, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1388, file: !1367, line: 52, baseType: !976, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1385, file: !1367, line: 54, baseType: !1397, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1366, file: !1367, line: 96, baseType: !1334, size: 64, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1366, file: !1367, line: 98, baseType: !1401, size: 256, offset: 448)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1205, size: 256, elements: !1402)
!1402 = !{!1403}
!1403 = !DISubrange(count: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1366, file: !1367, line: 101, baseType: !1405, size: 32, offset: 704)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !1406, line: 25, size: 32, elements: !1407)
!1406 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, scope: !1405, file: !1406, line: 26, baseType: !1409, size: 32)
!1409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1405, file: !1406, line: 26, size: 32, elements: !1410)
!1410 = !{!1411}
!1411 = !DIDerivedType(tag: DW_TAG_member, scope: !1409, file: !1406, line: 30, baseType: !1412, size: 32)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1409, file: !1406, line: 30, size: 32, elements: !1413)
!1413 = !{!1414, !1415}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1412, file: !1406, line: 31, baseType: !1004)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1412, file: !1406, line: 32, baseType: !211, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1366, file: !1367, line: 102, baseType: !1417, size: 64, offset: 768)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1367, line: 135, size: 1024, align: 512, elements: !1420)
!1420 = !{!1421, !1425, !1426, !1433, !1442, !1446, !1450, !1454, !1455, !1459, !1464, !1476, !1484}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !1419, file: !1367, line: 136, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!211, !1365, !7}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !1419, file: !1367, line: 137, baseType: !1422, size: 64, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1419, file: !1367, line: 138, baseType: !1427, size: 64, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!211, !1430, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1366)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !1419, file: !1367, line: 139, baseType: !1434, size: 64, offset: 192)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!211, !1430, !7, !1437, !1440}
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1439)
!1439 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !1419, file: !1367, line: 141, baseType: !1443, size: 64, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!211, !1430}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !1419, file: !1367, line: 142, baseType: !1447, size: 64, offset: 320)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!211, !1365}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !1419, file: !1367, line: 143, baseType: !1451, size: 64, offset: 384)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{null, !1365}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !1419, file: !1367, line: 144, baseType: !1451, size: 64, offset: 448)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !1419, file: !1367, line: 145, baseType: !1456, size: 64, offset: 512)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{null, !1365, !1334}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !1419, file: !1367, line: 146, baseType: !1460, size: 64, offset: 576)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!1463, !1365, !1463, !211}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !1419, file: !1367, line: 147, baseType: !1465, size: 64, offset: 640)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!1468, !1470}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1367, line: 18, flags: DIFlagFwdDecl)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1472, line: 8, size: 128, elements: !1473)
!1472 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1471, file: !1472, line: 9, baseType: !1468, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1471, file: !1472, line: 10, baseType: !1365, size: 64, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !1419, file: !1367, line: 148, baseType: !1477, size: 64, offset: 704)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!211, !1480, !1482}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1471)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !982, line: 30, baseType: !1483)
!1483 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !1419, file: !1367, line: 149, baseType: !1485, size: 64, offset: 768)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!1365, !1365, !1488}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1335)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1366, file: !1367, line: 103, baseType: !1491, size: 64, offset: 832)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !90, line: 1416, size: 9472, elements: !1493)
!1493 = !{!1494, !1495, !1498, !1499, !1500, !1503, !1554, !2452, !2534, !2617, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2633, !2637, !2638, !4480, !4481, !4484, !4485, !4486, !4527, !4553, !4554, !4555, !4556, !4557, !4558, !4561, !4562, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1492, file: !90, line: 1417, baseType: !996, size: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1492, file: !90, line: 1418, baseType: !1496, size: 32, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !982, line: 16, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !982, line: 13, baseType: !1049)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1492, file: !90, line: 1419, baseType: !1205, size: 8, offset: 160)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1492, file: !90, line: 1420, baseType: !986, size: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1492, file: !90, line: 1421, baseType: !1501, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !982, line: 46, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1174, line: 88, baseType: !1034)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1492, file: !90, line: 1422, baseType: !1504, size: 64, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !90, line: 2228, size: 576, elements: !1506)
!1506 = !{!1507, !1508, !1509, !1515, !1519, !1523, !1527, !1531, !1532, !1542, !1545, !1546, !1547, !1551, !1552, !1553}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1505, file: !90, line: 2229, baseType: !1437, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1505, file: !90, line: 2230, baseType: !211, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1505, file: !90, line: 2238, baseType: !1510, size: 64, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!211, !1513}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !90, line: 69, flags: DIFlagFwdDecl)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1505, file: !90, line: 2239, baseType: !1516, size: 64, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1518 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !90, line: 70, flags: DIFlagFwdDecl)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1505, file: !90, line: 2240, baseType: !1520, size: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!1365, !1504, !211, !1437, !983}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1505, file: !90, line: 2242, baseType: !1524, size: 64, offset: 320)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{null, !1491}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1505, file: !90, line: 2243, baseType: !1528, size: 64, offset: 384)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1530, line: 76, flags: DIFlagFwdDecl)
!1530 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1505, file: !90, line: 2244, baseType: !1504, size: 64, offset: 448)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1505, file: !90, line: 2245, baseType: !1533, size: 64, offset: 512)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !982, line: 182, size: 64, elements: !1534)
!1534 = !{!1535}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1533, file: !982, line: 183, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !982, line: 186, size: 128, elements: !1538)
!1538 = !{!1539, !1540}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1537, file: !982, line: 187, baseType: !1536, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1537, file: !982, line: 187, baseType: !1541, size: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1505, file: !90, line: 2247, baseType: !1543, offset: 576)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1544, line: 187, elements: !1018)
!1544 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1505, file: !90, line: 2248, baseType: !1543, offset: 576)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1505, file: !90, line: 2249, baseType: !1543, offset: 576)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1505, file: !90, line: 2250, baseType: !1548, offset: 576)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1543, elements: !1549)
!1549 = !{!1550}
!1550 = !DISubrange(count: 3)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1505, file: !90, line: 2252, baseType: !1543, offset: 576)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1505, file: !90, line: 2253, baseType: !1543, offset: 576)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1505, file: !90, line: 2254, baseType: !1543, offset: 576)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1492, file: !90, line: 1423, baseType: !1555, size: 64, offset: 384)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !90, line: 1935, size: 1472, elements: !1558)
!1558 = !{!1559, !1563, !1567, !1568, !1572, !1592, !1596, !1597, !1598, !1602, !1606, !1607, !1608, !1609, !1615, !1620, !1621, !2429, !2430, !2431, !2432, !2436, !2451}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1557, file: !90, line: 1936, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!1334, !1491}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1557, file: !90, line: 1937, baseType: !1564, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{null, !1334}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1557, file: !90, line: 1938, baseType: !1564, size: 64, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1557, file: !90, line: 1940, baseType: !1569, size: 64, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{null, !1334, !211}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1557, file: !90, line: 1941, baseType: !1573, size: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!211, !1334, !1576}
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !1578)
!1578 = !{!1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1577, file: !6, line: 52, baseType: !944, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1577, file: !6, line: 54, baseType: !944, size: 64, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1577, file: !6, line: 61, baseType: !1501, size: 64, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1577, file: !6, line: 62, baseType: !1501, size: 64, offset: 192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1577, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1577, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1577, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1577, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1577, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1577, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1577, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1577, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1577, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1557, file: !90, line: 1942, baseType: !1593, size: 64, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!211, !1334}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1557, file: !90, line: 1943, baseType: !1564, size: 64, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1557, file: !90, line: 1944, baseType: !1524, size: 64, offset: 448)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1557, file: !90, line: 1945, baseType: !1599, size: 64, offset: 512)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!211, !1491, !211}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1557, file: !90, line: 1946, baseType: !1603, size: 64, offset: 576)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!211, !1491}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1557, file: !90, line: 1947, baseType: !1603, size: 64, offset: 640)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1557, file: !90, line: 1948, baseType: !1603, size: 64, offset: 704)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1557, file: !90, line: 1949, baseType: !1603, size: 64, offset: 768)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1557, file: !90, line: 1950, baseType: !1610, size: 64, offset: 832)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!211, !1365, !1613}
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !90, line: 57, flags: DIFlagFwdDecl)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1557, file: !90, line: 1951, baseType: !1616, size: 64, offset: 896)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!211, !1491, !1619, !1463}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1557, file: !90, line: 1952, baseType: !1524, size: 64, offset: 960)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1557, file: !90, line: 1954, baseType: !1622, size: 64, offset: 1024)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!211, !1625, !1365}
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1627, line: 16, size: 896, elements: !1628)
!1627 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1628 = !{!1629, !1630, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1662, !1663, !2428}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1626, file: !1627, line: 17, baseType: !1463, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1626, file: !1627, line: 18, baseType: !1631, size: 64, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !982, line: 55, baseType: !1632)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1174, line: 72, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1174, line: 16, baseType: !986)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1626, file: !1627, line: 19, baseType: !1631, size: 64, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1626, file: !1627, line: 20, baseType: !1631, size: 64, offset: 192)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1626, file: !1627, line: 21, baseType: !1631, size: 64, offset: 256)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1626, file: !1627, line: 22, baseType: !1501, size: 64, offset: 320)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1626, file: !1627, line: 23, baseType: !1501, size: 64, offset: 384)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1626, file: !1627, line: 24, baseType: !1022, size: 192, offset: 448)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1626, file: !1627, line: 25, baseType: !1641, size: 64, offset: 640)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1627, line: 31, size: 256, elements: !1644)
!1644 = !{!1645, !1650, !1654, !1658}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1643, file: !1627, line: 32, baseType: !1646, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!983, !1625, !1649}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1643, file: !1627, line: 33, baseType: !1651, size: 64, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{null, !1625, !983}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1643, file: !1627, line: 34, baseType: !1655, size: 64, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!983, !1625, !983, !1649}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1643, file: !1627, line: 35, baseType: !1659, size: 64, offset: 192)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!211, !1625, !983}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1626, file: !1627, line: 26, baseType: !211, size: 32, offset: 704)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1626, file: !1627, line: 27, baseType: !1664, size: 64, offset: 768)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !90, line: 916, size: 1856, align: 32, elements: !1667)
!1667 = !{!1668, !1686, !1687, !1688, !2012, !2013, !2014, !2015, !2016, !2018, !2019, !2020, !2050, !2410, !2419, !2420, !2421, !2422, !2423, !2424, !2427}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1666, file: !90, line: 920, baseType: !1669, size: 128)
!1669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1666, file: !90, line: 917, size: 128, elements: !1670)
!1670 = !{!1671, !1677}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1669, file: !90, line: 918, baseType: !1672, size: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1673, line: 58, size: 64, elements: !1674)
!1673 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1674 = !{!1675}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1672, file: !1673, line: 59, baseType: !1676, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1669, file: !90, line: 919, baseType: !1678, size: 128, align: 64)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !982, line: 216, size: 128, align: 64, elements: !1679)
!1679 = !{!1680, !1682}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1678, file: !982, line: 217, baseType: !1681, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1678, file: !982, line: 218, baseType: !1683, size: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{null, !1681}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1666, file: !90, line: 921, baseType: !1471, size: 128, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1666, file: !90, line: 922, baseType: !1334, size: 64, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1666, file: !90, line: 923, baseType: !1689, size: 64, offset: 320)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1691)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !90, line: 1822, size: 2048, elements: !1692)
!1692 = !{!1693, !1694, !1699, !1706, !1710, !1800, !1801, !1805, !1818, !1819, !1827, !1831, !1832, !1836, !1837, !1841, !1846, !1847, !1851, !1855, !1969, !1973, !1977, !1981, !1982, !1986, !1990, !1995, !1999, !2003, !2007, !2011}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1691, file: !90, line: 1823, baseType: !1528, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1691, file: !90, line: 1824, baseType: !1695, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!1501, !1698, !1501, !211}
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1691, file: !90, line: 1825, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!1703, !1698, !1463, !1631, !1649}
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !982, line: 60, baseType: !1704)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1174, line: 73, baseType: !1705)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1174, line: 15, baseType: !944)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1691, file: !90, line: 1826, baseType: !1707, size: 64, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!1703, !1698, !1437, !1631, !1649}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1691, file: !90, line: 1827, baseType: !1711, size: 64, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!1703, !1714, !1754}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !90, line: 320, size: 384, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1723, !1724, !1725, !1728, !1729}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1715, file: !90, line: 321, baseType: !1698, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1715, file: !90, line: 326, baseType: !1501, size: 64, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1715, file: !90, line: 327, baseType: !1720, size: 64, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{null, !1714, !944, !944}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1715, file: !90, line: 328, baseType: !983, size: 64, offset: 192)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1715, file: !90, line: 329, baseType: !211, size: 32, offset: 256)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1715, file: !90, line: 330, baseType: !1726, size: 16, offset: 288)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !977, line: 19, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !979, line: 24, baseType: !1108)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1715, file: !90, line: 331, baseType: !1726, size: 16, offset: 304)
!1729 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !90, line: 332, baseType: !1730, size: 64, offset: 320)
!1730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1715, file: !90, line: 332, size: 64, elements: !1731)
!1731 = !{!1732, !1733}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1730, file: !90, line: 333, baseType: !7, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1730, file: !90, line: 334, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1736, line: 569, size: 448, elements: !1737)
!1736 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1737 = !{!1738, !1739, !1740}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1735, file: !1736, line: 570, baseType: !1318, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1735, file: !1736, line: 571, baseType: !211, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1735, file: !1736, line: 572, baseType: !1741, size: 320, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1742, line: 14, baseType: !1743)
!1742 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1742, line: 29, size: 320, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1753}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1743, file: !1742, line: 30, baseType: !7, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1743, file: !1742, line: 31, baseType: !983, size: 64, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1743, file: !1742, line: 32, baseType: !1748, size: 64, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1742, line: 16, baseType: !1749)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{!211, !1752, !7, !211, !983}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1743, file: !1742, line: 33, baseType: !996, size: 128, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1756, line: 29, size: 320, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1761, !1791}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1755, file: !1756, line: 35, baseType: !7, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1755, file: !1756, line: 36, baseType: !1631, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 37, baseType: !1631, size: 64, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_member, scope: !1755, file: !1756, line: 38, baseType: !1762, size: 64, offset: 192)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1756, line: 38, size: 64, elements: !1763)
!1763 = !{!1764, !1772, !1779, !1788}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1762, file: !1756, line: 39, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1768, line: 17, size: 128, elements: !1769)
!1768 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1767, file: !1768, line: 19, baseType: !983, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1767, file: !1768, line: 20, baseType: !1632, size: 64, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1762, file: !1756, line: 40, baseType: !1773, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1756, line: 15, size: 128, elements: !1776)
!1776 = !{!1777, !1778}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1775, file: !1756, line: 16, baseType: !983, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1775, file: !1756, line: 17, baseType: !1631, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1762, file: !1756, line: 41, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1783, line: 31, size: 128, elements: !1784)
!1783 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1784 = !{!1785, !1786, !1787}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1782, file: !1783, line: 32, baseType: !1318, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1782, file: !1783, line: 33, baseType: !7, size: 32, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1782, file: !1783, line: 34, baseType: !7, size: 32, offset: 96)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1762, file: !1756, line: 42, baseType: !1789, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1756, line: 13, flags: DIFlagFwdDecl)
!1791 = !DIDerivedType(tag: DW_TAG_member, scope: !1755, file: !1756, line: 44, baseType: !1792, size: 64, offset: 256)
!1792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1756, line: 44, size: 64, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1792, file: !1756, line: 45, baseType: !986, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, scope: !1792, file: !1756, line: 46, baseType: !1796, size: 64)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1792, file: !1756, line: 46, size: 64, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1796, file: !1756, line: 47, baseType: !7, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1796, file: !1756, line: 48, baseType: !7, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1691, file: !90, line: 1828, baseType: !1711, size: 64, offset: 320)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1691, file: !90, line: 1829, baseType: !1802, size: 64, offset: 384)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{!211, !1714, !1482}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1691, file: !90, line: 1830, baseType: !1806, size: 64, offset: 448)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!211, !1698, !1809}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !90, line: 1776, size: 128, elements: !1811)
!1811 = !{!1812, !1817}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1810, file: !90, line: 1777, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !90, line: 1773, baseType: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!211, !1809, !1437, !211, !1501, !976, !7}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1810, file: !90, line: 1778, baseType: !1501, size: 64, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1691, file: !90, line: 1831, baseType: !1806, size: 64, offset: 512)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1691, file: !90, line: 1832, baseType: !1820, size: 64, offset: 576)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!1823, !1698, !1825}
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1824, line: 52, baseType: !7)
!1824 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !90, line: 56, flags: DIFlagFwdDecl)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1691, file: !90, line: 1833, baseType: !1828, size: 64, offset: 640)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!944, !1698, !7, !986}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1691, file: !90, line: 1834, baseType: !1828, size: 64, offset: 704)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1691, file: !90, line: 1835, baseType: !1833, size: 64, offset: 768)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!211, !1698, !1238}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1691, file: !90, line: 1836, baseType: !986, size: 64, offset: 832)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1691, file: !90, line: 1837, baseType: !1838, size: 64, offset: 896)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!211, !1334, !1698}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1691, file: !90, line: 1838, baseType: !1842, size: 64, offset: 960)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!211, !1698, !1845}
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !90, line: 1007, baseType: !983)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1691, file: !90, line: 1839, baseType: !1838, size: 64, offset: 1024)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1691, file: !90, line: 1840, baseType: !1848, size: 64, offset: 1088)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!211, !1698, !1501, !1501, !211}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1691, file: !90, line: 1841, baseType: !1852, size: 64, offset: 1152)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!211, !211, !1698, !211}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1691, file: !90, line: 1842, baseType: !1856, size: 64, offset: 1216)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!211, !1698, !211, !1859}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !90, line: 1062, size: 1664, elements: !1861)
!1861 = !{!1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1878, !1879, !1880, !1881, !1898, !1899, !1900, !1913, !1945}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1860, file: !90, line: 1063, baseType: !1859, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1860, file: !90, line: 1064, baseType: !996, size: 128, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1860, file: !90, line: 1065, baseType: !1537, size: 128, offset: 192)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1860, file: !90, line: 1066, baseType: !996, size: 128, offset: 320)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1860, file: !90, line: 1069, baseType: !996, size: 128, offset: 448)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1860, file: !90, line: 1072, baseType: !1845, size: 64, offset: 576)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1860, file: !90, line: 1073, baseType: !7, size: 32, offset: 640)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1860, file: !90, line: 1074, baseType: !1205, size: 8, offset: 672)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1860, file: !90, line: 1075, baseType: !7, size: 32, offset: 704)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1860, file: !90, line: 1076, baseType: !211, size: 32, offset: 736)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1860, file: !90, line: 1077, baseType: !1873, size: 128, offset: 768)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1742, line: 40, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1742, line: 36, size: 128, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1874, file: !1742, line: 37, baseType: !1004)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1874, file: !1742, line: 38, baseType: !996, size: 128)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1860, file: !90, line: 1078, baseType: !1698, size: 64, offset: 896)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1860, file: !90, line: 1079, baseType: !1501, size: 64, offset: 960)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1860, file: !90, line: 1080, baseType: !1501, size: 64, offset: 1024)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1860, file: !90, line: 1082, baseType: !1882, size: 64, offset: 1088)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !90, line: 1314, size: 320, elements: !1884)
!1884 = !{!1885, !1893, !1894, !1895, !1896, !1897}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1883, file: !90, line: 1315, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1887, line: 20, baseType: !1888)
!1887 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1887, line: 11, elements: !1889)
!1889 = !{!1890}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1888, file: !1887, line: 12, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1016, line: 33, baseType: !1892)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1016, line: 31, elements: !1018)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1883, file: !90, line: 1316, baseType: !211, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1883, file: !90, line: 1317, baseType: !211, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1883, file: !90, line: 1318, baseType: !1882, size: 64, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1883, file: !90, line: 1319, baseType: !1698, size: 64, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1883, file: !90, line: 1320, baseType: !1678, size: 128, align: 64, offset: 192)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1860, file: !90, line: 1084, baseType: !986, size: 64, offset: 1152)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1860, file: !90, line: 1085, baseType: !986, size: 64, offset: 1216)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1860, file: !90, line: 1087, baseType: !1901, size: 64, offset: 1280)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !90, line: 1011, size: 128, elements: !1904)
!1904 = !{!1905, !1909}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1903, file: !90, line: 1012, baseType: !1906, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !1859, !1859}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1903, file: !90, line: 1013, baseType: !1910, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{null, !1859}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1860, file: !90, line: 1088, baseType: !1914, size: 64, offset: 1344)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !90, line: 1016, size: 512, elements: !1917)
!1917 = !{!1918, !1922, !1926, !1927, !1931, !1935, !1939, !1944}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1916, file: !90, line: 1017, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!1845, !1845}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1916, file: !90, line: 1018, baseType: !1923, size: 64, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{null, !1845}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1916, file: !90, line: 1019, baseType: !1910, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1916, file: !90, line: 1020, baseType: !1928, size: 64, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!211, !1859, !211}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1916, file: !90, line: 1021, baseType: !1932, size: 64, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!1482, !1859}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1916, file: !90, line: 1022, baseType: !1936, size: 64, offset: 320)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!211, !1859, !211, !999}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1916, file: !90, line: 1023, baseType: !1940, size: 64, offset: 384)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null, !1859, !1943}
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1916, file: !90, line: 1024, baseType: !1932, size: 64, offset: 448)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1860, file: !90, line: 1097, baseType: !1946, size: 256, offset: 1408)
!1946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1860, file: !90, line: 1089, size: 256, elements: !1947)
!1947 = !{!1948, !1957, !1963}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1946, file: !90, line: 1090, baseType: !1949, size: 256)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1950, line: 10, size: 256, elements: !1951)
!1950 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1951 = !{!1952, !1953, !1956}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1949, file: !1950, line: 11, baseType: !1049, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1949, file: !1950, line: 12, baseType: !1954, size: 64, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1950, line: 5, flags: DIFlagFwdDecl)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1949, file: !1950, line: 13, baseType: !996, size: 128, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1946, file: !90, line: 1091, baseType: !1958, size: 64)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1950, line: 17, size: 64, elements: !1959)
!1959 = !{!1960}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1958, file: !1950, line: 18, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1950, line: 16, flags: DIFlagFwdDecl)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1946, file: !90, line: 1096, baseType: !1964, size: 192)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1946, file: !90, line: 1092, size: 192, elements: !1965)
!1965 = !{!1966, !1967, !1968}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1964, file: !90, line: 1093, baseType: !996, size: 128)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1964, file: !90, line: 1094, baseType: !211, size: 32, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1964, file: !90, line: 1095, baseType: !7, size: 32, offset: 160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1691, file: !90, line: 1843, baseType: !1970, size: 64, offset: 1280)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!1703, !1698, !1318, !211, !1631, !1649, !211}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1691, file: !90, line: 1844, baseType: !1974, size: 64, offset: 1344)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!986, !1698, !986, !986, !986, !986}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1691, file: !90, line: 1845, baseType: !1978, size: 64, offset: 1408)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!211, !211}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1691, file: !90, line: 1846, baseType: !1856, size: 64, offset: 1472)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1691, file: !90, line: 1847, baseType: !1983, size: 64, offset: 1536)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!1703, !1789, !1698, !1649, !1631, !7}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1691, file: !90, line: 1848, baseType: !1987, size: 64, offset: 1600)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!1703, !1698, !1649, !1789, !1631, !7}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1691, file: !90, line: 1849, baseType: !1991, size: 64, offset: 1664)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!211, !1698, !944, !1994, !1943}
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1691, file: !90, line: 1850, baseType: !1996, size: 64, offset: 1728)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!944, !1698, !211, !1501, !1501}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1691, file: !90, line: 1852, baseType: !2000, size: 64, offset: 1792)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{null, !1625, !1698}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1691, file: !90, line: 1856, baseType: !2004, size: 64, offset: 1856)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!1703, !1698, !1501, !1698, !1501, !1631, !7}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1691, file: !90, line: 1858, baseType: !2008, size: 64, offset: 1920)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!1501, !1698, !1501, !1698, !1501, !1501, !7}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1691, file: !90, line: 1861, baseType: !1848, size: 64, offset: 1984)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1666, file: !90, line: 929, baseType: !1004, offset: 384)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1666, file: !90, line: 930, baseType: !89, size: 32, offset: 384)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1666, file: !90, line: 931, baseType: !1026, size: 64, offset: 448)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1666, file: !90, line: 932, baseType: !7, size: 32, offset: 512)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1666, file: !90, line: 933, baseType: !2017, size: 32, offset: 544)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !982, line: 150, baseType: !7)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1666, file: !90, line: 934, baseType: !1022, size: 192, offset: 576)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1666, file: !90, line: 935, baseType: !1501, size: 64, offset: 768)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1666, file: !90, line: 936, baseType: !2021, size: 192, offset: 832)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !90, line: 885, size: 192, elements: !2022)
!2022 = !{!2023, !2024, !2046, !2047, !2048, !2049}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2021, file: !90, line: 886, baseType: !1886)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2021, file: !90, line: 887, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !99, line: 59, size: 768, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2031, !2035, !2036, !2037, !2038}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2026, file: !99, line: 61, baseType: !1055, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2026, file: !99, line: 62, baseType: !7, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2026, file: !99, line: 63, baseType: !1004, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2026, file: !99, line: 65, baseType: !2032, size: 256, offset: 64)
!2032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 256, elements: !2033)
!2033 = !{!2034}
!2034 = !DISubrange(count: 4)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2026, file: !99, line: 66, baseType: !1533, size: 64, offset: 320)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2026, file: !99, line: 68, baseType: !1873, size: 128, offset: 384)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2026, file: !99, line: 69, baseType: !1678, size: 128, align: 64, offset: 512)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2026, file: !99, line: 70, baseType: !2039, size: 128, offset: 640)
!2039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2040, size: 128, elements: !1223)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !99, line: 54, size: 128, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2040, file: !99, line: 55, baseType: !211, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2040, file: !99, line: 56, baseType: !2044, size: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !99, line: 56, flags: DIFlagFwdDecl)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !2021, file: !90, line: 888, baseType: !98, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2021, file: !90, line: 889, baseType: !1341, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2021, file: !90, line: 889, baseType: !1341, size: 32, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !2021, file: !90, line: 890, baseType: !211, size: 32, offset: 160)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1666, file: !90, line: 937, baseType: !2051, size: 64, offset: 1024)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2054, line: 111, size: 1280, elements: !2055)
!2054 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2075, !2076, !2077, !2078, !2079, !2080, !2200, !2201, !2202, !2203, !2229, !2395, !2405}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2053, file: !2054, line: 112, baseType: !1060, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2053, file: !2054, line: 120, baseType: !1341, size: 32, offset: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2053, file: !2054, line: 121, baseType: !1349, size: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2053, file: !2054, line: 122, baseType: !1341, size: 32, offset: 96)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2053, file: !2054, line: 123, baseType: !1349, size: 32, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2053, file: !2054, line: 124, baseType: !1341, size: 32, offset: 160)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2053, file: !2054, line: 125, baseType: !1349, size: 32, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2053, file: !2054, line: 126, baseType: !1341, size: 32, offset: 224)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2053, file: !2054, line: 127, baseType: !1349, size: 32, offset: 256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2053, file: !2054, line: 128, baseType: !7, size: 32, offset: 288)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2053, file: !2054, line: 129, baseType: !2067, size: 64, offset: 320)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2068, line: 26, baseType: !2069)
!2068 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2068, line: 24, size: 64, elements: !2070)
!2070 = !{!2071}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2069, file: !2068, line: 25, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 64, elements: !2073)
!2073 = !{!2074}
!2074 = !DISubrange(count: 2)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2053, file: !2054, line: 130, baseType: !2067, size: 64, offset: 384)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2053, file: !2054, line: 131, baseType: !2067, size: 64, offset: 448)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2053, file: !2054, line: 132, baseType: !2067, size: 64, offset: 512)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2053, file: !2054, line: 133, baseType: !2067, size: 64, offset: 576)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2053, file: !2054, line: 135, baseType: !1205, size: 8, offset: 640)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2053, file: !2054, line: 137, baseType: !2081, size: 64, offset: 704)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2083, line: 189, size: 1664, elements: !2084)
!2083 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2084 = !{!2085, !2086, !2091, !2096, !2104, !2107, !2108, !2115, !2116, !2117, !2118, !2121, !2122, !2123, !2125, !2126, !2164, !2185}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2082, file: !2083, line: 190, baseType: !1055, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2082, file: !2083, line: 191, baseType: !2087, size: 32, offset: 32)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2083, line: 28, baseType: !2088)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !982, line: 98, baseType: !2089)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !977, line: 20, baseType: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !979, line: 26, baseType: !211)
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !2083, line: 192, baseType: !2092, size: 192, offset: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !2083, line: 192, size: 192, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2092, file: !2083, line: 193, baseType: !996, size: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2092, file: !2083, line: 194, baseType: !1084, size: 192, align: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2082, file: !2083, line: 199, baseType: !2097, size: 256, offset: 256)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !2098, line: 35, size: 256, elements: !2099)
!2098 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2099 = !{!2100, !2101, !2102, !2103}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2097, file: !2098, line: 36, baseType: !1026, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2097, file: !2098, line: 42, baseType: !1026, size: 64, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !2097, file: !2098, line: 46, baseType: !1154, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !2097, file: !2098, line: 47, baseType: !996, size: 128, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2082, file: !2083, line: 200, baseType: !2105, size: 64, offset: 512)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2083, line: 200, flags: DIFlagFwdDecl)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2082, file: !2083, line: 201, baseType: !983, size: 64, offset: 576)
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !2083, line: 202, baseType: !2109, size: 64, offset: 640)
!2109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !2083, line: 202, size: 64, elements: !2110)
!2110 = !{!2111, !2114}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2109, file: !2083, line: 203, baseType: !2112, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !2113, line: 8, baseType: !1033)
!2113 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2109, file: !2083, line: 204, baseType: !2112, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2082, file: !2083, line: 206, baseType: !2112, size: 64, offset: 704)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2082, file: !2083, line: 207, baseType: !1341, size: 32, offset: 768)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2082, file: !2083, line: 208, baseType: !1349, size: 32, offset: 800)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2082, file: !2083, line: 209, baseType: !2119, size: 32, offset: 832)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2083, line: 31, baseType: !2120)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !982, line: 104, baseType: !1049)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2082, file: !2083, line: 210, baseType: !1108, size: 16, offset: 864)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2082, file: !2083, line: 211, baseType: !1108, size: 16, offset: 880)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2082, file: !2083, line: 215, baseType: !2124, size: 16, offset: 896)
!2124 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2082, file: !2083, line: 222, baseType: !986, size: 64, offset: 960)
!2126 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !2083, line: 239, baseType: !2127, size: 320, offset: 1024)
!2127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !2083, line: 239, size: 320, elements: !2128)
!2128 = !{!2129, !2156}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2127, file: !2083, line: 240, baseType: !2130, size: 320)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2083, line: 108, size: 320, elements: !2131)
!2131 = !{!2132, !2133, !2145, !2148, !2155}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2130, file: !2083, line: 110, baseType: !986, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2130, file: !2083, line: 111, baseType: !2134, size: 64, offset: 64)
!2134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2130, file: !2083, line: 111, size: 64, elements: !2135)
!2135 = !{!2136, !2144}
!2136 = !DIDerivedType(tag: DW_TAG_member, scope: !2134, file: !2083, line: 112, baseType: !2137, size: 64)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2134, file: !2083, line: 112, size: 64, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2137, file: !2083, line: 114, baseType: !1726, size: 16)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2137, file: !2083, line: 115, baseType: !2141, size: 48, offset: 16)
!2141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 48, elements: !2142)
!2142 = !{!2143}
!2143 = !DISubrange(count: 6)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2134, file: !2083, line: 121, baseType: !986, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2130, file: !2083, line: 123, baseType: !2146, size: 64, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2083, line: 96, flags: DIFlagFwdDecl)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2130, file: !2083, line: 124, baseType: !2149, size: 64, offset: 192)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2083, line: 102, size: 192, elements: !2151)
!2151 = !{!2152, !2153, !2154}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2150, file: !2083, line: 103, baseType: !1678, size: 128, align: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2150, file: !2083, line: 104, baseType: !1055, size: 32, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2150, file: !2083, line: 105, baseType: !1482, size: 8, offset: 160)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2130, file: !2083, line: 125, baseType: !1437, size: 64, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_member, scope: !2127, file: !2083, line: 241, baseType: !2157, size: 320)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2127, file: !2083, line: 241, size: 320, elements: !2158)
!2158 = !{!2159, !2160, !2161, !2162, !2163}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2157, file: !2083, line: 242, baseType: !986, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2157, file: !2083, line: 243, baseType: !986, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2157, file: !2083, line: 244, baseType: !2146, size: 64, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2157, file: !2083, line: 245, baseType: !2149, size: 64, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2157, file: !2083, line: 246, baseType: !1463, size: 64, offset: 256)
!2164 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !2083, line: 254, baseType: !2165, size: 256, offset: 1344)
!2165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !2083, line: 254, size: 256, elements: !2166)
!2166 = !{!2167, !2173}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2165, file: !2083, line: 255, baseType: !2168, size: 256)
!2168 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2083, line: 128, size: 256, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2168, file: !2083, line: 129, baseType: !983, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2168, file: !2083, line: 130, baseType: !2172, size: 256)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 256, elements: !2033)
!2173 = !DIDerivedType(tag: DW_TAG_member, scope: !2165, file: !2083, line: 256, baseType: !2174, size: 256)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2165, file: !2083, line: 256, size: 256, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2174, file: !2083, line: 258, baseType: !996, size: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2174, file: !2083, line: 259, baseType: !2178, size: 128, offset: 128)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2179, line: 22, size: 128, elements: !2180)
!2179 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2180 = !{!2181, !2184}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2178, file: !2179, line: 23, baseType: !2182, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2179, line: 23, flags: DIFlagFwdDecl)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2178, file: !2179, line: 24, baseType: !986, size: 64, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2082, file: !2083, line: 274, baseType: !2186, size: 64, offset: 1600)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2083, line: 170, size: 192, elements: !2188)
!2188 = !{!2189, !2198, !2199}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2187, file: !2083, line: 171, baseType: !2190, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2083, line: 165, baseType: !2191)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!211, !2081, !2194, !2196, !2081}
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2147)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2168)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2187, file: !2083, line: 172, baseType: !2081, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2187, file: !2083, line: 173, baseType: !2146, size: 64, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2053, file: !2054, line: 138, baseType: !2081, size: 64, offset: 768)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2053, file: !2054, line: 139, baseType: !2081, size: 64, offset: 832)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2053, file: !2054, line: 140, baseType: !2081, size: 64, offset: 896)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2053, file: !2054, line: 145, baseType: !2204, size: 64, offset: 960)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2206, line: 13, size: 896, elements: !2207)
!2206 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2207 = !{!2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2205, file: !2206, line: 14, baseType: !1055, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2205, file: !2206, line: 15, baseType: !1060, size: 32, offset: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2205, file: !2206, line: 16, baseType: !1060, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2205, file: !2206, line: 21, baseType: !1026, size: 64, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2205, file: !2206, line: 27, baseType: !986, size: 64, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2205, file: !2206, line: 28, baseType: !986, size: 64, offset: 256)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2205, file: !2206, line: 29, baseType: !1026, size: 64, offset: 320)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2205, file: !2206, line: 32, baseType: !1537, size: 128, offset: 384)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2205, file: !2206, line: 33, baseType: !1341, size: 32, offset: 512)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2205, file: !2206, line: 37, baseType: !1026, size: 64, offset: 576)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2205, file: !2206, line: 44, baseType: !2219, size: 256, offset: 640)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2220, line: 15, size: 256, elements: !2221)
!2220 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2221 = !{!2222, !2223, !2224, !2225, !2226, !2227, !2228}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2219, file: !2220, line: 16, baseType: !1154)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2219, file: !2220, line: 18, baseType: !211, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2219, file: !2220, line: 19, baseType: !211, size: 32, offset: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2219, file: !2220, line: 20, baseType: !211, size: 32, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2219, file: !2220, line: 21, baseType: !211, size: 32, offset: 96)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2219, file: !2220, line: 22, baseType: !986, size: 64, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2219, file: !2220, line: 23, baseType: !986, size: 64, offset: 192)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2053, file: !2054, line: 146, baseType: !2230, size: 64, offset: 1024)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2232, line: 56, size: 4160, elements: !2233)
!2232 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2233 = !{!2234, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2273, !2274, !2275, !2276, !2277, !2288, !2380, !2381, !2393}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2231, file: !2232, line: 57, baseType: !2235, size: 576)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2232, line: 23, size: 576, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2235, file: !2232, line: 24, baseType: !1049, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, scope: !2235, file: !2232, line: 25, baseType: !2239, size: 512, offset: 64)
!2239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2235, file: !2232, line: 25, size: 512, elements: !2240)
!2240 = !{!2241, !2250}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2239, file: !2232, line: 26, baseType: !2242, size: 480)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2243, size: 480, elements: !2248)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2232, line: 17, size: 96, elements: !2244)
!2244 = !{!2245, !2246, !2247}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2243, file: !2232, line: 18, baseType: !1049, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2243, file: !2232, line: 19, baseType: !1049, size: 32, offset: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2243, file: !2232, line: 20, baseType: !1049, size: 32, offset: 64)
!2248 = !{!2249}
!2249 = !DISubrange(count: 5)
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2239, file: !2232, line: 27, baseType: !2251, size: 128)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2239, file: !2232, line: 27, size: 128, elements: !2252)
!2252 = !{!2253, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2251, file: !2232, line: 28, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2251, file: !2232, line: 29, baseType: !2254, size: 64, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2231, file: !2232, line: 58, baseType: !2235, size: 576, offset: 576)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2231, file: !2232, line: 59, baseType: !2235, size: 576, offset: 1152)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2231, file: !2232, line: 60, baseType: !1060, size: 32, offset: 1728)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2231, file: !2232, line: 61, baseType: !2230, size: 64, offset: 1792)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2231, file: !2232, line: 62, baseType: !211, size: 32, offset: 1856)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2231, file: !2232, line: 63, baseType: !1341, size: 32, offset: 1888)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2231, file: !2232, line: 64, baseType: !1349, size: 32, offset: 1920)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2231, file: !2232, line: 65, baseType: !2264, size: 192, offset: 1984)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2265, line: 7, size: 192, elements: !2266)
!2265 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2266 = !{!2267, !2268, !2272}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2264, file: !2265, line: 8, baseType: !1026, size: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2264, file: !2265, line: 9, baseType: !2269, size: 64, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2271)
!2271 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2265, line: 5, flags: DIFlagFwdDecl)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2264, file: !2265, line: 10, baseType: !7, size: 32, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2231, file: !2232, line: 66, baseType: !986, size: 64, offset: 2176)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2231, file: !2232, line: 74, baseType: !996, size: 128, offset: 2240)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2231, file: !2232, line: 75, baseType: !2081, size: 64, offset: 2368)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2231, file: !2232, line: 76, baseType: !2097, size: 256, offset: 2432)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2231, file: !2232, line: 83, baseType: !2278, size: 256, offset: 2688)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !943, line: 102, size: 256, elements: !2279)
!2279 = !{!2280, !2281, !2282}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2278, file: !943, line: 103, baseType: !1026, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2278, file: !943, line: 104, baseType: !996, size: 128, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2278, file: !943, line: 105, baseType: !2283, size: 64, offset: 192)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !943, line: 21, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !2287}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2231, file: !2232, line: 85, baseType: !2289, size: 768, offset: 2944)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2290, line: 156, size: 768, elements: !2291)
!2290 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2291 = !{!2292, !2297}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2289, file: !2290, line: 157, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!211, !2296}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2289, file: !2290, line: 158, baseType: !2298, size: 704, offset: 64)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2290, line: 150, size: 704, elements: !2299)
!2299 = !{!2300, !2379}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2298, file: !2290, line: 152, baseType: !2301, size: 640)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2290, line: 131, size: 640, elements: !2302)
!2302 = !{!2303, !2336, !2348, !2349, !2369, !2370, !2372, !2378}
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2301, file: !2290, line: 132, baseType: !2304, size: 192)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2301, file: !2290, line: 132, size: 192, elements: !2305)
!2305 = !{!2306, !2335}
!2306 = !DIDerivedType(tag: DW_TAG_member, scope: !2304, file: !2290, line: 133, baseType: !2307, size: 192)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2304, file: !2290, line: 133, size: 192, elements: !2308)
!2308 = !{!2309, !2332, !2333, !2334}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2307, file: !2290, line: 134, baseType: !2310, size: 64)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2290, line: 112, size: 512, elements: !2312)
!2312 = !{!2313, !2314, !2315, !2316, !2317, !2318, !2324, !2330, !2331}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2311, file: !2290, line: 113, baseType: !1437, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2311, file: !2290, line: 114, baseType: !983, size: 64, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2311, file: !2290, line: 115, baseType: !211, size: 32, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2311, file: !2290, line: 116, baseType: !1338, size: 16, offset: 160)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2311, file: !2290, line: 117, baseType: !2310, size: 64, offset: 192)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2311, file: !2290, line: 118, baseType: !2319, size: 64, offset: 256)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2290, line: 47, baseType: !2321)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!211, !2310, !211, !983, !2323, !1649}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2311, file: !2290, line: 119, baseType: !2325, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2290, line: 94, size: 192, elements: !2327)
!2327 = !{!2328, !2329}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2326, file: !2290, line: 95, baseType: !1060, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2326, file: !2290, line: 96, baseType: !1873, size: 128, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2311, file: !2290, line: 120, baseType: !983, size: 64, offset: 384)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2311, file: !2290, line: 121, baseType: !983, size: 64, offset: 448)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2307, file: !2290, line: 135, baseType: !211, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2307, file: !2290, line: 136, baseType: !211, size: 32, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2307, file: !2290, line: 137, baseType: !211, size: 32, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2304, file: !2290, line: 139, baseType: !1678, size: 128, align: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2301, file: !2290, line: 141, baseType: !2337, size: 64, offset: 192)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2339, line: 26, size: 192, elements: !2340)
!2339 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2340 = !{!2341, !2342}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2338, file: !2339, line: 27, baseType: !7, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2338, file: !2339, line: 28, baseType: !2343, size: 128, offset: 64)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2344, line: 43, size: 128, elements: !2345)
!2344 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2345 = !{!2346, !2347}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2343, file: !2344, line: 44, baseType: !1154)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2343, file: !2344, line: 45, baseType: !996, size: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2301, file: !2290, line: 142, baseType: !2310, size: 64, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2301, file: !2290, line: 143, baseType: !2350, size: 64, offset: 320)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2290, line: 161, size: 960, elements: !2352)
!2352 = !{!2353, !2354, !2358, !2365}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2351, file: !2290, line: 162, baseType: !2289, size: 768)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2351, file: !2290, line: 163, baseType: !2355, size: 64, offset: 768)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!2296, !2350}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2351, file: !2290, line: 164, baseType: !2359, size: 64, offset: 832)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{null, !2362, !2310, !2363, !2364}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2351, file: !2290, line: 167, baseType: !2366, size: 64, offset: 896)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{!211, !2362, !2310}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2301, file: !2290, line: 144, baseType: !2296, size: 64, offset: 384)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2301, file: !2290, line: 145, baseType: !2371, size: 64, offset: 448)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2301, file: !2290, line: 146, baseType: !2373, size: 64, offset: 512)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2290, line: 124, size: 256, elements: !2375)
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2374, file: !2290, line: 125, baseType: !1084, size: 192, align: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2374, file: !2290, line: 126, baseType: !2362, size: 64, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2301, file: !2290, line: 147, baseType: !1533, size: 64, offset: 576)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2298, file: !2290, line: 153, baseType: !1193, size: 64, offset: 640)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2231, file: !2232, line: 86, baseType: !2362, size: 64, offset: 3712)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2231, file: !2232, line: 88, baseType: !2382, size: 64, offset: 3776)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2232, line: 92, size: 576, elements: !2384)
!2384 = !{!2385, !2386, !2387, !2388, !2389}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2383, file: !2232, line: 93, baseType: !1537, size: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2383, file: !2232, line: 94, baseType: !2230, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2383, file: !2232, line: 95, baseType: !1341, size: 32, offset: 192)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2383, file: !2232, line: 96, baseType: !211, size: 32, offset: 224)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2383, file: !2232, line: 97, baseType: !2390, size: 320, offset: 256)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1060, size: 320, elements: !2391)
!2391 = !{!2392}
!2392 = !DISubrange(count: 10)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2231, file: !2232, line: 89, baseType: !2394, size: 320, offset: 3840)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 320, elements: !2391)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2053, file: !2054, line: 147, baseType: !2396, size: 64, offset: 1088)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2054, line: 25, size: 64, elements: !2398)
!2398 = !{!2399, !2400, !2401}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2397, file: !2054, line: 26, baseType: !1060, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2397, file: !2054, line: 27, baseType: !211, size: 32, offset: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2397, file: !2054, line: 28, baseType: !2402, offset: 64)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, elements: !2403)
!2403 = !{!2404}
!2404 = !DISubrange(count: 0)
!2405 = !DIDerivedType(tag: DW_TAG_member, scope: !2053, file: !2054, line: 149, baseType: !2406, size: 128, offset: 1152)
!2406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2053, file: !2054, line: 149, size: 128, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2406, file: !2054, line: 150, baseType: !211, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2406, file: !2054, line: 151, baseType: !1678, size: 128, align: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1666, file: !90, line: 938, baseType: !2411, size: 256, offset: 1088)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !90, line: 896, size: 256, elements: !2412)
!2412 = !{!2413, !2414, !2415, !2416, !2417, !2418}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2411, file: !90, line: 897, baseType: !986, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2411, file: !90, line: 898, baseType: !7, size: 32, offset: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !2411, file: !90, line: 899, baseType: !7, size: 32, offset: 96)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2411, file: !90, line: 902, baseType: !7, size: 32, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !2411, file: !90, line: 903, baseType: !7, size: 32, offset: 160)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !2411, file: !90, line: 904, baseType: !1501, size: 64, offset: 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1666, file: !90, line: 940, baseType: !976, size: 64, offset: 1344)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1666, file: !90, line: 945, baseType: !983, size: 64, offset: 1408)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1666, file: !90, line: 949, baseType: !996, size: 128, offset: 1472)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1666, file: !90, line: 950, baseType: !996, size: 128, offset: 1600)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1666, file: !90, line: 952, baseType: !1330, size: 64, offset: 1728)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1666, file: !90, line: 953, baseType: !2425, size: 32, offset: 1792)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2426, line: 8, baseType: !1049)
!2426 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1666, file: !90, line: 954, baseType: !2425, size: 32, offset: 1824)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1626, file: !1627, line: 28, baseType: !983, size: 64, offset: 832)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1557, file: !90, line: 1955, baseType: !1622, size: 64, offset: 1088)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1557, file: !90, line: 1956, baseType: !1622, size: 64, offset: 1152)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1557, file: !90, line: 1957, baseType: !1622, size: 64, offset: 1216)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1557, file: !90, line: 1963, baseType: !2433, size: 64, offset: 1280)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!211, !1491, !1318, !984}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1557, file: !90, line: 1964, baseType: !2437, size: 64, offset: 1344)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!944, !1491, !2440}
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2442, line: 12, size: 256, elements: !2443)
!2442 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2443 = !{!2444, !2445, !2446, !2447, !2448}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2441, file: !2442, line: 13, baseType: !984, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2441, file: !2442, line: 16, baseType: !211, size: 32, offset: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2441, file: !2442, line: 23, baseType: !986, size: 64, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2441, file: !2442, line: 30, baseType: !986, size: 64, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2441, file: !2442, line: 33, baseType: !2449, size: 64, offset: 192)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !2442, line: 33, flags: DIFlagFwdDecl)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1557, file: !90, line: 1966, baseType: !2437, size: 64, offset: 1408)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1492, file: !90, line: 1424, baseType: !2453, size: 64, offset: 448)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2455)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !84, line: 322, size: 704, elements: !2456)
!2456 = !{!2457, !2503, !2507, !2511, !2512, !2513, !2514, !2515, !2520, !2525, !2529}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2455, file: !84, line: 323, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!211, !2461}
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !84, line: 294, size: 1600, elements: !2463)
!2463 = !{!2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2488, !2489, !2490}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2462, file: !84, line: 295, baseType: !1537, size: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2462, file: !84, line: 296, baseType: !996, size: 128, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2462, file: !84, line: 297, baseType: !996, size: 128, offset: 256)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2462, file: !84, line: 298, baseType: !996, size: 128, offset: 384)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2462, file: !84, line: 299, baseType: !1022, size: 192, offset: 512)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2462, file: !84, line: 300, baseType: !1004, offset: 704)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2462, file: !84, line: 301, baseType: !1060, size: 32, offset: 704)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2462, file: !84, line: 302, baseType: !1491, size: 64, offset: 768)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2462, file: !84, line: 303, baseType: !2473, size: 64, offset: 832)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !84, line: 68, size: 64, elements: !2474)
!2474 = !{!2475, !2487}
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2473, file: !84, line: 69, baseType: !2476, size: 32)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2473, file: !84, line: 69, size: 32, elements: !2477)
!2477 = !{!2478, !2479, !2480}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2476, file: !84, line: 70, baseType: !1341, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2476, file: !84, line: 71, baseType: !1349, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2476, file: !84, line: 72, baseType: !2481, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2482, line: 24, baseType: !2483)
!2482 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2482, line: 22, size: 32, elements: !2484)
!2484 = !{!2485}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2483, file: !2482, line: 23, baseType: !2486, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2482, line: 20, baseType: !1347)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2473, file: !84, line: 74, baseType: !83, size: 32, offset: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2462, file: !84, line: 304, baseType: !1501, size: 64, offset: 896)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2462, file: !84, line: 305, baseType: !986, size: 64, offset: 960)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2462, file: !84, line: 306, baseType: !2491, size: 576, offset: 1024)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !84, line: 205, size: 576, elements: !2492)
!2492 = !{!2493, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2491, file: !84, line: 206, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !84, line: 66, baseType: !1034)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2491, file: !84, line: 207, baseType: !2494, size: 64, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2491, file: !84, line: 208, baseType: !2494, size: 64, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2491, file: !84, line: 209, baseType: !2494, size: 64, offset: 192)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2491, file: !84, line: 210, baseType: !2494, size: 64, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2491, file: !84, line: 211, baseType: !2494, size: 64, offset: 320)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2491, file: !84, line: 212, baseType: !2494, size: 64, offset: 384)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2491, file: !84, line: 213, baseType: !2112, size: 64, offset: 448)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2491, file: !84, line: 214, baseType: !2112, size: 64, offset: 512)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2455, file: !84, line: 324, baseType: !2504, size: 64, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!2461, !1491, !211}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2455, file: !84, line: 325, baseType: !2508, size: 64, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{null, !2461}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2455, file: !84, line: 326, baseType: !2458, size: 64, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2455, file: !84, line: 327, baseType: !2458, size: 64, offset: 256)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2455, file: !84, line: 328, baseType: !2458, size: 64, offset: 320)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2455, file: !84, line: 329, baseType: !1599, size: 64, offset: 384)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2455, file: !84, line: 332, baseType: !2516, size: 64, offset: 448)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!2519, !1334}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2455, file: !84, line: 333, baseType: !2521, size: 64, offset: 512)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!211, !1334, !2524}
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2455, file: !84, line: 335, baseType: !2526, size: 64, offset: 576)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{!211, !1334, !2519}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2455, file: !84, line: 337, baseType: !2530, size: 64, offset: 640)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{!211, !1491, !2533}
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1492, file: !90, line: 1425, baseType: !2535, size: 64, offset: 512)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2537)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !84, line: 428, size: 704, elements: !2538)
!2538 = !{!2539, !2543, !2544, !2548, !2549, !2550, !2565, !2588, !2592, !2593, !2616}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2537, file: !84, line: 429, baseType: !2540, size: 64)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!211, !1491, !211, !211, !1480}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2537, file: !84, line: 430, baseType: !1599, size: 64, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2537, file: !84, line: 431, baseType: !2545, size: 64, offset: 128)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!211, !1491, !7}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2537, file: !84, line: 432, baseType: !2545, size: 64, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2537, file: !84, line: 433, baseType: !1599, size: 64, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2537, file: !84, line: 434, baseType: !2551, size: 64, offset: 320)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!211, !1491, !211, !2554}
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !84, line: 415, size: 256, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2555, file: !84, line: 416, baseType: !211, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2555, file: !84, line: 417, baseType: !7, size: 32, offset: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2555, file: !84, line: 418, baseType: !7, size: 32, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2555, file: !84, line: 420, baseType: !7, size: 32, offset: 96)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2555, file: !84, line: 421, baseType: !7, size: 32, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2555, file: !84, line: 422, baseType: !7, size: 32, offset: 160)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2555, file: !84, line: 423, baseType: !7, size: 32, offset: 192)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2555, file: !84, line: 424, baseType: !7, size: 32, offset: 224)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2537, file: !84, line: 435, baseType: !2566, size: 64, offset: 384)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!211, !1491, !2473, !2569}
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !84, line: 343, size: 960, elements: !2571)
!2571 = !{!2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2570, file: !84, line: 344, baseType: !211, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2570, file: !84, line: 345, baseType: !976, size: 64, offset: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2570, file: !84, line: 346, baseType: !976, size: 64, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2570, file: !84, line: 347, baseType: !976, size: 64, offset: 192)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2570, file: !84, line: 348, baseType: !976, size: 64, offset: 256)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2570, file: !84, line: 349, baseType: !976, size: 64, offset: 320)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2570, file: !84, line: 350, baseType: !976, size: 64, offset: 384)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2570, file: !84, line: 351, baseType: !1032, size: 64, offset: 448)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2570, file: !84, line: 353, baseType: !1032, size: 64, offset: 512)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2570, file: !84, line: 354, baseType: !211, size: 32, offset: 576)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2570, file: !84, line: 355, baseType: !211, size: 32, offset: 608)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2570, file: !84, line: 356, baseType: !976, size: 64, offset: 640)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2570, file: !84, line: 357, baseType: !976, size: 64, offset: 704)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2570, file: !84, line: 358, baseType: !976, size: 64, offset: 768)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2570, file: !84, line: 359, baseType: !1032, size: 64, offset: 832)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2570, file: !84, line: 360, baseType: !211, size: 32, offset: 896)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2537, file: !84, line: 436, baseType: !2589, size: 64, offset: 448)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!211, !1491, !2533, !2569}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2537, file: !84, line: 438, baseType: !2566, size: 64, offset: 512)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2537, file: !84, line: 439, baseType: !2594, size: 64, offset: 576)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!211, !1491, !2597}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !84, line: 409, size: 1408, elements: !2599)
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2598, file: !84, line: 410, baseType: !7, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2598, file: !84, line: 411, baseType: !2602, size: 1344, offset: 64)
!2602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2603, size: 1344, elements: !1549)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !84, line: 395, size: 448, elements: !2604)
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2615}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2603, file: !84, line: 396, baseType: !7, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2603, file: !84, line: 397, baseType: !7, size: 32, offset: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2603, file: !84, line: 399, baseType: !7, size: 32, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2603, file: !84, line: 400, baseType: !7, size: 32, offset: 96)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2603, file: !84, line: 401, baseType: !7, size: 32, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2603, file: !84, line: 402, baseType: !7, size: 32, offset: 160)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2603, file: !84, line: 403, baseType: !7, size: 32, offset: 192)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2603, file: !84, line: 404, baseType: !980, size: 64, offset: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2603, file: !84, line: 405, baseType: !2614, size: 64, offset: 320)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !982, line: 126, baseType: !976)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2603, file: !84, line: 406, baseType: !2614, size: 64, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2537, file: !84, line: 440, baseType: !2545, size: 64, offset: 640)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1492, file: !90, line: 1426, baseType: !2618, size: 64, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2620)
!2620 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !90, line: 49, flags: DIFlagFwdDecl)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1492, file: !90, line: 1427, baseType: !986, size: 64, offset: 640)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1492, file: !90, line: 1428, baseType: !986, size: 64, offset: 704)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1492, file: !90, line: 1429, baseType: !986, size: 64, offset: 768)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1492, file: !90, line: 1430, baseType: !1365, size: 64, offset: 832)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1492, file: !90, line: 1431, baseType: !2097, size: 256, offset: 896)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1492, file: !90, line: 1432, baseType: !211, size: 32, offset: 1152)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1492, file: !90, line: 1433, baseType: !1060, size: 32, offset: 1184)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1492, file: !90, line: 1437, baseType: !2629, size: 64, offset: 1216)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2632)
!2632 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !90, line: 1437, flags: DIFlagFwdDecl)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1492, file: !90, line: 1449, baseType: !2634, size: 64, offset: 1280)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1377, line: 34, size: 64, elements: !2635)
!2635 = !{!2636}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2634, file: !1377, line: 35, baseType: !1380, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1492, file: !90, line: 1450, baseType: !996, size: 128, offset: 1344)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1492, file: !90, line: 1451, baseType: !2639, size: 64, offset: 1472)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !897, line: 22, size: 1344, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !3560, !3561, !3562, !4477, !4478, !4479}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2640, file: !897, line: 23, baseType: !1496, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2640, file: !897, line: 24, baseType: !211, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2640, file: !897, line: 25, baseType: !1334, size: 64, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2640, file: !897, line: 26, baseType: !1491, size: 64, offset: 128)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2640, file: !897, line: 27, baseType: !1022, size: 192, offset: 192)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2640, file: !897, line: 28, baseType: !983, size: 64, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2640, file: !897, line: 29, baseType: !983, size: 64, offset: 448)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2640, file: !897, line: 30, baseType: !211, size: 32, offset: 512)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2640, file: !897, line: 31, baseType: !1482, size: 8, offset: 544)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2640, file: !897, line: 33, baseType: !996, size: 128, offset: 576)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2640, file: !897, line: 35, baseType: !2639, size: 64, offset: 704)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2640, file: !897, line: 36, baseType: !1203, size: 8, offset: 768)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2640, file: !897, line: 37, baseType: !2655, size: 64, offset: 832)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2657, line: 53, size: 6592, elements: !2658)
!2657 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2658 = !{!2659, !2661, !2662, !2663, !2666, !2687, !3539, !3540, !3541, !3542, !3552}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2656, file: !2657, line: 54, baseType: !2660, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !982, line: 125, baseType: !976)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2656, file: !2657, line: 60, baseType: !2660, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2656, file: !2657, line: 64, baseType: !986, size: 64, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2656, file: !2657, line: 65, baseType: !2664, size: 64, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2657, line: 65, flags: DIFlagFwdDecl)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2656, file: !2657, line: 66, baseType: !2667, size: 128, offset: 256)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2668, line: 105, size: 128, elements: !2669)
!2668 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2667, file: !2668, line: 110, baseType: !986, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2667, file: !2668, line: 118, baseType: !2672, size: 64, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2668, line: 95, size: 448, elements: !2674)
!2674 = !{!2675, !2676, !2682, !2683, !2684, !2685, !2686}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2673, file: !2668, line: 96, baseType: !1026, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2673, file: !2668, line: 97, baseType: !2677, size: 64, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2668, line: 60, baseType: !2679)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{null, !2681}
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2673, file: !2668, line: 98, baseType: !2677, size: 64, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2673, file: !2668, line: 99, baseType: !1482, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2673, file: !2668, line: 100, baseType: !1482, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2673, file: !2668, line: 101, baseType: !1678, size: 128, align: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2673, file: !2668, line: 102, baseType: !2681, size: 64, offset: 384)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2656, file: !2657, line: 68, baseType: !2688, size: 5568, offset: 384)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !119, line: 461, size: 5568, elements: !2689)
!2689 = !{!2690, !2987, !2989, !2992, !2993, !3044, !3136, !3137, !3138, !3139, !3140, !3149, !3254, !3267, !3466, !3467, !3471, !3473, !3474, !3475, !3479, !3485, !3486, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3527, !3528, !3529, !3532, !3535, !3536, !3537, !3538}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2688, file: !119, line: 462, baseType: !2691, size: 512)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !2692, line: 64, size: 512, elements: !2693)
!2692 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!2693 = !{!2694, !2695, !2696, !2698, !2740, !2843, !2977, !2982, !2983, !2984, !2985, !2986}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2691, file: !2692, line: 65, baseType: !1437, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2691, file: !2692, line: 66, baseType: !996, size: 128, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2691, file: !2692, line: 67, baseType: !2697, size: 64, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !2691, file: !2692, line: 68, baseType: !2699, size: 64, offset: 256)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !2692, line: 192, size: 704, elements: !2701)
!2701 = !{!2702, !2703, !2704, !2705}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2700, file: !2692, line: 193, baseType: !996, size: 128)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2700, file: !2692, line: 194, baseType: !1004, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2700, file: !2692, line: 195, baseType: !2691, size: 512, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !2700, file: !2692, line: 196, baseType: !2706, size: 64, offset: 640)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2708)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !2692, line: 156, size: 192, elements: !2709)
!2709 = !{!2710, !2715, !2720}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2708, file: !2692, line: 157, baseType: !2711, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2712)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!211, !2699, !2697}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2708, file: !2692, line: 158, baseType: !2716, size: 64, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2717)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{!1437, !2699, !2697}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2708, file: !2692, line: 159, baseType: !2721, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2722)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!211, !2699, !2697, !2725}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !2692, line: 148, size: 20736, elements: !2727)
!2727 = !{!2728, !2730, !2734, !2735, !2739}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2726, file: !2692, line: 149, baseType: !2729, size: 192)
!2729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1463, size: 192, elements: !1549)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !2726, file: !2692, line: 150, baseType: !2731, size: 4096, offset: 192)
!2731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1463, size: 4096, elements: !2732)
!2732 = !{!2733}
!2733 = !DISubrange(count: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !2726, file: !2692, line: 151, baseType: !211, size: 32, offset: 4288)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2726, file: !2692, line: 152, baseType: !2736, size: 16384, offset: 4320)
!2736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 16384, elements: !2737)
!2737 = !{!2738}
!2738 = !DISubrange(count: 2048)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !2726, file: !2692, line: 153, baseType: !211, size: 32, offset: 20704)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !2691, file: !2692, line: 69, baseType: !2741, size: 64, offset: 320)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !2692, line: 138, size: 448, elements: !2743)
!2743 = !{!2744, !2748, !2767, !2769, !2802, !2835, !2839}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2742, file: !2692, line: 139, baseType: !2745, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{null, !2697}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !2742, file: !2692, line: 140, baseType: !2749, size: 64, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2751)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !2752, line: 230, size: 128, elements: !2753)
!2752 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!2753 = !{!2754, !2763}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2751, file: !2752, line: 231, baseType: !2755, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!1703, !2697, !2758, !1463}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !2752, line: 30, size: 128, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2759, file: !2752, line: 31, baseType: !1437, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2759, file: !2752, line: 32, baseType: !1338, size: 16, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2751, file: !2752, line: 232, baseType: !2764, size: 64, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!1703, !2697, !2758, !1437, !1631}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !2742, file: !2692, line: 141, baseType: !2768, size: 64, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !2742, file: !2692, line: 142, baseType: !2770, size: 64, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !2752, line: 84, size: 320, elements: !2774)
!2774 = !{!2775, !2776, !2780, !2799, !2800}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2773, file: !2752, line: 85, baseType: !1437, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !2773, file: !2752, line: 86, baseType: !2777, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!1338, !2697, !2758, !211}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !2773, file: !2752, line: 88, baseType: !2781, size: 64, offset: 128)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!1338, !2697, !2784, !211}
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !2752, line: 168, size: 448, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2794, !2795}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2785, file: !2752, line: 169, baseType: !2759, size: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2785, file: !2752, line: 170, baseType: !1631, size: 64, offset: 128)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2785, file: !2752, line: 171, baseType: !983, size: 64, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2785, file: !2752, line: 172, baseType: !2791, size: 64, offset: 256)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{!1703, !1698, !2697, !2784, !1463, !1501, !1631}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2785, file: !2752, line: 174, baseType: !2791, size: 64, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2785, file: !2752, line: 176, baseType: !2796, size: 64, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!211, !1698, !2697, !2784, !1238}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2773, file: !2752, line: 90, baseType: !2768, size: 64, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !2773, file: !2752, line: 91, baseType: !2801, size: 64, offset: 256)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !2742, file: !2692, line: 143, baseType: !2803, size: 64, offset: 256)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!2806, !2697}
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2808)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !107, line: 39, size: 384, elements: !2809)
!2809 = !{!2810, !2811, !2815, !2819, !2827, !2831}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2808, file: !107, line: 40, baseType: !106, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2808, file: !107, line: 41, baseType: !2812, size: 64, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!1482}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2808, file: !107, line: 42, baseType: !2816, size: 64, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!983}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2808, file: !107, line: 43, baseType: !2820, size: 64, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!2823, !2825}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !107, line: 19, flags: DIFlagFwdDecl)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2808, file: !107, line: 44, baseType: !2828, size: 64, offset: 256)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!2823}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2808, file: !107, line: 45, baseType: !2832, size: 64, offset: 320)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{null, !983}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2742, file: !2692, line: 144, baseType: !2836, size: 64, offset: 320)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!2823, !2697}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2742, file: !2692, line: 145, baseType: !2840, size: 64, offset: 384)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{null, !2697, !2363, !2364}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !2691, file: !2692, line: 70, baseType: !2844, size: 64, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !2846, line: 123, size: 1024, elements: !2847)
!2846 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!2847 = !{!2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2970, !2971, !2972, !2973, !2974}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2845, file: !2846, line: 124, baseType: !1060, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2845, file: !2846, line: 125, baseType: !1060, size: 32, offset: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2845, file: !2846, line: 135, baseType: !2844, size: 64, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2845, file: !2846, line: 136, baseType: !1437, size: 64, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2845, file: !2846, line: 138, baseType: !1084, size: 192, align: 64, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2845, file: !2846, line: 140, baseType: !2823, size: 64, offset: 384)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2845, file: !2846, line: 141, baseType: !7, size: 32, offset: 448)
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2845, file: !2846, line: 142, baseType: !2856, size: 256, offset: 512)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2845, file: !2846, line: 142, size: 256, elements: !2857)
!2857 = !{!2858, !2910, !2914}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2856, file: !2846, line: 143, baseType: !2859, size: 192)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !2846, line: 91, size: 192, elements: !2860)
!2860 = !{!2861, !2862, !2863}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !2859, file: !2846, line: 92, baseType: !986, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2859, file: !2846, line: 94, baseType: !1193, size: 64, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2859, file: !2846, line: 100, baseType: !2864, size: 64, offset: 128)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !2846, line: 180, size: 704, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2882, !2883, !2884, !2908, !2909}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2865, file: !2846, line: 182, baseType: !2844, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2865, file: !2846, line: 183, baseType: !7, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !2865, file: !2846, line: 186, baseType: !2870, size: 192, offset: 128)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2871, line: 19, size: 192, elements: !2872)
!2871 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2872 = !{!2873, !2880, !2881}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2870, file: !2871, line: 20, baseType: !2874, size: 128)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2875, line: 292, size: 128, elements: !2876)
!2875 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2876 = !{!2877, !2878, !2879}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2874, file: !2875, line: 293, baseType: !1004)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2874, file: !2875, line: 295, baseType: !984, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2874, file: !2875, line: 296, baseType: !983, size: 64, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2870, file: !2871, line: 21, baseType: !7, size: 32, offset: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2870, file: !2871, line: 22, baseType: !7, size: 32, offset: 160)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !2865, file: !2846, line: 187, baseType: !1049, size: 32, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !2865, file: !2846, line: 188, baseType: !1049, size: 32, offset: 352)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !2865, file: !2846, line: 189, baseType: !2885, size: 64, offset: 384)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !2846, line: 168, size: 320, elements: !2887)
!2887 = !{!2888, !2892, !2896, !2900, !2904}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !2886, file: !2846, line: 169, baseType: !2889, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!211, !1625, !2864}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !2886, file: !2846, line: 171, baseType: !2893, size: 64, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!211, !2844, !1437, !1338}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !2886, file: !2846, line: 173, baseType: !2897, size: 64, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!211, !2844}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !2886, file: !2846, line: 174, baseType: !2901, size: 64, offset: 192)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!211, !2844, !2844, !1437}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !2886, file: !2846, line: 176, baseType: !2905, size: 64, offset: 256)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!211, !1625, !2844, !2864}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !2865, file: !2846, line: 192, baseType: !996, size: 128, offset: 448)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !2865, file: !2846, line: 194, baseType: !1873, size: 128, offset: 576)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2856, file: !2846, line: 144, baseType: !2911, size: 64)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !2846, line: 103, size: 64, elements: !2912)
!2912 = !{!2913}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2911, file: !2846, line: 104, baseType: !2844, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2856, file: !2846, line: 145, baseType: !2915, size: 256)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !2846, line: 107, size: 256, elements: !2916)
!2916 = !{!2917, !2965, !2968, !2969}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2915, file: !2846, line: 108, baseType: !2918, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2920)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !2846, line: 217, size: 768, elements: !2921)
!2921 = !{!2922, !2942, !2946, !2947, !2948, !2949, !2950, !2954, !2955, !2956, !2957, !2961}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2920, file: !2846, line: 222, baseType: !2923, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!211, !2926}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !2846, line: 197, size: 1088, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2927, file: !2846, line: 199, baseType: !2844, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2927, file: !2846, line: 200, baseType: !1698, size: 64, offset: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2927, file: !2846, line: 201, baseType: !1625, size: 64, offset: 128)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2927, file: !2846, line: 202, baseType: !983, size: 64, offset: 192)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2927, file: !2846, line: 205, baseType: !1022, size: 192, offset: 256)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2927, file: !2846, line: 206, baseType: !1022, size: 192, offset: 448)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2927, file: !2846, line: 207, baseType: !211, size: 32, offset: 640)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2927, file: !2846, line: 208, baseType: !996, size: 128, offset: 704)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2927, file: !2846, line: 209, baseType: !1463, size: 64, offset: 832)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2927, file: !2846, line: 211, baseType: !1631, size: 64, offset: 896)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2927, file: !2846, line: 212, baseType: !1482, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2927, file: !2846, line: 213, baseType: !1482, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2927, file: !2846, line: 214, baseType: !1267, size: 64, offset: 1024)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2920, file: !2846, line: 223, baseType: !2943, size: 64, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !2926}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2920, file: !2846, line: 236, baseType: !1659, size: 64, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2920, file: !2846, line: 238, baseType: !1646, size: 64, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2920, file: !2846, line: 239, baseType: !1655, size: 64, offset: 256)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2920, file: !2846, line: 240, baseType: !1651, size: 64, offset: 320)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2920, file: !2846, line: 242, baseType: !2951, size: 64, offset: 384)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!1703, !2926, !1463, !1631, !1501}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2920, file: !2846, line: 252, baseType: !1631, size: 64, offset: 448)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2920, file: !2846, line: 259, baseType: !1482, size: 8, offset: 512)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2920, file: !2846, line: 260, baseType: !2951, size: 64, offset: 576)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2920, file: !2846, line: 263, baseType: !2958, size: 64, offset: 640)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!1823, !2926, !1825}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2920, file: !2846, line: 266, baseType: !2962, size: 64, offset: 704)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!211, !2926, !1238}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2915, file: !2846, line: 109, baseType: !2966, size: 64, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !2846, line: 31, flags: DIFlagFwdDecl)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2915, file: !2846, line: 110, baseType: !1501, size: 64, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2915, file: !2846, line: 111, baseType: !2844, size: 64, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2845, file: !2846, line: 148, baseType: !983, size: 64, offset: 768)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2845, file: !2846, line: 154, baseType: !976, size: 64, offset: 832)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2845, file: !2846, line: 156, baseType: !1108, size: 16, offset: 896)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2845, file: !2846, line: 157, baseType: !1338, size: 16, offset: 912)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2845, file: !2846, line: 158, baseType: !2975, size: 64, offset: 960)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !2846, line: 32, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2691, file: !2692, line: 71, baseType: !2978, size: 32, offset: 448)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2979, line: 19, size: 32, elements: !2980)
!2979 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2980 = !{!2981}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2978, file: !2979, line: 20, baseType: !1055, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !2691, file: !2692, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !2691, file: !2692, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !2691, file: !2692, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !2691, file: !2692, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !2691, file: !2692, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2688, file: !119, line: 463, baseType: !2988, size: 64, offset: 512)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2688, file: !119, line: 465, baseType: !2990, size: 64, offset: 576)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !119, line: 36, flags: DIFlagFwdDecl)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !2688, file: !119, line: 467, baseType: !1437, size: 64, offset: 640)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2688, file: !119, line: 468, baseType: !2994, size: 64, offset: 704)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2996)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !119, line: 87, size: 384, elements: !2997)
!2997 = !{!2998, !2999, !3000, !3004, !3009, !3013}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2996, file: !119, line: 88, baseType: !1437, size: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2996, file: !119, line: 89, baseType: !2770, size: 64, offset: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2996, file: !119, line: 90, baseType: !3001, size: 64, offset: 128)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!211, !2988, !2725}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2996, file: !119, line: 91, baseType: !3005, size: 64, offset: 192)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!1463, !2988, !3008, !2363, !2364}
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2996, file: !119, line: 93, baseType: !3010, size: 64, offset: 256)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{null, !2988}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2996, file: !119, line: 95, baseType: !3014, size: 64, offset: 320)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !48, line: 278, size: 1472, elements: !3017)
!3017 = !{!3018, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3016, file: !48, line: 279, baseType: !3019, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!211, !2988}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3016, file: !48, line: 280, baseType: !3010, size: 64, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3016, file: !48, line: 281, baseType: !3019, size: 64, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3016, file: !48, line: 282, baseType: !3019, size: 64, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3016, file: !48, line: 283, baseType: !3019, size: 64, offset: 256)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3016, file: !48, line: 284, baseType: !3019, size: 64, offset: 320)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3016, file: !48, line: 285, baseType: !3019, size: 64, offset: 384)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3016, file: !48, line: 286, baseType: !3019, size: 64, offset: 448)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3016, file: !48, line: 287, baseType: !3019, size: 64, offset: 512)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3016, file: !48, line: 288, baseType: !3019, size: 64, offset: 576)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3016, file: !48, line: 289, baseType: !3019, size: 64, offset: 640)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3016, file: !48, line: 290, baseType: !3019, size: 64, offset: 704)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3016, file: !48, line: 291, baseType: !3019, size: 64, offset: 768)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3016, file: !48, line: 292, baseType: !3019, size: 64, offset: 832)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3016, file: !48, line: 293, baseType: !3019, size: 64, offset: 896)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3016, file: !48, line: 294, baseType: !3019, size: 64, offset: 960)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3016, file: !48, line: 295, baseType: !3019, size: 64, offset: 1024)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3016, file: !48, line: 296, baseType: !3019, size: 64, offset: 1088)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3016, file: !48, line: 297, baseType: !3019, size: 64, offset: 1152)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3016, file: !48, line: 298, baseType: !3019, size: 64, offset: 1216)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3016, file: !48, line: 299, baseType: !3019, size: 64, offset: 1280)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3016, file: !48, line: 300, baseType: !3019, size: 64, offset: 1344)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3016, file: !48, line: 301, baseType: !3019, size: 64, offset: 1408)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2688, file: !119, line: 470, baseType: !3045, size: 64, offset: 768)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3047, line: 82, size: 1408, elements: !3048)
!3047 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3048 = !{!3049, !3050, !3051, !3052, !3053, !3054, !3055, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3131, !3134, !3135}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3046, file: !3047, line: 83, baseType: !1437, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3046, file: !3047, line: 84, baseType: !1437, size: 64, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3046, file: !3047, line: 85, baseType: !2988, size: 64, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3046, file: !3047, line: 86, baseType: !2770, size: 64, offset: 192)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3046, file: !3047, line: 87, baseType: !2770, size: 64, offset: 256)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3046, file: !3047, line: 88, baseType: !2770, size: 64, offset: 320)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3046, file: !3047, line: 90, baseType: !3056, size: 64, offset: 384)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!211, !2988, !3059}
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !113, line: 95, size: 1152, elements: !3061)
!3061 = !{!3062, !3063, !3064, !3065, !3066, !3067, !3068, !3082, !3095, !3096, !3097, !3098, !3099, !3107, !3108, !3109, !3110, !3111, !3112}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3060, file: !113, line: 96, baseType: !1437, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3060, file: !113, line: 97, baseType: !3045, size: 64, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3060, file: !113, line: 99, baseType: !1528, size: 64, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3060, file: !113, line: 100, baseType: !1437, size: 64, offset: 192)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3060, file: !113, line: 102, baseType: !1482, size: 8, offset: 256)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3060, file: !113, line: 103, baseType: !112, size: 32, offset: 288)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3060, file: !113, line: 105, baseType: !3069, size: 64, offset: 320)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3071)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3072, line: 262, size: 1600, elements: !3073)
!3072 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3073 = !{!3074, !3076, !3077, !3081}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3071, file: !3072, line: 263, baseType: !3075, size: 256)
!3075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 256, elements: !1402)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3071, file: !3072, line: 264, baseType: !3075, size: 256, offset: 256)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3071, file: !3072, line: 265, baseType: !3078, size: 1024, offset: 512)
!3078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 1024, elements: !3079)
!3079 = !{!3080}
!3080 = !DISubrange(count: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3071, file: !3072, line: 266, baseType: !2823, size: 64, offset: 1536)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3060, file: !113, line: 106, baseType: !3083, size: 64, offset: 384)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3085)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3072, line: 210, size: 256, elements: !3086)
!3086 = !{!3087, !3091, !3093, !3094}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3085, file: !3072, line: 211, baseType: !3088, size: 72)
!3088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 72, elements: !3089)
!3089 = !{!3090}
!3090 = !DISubrange(count: 9)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3085, file: !3072, line: 212, baseType: !3092, size: 64, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3072, line: 14, baseType: !986)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3085, file: !3072, line: 213, baseType: !1050, size: 32, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3085, file: !3072, line: 214, baseType: !1050, size: 32, offset: 224)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3060, file: !113, line: 108, baseType: !3019, size: 64, offset: 448)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3060, file: !113, line: 109, baseType: !3010, size: 64, offset: 512)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3060, file: !113, line: 110, baseType: !3019, size: 64, offset: 576)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3060, file: !113, line: 111, baseType: !3010, size: 64, offset: 640)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3060, file: !113, line: 112, baseType: !3100, size: 64, offset: 704)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{!211, !2988, !3103}
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !48, line: 52, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !48, line: 50, size: 32, elements: !3105)
!3105 = !{!3106}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3104, file: !48, line: 51, baseType: !211, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3060, file: !113, line: 113, baseType: !3019, size: 64, offset: 768)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3060, file: !113, line: 114, baseType: !2770, size: 64, offset: 832)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3060, file: !113, line: 115, baseType: !2770, size: 64, offset: 896)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3060, file: !113, line: 117, baseType: !3014, size: 64, offset: 960)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3060, file: !113, line: 118, baseType: !3010, size: 64, offset: 1024)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3060, file: !113, line: 120, baseType: !3113, size: 64, offset: 1088)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !113, line: 120, flags: DIFlagFwdDecl)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3046, file: !3047, line: 91, baseType: !3001, size: 64, offset: 448)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3046, file: !3047, line: 92, baseType: !3019, size: 64, offset: 512)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3046, file: !3047, line: 93, baseType: !3010, size: 64, offset: 576)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3046, file: !3047, line: 94, baseType: !3019, size: 64, offset: 640)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3046, file: !3047, line: 95, baseType: !3010, size: 64, offset: 704)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3046, file: !3047, line: 97, baseType: !3019, size: 64, offset: 768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3046, file: !3047, line: 98, baseType: !3019, size: 64, offset: 832)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3046, file: !3047, line: 100, baseType: !3100, size: 64, offset: 896)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3046, file: !3047, line: 101, baseType: !3019, size: 64, offset: 960)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3046, file: !3047, line: 103, baseType: !3019, size: 64, offset: 1024)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3046, file: !3047, line: 105, baseType: !3019, size: 64, offset: 1088)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3046, file: !3047, line: 107, baseType: !3014, size: 64, offset: 1152)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3046, file: !3047, line: 109, baseType: !3128, size: 64, offset: 1216)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3130)
!3130 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3047, line: 109, flags: DIFlagFwdDecl)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3046, file: !3047, line: 111, baseType: !3132, size: 64, offset: 1280)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3047, line: 111, flags: DIFlagFwdDecl)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3046, file: !3047, line: 112, baseType: !1543, offset: 1344)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3046, file: !3047, line: 114, baseType: !1482, size: 8, offset: 1344)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !2688, file: !119, line: 471, baseType: !3059, size: 64, offset: 832)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !2688, file: !119, line: 473, baseType: !983, size: 64, offset: 896)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2688, file: !119, line: 475, baseType: !983, size: 64, offset: 960)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2688, file: !119, line: 480, baseType: !1022, size: 192, offset: 1024)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2688, file: !119, line: 484, baseType: !3141, size: 576, offset: 1216)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !119, line: 361, size: 576, elements: !3142)
!3142 = !{!3143, !3144, !3145, !3146, !3147, !3148}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3141, file: !119, line: 362, baseType: !996, size: 128)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3141, file: !119, line: 363, baseType: !996, size: 128, offset: 128)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3141, file: !119, line: 364, baseType: !996, size: 128, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3141, file: !119, line: 365, baseType: !996, size: 128, offset: 384)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3141, file: !119, line: 366, baseType: !1482, size: 8, offset: 512)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3141, file: !119, line: 367, baseType: !118, size: 32, offset: 544)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !2688, file: !119, line: 485, baseType: !3150, size: 2304, offset: 1792)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !48, line: 565, size: 2304, elements: !3151)
!3151 = !{!3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3247, !3251}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3150, file: !48, line: 566, baseType: !3103, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3150, file: !48, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3150, file: !48, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3150, file: !48, line: 569, baseType: !1482, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3150, file: !48, line: 570, baseType: !1482, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3150, file: !48, line: 571, baseType: !1482, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3150, file: !48, line: 572, baseType: !1482, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3150, file: !48, line: 573, baseType: !1482, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3150, file: !48, line: 574, baseType: !1482, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3150, file: !48, line: 575, baseType: !1482, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3150, file: !48, line: 576, baseType: !1482, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3150, file: !48, line: 577, baseType: !1049, size: 32, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3150, file: !48, line: 578, baseType: !1004, offset: 96)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3150, file: !48, line: 580, baseType: !996, size: 128, offset: 128)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3150, file: !48, line: 581, baseType: !2338, size: 192, offset: 256)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3150, file: !48, line: 582, baseType: !3168, size: 64, offset: 448)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3170, line: 43, size: 1472, elements: !3171)
!3170 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3171 = !{!3172, !3173, !3174, !3175, !3176, !3179, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3169, file: !3170, line: 44, baseType: !1437, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3169, file: !3170, line: 45, baseType: !211, size: 32, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3169, file: !3170, line: 46, baseType: !996, size: 128, offset: 128)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3169, file: !3170, line: 47, baseType: !1004, offset: 256)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3169, file: !3170, line: 48, baseType: !3177, size: 64, offset: 256)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !48, line: 533, flags: DIFlagFwdDecl)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3169, file: !3170, line: 49, baseType: !3180, size: 320, offset: 320)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3181, line: 11, size: 320, elements: !3182)
!3181 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3182 = !{!3183, !3184, !3185, !3190}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3180, file: !3181, line: 16, baseType: !1537, size: 128)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3180, file: !3181, line: 17, baseType: !986, size: 64, offset: 128)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3180, file: !3181, line: 18, baseType: !3186, size: 64, offset: 192)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{null, !3189}
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3180, file: !3181, line: 19, baseType: !1049, size: 32, offset: 256)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3169, file: !3170, line: 50, baseType: !986, size: 64, offset: 640)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3169, file: !3170, line: 51, baseType: !1137, size: 64, offset: 704)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3169, file: !3170, line: 52, baseType: !1137, size: 64, offset: 768)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3169, file: !3170, line: 53, baseType: !1137, size: 64, offset: 832)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3169, file: !3170, line: 54, baseType: !1137, size: 64, offset: 896)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3169, file: !3170, line: 55, baseType: !1137, size: 64, offset: 960)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3169, file: !3170, line: 56, baseType: !986, size: 64, offset: 1024)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3169, file: !3170, line: 57, baseType: !986, size: 64, offset: 1088)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3169, file: !3170, line: 58, baseType: !986, size: 64, offset: 1152)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3169, file: !3170, line: 59, baseType: !986, size: 64, offset: 1216)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3169, file: !3170, line: 60, baseType: !986, size: 64, offset: 1280)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3169, file: !3170, line: 61, baseType: !2988, size: 64, offset: 1344)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3169, file: !3170, line: 62, baseType: !1482, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3169, file: !3170, line: 63, baseType: !1482, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3150, file: !48, line: 583, baseType: !1482, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3150, file: !48, line: 584, baseType: !1482, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3150, file: !48, line: 585, baseType: !1482, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3150, file: !48, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3150, file: !48, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3150, file: !48, line: 592, baseType: !1129, size: 512, offset: 576)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3150, file: !48, line: 593, baseType: !976, size: 64, offset: 1088)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3150, file: !48, line: 594, baseType: !2278, size: 256, offset: 1152)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3150, file: !48, line: 595, baseType: !1873, size: 128, offset: 1408)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3150, file: !48, line: 596, baseType: !3177, size: 64, offset: 1536)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3150, file: !48, line: 597, baseType: !1060, size: 32, offset: 1600)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3150, file: !48, line: 598, baseType: !1060, size: 32, offset: 1632)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3150, file: !48, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3150, file: !48, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3150, file: !48, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3150, file: !48, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3150, file: !48, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3150, file: !48, line: 604, baseType: !1482, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3150, file: !48, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3150, file: !48, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3150, file: !48, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3150, file: !48, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3150, file: !48, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3150, file: !48, line: 610, baseType: !7, size: 32, offset: 1696)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3150, file: !48, line: 611, baseType: !125, size: 32, offset: 1728)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3150, file: !48, line: 612, baseType: !47, size: 32, offset: 1760)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3150, file: !48, line: 613, baseType: !211, size: 32, offset: 1792)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3150, file: !48, line: 614, baseType: !211, size: 32, offset: 1824)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3150, file: !48, line: 615, baseType: !976, size: 64, offset: 1856)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3150, file: !48, line: 616, baseType: !976, size: 64, offset: 1920)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3150, file: !48, line: 617, baseType: !976, size: 64, offset: 1984)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3150, file: !48, line: 618, baseType: !976, size: 64, offset: 2048)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3150, file: !48, line: 620, baseType: !3238, size: 64, offset: 2112)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !48, line: 536, size: 256, elements: !3240)
!3240 = !{!3241, !3242, !3243, !3244}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3239, file: !48, line: 537, baseType: !1004)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3239, file: !48, line: 538, baseType: !7, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3239, file: !48, line: 540, baseType: !996, size: 128, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3239, file: !48, line: 543, baseType: !3245, size: 64, offset: 192)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !48, line: 534, flags: DIFlagFwdDecl)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3150, file: !48, line: 621, baseType: !3248, size: 64, offset: 2176)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{null, !2988, !2089}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3150, file: !48, line: 622, baseType: !3252, size: 64, offset: 2240)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !48, line: 622, flags: DIFlagFwdDecl)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !2688, file: !119, line: 486, baseType: !3255, size: 64, offset: 4096)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !48, line: 642, size: 1792, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3264, !3265, !3266}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3256, file: !48, line: 643, baseType: !3016, size: 1472)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3256, file: !48, line: 644, baseType: !3019, size: 64, offset: 1472)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3256, file: !48, line: 645, baseType: !3261, size: 64, offset: 1536)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{null, !2988, !1482}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3256, file: !48, line: 646, baseType: !3019, size: 64, offset: 1600)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3256, file: !48, line: 647, baseType: !3010, size: 64, offset: 1664)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3256, file: !48, line: 648, baseType: !3010, size: 64, offset: 1728)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !2688, file: !119, line: 493, baseType: !3268, size: 64, offset: 4160)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 64)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !133, line: 162, size: 1088, elements: !3270)
!3270 = !{!3271, !3272, !3273, !3448, !3449, !3450, !3451, !3452, !3453, !3456, !3457, !3458, !3459, !3460, !3461, !3462}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3269, file: !133, line: 163, baseType: !996, size: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3269, file: !133, line: 164, baseType: !1437, size: 64, offset: 128)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3269, file: !133, line: 165, baseType: !3274, size: 64, offset: 192)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !133, line: 105, size: 640, elements: !3277)
!3277 = !{!3278, !3396, !3409, !3414, !3418, !3425, !3429, !3433, !3440, !3444}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3276, file: !133, line: 106, baseType: !3279, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!211, !3268, !3282, !132}
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3284, line: 51, size: 1344, elements: !3285)
!3284 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3285 = !{!3286, !3287, !3289, !3290, !3380, !3389, !3390, !3391, !3392, !3393, !3394, !3395}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3283, file: !3284, line: 52, baseType: !1437, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3283, file: !3284, line: 53, baseType: !3288, size: 32, offset: 64)
!3288 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3284, line: 28, baseType: !1049)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3283, file: !3284, line: 54, baseType: !1437, size: 64, offset: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3283, file: !3284, line: 55, baseType: !3291, size: 192, offset: 192)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3292, line: 17, size: 192, elements: !3293)
!3292 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3293 = !{!3294, !3296, !3379}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3291, file: !3292, line: 18, baseType: !3295, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3291, file: !3292, line: 19, baseType: !3297, size: 64, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3299)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3292, line: 110, size: 1152, elements: !3300)
!3300 = !{!3301, !3305, !3309, !3315, !3321, !3325, !3329, !3334, !3338, !3339, !3343, !3347, !3351, !3362, !3363, !3364, !3365, !3375}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3299, file: !3292, line: 111, baseType: !3302, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!3295, !3295}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3299, file: !3292, line: 112, baseType: !3306, size: 64, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{null, !3295}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3299, file: !3292, line: 113, baseType: !3310, size: 64, offset: 128)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{!1482, !3313}
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3291)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3299, file: !3292, line: 114, baseType: !3316, size: 64, offset: 192)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!2823, !3313, !3319}
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2688)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3299, file: !3292, line: 116, baseType: !3322, size: 64, offset: 256)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!1482, !3313, !1437}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3299, file: !3292, line: 118, baseType: !3326, size: 64, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{!211, !3313, !1437, !7, !983, !1631}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3299, file: !3292, line: 123, baseType: !3330, size: 64, offset: 384)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!211, !3313, !1437, !3333, !1631}
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3299, file: !3292, line: 126, baseType: !3335, size: 64, offset: 448)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!1437, !3313}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3299, file: !3292, line: 127, baseType: !3335, size: 64, offset: 512)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3299, file: !3292, line: 128, baseType: !3340, size: 64, offset: 576)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!3295, !3313}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3299, file: !3292, line: 130, baseType: !3344, size: 64, offset: 640)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!3295, !3313, !3295}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3299, file: !3292, line: 133, baseType: !3348, size: 64, offset: 704)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!3295, !3313, !1437}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3299, file: !3292, line: 135, baseType: !3352, size: 64, offset: 768)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!211, !3313, !1437, !1437, !7, !7, !3355}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3292, line: 43, size: 640, elements: !3357)
!3357 = !{!3358, !3359, !3360}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3356, file: !3292, line: 44, baseType: !3295, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3356, file: !3292, line: 45, baseType: !7, size: 32, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3356, file: !3292, line: 46, baseType: !3361, size: 512, offset: 128)
!3361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 512, elements: !1168)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3299, file: !3292, line: 140, baseType: !3344, size: 64, offset: 832)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3299, file: !3292, line: 143, baseType: !3340, size: 64, offset: 896)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3299, file: !3292, line: 145, baseType: !3302, size: 64, offset: 960)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3299, file: !3292, line: 146, baseType: !3366, size: 64, offset: 1024)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!211, !3313, !3369}
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3292, line: 29, size: 128, elements: !3371)
!3371 = !{!3372, !3373, !3374}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3370, file: !3292, line: 30, baseType: !7, size: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3370, file: !3292, line: 31, baseType: !7, size: 32, offset: 32)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3370, file: !3292, line: 32, baseType: !3313, size: 64, offset: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3299, file: !3292, line: 148, baseType: !3376, size: 64, offset: 1088)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!211, !3313, !2988}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3291, file: !3292, line: 20, baseType: !2988, size: 64, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3283, file: !3284, line: 57, baseType: !3381, size: 64, offset: 384)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3284, line: 31, size: 704, elements: !3383)
!3383 = !{!3384, !3385, !3386, !3387, !3388}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3382, file: !3284, line: 32, baseType: !1463, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3382, file: !3284, line: 33, baseType: !211, size: 32, offset: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3382, file: !3284, line: 34, baseType: !983, size: 64, offset: 128)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3382, file: !3284, line: 35, baseType: !3381, size: 64, offset: 192)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3382, file: !3284, line: 43, baseType: !2785, size: 448, offset: 256)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3283, file: !3284, line: 58, baseType: !3381, size: 64, offset: 448)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3283, file: !3284, line: 59, baseType: !3282, size: 64, offset: 512)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3283, file: !3284, line: 60, baseType: !3282, size: 64, offset: 576)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3283, file: !3284, line: 61, baseType: !3282, size: 64, offset: 640)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3283, file: !3284, line: 63, baseType: !2691, size: 512, offset: 704)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3283, file: !3284, line: 65, baseType: !986, size: 64, offset: 1216)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3283, file: !3284, line: 66, baseType: !983, size: 64, offset: 1280)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3276, file: !133, line: 108, baseType: !3397, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!211, !3268, !3400, !132}
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !133, line: 63, size: 640, elements: !3402)
!3402 = !{!3403, !3404, !3405}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3401, file: !133, line: 64, baseType: !3295, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3401, file: !133, line: 65, baseType: !211, size: 32, offset: 64)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3401, file: !133, line: 66, baseType: !3406, size: 512, offset: 96)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 512, elements: !3407)
!3407 = !{!3408}
!3408 = !DISubrange(count: 16)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3276, file: !133, line: 110, baseType: !3410, size: 64, offset: 128)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{!211, !3268, !7, !3413}
!3413 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !982, line: 164, baseType: !986)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3276, file: !133, line: 111, baseType: !3415, size: 64, offset: 192)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{null, !3268, !7}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3276, file: !133, line: 112, baseType: !3419, size: 64, offset: 256)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!211, !3268, !3282, !3422, !7, !985, !3424}
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3276, file: !133, line: 117, baseType: !3426, size: 64, offset: 320)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!211, !3268, !7, !7, !983}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3276, file: !133, line: 119, baseType: !3430, size: 64, offset: 384)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{null, !3268, !7, !7}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3276, file: !133, line: 121, baseType: !3434, size: 64, offset: 448)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!211, !3268, !3437, !1482}
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3439, line: 11, flags: DIFlagFwdDecl)
!3439 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3276, file: !133, line: 122, baseType: !3441, size: 64, offset: 512)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{null, !3268, !3437}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3276, file: !133, line: 123, baseType: !3445, size: 64, offset: 576)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!211, !3268, !3400, !985, !3424}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3269, file: !133, line: 166, baseType: !983, size: 64, offset: 256)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3269, file: !133, line: 167, baseType: !7, size: 32, offset: 320)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3269, file: !133, line: 168, baseType: !7, size: 32, offset: 352)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3269, file: !133, line: 171, baseType: !3295, size: 64, offset: 384)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3269, file: !133, line: 172, baseType: !132, size: 32, offset: 448)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3269, file: !133, line: 173, baseType: !3454, size: 64, offset: 512)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !133, line: 134, flags: DIFlagFwdDecl)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3269, file: !133, line: 175, baseType: !3268, size: 64, offset: 576)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3269, file: !133, line: 182, baseType: !3413, size: 64, offset: 640)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3269, file: !133, line: 183, baseType: !7, size: 32, offset: 704)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3269, file: !133, line: 184, baseType: !7, size: 32, offset: 736)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3269, file: !133, line: 185, baseType: !2874, size: 128, offset: 768)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3269, file: !133, line: 186, baseType: !1022, size: 192, offset: 896)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3269, file: !133, line: 187, baseType: !3463, offset: 1088)
!3463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !3464)
!3464 = !{!3465}
!3465 = !DISubrange(count: -1)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !2688, file: !119, line: 499, baseType: !996, size: 128, offset: 4224)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !2688, file: !119, line: 502, baseType: !3468, size: 64, offset: 4352)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3470)
!3470 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !119, line: 502, flags: DIFlagFwdDecl)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !2688, file: !119, line: 504, baseType: !3472, size: 64, offset: 4416)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !2688, file: !119, line: 505, baseType: !976, size: 64, offset: 4480)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !2688, file: !119, line: 510, baseType: !976, size: 64, offset: 4544)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !2688, file: !119, line: 511, baseType: !3476, size: 64, offset: 4608)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3478)
!3478 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !119, line: 511, flags: DIFlagFwdDecl)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !2688, file: !119, line: 513, baseType: !3480, size: 64, offset: 4672)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !119, line: 288, size: 128, elements: !3482)
!3482 = !{!3483, !3484}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3481, file: !119, line: 293, baseType: !7, size: 32)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3481, file: !119, line: 294, baseType: !986, size: 64, offset: 64)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !2688, file: !119, line: 515, baseType: !996, size: 128, offset: 4736)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !2688, file: !119, line: 526, baseType: !3487, offset: 4864)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3488, line: 5, elements: !1018)
!3488 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !2688, file: !119, line: 528, baseType: !3282, size: 64, offset: 4864)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2688, file: !119, line: 529, baseType: !3295, size: 64, offset: 4928)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !2688, file: !119, line: 534, baseType: !1496, size: 32, offset: 4992)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2688, file: !119, line: 535, baseType: !1049, size: 32, offset: 5024)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !2688, file: !119, line: 537, baseType: !1004, offset: 5056)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !2688, file: !119, line: 538, baseType: !996, size: 128, offset: 5056)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2688, file: !119, line: 540, baseType: !3496, size: 64, offset: 5184)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3498, line: 54, size: 960, elements: !3499)
!3498 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3499 = !{!3500, !3501, !3502, !3503, !3504, !3505, !3506, !3510, !3514, !3515, !3516, !3517, !3521, !3525, !3526}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3497, file: !3498, line: 55, baseType: !1437, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3497, file: !3498, line: 56, baseType: !1528, size: 64, offset: 64)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3497, file: !3498, line: 58, baseType: !2770, size: 64, offset: 128)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3497, file: !3498, line: 59, baseType: !2770, size: 64, offset: 192)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3497, file: !3498, line: 60, baseType: !2697, size: 64, offset: 256)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3497, file: !3498, line: 62, baseType: !3001, size: 64, offset: 320)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3497, file: !3498, line: 63, baseType: !3507, size: 64, offset: 384)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{!1463, !2988, !3008}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3497, file: !3498, line: 65, baseType: !3511, size: 64, offset: 448)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{null, !3496}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3497, file: !3498, line: 66, baseType: !3010, size: 64, offset: 512)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3497, file: !3498, line: 68, baseType: !3019, size: 64, offset: 576)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3497, file: !3498, line: 70, baseType: !2806, size: 64, offset: 640)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3497, file: !3498, line: 71, baseType: !3518, size: 64, offset: 704)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!2823, !2988}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3497, file: !3498, line: 73, baseType: !3522, size: 64, offset: 768)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{null, !2988, !2363, !2364}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3497, file: !3498, line: 75, baseType: !3014, size: 64, offset: 832)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3497, file: !3498, line: 77, baseType: !3132, size: 64, offset: 896)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2688, file: !119, line: 541, baseType: !2770, size: 64, offset: 5248)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2688, file: !119, line: 543, baseType: !3010, size: 64, offset: 5312)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !2688, file: !119, line: 544, baseType: !3530, size: 64, offset: 5376)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !119, line: 45, flags: DIFlagFwdDecl)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !2688, file: !119, line: 545, baseType: !3533, size: 64, offset: 5440)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !119, line: 47, flags: DIFlagFwdDecl)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !2688, file: !119, line: 547, baseType: !1482, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2688, file: !119, line: 548, baseType: !1482, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !2688, file: !119, line: 549, baseType: !1482, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !2688, file: !119, line: 550, baseType: !1482, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2656, file: !2657, line: 69, baseType: !2697, size: 64, offset: 5952)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2656, file: !2657, line: 70, baseType: !211, size: 32, offset: 6016)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2656, file: !2657, line: 70, baseType: !211, size: 32, offset: 6048)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2656, file: !2657, line: 71, baseType: !3543, size: 64, offset: 6080)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2657, line: 48, size: 808, elements: !3545)
!3545 = !{!3546, !3550}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !3544, file: !2657, line: 49, baseType: !3547, size: 296)
!3547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 296, elements: !3548)
!3548 = !{!3549}
!3549 = !DISubrange(count: 37)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !3544, file: !2657, line: 50, baseType: !3551, size: 512, offset: 296)
!3551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 512, elements: !2732)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2656, file: !2657, line: 75, baseType: !3553, size: 448, offset: 6144)
!3553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !943, line: 124, size: 448, elements: !3554)
!3554 = !{!3555, !3556, !3557}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3553, file: !943, line: 125, baseType: !2278, size: 256)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3553, file: !943, line: 126, baseType: !1678, size: 128, align: 64, offset: 256)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3553, file: !943, line: 129, baseType: !3558, size: 64, offset: 384)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !943, line: 18, flags: DIFlagFwdDecl)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2640, file: !897, line: 39, baseType: !7, size: 32, offset: 896)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2640, file: !897, line: 41, baseType: !1004, offset: 928)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2640, file: !897, line: 42, baseType: !3563, size: 64, offset: 960)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2657, line: 167, size: 8512, elements: !3565)
!3565 = !{!3566, !3567, !3568, !3569, !3570, !3571, !3572, !3581, !3582, !3763, !4458, !4459, !4460, !4461, !4462, !4463, !4466, !4467, !4470, !4471, !4472, !4475}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3564, file: !2657, line: 171, baseType: !211, size: 32)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3564, file: !2657, line: 172, baseType: !211, size: 32, offset: 32)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3564, file: !2657, line: 173, baseType: !211, size: 32, offset: 64)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3564, file: !2657, line: 176, baseType: !3075, size: 256, offset: 96)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3564, file: !2657, line: 178, baseType: !1108, size: 16, offset: 352)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3564, file: !2657, line: 179, baseType: !1108, size: 16, offset: 368)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3564, file: !2657, line: 186, baseType: !3573, size: 64, offset: 384)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2657, line: 149, size: 256, elements: !3575)
!3575 = !{!3576, !3577, !3578, !3579}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3574, file: !2657, line: 150, baseType: !1678, size: 128, align: 64)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3574, file: !2657, line: 151, baseType: !211, size: 32, offset: 128)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3574, file: !2657, line: 152, baseType: !2655, size: 64, offset: 192)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3574, file: !2657, line: 153, baseType: !3580, offset: 256)
!3580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2655, elements: !3464)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3564, file: !2657, line: 187, baseType: !2656, size: 6592, offset: 448)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3564, file: !2657, line: 189, baseType: !3583, size: 64, offset: 7040)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3585)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !19, line: 1844, size: 960, elements: !3586)
!3586 = !{!3587, !3683, !3687, !3691, !3695, !3699, !3700, !3704, !3708, !3712, !3724, !3728, !3754, !3758, !3759}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !3585, file: !19, line: 1845, baseType: !3588, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!3591, !3592}
!3591 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !897, line: 515, baseType: !7)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !897, line: 203, size: 832, elements: !3594)
!3594 = !{!3595, !3596, !3597, !3598, !3599, !3600, !3601, !3603, !3604, !3605, !3612, !3617, !3618, !3638, !3639, !3640, !3641, !3642, !3682}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3593, file: !897, line: 204, baseType: !3592, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3593, file: !897, line: 205, baseType: !3563, size: 64, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3593, file: !897, line: 206, baseType: !7, size: 32, offset: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3593, file: !897, line: 210, baseType: !1108, size: 16, offset: 160)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3593, file: !897, line: 211, baseType: !1108, size: 16, offset: 176)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3593, file: !897, line: 212, baseType: !1108, size: 16, offset: 192)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3593, file: !897, line: 213, baseType: !3602, size: 8, offset: 208)
!3602 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !897, line: 58, baseType: !1203)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3593, file: !897, line: 214, baseType: !1203, size: 8, offset: 216)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3593, file: !897, line: 215, baseType: !1060, size: 32, offset: 224)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3593, file: !897, line: 217, baseType: !3606, size: 192, offset: 256)
!3606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1783, line: 37, size: 192, elements: !3607)
!3607 = !{!3608, !3609, !3610, !3611}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3606, file: !1783, line: 38, baseType: !2660, size: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3606, file: !1783, line: 40, baseType: !7, size: 32, offset: 64)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3606, file: !1783, line: 42, baseType: !7, size: 32, offset: 96)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3606, file: !1783, line: 44, baseType: !7, size: 32, offset: 128)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3593, file: !897, line: 219, baseType: !3613, size: 64, offset: 448)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !897, line: 19, baseType: !3615)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{null, !3592}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3593, file: !897, line: 221, baseType: !983, size: 64, offset: 512)
!3618 = !DIDerivedType(tag: DW_TAG_member, scope: !3593, file: !897, line: 240, baseType: !3619, size: 64, offset: 576)
!3619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3593, file: !897, line: 240, size: 64, elements: !3620)
!3620 = !{!3621}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3619, file: !897, line: 242, baseType: !3622, size: 64)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3624, line: 313, size: 832, elements: !3625)
!3624 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3625 = !{!3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3636}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3623, file: !3624, line: 314, baseType: !3592, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3623, file: !3624, line: 316, baseType: !3606, size: 192, offset: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3623, file: !3624, line: 318, baseType: !1108, size: 16, offset: 256)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3623, file: !3624, line: 319, baseType: !1108, size: 16, offset: 272)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3623, file: !3624, line: 320, baseType: !1108, size: 16, offset: 288)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3623, file: !3624, line: 321, baseType: !1108, size: 16, offset: 304)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3623, file: !3624, line: 323, baseType: !3606, size: 192, offset: 320)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3623, file: !3624, line: 325, baseType: !2278, size: 256, offset: 512)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3623, file: !3624, line: 327, baseType: !3635, size: 64, offset: 768)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3623, file: !3624, line: 328, baseType: !3637, offset: 832)
!3637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1782, elements: !3464)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3593, file: !897, line: 246, baseType: !1108, size: 16, offset: 640)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3593, file: !897, line: 252, baseType: !1108, size: 16, offset: 656)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3593, file: !897, line: 254, baseType: !1060, size: 32, offset: 672)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3593, file: !897, line: 256, baseType: !3635, size: 64, offset: 704)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3593, file: !897, line: 258, baseType: !3643, size: 64, offset: 768)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3624, line: 682, size: 2368, elements: !3645)
!3645 = !{!3646, !3649, !3650, !3671, !3672, !3673, !3674, !3675, !3680, !3681}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3644, file: !3624, line: 683, baseType: !3647, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1232, line: 117, flags: DIFlagFwdDecl)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3644, file: !3624, line: 684, baseType: !7, size: 32, offset: 64)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3644, file: !3624, line: 686, baseType: !3651, size: 448, offset: 128)
!3651 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3652, line: 26, baseType: !3653)
!3652 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3652, line: 16, size: 448, elements: !3654)
!3654 = !{!3655, !3656, !3657, !3658, !3659, !3660, !3665, !3670}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3653, file: !3652, line: 17, baseType: !1004)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3653, file: !3652, line: 18, baseType: !211, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3653, file: !3652, line: 19, baseType: !211, size: 32, offset: 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3653, file: !3652, line: 20, baseType: !1943, size: 64, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3653, file: !3652, line: 22, baseType: !983, size: 64, offset: 128)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3653, file: !3652, line: 23, baseType: !3661, size: 64, offset: 192)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3652, line: 13, baseType: !3663)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!983, !984, !983}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3653, file: !3652, line: 24, baseType: !3666, size: 64, offset: 256)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3652, line: 14, baseType: !3668)
!3668 = !DISubroutineType(types: !3669)
!3669 = !{null, !983, !983}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3653, file: !3652, line: 25, baseType: !1873, size: 128, offset: 320)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3644, file: !3624, line: 687, baseType: !3651, size: 448, offset: 576)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3644, file: !3624, line: 689, baseType: !3651, size: 448, offset: 1024)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3644, file: !3624, line: 690, baseType: !3651, size: 448, offset: 1472)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3644, file: !3624, line: 697, baseType: !1004, offset: 1920)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3644, file: !3624, line: 698, baseType: !3676, size: 128, offset: 1920)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3624, line: 554, size: 128, elements: !3677)
!3677 = !{!3678, !3679}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3676, file: !3624, line: 555, baseType: !3592, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3676, file: !3624, line: 556, baseType: !3592, size: 64, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3644, file: !3624, line: 699, baseType: !2278, size: 256, offset: 2048)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3644, file: !3624, line: 700, baseType: !3558, size: 64, offset: 2304)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3593, file: !897, line: 265, baseType: !3637, offset: 832)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3585, file: !19, line: 1846, baseType: !3684, size: 64, offset: 64)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!211, !2639, !2017}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3585, file: !19, line: 1847, baseType: !3688, size: 64, offset: 128)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{null, !3563, !2017}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !3585, file: !19, line: 1848, baseType: !3692, size: 64, offset: 192)
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!211, !2639, !2660, !1318, !7}
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3585, file: !19, line: 1849, baseType: !3696, size: 64, offset: 256)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!211, !2639, !2017, !7, !986}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3585, file: !19, line: 1850, baseType: !3696, size: 64, offset: 320)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !3585, file: !19, line: 1851, baseType: !3701, size: 64, offset: 384)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!7, !3563, !7}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !3585, file: !19, line: 1853, baseType: !3705, size: 64, offset: 448)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{null, !3563}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !3585, file: !19, line: 1854, baseType: !3709, size: 64, offset: 512)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!211, !3563}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !3585, file: !19, line: 1855, baseType: !3713, size: 64, offset: 576)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{!211, !2639, !3716}
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !3718, line: 324, size: 128, elements: !3719)
!3718 = !DIFile(filename: "./include/uapi/linux/hdreg.h", directory: "/home/lizy2001/genbc/linux")
!3719 = !{!3720, !3721, !3722, !3723}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !3717, file: !3718, line: 325, baseType: !1205, size: 8)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !3717, file: !3718, line: 326, baseType: !1205, size: 8, offset: 8)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !3717, file: !3718, line: 327, baseType: !1108, size: 16, offset: 16)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3717, file: !3718, line: 328, baseType: !986, size: 64, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !3585, file: !19, line: 1857, baseType: !3725, size: 64, offset: 640)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{null, !2639, !986}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !3585, file: !19, line: 1858, baseType: !3729, size: 64, offset: 704)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!211, !3563, !2660, !7, !3732, !983}
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !19, line: 354, baseType: !3733)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!211, !3736, !7, !983}
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !3738, line: 106, size: 512, elements: !3739)
!3738 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!3739 = !{!3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3749, !3750}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3737, file: !3738, line: 107, baseType: !978, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3737, file: !3738, line: 108, baseType: !978, size: 64, offset: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !3737, file: !3738, line: 109, baseType: !978, size: 64, offset: 128)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3737, file: !3738, line: 110, baseType: !1204, size: 8, offset: 192)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !3737, file: !3738, line: 111, baseType: !1204, size: 8, offset: 200)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !3737, file: !3738, line: 112, baseType: !1204, size: 8, offset: 208)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3737, file: !3738, line: 113, baseType: !1204, size: 8, offset: 216)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !3737, file: !3738, line: 114, baseType: !3748, size: 32, offset: 224)
!3748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 32, elements: !2033)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !3737, file: !3738, line: 115, baseType: !978, size: 64, offset: 256)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3737, file: !3738, line: 116, baseType: !3751, size: 192, offset: 320)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 192, elements: !3752)
!3752 = !{!3753}
!3753 = !DISubrange(count: 24)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3585, file: !19, line: 1860, baseType: !3755, size: 64, offset: 768)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!1463, !3563, !3008}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3585, file: !19, line: 1861, baseType: !1528, size: 64, offset: 832)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !3585, file: !19, line: 1862, baseType: !3760, size: 64, offset: 896)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3762)
!3762 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !19, line: 41, flags: DIFlagFwdDecl)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3564, file: !2657, line: 190, baseType: !3764, size: 64, offset: 7104)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !19, line: 399, size: 14464, elements: !3766)
!3766 = !{!3767, !3983, !4105, !4106, !4109, !4112, !4207, !4208, !4209, !4211, !4212, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4328, !4337, !4338, !4339, !4340, !4341, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !3765, file: !19, line: 400, baseType: !3768, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !19, line: 130, size: 2176, elements: !3770)
!3770 = !{!3771, !3772, !3775, !3865, !3866, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3880, !3887, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3981, !3982}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3769, file: !19, line: 131, baseType: !3764, size: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !3769, file: !19, line: 132, baseType: !3773, size: 64, offset: 64)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !19, line: 132, flags: DIFlagFwdDecl)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !3769, file: !19, line: 133, baseType: !3776, size: 64, offset: 128)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !3778, line: 16, size: 4032, elements: !3779)
!3778 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!3779 = !{!3780, !3786, !3793, !3796, !3797, !3798, !3799, !3800, !3801, !3804, !3805, !3820, !3821, !3822, !3823, !3824, !3826, !3827, !3828, !3829, !3832, !3833, !3834, !3835, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850}
!3780 = !DIDerivedType(tag: DW_TAG_member, scope: !3777, file: !3778, line: 17, baseType: !3781, size: 192)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3777, file: !3778, line: 17, size: 192, elements: !3782)
!3782 = !{!3783, !3784, !3785}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3781, file: !3778, line: 19, baseType: !1004)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !3781, file: !3778, line: 27, baseType: !996, size: 128)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3781, file: !3778, line: 32, baseType: !986, size: 64, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3777, file: !3778, line: 38, baseType: !3787, size: 704, offset: 192)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !943, line: 115, size: 704, elements: !3788)
!3788 = !{!3789, !3790, !3791, !3792}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3787, file: !943, line: 116, baseType: !2278, size: 256)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3787, file: !943, line: 117, baseType: !3180, size: 320, offset: 256)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3787, file: !943, line: 120, baseType: !3558, size: 64, offset: 576)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3787, file: !943, line: 121, baseType: !211, size: 32, offset: 640)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3777, file: !3778, line: 40, baseType: !3794, size: 64, offset: 896)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1218, line: 756, baseType: !3795)
!3795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1219, size: 64, elements: !1223)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !3777, file: !3778, line: 45, baseType: !211, size: 32, offset: 960)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !3777, file: !3778, line: 50, baseType: !211, size: 32, offset: 992)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3777, file: !3778, line: 53, baseType: !986, size: 64, offset: 1024)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !3777, file: !3778, line: 59, baseType: !983, size: 64, offset: 1088)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3777, file: !3778, line: 63, baseType: !3764, size: 64, offset: 1152)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3777, file: !3778, line: 65, baseType: !3802, size: 64, offset: 1216)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !19, line: 40, flags: DIFlagFwdDecl)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3777, file: !3778, line: 71, baseType: !983, size: 64, offset: 1280)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !3777, file: !3778, line: 77, baseType: !3806, size: 192, offset: 1344)
!3806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !3807, line: 48, size: 192, elements: !3808)
!3807 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!3808 = !{!3809, !3810, !3811, !3812}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3806, file: !3807, line: 52, baseType: !7, size: 32)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3806, file: !3807, line: 57, baseType: !7, size: 32, offset: 32)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !3806, file: !3807, line: 62, baseType: !7, size: 32, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3806, file: !3807, line: 67, baseType: !3813, size: 64, offset: 128)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !3807, line: 20, size: 192, elements: !3815)
!3815 = !{!3816, !3817, !3818, !3819}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3814, file: !3807, line: 24, baseType: !986, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3814, file: !3807, line: 29, baseType: !986, size: 64, offset: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !3814, file: !3807, line: 34, baseType: !986, size: 64, offset: 128)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !3814, file: !3807, line: 39, baseType: !1004, offset: 192)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !3777, file: !3778, line: 83, baseType: !3773, size: 64, offset: 1536)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !3777, file: !3778, line: 89, baseType: !7, size: 32, offset: 1600)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3777, file: !3778, line: 92, baseType: !1108, size: 16, offset: 1632)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !3777, file: !3778, line: 94, baseType: !1108, size: 16, offset: 1648)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !3777, file: !3778, line: 96, baseType: !3825, size: 64, offset: 1664)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !3777, file: !3778, line: 99, baseType: !1004, offset: 1728)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !3777, file: !3778, line: 104, baseType: !1741, size: 320, offset: 1728)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !3777, file: !3778, line: 110, baseType: !1060, size: 32, offset: 2048)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3777, file: !3778, line: 116, baseType: !3830, size: 64, offset: 2112)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !3778, line: 9, flags: DIFlagFwdDecl)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !3777, file: !3778, line: 122, baseType: !3830, size: 64, offset: 2176)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !3777, file: !3778, line: 125, baseType: !986, size: 64, offset: 2240)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !3777, file: !3778, line: 127, baseType: !986, size: 64, offset: 2304)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !3777, file: !3778, line: 130, baseType: !3836, size: 448, offset: 2368)
!3836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 448, elements: !3837)
!3837 = !{!3838}
!3838 = !DISubrange(count: 7)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3777, file: !3778, line: 133, baseType: !7, size: 32, offset: 2816)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !3777, file: !3778, line: 135, baseType: !7, size: 32, offset: 2848)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !3777, file: !3778, line: 141, baseType: !1060, size: 32, offset: 2880)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !3777, file: !3778, line: 145, baseType: !1060, size: 32, offset: 2912)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !3777, file: !3778, line: 148, baseType: !1537, size: 128, offset: 2944)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !3777, file: !3778, line: 150, baseType: !1537, size: 128, offset: 3072)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3777, file: !3778, line: 152, baseType: !2691, size: 512, offset: 3200)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !3777, file: !3778, line: 155, baseType: !986, size: 64, offset: 3712)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !3777, file: !3778, line: 157, baseType: !986, size: 64, offset: 3776)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !3777, file: !3778, line: 159, baseType: !986, size: 64, offset: 3840)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !3777, file: !3778, line: 175, baseType: !996, size: 128, offset: 3904)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !3777, file: !3778, line: 182, baseType: !3851, offset: 4032)
!3851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3852, elements: !3464)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !3853, line: 16, size: 576, elements: !3854)
!3853 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!3854 = !{!3855, !3857, !3858, !3859, !3860, !3861, !3862, !3864}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !3852, file: !3853, line: 17, baseType: !3856, size: 32)
!3856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 32, elements: !2073)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !3852, file: !3853, line: 18, baseType: !2124, size: 16, offset: 32)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !3852, file: !3853, line: 19, baseType: !1203, size: 8, offset: 48)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !3852, file: !3853, line: 20, baseType: !1203, size: 8, offset: 56)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !3852, file: !3853, line: 21, baseType: !2343, size: 128, offset: 64)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !3852, file: !3853, line: 23, baseType: !1681, size: 64, offset: 192)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !3852, file: !3853, line: 24, baseType: !3863, size: 64, offset: 256)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !3852, file: !3853, line: 25, baseType: !2278, size: 256, offset: 320)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !3769, file: !19, line: 135, baseType: !7, size: 32, offset: 192)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !3769, file: !19, line: 136, baseType: !3867, size: 32, offset: 224)
!3867 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !19, line: 66, baseType: !1050)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3769, file: !19, line: 138, baseType: !211, size: 32, offset: 256)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !3769, file: !19, line: 139, baseType: !211, size: 32, offset: 288)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !3769, file: !19, line: 142, baseType: !7, size: 32, offset: 320)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !3769, file: !19, line: 143, baseType: !2660, size: 64, offset: 384)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !3769, file: !19, line: 145, baseType: !3592, size: 64, offset: 448)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !3769, file: !19, line: 146, baseType: !3592, size: 64, offset: 512)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !3769, file: !19, line: 148, baseType: !996, size: 128, offset: 576)
!3875 = !DIDerivedType(tag: DW_TAG_member, scope: !3769, file: !19, line: 157, baseType: !3876, size: 128, offset: 704)
!3876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3769, file: !19, line: 157, size: 128, elements: !3877)
!3877 = !{!3878, !3879}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3876, file: !19, line: 158, baseType: !1537, size: 128)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3876, file: !19, line: 159, baseType: !996, size: 128)
!3880 = !DIDerivedType(tag: DW_TAG_member, scope: !3769, file: !19, line: 167, baseType: !3881, size: 192, offset: 832)
!3881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3769, file: !19, line: 167, size: 192, elements: !3882)
!3882 = !{!3883, !3884, !3885, !3886}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3881, file: !19, line: 168, baseType: !1084, size: 192, align: 64)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3881, file: !19, line: 169, baseType: !1782, size: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3881, file: !19, line: 170, baseType: !983, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3881, file: !19, line: 171, baseType: !211, size: 32)
!3887 = !DIDerivedType(tag: DW_TAG_member, scope: !3769, file: !19, line: 180, baseType: !3888, size: 256, offset: 1024)
!3888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3769, file: !19, line: 180, size: 256, elements: !3889)
!3889 = !{!3890, !3925}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3888, file: !19, line: 184, baseType: !3891, size: 192)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3888, file: !19, line: 181, size: 192, elements: !3892)
!3892 = !{!3893, !3923}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3891, file: !19, line: 182, baseType: !3894, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3896, line: 73, size: 448, elements: !3897)
!3896 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3897 = !{!3898, !3899, !3912, !3917, !3922}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3895, file: !3896, line: 74, baseType: !3764, size: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3895, file: !3896, line: 75, baseType: !3900, size: 64, offset: 64)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3896, line: 99, size: 704, elements: !3902)
!3902 = !{!3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3901, file: !3896, line: 100, baseType: !1026, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3901, file: !3896, line: 101, baseType: !1060, size: 32, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3901, file: !3896, line: 102, baseType: !1060, size: 32, offset: 96)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3901, file: !3896, line: 105, baseType: !1004, offset: 128)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3901, file: !3896, line: 107, baseType: !1108, size: 16, offset: 128)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3901, file: !3896, line: 109, baseType: !2874, size: 128, offset: 192)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3901, file: !3896, line: 110, baseType: !3894, size: 64, offset: 320)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3901, file: !3896, line: 111, baseType: !1533, size: 64, offset: 384)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3901, file: !3896, line: 113, baseType: !2278, size: 256, offset: 448)
!3912 = !DIDerivedType(tag: DW_TAG_member, scope: !3895, file: !3896, line: 83, baseType: !3913, size: 128, offset: 128)
!3913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3895, file: !3896, line: 83, size: 128, elements: !3914)
!3914 = !{!3915, !3916}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3913, file: !3896, line: 84, baseType: !996, size: 128)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3913, file: !3896, line: 85, baseType: !3647, size: 64)
!3917 = !DIDerivedType(tag: DW_TAG_member, scope: !3895, file: !3896, line: 87, baseType: !3918, size: 128, offset: 256)
!3918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3895, file: !3896, line: 87, size: 128, elements: !3919)
!3919 = !{!3920, !3921}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3918, file: !3896, line: 88, baseType: !1537, size: 128)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3918, file: !3896, line: 89, baseType: !1678, size: 128, align: 64)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3895, file: !3896, line: 92, baseType: !7, size: 32, offset: 384)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3891, file: !19, line: 183, baseType: !3924, size: 128, offset: 64)
!3924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 128, elements: !2073)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3888, file: !19, line: 190, baseType: !3926, size: 256)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3888, file: !19, line: 186, size: 256, elements: !3927)
!3927 = !{!3928, !3929, !3930}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3926, file: !19, line: 187, baseType: !7, size: 32)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3926, file: !19, line: 188, baseType: !996, size: 128, offset: 64)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3926, file: !19, line: 189, baseType: !3931, size: 64, offset: 192)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !19, line: 62, baseType: !3933)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{null, !3768, !3602}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !3769, file: !19, line: 193, baseType: !3563, size: 64, offset: 1280)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3769, file: !19, line: 194, baseType: !2655, size: 64, offset: 1344)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !3769, file: !19, line: 200, baseType: !976, size: 64, offset: 1408)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !3769, file: !19, line: 202, baseType: !976, size: 64, offset: 1472)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !3769, file: !19, line: 212, baseType: !1108, size: 16, offset: 1536)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !3769, file: !19, line: 218, baseType: !1108, size: 16, offset: 1552)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !3769, file: !19, line: 221, baseType: !1108, size: 16, offset: 1568)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !3769, file: !19, line: 229, baseType: !1108, size: 16, offset: 1584)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3769, file: !19, line: 230, baseType: !1108, size: 16, offset: 1600)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3769, file: !19, line: 232, baseType: !18, size: 32, offset: 1632)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3769, file: !19, line: 233, baseType: !1055, size: 32, offset: 1664)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3769, file: !19, line: 235, baseType: !7, size: 32, offset: 1696)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3769, file: !19, line: 236, baseType: !986, size: 64, offset: 1728)
!3948 = !DIDerivedType(tag: DW_TAG_member, scope: !3769, file: !19, line: 238, baseType: !3949, size: 256, offset: 1792)
!3949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3769, file: !19, line: 238, size: 256, elements: !3950)
!3950 = !{!3951, !3980}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3949, file: !19, line: 239, baseType: !3952, size: 256)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3953, line: 23, size: 256, elements: !3954)
!3953 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3954 = !{!3955, !3977, !3979}
!3955 = !DIDerivedType(tag: DW_TAG_member, scope: !3952, file: !3953, line: 24, baseType: !3956, size: 128)
!3956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3952, file: !3953, line: 24, size: 128, elements: !3957)
!3957 = !{!3958, !3970}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3956, file: !3953, line: 25, baseType: !3959, size: 128)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3960, line: 58, size: 128, elements: !3961)
!3960 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3961 = !{!3962, !3963, !3968, !3969}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3959, file: !3960, line: 59, baseType: !1672, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, scope: !3959, file: !3960, line: 60, baseType: !3964, size: 32, offset: 64)
!3964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3959, file: !3960, line: 60, size: 32, elements: !3965)
!3965 = !{!3966, !3967}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3964, file: !3960, line: 61, baseType: !7, size: 32)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3964, file: !3960, line: 62, baseType: !1060, size: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3959, file: !3960, line: 65, baseType: !1726, size: 16, offset: 96)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3959, file: !3960, line: 65, baseType: !1726, size: 16, offset: 112)
!3970 = !DIDerivedType(tag: DW_TAG_member, scope: !3956, file: !3953, line: 26, baseType: !3971, size: 128)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3956, file: !3953, line: 26, size: 128, elements: !3972)
!3972 = !{!3973, !3974, !3975, !3976}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3971, file: !3953, line: 27, baseType: !1672, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3971, file: !3953, line: 28, baseType: !7, size: 32, offset: 64)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3971, file: !3953, line: 30, baseType: !1726, size: 16, offset: 96)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3971, file: !3953, line: 30, baseType: !1726, size: 16, offset: 112)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3952, file: !3953, line: 34, baseType: !3978, size: 64, offset: 128)
!3978 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3953, line: 17, baseType: !2832)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3952, file: !3953, line: 35, baseType: !983, size: 64, offset: 192)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3949, file: !19, line: 240, baseType: !976, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !3769, file: !19, line: 246, baseType: !3931, size: 64, offset: 2048)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !3769, file: !19, line: 247, baseType: !983, size: 64, offset: 2112)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !3765, file: !19, line: 401, baseType: !3984, size: 64, offset: 64)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !25, line: 101, size: 4992, elements: !3986)
!3986 = !{!3987, !4099, !4100, !4101, !4102, !4103}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3985, file: !25, line: 103, baseType: !3988, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !25, line: 66, size: 2240, elements: !3990)
!3990 = !{!3991, !3992, !4074, !4075, !4076, !4089, !4090, !4091, !4093, !4094, !4098}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3989, file: !25, line: 69, baseType: !3647, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3989, file: !25, line: 72, baseType: !3993, size: 1408, offset: 64)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !25, line: 29, size: 1408, elements: !3994)
!3994 = !{!3995, !3999, !4003, !4007, !4011, !4015, !4019, !4023, !4028, !4032, !4036, !4042, !4046, !4047, !4051, !4055, !4059, !4063, !4064, !4068, !4069, !4073}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3993, file: !25, line: 30, baseType: !3996, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!211, !3764, !3988}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3993, file: !25, line: 31, baseType: !4000, size: 64, offset: 64)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{null, !3984}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3993, file: !25, line: 32, baseType: !4004, size: 64, offset: 128)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!211, !3776, !7}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3993, file: !25, line: 33, baseType: !4008, size: 64, offset: 192)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !3776, !7}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3993, file: !25, line: 34, baseType: !4012, size: 64, offset: 256)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{null, !3776}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3993, file: !25, line: 36, baseType: !4016, size: 64, offset: 320)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!1482, !3764, !3768, !3592}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3993, file: !25, line: 37, baseType: !4020, size: 64, offset: 384)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!1482, !3776, !3592, !7}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3993, file: !25, line: 38, baseType: !4024, size: 64, offset: 448)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!211, !3764, !4027, !3592}
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3993, file: !25, line: 39, baseType: !4029, size: 64, offset: 512)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{null, !3764, !3768, !24}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3993, file: !25, line: 40, baseType: !4033, size: 64, offset: 576)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{null, !3764, !3768, !3768}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3993, file: !25, line: 41, baseType: !4037, size: 64, offset: 640)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{null, !7, !4040}
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !25, line: 26, flags: DIFlagFwdDecl)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3993, file: !25, line: 42, baseType: !4043, size: 64, offset: 704)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{null, !3768}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3993, file: !25, line: 43, baseType: !4043, size: 64, offset: 768)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3993, file: !25, line: 44, baseType: !4048, size: 64, offset: 832)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{null, !3776, !999, !1482}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3993, file: !25, line: 45, baseType: !4052, size: 64, offset: 896)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!3768, !3776}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3993, file: !25, line: 46, baseType: !4056, size: 64, offset: 960)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!1482, !3776}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3993, file: !25, line: 47, baseType: !4060, size: 64, offset: 1024)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{null, !3768, !976}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3993, file: !25, line: 48, baseType: !4043, size: 64, offset: 1088)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3993, file: !25, line: 49, baseType: !4065, size: 64, offset: 1152)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!3768, !3764, !3768}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3993, file: !25, line: 50, baseType: !4065, size: 64, offset: 1216)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3993, file: !25, line: 51, baseType: !4070, size: 64, offset: 1280)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{null, !3894}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3993, file: !25, line: 52, baseType: !4070, size: 64, offset: 1344)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3989, file: !25, line: 74, baseType: !1631, size: 64, offset: 1472)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3989, file: !25, line: 75, baseType: !1631, size: 64, offset: 1536)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3989, file: !25, line: 76, baseType: !4077, size: 64, offset: 1600)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !25, line: 57, size: 256, elements: !4079)
!4079 = !{!4080, !4081, !4085}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4078, file: !25, line: 58, baseType: !2759, size: 128)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4078, file: !25, line: 59, baseType: !4082, size: 64, offset: 128)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!1703, !3984, !1463}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4078, file: !25, line: 60, baseType: !4086, size: 64, offset: 192)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!1703, !3984, !1437, !1631}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3989, file: !25, line: 77, baseType: !1437, size: 64, offset: 1664)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3989, file: !25, line: 78, baseType: !1437, size: 64, offset: 1728)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3989, file: !25, line: 79, baseType: !4092, size: 32, offset: 1792)
!4092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3989, file: !25, line: 80, baseType: !1528, size: 64, offset: 1856)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3989, file: !25, line: 87, baseType: !4095, size: 176, offset: 1920)
!4095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 176, elements: !4096)
!4096 = !{!4097}
!4097 = !DISubrange(count: 22)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3989, file: !25, line: 88, baseType: !996, size: 128, offset: 2112)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3985, file: !25, line: 104, baseType: !983, size: 64, offset: 64)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3985, file: !25, line: 105, baseType: !2691, size: 512, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3985, file: !25, line: 106, baseType: !1022, size: 192, offset: 640)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3985, file: !25, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3985, file: !25, line: 108, baseType: !4104, size: 4096, offset: 896)
!4104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 4096, elements: !2732)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !3765, file: !19, line: 403, baseType: !2667, size: 128, offset: 128)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3765, file: !19, line: 405, baseType: !4107, size: 64, offset: 256)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !19, line: 43, flags: DIFlagFwdDecl)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !3765, file: !19, line: 406, baseType: !4110, size: 64, offset: 320)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !19, line: 42, flags: DIFlagFwdDecl)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !3765, file: !19, line: 408, baseType: !4113, size: 64, offset: 384)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4115)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !3778, line: 290, size: 960, elements: !4116)
!4116 = !{!4117, !4127, !4128, !4132, !4136, !4140, !4144, !4145, !4149, !4150, !4196, !4200, !4201, !4202, !4203}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !4115, file: !3778, line: 294, baseType: !4118, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!3602, !3776, !4121}
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4123)
!4123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !3778, line: 277, size: 128, elements: !4124)
!4124 = !{!4125, !4126}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !4123, file: !3778, line: 278, baseType: !3768, size: 64)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4123, file: !3778, line: 279, baseType: !1482, size: 8, offset: 64)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !4115, file: !3778, line: 304, baseType: !4012, size: 64, offset: 64)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !4115, file: !3778, line: 312, baseType: !4129, size: 64, offset: 128)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!1482, !3764}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !4115, file: !3778, line: 317, baseType: !4133, size: 64, offset: 192)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{null, !3764}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4115, file: !3778, line: 322, baseType: !4137, size: 64, offset: 256)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!31, !3768, !1482}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4115, file: !3778, line: 327, baseType: !4141, size: 64, offset: 320)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!211, !3776}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4115, file: !3778, line: 332, baseType: !4043, size: 64, offset: 384)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !4115, file: !3778, line: 339, baseType: !4146, size: 64, offset: 448)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!211, !3776, !983, !7}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !4115, file: !3778, line: 343, baseType: !4008, size: 64, offset: 512)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !4115, file: !3778, line: 352, baseType: !4151, size: 64, offset: 576)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!211, !4154, !3768, !7, !7}
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !3778, line: 249, size: 2304, elements: !4156)
!4156 = !{!4157, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4191, !4192, !4194, !4195}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4155, file: !3778, line: 250, baseType: !4158, size: 384)
!4158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4159, size: 384, elements: !1549)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !3778, line: 195, size: 128, elements: !4160)
!4160 = !{!4161, !4162, !4163}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !4159, file: !3778, line: 196, baseType: !3424, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !4159, file: !3778, line: 197, baseType: !7, size: 32, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !4159, file: !3778, line: 198, baseType: !7, size: 32, offset: 96)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !4155, file: !3778, line: 251, baseType: !7, size: 32, offset: 384)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4155, file: !3778, line: 252, baseType: !4113, size: 64, offset: 448)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !4155, file: !3778, line: 253, baseType: !7, size: 32, offset: 512)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !4155, file: !3778, line: 254, baseType: !7, size: 32, offset: 544)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !4155, file: !3778, line: 255, baseType: !7, size: 32, offset: 576)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4155, file: !3778, line: 256, baseType: !7, size: 32, offset: 608)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !4155, file: !3778, line: 257, baseType: !211, size: 32, offset: 640)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4155, file: !3778, line: 258, baseType: !7, size: 32, offset: 672)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4155, file: !3778, line: 259, baseType: !7, size: 32, offset: 704)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4155, file: !3778, line: 260, baseType: !983, size: 64, offset: 768)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !4155, file: !3778, line: 261, baseType: !1060, size: 32, offset: 832)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !4155, file: !3778, line: 263, baseType: !4176, size: 512, offset: 896)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !3807, line: 97, size: 512, elements: !4177)
!4177 = !{!4178, !4179, !4180, !4181, !4182, !4188, !4189, !4190}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !4176, file: !3807, line: 101, baseType: !3806, size: 192)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !4176, file: !3807, line: 109, baseType: !3424, size: 64, offset: 192)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !4176, file: !3807, line: 115, baseType: !7, size: 32, offset: 256)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !4176, file: !3807, line: 120, baseType: !1060, size: 32, offset: 288)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4176, file: !3807, line: 125, baseType: !4183, size: 64, offset: 320)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !3807, line: 76, size: 192, elements: !4185)
!4185 = !{!4186, !4187}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !4184, file: !3807, line: 80, baseType: !1060, size: 32)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4184, file: !3807, line: 85, baseType: !1873, size: 128, offset: 64)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !4176, file: !3807, line: 130, baseType: !1060, size: 32, offset: 384)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !4176, file: !3807, line: 135, baseType: !1482, size: 8, offset: 416)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !4176, file: !3807, line: 141, baseType: !7, size: 32, offset: 448)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !4155, file: !3778, line: 264, baseType: !4176, size: 512, offset: 1408)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !4155, file: !3778, line: 265, baseType: !4193, size: 64, offset: 1920)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !4155, file: !3778, line: 267, baseType: !1022, size: 192, offset: 1984)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !4155, file: !3778, line: 268, baseType: !996, size: 128, offset: 2176)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !4115, file: !3778, line: 357, baseType: !4197, size: 64, offset: 640)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{null, !4154, !3768, !7}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !4115, file: !3778, line: 363, baseType: !4043, size: 64, offset: 704)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !4115, file: !3778, line: 369, baseType: !4043, size: 64, offset: 768)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !4115, file: !3778, line: 374, baseType: !4129, size: 64, offset: 832)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !4115, file: !3778, line: 380, baseType: !4204, size: 64, offset: 896)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!211, !4154}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !3765, file: !19, line: 411, baseType: !3773, size: 64, offset: 448)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3765, file: !19, line: 413, baseType: !7, size: 32, offset: 512)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !3765, file: !19, line: 416, baseType: !4210, size: 64, offset: 576)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3765, file: !19, line: 417, baseType: !7, size: 32, offset: 640)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3765, file: !19, line: 419, baseType: !4213, size: 64, offset: 704)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4214, size: 64)
!4214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !36, line: 165, size: 4672, elements: !4215)
!4215 = !{!4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4266, !4267, !4268, !4269, !4271, !4272}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4214, file: !36, line: 166, baseType: !976, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4214, file: !36, line: 167, baseType: !1084, size: 192, align: 64, offset: 64)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !4214, file: !36, line: 168, baseType: !996, size: 128, offset: 256)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4214, file: !36, line: 169, baseType: !986, size: 64, offset: 384)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !4214, file: !36, line: 170, baseType: !986, size: 64, offset: 448)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4214, file: !36, line: 172, baseType: !2978, size: 32, offset: 512)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4214, file: !36, line: 173, baseType: !7, size: 32, offset: 544)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !4214, file: !36, line: 174, baseType: !7, size: 32, offset: 576)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !4214, file: !36, line: 175, baseType: !7, size: 32, offset: 608)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !4214, file: !36, line: 175, baseType: !7, size: 32, offset: 640)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !4214, file: !36, line: 181, baseType: !1026, size: 64, offset: 704)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !4214, file: !36, line: 183, baseType: !4228, size: 2688, offset: 768)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !36, line: 107, size: 2688, elements: !4229)
!4229 = !{!4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4259, !4260, !4261, !4262, !4263, !4264, !4265}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !4228, file: !36, line: 108, baseType: !4213, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4228, file: !36, line: 110, baseType: !986, size: 64, offset: 64)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !4228, file: !36, line: 111, baseType: !986, size: 64, offset: 128)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !4228, file: !36, line: 113, baseType: !996, size: 128, offset: 192)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !4228, file: !36, line: 114, baseType: !996, size: 128, offset: 320)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !4228, file: !36, line: 115, baseType: !996, size: 128, offset: 448)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !4228, file: !36, line: 116, baseType: !996, size: 128, offset: 576)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4228, file: !36, line: 117, baseType: !1004, offset: 704)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4228, file: !36, line: 119, baseType: !4239, size: 256, offset: 704)
!4239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4240, size: 256, elements: !2033)
!4240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !4241, line: 97, size: 64, elements: !4242)
!4241 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!4242 = !{!4243}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4240, file: !4241, line: 98, baseType: !1032, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !4228, file: !36, line: 121, baseType: !986, size: 64, offset: 960)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !4228, file: !36, line: 123, baseType: !986, size: 64, offset: 1024)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !4228, file: !36, line: 124, baseType: !986, size: 64, offset: 1088)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !4228, file: !36, line: 125, baseType: !986, size: 64, offset: 1152)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !4228, file: !36, line: 126, baseType: !986, size: 64, offset: 1216)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !4228, file: !36, line: 127, baseType: !986, size: 64, offset: 1280)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !4228, file: !36, line: 135, baseType: !986, size: 64, offset: 1344)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !4228, file: !36, line: 136, baseType: !986, size: 64, offset: 1408)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !4228, file: !36, line: 138, baseType: !4253, size: 128, offset: 1472)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !4254, line: 76, size: 128, elements: !4255)
!4254 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!4255 = !{!4256, !4257, !4258}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4253, file: !4254, line: 78, baseType: !4240, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4253, file: !4254, line: 80, baseType: !7, size: 32, offset: 64)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4253, file: !4254, line: 81, baseType: !1154, offset: 96)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !4228, file: !36, line: 139, baseType: !211, size: 32, offset: 1600)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !4228, file: !36, line: 140, baseType: !35, size: 32, offset: 1632)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !4228, file: !36, line: 142, baseType: !1004, offset: 1664)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4228, file: !36, line: 143, baseType: !996, size: 128, offset: 1664)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !4228, file: !36, line: 144, baseType: !3787, size: 704, offset: 1792)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !4228, file: !36, line: 146, baseType: !986, size: 64, offset: 2496)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !4228, file: !36, line: 148, baseType: !996, size: 128, offset: 2560)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !4214, file: !36, line: 184, baseType: !996, size: 128, offset: 3456)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !4214, file: !36, line: 190, baseType: !1873, size: 128, offset: 3584)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4214, file: !36, line: 192, baseType: !2988, size: 64, offset: 3712)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4214, file: !36, line: 193, baseType: !4270, size: 512, offset: 3776)
!4270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 512, elements: !2732)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4214, file: !36, line: 194, baseType: !2988, size: 64, offset: 4288)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !4214, file: !36, line: 196, baseType: !3180, size: 320, offset: 4352)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !3765, file: !19, line: 425, baseType: !983, size: 64, offset: 768)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !3765, file: !19, line: 430, baseType: !986, size: 64, offset: 832)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !3765, file: !19, line: 436, baseType: !1060, size: 32, offset: 896)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3765, file: !19, line: 442, baseType: !211, size: 32, offset: 928)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !3765, file: !19, line: 447, baseType: !984, size: 32, offset: 960)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !3765, file: !19, line: 449, baseType: !1004, offset: 992)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3765, file: !19, line: 454, baseType: !2691, size: 512, offset: 1024)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !3765, file: !19, line: 459, baseType: !2697, size: 64, offset: 1536)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !3765, file: !19, line: 462, baseType: !4282, size: 128, offset: 1600)
!4282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2657, line: 159, size: 128, elements: !4283)
!4283 = !{!4284, !4313, !4314, !4315, !4316}
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !4282, file: !2657, line: 160, baseType: !4285, size: 64)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4287)
!4287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !19, line: 1664, size: 320, elements: !4288)
!4288 = !{!4289, !4303, !4304, !4307, !4312}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !4287, file: !19, line: 1665, baseType: !4290, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !19, line: 1660, baseType: !4292)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!3602, !4294}
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4295, size: 64)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !19, line: 1651, size: 320, elements: !4296)
!4296 = !{!4297, !4298, !4299, !4300, !4301, !4302}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !4295, file: !19, line: 1652, baseType: !983, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !4295, file: !19, line: 1653, baseType: !983, size: 64, offset: 64)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !4295, file: !19, line: 1654, baseType: !2660, size: 64, offset: 128)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !4295, file: !19, line: 1655, baseType: !7, size: 32, offset: 192)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4295, file: !19, line: 1656, baseType: !1108, size: 16, offset: 224)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !4295, file: !19, line: 1657, baseType: !1437, size: 64, offset: 256)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !4287, file: !19, line: 1666, baseType: !4290, size: 64, offset: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !4287, file: !19, line: 1667, baseType: !4305, size: 64, offset: 128)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !19, line: 1661, baseType: !4044)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !4287, file: !19, line: 1668, baseType: !4308, size: 64, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !19, line: 1662, baseType: !4310)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{null, !3768, !7}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4287, file: !19, line: 1669, baseType: !1437, size: 64, offset: 256)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4282, file: !2657, line: 161, baseType: !1205, size: 8, offset: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !4282, file: !2657, line: 162, baseType: !1205, size: 8, offset: 72)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !4282, file: !2657, line: 163, baseType: !1205, size: 8, offset: 80)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !4282, file: !2657, line: 164, baseType: !1205, size: 8, offset: 88)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3765, file: !19, line: 466, baseType: !2988, size: 64, offset: 1728)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !3765, file: !19, line: 467, baseType: !47, size: 32, offset: 1792)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !3765, file: !19, line: 468, baseType: !7, size: 32, offset: 1824)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !3765, file: !19, line: 474, baseType: !986, size: 64, offset: 1856)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !3765, file: !19, line: 476, baseType: !7, size: 32, offset: 1920)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !3765, file: !19, line: 477, baseType: !7, size: 32, offset: 1952)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !3765, file: !19, line: 484, baseType: !7, size: 32, offset: 1984)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !3765, file: !19, line: 485, baseType: !211, size: 32, offset: 2016)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !3765, file: !19, line: 487, baseType: !4326, size: 64, offset: 2048)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !19, line: 44, flags: DIFlagFwdDecl)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !3765, file: !19, line: 488, baseType: !4329, size: 5120, offset: 2112)
!4329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4330, size: 5120, elements: !3407)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !897, line: 540, size: 320, elements: !4331)
!4331 = !{!4332, !4333, !4334, !4335, !4336}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !4330, file: !897, line: 541, baseType: !976, size: 64)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4330, file: !897, line: 542, baseType: !976, size: 64, offset: 64)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4330, file: !897, line: 543, baseType: !976, size: 64, offset: 128)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !4330, file: !897, line: 544, baseType: !1049, size: 32, offset: 192)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4330, file: !897, line: 545, baseType: !976, size: 64, offset: 256)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3765, file: !19, line: 490, baseType: !3180, size: 320, offset: 7232)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !3765, file: !19, line: 491, baseType: !2278, size: 256, offset: 7552)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !3765, file: !19, line: 493, baseType: !1060, size: 32, offset: 7808)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3765, file: !19, line: 495, baseType: !996, size: 128, offset: 7872)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !3765, file: !19, line: 502, baseType: !4342, size: 896, offset: 8000)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !19, line: 321, size: 896, elements: !4343)
!4343 = !{!4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !4342, file: !19, line: 322, baseType: !986, size: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !4342, file: !19, line: 323, baseType: !986, size: 64, offset: 64)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !4342, file: !19, line: 324, baseType: !986, size: 64, offset: 128)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !4342, file: !19, line: 326, baseType: !7, size: 32, offset: 192)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !4342, file: !19, line: 327, baseType: !7, size: 32, offset: 224)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !4342, file: !19, line: 328, baseType: !7, size: 32, offset: 256)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !4342, file: !19, line: 329, baseType: !7, size: 32, offset: 288)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4342, file: !19, line: 330, baseType: !7, size: 32, offset: 320)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !4342, file: !19, line: 331, baseType: !7, size: 32, offset: 352)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !4342, file: !19, line: 332, baseType: !7, size: 32, offset: 384)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !4342, file: !19, line: 333, baseType: !7, size: 32, offset: 416)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !4342, file: !19, line: 334, baseType: !7, size: 32, offset: 448)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !4342, file: !19, line: 335, baseType: !7, size: 32, offset: 480)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !4342, file: !19, line: 336, baseType: !7, size: 32, offset: 512)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !4342, file: !19, line: 337, baseType: !7, size: 32, offset: 544)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !4342, file: !19, line: 338, baseType: !7, size: 32, offset: 576)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !4342, file: !19, line: 339, baseType: !7, size: 32, offset: 608)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !4342, file: !19, line: 340, baseType: !7, size: 32, offset: 640)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !4342, file: !19, line: 341, baseType: !7, size: 32, offset: 672)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !4342, file: !19, line: 342, baseType: !7, size: 32, offset: 704)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !4342, file: !19, line: 344, baseType: !1108, size: 16, offset: 736)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !4342, file: !19, line: 345, baseType: !1108, size: 16, offset: 752)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !4342, file: !19, line: 346, baseType: !1108, size: 16, offset: 768)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !4342, file: !19, line: 348, baseType: !1205, size: 8, offset: 784)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !4342, file: !19, line: 349, baseType: !1205, size: 8, offset: 792)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !4342, file: !19, line: 350, baseType: !1205, size: 8, offset: 800)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !4342, file: !19, line: 351, baseType: !54, size: 32, offset: 832)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !3765, file: !19, line: 504, baseType: !7, size: 32, offset: 8896)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !3765, file: !19, line: 534, baseType: !7, size: 32, offset: 8928)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !3765, file: !19, line: 535, baseType: !7, size: 32, offset: 8960)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3765, file: !19, line: 536, baseType: !211, size: 32, offset: 8992)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !3765, file: !19, line: 537, baseType: !1022, size: 192, offset: 9024)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3765, file: !19, line: 544, baseType: !3802, size: 64, offset: 9216)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !3765, file: !19, line: 546, baseType: !996, size: 128, offset: 9280)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !3765, file: !19, line: 547, baseType: !1004, offset: 9408)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !3765, file: !19, line: 548, baseType: !3787, size: 704, offset: 9408)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3765, file: !19, line: 550, baseType: !1022, size: 192, offset: 10112)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !3765, file: !19, line: 551, baseType: !1022, size: 192, offset: 10304)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !3765, file: !19, line: 557, baseType: !996, size: 128, offset: 10496)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !3765, file: !19, line: 558, baseType: !1004, offset: 10624)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !3765, file: !19, line: 560, baseType: !211, size: 32, offset: 10624)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !3765, file: !19, line: 563, baseType: !4386, size: 256, offset: 10688)
!4386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !4387, line: 18, size: 256, elements: !4388)
!4387 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!4388 = !{!4389, !4390, !4391, !4392}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !4386, file: !4387, line: 19, baseType: !2988, size: 64)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4386, file: !4387, line: 20, baseType: !211, size: 32, offset: 64)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4386, file: !4387, line: 21, baseType: !3764, size: 64, offset: 128)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4386, file: !4387, line: 22, baseType: !4393, size: 64, offset: 192)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4395)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !4387, line: 10, size: 256, elements: !4396)
!4396 = !{!4397, !4438, !4442, !4446}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !4395, file: !4387, line: 11, baseType: !4398, size: 64)
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 64)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!211, !4401}
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !4403, line: 22, size: 1280, elements: !4404)
!4403 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!4404 = !{!4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437}
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !4402, file: !4403, line: 23, baseType: !2090, size: 32)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !4402, file: !4403, line: 24, baseType: !1050, size: 32, offset: 32)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !4402, file: !4403, line: 25, baseType: !1050, size: 32, offset: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !4402, file: !4403, line: 28, baseType: !1050, size: 32, offset: 96)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4402, file: !4403, line: 29, baseType: !978, size: 64, offset: 128)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !4402, file: !4403, line: 30, baseType: !978, size: 64, offset: 192)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !4402, file: !4403, line: 31, baseType: !1050, size: 32, offset: 256)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !4402, file: !4403, line: 32, baseType: !1050, size: 32, offset: 288)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !4402, file: !4403, line: 33, baseType: !1050, size: 32, offset: 320)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !4402, file: !4403, line: 34, baseType: !1050, size: 32, offset: 352)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !4402, file: !4403, line: 35, baseType: !978, size: 64, offset: 384)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !4402, file: !4403, line: 38, baseType: !1050, size: 32, offset: 448)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !4402, file: !4403, line: 40, baseType: !1050, size: 32, offset: 480)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !4402, file: !4403, line: 41, baseType: !1050, size: 32, offset: 512)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !4402, file: !4403, line: 42, baseType: !1050, size: 32, offset: 544)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !4402, file: !4403, line: 43, baseType: !978, size: 64, offset: 576)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !4402, file: !4403, line: 44, baseType: !978, size: 64, offset: 640)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4402, file: !4403, line: 46, baseType: !1050, size: 32, offset: 704)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4402, file: !4403, line: 47, baseType: !1050, size: 32, offset: 736)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !4402, file: !4403, line: 48, baseType: !978, size: 64, offset: 768)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !4402, file: !4403, line: 49, baseType: !1050, size: 32, offset: 832)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !4402, file: !4403, line: 51, baseType: !1050, size: 32, offset: 864)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !4402, file: !4403, line: 52, baseType: !1050, size: 32, offset: 896)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !4402, file: !4403, line: 53, baseType: !1050, size: 32, offset: 928)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !4402, file: !4403, line: 54, baseType: !1050, size: 32, offset: 960)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4402, file: !4403, line: 55, baseType: !1050, size: 32, offset: 992)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !4402, file: !4403, line: 56, baseType: !1050, size: 32, offset: 1024)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !4402, file: !4403, line: 57, baseType: !1050, size: 32, offset: 1056)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !4402, file: !4403, line: 58, baseType: !2090, size: 32, offset: 1088)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !4402, file: !4403, line: 59, baseType: !2090, size: 32, offset: 1120)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !4402, file: !4403, line: 60, baseType: !978, size: 64, offset: 1152)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !4402, file: !4403, line: 61, baseType: !1050, size: 32, offset: 1216)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4402, file: !4403, line: 63, baseType: !1050, size: 32, offset: 1248)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !4395, file: !4387, line: 12, baseType: !4439, size: 64, offset: 64)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!211, !3768, !4401, !2017}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !4395, file: !4387, line: 14, baseType: !4443, size: 64, offset: 128)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 64)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!211, !3768, !4401}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !4395, file: !4387, line: 15, baseType: !4043, size: 64, offset: 192)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3765, file: !19, line: 570, baseType: !1678, size: 128, align: 64, offset: 10944)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !3765, file: !19, line: 571, baseType: !1873, size: 128, offset: 11072)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !3765, file: !19, line: 576, baseType: !1022, size: 192, offset: 11200)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !3765, file: !19, line: 578, baseType: !4154, size: 64, offset: 11392)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !3765, file: !19, line: 579, baseType: !996, size: 128, offset: 11456)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !3765, file: !19, line: 580, baseType: !3644, size: 2368, offset: 11584)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !3765, file: !19, line: 582, baseType: !1365, size: 64, offset: 13952)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !3765, file: !19, line: 589, baseType: !1482, size: 8, offset: 14016)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3765, file: !19, line: 591, baseType: !1631, size: 64, offset: 14080)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !3765, file: !19, line: 594, baseType: !4457, size: 320, offset: 14144)
!4457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 320, elements: !2248)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3564, file: !2657, line: 191, baseType: !983, size: 64, offset: 7168)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3564, file: !2657, line: 193, baseType: !211, size: 32, offset: 7232)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3564, file: !2657, line: 194, baseType: !986, size: 64, offset: 7296)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3564, file: !2657, line: 196, baseType: !2097, size: 256, offset: 7360)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3564, file: !2657, line: 197, baseType: !2697, size: 64, offset: 7616)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3564, file: !2657, line: 199, baseType: !4464, size: 64, offset: 7680)
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2657, line: 199, flags: DIFlagFwdDecl)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3564, file: !2657, line: 200, baseType: !1060, size: 32, offset: 7744)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3564, file: !2657, line: 201, baseType: !4468, size: 64, offset: 7808)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2657, line: 156, flags: DIFlagFwdDecl)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3564, file: !2657, line: 203, baseType: !2691, size: 512, offset: 7872)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3564, file: !2657, line: 208, baseType: !211, size: 32, offset: 8384)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3564, file: !2657, line: 209, baseType: !4473, size: 64, offset: 8448)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2657, line: 157, flags: DIFlagFwdDecl)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3564, file: !2657, line: 210, baseType: !4476, offset: 8512)
!4476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1544, line: 192, elements: !1018)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2640, file: !897, line: 43, baseType: !4213, size: 64, offset: 1024)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2640, file: !897, line: 46, baseType: !211, size: 32, offset: 1088)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2640, file: !897, line: 48, baseType: !1022, size: 192, offset: 1152)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1492, file: !90, line: 1452, baseType: !4213, size: 64, offset: 1536)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1492, file: !90, line: 1453, baseType: !4482, size: 64, offset: 1600)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !90, line: 1453, flags: DIFlagFwdDecl)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1492, file: !90, line: 1454, baseType: !1537, size: 128, offset: 1664)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1492, file: !90, line: 1455, baseType: !7, size: 32, offset: 1792)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1492, file: !90, line: 1456, baseType: !4487, size: 2432, offset: 1856)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !84, line: 518, size: 2432, elements: !4488)
!4488 = !{!4489, !4490, !4491, !4493, !4525}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4487, file: !84, line: 519, baseType: !7, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4487, file: !84, line: 520, baseType: !2097, size: 256, offset: 64)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4487, file: !84, line: 521, baseType: !4492, size: 192, offset: 320)
!4492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1334, size: 192, elements: !1549)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4487, file: !84, line: 522, baseType: !4494, size: 1728, offset: 512)
!4494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4495, size: 1728, elements: !1549)
!4495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !84, line: 222, size: 576, elements: !4496)
!4496 = !{!4497, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4495, file: !84, line: 223, baseType: !4498, size: 64)
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !84, line: 443, size: 256, elements: !4500)
!4500 = !{!4501, !4502, !4515, !4516}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4499, file: !84, line: 444, baseType: !211, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4499, file: !84, line: 445, baseType: !4503, size: 64, offset: 64)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4505)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !84, line: 310, size: 512, elements: !4506)
!4506 = !{!4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4505, file: !84, line: 311, baseType: !1599, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4505, file: !84, line: 312, baseType: !1599, size: 64, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4505, file: !84, line: 313, baseType: !1599, size: 64, offset: 128)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4505, file: !84, line: 314, baseType: !1599, size: 64, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4505, file: !84, line: 315, baseType: !2458, size: 64, offset: 256)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4505, file: !84, line: 316, baseType: !2458, size: 64, offset: 320)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4505, file: !84, line: 317, baseType: !2458, size: 64, offset: 384)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4505, file: !84, line: 318, baseType: !2530, size: 64, offset: 448)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4499, file: !84, line: 446, baseType: !1528, size: 64, offset: 128)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4499, file: !84, line: 447, baseType: !4498, size: 64, offset: 192)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4495, file: !84, line: 224, baseType: !211, size: 32, offset: 64)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4495, file: !84, line: 226, baseType: !996, size: 128, offset: 128)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4495, file: !84, line: 227, baseType: !986, size: 64, offset: 256)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4495, file: !84, line: 228, baseType: !7, size: 32, offset: 320)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4495, file: !84, line: 229, baseType: !7, size: 32, offset: 352)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4495, file: !84, line: 230, baseType: !2494, size: 64, offset: 384)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4495, file: !84, line: 231, baseType: !2494, size: 64, offset: 448)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4495, file: !84, line: 232, baseType: !983, size: 64, offset: 512)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4487, file: !84, line: 523, baseType: !4526, size: 192, offset: 2240)
!4526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4503, size: 192, elements: !1549)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1492, file: !90, line: 1458, baseType: !4528, size: 2112, offset: 4288)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !90, line: 1410, size: 2112, elements: !4529)
!4529 = !{!4530, !4531, !4532}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4528, file: !90, line: 1411, baseType: !211, size: 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4528, file: !90, line: 1412, baseType: !1873, size: 128, offset: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4528, file: !90, line: 1413, baseType: !4533, size: 1920, offset: 192)
!4533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4534, size: 1920, elements: !1549)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4535, line: 12, size: 640, elements: !4536)
!4535 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4536 = !{!4537, !4545, !4546, !4551, !4552}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4534, file: !4535, line: 13, baseType: !4538, size: 320)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4539, line: 17, size: 320, elements: !4540)
!4539 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4540 = !{!4541, !4542, !4543, !4544}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4538, file: !4539, line: 18, baseType: !211, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4538, file: !4539, line: 19, baseType: !211, size: 32, offset: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4538, file: !4539, line: 20, baseType: !1873, size: 128, offset: 64)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4538, file: !4539, line: 22, baseType: !1678, size: 128, align: 64, offset: 192)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4534, file: !4535, line: 14, baseType: !3424, size: 64, offset: 320)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4534, file: !4535, line: 15, baseType: !4547, size: 64, offset: 384)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4548, line: 16, size: 64, elements: !4549)
!4548 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4549 = !{!4550}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4547, file: !4548, line: 17, baseType: !1039, size: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4534, file: !4535, line: 16, baseType: !1873, size: 128, offset: 448)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4534, file: !4535, line: 17, baseType: !1060, size: 32, offset: 576)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1492, file: !90, line: 1465, baseType: !983, size: 64, offset: 6400)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1492, file: !90, line: 1468, baseType: !1049, size: 32, offset: 6464)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1492, file: !90, line: 1470, baseType: !2112, size: 64, offset: 6528)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1492, file: !90, line: 1471, baseType: !2112, size: 64, offset: 6592)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1492, file: !90, line: 1473, baseType: !1050, size: 32, offset: 6656)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1492, file: !90, line: 1474, baseType: !4559, size: 64, offset: 6720)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !90, line: 603, flags: DIFlagFwdDecl)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1492, file: !90, line: 1477, baseType: !3075, size: 256, offset: 6784)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1492, file: !90, line: 1478, baseType: !4563, size: 128, offset: 7040)
!4563 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4564, line: 18, baseType: !4565)
!4564 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4564, line: 16, size: 128, elements: !4566)
!4566 = !{!4567}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4565, file: !4564, line: 17, baseType: !4568, size: 128)
!4568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 128, elements: !3407)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1492, file: !90, line: 1480, baseType: !7, size: 32, offset: 7168)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1492, file: !90, line: 1481, baseType: !2017, size: 32, offset: 7200)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1492, file: !90, line: 1487, baseType: !1022, size: 192, offset: 7232)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1492, file: !90, line: 1493, baseType: !1437, size: 64, offset: 7424)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1492, file: !90, line: 1495, baseType: !1417, size: 64, offset: 7488)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1492, file: !90, line: 1500, baseType: !211, size: 32, offset: 7552)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1492, file: !90, line: 1502, baseType: !4576, size: 448, offset: 7616)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2442, line: 60, size: 448, elements: !4577)
!4577 = !{!4578, !4583, !4584, !4585, !4586, !4587, !4588}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4576, file: !2442, line: 61, baseType: !4579, size: 64)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 64)
!4580 = !DISubroutineType(types: !4581)
!4581 = !{!986, !4582, !2440}
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4576, file: !2442, line: 63, baseType: !4579, size: 64, offset: 64)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4576, file: !2442, line: 66, baseType: !944, size: 64, offset: 128)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4576, file: !2442, line: 67, baseType: !211, size: 32, offset: 192)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4576, file: !2442, line: 68, baseType: !7, size: 32, offset: 224)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4576, file: !2442, line: 71, baseType: !996, size: 128, offset: 256)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4576, file: !2442, line: 77, baseType: !4589, size: 64, offset: 384)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1492, file: !90, line: 1505, baseType: !1026, size: 64, offset: 8064)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1492, file: !90, line: 1508, baseType: !1026, size: 64, offset: 8128)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1492, file: !90, line: 1511, baseType: !211, size: 32, offset: 8192)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1492, file: !90, line: 1514, baseType: !2425, size: 32, offset: 8224)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1492, file: !90, line: 1517, baseType: !3558, size: 64, offset: 8256)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1492, file: !90, line: 1518, baseType: !1533, size: 64, offset: 8320)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1492, file: !90, line: 1525, baseType: !2230, size: 64, offset: 8384)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1492, file: !90, line: 1532, baseType: !4598, size: 64, offset: 8448)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4599, line: 52, size: 64, elements: !4600)
!4599 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4600 = !{!4601}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4598, file: !4599, line: 53, baseType: !4602, size: 64)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4599, line: 40, size: 256, elements: !4604)
!4604 = !{!4605, !4606, !4611}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4603, file: !4599, line: 42, baseType: !1004)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4603, file: !4599, line: 44, baseType: !4607, size: 192)
!4607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4599, line: 28, size: 192, elements: !4608)
!4608 = !{!4609, !4610}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4607, file: !4599, line: 29, baseType: !996, size: 128)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4607, file: !4599, line: 31, baseType: !944, size: 64, offset: 128)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4603, file: !4599, line: 49, baseType: !944, size: 64, offset: 192)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1492, file: !90, line: 1533, baseType: !4598, size: 64, offset: 8512)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1492, file: !90, line: 1534, baseType: !1678, size: 128, align: 64, offset: 8576)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1492, file: !90, line: 1535, baseType: !2278, size: 256, offset: 8704)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1492, file: !90, line: 1537, baseType: !1022, size: 192, offset: 8960)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1492, file: !90, line: 1542, baseType: !211, size: 32, offset: 9152)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1492, file: !90, line: 1545, baseType: !1004, offset: 9184)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1492, file: !90, line: 1546, baseType: !996, size: 128, offset: 9216)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1492, file: !90, line: 1548, baseType: !1004, offset: 9344)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1492, file: !90, line: 1549, baseType: !996, size: 128, offset: 9344)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1366, file: !1367, line: 104, baseType: !986, size: 64, offset: 896)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1366, file: !1367, line: 105, baseType: !983, size: 64, offset: 960)
!4623 = !DIDerivedType(tag: DW_TAG_member, scope: !1366, file: !1367, line: 107, baseType: !4624, size: 128, offset: 1024)
!4624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1366, file: !1367, line: 107, size: 128, elements: !4625)
!4625 = !{!4626, !4627}
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4624, file: !1367, line: 108, baseType: !996, size: 128)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4624, file: !1367, line: 109, baseType: !4628, size: 64)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1366, file: !1367, line: 111, baseType: !996, size: 128, offset: 1152)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1366, file: !1367, line: 112, baseType: !996, size: 128, offset: 1280)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1366, file: !1367, line: 120, baseType: !4632, size: 128, offset: 1408)
!4632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1366, file: !1367, line: 116, size: 128, elements: !4633)
!4633 = !{!4634, !4635, !4636}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4632, file: !1367, line: 117, baseType: !1537, size: 128)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4632, file: !1367, line: 118, baseType: !1376, size: 128)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4632, file: !1367, line: 119, baseType: !1678, size: 128, align: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1359, file: !90, line: 1866, baseType: !4638, size: 64, offset: 64)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!1437, !1365, !1334, !4641}
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !4643, line: 10, size: 128, elements: !4644)
!4643 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!4644 = !{!4645, !4646}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4642, file: !4643, line: 11, baseType: !2832, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4642, file: !4643, line: 12, baseType: !983, size: 64, offset: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1359, file: !90, line: 1867, baseType: !4648, size: 64, offset: 128)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!211, !1334, !211}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1359, file: !90, line: 1868, baseType: !4652, size: 64, offset: 192)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!4655, !1334, !211}
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !90, line: 581, flags: DIFlagFwdDecl)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1359, file: !90, line: 1870, baseType: !4658, size: 64, offset: 256)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DISubroutineType(types: !4660)
!4660 = !{!211, !1365, !1463, !211}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1359, file: !90, line: 1872, baseType: !4662, size: 64, offset: 320)
!4662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4663, size: 64)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!211, !1334, !1365, !1338, !1482}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1359, file: !90, line: 1873, baseType: !4666, size: 64, offset: 384)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DISubroutineType(types: !4668)
!4668 = !{!211, !1365, !1334, !1365}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1359, file: !90, line: 1874, baseType: !4670, size: 64, offset: 448)
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4671, size: 64)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{!211, !1334, !1365}
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1359, file: !90, line: 1875, baseType: !4674, size: 64, offset: 512)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{!211, !1334, !1365, !1437}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1359, file: !90, line: 1876, baseType: !4678, size: 64, offset: 576)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!211, !1334, !1365, !1338}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1359, file: !90, line: 1877, baseType: !4670, size: 64, offset: 640)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1359, file: !90, line: 1878, baseType: !4683, size: 64, offset: 704)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!211, !1334, !1365, !1338, !1496}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1359, file: !90, line: 1879, baseType: !4687, size: 64, offset: 768)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!211, !1334, !1365, !1334, !1365, !7}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1359, file: !90, line: 1881, baseType: !4691, size: 64, offset: 832)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!211, !1365, !4694}
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !90, line: 219, size: 640, elements: !4696)
!4696 = !{!4697, !4698, !4699, !4700, !4701, !4702, !4707, !4708, !4709}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !4695, file: !90, line: 220, baseType: !7, size: 32)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !4695, file: !90, line: 221, baseType: !1338, size: 16, offset: 32)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !4695, file: !90, line: 222, baseType: !1341, size: 32, offset: 64)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !4695, file: !90, line: 223, baseType: !1349, size: 32, offset: 96)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !4695, file: !90, line: 224, baseType: !1501, size: 64, offset: 128)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !4695, file: !90, line: 225, baseType: !4703, size: 128, offset: 192)
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !2113, line: 13, size: 128, elements: !4704)
!4704 = !{!4705, !4706}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4703, file: !2113, line: 14, baseType: !2112, size: 64)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4703, file: !2113, line: 15, baseType: !944, size: 64, offset: 64)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !4695, file: !90, line: 226, baseType: !4703, size: 128, offset: 320)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !4695, file: !90, line: 227, baseType: !4703, size: 128, offset: 448)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !4695, file: !90, line: 234, baseType: !1698, size: 64, offset: 576)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1359, file: !90, line: 1882, baseType: !4711, size: 64, offset: 896)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DISubroutineType(types: !4713)
!4713 = !{!211, !1480, !4714, !1049, !7}
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !4716, line: 22, size: 1152, elements: !4717)
!4716 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!4717 = !{!4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !4715, file: !4716, line: 23, baseType: !1049, size: 32)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4715, file: !4716, line: 24, baseType: !1338, size: 16, offset: 32)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !4715, file: !4716, line: 25, baseType: !7, size: 32, offset: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !4715, file: !4716, line: 26, baseType: !2120, size: 32, offset: 96)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !4715, file: !4716, line: 27, baseType: !976, size: 64, offset: 128)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !4715, file: !4716, line: 28, baseType: !976, size: 64, offset: 192)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4715, file: !4716, line: 37, baseType: !976, size: 64, offset: 256)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4715, file: !4716, line: 38, baseType: !1496, size: 32, offset: 320)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !4715, file: !4716, line: 39, baseType: !1496, size: 32, offset: 352)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4715, file: !4716, line: 40, baseType: !1341, size: 32, offset: 384)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4715, file: !4716, line: 41, baseType: !1349, size: 32, offset: 416)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4715, file: !4716, line: 42, baseType: !1501, size: 64, offset: 448)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !4715, file: !4716, line: 43, baseType: !4703, size: 128, offset: 512)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !4715, file: !4716, line: 44, baseType: !4703, size: 128, offset: 640)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !4715, file: !4716, line: 45, baseType: !4703, size: 128, offset: 768)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !4715, file: !4716, line: 46, baseType: !4703, size: 128, offset: 896)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4715, file: !4716, line: 47, baseType: !976, size: 64, offset: 1024)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !4715, file: !4716, line: 48, baseType: !976, size: 64, offset: 1088)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1359, file: !90, line: 1883, baseType: !4737, size: 64, offset: 960)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!1703, !1365, !1463, !1631}
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1359, file: !90, line: 1884, baseType: !4741, size: 64, offset: 1024)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!211, !1334, !4744, !976, !976}
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4745, size: 64)
!4745 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !90, line: 50, flags: DIFlagFwdDecl)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1359, file: !90, line: 1886, baseType: !4747, size: 64, offset: 1088)
!4747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4748, size: 64)
!4748 = !DISubroutineType(types: !4749)
!4749 = !{!211, !1334, !4750, !211}
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1359, file: !90, line: 1887, baseType: !4752, size: 64, offset: 1152)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!211, !1334, !1365, !1698, !7, !1338}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1359, file: !90, line: 1890, baseType: !4678, size: 64, offset: 1216)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1359, file: !90, line: 1891, baseType: !4757, size: 64, offset: 1280)
!4757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4758, size: 64)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!211, !1334, !4655, !211}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1335, file: !90, line: 623, baseType: !1491, size: 64, offset: 192)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1335, file: !90, line: 624, baseType: !1330, size: 64, offset: 256)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1335, file: !90, line: 631, baseType: !986, size: 64, offset: 320)
!4763 = !DIDerivedType(tag: DW_TAG_member, scope: !1335, file: !90, line: 639, baseType: !4764, size: 32, offset: 384)
!4764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1335, file: !90, line: 639, size: 32, elements: !4765)
!4765 = !{!4766, !4767}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4764, file: !90, line: 640, baseType: !4092, size: 32)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4764, file: !90, line: 641, baseType: !7, size: 32)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1335, file: !90, line: 643, baseType: !1496, size: 32, offset: 416)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1335, file: !90, line: 644, baseType: !1501, size: 64, offset: 448)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1335, file: !90, line: 645, baseType: !4703, size: 128, offset: 512)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1335, file: !90, line: 646, baseType: !4703, size: 128, offset: 640)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1335, file: !90, line: 647, baseType: !4703, size: 128, offset: 768)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1335, file: !90, line: 648, baseType: !1004, offset: 896)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1335, file: !90, line: 649, baseType: !1108, size: 16, offset: 896)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1335, file: !90, line: 650, baseType: !1203, size: 8, offset: 912)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1335, file: !90, line: 651, baseType: !1203, size: 8, offset: 920)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1335, file: !90, line: 652, baseType: !2614, size: 64, offset: 960)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1335, file: !90, line: 659, baseType: !986, size: 64, offset: 1024)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1335, file: !90, line: 660, baseType: !2097, size: 256, offset: 1088)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1335, file: !90, line: 662, baseType: !986, size: 64, offset: 1344)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1335, file: !90, line: 663, baseType: !986, size: 64, offset: 1408)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1335, file: !90, line: 665, baseType: !1537, size: 128, offset: 1472)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1335, file: !90, line: 666, baseType: !996, size: 128, offset: 1600)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1335, file: !90, line: 675, baseType: !996, size: 128, offset: 1728)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1335, file: !90, line: 676, baseType: !996, size: 128, offset: 1856)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1335, file: !90, line: 677, baseType: !996, size: 128, offset: 1984)
!4787 = !DIDerivedType(tag: DW_TAG_member, scope: !1335, file: !90, line: 678, baseType: !4788, size: 128, offset: 2112)
!4788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1335, file: !90, line: 678, size: 128, elements: !4789)
!4789 = !{!4790, !4791}
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4788, file: !90, line: 679, baseType: !1533, size: 64)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4788, file: !90, line: 680, baseType: !1678, size: 128, align: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1335, file: !90, line: 682, baseType: !1028, size: 64, offset: 2240)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1335, file: !90, line: 683, baseType: !1028, size: 64, offset: 2304)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1335, file: !90, line: 684, baseType: !1060, size: 32, offset: 2368)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1335, file: !90, line: 685, baseType: !1060, size: 32, offset: 2400)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1335, file: !90, line: 686, baseType: !1060, size: 32, offset: 2432)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1335, file: !90, line: 688, baseType: !1060, size: 32, offset: 2464)
!4798 = !DIDerivedType(tag: DW_TAG_member, scope: !1335, file: !90, line: 690, baseType: !4799, size: 64, offset: 2496)
!4799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1335, file: !90, line: 690, size: 64, elements: !4800)
!4800 = !{!4801, !4802}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4799, file: !90, line: 691, baseType: !1689, size: 64)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4799, file: !90, line: 692, baseType: !1564, size: 64)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1335, file: !90, line: 694, baseType: !4804, size: 64, offset: 2560)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !90, line: 1100, size: 384, elements: !4806)
!4806 = !{!4807, !4808, !4809, !4810}
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4805, file: !90, line: 1101, baseType: !1004)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4805, file: !90, line: 1102, baseType: !996, size: 128)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4805, file: !90, line: 1103, baseType: !996, size: 128, offset: 128)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4805, file: !90, line: 1104, baseType: !996, size: 128, offset: 256)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1335, file: !90, line: 695, baseType: !1331, size: 1216, align: 64, offset: 2624)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1335, file: !90, line: 696, baseType: !996, size: 128, offset: 3840)
!4813 = !DIDerivedType(tag: DW_TAG_member, scope: !1335, file: !90, line: 697, baseType: !4814, size: 64, offset: 3968)
!4814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1335, file: !90, line: 697, size: 64, elements: !4815)
!4815 = !{!4816, !4817, !4818, !4821, !4822}
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4814, file: !90, line: 698, baseType: !1789, size: 64)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4814, file: !90, line: 699, baseType: !2639, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4814, file: !90, line: 700, baseType: !4819, size: 64)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !90, line: 700, flags: DIFlagFwdDecl)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4814, file: !90, line: 701, baseType: !1463, size: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4814, file: !90, line: 702, baseType: !7, size: 32)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1335, file: !90, line: 705, baseType: !1050, size: 32, offset: 4032)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1335, file: !90, line: 708, baseType: !1050, size: 32, offset: 4064)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1335, file: !90, line: 709, baseType: !4559, size: 64, offset: 4096)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1335, file: !90, line: 720, baseType: !983, size: 64, offset: 4160)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1331, file: !90, line: 453, baseType: !2874, size: 128, offset: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1331, file: !90, line: 454, baseType: !984, size: 32, offset: 192)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1331, file: !90, line: 455, baseType: !1060, size: 32, offset: 224)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1331, file: !90, line: 460, baseType: !1190, size: 128, offset: 256)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1331, file: !90, line: 461, baseType: !2097, size: 256, offset: 384)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1331, file: !90, line: 462, baseType: !986, size: 64, offset: 640)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1331, file: !90, line: 463, baseType: !986, size: 64, offset: 704)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1331, file: !90, line: 464, baseType: !986, size: 64, offset: 768)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1331, file: !90, line: 465, baseType: !4836, size: 64, offset: 832)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4838)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !90, line: 367, size: 1408, elements: !4839)
!4839 = !{!4840, !4844, !4848, !4852, !4856, !4860, !4872, !4877, !4881, !4885, !4889, !4893, !4897, !4898, !4902, !4908, !4909, !4910, !4914, !4919, !4923, !4981}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !4838, file: !90, line: 368, baseType: !4841, size: 64)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!211, !1318, !1576}
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !4838, file: !90, line: 369, baseType: !4845, size: 64, offset: 64)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!211, !1698, !1318}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !4838, file: !90, line: 372, baseType: !4849, size: 64, offset: 128)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!211, !1330, !1576}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !4838, file: !90, line: 375, baseType: !4853, size: 64, offset: 192)
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 64)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{!211, !1318}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !4838, file: !90, line: 381, baseType: !4857, size: 64, offset: 256)
!4857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4858, size: 64)
!4858 = !DISubroutineType(types: !4859)
!4859 = !{!211, !1698, !1330, !999, !7}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !4838, file: !90, line: 383, baseType: !4861, size: 64, offset: 320)
!4861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4862, size: 64)
!4862 = !DISubroutineType(types: !4863)
!4863 = !{null, !4864}
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1736, line: 795, size: 256, elements: !4866)
!4866 = !{!4867, !4868, !4869, !4870, !4871}
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4865, file: !1736, line: 796, baseType: !1698, size: 64)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !4865, file: !1736, line: 797, baseType: !1330, size: 64, offset: 64)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !4865, file: !1736, line: 799, baseType: !986, size: 64, offset: 128)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !4865, file: !1736, line: 800, baseType: !7, size: 32, offset: 192)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !4865, file: !1736, line: 801, baseType: !7, size: 32, offset: 224)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !4838, file: !90, line: 385, baseType: !4873, size: 64, offset: 384)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!211, !1698, !1330, !1501, !7, !7, !4876, !1943}
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !4838, file: !90, line: 388, baseType: !4878, size: 64, offset: 448)
!4878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4879, size: 64)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!211, !1698, !1330, !1501, !7, !7, !1318, !983}
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !4838, file: !90, line: 393, baseType: !4882, size: 64, offset: 512)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!2660, !1330, !2660}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !4838, file: !90, line: 394, baseType: !4886, size: 64, offset: 576)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{null, !1318, !7, !7}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !4838, file: !90, line: 395, baseType: !4890, size: 64, offset: 640)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!211, !1318, !984}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !4838, file: !90, line: 396, baseType: !4894, size: 64, offset: 704)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{null, !1318}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !4838, file: !90, line: 397, baseType: !1711, size: 64, offset: 768)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !4838, file: !90, line: 402, baseType: !4899, size: 64, offset: 832)
!4899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4900, size: 64)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!211, !1330, !1318, !1318, !11}
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !4838, file: !90, line: 404, baseType: !4903, size: 64, offset: 896)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!1482, !1318, !4906}
!4906 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !4907, line: 305, baseType: !7)
!4907 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !4838, file: !90, line: 405, baseType: !4894, size: 64, offset: 960)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !4838, file: !90, line: 406, baseType: !4853, size: 64, offset: 1024)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !4838, file: !90, line: 407, baseType: !4911, size: 64, offset: 1088)
!4911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4912, size: 64)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!211, !1318, !986, !986}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !4838, file: !90, line: 409, baseType: !4915, size: 64, offset: 1152)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{null, !1318, !4918, !4918}
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !4838, file: !90, line: 410, baseType: !4920, size: 64, offset: 1216)
!4920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4921, size: 64)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!211, !1330, !1318}
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !4838, file: !90, line: 413, baseType: !4924, size: 64, offset: 1280)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!211, !4927, !1698, !4980}
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4928, size: 64)
!4928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !4929, line: 240, size: 1600, elements: !4930)
!4929 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!4930 = !{!4931, !4932, !4933, !4940, !4942, !4943, !4945, !4952, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978}
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4928, file: !4929, line: 241, baseType: !986, size: 64)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4928, file: !4929, line: 242, baseType: !2124, size: 16, offset: 64)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4928, file: !4929, line: 243, baseType: !4934, size: 320, offset: 128)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !4935, line: 83, size: 320, elements: !4936)
!4935 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!4936 = !{!4937, !4938, !4939}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4934, file: !4935, line: 84, baseType: !211, size: 32)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !4934, file: !4935, line: 85, baseType: !996, size: 128, offset: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !4934, file: !4935, line: 86, baseType: !996, size: 128, offset: 192)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4928, file: !4929, line: 244, baseType: !4941, size: 8, offset: 448)
!4941 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4928, file: !4929, line: 245, baseType: !7, size: 32, offset: 480)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !4928, file: !4929, line: 246, baseType: !4944, size: 64, offset: 512)
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !4928, file: !4929, line: 247, baseType: !4946, size: 64, offset: 576)
!4946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4947, size: 64)
!4947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !4929, line: 208, size: 32, elements: !4948)
!4948 = !{!4949, !4950, !4951}
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4947, file: !4929, line: 209, baseType: !1004)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4947, file: !4929, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4947, file: !4929, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !4928, file: !4929, line: 248, baseType: !4953, size: 64, offset: 640)
!4953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !4929, line: 232, size: 64, elements: !4954)
!4954 = !{!4955, !4956}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4953, file: !4929, line: 233, baseType: !4947, size: 32)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4953, file: !4929, line: 234, baseType: !4947, size: 32, offset: 32)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !4928, file: !4929, line: 249, baseType: !7, size: 32, offset: 704)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !4928, file: !4929, line: 250, baseType: !7, size: 32, offset: 736)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4928, file: !4929, line: 251, baseType: !7, size: 32, offset: 768)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !4928, file: !4929, line: 252, baseType: !7, size: 32, offset: 800)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !4928, file: !4929, line: 253, baseType: !7, size: 32, offset: 832)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !4928, file: !4929, line: 254, baseType: !7, size: 32, offset: 864)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !4928, file: !4929, line: 255, baseType: !3424, size: 64, offset: 896)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !4928, file: !4929, line: 256, baseType: !4965, size: 64, offset: 960)
!4965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4966, size: 64)
!4966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !4929, line: 227, size: 64, elements: !4967)
!4967 = !{!4968, !4969}
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4966, file: !4929, line: 228, baseType: !4947, size: 32)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4966, file: !4929, line: 229, baseType: !7, size: 32, offset: 32)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !4928, file: !4929, line: 257, baseType: !1193, size: 64, offset: 1024)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !4928, file: !4929, line: 258, baseType: !2639, size: 64, offset: 1088)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !4928, file: !4929, line: 259, baseType: !1698, size: 64, offset: 1152)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !4928, file: !4929, line: 260, baseType: !7, size: 32, offset: 1216)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4928, file: !4929, line: 265, baseType: !1004, offset: 1248)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !4928, file: !4929, line: 278, baseType: !1004, offset: 1248)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !4928, file: !4929, line: 282, baseType: !2278, size: 256, offset: 1280)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !4928, file: !4929, line: 283, baseType: !4953, size: 64, offset: 1536)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !4928, file: !4929, line: 284, baseType: !4979, offset: 1600)
!4979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4934, elements: !3464)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !4838, file: !90, line: 415, baseType: !4982, size: 64, offset: 1344)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{null, !1698}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1331, file: !90, line: 466, baseType: !986, size: 64, offset: 896)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1331, file: !90, line: 467, baseType: !2425, size: 32, offset: 960)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1331, file: !90, line: 468, baseType: !1004, offset: 992)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1331, file: !90, line: 469, baseType: !996, size: 128, offset: 1024)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1331, file: !90, line: 470, baseType: !983, size: 64, offset: 1152)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1326, file: !1232, line: 87, baseType: !986, size: 64, offset: 192)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1326, file: !1232, line: 94, baseType: !986, size: 64, offset: 256)
!4992 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !1232, line: 96, baseType: !4993, size: 64)
!4993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1323, file: !1232, line: 96, size: 64, elements: !4994)
!4994 = !{!4995}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !4993, file: !1232, line: 101, baseType: !4996, size: 64)
!4996 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !982, line: 143, baseType: !976)
!4997 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !1232, line: 103, baseType: !4998, size: 320)
!4998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1323, file: !1232, line: 103, size: 320, elements: !4999)
!4999 = !{!5000, !5010, !5011, !5012}
!5000 = !DIDerivedType(tag: DW_TAG_member, scope: !4998, file: !1232, line: 104, baseType: !5001, size: 128)
!5001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4998, file: !1232, line: 104, size: 128, elements: !5002)
!5002 = !{!5003, !5004}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !5001, file: !1232, line: 105, baseType: !996, size: 128)
!5004 = !DIDerivedType(tag: DW_TAG_member, scope: !5001, file: !1232, line: 106, baseType: !5005, size: 128)
!5005 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5001, file: !1232, line: 106, size: 128, elements: !5006)
!5006 = !{!5007, !5008, !5009}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5005, file: !1232, line: 107, baseType: !1318, size: 64)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5005, file: !1232, line: 109, baseType: !211, size: 32, offset: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !5005, file: !1232, line: 110, baseType: !211, size: 32, offset: 96)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !4998, file: !1232, line: 117, baseType: !3647, size: 64, offset: 128)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !4998, file: !1232, line: 119, baseType: !983, size: 64, offset: 192)
!5012 = !DIDerivedType(tag: DW_TAG_member, scope: !4998, file: !1232, line: 120, baseType: !5013, size: 64, offset: 256)
!5013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4998, file: !1232, line: 120, size: 64, elements: !5014)
!5014 = !{!5015, !5016, !5017}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !5013, file: !1232, line: 121, baseType: !983, size: 64)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !5013, file: !1232, line: 122, baseType: !986, size: 64)
!5017 = !DIDerivedType(tag: DW_TAG_member, scope: !5013, file: !1232, line: 123, baseType: !5018, size: 32)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5013, file: !1232, line: 123, size: 32, elements: !5019)
!5019 = !{!5020, !5021, !5022}
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !5018, file: !1232, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !5018, file: !1232, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !5018, file: !1232, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!5023 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !1232, line: 130, baseType: !5024, size: 192)
!5024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1323, file: !1232, line: 130, size: 192, elements: !5025)
!5025 = !{!5026, !5027, !5028, !5029, !5030}
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !5024, file: !1232, line: 131, baseType: !986, size: 64)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !5024, file: !1232, line: 134, baseType: !1205, size: 8, offset: 64)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !5024, file: !1232, line: 135, baseType: !1205, size: 8, offset: 72)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !5024, file: !1232, line: 136, baseType: !1060, size: 32, offset: 96)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !5024, file: !1232, line: 137, baseType: !7, size: 32, offset: 128)
!5031 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !1232, line: 139, baseType: !5032, size: 256)
!5032 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1323, file: !1232, line: 139, size: 256, elements: !5033)
!5033 = !{!5034, !5035, !5036}
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !5032, file: !1232, line: 140, baseType: !986, size: 64)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !5032, file: !1232, line: 141, baseType: !1060, size: 32, offset: 64)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !5032, file: !1232, line: 143, baseType: !996, size: 128, offset: 128)
!5037 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !1232, line: 145, baseType: !5038, size: 256)
!5038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1323, file: !1232, line: 145, size: 256, elements: !5039)
!5039 = !{!5040, !5041, !5043, !5044, !5049}
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !5038, file: !1232, line: 146, baseType: !986, size: 64)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !5038, file: !1232, line: 147, baseType: !5042, size: 64, offset: 64)
!5042 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1250, line: 509, baseType: !1318)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !5038, file: !1232, line: 148, baseType: !986, size: 64, offset: 128)
!5044 = !DIDerivedType(tag: DW_TAG_member, scope: !5038, file: !1232, line: 149, baseType: !5045, size: 64, offset: 192)
!5045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5038, file: !1232, line: 149, size: 64, elements: !5046)
!5046 = !{!5047, !5048}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !5045, file: !1232, line: 150, baseType: !1230, size: 64)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !5045, file: !1232, line: 151, baseType: !1060, size: 32)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !5038, file: !1232, line: 156, baseType: !1004, offset: 256)
!5050 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !1232, line: 159, baseType: !5051, size: 128)
!5051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1323, file: !1232, line: 159, size: 128, elements: !5052)
!5052 = !{!5053, !5097}
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !5051, file: !1232, line: 161, baseType: !5054, size: 64)
!5054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5055, size: 64)
!5055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !77, line: 110, size: 1152, elements: !5056)
!5056 = !{!5057, !5067, !5068, !5069, !5070, !5071, !5072, !5084, !5085, !5086}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !5055, file: !77, line: 111, baseType: !5058, size: 384)
!5058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !77, line: 19, size: 384, elements: !5059)
!5059 = !{!5060, !5062, !5063, !5064, !5065, !5066}
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !5058, file: !77, line: 20, baseType: !5061, size: 64)
!5061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !5058, file: !77, line: 21, baseType: !5061, size: 64, offset: 64)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !5058, file: !77, line: 22, baseType: !5061, size: 64, offset: 128)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5058, file: !77, line: 23, baseType: !986, size: 64, offset: 192)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5058, file: !77, line: 24, baseType: !986, size: 64, offset: 256)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5058, file: !77, line: 25, baseType: !986, size: 64, offset: 320)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5055, file: !77, line: 112, baseType: !2681, size: 64, offset: 384)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !5055, file: !77, line: 113, baseType: !2667, size: 128, offset: 448)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5055, file: !77, line: 114, baseType: !2338, size: 192, offset: 576)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5055, file: !77, line: 115, baseType: !76, size: 32, offset: 768)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5055, file: !77, line: 116, baseType: !7, size: 32, offset: 800)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5055, file: !77, line: 117, baseType: !5073, size: 64, offset: 832)
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 64)
!5074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5075)
!5075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !77, line: 67, size: 256, elements: !5076)
!5076 = !{!5077, !5078, !5082, !5083}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !5075, file: !77, line: 73, baseType: !4894, size: 64)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !5075, file: !77, line: 78, baseType: !5079, size: 64, offset: 64)
!5079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5080, size: 64)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{null, !5054}
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !5075, file: !77, line: 83, baseType: !5079, size: 64, offset: 128)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !5075, file: !77, line: 89, baseType: !1285, size: 64, offset: 192)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5055, file: !77, line: 118, baseType: !983, size: 64, offset: 896)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !5055, file: !77, line: 119, baseType: !211, size: 32, offset: 960)
!5086 = !DIDerivedType(tag: DW_TAG_member, scope: !5055, file: !77, line: 120, baseType: !5087, size: 128, offset: 1024)
!5087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5055, file: !77, line: 120, size: 128, elements: !5088)
!5088 = !{!5089, !5095}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !5087, file: !77, line: 121, baseType: !5090, size: 128)
!5090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !5091, line: 6, size: 128, elements: !5092)
!5091 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!5092 = !{!5093, !5094}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5090, file: !5091, line: 7, baseType: !976, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5090, file: !5091, line: 8, baseType: !976, size: 64, offset: 64)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !5087, file: !77, line: 122, baseType: !5096)
!5096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5090, elements: !2403)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !5051, file: !1232, line: 162, baseType: !983, size: 64, offset: 64)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1323, file: !1232, line: 176, baseType: !1678, size: 128, align: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, scope: !1319, file: !1232, line: 179, baseType: !5100, size: 32, offset: 384)
!5100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1319, file: !1232, line: 179, size: 32, elements: !5101)
!5101 = !{!5102, !5103, !5104, !5105}
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !5100, file: !1232, line: 184, baseType: !1060, size: 32)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !5100, file: !1232, line: 192, baseType: !7, size: 32)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5100, file: !1232, line: 194, baseType: !7, size: 32)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !5100, file: !1232, line: 195, baseType: !211, size: 32)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1319, file: !1232, line: 199, baseType: !1060, size: 32, offset: 416)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1290, file: !60, line: 522, baseType: !1318, size: 64, offset: 512)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1290, file: !60, line: 528, baseType: !5109, size: 64, offset: 576)
!5109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1290, file: !60, line: 532, baseType: !1020, size: 64, offset: 640)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1290, file: !60, line: 536, baseType: !5042, size: 64, offset: 704)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1269, file: !60, line: 563, baseType: !5113, size: 64, offset: 320)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!1288, !1289, !59}
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1269, file: !60, line: 565, baseType: !5117, size: 64, offset: 384)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{null, !1289, !986, !986}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1269, file: !60, line: 567, baseType: !5121, size: 64, offset: 448)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!986, !1238}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1269, file: !60, line: 571, baseType: !1285, size: 64, offset: 512)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1269, file: !60, line: 574, baseType: !1285, size: 64, offset: 576)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1269, file: !60, line: 579, baseType: !5127, size: 64, offset: 640)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!211, !1238, !986, !983, !211, !211}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1269, file: !60, line: 585, baseType: !5131, size: 64, offset: 704)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!1437, !1238}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1269, file: !60, line: 615, baseType: !5135, size: 64, offset: 768)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!1318, !1238, !986}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1239, file: !1232, line: 359, baseType: !986, size: 64, offset: 1216)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1239, file: !1232, line: 361, baseType: !1698, size: 64, offset: 1280)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1239, file: !1232, line: 362, baseType: !983, size: 64, offset: 1344)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1239, file: !1232, line: 365, baseType: !1026, size: 64, offset: 1408)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1239, file: !1232, line: 373, baseType: !5143, offset: 1472)
!5143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1232, line: 296, elements: !1018)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1235, file: !1232, line: 391, baseType: !1193, size: 64, offset: 64)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1235, file: !1232, line: 392, baseType: !976, size: 64, offset: 128)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1235, file: !1232, line: 394, baseType: !1974, size: 64, offset: 192)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1235, file: !1232, line: 398, baseType: !986, size: 64, offset: 256)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1235, file: !1232, line: 399, baseType: !986, size: 64, offset: 320)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1235, file: !1232, line: 405, baseType: !986, size: 64, offset: 384)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1235, file: !1232, line: 406, baseType: !986, size: 64, offset: 448)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1235, file: !1232, line: 407, baseType: !5152, size: 64, offset: 512)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1250, line: 286, baseType: !5154)
!5154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 286, size: 64, elements: !5155)
!5155 = !{!5156}
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !5154, file: !1250, line: 286, baseType: !5157, size: 64)
!5157 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1255, line: 18, baseType: !986)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1235, file: !1232, line: 416, baseType: !1060, size: 32, offset: 576)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1235, file: !1232, line: 428, baseType: !1060, size: 32, offset: 608)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1235, file: !1232, line: 437, baseType: !1060, size: 32, offset: 640)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1235, file: !1232, line: 447, baseType: !1060, size: 32, offset: 672)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1235, file: !1232, line: 450, baseType: !1026, size: 64, offset: 704)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1235, file: !1232, line: 452, baseType: !211, size: 32, offset: 768)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1235, file: !1232, line: 454, baseType: !1004, offset: 800)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1235, file: !1232, line: 457, baseType: !2097, size: 256, offset: 832)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1235, file: !1232, line: 459, baseType: !996, size: 128, offset: 1088)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1235, file: !1232, line: 466, baseType: !986, size: 64, offset: 1216)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1235, file: !1232, line: 467, baseType: !986, size: 64, offset: 1280)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1235, file: !1232, line: 469, baseType: !986, size: 64, offset: 1344)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1235, file: !1232, line: 470, baseType: !986, size: 64, offset: 1408)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1235, file: !1232, line: 471, baseType: !1028, size: 64, offset: 1472)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1235, file: !1232, line: 472, baseType: !986, size: 64, offset: 1536)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1235, file: !1232, line: 473, baseType: !986, size: 64, offset: 1600)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1235, file: !1232, line: 474, baseType: !986, size: 64, offset: 1664)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1235, file: !1232, line: 475, baseType: !986, size: 64, offset: 1728)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1235, file: !1232, line: 477, baseType: !1004, offset: 1792)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1235, file: !1232, line: 478, baseType: !986, size: 64, offset: 1792)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1235, file: !1232, line: 478, baseType: !986, size: 64, offset: 1856)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1235, file: !1232, line: 478, baseType: !986, size: 64, offset: 1920)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1235, file: !1232, line: 478, baseType: !986, size: 64, offset: 1984)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1235, file: !1232, line: 479, baseType: !986, size: 64, offset: 2048)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1235, file: !1232, line: 479, baseType: !986, size: 64, offset: 2112)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1235, file: !1232, line: 479, baseType: !986, size: 64, offset: 2176)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1235, file: !1232, line: 480, baseType: !986, size: 64, offset: 2240)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1235, file: !1232, line: 480, baseType: !986, size: 64, offset: 2304)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1235, file: !1232, line: 480, baseType: !986, size: 64, offset: 2368)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1235, file: !1232, line: 480, baseType: !986, size: 64, offset: 2432)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1235, file: !1232, line: 482, baseType: !5189, size: 2816, offset: 2496)
!5189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 2816, elements: !5190)
!5190 = !{!5191}
!5191 = !DISubrange(count: 44)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1235, file: !1232, line: 488, baseType: !5193, size: 256, offset: 5312)
!5193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !5194, line: 60, size: 256, elements: !5195)
!5194 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!5195 = !{!5196}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5193, file: !5194, line: 61, baseType: !5197, size: 256)
!5197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1026, size: 256, elements: !2033)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1235, file: !1232, line: 490, baseType: !5199, size: 64, offset: 5568)
!5199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5200, size: 64)
!5200 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1232, line: 490, flags: DIFlagFwdDecl)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1235, file: !1232, line: 493, baseType: !5202, size: 896, offset: 5632)
!5202 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !5203, line: 53, baseType: !5204)
!5203 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!5204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5203, line: 13, size: 896, elements: !5205)
!5205 = !{!5206, !5207, !5208, !5209, !5212, !5213, !5214, !5215, !5235, !5236, !5237}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !5204, file: !5203, line: 18, baseType: !976, size: 64)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !5204, file: !5203, line: 28, baseType: !1028, size: 64, offset: 64)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !5204, file: !5203, line: 31, baseType: !2097, size: 256, offset: 128)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !5204, file: !5203, line: 32, baseType: !5210, size: 64, offset: 384)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !5203, line: 32, flags: DIFlagFwdDecl)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !5204, file: !5203, line: 37, baseType: !1108, size: 16, offset: 448)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5204, file: !5203, line: 40, baseType: !1022, size: 192, offset: 512)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !5204, file: !5203, line: 41, baseType: !983, size: 64, offset: 704)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !5204, file: !5203, line: 42, baseType: !5216, size: 64, offset: 768)
!5216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5217, size: 64)
!5217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5218)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !5219, line: 13, size: 896, elements: !5220)
!5219 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!5220 = !{!5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5218, file: !5219, line: 14, baseType: !983, size: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5218, file: !5219, line: 15, baseType: !986, size: 64, offset: 64)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !5218, file: !5219, line: 17, baseType: !986, size: 64, offset: 128)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !5218, file: !5219, line: 17, baseType: !986, size: 64, offset: 192)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !5218, file: !5219, line: 19, baseType: !944, size: 64, offset: 256)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !5218, file: !5219, line: 21, baseType: !944, size: 64, offset: 320)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !5218, file: !5219, line: 22, baseType: !944, size: 64, offset: 384)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !5218, file: !5219, line: 23, baseType: !944, size: 64, offset: 448)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !5218, file: !5219, line: 24, baseType: !944, size: 64, offset: 512)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !5218, file: !5219, line: 25, baseType: !944, size: 64, offset: 576)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !5218, file: !5219, line: 26, baseType: !944, size: 64, offset: 640)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !5218, file: !5219, line: 27, baseType: !944, size: 64, offset: 704)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !5218, file: !5219, line: 28, baseType: !944, size: 64, offset: 768)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !5218, file: !5219, line: 29, baseType: !944, size: 64, offset: 832)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !5204, file: !5203, line: 44, baseType: !1060, size: 32, offset: 832)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !5204, file: !5203, line: 50, baseType: !1726, size: 16, offset: 864)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !5204, file: !5203, line: 51, baseType: !5238, size: 16, offset: 880)
!5238 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !977, line: 18, baseType: !5239)
!5239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !979, line: 23, baseType: !2124)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1235, file: !1232, line: 495, baseType: !986, size: 64, offset: 6528)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1235, file: !1232, line: 497, baseType: !5242, size: 64, offset: 6592)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1232, line: 381, size: 384, elements: !5244)
!5244 = !{!5245, !5246, !5252}
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !5243, file: !1232, line: 382, baseType: !1060, size: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !5243, file: !1232, line: 383, baseType: !5247, size: 128, offset: 64)
!5247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1232, line: 376, size: 128, elements: !5248)
!5248 = !{!5249, !5250}
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5247, file: !1232, line: 377, baseType: !1039, size: 64)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5247, file: !1232, line: 378, baseType: !5251, size: 64, offset: 64)
!5251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5247, size: 64)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !5243, file: !1232, line: 384, baseType: !2338, size: 192, offset: 192)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1235, file: !1232, line: 500, baseType: !1004, offset: 6656)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1235, file: !1232, line: 501, baseType: !5255, size: 64, offset: 6656)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5256, size: 64)
!5256 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1232, line: 387, flags: DIFlagFwdDecl)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1235, file: !1232, line: 516, baseType: !2230, size: 64, offset: 6720)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1235, file: !1232, line: 519, baseType: !1698, size: 64, offset: 6784)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1235, file: !1232, line: 521, baseType: !5260, size: 64, offset: 6848)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1232, line: 521, flags: DIFlagFwdDecl)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1235, file: !1232, line: 545, baseType: !1060, size: 32, offset: 6912)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1235, file: !1232, line: 548, baseType: !1482, size: 8, offset: 6944)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1235, file: !1232, line: 550, baseType: !5265, offset: 6952)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !5266, line: 142, elements: !1018)
!5266 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1235, file: !1232, line: 554, baseType: !2278, size: 256, offset: 6976)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1235, file: !1232, line: 557, baseType: !1049, size: 32, offset: 7232)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1231, file: !1232, line: 565, baseType: !5270, offset: 7296)
!5270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, elements: !3464)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1040, file: !1041, line: 758, baseType: !1230, size: 64, offset: 3968)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1040, file: !1041, line: 761, baseType: !5273, size: 320, offset: 4032)
!5273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !5194, line: 34, size: 320, elements: !5274)
!5274 = !{!5275, !5276}
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !5273, file: !5194, line: 35, baseType: !976, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !5273, file: !5194, line: 36, baseType: !5277, size: 256, offset: 64)
!5277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1238, size: 256, elements: !2033)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1040, file: !1041, line: 766, baseType: !211, size: 32, offset: 4352)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1040, file: !1041, line: 767, baseType: !211, size: 32, offset: 4384)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1040, file: !1041, line: 768, baseType: !211, size: 32, offset: 4416)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1040, file: !1041, line: 770, baseType: !211, size: 32, offset: 4448)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1040, file: !1041, line: 772, baseType: !986, size: 64, offset: 4480)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1040, file: !1041, line: 775, baseType: !7, size: 32, offset: 4544)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1040, file: !1041, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1040, file: !1041, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1040, file: !1041, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1040, file: !1041, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1040, file: !1041, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1040, file: !1041, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1040, file: !1041, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1040, file: !1041, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1040, file: !1041, line: 831, baseType: !986, size: 64, offset: 4672)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1040, file: !1041, line: 833, baseType: !5294, size: 384, offset: 4736)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !71, line: 25, size: 384, elements: !5295)
!5295 = !{!5296, !5301}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5294, file: !71, line: 26, baseType: !5297, size: 64)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!944, !5300}
!5300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, scope: !5294, file: !71, line: 27, baseType: !5302, size: 320, offset: 64)
!5302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5294, file: !71, line: 27, size: 320, elements: !5303)
!5303 = !{!5304, !5314, !5339}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !5302, file: !71, line: 36, baseType: !5305, size: 320)
!5305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5302, file: !71, line: 29, size: 320, elements: !5306)
!5306 = !{!5307, !5309, !5310, !5311, !5312, !5313}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !5305, file: !71, line: 30, baseType: !5308, size: 64)
!5308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5305, file: !71, line: 31, baseType: !1049, size: 32, offset: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5305, file: !71, line: 32, baseType: !1049, size: 32, offset: 96)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !5305, file: !71, line: 33, baseType: !1049, size: 32, offset: 128)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5305, file: !71, line: 34, baseType: !976, size: 64, offset: 192)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !5305, file: !71, line: 35, baseType: !5308, size: 64, offset: 256)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !5302, file: !71, line: 46, baseType: !5315, size: 192)
!5315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5302, file: !71, line: 38, size: 192, elements: !5316)
!5316 = !{!5317, !5318, !5319, !5338}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !5315, file: !71, line: 39, baseType: !1172, size: 32)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5315, file: !71, line: 40, baseType: !70, size: 32, offset: 32)
!5319 = !DIDerivedType(tag: DW_TAG_member, scope: !5315, file: !71, line: 41, baseType: !5320, size: 64, offset: 64)
!5320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5315, file: !71, line: 41, size: 64, elements: !5321)
!5321 = !{!5322, !5330}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !5320, file: !71, line: 42, baseType: !5323, size: 64)
!5323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5324, size: 64)
!5324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !5325, line: 7, size: 128, elements: !5326)
!5325 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!5326 = !{!5327, !5329}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5324, file: !5325, line: 8, baseType: !5328, size: 64)
!5328 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1174, line: 93, baseType: !1034)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !5324, file: !5325, line: 9, baseType: !1034, size: 64, offset: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !5320, file: !71, line: 43, baseType: !5331, size: 64)
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !5333, line: 7, size: 64, elements: !5334)
!5333 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!5334 = !{!5335, !5337}
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5332, file: !5333, line: 8, baseType: !5336, size: 32)
!5336 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !5333, line: 5, baseType: !2089)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !5332, file: !5333, line: 9, baseType: !2089, size: 32, offset: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !5315, file: !71, line: 45, baseType: !976, size: 64, offset: 128)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5302, file: !71, line: 54, baseType: !5340, size: 256)
!5340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5302, file: !71, line: 48, size: 256, elements: !5341)
!5341 = !{!5342, !5345, !5346, !5347, !5348}
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !5340, file: !71, line: 49, baseType: !5343, size: 64)
!5343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5344, size: 64)
!5344 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !71, line: 14, flags: DIFlagFwdDecl)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !5340, file: !71, line: 50, baseType: !211, size: 32, offset: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !5340, file: !71, line: 51, baseType: !211, size: 32, offset: 96)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5340, file: !71, line: 52, baseType: !986, size: 64, offset: 128)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !5340, file: !71, line: 53, baseType: !986, size: 64, offset: 192)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1040, file: !1041, line: 835, baseType: !5350, size: 32, offset: 5120)
!5350 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !982, line: 22, baseType: !5351)
!5351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1174, line: 28, baseType: !211)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1040, file: !1041, line: 836, baseType: !5350, size: 32, offset: 5152)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1040, file: !1041, line: 840, baseType: !986, size: 64, offset: 5184)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1040, file: !1041, line: 849, baseType: !1039, size: 64, offset: 5248)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1040, file: !1041, line: 852, baseType: !1039, size: 64, offset: 5312)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1040, file: !1041, line: 857, baseType: !996, size: 128, offset: 5376)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1040, file: !1041, line: 858, baseType: !996, size: 128, offset: 5504)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1040, file: !1041, line: 859, baseType: !1039, size: 64, offset: 5632)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1040, file: !1041, line: 867, baseType: !996, size: 128, offset: 5696)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1040, file: !1041, line: 868, baseType: !996, size: 128, offset: 5824)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1040, file: !1041, line: 871, baseType: !2025, size: 64, offset: 5952)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1040, file: !1041, line: 872, baseType: !5363, size: 512, offset: 6016)
!5363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 512, elements: !2033)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1040, file: !1041, line: 873, baseType: !996, size: 128, offset: 6528)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1040, file: !1041, line: 874, baseType: !996, size: 128, offset: 6656)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1040, file: !1041, line: 876, baseType: !2337, size: 64, offset: 6784)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1040, file: !1041, line: 879, baseType: !1619, size: 64, offset: 6848)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1040, file: !1041, line: 882, baseType: !1619, size: 64, offset: 6912)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1040, file: !1041, line: 884, baseType: !976, size: 64, offset: 6976)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1040, file: !1041, line: 885, baseType: !976, size: 64, offset: 7040)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1040, file: !1041, line: 890, baseType: !976, size: 64, offset: 7104)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1040, file: !1041, line: 891, baseType: !5373, size: 128, offset: 7168)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1041, line: 242, size: 128, elements: !5374)
!5374 = !{!5375, !5376, !5377}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !5373, file: !1041, line: 244, baseType: !976, size: 64)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !5373, file: !1041, line: 245, baseType: !976, size: 64, offset: 64)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5373, file: !1041, line: 246, baseType: !1154, offset: 128)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1040, file: !1041, line: 900, baseType: !986, size: 64, offset: 7296)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1040, file: !1041, line: 901, baseType: !986, size: 64, offset: 7360)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1040, file: !1041, line: 904, baseType: !976, size: 64, offset: 7424)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1040, file: !1041, line: 907, baseType: !976, size: 64, offset: 7488)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1040, file: !1041, line: 910, baseType: !986, size: 64, offset: 7552)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1040, file: !1041, line: 911, baseType: !986, size: 64, offset: 7616)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1040, file: !1041, line: 914, baseType: !5385, size: 640, offset: 7680)
!5385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !5386, line: 123, size: 640, elements: !5387)
!5386 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!5387 = !{!5388, !5394, !5395}
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !5385, file: !5386, line: 124, baseType: !5389, size: 576)
!5389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5390, size: 576, elements: !1549)
!5390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !5386, line: 108, size: 192, elements: !5391)
!5391 = !{!5392, !5393}
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !5390, file: !5386, line: 109, baseType: !976, size: 64)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !5390, file: !5386, line: 110, baseType: !1187, size: 128, offset: 64)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !5385, file: !5386, line: 125, baseType: !7, size: 32, offset: 576)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !5385, file: !5386, line: 126, baseType: !7, size: 32, offset: 608)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1040, file: !1041, line: 917, baseType: !5397, size: 192, offset: 8320)
!5397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !5386, line: 134, size: 192, elements: !5398)
!5398 = !{!5399, !5400}
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5397, file: !5386, line: 135, baseType: !1678, size: 128, align: 64)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !5397, file: !5386, line: 136, baseType: !7, size: 32, offset: 128)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1040, file: !1041, line: 923, baseType: !2051, size: 64, offset: 8512)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1040, file: !1041, line: 926, baseType: !2051, size: 64, offset: 8576)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1040, file: !1041, line: 929, baseType: !2051, size: 64, offset: 8640)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1040, file: !1041, line: 933, baseType: !2081, size: 64, offset: 8704)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1040, file: !1041, line: 943, baseType: !5406, size: 128, offset: 8768)
!5406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 128, elements: !3407)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1040, file: !1041, line: 945, baseType: !5408, size: 64, offset: 8896)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1041, line: 49, flags: DIFlagFwdDecl)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1040, file: !1041, line: 956, baseType: !5411, size: 64, offset: 8960)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5412, size: 64)
!5412 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1041, line: 45, flags: DIFlagFwdDecl)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1040, file: !1041, line: 959, baseType: !5414, size: 64, offset: 9024)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1041, line: 959, flags: DIFlagFwdDecl)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1040, file: !1041, line: 962, baseType: !5417, size: 64, offset: 9088)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1041, line: 66, flags: DIFlagFwdDecl)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1040, file: !1041, line: 966, baseType: !5420, size: 64, offset: 9152)
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !5422, line: 31, size: 576, elements: !5423)
!5422 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!5423 = !{!5424, !5425, !5428, !5431, !5434, !5435, !5438, !5441, !5442}
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5421, file: !5422, line: 32, baseType: !1060, size: 32)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !5421, file: !5422, line: 33, baseType: !5426, size: 64, offset: 64)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !5422, line: 9, flags: DIFlagFwdDecl)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !5421, file: !5422, line: 34, baseType: !5429, size: 64, offset: 128)
!5429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5430, size: 64)
!5430 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !5422, line: 10, flags: DIFlagFwdDecl)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !5421, file: !5422, line: 35, baseType: !5432, size: 64, offset: 192)
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5433 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !5422, line: 8, flags: DIFlagFwdDecl)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !5421, file: !5422, line: 36, baseType: !2044, size: 64, offset: 256)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !5421, file: !5422, line: 37, baseType: !5436, size: 64, offset: 320)
!5436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5437, size: 64)
!5437 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2083, line: 34, flags: DIFlagFwdDecl)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !5421, file: !5422, line: 38, baseType: !5439, size: 64, offset: 384)
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5440, size: 64)
!5440 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !5422, line: 38, flags: DIFlagFwdDecl)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !5421, file: !5422, line: 39, baseType: !5439, size: 64, offset: 448)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !5421, file: !5422, line: 40, baseType: !5443, size: 64, offset: 512)
!5443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5444, size: 64)
!5444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !5445, line: 856, size: 448, elements: !5446)
!5445 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!5446 = !{!5447, !5448, !5449, !5450, !5451}
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5444, file: !5445, line: 857, baseType: !1055, size: 32)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5444, file: !5445, line: 858, baseType: !2264, size: 192, offset: 64)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !5444, file: !5445, line: 859, baseType: !2230, size: 64, offset: 256)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !5444, file: !5445, line: 860, baseType: !2382, size: 64, offset: 320)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !5444, file: !5445, line: 861, baseType: !5452, size: 64, offset: 384)
!5452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5453, size: 64)
!5453 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !5454, line: 16, flags: DIFlagFwdDecl)
!5454 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1040, file: !1041, line: 969, baseType: !5456, size: 64, offset: 9216)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !5458, line: 82, size: 7296, elements: !5459)
!5458 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!5459 = !{!5460, !5461, !5462, !5463, !5464, !5465, !5466, !5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5495, !5504, !5505, !5507, !5508, !5509, !5512, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5542, !5543, !5550, !5551, !5552, !5553, !5554, !5555}
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !5457, file: !5458, line: 83, baseType: !1055, size: 32)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !5457, file: !5458, line: 84, baseType: !1060, size: 32, offset: 32)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !5457, file: !5458, line: 85, baseType: !211, size: 32, offset: 64)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !5457, file: !5458, line: 86, baseType: !996, size: 128, offset: 128)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !5457, file: !5458, line: 88, baseType: !1873, size: 128, offset: 256)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !5457, file: !5458, line: 91, baseType: !1039, size: 64, offset: 384)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !5457, file: !5458, line: 94, baseType: !5467, size: 192, offset: 448)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !5468, line: 30, size: 192, elements: !5469)
!5468 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!5469 = !{!5470, !5471}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5467, file: !5468, line: 31, baseType: !996, size: 128)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !5467, file: !5468, line: 32, baseType: !5472, size: 64, offset: 128)
!5472 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !5473, line: 25, baseType: !5474)
!5473 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!5474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5473, line: 23, size: 64, elements: !5475)
!5475 = !{!5476}
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !5474, file: !5473, line: 24, baseType: !1222, size: 64)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !5457, file: !5458, line: 97, baseType: !1533, size: 64, offset: 640)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !5457, file: !5458, line: 100, baseType: !211, size: 32, offset: 704)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !5457, file: !5458, line: 106, baseType: !211, size: 32, offset: 736)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !5457, file: !5458, line: 107, baseType: !1039, size: 64, offset: 768)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !5457, file: !5458, line: 110, baseType: !211, size: 32, offset: 832)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5457, file: !5458, line: 111, baseType: !7, size: 32, offset: 864)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !5457, file: !5458, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !5457, file: !5458, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !5457, file: !5458, line: 128, baseType: !211, size: 32, offset: 928)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !5457, file: !5458, line: 129, baseType: !996, size: 128, offset: 960)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !5457, file: !5458, line: 132, baseType: !1129, size: 512, offset: 1088)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !5457, file: !5458, line: 133, baseType: !1137, size: 64, offset: 1600)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !5457, file: !5458, line: 140, baseType: !5490, size: 256, offset: 1664)
!5490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5491, size: 256, elements: !2073)
!5491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !5458, line: 38, size: 128, elements: !5492)
!5492 = !{!5493, !5494}
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !5491, file: !5458, line: 39, baseType: !976, size: 64)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !5491, file: !5458, line: 40, baseType: !976, size: 64, offset: 64)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !5457, file: !5458, line: 146, baseType: !5496, size: 192, offset: 1920)
!5496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !5458, line: 66, size: 192, elements: !5497)
!5497 = !{!5498}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !5496, file: !5458, line: 67, baseType: !5499, size: 192)
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !5458, line: 47, size: 192, elements: !5500)
!5500 = !{!5501, !5502, !5503}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !5499, file: !5458, line: 48, baseType: !1028, size: 64)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !5499, file: !5458, line: 49, baseType: !1028, size: 64, offset: 64)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !5499, file: !5458, line: 50, baseType: !1028, size: 64, offset: 128)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !5457, file: !5458, line: 150, baseType: !5385, size: 640, offset: 2112)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !5457, file: !5458, line: 153, baseType: !5506, size: 256, offset: 2752)
!5506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 256, elements: !2033)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !5457, file: !5458, line: 159, baseType: !2025, size: 64, offset: 3008)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !5457, file: !5458, line: 162, baseType: !211, size: 32, offset: 3072)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !5457, file: !5458, line: 164, baseType: !5510, size: 64, offset: 3136)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5511 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !5458, line: 164, flags: DIFlagFwdDecl)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !5457, file: !5458, line: 175, baseType: !5513, size: 32, offset: 3200)
!5513 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1177, line: 805, baseType: !5514)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1177, line: 798, size: 32, elements: !5515)
!5515 = !{!5516, !5517}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !5514, file: !1177, line: 803, baseType: !1371, size: 32)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5514, file: !1177, line: 804, baseType: !1004, offset: 32)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !5457, file: !5458, line: 176, baseType: !976, size: 64, offset: 3264)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !5457, file: !5458, line: 176, baseType: !976, size: 64, offset: 3328)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !5457, file: !5458, line: 176, baseType: !976, size: 64, offset: 3392)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !5457, file: !5458, line: 176, baseType: !976, size: 64, offset: 3456)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !5457, file: !5458, line: 177, baseType: !976, size: 64, offset: 3520)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !5457, file: !5458, line: 178, baseType: !976, size: 64, offset: 3584)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !5457, file: !5458, line: 179, baseType: !5373, size: 128, offset: 3648)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !5457, file: !5458, line: 180, baseType: !986, size: 64, offset: 3776)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !5457, file: !5458, line: 180, baseType: !986, size: 64, offset: 3840)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !5457, file: !5458, line: 180, baseType: !986, size: 64, offset: 3904)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !5457, file: !5458, line: 180, baseType: !986, size: 64, offset: 3968)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !5457, file: !5458, line: 181, baseType: !986, size: 64, offset: 4032)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !5457, file: !5458, line: 181, baseType: !986, size: 64, offset: 4096)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !5457, file: !5458, line: 181, baseType: !986, size: 64, offset: 4160)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !5457, file: !5458, line: 181, baseType: !986, size: 64, offset: 4224)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !5457, file: !5458, line: 182, baseType: !986, size: 64, offset: 4288)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !5457, file: !5458, line: 182, baseType: !986, size: 64, offset: 4352)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !5457, file: !5458, line: 182, baseType: !986, size: 64, offset: 4416)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !5457, file: !5458, line: 182, baseType: !986, size: 64, offset: 4480)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !5457, file: !5458, line: 183, baseType: !986, size: 64, offset: 4544)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !5457, file: !5458, line: 183, baseType: !986, size: 64, offset: 4608)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !5457, file: !5458, line: 184, baseType: !5540, offset: 4672)
!5540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !5541, line: 12, elements: !1018)
!5541 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !5457, file: !5458, line: 192, baseType: !980, size: 64, offset: 4672)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !5457, file: !5458, line: 203, baseType: !5544, size: 2048, offset: 4736)
!5544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5545, size: 2048, elements: !3407)
!5545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !5546, line: 43, size: 128, elements: !5547)
!5546 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!5547 = !{!5548, !5549}
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !5545, file: !5546, line: 44, baseType: !1633, size: 64)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !5545, file: !5546, line: 45, baseType: !1633, size: 64, offset: 64)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !5457, file: !5458, line: 220, baseType: !1482, size: 8, offset: 6784)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !5457, file: !5458, line: 221, baseType: !2124, size: 16, offset: 6800)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !5457, file: !5458, line: 222, baseType: !2124, size: 16, offset: 6816)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !5457, file: !5458, line: 224, baseType: !1230, size: 64, offset: 6848)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !5457, file: !5458, line: 227, baseType: !1022, size: 192, offset: 6912)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !5457, file: !5458, line: 233, baseType: !1022, size: 192, offset: 7104)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1040, file: !1041, line: 970, baseType: !5557, size: 64, offset: 9280)
!5557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5558, size: 64)
!5558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !5458, line: 20, size: 16576, elements: !5559)
!5559 = !{!5560, !5561, !5562, !5563}
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !5558, file: !5458, line: 21, baseType: !1004)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5558, file: !5458, line: 22, baseType: !1055, size: 32)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !5558, file: !5458, line: 23, baseType: !1873, size: 128, offset: 64)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5558, file: !5458, line: 24, baseType: !5564, size: 16384, offset: 192)
!5564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5565, size: 16384, elements: !2732)
!5565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !5468, line: 49, size: 256, elements: !5566)
!5566 = !{!5567}
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !5565, file: !5468, line: 50, baseType: !5568, size: 256)
!5568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !5468, line: 35, size: 256, elements: !5569)
!5569 = !{!5570, !5577, !5578, !5584}
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !5568, file: !5468, line: 37, baseType: !5571, size: 64)
!5571 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !5572, line: 19, baseType: !5573)
!5572 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!5573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!5574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !5572, line: 18, baseType: !5575)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{null, !211}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !5568, file: !5468, line: 38, baseType: !986, size: 64, offset: 64)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !5568, file: !5468, line: 44, baseType: !5579, size: 64, offset: 128)
!5579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !5572, line: 22, baseType: !5580)
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5581, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !5572, line: 21, baseType: !5582)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{null}
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !5568, file: !5468, line: 46, baseType: !5472, size: 64, offset: 192)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1040, file: !1041, line: 971, baseType: !5472, size: 64, offset: 9344)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1040, file: !1041, line: 972, baseType: !5472, size: 64, offset: 9408)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1040, file: !1041, line: 974, baseType: !5472, size: 64, offset: 9472)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1040, file: !1041, line: 975, baseType: !5467, size: 192, offset: 9536)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1040, file: !1041, line: 976, baseType: !986, size: 64, offset: 9728)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1040, file: !1041, line: 977, baseType: !1631, size: 64, offset: 9792)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1040, file: !1041, line: 978, baseType: !7, size: 32, offset: 9856)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1040, file: !1041, line: 980, baseType: !1681, size: 64, offset: 9920)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1040, file: !1041, line: 989, baseType: !5594, size: 128, offset: 9984)
!5594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !5595, line: 35, size: 128, elements: !5596)
!5595 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!5596 = !{!5597, !5598, !5599}
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5594, file: !5595, line: 36, baseType: !211, size: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !5594, file: !5595, line: 37, baseType: !1060, size: 32, offset: 32)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5594, file: !5595, line: 38, baseType: !5600, size: 64, offset: 64)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 64)
!5601 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !5595, line: 23, flags: DIFlagFwdDecl)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1040, file: !1041, line: 992, baseType: !976, size: 64, offset: 10112)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1040, file: !1041, line: 993, baseType: !976, size: 64, offset: 10176)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1040, file: !1041, line: 996, baseType: !1004, offset: 10240)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1040, file: !1041, line: 999, baseType: !1154, offset: 10240)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1040, file: !1041, line: 1001, baseType: !5607, size: 64, offset: 10240)
!5607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1041, line: 636, size: 64, elements: !5608)
!5608 = !{!5609}
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5607, file: !1041, line: 637, baseType: !5610, size: 64)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1040, file: !1041, line: 1005, baseType: !1190, size: 128, offset: 10304)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1040, file: !1041, line: 1007, baseType: !1039, size: 64, offset: 10432)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1040, file: !1041, line: 1009, baseType: !5614, size: 64, offset: 10496)
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 64)
!5615 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1041, line: 1009, flags: DIFlagFwdDecl)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1040, file: !1041, line: 1043, baseType: !983, size: 64, offset: 10560)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1040, file: !1041, line: 1046, baseType: !5618, size: 64, offset: 10624)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1040, file: !1041, line: 1050, baseType: !5620, size: 64, offset: 10688)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !19, line: 1236, size: 320, elements: !5622)
!5622 = !{!5623, !5624, !5625, !5626, !5627}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5621, file: !19, line: 1237, baseType: !996, size: 128)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5621, file: !19, line: 1238, baseType: !996, size: 128, offset: 128)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5621, file: !19, line: 1239, baseType: !1108, size: 16, offset: 256)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5621, file: !19, line: 1240, baseType: !1482, size: 8, offset: 272)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5621, file: !19, line: 1241, baseType: !1482, size: 8, offset: 280)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1040, file: !1041, line: 1054, baseType: !5629, size: 64, offset: 10752)
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5630, size: 64)
!5630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !4929, line: 131, size: 64, elements: !5631)
!5631 = !{!5632}
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !5630, file: !4929, line: 132, baseType: !986, size: 64)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1040, file: !1041, line: 1056, baseType: !4213, size: 64, offset: 10816)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1040, file: !1041, line: 1058, baseType: !3900, size: 64, offset: 10880)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1040, file: !1041, line: 1061, baseType: !5636, size: 64, offset: 10944)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64)
!5637 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1041, line: 43, flags: DIFlagFwdDecl)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1040, file: !1041, line: 1064, baseType: !986, size: 64, offset: 11008)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1040, file: !1041, line: 1065, baseType: !5640, size: 64, offset: 11072)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !5468, line: 14, baseType: !5642)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !5468, line: 12, size: 384, elements: !5643)
!5643 = !{!5644}
!5644 = !DIDerivedType(tag: DW_TAG_member, scope: !5642, file: !5468, line: 13, baseType: !5645, size: 384)
!5645 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5642, file: !5468, line: 13, size: 384, elements: !5646)
!5646 = !{!5647, !5648, !5649, !5650}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5645, file: !5468, line: 13, baseType: !211, size: 32)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5645, file: !5468, line: 13, baseType: !211, size: 32, offset: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5645, file: !5468, line: 13, baseType: !211, size: 32, offset: 64)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5645, file: !5468, line: 13, baseType: !5651, size: 256, offset: 128)
!5651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5652, line: 32, size: 256, elements: !5653)
!5652 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5653 = !{!5654, !5659, !5672, !5678, !5687, !5707, !5712}
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5651, file: !5652, line: 37, baseType: !5655, size: 64)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5652, line: 34, size: 64, elements: !5656)
!5656 = !{!5657, !5658}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5655, file: !5652, line: 35, baseType: !5351, size: 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5655, file: !5652, line: 36, baseType: !1347, size: 32, offset: 32)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5651, file: !5652, line: 45, baseType: !5660, size: 192)
!5660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5652, line: 40, size: 192, elements: !5661)
!5661 = !{!5662, !5664, !5665, !5671}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5660, file: !5652, line: 41, baseType: !5663, size: 32)
!5663 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1174, line: 95, baseType: !211)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5660, file: !5652, line: 42, baseType: !211, size: 32, offset: 32)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5660, file: !5652, line: 43, baseType: !5666, size: 64, offset: 64)
!5666 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5652, line: 11, baseType: !5667)
!5667 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5652, line: 8, size: 64, elements: !5668)
!5668 = !{!5669, !5670}
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5667, file: !5652, line: 9, baseType: !211, size: 32)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5667, file: !5652, line: 10, baseType: !983, size: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5660, file: !5652, line: 44, baseType: !211, size: 32, offset: 128)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5651, file: !5652, line: 52, baseType: !5673, size: 128)
!5673 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5652, line: 48, size: 128, elements: !5674)
!5674 = !{!5675, !5676, !5677}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5673, file: !5652, line: 49, baseType: !5351, size: 32)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5673, file: !5652, line: 50, baseType: !1347, size: 32, offset: 32)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5673, file: !5652, line: 51, baseType: !5666, size: 64, offset: 64)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5651, file: !5652, line: 61, baseType: !5679, size: 256)
!5679 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5652, line: 55, size: 256, elements: !5680)
!5680 = !{!5681, !5682, !5683, !5684, !5686}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5679, file: !5652, line: 56, baseType: !5351, size: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5679, file: !5652, line: 57, baseType: !1347, size: 32, offset: 32)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5679, file: !5652, line: 58, baseType: !211, size: 32, offset: 64)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5679, file: !5652, line: 59, baseType: !5685, size: 64, offset: 128)
!5685 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1174, line: 94, baseType: !1705)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5679, file: !5652, line: 60, baseType: !5685, size: 64, offset: 192)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5651, file: !5652, line: 95, baseType: !5688, size: 256)
!5688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5652, line: 64, size: 256, elements: !5689)
!5689 = !{!5690, !5691}
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5688, file: !5652, line: 65, baseType: !983, size: 64)
!5691 = !DIDerivedType(tag: DW_TAG_member, scope: !5688, file: !5652, line: 77, baseType: !5692, size: 192, offset: 64)
!5692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5688, file: !5652, line: 77, size: 192, elements: !5693)
!5693 = !{!5694, !5695, !5702}
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5692, file: !5652, line: 82, baseType: !2124, size: 16)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5692, file: !5652, line: 88, baseType: !5696, size: 192)
!5696 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5692, file: !5652, line: 84, size: 192, elements: !5697)
!5697 = !{!5698, !5700, !5701}
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5696, file: !5652, line: 85, baseType: !5699, size: 64)
!5699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 64, elements: !1168)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5696, file: !5652, line: 86, baseType: !983, size: 64, offset: 64)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5696, file: !5652, line: 87, baseType: !983, size: 64, offset: 128)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5692, file: !5652, line: 93, baseType: !5703, size: 96)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5692, file: !5652, line: 90, size: 96, elements: !5704)
!5704 = !{!5705, !5706}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5703, file: !5652, line: 91, baseType: !5699, size: 64)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5703, file: !5652, line: 92, baseType: !1050, size: 32, offset: 64)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5651, file: !5652, line: 101, baseType: !5708, size: 128)
!5708 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5652, line: 98, size: 128, elements: !5709)
!5709 = !{!5710, !5711}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5708, file: !5652, line: 99, baseType: !944, size: 64)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5708, file: !5652, line: 100, baseType: !211, size: 32, offset: 64)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5651, file: !5652, line: 108, baseType: !5713, size: 128)
!5713 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5652, line: 104, size: 128, elements: !5714)
!5714 = !{!5715, !5716, !5717}
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5713, file: !5652, line: 105, baseType: !983, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5713, file: !5652, line: 106, baseType: !211, size: 32, offset: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5713, file: !5652, line: 107, baseType: !7, size: 32, offset: 96)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1040, file: !1041, line: 1067, baseType: !5540, offset: 11136)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1040, file: !1041, line: 1099, baseType: !5720, size: 64, offset: 11136)
!5720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 64)
!5721 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1041, line: 56, flags: DIFlagFwdDecl)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1040, file: !1041, line: 1103, baseType: !996, size: 128, offset: 11200)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1040, file: !1041, line: 1104, baseType: !5724, size: 64, offset: 11328)
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1041, line: 46, flags: DIFlagFwdDecl)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1040, file: !1041, line: 1105, baseType: !1022, size: 192, offset: 11392)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1040, file: !1041, line: 1106, baseType: !7, size: 32, offset: 11584)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1040, file: !1041, line: 1109, baseType: !5729, size: 128, offset: 11648)
!5729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5730, size: 128, elements: !2073)
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5731, size: 64)
!5731 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1041, line: 51, flags: DIFlagFwdDecl)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1040, file: !1041, line: 1110, baseType: !1022, size: 192, offset: 11776)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1040, file: !1041, line: 1111, baseType: !996, size: 128, offset: 11968)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1040, file: !1041, line: 1173, baseType: !5735, size: 64, offset: 12096)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5737, line: 62, size: 256, align: 256, elements: !5738)
!5737 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5738 = !{!5739, !5740, !5741, !5746}
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5736, file: !5737, line: 75, baseType: !1050, size: 32)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5736, file: !5737, line: 90, baseType: !1050, size: 32, offset: 32)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5736, file: !5737, line: 124, baseType: !5742, size: 64, offset: 64)
!5742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5736, file: !5737, line: 109, size: 64, elements: !5743)
!5743 = !{!5744, !5745}
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5742, file: !5737, line: 110, baseType: !978, size: 64)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5742, file: !5737, line: 112, baseType: !978, size: 64)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5736, file: !5737, line: 144, baseType: !1050, size: 32, offset: 128)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1040, file: !1041, line: 1174, baseType: !1049, size: 32, offset: 12160)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1040, file: !1041, line: 1179, baseType: !986, size: 64, offset: 12224)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1040, file: !1041, line: 1182, baseType: !5750, size: 128, offset: 12288)
!5750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !5194, line: 76, size: 128, elements: !5751)
!5751 = !{!5752, !5757, !5758}
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5750, file: !5194, line: 85, baseType: !5753, size: 64)
!5753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5754, line: 7, size: 64, elements: !5755)
!5754 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5755 = !{!5756}
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5753, file: !5754, line: 12, baseType: !1219, size: 64)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5750, file: !5194, line: 88, baseType: !1482, size: 8, offset: 64)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5750, file: !5194, line: 95, baseType: !1482, size: 8, offset: 72)
!5759 = !DIDerivedType(tag: DW_TAG_member, scope: !1040, file: !1041, line: 1184, baseType: !5760, size: 128, offset: 12416)
!5760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1040, file: !1041, line: 1184, size: 128, elements: !5761)
!5761 = !{!5762, !5763}
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5760, file: !1041, line: 1185, baseType: !1055, size: 32)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5760, file: !1041, line: 1186, baseType: !1678, size: 128, align: 64)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1040, file: !1041, line: 1190, baseType: !1789, size: 64, offset: 12544)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1040, file: !1041, line: 1192, baseType: !5766, size: 128, offset: 12608)
!5766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !5194, line: 64, size: 128, elements: !5767)
!5767 = !{!5768, !5769, !5770}
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5766, file: !5194, line: 65, baseType: !1318, size: 64)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5766, file: !5194, line: 67, baseType: !1050, size: 32, offset: 64)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5766, file: !5194, line: 68, baseType: !1050, size: 32, offset: 96)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1040, file: !1041, line: 1206, baseType: !211, size: 32, offset: 12736)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1040, file: !1041, line: 1207, baseType: !211, size: 32, offset: 12768)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1040, file: !1041, line: 1209, baseType: !986, size: 64, offset: 12800)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1040, file: !1041, line: 1219, baseType: !976, size: 64, offset: 12864)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1040, file: !1041, line: 1220, baseType: !976, size: 64, offset: 12928)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1040, file: !1041, line: 1317, baseType: !211, size: 32, offset: 12992)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1040, file: !1041, line: 1319, baseType: !1039, size: 64, offset: 13056)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1040, file: !1041, line: 1322, baseType: !5779, size: 64, offset: 13120)
!5779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5780, size: 64)
!5780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5781, line: 56, size: 512, elements: !5782)
!5781 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5782 = !{!5783, !5784, !5785, !5786, !5787, !5788, !5789, !5791}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5780, file: !5781, line: 57, baseType: !5779, size: 64)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5780, file: !5781, line: 58, baseType: !983, size: 64, offset: 64)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5780, file: !5781, line: 59, baseType: !986, size: 64, offset: 128)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5780, file: !5781, line: 60, baseType: !986, size: 64, offset: 192)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5780, file: !5781, line: 61, baseType: !4876, size: 64, offset: 256)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5780, file: !5781, line: 62, baseType: !7, size: 32, offset: 320)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5780, file: !5781, line: 63, baseType: !5790, size: 64, offset: 384)
!5790 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !982, line: 153, baseType: !976)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5780, file: !5781, line: 64, baseType: !2823, size: 64, offset: 448)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1040, file: !1041, line: 1326, baseType: !1055, size: 32, offset: 13184)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1040, file: !1041, line: 1342, baseType: !983, size: 64, offset: 13248)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1040, file: !1041, line: 1343, baseType: !978, size: 64, offset: 13312)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1040, file: !1041, line: 1344, baseType: !976, size: 64, offset: 13376)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1040, file: !1041, line: 1345, baseType: !978, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1040, file: !1041, line: 1346, baseType: !978, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1040, file: !1041, line: 1347, baseType: !978, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1040, file: !1041, line: 1348, baseType: !1678, size: 128, align: 64, offset: 13504)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1040, file: !1041, line: 1358, baseType: !5801, size: 34816, offset: 13824)
!5801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5802, line: 485, size: 34816, elements: !5803)
!5802 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5803 = !{!5804, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5833, !5834, !5835, !5836, !5837, !5838, !5841, !5842, !5843}
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5801, file: !5802, line: 487, baseType: !5805, size: 192)
!5805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5806, size: 192, elements: !1549)
!5806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5807, line: 16, size: 64, elements: !5808)
!5807 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5808 = !{!5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819, !5820, !5821}
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5806, file: !5807, line: 17, baseType: !1726, size: 16)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5806, file: !5807, line: 18, baseType: !1726, size: 16, offset: 16)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5806, file: !5807, line: 19, baseType: !1726, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5806, file: !5807, line: 19, baseType: !1726, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5806, file: !5807, line: 19, baseType: !1726, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5806, file: !5807, line: 19, baseType: !1726, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5806, file: !5807, line: 19, baseType: !1726, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5806, file: !5807, line: 20, baseType: !1726, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5806, file: !5807, line: 20, baseType: !1726, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5806, file: !5807, line: 20, baseType: !1726, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5806, file: !5807, line: 20, baseType: !1726, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5806, file: !5807, line: 20, baseType: !1726, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5806, file: !5807, line: 20, baseType: !1726, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5801, file: !5802, line: 491, baseType: !986, size: 64, offset: 192)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5801, file: !5802, line: 495, baseType: !1108, size: 16, offset: 256)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5801, file: !5802, line: 496, baseType: !1108, size: 16, offset: 272)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5801, file: !5802, line: 497, baseType: !1108, size: 16, offset: 288)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5801, file: !5802, line: 498, baseType: !1108, size: 16, offset: 304)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5801, file: !5802, line: 502, baseType: !986, size: 64, offset: 320)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5801, file: !5802, line: 503, baseType: !986, size: 64, offset: 384)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5801, file: !5802, line: 514, baseType: !5830, size: 256, offset: 448)
!5830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5831, size: 256, elements: !2033)
!5831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 64)
!5832 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5802, line: 483, flags: DIFlagFwdDecl)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5801, file: !5802, line: 516, baseType: !986, size: 64, offset: 704)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5801, file: !5802, line: 518, baseType: !986, size: 64, offset: 768)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5801, file: !5802, line: 520, baseType: !986, size: 64, offset: 832)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5801, file: !5802, line: 521, baseType: !986, size: 64, offset: 896)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5801, file: !5802, line: 522, baseType: !986, size: 64, offset: 960)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5801, file: !5802, line: 528, baseType: !5839, size: 64, offset: 1024)
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 64)
!5840 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5802, line: 10, flags: DIFlagFwdDecl)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5801, file: !5802, line: 535, baseType: !986, size: 64, offset: 1088)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5801, file: !5802, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5801, file: !5802, line: 540, baseType: !5844, size: 33280, offset: 1536)
!5844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5845, line: 317, size: 33280, elements: !5846)
!5845 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5846 = !{!5847, !5848, !5849}
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5844, file: !5845, line: 330, baseType: !7, size: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5844, file: !5845, line: 337, baseType: !986, size: 64, offset: 64)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5844, file: !5845, line: 348, baseType: !5850, size: 32768, offset: 512)
!5850 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5845, line: 304, size: 32768, elements: !5851)
!5851 = !{!5852, !5867, !5904, !5954, !5967}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5850, file: !5845, line: 305, baseType: !5853, size: 896)
!5853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5845, line: 12, size: 896, elements: !5854)
!5854 = !{!5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5866}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5853, file: !5845, line: 13, baseType: !1049, size: 32)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5853, file: !5845, line: 14, baseType: !1049, size: 32, offset: 32)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5853, file: !5845, line: 15, baseType: !1049, size: 32, offset: 64)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5853, file: !5845, line: 16, baseType: !1049, size: 32, offset: 96)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5853, file: !5845, line: 17, baseType: !1049, size: 32, offset: 128)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5853, file: !5845, line: 18, baseType: !1049, size: 32, offset: 160)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5853, file: !5845, line: 19, baseType: !1049, size: 32, offset: 192)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5853, file: !5845, line: 22, baseType: !5863, size: 640, offset: 224)
!5863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 640, elements: !5864)
!5864 = !{!5865}
!5865 = !DISubrange(count: 20)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5853, file: !5845, line: 25, baseType: !1049, size: 32, offset: 864)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5850, file: !5845, line: 306, baseType: !5868, size: 4096, align: 128)
!5868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5845, line: 34, size: 4096, align: 128, elements: !5869)
!5869 = !{!5870, !5871, !5872, !5873, !5874, !5889, !5890, !5891, !5893, !5895, !5899}
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5868, file: !5845, line: 35, baseType: !1726, size: 16)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5868, file: !5845, line: 36, baseType: !1726, size: 16, offset: 16)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5868, file: !5845, line: 37, baseType: !1726, size: 16, offset: 32)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5868, file: !5845, line: 38, baseType: !1726, size: 16, offset: 48)
!5874 = !DIDerivedType(tag: DW_TAG_member, scope: !5868, file: !5845, line: 39, baseType: !5875, size: 128, offset: 64)
!5875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5868, file: !5845, line: 39, size: 128, elements: !5876)
!5876 = !{!5877, !5882}
!5877 = !DIDerivedType(tag: DW_TAG_member, scope: !5875, file: !5845, line: 40, baseType: !5878, size: 128)
!5878 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5875, file: !5845, line: 40, size: 128, elements: !5879)
!5879 = !{!5880, !5881}
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5878, file: !5845, line: 41, baseType: !976, size: 64)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5878, file: !5845, line: 42, baseType: !976, size: 64, offset: 64)
!5882 = !DIDerivedType(tag: DW_TAG_member, scope: !5875, file: !5845, line: 44, baseType: !5883, size: 128)
!5883 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5875, file: !5845, line: 44, size: 128, elements: !5884)
!5884 = !{!5885, !5886, !5887, !5888}
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5883, file: !5845, line: 45, baseType: !1049, size: 32)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5883, file: !5845, line: 46, baseType: !1049, size: 32, offset: 32)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5883, file: !5845, line: 47, baseType: !1049, size: 32, offset: 64)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5883, file: !5845, line: 48, baseType: !1049, size: 32, offset: 96)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5868, file: !5845, line: 51, baseType: !1049, size: 32, offset: 192)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5868, file: !5845, line: 52, baseType: !1049, size: 32, offset: 224)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5868, file: !5845, line: 55, baseType: !5892, size: 1024, offset: 256)
!5892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 1024, elements: !1402)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5868, file: !5845, line: 58, baseType: !5894, size: 2048, offset: 1280)
!5894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 2048, elements: !2732)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5868, file: !5845, line: 60, baseType: !5896, size: 384, offset: 3328)
!5896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 384, elements: !5897)
!5897 = !{!5898}
!5898 = !DISubrange(count: 12)
!5899 = !DIDerivedType(tag: DW_TAG_member, scope: !5868, file: !5845, line: 62, baseType: !5900, size: 384, offset: 3712)
!5900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5868, file: !5845, line: 62, size: 384, elements: !5901)
!5901 = !{!5902, !5903}
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5900, file: !5845, line: 63, baseType: !5896, size: 384)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5900, file: !5845, line: 64, baseType: !5896, size: 384)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5850, file: !5845, line: 307, baseType: !5905, size: 1088)
!5905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5845, line: 79, size: 1088, elements: !5906)
!5906 = !{!5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5919, !5920, !5921, !5953}
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5905, file: !5845, line: 80, baseType: !1049, size: 32)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5905, file: !5845, line: 81, baseType: !1049, size: 32, offset: 32)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5905, file: !5845, line: 82, baseType: !1049, size: 32, offset: 64)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5905, file: !5845, line: 83, baseType: !1049, size: 32, offset: 96)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5905, file: !5845, line: 84, baseType: !1049, size: 32, offset: 128)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5905, file: !5845, line: 85, baseType: !1049, size: 32, offset: 160)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5905, file: !5845, line: 86, baseType: !1049, size: 32, offset: 192)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5905, file: !5845, line: 88, baseType: !5863, size: 640, offset: 224)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5905, file: !5845, line: 89, baseType: !1203, size: 8, offset: 864)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5905, file: !5845, line: 90, baseType: !1203, size: 8, offset: 872)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5905, file: !5845, line: 91, baseType: !1203, size: 8, offset: 880)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5905, file: !5845, line: 92, baseType: !1203, size: 8, offset: 888)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5905, file: !5845, line: 93, baseType: !1203, size: 8, offset: 896)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5905, file: !5845, line: 94, baseType: !1203, size: 8, offset: 904)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5905, file: !5845, line: 95, baseType: !5922, size: 64, offset: 960)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5924, line: 11, size: 128, elements: !5925)
!5924 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5925 = !{!5926, !5927}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5923, file: !5924, line: 12, baseType: !944, size: 64)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5923, file: !5924, line: 13, baseType: !5928, size: 64, offset: 64)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 64)
!5929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5930, line: 56, size: 1344, elements: !5931)
!5930 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5931 = !{!5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952}
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5929, file: !5930, line: 61, baseType: !986, size: 64)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5929, file: !5930, line: 62, baseType: !986, size: 64, offset: 64)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5929, file: !5930, line: 63, baseType: !986, size: 64, offset: 128)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5929, file: !5930, line: 64, baseType: !986, size: 64, offset: 192)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5929, file: !5930, line: 65, baseType: !986, size: 64, offset: 256)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5929, file: !5930, line: 66, baseType: !986, size: 64, offset: 320)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5929, file: !5930, line: 68, baseType: !986, size: 64, offset: 384)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5929, file: !5930, line: 69, baseType: !986, size: 64, offset: 448)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5929, file: !5930, line: 70, baseType: !986, size: 64, offset: 512)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5929, file: !5930, line: 71, baseType: !986, size: 64, offset: 576)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5929, file: !5930, line: 72, baseType: !986, size: 64, offset: 640)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5929, file: !5930, line: 73, baseType: !986, size: 64, offset: 704)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5929, file: !5930, line: 74, baseType: !986, size: 64, offset: 768)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5929, file: !5930, line: 75, baseType: !986, size: 64, offset: 832)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5929, file: !5930, line: 76, baseType: !986, size: 64, offset: 896)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5929, file: !5930, line: 81, baseType: !986, size: 64, offset: 960)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5929, file: !5930, line: 83, baseType: !986, size: 64, offset: 1024)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5929, file: !5930, line: 84, baseType: !986, size: 64, offset: 1088)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5929, file: !5930, line: 85, baseType: !986, size: 64, offset: 1152)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5929, file: !5930, line: 86, baseType: !986, size: 64, offset: 1216)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5929, file: !5930, line: 87, baseType: !986, size: 64, offset: 1280)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5905, file: !5845, line: 96, baseType: !1049, size: 32, offset: 1024)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5850, file: !5845, line: 308, baseType: !5955, size: 4608, align: 512)
!5955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5845, line: 289, size: 4608, align: 512, elements: !5956)
!5956 = !{!5957, !5958, !5965}
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5955, file: !5845, line: 290, baseType: !5868, size: 4096, align: 128)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5955, file: !5845, line: 291, baseType: !5959, size: 512, offset: 4096)
!5959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5845, line: 268, size: 512, elements: !5960)
!5960 = !{!5961, !5962, !5963}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5959, file: !5845, line: 269, baseType: !976, size: 64)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5959, file: !5845, line: 270, baseType: !976, size: 64, offset: 64)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5959, file: !5845, line: 271, baseType: !5964, size: 384, offset: 128)
!5964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 384, elements: !2142)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5955, file: !5845, line: 292, baseType: !5966, offset: 4608)
!5966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, elements: !2403)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5850, file: !5845, line: 309, baseType: !5968, size: 32768)
!5968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 32768, elements: !5969)
!5969 = !{!5970}
!5970 = !DISubrange(count: 4096)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !993, file: !173, line: 545, baseType: !2337, size: 64, offset: 832)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !993, file: !173, line: 547, baseType: !1873, size: 128, offset: 896)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !993, file: !173, line: 548, baseType: !5974, size: 64, offset: 1024)
!5974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5975, size: 64)
!5975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !173, line: 32, size: 2880, elements: !5976)
!5976 = !{!5977, !5978, !5979, !5983, !6135, !6219, !6220, !6221, !6225, !6229, !6230, !6231, !6232, !6233, !6237, !6238, !6242, !6246, !6250, !6254, !6258, !6262, !6266, !6270, !6274, !6275, !6279, !6283, !6287, !6291, !6292, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6328, !6329, !6330, !6331, !6332, !6335}
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5975, file: !173, line: 33, baseType: !1528, size: 64)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5975, file: !173, line: 34, baseType: !1437, size: 64, offset: 64)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5975, file: !173, line: 43, baseType: !5980, size: 64, offset: 128)
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{!1437, !992}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5975, file: !173, line: 50, baseType: !5984, size: 64, offset: 192)
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!211, !5987, !7, !983}
!5987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5988, size: 64)
!5988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !147, line: 101, size: 15232, align: 64, elements: !5989)
!5989 = !{!5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998, !5999, !6000, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6029, !6030, !6031, !6032, !6033, !6057, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110, !6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6123, !6124, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5988, file: !147, line: 102, baseType: !992, size: 64)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !5988, file: !147, line: 103, baseType: !3764, size: 64, offset: 64)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5988, file: !147, line: 106, baseType: !996, size: 128, offset: 128)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !5988, file: !147, line: 107, baseType: !996, size: 128, offset: 256)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !5988, file: !147, line: 109, baseType: !1060, size: 32, offset: 384)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !5988, file: !147, line: 110, baseType: !1060, size: 32, offset: 416)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !5988, file: !147, line: 112, baseType: !1060, size: 32, offset: 448)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5988, file: !147, line: 113, baseType: !1004, offset: 480)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !5988, file: !147, line: 114, baseType: !996, size: 128, offset: 512)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5988, file: !147, line: 115, baseType: !1108, size: 16, offset: 640)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !5988, file: !147, line: 116, baseType: !1108, size: 16, offset: 656)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !5988, file: !147, line: 117, baseType: !1108, size: 16, offset: 672)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !5988, file: !147, line: 118, baseType: !1108, size: 16, offset: 688)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !5988, file: !147, line: 119, baseType: !986, size: 64, offset: 704)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !5988, file: !147, line: 120, baseType: !986, size: 64, offset: 768)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !5988, file: !147, line: 123, baseType: !986, size: 64, offset: 832)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5988, file: !147, line: 125, baseType: !7, size: 32, offset: 896)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5988, file: !147, line: 125, baseType: !7, size: 32, offset: 928)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !5988, file: !147, line: 126, baseType: !976, size: 64, offset: 960)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5988, file: !147, line: 127, baseType: !7, size: 32, offset: 1024)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !5988, file: !147, line: 129, baseType: !7, size: 32, offset: 1056)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5988, file: !147, line: 131, baseType: !983, size: 64, offset: 1088)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5988, file: !147, line: 132, baseType: !1205, size: 8, offset: 1152)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5988, file: !147, line: 133, baseType: !1439, size: 8, offset: 1160)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !5988, file: !147, line: 134, baseType: !1439, size: 8, offset: 1168)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !5988, file: !147, line: 135, baseType: !1022, size: 192, offset: 1216)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !5988, file: !147, line: 136, baseType: !1205, size: 8, offset: 1408)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !5988, file: !147, line: 137, baseType: !4944, size: 64, offset: 1472)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5988, file: !147, line: 138, baseType: !1437, size: 64, offset: 1536)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5988, file: !147, line: 139, baseType: !1437, size: 64, offset: 1600)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5988, file: !147, line: 140, baseType: !1437, size: 64, offset: 1664)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !5988, file: !147, line: 143, baseType: !6022, size: 64, offset: 1728)
!6022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6023, size: 64)
!6023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !147, line: 95, size: 192, elements: !6024)
!6024 = !{!6025, !6026, !6027}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6023, file: !147, line: 96, baseType: !1678, size: 128, align: 64)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6023, file: !147, line: 97, baseType: !211, size: 32, offset: 128)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6023, file: !147, line: 98, baseType: !6028, offset: 160)
!6028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1205, elements: !3464)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !5988, file: !147, line: 144, baseType: !6022, size: 64, offset: 1792)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !5988, file: !147, line: 145, baseType: !6022, size: 64, offset: 1856)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !5988, file: !147, line: 146, baseType: !6022, size: 64, offset: 1920)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !5988, file: !147, line: 147, baseType: !1205, size: 8, offset: 1984)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !5988, file: !147, line: 148, baseType: !6034, size: 64, offset: 2048)
!6034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6035, size: 64)
!6035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !147, line: 289, size: 6272, align: 64, elements: !6036)
!6036 = !{!6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !6035, file: !147, line: 290, baseType: !5987, size: 64)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !6035, file: !147, line: 291, baseType: !996, size: 128, offset: 64)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !6035, file: !147, line: 292, baseType: !996, size: 128, offset: 192)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6035, file: !147, line: 293, baseType: !2688, size: 5568, offset: 320)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !6035, file: !147, line: 294, baseType: !2978, size: 32, offset: 5888)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !6035, file: !147, line: 295, baseType: !7, size: 32, offset: 5920)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6035, file: !147, line: 296, baseType: !7, size: 32, offset: 5952)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6035, file: !147, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !6035, file: !147, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !6035, file: !147, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !6035, file: !147, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !6035, file: !147, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !6035, file: !147, line: 310, baseType: !1060, size: 32, offset: 6016)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !6035, file: !147, line: 311, baseType: !1060, size: 32, offset: 6048)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !6035, file: !147, line: 317, baseType: !7, size: 32, offset: 6080)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !6035, file: !147, line: 318, baseType: !7, size: 32, offset: 6112)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !6035, file: !147, line: 321, baseType: !1439, size: 8, offset: 6144)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6035, file: !147, line: 322, baseType: !146, size: 32, offset: 6176)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !6035, file: !147, line: 323, baseType: !983, size: 64, offset: 6208)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !6035, file: !147, line: 324, baseType: !5270, offset: 6272)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !5988, file: !147, line: 150, baseType: !6058, size: 64, offset: 2112)
!6058 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !147, line: 18, baseType: !978)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !5988, file: !147, line: 154, baseType: !7, size: 32, offset: 2176)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5988, file: !147, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5988, file: !147, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !5988, file: !147, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !5988, file: !147, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5988, file: !147, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !5988, file: !147, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5988, file: !147, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !5988, file: !147, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !5988, file: !147, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !5988, file: !147, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !5988, file: !147, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !5988, file: !147, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !5988, file: !147, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !5988, file: !147, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !5988, file: !147, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !5988, file: !147, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !5988, file: !147, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !5988, file: !147, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !5988, file: !147, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5988, file: !147, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !5988, file: !147, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !5988, file: !147, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !5988, file: !147, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !5988, file: !147, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !5988, file: !147, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !5988, file: !147, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !5988, file: !147, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !5988, file: !147, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !5988, file: !147, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !5988, file: !147, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !5988, file: !147, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !5988, file: !147, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !5988, file: !147, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !5988, file: !147, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !5988, file: !147, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !5988, file: !147, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !5988, file: !147, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !5988, file: !147, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !5988, file: !147, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !5988, file: !147, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5988, file: !147, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !5988, file: !147, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !5988, file: !147, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !5988, file: !147, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !5988, file: !147, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !5988, file: !147, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !5988, file: !147, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !5988, file: !147, line: 208, baseType: !1482, size: 8, offset: 2256)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !5988, file: !147, line: 210, baseType: !1060, size: 32, offset: 2272)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !5988, file: !147, line: 212, baseType: !1222, size: 64, offset: 2304)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !5988, file: !147, line: 213, baseType: !1222, size: 64, offset: 2368)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !5988, file: !147, line: 214, baseType: !996, size: 128, offset: 2432)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !5988, file: !147, line: 215, baseType: !2278, size: 256, offset: 2560)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !5988, file: !147, line: 217, baseType: !7, size: 32, offset: 2816)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !5988, file: !147, line: 220, baseType: !1060, size: 32, offset: 2848)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !5988, file: !147, line: 221, baseType: !1060, size: 32, offset: 2880)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !5988, file: !147, line: 222, baseType: !1060, size: 32, offset: 2912)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !5988, file: !147, line: 224, baseType: !2688, size: 5568, offset: 2944)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !5988, file: !147, line: 225, baseType: !2688, size: 5568, offset: 8512)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !5988, file: !147, line: 227, baseType: !6120, size: 256, offset: 14080)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !943, line: 168, size: 256, elements: !6121)
!6121 = !{!6122}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6120, file: !943, line: 169, baseType: !2278, size: 256)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5988, file: !147, line: 228, baseType: !2278, size: 256, offset: 14336)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5988, file: !147, line: 230, baseType: !6125, size: 64, offset: 14592)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !147, line: 230, flags: DIFlagFwdDecl)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5988, file: !147, line: 231, baseType: !983, size: 64, offset: 14656)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !5988, file: !147, line: 233, baseType: !1631, size: 64, offset: 14720)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !5988, file: !147, line: 234, baseType: !983, size: 64, offset: 14784)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !5988, file: !147, line: 236, baseType: !1205, size: 8, offset: 14848)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !5988, file: !147, line: 237, baseType: !1022, size: 192, offset: 14912)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !5988, file: !147, line: 238, baseType: !154, size: 32, offset: 15104)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !5988, file: !147, line: 239, baseType: !1039, size: 64, offset: 15168)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !5988, file: !147, line: 240, baseType: !5270, offset: 15232)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5975, file: !173, line: 65, baseType: !6136, size: 64, offset: 256)
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6137, size: 64)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{!211, !992, !6139}
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6140, size: 64)
!6140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !6141, line: 68, size: 3136, elements: !6142)
!6141 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!6142 = !{!6143, !6156, !6157, !6158, !6159, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170, !6189, !6191, !6192, !6193, !6194, !6195, !6199, !6213, !6214, !6215, !6216, !6217, !6218}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !6140, file: !6141, line: 69, baseType: !6144, size: 448)
!6144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !6145, line: 9, size: 448, elements: !6146)
!6145 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!6146 = !{!6147, !6149, !6150, !6151, !6152, !6153, !6154, !6155}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !6144, file: !6145, line: 10, baseType: !6148, size: 128)
!6148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1205, size: 128, elements: !3407)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6144, file: !6145, line: 11, baseType: !4944, size: 64, offset: 128)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !6144, file: !6145, line: 12, baseType: !1108, size: 16, offset: 192)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !6144, file: !6145, line: 13, baseType: !211, size: 32, offset: 224)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !6144, file: !6145, line: 14, baseType: !7, size: 32, offset: 256)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !6144, file: !6145, line: 15, baseType: !7, size: 32, offset: 288)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !6144, file: !6145, line: 16, baseType: !211, size: 32, offset: 320)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !6144, file: !6145, line: 17, baseType: !983, size: 64, offset: 384)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6140, file: !6141, line: 70, baseType: !5987, size: 64, offset: 448)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !6140, file: !6141, line: 71, baseType: !996, size: 128, offset: 512)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !6140, file: !6141, line: 72, baseType: !3787, size: 704, offset: 640)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6140, file: !6141, line: 74, baseType: !1678, size: 128, align: 64, offset: 1344)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !6140, file: !6141, line: 76, baseType: !211, size: 32, offset: 1472)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !6140, file: !6141, line: 83, baseType: !986, size: 64, offset: 1536)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !6140, file: !6141, line: 85, baseType: !211, size: 32, offset: 1600)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !6140, file: !6141, line: 86, baseType: !211, size: 32, offset: 1632)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !6140, file: !6141, line: 88, baseType: !1205, size: 8, offset: 1664)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !6140, file: !6141, line: 89, baseType: !1205, size: 8, offset: 1672)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !6140, file: !6141, line: 90, baseType: !1205, size: 8, offset: 1680)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !6140, file: !6141, line: 92, baseType: !1108, size: 16, offset: 1696)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !6140, file: !6141, line: 93, baseType: !165, size: 32, offset: 1728)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !6140, file: !6141, line: 96, baseType: !4944, size: 64, offset: 1792)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !6140, file: !6141, line: 100, baseType: !6171, size: 192, offset: 1856)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !6141, line: 35, size: 192, elements: !6172)
!6172 = !{!6173, !6188}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !6171, file: !6141, line: 36, baseType: !6174, size: 128)
!6174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !6175, line: 42, size: 128, elements: !6176)
!6175 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!6176 = !{!6177, !6186, !6187}
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !6174, file: !6175, line: 43, baseType: !6178, size: 64)
!6178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6179, size: 64)
!6179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !6175, line: 11, size: 256, elements: !6180)
!6180 = !{!6181, !6182, !6183, !6184, !6185}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !6179, file: !6175, line: 12, baseType: !986, size: 64)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6179, file: !6175, line: 13, baseType: !7, size: 32, offset: 64)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6179, file: !6175, line: 14, baseType: !7, size: 32, offset: 96)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !6179, file: !6175, line: 15, baseType: !4996, size: 64, offset: 128)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !6179, file: !6175, line: 17, baseType: !7, size: 32, offset: 192)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !6174, file: !6175, line: 44, baseType: !7, size: 32, offset: 64)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !6174, file: !6175, line: 45, baseType: !7, size: 32, offset: 96)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6171, file: !6141, line: 37, baseType: !7, size: 32, offset: 128)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !6140, file: !6141, line: 101, baseType: !6190, size: 64, offset: 2048)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !6140, file: !6141, line: 103, baseType: !7, size: 32, offset: 2112)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !6140, file: !6141, line: 106, baseType: !7, size: 32, offset: 2144)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6140, file: !6141, line: 112, baseType: !3768, size: 64, offset: 2176)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !6140, file: !6141, line: 115, baseType: !4944, size: 64, offset: 2240)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !6140, file: !6141, line: 123, baseType: !6196, size: 64, offset: 2304)
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6197, size: 64)
!6197 = !DISubroutineType(types: !6198)
!6198 = !{null, !6139}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !6140, file: !6141, line: 129, baseType: !6200, size: 512, offset: 2368)
!6200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !6141, line: 41, size: 512, elements: !6201)
!6201 = !{!6202, !6203, !6204, !6205, !6206, !6207, !6209, !6210, !6211, !6212}
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6200, file: !6141, line: 42, baseType: !1463, size: 64)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !6200, file: !6141, line: 43, baseType: !211, size: 32, offset: 64)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6200, file: !6141, line: 44, baseType: !6178, size: 64, offset: 128)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !6200, file: !6141, line: 45, baseType: !211, size: 32, offset: 192)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !6200, file: !6141, line: 47, baseType: !4996, size: 64, offset: 256)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !6200, file: !6141, line: 49, baseType: !6208, size: 32, offset: 320)
!6208 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !211)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !6200, file: !6141, line: 50, baseType: !6208, size: 32, offset: 352)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !6200, file: !6141, line: 51, baseType: !6208, size: 32, offset: 384)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !6200, file: !6141, line: 52, baseType: !6208, size: 32, offset: 416)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6200, file: !6141, line: 53, baseType: !6208, size: 32, offset: 448)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !6140, file: !6141, line: 131, baseType: !4944, size: 64, offset: 2880)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !6140, file: !6141, line: 139, baseType: !211, size: 32, offset: 2944)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6140, file: !6141, line: 140, baseType: !211, size: 32, offset: 2976)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6140, file: !6141, line: 141, baseType: !986, size: 64, offset: 3008)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6140, file: !6141, line: 143, baseType: !1205, size: 8, offset: 3072)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !6140, file: !6141, line: 144, baseType: !7, size: 32, offset: 3104)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5975, file: !173, line: 66, baseType: !6136, size: 64, offset: 320)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5975, file: !173, line: 102, baseType: !6136, size: 64, offset: 384)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5975, file: !173, line: 112, baseType: !6222, size: 64, offset: 448)
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6223, size: 64)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{null, !992, !1726}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5975, file: !173, line: 132, baseType: !6226, size: 64, offset: 512)
!6226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6227, size: 64)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{!211, !6139}
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5975, file: !173, line: 133, baseType: !6226, size: 64, offset: 576)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5975, file: !173, line: 134, baseType: !6226, size: 64, offset: 640)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5975, file: !173, line: 135, baseType: !6226, size: 64, offset: 704)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5975, file: !173, line: 136, baseType: !6226, size: 64, offset: 768)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5975, file: !173, line: 164, baseType: !6234, size: 64, offset: 832)
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6235, size: 64)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{!211, !5987}
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5975, file: !173, line: 195, baseType: !6234, size: 64, offset: 896)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5975, file: !173, line: 206, baseType: !6239, size: 64, offset: 960)
!6239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6240, size: 64)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{null, !5987}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5975, file: !173, line: 220, baseType: !6243, size: 64, offset: 1024)
!6243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6244, size: 64)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{!211, !6034}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5975, file: !173, line: 230, baseType: !6247, size: 64, offset: 1088)
!6247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6248, size: 64)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{null, !6034}
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5975, file: !173, line: 241, baseType: !6251, size: 64, offset: 1152)
!6251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6252, size: 64)
!6252 = !DISubroutineType(types: !6253)
!6253 = !{!211, !992, !986}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5975, file: !173, line: 250, baseType: !6255, size: 64, offset: 1216)
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6256, size: 64)
!6256 = !DISubroutineType(types: !6257)
!6257 = !{null, !992}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5975, file: !173, line: 263, baseType: !6259, size: 64, offset: 1280)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6260, size: 64)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!211, !5987, !211}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5975, file: !173, line: 271, baseType: !6263, size: 64, offset: 1344)
!6263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 64)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{!211, !992}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5975, file: !173, line: 278, baseType: !6267, size: 64, offset: 1408)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!1482, !3768}
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5975, file: !173, line: 288, baseType: !6271, size: 64, offset: 1472)
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6272, size: 64)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!211, !5987, !2639, !2660, !1619}
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5975, file: !173, line: 297, baseType: !6239, size: 64, offset: 1536)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5975, file: !173, line: 306, baseType: !6276, size: 64, offset: 1600)
!6276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6277, size: 64)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!211, !1625, !992}
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5975, file: !173, line: 307, baseType: !6280, size: 64, offset: 1664)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 64)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!211, !992, !1463, !211}
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5975, file: !173, line: 316, baseType: !6284, size: 64, offset: 1728)
!6284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6285, size: 64)
!6285 = !DISubroutineType(types: !6286)
!6286 = !{!31, !6139}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5975, file: !173, line: 326, baseType: !6288, size: 64, offset: 1792)
!6288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 64)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{!211, !992, !211}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5975, file: !173, line: 334, baseType: !1437, size: 64, offset: 1856)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5975, file: !173, line: 340, baseType: !6293, size: 64, offset: 1920)
!6293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6294, size: 64)
!6294 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !173, line: 340, flags: DIFlagFwdDecl)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5975, file: !173, line: 347, baseType: !211, size: 32, offset: 1984)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5975, file: !173, line: 356, baseType: !211, size: 32, offset: 2016)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5975, file: !173, line: 362, baseType: !1108, size: 16, offset: 2048)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5975, file: !173, line: 363, baseType: !1108, size: 16, offset: 2064)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5975, file: !173, line: 368, baseType: !7, size: 32, offset: 2080)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5975, file: !173, line: 373, baseType: !7, size: 32, offset: 2112)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5975, file: !173, line: 379, baseType: !986, size: 64, offset: 2176)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5975, file: !173, line: 381, baseType: !986, size: 64, offset: 2240)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5975, file: !173, line: 400, baseType: !2124, size: 16, offset: 2304)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5975, file: !173, line: 406, baseType: !1205, size: 8, offset: 2320)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5975, file: !173, line: 409, baseType: !211, size: 32, offset: 2336)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5975, file: !173, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5975, file: !173, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5975, file: !173, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5975, file: !173, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5975, file: !173, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5975, file: !173, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5975, file: !173, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5975, file: !173, line: 445, baseType: !7, size: 32, offset: 2400)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5975, file: !173, line: 459, baseType: !6315, size: 64, offset: 2432)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 64)
!6316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6317, size: 64)
!6317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !119, line: 99, size: 256, elements: !6318)
!6318 = !{!6319, !6320, !6324}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6317, file: !119, line: 100, baseType: !2759, size: 128)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6317, file: !119, line: 101, baseType: !6321, size: 64, offset: 128)
!6321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6322, size: 64)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{!1703, !2988, !6316, !1463}
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6317, file: !119, line: 103, baseType: !6325, size: 64, offset: 192)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 64)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{!1703, !2988, !6316, !1437, !1631}
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5975, file: !173, line: 464, baseType: !6315, size: 64, offset: 2496)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5975, file: !173, line: 470, baseType: !2770, size: 64, offset: 2560)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5975, file: !173, line: 479, baseType: !976, size: 64, offset: 2624)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5975, file: !173, line: 484, baseType: !7, size: 32, offset: 2688)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5975, file: !173, line: 485, baseType: !6333, size: 64, offset: 2752)
!6333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6334, size: 64)
!6334 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !173, line: 19, flags: DIFlagFwdDecl)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5975, file: !173, line: 488, baseType: !211, size: 32, offset: 2816)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !993, file: !173, line: 549, baseType: !6337, size: 64, offset: 1088)
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 64)
!6338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !6339, line: 16, size: 2624, elements: !6340)
!6339 = !DIFile(filename: "./include/scsi/scsi_transport.h", directory: "/home/lizy2001/genbc/linux")
!6340 = !{!6341, !6377, !6378, !6379, !6384, !6385, !6386, !6387, !6388, !6389, !6390}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "host_attrs", scope: !6338, file: !6339, line: 18, baseType: !6342, size: 768)
!6342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transport_container", file: !6343, line: 56, size: 768, elements: !6344)
!6343 = !DIFile(filename: "./include/linux/transport_class.h", directory: "/home/lizy2001/genbc/linux")
!6344 = !{!6345, !6376}
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !6342, file: !6343, line: 57, baseType: !6346, size: 704)
!6346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_container", file: !6347, line: 16, size: 704, elements: !6348)
!6347 = !DIFile(filename: "./include/linux/attribute_container.h", directory: "/home/lizy2001/genbc/linux")
!6348 = !{!6349, !6350, !6367, !6368, !6369, !6370, !6375}
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6346, file: !6347, line: 17, baseType: !996, size: 128)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "containers", scope: !6346, file: !6347, line: 18, baseType: !6351, size: 256, align: 64, offset: 128)
!6351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist", file: !6352, line: 18, size: 256, align: 64, elements: !6353)
!6352 = !DIFile(filename: "./include/linux/klist.h", directory: "/home/lizy2001/genbc/linux")
!6353 = !{!6354, !6355, !6356, !6366}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "k_lock", scope: !6351, file: !6352, line: 19, baseType: !1004)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "k_list", scope: !6351, file: !6352, line: 20, baseType: !996, size: 128)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6351, file: !6352, line: 21, baseType: !6357, size: 64, offset: 128)
!6357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6358, size: 64)
!6358 = !DISubroutineType(types: !6359)
!6359 = !{null, !6360}
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "klist_node", file: !6352, line: 37, size: 256, elements: !6362)
!6362 = !{!6363, !6364, !6365}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "n_klist", scope: !6361, file: !6352, line: 38, baseType: !983, size: 64)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "n_node", scope: !6361, file: !6352, line: 39, baseType: !996, size: 128, offset: 64)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "n_ref", scope: !6361, file: !6352, line: 40, baseType: !2978, size: 32, offset: 192)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6351, file: !6352, line: 22, baseType: !6357, size: 64, offset: 192)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6346, file: !6347, line: 19, baseType: !3496, size: 64, offset: 384)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !6346, file: !6347, line: 20, baseType: !2771, size: 64, offset: 448)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6346, file: !6347, line: 21, baseType: !6315, size: 64, offset: 512)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6346, file: !6347, line: 22, baseType: !6371, size: 64, offset: 576)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!211, !6374, !2988}
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6346, size: 64)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6346, file: !6347, line: 24, baseType: !986, size: 64, offset: 640)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !6342, file: !6343, line: 58, baseType: !2771, size: 64, offset: 704)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "target_attrs", scope: !6338, file: !6339, line: 19, baseType: !6342, size: 768, offset: 768)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "device_attrs", scope: !6338, file: !6339, line: 20, baseType: !6342, size: 768, offset: 1536)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "user_scan", scope: !6338, file: !6339, line: 25, baseType: !6380, size: 64, offset: 2304)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = !DISubroutineType(types: !6382)
!6382 = !{!211, !992, !6383, !6383, !976}
!6383 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !982, line: 87, baseType: !7)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "device_size", scope: !6338, file: !6339, line: 30, baseType: !211, size: 32, offset: 2368)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "device_private_offset", scope: !6338, file: !6339, line: 31, baseType: !211, size: 32, offset: 2400)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "target_size", scope: !6338, file: !6339, line: 32, baseType: !211, size: 32, offset: 2432)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "target_private_offset", scope: !6338, file: !6339, line: 33, baseType: !211, size: 32, offset: 2464)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "host_size", scope: !6338, file: !6339, line: 34, baseType: !211, size: 32, offset: 2496)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "create_work_queue", scope: !6338, file: !6339, line: 40, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "eh_strategy_handler", scope: !6338, file: !6339, line: 45, baseType: !6255, size: 64, offset: 2560)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !993, file: !173, line: 552, baseType: !4155, size: 2304, offset: 1152)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !993, file: !173, line: 554, baseType: !1060, size: 32, offset: 3456)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !993, file: !173, line: 556, baseType: !7, size: 32, offset: 3488)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !993, file: !173, line: 558, baseType: !7, size: 32, offset: 3520)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !993, file: !173, line: 560, baseType: !7, size: 32, offset: 3552)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !993, file: !173, line: 563, baseType: !211, size: 32, offset: 3584)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !993, file: !173, line: 564, baseType: !986, size: 64, offset: 3648)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !993, file: !173, line: 573, baseType: !7, size: 32, offset: 3712)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !993, file: !173, line: 574, baseType: !7, size: 32, offset: 3744)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !993, file: !173, line: 575, baseType: !976, size: 64, offset: 3776)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !993, file: !173, line: 584, baseType: !7, size: 32, offset: 3840)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !993, file: !173, line: 593, baseType: !1108, size: 16, offset: 3872)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !993, file: !173, line: 595, baseType: !211, size: 32, offset: 3904)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !993, file: !173, line: 596, baseType: !211, size: 32, offset: 3936)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !993, file: !173, line: 597, baseType: !2124, size: 16, offset: 3968)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !993, file: !173, line: 598, baseType: !1108, size: 16, offset: 3984)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !993, file: !173, line: 599, baseType: !1108, size: 16, offset: 4000)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !993, file: !173, line: 600, baseType: !7, size: 32, offset: 4032)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !993, file: !173, line: 601, baseType: !7, size: 32, offset: 4064)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !993, file: !173, line: 602, baseType: !986, size: 64, offset: 4096)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !993, file: !173, line: 603, baseType: !986, size: 64, offset: 4160)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !993, file: !173, line: 612, baseType: !7, size: 32, offset: 4224)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !993, file: !173, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !993, file: !173, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !993, file: !173, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !993, file: !173, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !993, file: !173, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !993, file: !173, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !993, file: !173, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !993, file: !173, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !993, file: !173, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !993, file: !173, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !993, file: !173, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !993, file: !173, line: 653, baseType: !6425, size: 160, offset: 4272)
!6425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 160, elements: !5864)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !993, file: !173, line: 654, baseType: !3558, size: 64, offset: 4480)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !993, file: !173, line: 659, baseType: !3558, size: 64, offset: 4544)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !993, file: !173, line: 664, baseType: !7, size: 32, offset: 4608)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !993, file: !173, line: 667, baseType: !7, size: 32, offset: 4640)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !993, file: !173, line: 668, baseType: !1205, size: 8, offset: 4672)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !993, file: !173, line: 671, baseType: !986, size: 64, offset: 4736)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !993, file: !173, line: 672, baseType: !986, size: 64, offset: 4800)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !993, file: !173, line: 673, baseType: !1205, size: 8, offset: 4864)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !993, file: !173, line: 674, baseType: !1205, size: 8, offset: 4872)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !993, file: !173, line: 675, baseType: !7, size: 32, offset: 4896)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !993, file: !173, line: 678, baseType: !172, size: 32, offset: 4928)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !993, file: !173, line: 681, baseType: !2688, size: 5568, offset: 4992)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !993, file: !173, line: 681, baseType: !2688, size: 5568, offset: 10560)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !993, file: !173, line: 687, baseType: !983, size: 64, offset: 16128)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !993, file: !173, line: 693, baseType: !2988, size: 64, offset: 16192)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !993, file: !173, line: 700, baseType: !5270, align: 64, offset: 16256)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !989, file: !183, line: 813, baseType: !6443, size: 64, offset: 64)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_operations", file: !183, line: 896, size: 3904, elements: !6445)
!6445 = !{!6446, !6660, !6661, !6665, !6669, !6673, !6677, !6681, !6685, !6686, !6691, !6697, !6701, !6705, !6706, !6711, !6716, !6717, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6735, !6739, !6740, !6741, !6745, !6749, !6750, !6751, !6752, !6775, !6779, !6783, !6787, !6788, !6794, !6798, !6799, !6803, !6804, !6808, !6809, !6810, !6811, !6812, !6813, !6814, !6818, !6822, !6826, !6830, !6834, !6835, !6836}
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "qc_defer", scope: !6444, file: !183, line: 900, baseType: !6447, size: 64)
!6447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6448, size: 64)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{!211, !6450}
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6451, size: 64)
!6451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_queued_cmd", file: !183, line: 617, size: 1920, elements: !6452)
!6452 = !{!6453, !6454, !6614, !6615, !6616, !6635, !6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651, !6652, !6653, !6658, !6659}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6451, file: !183, line: 618, baseType: !988, size: 64)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6451, file: !183, line: 619, baseType: !6455, size: 64, offset: 64)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 64)
!6456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_device", file: !183, line: 673, size: 16384, elements: !6457)
!6457 = !{!6458, !6508, !6509, !6510, !6511, !6512, !6513, !6565, !6566, !6567, !6568, !6569, !6570, !6571, !6572, !6573, !6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6593, !6595, !6597, !6598, !6599, !6600, !6601, !6602, !6603}
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6456, file: !183, line: 674, baseType: !6459, size: 64)
!6459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6460, size: 64)
!6460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_link", file: !183, line: 783, size: 41984, elements: !6461)
!6461 = !{!6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470, !6471, !6472, !6473, !6489, !6505, !6507}
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6460, file: !183, line: 784, baseType: !988, size: 64)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "pmp", scope: !6460, file: !183, line: 785, baseType: !211, size: 32, offset: 64)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6460, file: !183, line: 787, baseType: !2688, size: 5568, offset: 128)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "active_tag", scope: !6460, file: !183, line: 788, baseType: !7, size: 32, offset: 5696)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "sactive", scope: !6460, file: !183, line: 789, baseType: !1049, size: 32, offset: 5728)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6460, file: !183, line: 791, baseType: !7, size: 32, offset: 5760)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "saved_scontrol", scope: !6460, file: !183, line: 793, baseType: !1049, size: 32, offset: 5792)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "hw_sata_spd_limit", scope: !6460, file: !183, line: 794, baseType: !7, size: 32, offset: 5824)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd_limit", scope: !6460, file: !183, line: 795, baseType: !7, size: 32, offset: 5856)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd", scope: !6460, file: !183, line: 796, baseType: !7, size: 32, offset: 5888)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_policy", scope: !6460, file: !183, line: 797, baseType: !197, size: 32, offset: 5920)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "eh_info", scope: !6460, file: !183, line: 800, baseType: !6474, size: 960, offset: 5952)
!6474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_info", file: !183, line: 744, size: 960, elements: !6475)
!6475 = !{!6476, !6477, !6478, !6479, !6480, !6482, !6483, !6484, !6488}
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6474, file: !183, line: 745, baseType: !6455, size: 64)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "serror", scope: !6474, file: !183, line: 746, baseType: !1049, size: 32, offset: 64)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6474, file: !183, line: 747, baseType: !7, size: 32, offset: 96)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6474, file: !183, line: 748, baseType: !7, size: 32, offset: 128)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "dev_action", scope: !6474, file: !183, line: 749, baseType: !6481, size: 64, offset: 160)
!6481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2073)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6474, file: !183, line: 750, baseType: !7, size: 32, offset: 224)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "probe_mask", scope: !6474, file: !183, line: 752, baseType: !7, size: 32, offset: 256)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !6474, file: !183, line: 754, baseType: !6485, size: 640, offset: 288)
!6485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 640, elements: !6486)
!6486 = !{!6487}
!6487 = !DISubrange(count: 80)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !6474, file: !183, line: 755, baseType: !211, size: 32, offset: 928)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "eh_context", scope: !6460, file: !183, line: 802, baseType: !6490, size: 1664, offset: 6912)
!6490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_context", file: !183, line: 758, size: 1664, elements: !6491)
!6491 = !{!6492, !6493, !6495, !6498, !6499, !6500, !6501, !6502, !6504}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6490, file: !183, line: 759, baseType: !6474, size: 960)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "tries", scope: !6490, file: !183, line: 760, baseType: !6494, size: 64, offset: 960)
!6494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 64, elements: !2073)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_timeout_idx", scope: !6490, file: !183, line: 761, baseType: !6496, size: 384, offset: 1024)
!6496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 384, elements: !6497)
!6497 = !{!2074, !2143}
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "classes", scope: !6490, file: !183, line: 763, baseType: !6481, size: 64, offset: 1408)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "did_probe_mask", scope: !6490, file: !183, line: 764, baseType: !7, size: 32, offset: 1472)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "unloaded_mask", scope: !6490, file: !183, line: 765, baseType: !7, size: 32, offset: 1504)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "saved_ncq_enabled", scope: !6490, file: !183, line: 766, baseType: !7, size: 32, offset: 1536)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "saved_xfer_mode", scope: !6490, file: !183, line: 767, baseType: !6503, size: 16, offset: 1568)
!6503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 16, elements: !2073)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !6490, file: !183, line: 769, baseType: !986, size: 64, offset: 1600)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6460, file: !183, line: 804, baseType: !6506, size: 32768, offset: 8704)
!6506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6456, size: 32768, elements: !2073)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "last_lpm_change", scope: !6460, file: !183, line: 806, baseType: !986, size: 64, offset: 41472)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "devno", scope: !6456, file: !183, line: 675, baseType: !7, size: 32, offset: 64)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "horkage", scope: !6456, file: !183, line: 676, baseType: !7, size: 32, offset: 96)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6456, file: !183, line: 677, baseType: !986, size: 64, offset: 128)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "sdev", scope: !6456, file: !183, line: 678, baseType: !5987, size: 64, offset: 192)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6456, file: !183, line: 679, baseType: !983, size: 64, offset: 256)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_cache", scope: !6456, file: !183, line: 681, baseType: !6514, size: 64, offset: 320)
!6514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6515, size: 64)
!6515 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !6516, line: 899, size: 192, elements: !6517)
!6516 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!6517 = !{!6518, !6520, !6525, !6531, !6538, !6544, !6551, !6559}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6515, file: !6516, line: 900, baseType: !6519, size: 32)
!6519 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !6516, line: 635, baseType: !1049)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !6515, file: !6516, line: 904, baseType: !6521, size: 128)
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6515, file: !6516, line: 901, size: 128, elements: !6522)
!6522 = !{!6523, !6524}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6521, file: !6516, line: 902, baseType: !6519, size: 32)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6521, file: !6516, line: 903, baseType: !976, size: 64, offset: 64)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6515, file: !6516, line: 910, baseType: !6526, size: 128)
!6526 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6515, file: !6516, line: 906, size: 128, elements: !6527)
!6527 = !{!6528, !6529, !6530}
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6526, file: !6516, line: 907, baseType: !6519, size: 32)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6526, file: !6516, line: 908, baseType: !1049, size: 32, offset: 32)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6526, file: !6516, line: 909, baseType: !1463, size: 64, offset: 64)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6515, file: !6516, line: 916, baseType: !6532, size: 128)
!6532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6515, file: !6516, line: 912, size: 128, elements: !6533)
!6533 = !{!6534, !6535, !6536}
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6532, file: !6516, line: 913, baseType: !6519, size: 32)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6532, file: !6516, line: 914, baseType: !1049, size: 32, offset: 32)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6532, file: !6516, line: 915, baseType: !6537, size: 64, offset: 64)
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !6515, file: !6516, line: 922, baseType: !6539, size: 128)
!6539 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6515, file: !6516, line: 918, size: 128, elements: !6540)
!6540 = !{!6541, !6542, !6543}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6539, file: !6516, line: 919, baseType: !6519, size: 32)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6539, file: !6516, line: 920, baseType: !1049, size: 32, offset: 32)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !6539, file: !6516, line: 921, baseType: !6514, size: 64, offset: 64)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !6515, file: !6516, line: 928, baseType: !6545, size: 128)
!6545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6515, file: !6516, line: 924, size: 128, elements: !6546)
!6546 = !{!6547, !6548, !6549}
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6545, file: !6516, line: 925, baseType: !6519, size: 32)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !6545, file: !6516, line: 926, baseType: !6519, size: 32, offset: 32)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !6545, file: !6516, line: 927, baseType: !6550, size: 64, offset: 64)
!6550 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !6516, line: 424, baseType: !983)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !6515, file: !6516, line: 935, baseType: !6552, size: 192)
!6552 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6515, file: !6516, line: 930, size: 192, elements: !6553)
!6553 = !{!6554, !6555, !6556, !6558}
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6552, file: !6516, line: 931, baseType: !6519, size: 32)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !6552, file: !6516, line: 932, baseType: !1049, size: 32, offset: 32)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !6552, file: !6516, line: 933, baseType: !6557, size: 64, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !6516, line: 128, baseType: !976)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !6552, file: !6516, line: 934, baseType: !1049, size: 32, offset: 128)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !6515, file: !6516, line: 941, baseType: !6560, size: 96)
!6560 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6515, file: !6516, line: 937, size: 96, elements: !6561)
!6561 = !{!6562, !6563, !6564}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6560, file: !6516, line: 938, baseType: !6519, size: 32)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !6560, file: !6516, line: 939, baseType: !1049, size: 32, offset: 32)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !6560, file: !6516, line: 940, baseType: !1049, size: 32, offset: 64)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_filter", scope: !6456, file: !183, line: 682, baseType: !7, size: 32, offset: 384)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6456, file: !183, line: 687, baseType: !2688, size: 5568, offset: 448)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "n_sectors", scope: !6456, file: !183, line: 689, baseType: !976, size: 64, offset: 6016)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "n_native_sectors", scope: !6456, file: !183, line: 690, baseType: !976, size: 64, offset: 6080)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6456, file: !183, line: 691, baseType: !7, size: 32, offset: 6144)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "unpark_deadline", scope: !6456, file: !183, line: 692, baseType: !986, size: 64, offset: 6208)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mode", scope: !6456, file: !183, line: 694, baseType: !1203, size: 8, offset: 6272)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mode", scope: !6456, file: !183, line: 695, baseType: !1203, size: 8, offset: 6280)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_mode", scope: !6456, file: !183, line: 696, baseType: !1203, size: 8, offset: 6288)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_shift", scope: !6456, file: !183, line: 697, baseType: !7, size: 32, offset: 6304)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "multi_count", scope: !6456, file: !183, line: 699, baseType: !7, size: 32, offset: 6336)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !6456, file: !183, line: 701, baseType: !7, size: 32, offset: 6368)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !6456, file: !183, line: 702, baseType: !7, size: 32, offset: 6400)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !6456, file: !183, line: 705, baseType: !986, size: 64, offset: 6464)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !6456, file: !183, line: 706, baseType: !986, size: 64, offset: 6528)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !6456, file: !183, line: 707, baseType: !986, size: 64, offset: 6592)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !6456, file: !183, line: 710, baseType: !1726, size: 16, offset: 6656)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !6456, file: !183, line: 711, baseType: !1726, size: 16, offset: 6672)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !6456, file: !183, line: 712, baseType: !1726, size: 16, offset: 6688)
!6584 = !DIDerivedType(tag: DW_TAG_member, scope: !6456, file: !183, line: 714, baseType: !6585, size: 4096, align: 512, offset: 7168)
!6585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6456, file: !183, line: 714, size: 4096, align: 512, elements: !6586)
!6586 = !{!6587, !6591}
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6585, file: !183, line: 715, baseType: !6588, size: 4096)
!6588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1726, size: 4096, elements: !6589)
!6589 = !{!6590}
!6590 = !DISubrange(count: 256)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "gscr", scope: !6585, file: !183, line: 716, baseType: !6592, size: 4096)
!6592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 4096, elements: !3079)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "devslp_timing", scope: !6456, file: !183, line: 720, baseType: !6594, size: 64, offset: 11264)
!6594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 64, elements: !1168)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_send_recv_cmds", scope: !6456, file: !183, line: 723, baseType: !6596, size: 160, offset: 11328)
!6596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 160, elements: !5864)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_non_data_cmds", scope: !6456, file: !183, line: 724, baseType: !3551, size: 512, offset: 11488)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zoned_cap", scope: !6456, file: !183, line: 727, baseType: !1049, size: 32, offset: 12000)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_open", scope: !6456, file: !183, line: 728, baseType: !1049, size: 32, offset: 12032)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_nonseq", scope: !6456, file: !183, line: 729, baseType: !1049, size: 32, offset: 12064)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_max_open", scope: !6456, file: !183, line: 730, baseType: !1049, size: 32, offset: 12096)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "spdn_cnt", scope: !6456, file: !183, line: 733, baseType: !211, size: 32, offset: 12128)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "ering", scope: !6456, file: !183, line: 735, baseType: !6604, size: 4160, offset: 12160)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering", file: !183, line: 668, size: 4160, elements: !6605)
!6605 = !{!6606, !6607}
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !6604, file: !183, line: 669, baseType: !211, size: 32)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !6604, file: !183, line: 670, baseType: !6608, size: 4096, offset: 64)
!6608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6609, size: 4096, elements: !1402)
!6609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering_entry", file: !183, line: 662, size: 128, elements: !6610)
!6610 = !{!6611, !6612, !6613}
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "eflags", scope: !6609, file: !183, line: 663, baseType: !7, size: 32)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6609, file: !183, line: 664, baseType: !7, size: 32, offset: 32)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !6609, file: !183, line: 665, baseType: !976, size: 64, offset: 64)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "scsicmd", scope: !6451, file: !183, line: 621, baseType: !6139, size: 64, offset: 128)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "scsidone", scope: !6451, file: !183, line: 622, baseType: !6196, size: 64, offset: 192)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !6451, file: !183, line: 624, baseType: !6617, size: 256, offset: 256)
!6617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_taskfile", file: !183, line: 550, size: 256, elements: !6618)
!6618 = !{!6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627, !6628, !6629, !6630, !6631, !6632, !6633, !6634}
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6617, file: !183, line: 551, baseType: !986, size: 64)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !6617, file: !183, line: 552, baseType: !1203, size: 8, offset: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6617, file: !183, line: 554, baseType: !1203, size: 8, offset: 72)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "hob_feature", scope: !6617, file: !183, line: 556, baseType: !1203, size: 8, offset: 80)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "hob_nsect", scope: !6617, file: !183, line: 557, baseType: !1203, size: 8, offset: 88)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbal", scope: !6617, file: !183, line: 558, baseType: !1203, size: 8, offset: 96)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbam", scope: !6617, file: !183, line: 559, baseType: !1203, size: 8, offset: 104)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbah", scope: !6617, file: !183, line: 560, baseType: !1203, size: 8, offset: 112)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "feature", scope: !6617, file: !183, line: 562, baseType: !1203, size: 8, offset: 120)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "nsect", scope: !6617, file: !183, line: 563, baseType: !1203, size: 8, offset: 128)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "lbal", scope: !6617, file: !183, line: 564, baseType: !1203, size: 8, offset: 136)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "lbam", scope: !6617, file: !183, line: 565, baseType: !1203, size: 8, offset: 144)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "lbah", scope: !6617, file: !183, line: 566, baseType: !1203, size: 8, offset: 152)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6617, file: !183, line: 568, baseType: !1203, size: 8, offset: 160)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !6617, file: !183, line: 570, baseType: !1203, size: 8, offset: 168)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "auxiliary", scope: !6617, file: !183, line: 572, baseType: !1049, size: 32, offset: 192)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !6451, file: !183, line: 625, baseType: !6636, size: 128, offset: 512)
!6636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 128, elements: !3407)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6451, file: !183, line: 627, baseType: !986, size: 64, offset: 640)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6451, file: !183, line: 628, baseType: !7, size: 32, offset: 704)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "hw_tag", scope: !6451, file: !183, line: 629, baseType: !7, size: 32, offset: 736)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "n_elem", scope: !6451, file: !183, line: 630, baseType: !7, size: 32, offset: 768)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "orig_n_elem", scope: !6451, file: !183, line: 631, baseType: !7, size: 32, offset: 800)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !6451, file: !183, line: 633, baseType: !211, size: 32, offset: 832)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "sect_size", scope: !6451, file: !183, line: 635, baseType: !7, size: 32, offset: 864)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !6451, file: !183, line: 637, baseType: !7, size: 32, offset: 896)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "extrabytes", scope: !6451, file: !183, line: 638, baseType: !7, size: 32, offset: 928)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "curbytes", scope: !6451, file: !183, line: 639, baseType: !7, size: 32, offset: 960)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "sgent", scope: !6451, file: !183, line: 641, baseType: !6179, size: 256, offset: 1024)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !6451, file: !183, line: 643, baseType: !6178, size: 64, offset: 1280)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "cursg", scope: !6451, file: !183, line: 645, baseType: !6178, size: 64, offset: 1344)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "cursg_ofs", scope: !6451, file: !183, line: 646, baseType: !7, size: 32, offset: 1408)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6451, file: !183, line: 648, baseType: !7, size: 32, offset: 1440)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "result_tf", scope: !6451, file: !183, line: 649, baseType: !6617, size: 256, offset: 1472)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !6451, file: !183, line: 650, baseType: !6654, size: 64, offset: 1728)
!6654 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_qc_cb_t", file: !183, line: 529, baseType: !6655)
!6655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6656, size: 64)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{null, !6450}
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6451, file: !183, line: 652, baseType: !983, size: 64, offset: 1792)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "lldd_task", scope: !6451, file: !183, line: 653, baseType: !983, size: 64, offset: 1856)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "check_atapi_dma", scope: !6444, file: !183, line: 901, baseType: !6447, size: 64, offset: 64)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "qc_prep", scope: !6444, file: !183, line: 902, baseType: !6662, size: 64, offset: 128)
!6662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6663, size: 64)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!182, !6450}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "qc_issue", scope: !6444, file: !183, line: 903, baseType: !6666, size: 64, offset: 192)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!7, !6450}
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "qc_fill_rtf", scope: !6444, file: !183, line: 904, baseType: !6670, size: 64, offset: 256)
!6670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6671, size: 64)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!1482, !6450}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "cable_detect", scope: !6444, file: !183, line: 909, baseType: !6674, size: 64, offset: 320)
!6674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6675, size: 64)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{!211, !988}
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "mode_filter", scope: !6444, file: !183, line: 910, baseType: !6678, size: 64, offset: 384)
!6678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6679, size: 64)
!6679 = !DISubroutineType(types: !6680)
!6680 = !{!986, !6455, !986}
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "set_piomode", scope: !6444, file: !183, line: 911, baseType: !6682, size: 64, offset: 448)
!6682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6683, size: 64)
!6683 = !DISubroutineType(types: !6684)
!6684 = !{null, !988, !6455}
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "set_dmamode", scope: !6444, file: !183, line: 912, baseType: !6682, size: 64, offset: 512)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !6444, file: !183, line: 913, baseType: !6687, size: 64, offset: 576)
!6687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6688, size: 64)
!6688 = !DISubroutineType(types: !6689)
!6689 = !{!211, !6459, !6690}
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 64)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "read_id", scope: !6444, file: !183, line: 914, baseType: !6692, size: 64, offset: 640)
!6692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6693, size: 64)
!6693 = !DISubroutineType(types: !6694)
!6694 = !{!7, !6455, !6695, !6696}
!6695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 64)
!6696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "dev_config", scope: !6444, file: !183, line: 916, baseType: !6698, size: 64, offset: 704)
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 64)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{null, !6455}
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6444, file: !183, line: 918, baseType: !6702, size: 64, offset: 768)
!6702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6703, size: 64)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{null, !988}
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6444, file: !183, line: 919, baseType: !6702, size: 64, offset: 832)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "prereset", scope: !6444, file: !183, line: 920, baseType: !6707, size: 64, offset: 896)
!6707 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_prereset_fn_t", file: !183, line: 530, baseType: !6708)
!6708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6709, size: 64)
!6709 = !DISubroutineType(types: !6710)
!6710 = !{!211, !6459, !986}
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "softreset", scope: !6444, file: !183, line: 921, baseType: !6712, size: 64, offset: 960)
!6712 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_reset_fn_t", file: !183, line: 531, baseType: !6713)
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 64)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!211, !6459, !3424, !986}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "hardreset", scope: !6444, file: !183, line: 922, baseType: !6712, size: 64, offset: 1024)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "postreset", scope: !6444, file: !183, line: 923, baseType: !6718, size: 64, offset: 1088)
!6718 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_postreset_fn_t", file: !183, line: 533, baseType: !6719)
!6719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6720, size: 64)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{null, !6459, !3424}
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_prereset", scope: !6444, file: !183, line: 924, baseType: !6707, size: 64, offset: 1152)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_softreset", scope: !6444, file: !183, line: 925, baseType: !6712, size: 64, offset: 1216)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_hardreset", scope: !6444, file: !183, line: 926, baseType: !6712, size: 64, offset: 1280)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_postreset", scope: !6444, file: !183, line: 927, baseType: !6718, size: 64, offset: 1344)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "error_handler", scope: !6444, file: !183, line: 928, baseType: !6702, size: 64, offset: 1408)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "lost_interrupt", scope: !6444, file: !183, line: 929, baseType: !6702, size: 64, offset: 1472)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "post_internal_cmd", scope: !6444, file: !183, line: 930, baseType: !6655, size: 64, offset: 1536)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "sched_eh", scope: !6444, file: !183, line: 931, baseType: !6702, size: 64, offset: 1600)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "end_eh", scope: !6444, file: !183, line: 932, baseType: !6702, size: 64, offset: 1664)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "scr_read", scope: !6444, file: !183, line: 937, baseType: !6732, size: 64, offset: 1728)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = !DISubroutineType(types: !6734)
!6734 = !{!211, !6459, !7, !5308}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "scr_write", scope: !6444, file: !183, line: 938, baseType: !6736, size: 64, offset: 1792)
!6736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6737, size: 64)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{!211, !6459, !7, !1049}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_attach", scope: !6444, file: !183, line: 939, baseType: !6702, size: 64, offset: 1856)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_detach", scope: !6444, file: !183, line: 940, baseType: !6702, size: 64, offset: 1920)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "set_lpm", scope: !6444, file: !183, line: 941, baseType: !6742, size: 64, offset: 1984)
!6742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6743, size: 64)
!6743 = !DISubroutineType(types: !6744)
!6744 = !{!211, !6459, !197, !7}
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "port_suspend", scope: !6444, file: !183, line: 947, baseType: !6746, size: 64, offset: 2048)
!6746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6747, size: 64)
!6747 = !DISubroutineType(types: !6748)
!6748 = !{!211, !988, !3103}
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "port_resume", scope: !6444, file: !183, line: 948, baseType: !6674, size: 64, offset: 2112)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "port_start", scope: !6444, file: !183, line: 949, baseType: !6674, size: 64, offset: 2176)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "port_stop", scope: !6444, file: !183, line: 950, baseType: !6702, size: 64, offset: 2240)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "host_stop", scope: !6444, file: !183, line: 951, baseType: !6753, size: 64, offset: 2304)
!6753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6754, size: 64)
!6754 = !DISubroutineType(types: !6755)
!6755 = !{null, !6756}
!6756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6757, size: 64)
!6757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_host", file: !183, line: 599, size: 768, elements: !6758)
!6758 = !{!6759, !6760, !6761, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773}
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6757, file: !183, line: 600, baseType: !1004)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6757, file: !183, line: 601, baseType: !2988, size: 64)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "iomap", scope: !6757, file: !183, line: 602, baseType: !6762, size: 64, offset: 64)
!6762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 64)
!6763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "n_ports", scope: !6757, file: !183, line: 603, baseType: !7, size: 32, offset: 128)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "n_tags", scope: !6757, file: !183, line: 604, baseType: !7, size: 32, offset: 160)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6757, file: !183, line: 605, baseType: !983, size: 64, offset: 192)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6757, file: !183, line: 606, baseType: !6443, size: 64, offset: 256)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6757, file: !183, line: 607, baseType: !986, size: 64, offset: 320)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6757, file: !183, line: 608, baseType: !2978, size: 32, offset: 384)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "eh_mutex", scope: !6757, file: !183, line: 610, baseType: !1022, size: 192, offset: 448)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "eh_owner", scope: !6757, file: !183, line: 611, baseType: !1039, size: 64, offset: 640)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "simplex_claimed", scope: !6757, file: !183, line: 613, baseType: !988, size: 64, offset: 704)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !6757, file: !183, line: 614, baseType: !6774, offset: 768)
!6774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !988, elements: !3464)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "sff_dev_select", scope: !6444, file: !183, line: 957, baseType: !6776, size: 64, offset: 2368)
!6776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6777, size: 64)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{null, !988, !7}
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "sff_set_devctl", scope: !6444, file: !183, line: 958, baseType: !6780, size: 64, offset: 2432)
!6780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6781, size: 64)
!6781 = !DISubroutineType(types: !6782)
!6782 = !{null, !988, !1203}
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_status", scope: !6444, file: !183, line: 959, baseType: !6784, size: 64, offset: 2496)
!6784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6785, size: 64)
!6785 = !DISubroutineType(types: !6786)
!6786 = !{!1203, !988}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_altstatus", scope: !6444, file: !183, line: 960, baseType: !6784, size: 64, offset: 2560)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_load", scope: !6444, file: !183, line: 961, baseType: !6789, size: 64, offset: 2624)
!6789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6790, size: 64)
!6790 = !DISubroutineType(types: !6791)
!6791 = !{null, !988, !6792}
!6792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6793, size: 64)
!6793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6617)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_read", scope: !6444, file: !183, line: 962, baseType: !6795, size: 64, offset: 2688)
!6795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6796, size: 64)
!6796 = !DISubroutineType(types: !6797)
!6797 = !{null, !988, !6695}
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "sff_exec_command", scope: !6444, file: !183, line: 963, baseType: !6789, size: 64, offset: 2752)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "sff_data_xfer", scope: !6444, file: !183, line: 965, baseType: !6800, size: 64, offset: 2816)
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6801, size: 64)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!7, !6450, !4944, !7, !211}
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_on", scope: !6444, file: !183, line: 967, baseType: !6702, size: 64, offset: 2880)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_check", scope: !6444, file: !183, line: 968, baseType: !6805, size: 64, offset: 2944)
!6805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6806, size: 64)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{!1482, !988}
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_clear", scope: !6444, file: !183, line: 969, baseType: !6702, size: 64, offset: 3008)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "sff_drain_fifo", scope: !6444, file: !183, line: 970, baseType: !6655, size: 64, offset: 3072)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_setup", scope: !6444, file: !183, line: 973, baseType: !6655, size: 64, offset: 3136)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_start", scope: !6444, file: !183, line: 974, baseType: !6655, size: 64, offset: 3200)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_stop", scope: !6444, file: !183, line: 975, baseType: !6655, size: 64, offset: 3264)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_status", scope: !6444, file: !183, line: 976, baseType: !6784, size: 64, offset: 3328)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "em_show", scope: !6444, file: !183, line: 980, baseType: !6815, size: 64, offset: 3392)
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!1703, !988, !1463}
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "em_store", scope: !6444, file: !183, line: 981, baseType: !6819, size: 64, offset: 3456)
!6819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6820, size: 64)
!6820 = !DISubroutineType(types: !6821)
!6821 = !{!1703, !988, !1437, !1631}
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_show", scope: !6444, file: !183, line: 983, baseType: !6823, size: 64, offset: 3520)
!6823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6824, size: 64)
!6824 = !DISubroutineType(types: !6825)
!6825 = !{!1703, !6455, !1463}
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_store", scope: !6444, file: !183, line: 984, baseType: !6827, size: 64, offset: 3584)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{!1703, !6455, !205}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_led_message", scope: !6444, file: !183, line: 986, baseType: !6831, size: 64, offset: 3648)
!6831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6832, size: 64)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{!1703, !988, !1049, !1703}
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "phy_reset", scope: !6444, file: !183, line: 992, baseType: !6702, size: 64, offset: 3712)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "eng_timeout", scope: !6444, file: !183, line: 993, baseType: !6702, size: 64, offset: 3776)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "inherits", scope: !6444, file: !183, line: 999, baseType: !6837, size: 64, offset: 3840)
!6837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6838, size: 64)
!6838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6444)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !989, file: !183, line: 814, baseType: !1020, size: 64, offset: 128)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !989, file: !183, line: 817, baseType: !986, size: 64, offset: 192)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "pflags", scope: !989, file: !183, line: 819, baseType: !7, size: 32, offset: 256)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "print_id", scope: !989, file: !183, line: 820, baseType: !7, size: 32, offset: 288)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "local_port_no", scope: !989, file: !183, line: 821, baseType: !7, size: 32, offset: 320)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "port_no", scope: !989, file: !183, line: 822, baseType: !7, size: 32, offset: 352)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !989, file: !183, line: 825, baseType: !6846, size: 960, offset: 384)
!6846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ioports", file: !183, line: 578, size: 960, elements: !6847)
!6847 = !{!6848, !6849, !6850, !6851, !6852, !6853, !6854, !6855, !6856, !6857, !6858, !6859, !6860, !6861, !6862}
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_addr", scope: !6846, file: !183, line: 579, baseType: !983, size: 64)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !6846, file: !183, line: 580, baseType: !983, size: 64, offset: 64)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "error_addr", scope: !6846, file: !183, line: 581, baseType: !983, size: 64, offset: 128)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "feature_addr", scope: !6846, file: !183, line: 582, baseType: !983, size: 64, offset: 192)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "nsect_addr", scope: !6846, file: !183, line: 583, baseType: !983, size: 64, offset: 256)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "lbal_addr", scope: !6846, file: !183, line: 584, baseType: !983, size: 64, offset: 320)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "lbam_addr", scope: !6846, file: !183, line: 585, baseType: !983, size: 64, offset: 384)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "lbah_addr", scope: !6846, file: !183, line: 586, baseType: !983, size: 64, offset: 448)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "device_addr", scope: !6846, file: !183, line: 587, baseType: !983, size: 64, offset: 512)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "status_addr", scope: !6846, file: !183, line: 588, baseType: !983, size: 64, offset: 576)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "command_addr", scope: !6846, file: !183, line: 589, baseType: !983, size: 64, offset: 640)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "altstatus_addr", scope: !6846, file: !183, line: 590, baseType: !983, size: 64, offset: 704)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_addr", scope: !6846, file: !183, line: 591, baseType: !983, size: 64, offset: 768)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_addr", scope: !6846, file: !183, line: 593, baseType: !983, size: 64, offset: 832)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "scr_addr", scope: !6846, file: !183, line: 595, baseType: !983, size: 64, offset: 896)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !989, file: !183, line: 826, baseType: !1203, size: 8, offset: 1344)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "last_ctl", scope: !989, file: !183, line: 827, baseType: !1203, size: 8, offset: 1352)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task_link", scope: !989, file: !183, line: 828, baseType: !6459, size: 64, offset: 1408)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task", scope: !989, file: !183, line: 829, baseType: !3787, size: 704, offset: 1472)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd", scope: !989, file: !183, line: 831, baseType: !6868, size: 64, offset: 2176)
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6869, size: 64)
!6869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_bmdma_prd", file: !449, line: 546, size: 64, elements: !6870)
!6870 = !{!6871, !6873}
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6869, file: !449, line: 547, baseType: !6872, size: 32)
!6872 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !1824, line: 31, baseType: !1050)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "flags_len", scope: !6869, file: !449, line: 548, baseType: !6872, size: 32, offset: 32)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd_dma", scope: !989, file: !183, line: 832, baseType: !4996, size: 64, offset: 2240)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !989, file: !183, line: 836, baseType: !7, size: 32, offset: 2304)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !989, file: !183, line: 837, baseType: !7, size: 32, offset: 2336)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !989, file: !183, line: 838, baseType: !7, size: 32, offset: 2368)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "cbl", scope: !989, file: !183, line: 839, baseType: !7, size: 32, offset: 2400)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "qcmd", scope: !989, file: !183, line: 841, baseType: !6880, size: 63360, offset: 2432)
!6880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6451, size: 63360, elements: !6881)
!6881 = !{!6882}
!6882 = !DISubrange(count: 33)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "sas_tag_allocated", scope: !989, file: !183, line: 842, baseType: !986, size: 64, offset: 65792)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "qc_active", scope: !989, file: !183, line: 843, baseType: !976, size: 64, offset: 65856)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_links", scope: !989, file: !183, line: 844, baseType: !211, size: 32, offset: 65920)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "sas_last_tag", scope: !989, file: !183, line: 845, baseType: !7, size: 32, offset: 65952)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !989, file: !183, line: 847, baseType: !6460, size: 41984, offset: 66048)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "slave_link", scope: !989, file: !183, line: 848, baseType: !6459, size: 64, offset: 108032)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pmp_links", scope: !989, file: !183, line: 850, baseType: !211, size: 32, offset: 108096)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_link", scope: !989, file: !183, line: 851, baseType: !6459, size: 64, offset: 108160)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "excl_link", scope: !989, file: !183, line: 852, baseType: !6459, size: 64, offset: 108224)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !989, file: !183, line: 854, baseType: !6893, size: 192, offset: 108288)
!6893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_stats", file: !183, line: 656, size: 192, elements: !6894)
!6894 = !{!6895, !6896, !6897}
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "unhandled_irq", scope: !6893, file: !183, line: 657, baseType: !986, size: 64)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "idle_irq", scope: !6893, file: !183, line: 658, baseType: !986, size: 64, offset: 64)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "rw_reqbuf", scope: !6893, file: !183, line: 659, baseType: !986, size: 64, offset: 128)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !989, file: !183, line: 855, baseType: !6756, size: 64, offset: 108480)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !989, file: !183, line: 856, baseType: !2988, size: 64, offset: 108544)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !989, file: !183, line: 857, baseType: !2688, size: 5568, offset: 108608)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_scan_mutex", scope: !989, file: !183, line: 859, baseType: !1022, size: 192, offset: 114176)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_task", scope: !989, file: !183, line: 860, baseType: !3787, size: 704, offset: 114368)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_rescan_task", scope: !989, file: !183, line: 861, baseType: !2278, size: 256, offset: 115072)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "hsm_task_state", scope: !989, file: !183, line: 863, baseType: !7, size: 32, offset: 115328)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !989, file: !183, line: 865, baseType: !1049, size: 32, offset: 115360)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "eh_done_q", scope: !989, file: !183, line: 866, baseType: !996, size: 128, offset: 115392)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "eh_wait_q", scope: !989, file: !183, line: 867, baseType: !1873, size: 128, offset: 115520)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "eh_tries", scope: !989, file: !183, line: 868, baseType: !211, size: 32, offset: 115648)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "park_req_pending", scope: !989, file: !183, line: 869, baseType: !2338, size: 192, offset: 115712)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "pm_mesg", scope: !989, file: !183, line: 871, baseType: !3103, size: 32, offset: 115904)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "target_lpm_policy", scope: !989, file: !183, line: 872, baseType: !197, size: 32, offset: 115936)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_timer", scope: !989, file: !183, line: 874, baseType: !3180, size: 320, offset: 115968)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_cnt", scope: !989, file: !183, line: 875, baseType: !986, size: 64, offset: 116288)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !989, file: !183, line: 877, baseType: !6915, size: 64, offset: 116352)
!6915 = !DIDerivedType(tag: DW_TAG_typedef, name: "async_cookie_t", file: !6916, line: 16, baseType: !976)
!6916 = !DIFile(filename: "./include/linux/async.h", directory: "/home/lizy2001/genbc/linux")
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "em_message_type", scope: !989, file: !183, line: 879, baseType: !211, size: 32, offset: 116416)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !989, file: !183, line: 880, baseType: !983, size: 64, offset: 116480)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "__acpi_init_gtm", scope: !989, file: !183, line: 883, baseType: !6920, size: 160, offset: 116544)
!6920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_gtm", file: !183, line: 778, size: 160, elements: !6921)
!6921 = !{!6922, !6928}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "drive", scope: !6920, file: !183, line: 779, baseType: !6923, size: 128)
!6923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6924, size: 128, elements: !2073)
!6924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_drive", file: !183, line: 772, size: 64, elements: !6925)
!6925 = !{!6926, !6927}
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "pio", scope: !6924, file: !183, line: 774, baseType: !1049, size: 32)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !6924, file: !183, line: 775, baseType: !1049, size: 32, offset: 32)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6920, file: !183, line: 780, baseType: !1049, size: 32, offset: 128)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "sector_buf", scope: !989, file: !183, line: 886, baseType: !6930, size: 4096, align: 512, offset: 116736)
!6930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 4096, elements: !6931)
!6931 = !{!6932}
!6932 = !DISubrange(count: 512)
!6933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!6934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6935, size: 64)
!6935 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1439)
!6936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!6937 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le64", file: !1824, line: 33, baseType: !978)
!6938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6939, size: 64)
!6939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !1824, line: 32, baseType: !1050)
!6940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !1824, line: 30, baseType: !1727)
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!6944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6872, size: 64)
!6945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6946, size: 64)
!6946 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !1824, line: 29, baseType: !1727)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 64)
!6948 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !1824, line: 34, baseType: !978)
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 64)
!6950 = !{!0, !6951, !6954, !6956, !6961, !6965, !6968, !6976, !6980, !6992, !6995, !6998, !7002, !7005}
!6951 = !DIGlobalVariableExpression(var: !6952, expr: !DIExpression())
!6952 = distinct !DIGlobalVariable(name: "ata_common_sdev_attrs", scope: !2, file: !3, line: 239, type: !6953, isLocal: false, isDefinition: true)
!6953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6316, size: 128, elements: !2073)
!6954 = !DIGlobalVariableExpression(var: !6955, expr: !DIExpression())
!6955 = distinct !DIGlobalVariable(name: "ata_scsi_rbuf_lock", scope: !2, file: !3, line: 42, type: !1004, isLocal: true, isDefinition: true)
!6956 = !DIGlobalVariableExpression(var: !6957, expr: !DIExpression())
!6957 = distinct !DIGlobalVariable(name: "ata_scsi_rbuf", scope: !2, file: !3, line: 43, type: !6958, isLocal: true, isDefinition: true)
!6958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 4608, elements: !6959)
!6959 = !{!6960}
!6960 = !DISubrange(count: 576)
!6961 = !DIGlobalVariableExpression(var: !6962, expr: !DIExpression())
!6962 = distinct !DIGlobalVariable(name: "def_cache_mpage", scope: !2, file: !3, line: 70, type: !6963, isLocal: true, isDefinition: true)
!6963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6964, size: 160, elements: !5864)
!6964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!6965 = !DIGlobalVariableExpression(var: !6966, expr: !DIExpression())
!6966 = distinct !DIGlobalVariable(name: "def_control_mpage", scope: !2, file: !3, line: 79, type: !6967, isLocal: true, isDefinition: true)
!6967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6964, size: 96, elements: !5897)
!6968 = !DIGlobalVariableExpression(var: !6969, expr: !DIExpression())
!6969 = distinct !DIGlobalVariable(name: "sense_table", scope: !6970, file: !3, line: 725, type: !6973, isLocal: true, isDefinition: true)
!6970 = distinct !DISubprogram(name: "ata_to_sense_error", scope: !3, file: !3, line: 719, type: !6971, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!6971 = !DISubroutineType(types: !6972)
!6972 = !{null, !7, !1203, !1203, !6537, !6537, !6537, !211}
!6973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 448, elements: !6974)
!6974 = !{!6975, !2034}
!6975 = !DISubrange(count: 14)
!6976 = !DIGlobalVariableExpression(var: !6977, expr: !DIExpression())
!6977 = distinct !DIGlobalVariable(name: "stat_table", scope: !6970, file: !3, line: 768, type: !6978, isLocal: true, isDefinition: true)
!6978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 192, elements: !6979)
!6979 = !{!2143, !2034}
!6980 = !DIGlobalVariableExpression(var: !6981, expr: !DIExpression())
!6981 = distinct !DIGlobalVariable(name: "versions", scope: !6982, file: !3, line: 1861, type: !6991, isLocal: true, isDefinition: true)
!6982 = distinct !DISubprogram(name: "ata_scsiop_inq_std", scope: !3, file: !3, line: 1859, type: !6983, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!7, !6985, !6537}
!6985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6986, size: 64)
!6986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_scsi_args", file: !3, line: 1764, size: 192, elements: !6987)
!6987 = !{!6988, !6989, !6990}
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6986, file: !3, line: 1765, baseType: !6455, size: 64)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6986, file: !3, line: 1766, baseType: !6696, size: 64, offset: 64)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6986, file: !3, line: 1767, baseType: !6139, size: 64, offset: 128)
!6991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6964, size: 48, elements: !2142)
!6992 = !DIGlobalVariableExpression(var: !6993, expr: !DIExpression())
!6993 = distinct !DIGlobalVariable(name: "versions_zbc", scope: !6982, file: !3, line: 1871, type: !6994, isLocal: true, isDefinition: true)
!6994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6964, size: 64, elements: !1168)
!6995 = !DIGlobalVariableExpression(var: !6996, expr: !DIExpression())
!6996 = distinct !DIGlobalVariable(name: "pages", scope: !6997, file: !3, line: 1943, type: !6994, isLocal: true, isDefinition: true)
!6997 = distinct !DISubprogram(name: "ata_scsiop_inq_00", scope: !3, file: !3, line: 1940, type: !6983, scopeLine: 1941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!6998 = !DIGlobalVariableExpression(var: !6999, expr: !DIExpression())
!6999 = distinct !DIGlobalVariable(name: "hdr", scope: !7000, file: !3, line: 1974, type: !7001, isLocal: true, isDefinition: true)
!7000 = distinct !DISubprogram(name: "ata_scsiop_inq_80", scope: !3, file: !3, line: 1972, type: !6983, scopeLine: 1973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6964, size: 32, elements: !2033)
!7002 = !DIGlobalVariableExpression(var: !7003, expr: !DIExpression())
!7003 = distinct !DIGlobalVariable(name: "sat_blk_desc", scope: !7004, file: !3, line: 2298, type: !6994, isLocal: true, isDefinition: true)
!7004 = distinct !DISubprogram(name: "ata_scsiop_mode_sense", scope: !3, file: !3, line: 2294, type: !6983, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7005 = !DIGlobalVariableExpression(var: !7006, expr: !DIExpression())
!7006 = distinct !DIGlobalVariable(name: "def_rw_recovery_mpage", scope: !2, file: !3, line: 60, type: !6967, isLocal: true, isDefinition: true)
!7007 = !{!"rsp"}
!7008 = !{i32 7, !"Dwarf Version", i32 4}
!7009 = !{i32 2, !"Debug Info Version", i32 3}
!7010 = !{i32 1, !"wchar_size", i32 2}
!7011 = !{i32 1, !"Code Model", i32 2}
!7012 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7013 = distinct !DISubprogram(name: "ata_scsi_park_show", scope: !3, file: !3, line: 88, type: !6322, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7014 = !DILocalVariable(name: "lock", arg: 1, scope: !7015, file: !7016, line: 402, type: !1020)
!7015 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !7016, file: !7016, line: 402, type: !7017, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7016 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7017 = !DISubroutineType(types: !7018)
!7018 = !{null, !1020}
!7019 = !DILocation(line: 402, column: 57, scope: !7015, inlinedAt: !7020)
!7020 = distinct !DILocation(line: 122, column: 2, scope: !7013)
!7021 = !DILocalVariable(name: "lock", arg: 1, scope: !7022, file: !7016, line: 377, type: !1020)
!7022 = distinct !DISubprogram(name: "spin_lock_irq", scope: !7016, file: !7016, line: 377, type: !7017, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7023 = !DILocation(line: 377, column: 55, scope: !7022, inlinedAt: !7024)
!7024 = distinct !DILocation(line: 101, column: 2, scope: !7013)
!7025 = !DILocalVariable(name: "device", arg: 1, scope: !7013, file: !3, line: 88, type: !2988)
!7026 = !DILocation(line: 88, column: 50, scope: !7013)
!7027 = !DILocalVariable(name: "attr", arg: 2, scope: !7013, file: !3, line: 89, type: !6316)
!7028 = !DILocation(line: 89, column: 32, scope: !7013)
!7029 = !DILocalVariable(name: "buf", arg: 3, scope: !7013, file: !3, line: 89, type: !1463)
!7030 = !DILocation(line: 89, column: 44, scope: !7013)
!7031 = !DILocalVariable(name: "sdev", scope: !7013, file: !3, line: 91, type: !5987)
!7032 = !DILocation(line: 91, column: 22, scope: !7013)
!7033 = !DILocalVariable(name: "__mptr", scope: !7034, file: !3, line: 91, type: !983)
!7034 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 91, column: 29)
!7035 = !DILocation(line: 91, column: 29, scope: !7034)
!7036 = !DILocation(line: 91, column: 29, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 91, column: 29)
!7038 = !DILocalVariable(name: "ap", scope: !7013, file: !3, line: 92, type: !988)
!7039 = !DILocation(line: 92, column: 19, scope: !7013)
!7040 = !DILocalVariable(name: "link", scope: !7013, file: !3, line: 93, type: !6459)
!7041 = !DILocation(line: 93, column: 19, scope: !7013)
!7042 = !DILocalVariable(name: "dev", scope: !7013, file: !3, line: 94, type: !6455)
!7043 = !DILocation(line: 94, column: 21, scope: !7013)
!7044 = !DILocalVariable(name: "now", scope: !7013, file: !3, line: 95, type: !986)
!7045 = !DILocation(line: 95, column: 16, scope: !7013)
!7046 = !DILocalVariable(name: "msecs", scope: !7013, file: !3, line: 96, type: !7)
!7047 = !DILocation(line: 96, column: 15, scope: !7013)
!7048 = !DILocalVariable(name: "rc", scope: !7013, file: !3, line: 97, type: !211)
!7049 = !DILocation(line: 97, column: 6, scope: !7013)
!7050 = !DILocation(line: 99, column: 25, scope: !7013)
!7051 = !DILocation(line: 99, column: 31, scope: !7013)
!7052 = !DILocation(line: 99, column: 7, scope: !7013)
!7053 = !DILocation(line: 99, column: 5, scope: !7013)
!7054 = !DILocation(line: 101, column: 16, scope: !7013)
!7055 = !DILocation(line: 101, column: 20, scope: !7013)
!7056 = !DILocation(line: 379, column: 2, scope: !7057, inlinedAt: !7024)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !7016, line: 379, column: 2)
!7058 = distinct !DILexicalBlock(scope: !7022, file: !7016, line: 379, column: 2)
!7059 = !DILocation(line: 379, column: 2, scope: !7060, inlinedAt: !7024)
!7060 = distinct !DILexicalBlock(scope: !7058, file: !7016, line: 379, column: 2)
!7061 = !{i32 -2145428614}
!7062 = !DILocation(line: 379, column: 2, scope: !7063, inlinedAt: !7024)
!7063 = distinct !DILexicalBlock(scope: !7060, file: !7016, line: 379, column: 2)
!7064 = !DILocation(line: 102, column: 26, scope: !7013)
!7065 = !DILocation(line: 102, column: 30, scope: !7013)
!7066 = !DILocation(line: 102, column: 8, scope: !7013)
!7067 = !DILocation(line: 102, column: 6, scope: !7013)
!7068 = !DILocation(line: 103, column: 7, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 103, column: 6)
!7070 = !DILocation(line: 103, column: 6, scope: !7013)
!7071 = !DILocation(line: 104, column: 6, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 103, column: 12)
!7073 = !DILocation(line: 105, column: 3, scope: !7072)
!7074 = !DILocation(line: 107, column: 6, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 107, column: 6)
!7076 = !DILocation(line: 107, column: 11, scope: !7075)
!7077 = !DILocation(line: 107, column: 17, scope: !7075)
!7078 = !DILocation(line: 107, column: 6, scope: !7013)
!7079 = !DILocation(line: 108, column: 6, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 107, column: 40)
!7081 = !DILocation(line: 109, column: 3, scope: !7080)
!7082 = !DILocation(line: 112, column: 9, scope: !7013)
!7083 = !DILocation(line: 112, column: 14, scope: !7013)
!7084 = !DILocation(line: 112, column: 7, scope: !7013)
!7085 = !DILocation(line: 113, column: 8, scope: !7013)
!7086 = !DILocation(line: 113, column: 6, scope: !7013)
!7087 = !DILocation(line: 114, column: 6, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 114, column: 6)
!7089 = !DILocation(line: 114, column: 10, scope: !7088)
!7090 = !DILocation(line: 114, column: 17, scope: !7088)
!7091 = !DILocation(line: 114, column: 44, scope: !7088)
!7092 = !DILocation(line: 115, column: 6, scope: !7088)
!7093 = !DILocation(line: 115, column: 12, scope: !7088)
!7094 = !DILocation(line: 115, column: 23, scope: !7088)
!7095 = !DILocation(line: 115, column: 45, scope: !7088)
!7096 = !DILocation(line: 115, column: 50, scope: !7088)
!7097 = !DILocation(line: 115, column: 42, scope: !7088)
!7098 = !DILocation(line: 115, column: 37, scope: !7088)
!7099 = !DILocation(line: 115, column: 57, scope: !7088)
!7100 = !DILocation(line: 116, column: 6, scope: !7088)
!7101 = !DILocation(line: 114, column: 6, scope: !7013)
!7102 = !DILocation(line: 117, column: 28, scope: !7088)
!7103 = !DILocation(line: 117, column: 33, scope: !7088)
!7104 = !DILocation(line: 117, column: 51, scope: !7088)
!7105 = !DILocation(line: 117, column: 49, scope: !7088)
!7106 = !DILocation(line: 117, column: 11, scope: !7088)
!7107 = !DILocation(line: 117, column: 9, scope: !7088)
!7108 = !DILocation(line: 117, column: 3, scope: !7088)
!7109 = !DILocation(line: 119, column: 9, scope: !7088)
!7110 = !DILabel(scope: !7013, name: "unlock", file: !3, line: 121)
!7111 = !DILocation(line: 121, column: 1, scope: !7013)
!7112 = !DILocation(line: 122, column: 18, scope: !7013)
!7113 = !DILocation(line: 122, column: 22, scope: !7013)
!7114 = !DILocation(line: 404, column: 2, scope: !7115, inlinedAt: !7020)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !7016, line: 404, column: 2)
!7116 = distinct !DILexicalBlock(scope: !7015, file: !7016, line: 404, column: 2)
!7117 = !DILocation(line: 404, column: 2, scope: !7118, inlinedAt: !7020)
!7118 = distinct !DILexicalBlock(scope: !7116, file: !7016, line: 404, column: 2)
!7119 = !{i32 -2145426866}
!7120 = !DILocation(line: 404, column: 2, scope: !7121, inlinedAt: !7020)
!7121 = distinct !DILexicalBlock(scope: !7118, file: !7016, line: 404, column: 2)
!7122 = !DILocation(line: 124, column: 9, scope: !7013)
!7123 = !DILocation(line: 124, column: 14, scope: !7013)
!7124 = !DILocation(line: 124, column: 28, scope: !7013)
!7125 = !DILocation(line: 124, column: 45, scope: !7013)
!7126 = !DILocation(line: 124, column: 19, scope: !7013)
!7127 = !DILocation(line: 124, column: 2, scope: !7013)
!7128 = distinct !DISubprogram(name: "ata_scsi_park_store", scope: !3, file: !3, line: 127, type: !6326, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7129 = !DILocalVariable(name: "lock", arg: 1, scope: !7130, file: !7016, line: 407, type: !1020)
!7130 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !7016, file: !7016, line: 407, type: !7131, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{null, !1020, !986}
!7133 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !7134)
!7134 = distinct !DILocation(line: 183, column: 2, scope: !7128)
!7135 = !DILocalVariable(name: "flags", arg: 2, scope: !7130, file: !7016, line: 407, type: !986)
!7136 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !7134)
!7137 = !DILocalVariable(name: "lock", arg: 1, scope: !7138, file: !7016, line: 327, type: !1020)
!7138 = distinct !DISubprogram(name: "spinlock_check", scope: !7016, file: !7016, line: 327, type: !7139, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{!7141, !1020}
!7141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!7142 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !7143)
!7143 = distinct !DILocation(line: 150, column: 2, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 150, column: 2)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 150, column: 2)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 150, column: 2)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 150, column: 2)
!7148 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 150, column: 2)
!7149 = !DILocalVariable(name: "device", arg: 1, scope: !7128, file: !3, line: 127, type: !2988)
!7150 = !DILocation(line: 127, column: 51, scope: !7128)
!7151 = !DILocalVariable(name: "attr", arg: 2, scope: !7128, file: !3, line: 128, type: !6316)
!7152 = !DILocation(line: 128, column: 33, scope: !7128)
!7153 = !DILocalVariable(name: "buf", arg: 3, scope: !7128, file: !3, line: 129, type: !1437)
!7154 = !DILocation(line: 129, column: 20, scope: !7128)
!7155 = !DILocalVariable(name: "len", arg: 4, scope: !7128, file: !3, line: 129, type: !1631)
!7156 = !DILocation(line: 129, column: 32, scope: !7128)
!7157 = !DILocalVariable(name: "sdev", scope: !7128, file: !3, line: 131, type: !5987)
!7158 = !DILocation(line: 131, column: 22, scope: !7128)
!7159 = !DILocalVariable(name: "__mptr", scope: !7160, file: !3, line: 131, type: !983)
!7160 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 131, column: 29)
!7161 = !DILocation(line: 131, column: 29, scope: !7160)
!7162 = !DILocation(line: 131, column: 29, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 131, column: 29)
!7164 = !DILocalVariable(name: "ap", scope: !7128, file: !3, line: 132, type: !988)
!7165 = !DILocation(line: 132, column: 19, scope: !7128)
!7166 = !DILocalVariable(name: "dev", scope: !7128, file: !3, line: 133, type: !6455)
!7167 = !DILocation(line: 133, column: 21, scope: !7128)
!7168 = !DILocalVariable(name: "input", scope: !7128, file: !3, line: 134, type: !944)
!7169 = !DILocation(line: 134, column: 11, scope: !7128)
!7170 = !DILocalVariable(name: "flags", scope: !7128, file: !3, line: 135, type: !986)
!7171 = !DILocation(line: 135, column: 16, scope: !7128)
!7172 = !DILocalVariable(name: "rc", scope: !7128, file: !3, line: 136, type: !211)
!7173 = !DILocation(line: 136, column: 6, scope: !7128)
!7174 = !DILocation(line: 138, column: 15, scope: !7128)
!7175 = !DILocation(line: 138, column: 7, scope: !7128)
!7176 = !DILocation(line: 138, column: 5, scope: !7128)
!7177 = !DILocation(line: 139, column: 6, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 139, column: 6)
!7179 = !DILocation(line: 139, column: 6, scope: !7128)
!7180 = !DILocation(line: 140, column: 10, scope: !7178)
!7181 = !DILocation(line: 140, column: 3, scope: !7178)
!7182 = !DILocation(line: 141, column: 6, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 141, column: 6)
!7184 = !DILocation(line: 141, column: 12, scope: !7183)
!7185 = !DILocation(line: 141, column: 6, scope: !7128)
!7186 = !DILocation(line: 142, column: 3, scope: !7183)
!7187 = !DILocation(line: 143, column: 6, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 143, column: 6)
!7189 = !DILocation(line: 143, column: 12, scope: !7188)
!7190 = !DILocation(line: 143, column: 6, scope: !7128)
!7191 = !DILocation(line: 144, column: 6, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 143, column: 34)
!7193 = !DILocation(line: 145, column: 9, scope: !7192)
!7194 = !DILocation(line: 146, column: 2, scope: !7192)
!7195 = !DILocation(line: 148, column: 25, scope: !7128)
!7196 = !DILocation(line: 148, column: 31, scope: !7128)
!7197 = !DILocation(line: 148, column: 7, scope: !7128)
!7198 = !DILocation(line: 148, column: 5, scope: !7128)
!7199 = !DILocation(line: 150, column: 2, scope: !7128)
!7200 = !DILocation(line: 150, column: 2, scope: !7148)
!7201 = !DILocalVariable(name: "__dummy", scope: !7202, file: !3, line: 150, type: !986)
!7202 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 150, column: 2)
!7203 = !DILocation(line: 150, column: 2, scope: !7202)
!7204 = !DILocalVariable(name: "__dummy2", scope: !7202, file: !3, line: 150, type: !986)
!7205 = !DILocation(line: 150, column: 2, scope: !7147)
!7206 = !DILocation(line: 150, column: 2, scope: !7146)
!7207 = !DILocation(line: 150, column: 2, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 150, column: 2)
!7209 = !DILocalVariable(name: "__dummy", scope: !7210, file: !3, line: 150, type: !986)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 150, column: 2)
!7211 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 150, column: 2)
!7212 = !DILocation(line: 150, column: 2, scope: !7210)
!7213 = !DILocalVariable(name: "__dummy2", scope: !7210, file: !3, line: 150, type: !986)
!7214 = !DILocation(line: 150, column: 2, scope: !7211)
!7215 = !DILocation(line: 150, column: 2, scope: !7145)
!7216 = !{i32 -2139717601}
!7217 = !DILocation(line: 150, column: 2, scope: !7144)
!7218 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !7143)
!7219 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !7143)
!7220 = !DILocation(line: 151, column: 26, scope: !7128)
!7221 = !DILocation(line: 151, column: 30, scope: !7128)
!7222 = !DILocation(line: 151, column: 8, scope: !7128)
!7223 = !DILocation(line: 151, column: 6, scope: !7128)
!7224 = !DILocation(line: 152, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 152, column: 6)
!7226 = !DILocation(line: 152, column: 6, scope: !7128)
!7227 = !DILocation(line: 153, column: 6, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 152, column: 22)
!7229 = !DILocation(line: 154, column: 3, scope: !7228)
!7230 = !DILocation(line: 156, column: 6, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 156, column: 6)
!7232 = !DILocation(line: 156, column: 11, scope: !7231)
!7233 = !DILocation(line: 156, column: 17, scope: !7231)
!7234 = !DILocation(line: 156, column: 32, scope: !7231)
!7235 = !DILocation(line: 157, column: 6, scope: !7231)
!7236 = !DILocation(line: 157, column: 11, scope: !7231)
!7237 = !DILocation(line: 157, column: 17, scope: !7231)
!7238 = !DILocation(line: 156, column: 6, scope: !7128)
!7239 = !DILocation(line: 158, column: 6, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 157, column: 33)
!7241 = !DILocation(line: 159, column: 3, scope: !7240)
!7242 = !DILocation(line: 162, column: 6, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 162, column: 6)
!7244 = !DILocation(line: 162, column: 12, scope: !7243)
!7245 = !DILocation(line: 162, column: 6, scope: !7128)
!7246 = !DILocation(line: 163, column: 7, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 163, column: 7)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 162, column: 18)
!7249 = !DILocation(line: 163, column: 12, scope: !7247)
!7250 = !DILocation(line: 163, column: 18, scope: !7247)
!7251 = !DILocation(line: 163, column: 7, scope: !7248)
!7252 = !DILocation(line: 164, column: 7, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 163, column: 41)
!7254 = !DILocation(line: 165, column: 4, scope: !7253)
!7255 = !DILocation(line: 168, column: 39, scope: !7248)
!7256 = !DILocation(line: 168, column: 48, scope: !7248)
!7257 = !DILocation(line: 168, column: 26, scope: !7248)
!7258 = !DILocation(line: 168, column: 3, scope: !7248)
!7259 = !DILocation(line: 168, column: 8, scope: !7248)
!7260 = !DILocation(line: 168, column: 24, scope: !7248)
!7261 = !DILocation(line: 169, column: 3, scope: !7248)
!7262 = !DILocation(line: 169, column: 8, scope: !7248)
!7263 = !DILocation(line: 169, column: 14, scope: !7248)
!7264 = !DILocation(line: 169, column: 22, scope: !7248)
!7265 = !DILocation(line: 169, column: 33, scope: !7248)
!7266 = !DILocation(line: 169, column: 38, scope: !7248)
!7267 = !DILocation(line: 169, column: 45, scope: !7248)
!7268 = !DILocation(line: 170, column: 24, scope: !7248)
!7269 = !DILocation(line: 170, column: 3, scope: !7248)
!7270 = !DILocation(line: 171, column: 13, scope: !7248)
!7271 = !DILocation(line: 171, column: 17, scope: !7248)
!7272 = !DILocation(line: 171, column: 3, scope: !7248)
!7273 = !DILocation(line: 172, column: 2, scope: !7248)
!7274 = !DILocation(line: 173, column: 11, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 172, column: 9)
!7276 = !DILocation(line: 173, column: 3, scope: !7275)
!7277 = !DILocation(line: 175, column: 4, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 173, column: 18)
!7279 = !DILocation(line: 175, column: 9, scope: !7278)
!7280 = !DILocation(line: 175, column: 15, scope: !7278)
!7281 = !DILocation(line: 176, column: 4, scope: !7278)
!7282 = !DILocation(line: 178, column: 4, scope: !7278)
!7283 = !DILocation(line: 178, column: 9, scope: !7278)
!7284 = !DILocation(line: 178, column: 15, scope: !7278)
!7285 = !DILocation(line: 179, column: 4, scope: !7278)
!7286 = !DILocation(line: 162, column: 15, scope: !7243)
!7287 = !DILabel(scope: !7128, name: "unlock", file: !3, line: 182)
!7288 = !DILocation(line: 182, column: 1, scope: !7128)
!7289 = !DILocation(line: 183, column: 25, scope: !7128)
!7290 = !DILocation(line: 183, column: 29, scope: !7128)
!7291 = !DILocation(line: 183, column: 35, scope: !7128)
!7292 = !DILocalVariable(name: "__dummy", scope: !7293, file: !7016, line: 409, type: !986)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !7016, line: 409, column: 2)
!7294 = distinct !DILexicalBlock(scope: !7130, file: !7016, line: 409, column: 2)
!7295 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !7134)
!7296 = !DILocalVariable(name: "__dummy2", scope: !7293, file: !7016, line: 409, type: !986)
!7297 = !DILocalVariable(name: "__dummy", scope: !7298, file: !7016, line: 409, type: !986)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !7016, line: 409, column: 2)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !7016, line: 409, column: 2)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !7016, line: 409, column: 2)
!7301 = distinct !DILexicalBlock(scope: !7294, file: !7016, line: 409, column: 2)
!7302 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !7134)
!7303 = !DILocalVariable(name: "__dummy2", scope: !7298, file: !7016, line: 409, type: !986)
!7304 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !7134)
!7305 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !7134)
!7306 = distinct !DILexicalBlock(scope: !7301, file: !7016, line: 409, column: 2)
!7307 = !{i32 -2145425822}
!7308 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !7134)
!7309 = distinct !DILexicalBlock(scope: !7306, file: !7016, line: 409, column: 2)
!7310 = !DILocation(line: 185, column: 9, scope: !7128)
!7311 = !DILocation(line: 185, column: 14, scope: !7128)
!7312 = !DILocation(line: 185, column: 19, scope: !7128)
!7313 = !DILocation(line: 185, column: 2, scope: !7128)
!7314 = !DILocation(line: 186, column: 1, scope: !7128)
!7315 = distinct !DISubprogram(name: "ata_scsi_set_sense", scope: !3, file: !3, line: 191, type: !7316, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{null, !6455, !6139, !1203, !1203, !1203}
!7318 = !DILocalVariable(name: "dev", arg: 1, scope: !7315, file: !3, line: 191, type: !6455)
!7319 = !DILocation(line: 191, column: 44, scope: !7315)
!7320 = !DILocalVariable(name: "cmd", arg: 2, scope: !7315, file: !3, line: 191, type: !6139)
!7321 = !DILocation(line: 191, column: 67, scope: !7315)
!7322 = !DILocalVariable(name: "sk", arg: 3, scope: !7315, file: !3, line: 192, type: !1203)
!7323 = !DILocation(line: 192, column: 7, scope: !7315)
!7324 = !DILocalVariable(name: "asc", arg: 4, scope: !7315, file: !3, line: 192, type: !1203)
!7325 = !DILocation(line: 192, column: 14, scope: !7315)
!7326 = !DILocalVariable(name: "ascq", arg: 5, scope: !7315, file: !3, line: 192, type: !1203)
!7327 = !DILocation(line: 192, column: 22, scope: !7315)
!7328 = !DILocalVariable(name: "d_sense", scope: !7315, file: !3, line: 194, type: !1482)
!7329 = !DILocation(line: 194, column: 7, scope: !7315)
!7330 = !DILocation(line: 194, column: 18, scope: !7315)
!7331 = !DILocation(line: 194, column: 23, scope: !7315)
!7332 = !DILocation(line: 194, column: 29, scope: !7315)
!7333 = !DILocation(line: 194, column: 17, scope: !7315)
!7334 = !DILocation(line: 196, column: 7, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 196, column: 6)
!7336 = !DILocation(line: 196, column: 6, scope: !7315)
!7337 = !DILocation(line: 197, column: 3, scope: !7335)
!7338 = !DILocation(line: 199, column: 2, scope: !7315)
!7339 = !DILocation(line: 199, column: 7, scope: !7315)
!7340 = !DILocation(line: 199, column: 14, scope: !7315)
!7341 = !DILocation(line: 201, column: 26, scope: !7315)
!7342 = !DILocation(line: 201, column: 35, scope: !7315)
!7343 = !DILocation(line: 201, column: 40, scope: !7315)
!7344 = !DILocation(line: 201, column: 54, scope: !7315)
!7345 = !DILocation(line: 201, column: 58, scope: !7315)
!7346 = !DILocation(line: 201, column: 63, scope: !7315)
!7347 = !DILocation(line: 201, column: 2, scope: !7315)
!7348 = !DILocation(line: 202, column: 1, scope: !7315)
!7349 = distinct !DISubprogram(name: "ata_scsi_set_sense_information", scope: !3, file: !3, line: 204, type: !7350, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{null, !6455, !6139, !6792}
!7352 = !DILocalVariable(name: "dev", arg: 1, scope: !7349, file: !3, line: 204, type: !6455)
!7353 = !DILocation(line: 204, column: 56, scope: !7349)
!7354 = !DILocalVariable(name: "cmd", arg: 2, scope: !7349, file: !3, line: 205, type: !6139)
!7355 = !DILocation(line: 205, column: 27, scope: !7349)
!7356 = !DILocalVariable(name: "tf", arg: 3, scope: !7349, file: !3, line: 206, type: !6792)
!7357 = !DILocation(line: 206, column: 36, scope: !7349)
!7358 = !DILocalVariable(name: "information", scope: !7349, file: !3, line: 208, type: !976)
!7359 = !DILocation(line: 208, column: 6, scope: !7349)
!7360 = !DILocation(line: 210, column: 7, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 210, column: 6)
!7362 = !DILocation(line: 210, column: 6, scope: !7349)
!7363 = !DILocation(line: 211, column: 3, scope: !7361)
!7364 = !DILocation(line: 213, column: 34, scope: !7349)
!7365 = !DILocation(line: 213, column: 38, scope: !7349)
!7366 = !DILocation(line: 213, column: 16, scope: !7349)
!7367 = !DILocation(line: 213, column: 14, scope: !7349)
!7368 = !DILocation(line: 214, column: 6, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 214, column: 6)
!7370 = !DILocation(line: 214, column: 18, scope: !7369)
!7371 = !DILocation(line: 214, column: 6, scope: !7349)
!7372 = !DILocation(line: 215, column: 3, scope: !7369)
!7373 = !DILocation(line: 217, column: 29, scope: !7349)
!7374 = !DILocation(line: 217, column: 34, scope: !7349)
!7375 = !DILocation(line: 218, column: 31, scope: !7349)
!7376 = !DILocation(line: 217, column: 2, scope: !7349)
!7377 = !DILocation(line: 219, column: 1, scope: !7349)
!7378 = distinct !DISubprogram(name: "ata_std_bios_param", scope: !3, file: !3, line: 263, type: !6272, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7379 = !DILocalVariable(name: "sdev", arg: 1, scope: !7378, file: !3, line: 263, type: !5987)
!7380 = !DILocation(line: 263, column: 44, scope: !7378)
!7381 = !DILocalVariable(name: "bdev", arg: 2, scope: !7378, file: !3, line: 263, type: !2639)
!7382 = !DILocation(line: 263, column: 71, scope: !7378)
!7383 = !DILocalVariable(name: "capacity", arg: 3, scope: !7378, file: !3, line: 264, type: !2660)
!7384 = !DILocation(line: 264, column: 19, scope: !7378)
!7385 = !DILocalVariable(name: "geom", arg: 4, scope: !7378, file: !3, line: 264, type: !1619)
!7386 = !DILocation(line: 264, column: 33, scope: !7378)
!7387 = !DILocation(line: 266, column: 2, scope: !7378)
!7388 = !DILocation(line: 266, column: 10, scope: !7378)
!7389 = !DILocation(line: 267, column: 2, scope: !7378)
!7390 = !DILocation(line: 267, column: 10, scope: !7378)
!7391 = !DILocalVariable(name: "__base", scope: !7392, file: !3, line: 268, type: !2120)
!7392 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 268, column: 2)
!7393 = !DILocation(line: 268, column: 2, scope: !7392)
!7394 = !DILocalVariable(name: "__rem", scope: !7392, file: !3, line: 268, type: !2120)
!7395 = !DILocation(line: 269, column: 12, scope: !7378)
!7396 = !DILocation(line: 269, column: 2, scope: !7378)
!7397 = !DILocation(line: 269, column: 10, scope: !7378)
!7398 = !DILocation(line: 271, column: 2, scope: !7378)
!7399 = distinct !DISubprogram(name: "ata_scsi_unlock_native_capacity", scope: !3, file: !3, line: 285, type: !6240, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7400 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 300, column: 2, scope: !7399)
!7402 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !7401)
!7403 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !7404)
!7404 = distinct !DILocation(line: 291, column: 2, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 291, column: 2)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 291, column: 2)
!7407 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 291, column: 2)
!7408 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 291, column: 2)
!7409 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 291, column: 2)
!7410 = !DILocalVariable(name: "sdev", arg: 1, scope: !7399, file: !3, line: 285, type: !5987)
!7411 = !DILocation(line: 285, column: 58, scope: !7399)
!7412 = !DILocalVariable(name: "ap", scope: !7399, file: !3, line: 287, type: !988)
!7413 = !DILocation(line: 287, column: 19, scope: !7399)
!7414 = !DILocation(line: 287, column: 42, scope: !7399)
!7415 = !DILocation(line: 287, column: 48, scope: !7399)
!7416 = !DILocation(line: 287, column: 24, scope: !7399)
!7417 = !DILocalVariable(name: "dev", scope: !7399, file: !3, line: 288, type: !6455)
!7418 = !DILocation(line: 288, column: 21, scope: !7399)
!7419 = !DILocalVariable(name: "flags", scope: !7399, file: !3, line: 289, type: !986)
!7420 = !DILocation(line: 289, column: 16, scope: !7399)
!7421 = !DILocation(line: 291, column: 2, scope: !7399)
!7422 = !DILocation(line: 291, column: 2, scope: !7409)
!7423 = !DILocalVariable(name: "__dummy", scope: !7424, file: !3, line: 291, type: !986)
!7424 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 291, column: 2)
!7425 = !DILocation(line: 291, column: 2, scope: !7424)
!7426 = !DILocalVariable(name: "__dummy2", scope: !7424, file: !3, line: 291, type: !986)
!7427 = !DILocation(line: 291, column: 2, scope: !7408)
!7428 = !DILocation(line: 291, column: 2, scope: !7407)
!7429 = !DILocation(line: 291, column: 2, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 291, column: 2)
!7431 = !DILocalVariable(name: "__dummy", scope: !7432, file: !3, line: 291, type: !986)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 291, column: 2)
!7433 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 291, column: 2)
!7434 = !DILocation(line: 291, column: 2, scope: !7432)
!7435 = !DILocalVariable(name: "__dummy2", scope: !7432, file: !3, line: 291, type: !986)
!7436 = !DILocation(line: 291, column: 2, scope: !7433)
!7437 = !DILocation(line: 291, column: 2, scope: !7406)
!7438 = !{i32 -2139713898}
!7439 = !DILocation(line: 291, column: 2, scope: !7405)
!7440 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !7404)
!7441 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !7404)
!7442 = !DILocation(line: 293, column: 26, scope: !7399)
!7443 = !DILocation(line: 293, column: 30, scope: !7399)
!7444 = !DILocation(line: 293, column: 8, scope: !7399)
!7445 = !DILocation(line: 293, column: 6, scope: !7399)
!7446 = !DILocation(line: 294, column: 6, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 294, column: 6)
!7448 = !DILocation(line: 294, column: 10, scope: !7447)
!7449 = !DILocation(line: 294, column: 13, scope: !7447)
!7450 = !DILocation(line: 294, column: 18, scope: !7447)
!7451 = !DILocation(line: 294, column: 30, scope: !7447)
!7452 = !DILocation(line: 294, column: 35, scope: !7447)
!7453 = !DILocation(line: 294, column: 28, scope: !7447)
!7454 = !DILocation(line: 294, column: 6, scope: !7399)
!7455 = !DILocation(line: 295, column: 3, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 294, column: 53)
!7457 = !DILocation(line: 295, column: 8, scope: !7456)
!7458 = !DILocation(line: 295, column: 14, scope: !7456)
!7459 = !DILocation(line: 296, column: 3, scope: !7456)
!7460 = !DILocation(line: 296, column: 8, scope: !7456)
!7461 = !DILocation(line: 296, column: 14, scope: !7456)
!7462 = !DILocation(line: 296, column: 22, scope: !7456)
!7463 = !DILocation(line: 296, column: 29, scope: !7456)
!7464 = !DILocation(line: 297, column: 24, scope: !7456)
!7465 = !DILocation(line: 297, column: 3, scope: !7456)
!7466 = !DILocation(line: 298, column: 2, scope: !7456)
!7467 = !DILocation(line: 300, column: 25, scope: !7399)
!7468 = !DILocation(line: 300, column: 29, scope: !7399)
!7469 = !DILocation(line: 300, column: 35, scope: !7399)
!7470 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !7401)
!7471 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !7401)
!7472 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !7401)
!7473 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !7401)
!7474 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !7401)
!7475 = !DILocation(line: 301, column: 19, scope: !7399)
!7476 = !DILocation(line: 301, column: 2, scope: !7399)
!7477 = !DILocation(line: 302, column: 1, scope: !7399)
!7478 = distinct !DISubprogram(name: "ata_shost_to_port", scope: !183, file: !183, line: 1818, type: !7479, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7479 = !DISubroutineType(types: !7480)
!7480 = !{!988, !992}
!7481 = !DILocalVariable(name: "host", arg: 1, scope: !7478, file: !183, line: 1818, type: !992)
!7482 = !DILocation(line: 1818, column: 68, scope: !7478)
!7483 = !DILocation(line: 1820, column: 31, scope: !7478)
!7484 = !DILocation(line: 1820, column: 37, scope: !7478)
!7485 = !DILocation(line: 1820, column: 9, scope: !7478)
!7486 = !DILocation(line: 1820, column: 2, scope: !7478)
!7487 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7488, file: !7488, line: 666, type: !7489, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7488 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7489 = !DISubroutineType(types: !7490)
!7490 = !{!986}
!7491 = !DILocalVariable(name: "f", scope: !7487, file: !7488, line: 668, type: !986)
!7492 = !DILocation(line: 668, column: 16, scope: !7487)
!7493 = !DILocation(line: 670, column: 6, scope: !7487)
!7494 = !DILocation(line: 670, column: 4, scope: !7487)
!7495 = !DILocation(line: 671, column: 2, scope: !7487)
!7496 = !DILocation(line: 672, column: 9, scope: !7487)
!7497 = !DILocation(line: 672, column: 2, scope: !7487)
!7498 = distinct !DISubprogram(name: "ata_scsi_find_dev", scope: !3, file: !3, line: 2796, type: !7499, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!6455, !988, !7501}
!7501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7502, size: 64)
!7502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5988)
!7503 = !DILocalVariable(name: "ap", arg: 1, scope: !7498, file: !3, line: 2796, type: !988)
!7504 = !DILocation(line: 2796, column: 36, scope: !7498)
!7505 = !DILocalVariable(name: "scsidev", arg: 2, scope: !7498, file: !3, line: 2796, type: !7501)
!7506 = !DILocation(line: 2796, column: 66, scope: !7498)
!7507 = !DILocalVariable(name: "dev", scope: !7498, file: !3, line: 2798, type: !6455)
!7508 = !DILocation(line: 2798, column: 21, scope: !7498)
!7509 = !DILocation(line: 2798, column: 47, scope: !7498)
!7510 = !DILocation(line: 2798, column: 51, scope: !7498)
!7511 = !DILocation(line: 2798, column: 27, scope: !7498)
!7512 = !DILocation(line: 2800, column: 6, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 2800, column: 6)
!7514 = !DILocation(line: 2800, column: 6, scope: !7498)
!7515 = !DILocation(line: 2801, column: 3, scope: !7513)
!7516 = !DILocation(line: 2803, column: 9, scope: !7498)
!7517 = !DILocation(line: 2803, column: 2, scope: !7498)
!7518 = !DILocation(line: 2804, column: 1, scope: !7498)
!7519 = distinct !DISubprogram(name: "ata_cmd_ioctl", scope: !3, file: !3, line: 356, type: !7520, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{!211, !5987, !983}
!7522 = !DILocalVariable(name: "addr", arg: 1, scope: !7523, file: !7524, line: 138, type: !2823)
!7523 = distinct !DISubprogram(name: "check_copy_size", scope: !7524, file: !7524, line: 138, type: !7525, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7524 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!7525 = !DISubroutineType(types: !7526)
!7526 = !{!1482, !2823, !1631, !1482}
!7527 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !7528)
!7528 = distinct !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !7534)
!7529 = distinct !DILexicalBlock(scope: !7531, file: !7530, line: 199, column: 6)
!7530 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!7531 = distinct !DISubprogram(name: "copy_to_user", scope: !7530, file: !7530, line: 197, type: !7532, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7532 = !DISubroutineType(types: !7533)
!7533 = !{!986, !983, !2823, !986}
!7534 = distinct !DILocation(line: 442, column: 6, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 441, column: 6)
!7536 = !DILocalVariable(name: "bytes", arg: 2, scope: !7523, file: !7524, line: 138, type: !1631)
!7537 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !7528)
!7538 = !DILocalVariable(name: "is_source", arg: 3, scope: !7523, file: !7524, line: 138, type: !1482)
!7539 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !7528)
!7540 = !DILocalVariable(name: "sz", scope: !7523, file: !7524, line: 140, type: !211)
!7541 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !7528)
!7542 = !DILocalVariable(name: "__ret_warn_on", scope: !7543, file: !7524, line: 150, type: !211)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !7524, line: 150, column: 6)
!7544 = distinct !DILexicalBlock(scope: !7523, file: !7524, line: 150, column: 6)
!7545 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !7528)
!7546 = !DILocalVariable(name: "to", arg: 1, scope: !7531, file: !7530, line: 197, type: !983)
!7547 = !DILocation(line: 197, column: 27, scope: !7531, inlinedAt: !7534)
!7548 = !DILocalVariable(name: "from", arg: 2, scope: !7531, file: !7530, line: 197, type: !2823)
!7549 = !DILocation(line: 197, column: 43, scope: !7531, inlinedAt: !7534)
!7550 = !DILocalVariable(name: "n", arg: 3, scope: !7531, file: !7530, line: 197, type: !986)
!7551 = !DILocation(line: 197, column: 63, scope: !7531, inlinedAt: !7534)
!7552 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !7553)
!7553 = distinct !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !7554)
!7554 = distinct !DILocation(line: 430, column: 8, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 430, column: 8)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 426, column: 24)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 425, column: 7)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 412, column: 47)
!7559 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 412, column: 6)
!7560 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !7553)
!7561 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !7553)
!7562 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !7553)
!7563 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !7553)
!7564 = !DILocation(line: 197, column: 27, scope: !7531, inlinedAt: !7554)
!7565 = !DILocation(line: 197, column: 43, scope: !7531, inlinedAt: !7554)
!7566 = !DILocation(line: 197, column: 63, scope: !7531, inlinedAt: !7554)
!7567 = !DILocalVariable(name: "s", arg: 1, scope: !7568, file: !890, line: 445, type: !3647)
!7568 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !890, file: !890, line: 445, type: !7569, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7569 = !DISubroutineType(types: !7570)
!7570 = !{!983, !3647, !984, !1631}
!7571 = !DILocation(line: 445, column: 72, scope: !7568, inlinedAt: !7572)
!7572 = distinct !DILocation(line: 552, column: 10, scope: !7573, inlinedAt: !7578)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !890, line: 540, column: 34)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !890, line: 540, column: 6)
!7575 = distinct !DISubprogram(name: "kmalloc", scope: !890, file: !890, line: 538, type: !7576, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!983, !1631, !984}
!7578 = distinct !DILocation(line: 378, column: 12, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 376, column: 15)
!7580 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 376, column: 6)
!7581 = !DILocalVariable(name: "flags", arg: 2, scope: !7568, file: !890, line: 446, type: !984)
!7582 = !DILocation(line: 446, column: 9, scope: !7568, inlinedAt: !7572)
!7583 = !DILocalVariable(name: "size", arg: 3, scope: !7568, file: !890, line: 446, type: !1631)
!7584 = !DILocation(line: 446, column: 23, scope: !7568, inlinedAt: !7572)
!7585 = !DILocalVariable(name: "ret", scope: !7568, file: !890, line: 448, type: !983)
!7586 = !DILocation(line: 448, column: 8, scope: !7568, inlinedAt: !7572)
!7587 = !DILocalVariable(name: "flags", arg: 1, scope: !7588, file: !890, line: 318, type: !984)
!7588 = distinct !DISubprogram(name: "kmalloc_type", scope: !890, file: !890, line: 318, type: !7589, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7589 = !DISubroutineType(types: !7590)
!7590 = !{!889, !984}
!7591 = !DILocation(line: 318, column: 67, scope: !7588, inlinedAt: !7592)
!7592 = distinct !DILocation(line: 553, column: 20, scope: !7573, inlinedAt: !7578)
!7593 = !DILocalVariable(name: "size", arg: 1, scope: !7594, file: !890, line: 346, type: !1631)
!7594 = distinct !DISubprogram(name: "kmalloc_index", scope: !890, file: !890, line: 346, type: !7595, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!7, !1631}
!7597 = !DILocation(line: 346, column: 58, scope: !7594, inlinedAt: !7598)
!7598 = distinct !DILocation(line: 547, column: 11, scope: !7573, inlinedAt: !7578)
!7599 = !DILocalVariable(name: "size", arg: 1, scope: !7600, file: !890, line: 472, type: !1631)
!7600 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !890, file: !890, line: 472, type: !7601, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!983, !1631, !984, !7}
!7603 = !DILocation(line: 472, column: 28, scope: !7600, inlinedAt: !7604)
!7604 = distinct !DILocation(line: 481, column: 9, scope: !7605, inlinedAt: !7606)
!7605 = distinct !DISubprogram(name: "kmalloc_large", scope: !890, file: !890, line: 478, type: !7576, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7606 = distinct !DILocation(line: 545, column: 11, scope: !7607, inlinedAt: !7578)
!7607 = distinct !DILexicalBlock(scope: !7573, file: !890, line: 544, column: 7)
!7608 = !DILocalVariable(name: "flags", arg: 2, scope: !7600, file: !890, line: 472, type: !984)
!7609 = !DILocation(line: 472, column: 40, scope: !7600, inlinedAt: !7604)
!7610 = !DILocalVariable(name: "order", arg: 3, scope: !7600, file: !890, line: 472, type: !7)
!7611 = !DILocation(line: 472, column: 60, scope: !7600, inlinedAt: !7604)
!7612 = !DILocalVariable(name: "size", arg: 1, scope: !7605, file: !890, line: 478, type: !1631)
!7613 = !DILocation(line: 478, column: 51, scope: !7605, inlinedAt: !7606)
!7614 = !DILocalVariable(name: "flags", arg: 2, scope: !7605, file: !890, line: 478, type: !984)
!7615 = !DILocation(line: 478, column: 63, scope: !7605, inlinedAt: !7606)
!7616 = !DILocalVariable(name: "order", scope: !7605, file: !890, line: 480, type: !7)
!7617 = !DILocation(line: 480, column: 15, scope: !7605, inlinedAt: !7606)
!7618 = !DILocalVariable(name: "size", arg: 1, scope: !7575, file: !890, line: 538, type: !1631)
!7619 = !DILocation(line: 538, column: 45, scope: !7575, inlinedAt: !7578)
!7620 = !DILocalVariable(name: "flags", arg: 2, scope: !7575, file: !890, line: 538, type: !984)
!7621 = !DILocation(line: 538, column: 57, scope: !7575, inlinedAt: !7578)
!7622 = !DILocalVariable(name: "index", scope: !7573, file: !890, line: 542, type: !7)
!7623 = !DILocation(line: 542, column: 16, scope: !7573, inlinedAt: !7578)
!7624 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !7625)
!7625 = distinct !DILocation(line: 191, column: 6, scope: !7626, inlinedAt: !7628)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !7530, line: 191, column: 6)
!7627 = distinct !DISubprogram(name: "copy_from_user", scope: !7530, file: !7530, line: 189, type: !7532, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!7628 = distinct !DILocation(line: 370, column: 6, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 370, column: 6)
!7630 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !7625)
!7631 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !7625)
!7632 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !7625)
!7633 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !7625)
!7634 = !DILocalVariable(name: "to", arg: 1, scope: !7627, file: !7530, line: 189, type: !983)
!7635 = !DILocation(line: 189, column: 22, scope: !7627, inlinedAt: !7628)
!7636 = !DILocalVariable(name: "from", arg: 2, scope: !7627, file: !7530, line: 189, type: !2823)
!7637 = !DILocation(line: 189, column: 45, scope: !7627, inlinedAt: !7628)
!7638 = !DILocalVariable(name: "n", arg: 3, scope: !7627, file: !7530, line: 189, type: !986)
!7639 = !DILocation(line: 189, column: 65, scope: !7627, inlinedAt: !7628)
!7640 = !DILocalVariable(name: "scsidev", arg: 1, scope: !7519, file: !3, line: 356, type: !5987)
!7641 = !DILocation(line: 356, column: 39, scope: !7519)
!7642 = !DILocalVariable(name: "arg", arg: 2, scope: !7519, file: !3, line: 356, type: !983)
!7643 = !DILocation(line: 356, column: 61, scope: !7519)
!7644 = !DILocalVariable(name: "rc", scope: !7519, file: !3, line: 358, type: !211)
!7645 = !DILocation(line: 358, column: 6, scope: !7519)
!7646 = !DILocalVariable(name: "sensebuf", scope: !7519, file: !3, line: 359, type: !7647)
!7647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 768, elements: !7648)
!7648 = !{!7649}
!7649 = !DISubrange(count: 96)
!7650 = !DILocation(line: 359, column: 5, scope: !7519)
!7651 = !DILocalVariable(name: "scsi_cmd", scope: !7519, file: !3, line: 360, type: !6636)
!7652 = !DILocation(line: 360, column: 5, scope: !7519)
!7653 = !DILocalVariable(name: "args", scope: !7519, file: !3, line: 361, type: !7654)
!7654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 32, elements: !2033)
!7655 = !DILocation(line: 361, column: 5, scope: !7519)
!7656 = !DILocalVariable(name: "argbuf", scope: !7519, file: !3, line: 361, type: !6537)
!7657 = !DILocation(line: 361, column: 15, scope: !7519)
!7658 = !DILocalVariable(name: "argsize", scope: !7519, file: !3, line: 362, type: !211)
!7659 = !DILocation(line: 362, column: 6, scope: !7519)
!7660 = !DILocalVariable(name: "data_dir", scope: !7519, file: !3, line: 363, type: !165)
!7661 = !DILocation(line: 363, column: 26, scope: !7519)
!7662 = !DILocalVariable(name: "sshdr", scope: !7519, file: !3, line: 364, type: !7663)
!7663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_sense_hdr", file: !7664, line: 50, size: 64, elements: !7665)
!7664 = !DIFile(filename: "./include/scsi/scsi_common.h", directory: "/home/lizy2001/genbc/linux")
!7665 = !{!7666, !7667, !7668, !7669, !7670, !7671, !7672, !7673}
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "response_code", scope: !7663, file: !7664, line: 51, baseType: !1203, size: 8)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "sense_key", scope: !7663, file: !7664, line: 52, baseType: !1203, size: 8, offset: 8)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "asc", scope: !7663, file: !7664, line: 53, baseType: !1203, size: 8, offset: 16)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "ascq", scope: !7663, file: !7664, line: 54, baseType: !1203, size: 8, offset: 24)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "byte4", scope: !7663, file: !7664, line: 55, baseType: !1203, size: 8, offset: 32)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "byte5", scope: !7663, file: !7664, line: 56, baseType: !1203, size: 8, offset: 40)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "byte6", scope: !7663, file: !7664, line: 57, baseType: !1203, size: 8, offset: 48)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "additional_length", scope: !7663, file: !7664, line: 58, baseType: !1203, size: 8, offset: 56)
!7674 = !DILocation(line: 364, column: 24, scope: !7519)
!7675 = !DILocalVariable(name: "cmd_result", scope: !7519, file: !3, line: 365, type: !211)
!7676 = !DILocation(line: 365, column: 6, scope: !7519)
!7677 = !DILocation(line: 367, column: 6, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 367, column: 6)
!7679 = !DILocation(line: 367, column: 10, scope: !7678)
!7680 = !DILocation(line: 367, column: 6, scope: !7519)
!7681 = !DILocation(line: 368, column: 3, scope: !7678)
!7682 = !DILocation(line: 370, column: 21, scope: !7629)
!7683 = !DILocation(line: 370, column: 27, scope: !7629)
!7684 = !DILocation(line: 191, column: 6, scope: !7626, inlinedAt: !7628)
!7685 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !7625)
!7686 = distinct !DILexicalBlock(scope: !7523, file: !7524, line: 141, column: 6)
!7687 = !DILocation(line: 0, scope: !7686, inlinedAt: !7625)
!7688 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !7625)
!7689 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !7625)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7524, line: 142, column: 7)
!7691 = distinct !DILexicalBlock(scope: !7686, file: !7524, line: 141, column: 39)
!7692 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !7625)
!7693 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !7625)
!7694 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !7625)
!7695 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !7625)
!7696 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !7625)
!7697 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !7625)
!7698 = distinct !DILexicalBlock(scope: !7690, file: !7524, line: 144, column: 12)
!7699 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !7625)
!7700 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !7625)
!7701 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !7625)
!7702 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !7625)
!7703 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !7625)
!7704 = distinct !DILexicalBlock(scope: !7543, file: !7524, line: 150, column: 6)
!7705 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !7625)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7524, line: 150, column: 6)
!7707 = distinct !DILexicalBlock(scope: !7704, file: !7524, line: 150, column: 6)
!7708 = !{i32 -2145508264, i32 -2145508235, i32 -2145508189, i32 -2145508131, i32 -2145508077, i32 -2145508023, i32 -2145507968, i32 -2145507937}
!7709 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !7625)
!7710 = distinct !DILexicalBlock(scope: !7707, file: !7524, line: 150, column: 6)
!7711 = !{i32 -2145507517, i32 -2145507510, i32 -2145507458, i32 -2145507427, i32 -2145507397}
!7712 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !7625)
!7713 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !7625)
!7714 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !7625)
!7715 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !7625)
!7716 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !7625)
!7717 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !7625)
!7718 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !7625)
!7719 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !7625)
!7720 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !7625)
!7721 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !7625)
!7722 = !DILocation(line: 191, column: 6, scope: !7627, inlinedAt: !7628)
!7723 = !DILocation(line: 192, column: 23, scope: !7626, inlinedAt: !7628)
!7724 = !DILocation(line: 192, column: 27, scope: !7626, inlinedAt: !7628)
!7725 = !DILocation(line: 192, column: 33, scope: !7626, inlinedAt: !7628)
!7726 = !DILocation(line: 192, column: 7, scope: !7626, inlinedAt: !7628)
!7727 = !DILocation(line: 192, column: 5, scope: !7626, inlinedAt: !7628)
!7728 = !DILocation(line: 192, column: 3, scope: !7626, inlinedAt: !7628)
!7729 = !DILocation(line: 193, column: 9, scope: !7627, inlinedAt: !7628)
!7730 = !DILocation(line: 370, column: 6, scope: !7629)
!7731 = !DILocation(line: 370, column: 6, scope: !7519)
!7732 = !DILocation(line: 371, column: 3, scope: !7629)
!7733 = !DILocation(line: 373, column: 2, scope: !7519)
!7734 = !DILocation(line: 374, column: 2, scope: !7519)
!7735 = !DILocation(line: 376, column: 6, scope: !7580)
!7736 = !DILocation(line: 376, column: 6, scope: !7519)
!7737 = !DILocation(line: 377, column: 29, scope: !7579)
!7738 = !DILocation(line: 377, column: 27, scope: !7579)
!7739 = !DILocation(line: 377, column: 11, scope: !7579)
!7740 = !DILocation(line: 378, column: 20, scope: !7579)
!7741 = !DILocation(line: 540, column: 27, scope: !7574, inlinedAt: !7578)
!7742 = !DILocation(line: 540, column: 6, scope: !7574, inlinedAt: !7578)
!7743 = !DILocation(line: 540, column: 6, scope: !7575, inlinedAt: !7578)
!7744 = !DILocation(line: 544, column: 7, scope: !7607, inlinedAt: !7578)
!7745 = !DILocation(line: 544, column: 12, scope: !7607, inlinedAt: !7578)
!7746 = !DILocation(line: 544, column: 7, scope: !7573, inlinedAt: !7578)
!7747 = !DILocation(line: 545, column: 25, scope: !7607, inlinedAt: !7578)
!7748 = !DILocation(line: 545, column: 31, scope: !7607, inlinedAt: !7578)
!7749 = !DILocation(line: 480, column: 33, scope: !7605, inlinedAt: !7606)
!7750 = !DILocation(line: 480, column: 23, scope: !7605, inlinedAt: !7606)
!7751 = !DILocation(line: 481, column: 29, scope: !7605, inlinedAt: !7606)
!7752 = !DILocation(line: 481, column: 35, scope: !7605, inlinedAt: !7606)
!7753 = !DILocation(line: 481, column: 42, scope: !7605, inlinedAt: !7606)
!7754 = !DILocation(line: 474, column: 23, scope: !7600, inlinedAt: !7604)
!7755 = !DILocation(line: 474, column: 29, scope: !7600, inlinedAt: !7604)
!7756 = !DILocation(line: 474, column: 36, scope: !7600, inlinedAt: !7604)
!7757 = !DILocation(line: 474, column: 9, scope: !7600, inlinedAt: !7604)
!7758 = !DILocation(line: 545, column: 4, scope: !7607, inlinedAt: !7578)
!7759 = !DILocation(line: 547, column: 25, scope: !7573, inlinedAt: !7578)
!7760 = !DILocation(line: 348, column: 7, scope: !7761, inlinedAt: !7598)
!7761 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 348, column: 6)
!7762 = !DILocation(line: 348, column: 6, scope: !7594, inlinedAt: !7598)
!7763 = !DILocation(line: 349, column: 3, scope: !7761, inlinedAt: !7598)
!7764 = !DILocation(line: 351, column: 6, scope: !7765, inlinedAt: !7598)
!7765 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 351, column: 6)
!7766 = !DILocation(line: 351, column: 11, scope: !7765, inlinedAt: !7598)
!7767 = !DILocation(line: 351, column: 6, scope: !7594, inlinedAt: !7598)
!7768 = !DILocation(line: 352, column: 3, scope: !7765, inlinedAt: !7598)
!7769 = !DILocation(line: 354, column: 32, scope: !7770, inlinedAt: !7598)
!7770 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 354, column: 6)
!7771 = !DILocation(line: 354, column: 37, scope: !7770, inlinedAt: !7598)
!7772 = !DILocation(line: 354, column: 42, scope: !7770, inlinedAt: !7598)
!7773 = !DILocation(line: 354, column: 45, scope: !7770, inlinedAt: !7598)
!7774 = !DILocation(line: 354, column: 50, scope: !7770, inlinedAt: !7598)
!7775 = !DILocation(line: 354, column: 6, scope: !7594, inlinedAt: !7598)
!7776 = !DILocation(line: 355, column: 3, scope: !7770, inlinedAt: !7598)
!7777 = !DILocation(line: 356, column: 32, scope: !7778, inlinedAt: !7598)
!7778 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 356, column: 6)
!7779 = !DILocation(line: 356, column: 37, scope: !7778, inlinedAt: !7598)
!7780 = !DILocation(line: 356, column: 43, scope: !7778, inlinedAt: !7598)
!7781 = !DILocation(line: 356, column: 46, scope: !7778, inlinedAt: !7598)
!7782 = !DILocation(line: 356, column: 51, scope: !7778, inlinedAt: !7598)
!7783 = !DILocation(line: 356, column: 6, scope: !7594, inlinedAt: !7598)
!7784 = !DILocation(line: 357, column: 3, scope: !7778, inlinedAt: !7598)
!7785 = !DILocation(line: 358, column: 6, scope: !7786, inlinedAt: !7598)
!7786 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 358, column: 6)
!7787 = !DILocation(line: 358, column: 11, scope: !7786, inlinedAt: !7598)
!7788 = !DILocation(line: 358, column: 6, scope: !7594, inlinedAt: !7598)
!7789 = !DILocation(line: 358, column: 26, scope: !7786, inlinedAt: !7598)
!7790 = !DILocation(line: 359, column: 6, scope: !7791, inlinedAt: !7598)
!7791 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 359, column: 6)
!7792 = !DILocation(line: 359, column: 11, scope: !7791, inlinedAt: !7598)
!7793 = !DILocation(line: 359, column: 6, scope: !7594, inlinedAt: !7598)
!7794 = !DILocation(line: 359, column: 26, scope: !7791, inlinedAt: !7598)
!7795 = !DILocation(line: 360, column: 6, scope: !7796, inlinedAt: !7598)
!7796 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 360, column: 6)
!7797 = !DILocation(line: 360, column: 11, scope: !7796, inlinedAt: !7598)
!7798 = !DILocation(line: 360, column: 6, scope: !7594, inlinedAt: !7598)
!7799 = !DILocation(line: 360, column: 26, scope: !7796, inlinedAt: !7598)
!7800 = !DILocation(line: 361, column: 6, scope: !7801, inlinedAt: !7598)
!7801 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 361, column: 6)
!7802 = !DILocation(line: 361, column: 11, scope: !7801, inlinedAt: !7598)
!7803 = !DILocation(line: 361, column: 6, scope: !7594, inlinedAt: !7598)
!7804 = !DILocation(line: 361, column: 26, scope: !7801, inlinedAt: !7598)
!7805 = !DILocation(line: 362, column: 6, scope: !7806, inlinedAt: !7598)
!7806 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 362, column: 6)
!7807 = !DILocation(line: 362, column: 11, scope: !7806, inlinedAt: !7598)
!7808 = !DILocation(line: 362, column: 6, scope: !7594, inlinedAt: !7598)
!7809 = !DILocation(line: 362, column: 26, scope: !7806, inlinedAt: !7598)
!7810 = !DILocation(line: 363, column: 6, scope: !7811, inlinedAt: !7598)
!7811 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 363, column: 6)
!7812 = !DILocation(line: 363, column: 11, scope: !7811, inlinedAt: !7598)
!7813 = !DILocation(line: 363, column: 6, scope: !7594, inlinedAt: !7598)
!7814 = !DILocation(line: 363, column: 26, scope: !7811, inlinedAt: !7598)
!7815 = !DILocation(line: 364, column: 6, scope: !7816, inlinedAt: !7598)
!7816 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 364, column: 6)
!7817 = !DILocation(line: 364, column: 11, scope: !7816, inlinedAt: !7598)
!7818 = !DILocation(line: 364, column: 6, scope: !7594, inlinedAt: !7598)
!7819 = !DILocation(line: 364, column: 26, scope: !7816, inlinedAt: !7598)
!7820 = !DILocation(line: 365, column: 6, scope: !7821, inlinedAt: !7598)
!7821 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 365, column: 6)
!7822 = !DILocation(line: 365, column: 11, scope: !7821, inlinedAt: !7598)
!7823 = !DILocation(line: 365, column: 6, scope: !7594, inlinedAt: !7598)
!7824 = !DILocation(line: 365, column: 26, scope: !7821, inlinedAt: !7598)
!7825 = !DILocation(line: 366, column: 6, scope: !7826, inlinedAt: !7598)
!7826 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 366, column: 6)
!7827 = !DILocation(line: 366, column: 11, scope: !7826, inlinedAt: !7598)
!7828 = !DILocation(line: 366, column: 6, scope: !7594, inlinedAt: !7598)
!7829 = !DILocation(line: 366, column: 26, scope: !7826, inlinedAt: !7598)
!7830 = !DILocation(line: 367, column: 6, scope: !7831, inlinedAt: !7598)
!7831 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 367, column: 6)
!7832 = !DILocation(line: 367, column: 11, scope: !7831, inlinedAt: !7598)
!7833 = !DILocation(line: 367, column: 6, scope: !7594, inlinedAt: !7598)
!7834 = !DILocation(line: 367, column: 26, scope: !7831, inlinedAt: !7598)
!7835 = !DILocation(line: 368, column: 6, scope: !7836, inlinedAt: !7598)
!7836 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 368, column: 6)
!7837 = !DILocation(line: 368, column: 11, scope: !7836, inlinedAt: !7598)
!7838 = !DILocation(line: 368, column: 6, scope: !7594, inlinedAt: !7598)
!7839 = !DILocation(line: 368, column: 26, scope: !7836, inlinedAt: !7598)
!7840 = !DILocation(line: 369, column: 6, scope: !7841, inlinedAt: !7598)
!7841 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 369, column: 6)
!7842 = !DILocation(line: 369, column: 11, scope: !7841, inlinedAt: !7598)
!7843 = !DILocation(line: 369, column: 6, scope: !7594, inlinedAt: !7598)
!7844 = !DILocation(line: 369, column: 26, scope: !7841, inlinedAt: !7598)
!7845 = !DILocation(line: 370, column: 6, scope: !7846, inlinedAt: !7598)
!7846 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 370, column: 6)
!7847 = !DILocation(line: 370, column: 11, scope: !7846, inlinedAt: !7598)
!7848 = !DILocation(line: 370, column: 6, scope: !7594, inlinedAt: !7598)
!7849 = !DILocation(line: 370, column: 26, scope: !7846, inlinedAt: !7598)
!7850 = !DILocation(line: 371, column: 6, scope: !7851, inlinedAt: !7598)
!7851 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 371, column: 6)
!7852 = !DILocation(line: 371, column: 11, scope: !7851, inlinedAt: !7598)
!7853 = !DILocation(line: 371, column: 6, scope: !7594, inlinedAt: !7598)
!7854 = !DILocation(line: 371, column: 26, scope: !7851, inlinedAt: !7598)
!7855 = !DILocation(line: 372, column: 6, scope: !7856, inlinedAt: !7598)
!7856 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 372, column: 6)
!7857 = !DILocation(line: 372, column: 11, scope: !7856, inlinedAt: !7598)
!7858 = !DILocation(line: 372, column: 6, scope: !7594, inlinedAt: !7598)
!7859 = !DILocation(line: 372, column: 26, scope: !7856, inlinedAt: !7598)
!7860 = !DILocation(line: 373, column: 6, scope: !7861, inlinedAt: !7598)
!7861 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 373, column: 6)
!7862 = !DILocation(line: 373, column: 11, scope: !7861, inlinedAt: !7598)
!7863 = !DILocation(line: 373, column: 6, scope: !7594, inlinedAt: !7598)
!7864 = !DILocation(line: 373, column: 26, scope: !7861, inlinedAt: !7598)
!7865 = !DILocation(line: 374, column: 6, scope: !7866, inlinedAt: !7598)
!7866 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 374, column: 6)
!7867 = !DILocation(line: 374, column: 11, scope: !7866, inlinedAt: !7598)
!7868 = !DILocation(line: 374, column: 6, scope: !7594, inlinedAt: !7598)
!7869 = !DILocation(line: 374, column: 26, scope: !7866, inlinedAt: !7598)
!7870 = !DILocation(line: 375, column: 6, scope: !7871, inlinedAt: !7598)
!7871 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 375, column: 6)
!7872 = !DILocation(line: 375, column: 11, scope: !7871, inlinedAt: !7598)
!7873 = !DILocation(line: 375, column: 6, scope: !7594, inlinedAt: !7598)
!7874 = !DILocation(line: 375, column: 27, scope: !7871, inlinedAt: !7598)
!7875 = !DILocation(line: 376, column: 6, scope: !7876, inlinedAt: !7598)
!7876 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 376, column: 6)
!7877 = !DILocation(line: 376, column: 11, scope: !7876, inlinedAt: !7598)
!7878 = !DILocation(line: 376, column: 6, scope: !7594, inlinedAt: !7598)
!7879 = !DILocation(line: 376, column: 32, scope: !7876, inlinedAt: !7598)
!7880 = !DILocation(line: 377, column: 6, scope: !7881, inlinedAt: !7598)
!7881 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 377, column: 6)
!7882 = !DILocation(line: 377, column: 11, scope: !7881, inlinedAt: !7598)
!7883 = !DILocation(line: 377, column: 6, scope: !7594, inlinedAt: !7598)
!7884 = !DILocation(line: 377, column: 32, scope: !7881, inlinedAt: !7598)
!7885 = !DILocation(line: 378, column: 6, scope: !7886, inlinedAt: !7598)
!7886 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 378, column: 6)
!7887 = !DILocation(line: 378, column: 11, scope: !7886, inlinedAt: !7598)
!7888 = !DILocation(line: 378, column: 6, scope: !7594, inlinedAt: !7598)
!7889 = !DILocation(line: 378, column: 32, scope: !7886, inlinedAt: !7598)
!7890 = !DILocation(line: 379, column: 6, scope: !7891, inlinedAt: !7598)
!7891 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 379, column: 6)
!7892 = !DILocation(line: 379, column: 11, scope: !7891, inlinedAt: !7598)
!7893 = !DILocation(line: 379, column: 6, scope: !7594, inlinedAt: !7598)
!7894 = !DILocation(line: 379, column: 33, scope: !7891, inlinedAt: !7598)
!7895 = !DILocation(line: 380, column: 6, scope: !7896, inlinedAt: !7598)
!7896 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 380, column: 6)
!7897 = !DILocation(line: 380, column: 11, scope: !7896, inlinedAt: !7598)
!7898 = !DILocation(line: 380, column: 6, scope: !7594, inlinedAt: !7598)
!7899 = !DILocation(line: 380, column: 33, scope: !7896, inlinedAt: !7598)
!7900 = !DILocation(line: 381, column: 6, scope: !7901, inlinedAt: !7598)
!7901 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 381, column: 6)
!7902 = !DILocation(line: 381, column: 11, scope: !7901, inlinedAt: !7598)
!7903 = !DILocation(line: 381, column: 6, scope: !7594, inlinedAt: !7598)
!7904 = !DILocation(line: 381, column: 33, scope: !7901, inlinedAt: !7598)
!7905 = !DILocation(line: 382, column: 2, scope: !7906, inlinedAt: !7598)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !890, line: 382, column: 2)
!7907 = distinct !DILexicalBlock(scope: !7594, file: !890, line: 382, column: 2)
!7908 = !{i32 -2143085844, i32 -2143085815, i32 -2143085769, i32 -2143085711, i32 -2143085657, i32 -2143085603, i32 -2143085548, i32 -2143085517}
!7909 = !DILocation(line: 382, column: 2, scope: !7910, inlinedAt: !7598)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !890, line: 382, column: 2)
!7911 = distinct !DILexicalBlock(scope: !7907, file: !890, line: 382, column: 2)
!7912 = !{i32 -2143085074, i32 -2143085067, i32 -2143085013, i32 -2143084982, i32 -2143084952}
!7913 = !DILocation(line: 382, column: 2, scope: !7911, inlinedAt: !7598)
!7914 = !DILocation(line: 386, column: 1, scope: !7594, inlinedAt: !7598)
!7915 = !DILocation(line: 547, column: 9, scope: !7573, inlinedAt: !7578)
!7916 = !DILocation(line: 549, column: 8, scope: !7917, inlinedAt: !7578)
!7917 = distinct !DILexicalBlock(scope: !7573, file: !890, line: 549, column: 7)
!7918 = !DILocation(line: 549, column: 7, scope: !7573, inlinedAt: !7578)
!7919 = !DILocation(line: 550, column: 4, scope: !7917, inlinedAt: !7578)
!7920 = !DILocation(line: 553, column: 33, scope: !7573, inlinedAt: !7578)
!7921 = !DILocation(line: 325, column: 6, scope: !7922, inlinedAt: !7592)
!7922 = distinct !DILexicalBlock(scope: !7588, file: !890, line: 325, column: 6)
!7923 = !DILocation(line: 325, column: 6, scope: !7588, inlinedAt: !7592)
!7924 = !DILocation(line: 326, column: 3, scope: !7922, inlinedAt: !7592)
!7925 = !DILocation(line: 332, column: 9, scope: !7588, inlinedAt: !7592)
!7926 = !DILocation(line: 332, column: 15, scope: !7588, inlinedAt: !7592)
!7927 = !DILocation(line: 332, column: 2, scope: !7588, inlinedAt: !7592)
!7928 = !DILocation(line: 336, column: 1, scope: !7588, inlinedAt: !7592)
!7929 = !DILocation(line: 553, column: 5, scope: !7573, inlinedAt: !7578)
!7930 = !DILocation(line: 553, column: 41, scope: !7573, inlinedAt: !7578)
!7931 = !DILocation(line: 554, column: 5, scope: !7573, inlinedAt: !7578)
!7932 = !DILocation(line: 554, column: 12, scope: !7573, inlinedAt: !7578)
!7933 = !DILocation(line: 448, column: 31, scope: !7568, inlinedAt: !7572)
!7934 = !DILocation(line: 448, column: 34, scope: !7568, inlinedAt: !7572)
!7935 = !DILocation(line: 448, column: 14, scope: !7568, inlinedAt: !7572)
!7936 = !DILocation(line: 450, column: 22, scope: !7568, inlinedAt: !7572)
!7937 = !DILocation(line: 450, column: 25, scope: !7568, inlinedAt: !7572)
!7938 = !DILocation(line: 450, column: 30, scope: !7568, inlinedAt: !7572)
!7939 = !DILocation(line: 450, column: 36, scope: !7568, inlinedAt: !7572)
!7940 = !DILocation(line: 450, column: 8, scope: !7568, inlinedAt: !7572)
!7941 = !DILocation(line: 450, column: 6, scope: !7568, inlinedAt: !7572)
!7942 = !DILocation(line: 451, column: 9, scope: !7568, inlinedAt: !7572)
!7943 = !DILocation(line: 552, column: 3, scope: !7573, inlinedAt: !7578)
!7944 = !DILocation(line: 557, column: 19, scope: !7575, inlinedAt: !7578)
!7945 = !DILocation(line: 557, column: 25, scope: !7575, inlinedAt: !7578)
!7946 = !DILocation(line: 557, column: 9, scope: !7575, inlinedAt: !7578)
!7947 = !DILocation(line: 557, column: 2, scope: !7575, inlinedAt: !7578)
!7948 = !DILocation(line: 558, column: 1, scope: !7575, inlinedAt: !7578)
!7949 = !DILocation(line: 378, column: 10, scope: !7579)
!7950 = !DILocation(line: 379, column: 7, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 379, column: 7)
!7952 = !DILocation(line: 379, column: 14, scope: !7951)
!7953 = !DILocation(line: 379, column: 7, scope: !7579)
!7954 = !DILocation(line: 380, column: 7, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 379, column: 23)
!7956 = !DILocation(line: 381, column: 4, scope: !7955)
!7957 = !DILocation(line: 384, column: 3, scope: !7579)
!7958 = !DILocation(line: 384, column: 16, scope: !7579)
!7959 = !DILocation(line: 385, column: 3, scope: !7579)
!7960 = !DILocation(line: 385, column: 16, scope: !7579)
!7961 = !DILocation(line: 387, column: 12, scope: !7579)
!7962 = !DILocation(line: 388, column: 2, scope: !7579)
!7963 = !DILocation(line: 389, column: 3, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 388, column: 9)
!7965 = !DILocation(line: 389, column: 16, scope: !7964)
!7966 = !DILocation(line: 390, column: 3, scope: !7964)
!7967 = !DILocation(line: 390, column: 16, scope: !7964)
!7968 = !DILocation(line: 391, column: 12, scope: !7964)
!7969 = !DILocation(line: 394, column: 2, scope: !7519)
!7970 = !DILocation(line: 394, column: 14, scope: !7519)
!7971 = !DILocation(line: 396, column: 16, scope: !7519)
!7972 = !DILocation(line: 396, column: 2, scope: !7519)
!7973 = !DILocation(line: 396, column: 14, scope: !7519)
!7974 = !DILocation(line: 397, column: 6, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 397, column: 6)
!7976 = !DILocation(line: 397, column: 14, scope: !7975)
!7977 = !DILocation(line: 397, column: 6, scope: !7519)
!7978 = !DILocation(line: 398, column: 18, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 397, column: 32)
!7980 = !DILocation(line: 398, column: 3, scope: !7979)
!7981 = !DILocation(line: 398, column: 16, scope: !7979)
!7982 = !DILocation(line: 399, column: 18, scope: !7979)
!7983 = !DILocation(line: 399, column: 3, scope: !7979)
!7984 = !DILocation(line: 399, column: 16, scope: !7979)
!7985 = !DILocation(line: 400, column: 3, scope: !7979)
!7986 = !DILocation(line: 400, column: 16, scope: !7979)
!7987 = !DILocation(line: 401, column: 3, scope: !7979)
!7988 = !DILocation(line: 401, column: 16, scope: !7979)
!7989 = !DILocation(line: 402, column: 2, scope: !7979)
!7990 = !DILocation(line: 403, column: 18, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 402, column: 9)
!7992 = !DILocation(line: 403, column: 3, scope: !7991)
!7993 = !DILocation(line: 403, column: 16, scope: !7991)
!7994 = !DILocation(line: 405, column: 17, scope: !7519)
!7995 = !DILocation(line: 405, column: 2, scope: !7519)
!7996 = !DILocation(line: 405, column: 15, scope: !7519)
!7997 = !DILocation(line: 409, column: 15, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 409, column: 15)
!7999 = !DILocation(line: 409, column: 15, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 409, column: 15)
!8001 = !DILocation(line: 409, column: 13, scope: !7519)
!8002 = !DILocation(line: 412, column: 6, scope: !7559)
!8003 = !DILocation(line: 412, column: 30, scope: !7559)
!8004 = !DILocation(line: 412, column: 6, scope: !7519)
!8005 = !DILocalVariable(name: "desc", scope: !7558, file: !3, line: 413, type: !6537)
!8006 = !DILocation(line: 413, column: 7, scope: !7558)
!8007 = !DILocation(line: 413, column: 14, scope: !7558)
!8008 = !DILocation(line: 413, column: 23, scope: !7558)
!8009 = !DILocation(line: 414, column: 14, scope: !7558)
!8010 = !DILocation(line: 418, column: 7, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 418, column: 7)
!8012 = !DILocation(line: 418, column: 18, scope: !8011)
!8013 = !DILocation(line: 418, column: 7, scope: !7558)
!8014 = !DILocation(line: 419, column: 14, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 419, column: 8)
!8016 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 418, column: 46)
!8017 = !DILocation(line: 419, column: 8, scope: !8015)
!8018 = !DILocation(line: 419, column: 24, scope: !8015)
!8019 = !DILocation(line: 419, column: 43, scope: !8015)
!8020 = !DILocation(line: 420, column: 14, scope: !8015)
!8021 = !DILocation(line: 420, column: 8, scope: !8015)
!8022 = !DILocation(line: 420, column: 18, scope: !8015)
!8023 = !DILocation(line: 420, column: 23, scope: !8015)
!8024 = !DILocation(line: 420, column: 32, scope: !8015)
!8025 = !DILocation(line: 420, column: 26, scope: !8015)
!8026 = !DILocation(line: 420, column: 37, scope: !8015)
!8027 = !DILocation(line: 419, column: 8, scope: !8016)
!8028 = !DILocation(line: 421, column: 16, scope: !8015)
!8029 = !DILocation(line: 421, column: 5, scope: !8015)
!8030 = !DILocation(line: 422, column: 3, scope: !8016)
!8031 = !DILocation(line: 425, column: 7, scope: !7557)
!8032 = !DILocation(line: 425, column: 19, scope: !7557)
!8033 = !DILocation(line: 425, column: 27, scope: !7557)
!8034 = !DILocation(line: 426, column: 7, scope: !7557)
!8035 = !DILocation(line: 426, column: 15, scope: !7557)
!8036 = !DILocation(line: 425, column: 7, scope: !7558)
!8037 = !DILocation(line: 427, column: 14, scope: !7556)
!8038 = !DILocation(line: 427, column: 4, scope: !7556)
!8039 = !DILocation(line: 427, column: 12, scope: !7556)
!8040 = !DILocation(line: 428, column: 14, scope: !7556)
!8041 = !DILocation(line: 428, column: 4, scope: !7556)
!8042 = !DILocation(line: 428, column: 12, scope: !7556)
!8043 = !DILocation(line: 429, column: 14, scope: !7556)
!8044 = !DILocation(line: 429, column: 4, scope: !7556)
!8045 = !DILocation(line: 429, column: 12, scope: !7556)
!8046 = !DILocation(line: 430, column: 21, scope: !7555)
!8047 = !DILocation(line: 430, column: 26, scope: !7555)
!8048 = !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !7554)
!8049 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !7553)
!8050 = !DILocation(line: 0, scope: !7686, inlinedAt: !7553)
!8051 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !7553)
!8052 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !7553)
!8053 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !7553)
!8054 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !7553)
!8055 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !7553)
!8056 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !7553)
!8057 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !7553)
!8058 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !7553)
!8059 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !7553)
!8060 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !7553)
!8061 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !7553)
!8062 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !7553)
!8063 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !7553)
!8064 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !7553)
!8065 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !7553)
!8066 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !7553)
!8067 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !7553)
!8068 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !7553)
!8069 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !7553)
!8070 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !7553)
!8071 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !7553)
!8072 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !7553)
!8073 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !7553)
!8074 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !7553)
!8075 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !7553)
!8076 = !DILocation(line: 199, column: 6, scope: !7531, inlinedAt: !7554)
!8077 = !DILocation(line: 200, column: 21, scope: !7529, inlinedAt: !7554)
!8078 = !DILocation(line: 200, column: 25, scope: !7529, inlinedAt: !7554)
!8079 = !DILocation(line: 200, column: 31, scope: !7529, inlinedAt: !7554)
!8080 = !DILocation(line: 200, column: 7, scope: !7529, inlinedAt: !7554)
!8081 = !DILocation(line: 200, column: 5, scope: !7529, inlinedAt: !7554)
!8082 = !DILocation(line: 200, column: 3, scope: !7529, inlinedAt: !7554)
!8083 = !DILocation(line: 201, column: 9, scope: !7531, inlinedAt: !7554)
!8084 = !DILocation(line: 430, column: 8, scope: !7555)
!8085 = !DILocation(line: 430, column: 8, scope: !7556)
!8086 = !DILocation(line: 431, column: 8, scope: !7555)
!8087 = !DILocation(line: 431, column: 5, scope: !7555)
!8088 = !DILocation(line: 432, column: 3, scope: !7556)
!8089 = !DILocation(line: 433, column: 2, scope: !7558)
!8090 = !DILocation(line: 436, column: 6, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 436, column: 6)
!8092 = !DILocation(line: 436, column: 6, scope: !7519)
!8093 = !DILocation(line: 437, column: 6, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 436, column: 18)
!8095 = !DILocation(line: 438, column: 3, scope: !8094)
!8096 = !DILocation(line: 441, column: 7, scope: !7535)
!8097 = !DILocation(line: 441, column: 6, scope: !7535)
!8098 = !DILocation(line: 442, column: 3, scope: !7535)
!8099 = !DILocation(line: 442, column: 19, scope: !7535)
!8100 = !DILocation(line: 442, column: 23, scope: !7535)
!8101 = !DILocation(line: 442, column: 39, scope: !7535)
!8102 = !DILocation(line: 442, column: 47, scope: !7535)
!8103 = !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !7534)
!8104 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !7528)
!8105 = !DILocation(line: 0, scope: !7686, inlinedAt: !7528)
!8106 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !7528)
!8107 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !7528)
!8108 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !7528)
!8109 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !7528)
!8110 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !7528)
!8111 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !7528)
!8112 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !7528)
!8113 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !7528)
!8114 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !7528)
!8115 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !7528)
!8116 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !7528)
!8117 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !7528)
!8118 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !7528)
!8119 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !7528)
!8120 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !7528)
!8121 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !7528)
!8122 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !7528)
!8123 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !7528)
!8124 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !7528)
!8125 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !7528)
!8126 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !7528)
!8127 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !7528)
!8128 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !7528)
!8129 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !7528)
!8130 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !7528)
!8131 = !DILocation(line: 199, column: 6, scope: !7531, inlinedAt: !7534)
!8132 = !DILocation(line: 200, column: 21, scope: !7529, inlinedAt: !7534)
!8133 = !DILocation(line: 200, column: 25, scope: !7529, inlinedAt: !7534)
!8134 = !DILocation(line: 200, column: 31, scope: !7529, inlinedAt: !7534)
!8135 = !DILocation(line: 200, column: 7, scope: !7529, inlinedAt: !7534)
!8136 = !DILocation(line: 200, column: 5, scope: !7529, inlinedAt: !7534)
!8137 = !DILocation(line: 200, column: 3, scope: !7529, inlinedAt: !7534)
!8138 = !DILocation(line: 201, column: 9, scope: !7531, inlinedAt: !7534)
!8139 = !DILocation(line: 442, column: 6, scope: !7535)
!8140 = !DILocation(line: 441, column: 6, scope: !7519)
!8141 = !DILocation(line: 443, column: 6, scope: !7535)
!8142 = !DILocation(line: 443, column: 3, scope: !7535)
!8143 = !DILocation(line: 442, column: 54, scope: !7535)
!8144 = !DILabel(scope: !7519, name: "error", file: !3, line: 444)
!8145 = !DILocation(line: 444, column: 1, scope: !7519)
!8146 = !DILocation(line: 445, column: 8, scope: !7519)
!8147 = !DILocation(line: 445, column: 2, scope: !7519)
!8148 = !DILocation(line: 446, column: 9, scope: !7519)
!8149 = !DILocation(line: 446, column: 2, scope: !7519)
!8150 = !DILocation(line: 447, column: 1, scope: !7519)
!8151 = distinct !DISubprogram(name: "ata_task_ioctl", scope: !3, file: !3, line: 460, type: !7520, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8152 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !8153)
!8153 = distinct !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8154)
!8154 = distinct !DILocation(line: 515, column: 8, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 515, column: 8)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 507, column: 22)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 506, column: 7)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 493, column: 47)
!8159 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 493, column: 6)
!8160 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !8153)
!8161 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !8153)
!8162 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !8153)
!8163 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !8153)
!8164 = !DILocation(line: 197, column: 27, scope: !7531, inlinedAt: !8154)
!8165 = !DILocation(line: 197, column: 43, scope: !7531, inlinedAt: !8154)
!8166 = !DILocation(line: 197, column: 63, scope: !7531, inlinedAt: !8154)
!8167 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !8168)
!8168 = distinct !DILocation(line: 191, column: 6, scope: !7626, inlinedAt: !8169)
!8169 = distinct !DILocation(line: 472, column: 6, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 472, column: 6)
!8171 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !8168)
!8172 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !8168)
!8173 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !8168)
!8174 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !8168)
!8175 = !DILocation(line: 189, column: 22, scope: !7627, inlinedAt: !8169)
!8176 = !DILocation(line: 189, column: 45, scope: !7627, inlinedAt: !8169)
!8177 = !DILocation(line: 189, column: 65, scope: !7627, inlinedAt: !8169)
!8178 = !DILocalVariable(name: "scsidev", arg: 1, scope: !8151, file: !3, line: 460, type: !5987)
!8179 = !DILocation(line: 460, column: 40, scope: !8151)
!8180 = !DILocalVariable(name: "arg", arg: 2, scope: !8151, file: !3, line: 460, type: !983)
!8181 = !DILocation(line: 460, column: 62, scope: !8151)
!8182 = !DILocalVariable(name: "rc", scope: !8151, file: !3, line: 462, type: !211)
!8183 = !DILocation(line: 462, column: 6, scope: !8151)
!8184 = !DILocalVariable(name: "sensebuf", scope: !8151, file: !3, line: 463, type: !7647)
!8185 = !DILocation(line: 463, column: 5, scope: !8151)
!8186 = !DILocalVariable(name: "scsi_cmd", scope: !8151, file: !3, line: 464, type: !6636)
!8187 = !DILocation(line: 464, column: 5, scope: !8151)
!8188 = !DILocalVariable(name: "args", scope: !8151, file: !3, line: 465, type: !8189)
!8189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 56, elements: !3837)
!8190 = !DILocation(line: 465, column: 5, scope: !8151)
!8191 = !DILocalVariable(name: "sshdr", scope: !8151, file: !3, line: 466, type: !7663)
!8192 = !DILocation(line: 466, column: 24, scope: !8151)
!8193 = !DILocalVariable(name: "cmd_result", scope: !8151, file: !3, line: 467, type: !211)
!8194 = !DILocation(line: 467, column: 6, scope: !8151)
!8195 = !DILocation(line: 469, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 469, column: 6)
!8197 = !DILocation(line: 469, column: 10, scope: !8196)
!8198 = !DILocation(line: 469, column: 6, scope: !8151)
!8199 = !DILocation(line: 470, column: 3, scope: !8196)
!8200 = !DILocation(line: 472, column: 21, scope: !8170)
!8201 = !DILocation(line: 472, column: 27, scope: !8170)
!8202 = !DILocation(line: 191, column: 6, scope: !7626, inlinedAt: !8169)
!8203 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !8168)
!8204 = !DILocation(line: 0, scope: !7686, inlinedAt: !8168)
!8205 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !8168)
!8206 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !8168)
!8207 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !8168)
!8208 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !8168)
!8209 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !8168)
!8210 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !8168)
!8211 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !8168)
!8212 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !8168)
!8213 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !8168)
!8214 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !8168)
!8215 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !8168)
!8216 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !8168)
!8217 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !8168)
!8218 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !8168)
!8219 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !8168)
!8220 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !8168)
!8221 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !8168)
!8222 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !8168)
!8223 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !8168)
!8224 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !8168)
!8225 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !8168)
!8226 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !8168)
!8227 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !8168)
!8228 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !8168)
!8229 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !8168)
!8230 = !DILocation(line: 191, column: 6, scope: !7627, inlinedAt: !8169)
!8231 = !DILocation(line: 192, column: 23, scope: !7626, inlinedAt: !8169)
!8232 = !DILocation(line: 192, column: 27, scope: !7626, inlinedAt: !8169)
!8233 = !DILocation(line: 192, column: 33, scope: !7626, inlinedAt: !8169)
!8234 = !DILocation(line: 192, column: 7, scope: !7626, inlinedAt: !8169)
!8235 = !DILocation(line: 192, column: 5, scope: !7626, inlinedAt: !8169)
!8236 = !DILocation(line: 192, column: 3, scope: !7626, inlinedAt: !8169)
!8237 = !DILocation(line: 193, column: 9, scope: !7627, inlinedAt: !8169)
!8238 = !DILocation(line: 472, column: 6, scope: !8170)
!8239 = !DILocation(line: 472, column: 6, scope: !8151)
!8240 = !DILocation(line: 473, column: 3, scope: !8170)
!8241 = !DILocation(line: 475, column: 2, scope: !8151)
!8242 = !DILocation(line: 476, column: 2, scope: !8151)
!8243 = !DILocation(line: 477, column: 2, scope: !8151)
!8244 = !DILocation(line: 477, column: 15, scope: !8151)
!8245 = !DILocation(line: 478, column: 2, scope: !8151)
!8246 = !DILocation(line: 478, column: 15, scope: !8151)
!8247 = !DILocation(line: 479, column: 2, scope: !8151)
!8248 = !DILocation(line: 479, column: 15, scope: !8151)
!8249 = !DILocation(line: 480, column: 17, scope: !8151)
!8250 = !DILocation(line: 480, column: 2, scope: !8151)
!8251 = !DILocation(line: 480, column: 15, scope: !8151)
!8252 = !DILocation(line: 481, column: 17, scope: !8151)
!8253 = !DILocation(line: 481, column: 2, scope: !8151)
!8254 = !DILocation(line: 481, column: 15, scope: !8151)
!8255 = !DILocation(line: 482, column: 17, scope: !8151)
!8256 = !DILocation(line: 482, column: 2, scope: !8151)
!8257 = !DILocation(line: 482, column: 15, scope: !8151)
!8258 = !DILocation(line: 483, column: 17, scope: !8151)
!8259 = !DILocation(line: 483, column: 2, scope: !8151)
!8260 = !DILocation(line: 483, column: 15, scope: !8151)
!8261 = !DILocation(line: 484, column: 17, scope: !8151)
!8262 = !DILocation(line: 484, column: 2, scope: !8151)
!8263 = !DILocation(line: 484, column: 15, scope: !8151)
!8264 = !DILocation(line: 485, column: 17, scope: !8151)
!8265 = !DILocation(line: 485, column: 25, scope: !8151)
!8266 = !DILocation(line: 485, column: 2, scope: !8151)
!8267 = !DILocation(line: 485, column: 15, scope: !8151)
!8268 = !DILocation(line: 486, column: 17, scope: !8151)
!8269 = !DILocation(line: 486, column: 2, scope: !8151)
!8270 = !DILocation(line: 486, column: 15, scope: !8151)
!8271 = !DILocation(line: 490, column: 15, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 490, column: 15)
!8273 = !DILocation(line: 490, column: 15, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 490, column: 15)
!8275 = !DILocation(line: 490, column: 13, scope: !8151)
!8276 = !DILocation(line: 493, column: 6, scope: !8159)
!8277 = !DILocation(line: 493, column: 30, scope: !8159)
!8278 = !DILocation(line: 493, column: 6, scope: !8151)
!8279 = !DILocalVariable(name: "desc", scope: !8158, file: !3, line: 494, type: !6537)
!8280 = !DILocation(line: 494, column: 7, scope: !8158)
!8281 = !DILocation(line: 494, column: 14, scope: !8158)
!8282 = !DILocation(line: 494, column: 23, scope: !8158)
!8283 = !DILocation(line: 495, column: 14, scope: !8158)
!8284 = !DILocation(line: 499, column: 7, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 499, column: 7)
!8286 = !DILocation(line: 499, column: 18, scope: !8285)
!8287 = !DILocation(line: 499, column: 7, scope: !8158)
!8288 = !DILocation(line: 500, column: 14, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 500, column: 8)
!8290 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 499, column: 46)
!8291 = !DILocation(line: 500, column: 8, scope: !8289)
!8292 = !DILocation(line: 500, column: 24, scope: !8289)
!8293 = !DILocation(line: 500, column: 43, scope: !8289)
!8294 = !DILocation(line: 501, column: 14, scope: !8289)
!8295 = !DILocation(line: 501, column: 8, scope: !8289)
!8296 = !DILocation(line: 501, column: 18, scope: !8289)
!8297 = !DILocation(line: 501, column: 23, scope: !8289)
!8298 = !DILocation(line: 501, column: 32, scope: !8289)
!8299 = !DILocation(line: 501, column: 26, scope: !8289)
!8300 = !DILocation(line: 501, column: 37, scope: !8289)
!8301 = !DILocation(line: 500, column: 8, scope: !8290)
!8302 = !DILocation(line: 502, column: 16, scope: !8289)
!8303 = !DILocation(line: 502, column: 5, scope: !8289)
!8304 = !DILocation(line: 503, column: 3, scope: !8290)
!8305 = !DILocation(line: 506, column: 7, scope: !8157)
!8306 = !DILocation(line: 506, column: 19, scope: !8157)
!8307 = !DILocation(line: 506, column: 27, scope: !8157)
!8308 = !DILocation(line: 507, column: 5, scope: !8157)
!8309 = !DILocation(line: 507, column: 13, scope: !8157)
!8310 = !DILocation(line: 506, column: 7, scope: !8158)
!8311 = !DILocation(line: 508, column: 14, scope: !8156)
!8312 = !DILocation(line: 508, column: 4, scope: !8156)
!8313 = !DILocation(line: 508, column: 12, scope: !8156)
!8314 = !DILocation(line: 509, column: 14, scope: !8156)
!8315 = !DILocation(line: 509, column: 4, scope: !8156)
!8316 = !DILocation(line: 509, column: 12, scope: !8156)
!8317 = !DILocation(line: 510, column: 14, scope: !8156)
!8318 = !DILocation(line: 510, column: 4, scope: !8156)
!8319 = !DILocation(line: 510, column: 12, scope: !8156)
!8320 = !DILocation(line: 511, column: 14, scope: !8156)
!8321 = !DILocation(line: 511, column: 4, scope: !8156)
!8322 = !DILocation(line: 511, column: 12, scope: !8156)
!8323 = !DILocation(line: 512, column: 14, scope: !8156)
!8324 = !DILocation(line: 512, column: 4, scope: !8156)
!8325 = !DILocation(line: 512, column: 12, scope: !8156)
!8326 = !DILocation(line: 513, column: 14, scope: !8156)
!8327 = !DILocation(line: 513, column: 4, scope: !8156)
!8328 = !DILocation(line: 513, column: 12, scope: !8156)
!8329 = !DILocation(line: 514, column: 14, scope: !8156)
!8330 = !DILocation(line: 514, column: 4, scope: !8156)
!8331 = !DILocation(line: 514, column: 12, scope: !8156)
!8332 = !DILocation(line: 515, column: 21, scope: !8155)
!8333 = !DILocation(line: 515, column: 26, scope: !8155)
!8334 = !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8154)
!8335 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !8153)
!8336 = !DILocation(line: 0, scope: !7686, inlinedAt: !8153)
!8337 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !8153)
!8338 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !8153)
!8339 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !8153)
!8340 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !8153)
!8341 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !8153)
!8342 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !8153)
!8343 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !8153)
!8344 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !8153)
!8345 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !8153)
!8346 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !8153)
!8347 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !8153)
!8348 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !8153)
!8349 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !8153)
!8350 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !8153)
!8351 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !8153)
!8352 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !8153)
!8353 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !8153)
!8354 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !8153)
!8355 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !8153)
!8356 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !8153)
!8357 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !8153)
!8358 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !8153)
!8359 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !8153)
!8360 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !8153)
!8361 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !8153)
!8362 = !DILocation(line: 199, column: 6, scope: !7531, inlinedAt: !8154)
!8363 = !DILocation(line: 200, column: 21, scope: !7529, inlinedAt: !8154)
!8364 = !DILocation(line: 200, column: 25, scope: !7529, inlinedAt: !8154)
!8365 = !DILocation(line: 200, column: 31, scope: !7529, inlinedAt: !8154)
!8366 = !DILocation(line: 200, column: 7, scope: !7529, inlinedAt: !8154)
!8367 = !DILocation(line: 200, column: 5, scope: !7529, inlinedAt: !8154)
!8368 = !DILocation(line: 200, column: 3, scope: !7529, inlinedAt: !8154)
!8369 = !DILocation(line: 201, column: 9, scope: !7531, inlinedAt: !8154)
!8370 = !DILocation(line: 515, column: 8, scope: !8155)
!8371 = !DILocation(line: 515, column: 8, scope: !8156)
!8372 = !DILocation(line: 516, column: 8, scope: !8155)
!8373 = !DILocation(line: 516, column: 5, scope: !8155)
!8374 = !DILocation(line: 517, column: 3, scope: !8156)
!8375 = !DILocation(line: 518, column: 2, scope: !8158)
!8376 = !DILocation(line: 520, column: 6, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 520, column: 6)
!8378 = !DILocation(line: 520, column: 6, scope: !8151)
!8379 = !DILocation(line: 521, column: 6, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 520, column: 18)
!8381 = !DILocation(line: 522, column: 3, scope: !8380)
!8382 = !DILabel(scope: !8151, name: "error", file: !3, line: 525)
!8383 = !DILocation(line: 525, column: 2, scope: !8151)
!8384 = !DILocation(line: 526, column: 9, scope: !8151)
!8385 = !DILocation(line: 526, column: 2, scope: !8151)
!8386 = !DILocation(line: 527, column: 1, scope: !8151)
!8387 = distinct !DISubprogram(name: "ata_sas_scsi_ioctl", scope: !3, file: !3, line: 542, type: !8388, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8388 = !DISubroutineType(types: !8389)
!8389 = !{!211, !988, !5987, !7, !983}
!8390 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !8391)
!8391 = distinct !DILocation(line: 573, column: 3, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 549, column: 15)
!8393 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !8391)
!8394 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !8395)
!8395 = distinct !DILocation(line: 563, column: 3, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 563, column: 3)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 563, column: 3)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 563, column: 3)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 563, column: 3)
!8400 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 563, column: 3)
!8401 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !8402)
!8402 = distinct !DILocation(line: 553, column: 3, scope: !8392)
!8403 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !8402)
!8404 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !8405)
!8405 = distinct !DILocation(line: 551, column: 3, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 551, column: 3)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 551, column: 3)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 551, column: 3)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 551, column: 3)
!8410 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 551, column: 3)
!8411 = !DILocalVariable(name: "ap", arg: 1, scope: !8387, file: !3, line: 542, type: !988)
!8412 = !DILocation(line: 542, column: 41, scope: !8387)
!8413 = !DILocalVariable(name: "scsidev", arg: 2, scope: !8387, file: !3, line: 542, type: !5987)
!8414 = !DILocation(line: 542, column: 65, scope: !8387)
!8415 = !DILocalVariable(name: "cmd", arg: 3, scope: !8387, file: !3, line: 543, type: !7)
!8416 = !DILocation(line: 543, column: 21, scope: !8387)
!8417 = !DILocalVariable(name: "arg", arg: 4, scope: !8387, file: !3, line: 543, type: !983)
!8418 = !DILocation(line: 543, column: 39, scope: !8387)
!8419 = !DILocalVariable(name: "val", scope: !8387, file: !3, line: 545, type: !986)
!8420 = !DILocation(line: 545, column: 16, scope: !8387)
!8421 = !DILocalVariable(name: "rc", scope: !8387, file: !3, line: 546, type: !211)
!8422 = !DILocation(line: 546, column: 6, scope: !8387)
!8423 = !DILocalVariable(name: "flags", scope: !8387, file: !3, line: 547, type: !986)
!8424 = !DILocation(line: 547, column: 16, scope: !8387)
!8425 = !DILocation(line: 549, column: 10, scope: !8387)
!8426 = !DILocation(line: 549, column: 2, scope: !8387)
!8427 = !DILocation(line: 551, column: 3, scope: !8392)
!8428 = !DILocation(line: 551, column: 3, scope: !8410)
!8429 = !DILocalVariable(name: "__dummy", scope: !8430, file: !3, line: 551, type: !986)
!8430 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 551, column: 3)
!8431 = !DILocation(line: 551, column: 3, scope: !8430)
!8432 = !DILocalVariable(name: "__dummy2", scope: !8430, file: !3, line: 551, type: !986)
!8433 = !DILocation(line: 551, column: 3, scope: !8409)
!8434 = !DILocation(line: 551, column: 3, scope: !8408)
!8435 = !DILocation(line: 551, column: 3, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 551, column: 3)
!8437 = !DILocalVariable(name: "__dummy", scope: !8438, file: !3, line: 551, type: !986)
!8438 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 551, column: 3)
!8439 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 551, column: 3)
!8440 = !DILocation(line: 551, column: 3, scope: !8438)
!8441 = !DILocalVariable(name: "__dummy2", scope: !8438, file: !3, line: 551, type: !986)
!8442 = !DILocation(line: 551, column: 3, scope: !8439)
!8443 = !DILocation(line: 551, column: 3, scope: !8407)
!8444 = !{i32 -2139709762}
!8445 = !DILocation(line: 551, column: 3, scope: !8406)
!8446 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !8405)
!8447 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !8405)
!8448 = !DILocation(line: 552, column: 19, scope: !8392)
!8449 = !DILocation(line: 552, column: 9, scope: !8392)
!8450 = !DILocation(line: 552, column: 7, scope: !8392)
!8451 = !DILocation(line: 553, column: 26, scope: !8392)
!8452 = !DILocation(line: 553, column: 30, scope: !8392)
!8453 = !DILocation(line: 553, column: 36, scope: !8392)
!8454 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !8402)
!8455 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !8402)
!8456 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !8402)
!8457 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !8402)
!8458 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !8402)
!8459 = !DILocation(line: 558, column: 10, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 558, column: 10)
!8461 = !DILocalVariable(name: "__ret_pu", scope: !8462, file: !3, line: 558, type: !211)
!8462 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 558, column: 10)
!8463 = !DILocation(line: 558, column: 10, scope: !8462)
!8464 = !DILocalVariable(name: "__ptr_pu", scope: !8462, file: !3, line: 558, type: !983)
!8465 = !DILocalVariable(name: "__val_pu", scope: !8462, file: !3, line: 558, type: !986)
!8466 = !{i32 -2139709327}
!8467 = !DILocation(line: 558, column: 10, scope: !8392)
!8468 = !DILocation(line: 558, column: 3, scope: !8392)
!8469 = !DILocation(line: 561, column: 25, scope: !8392)
!8470 = !DILocation(line: 561, column: 9, scope: !8392)
!8471 = !DILocation(line: 561, column: 7, scope: !8392)
!8472 = !DILocation(line: 562, column: 6, scope: !8392)
!8473 = !DILocation(line: 563, column: 3, scope: !8392)
!8474 = !DILocation(line: 563, column: 3, scope: !8400)
!8475 = !DILocalVariable(name: "__dummy", scope: !8476, file: !3, line: 563, type: !986)
!8476 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 563, column: 3)
!8477 = !DILocation(line: 563, column: 3, scope: !8476)
!8478 = !DILocalVariable(name: "__dummy2", scope: !8476, file: !3, line: 563, type: !986)
!8479 = !DILocation(line: 563, column: 3, scope: !8399)
!8480 = !DILocation(line: 563, column: 3, scope: !8398)
!8481 = !DILocation(line: 563, column: 3, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 563, column: 3)
!8483 = !DILocalVariable(name: "__dummy", scope: !8484, file: !3, line: 563, type: !986)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 563, column: 3)
!8485 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 563, column: 3)
!8486 = !DILocation(line: 563, column: 3, scope: !8484)
!8487 = !DILocalVariable(name: "__dummy2", scope: !8484, file: !3, line: 563, type: !986)
!8488 = !DILocation(line: 563, column: 3, scope: !8485)
!8489 = !DILocation(line: 563, column: 3, scope: !8397)
!8490 = !{i32 -2139707898}
!8491 = !DILocation(line: 563, column: 3, scope: !8396)
!8492 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !8395)
!8493 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !8395)
!8494 = !DILocation(line: 564, column: 7, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 564, column: 7)
!8496 = !DILocation(line: 564, column: 11, scope: !8495)
!8497 = !DILocation(line: 564, column: 18, scope: !8495)
!8498 = !DILocation(line: 564, column: 7, scope: !8392)
!8499 = !DILocation(line: 565, column: 8, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 565, column: 8)
!8501 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 564, column: 43)
!8502 = !DILocation(line: 565, column: 8, scope: !8501)
!8503 = !DILocation(line: 566, column: 5, scope: !8500)
!8504 = !DILocation(line: 566, column: 9, scope: !8500)
!8505 = !DILocation(line: 566, column: 16, scope: !8500)
!8506 = !DILocation(line: 568, column: 5, scope: !8500)
!8507 = !DILocation(line: 568, column: 9, scope: !8500)
!8508 = !DILocation(line: 568, column: 16, scope: !8500)
!8509 = !DILocation(line: 569, column: 3, scope: !8501)
!8510 = !DILocation(line: 570, column: 8, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 570, column: 8)
!8512 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 569, column: 10)
!8513 = !DILocation(line: 570, column: 25, scope: !8511)
!8514 = !DILocation(line: 570, column: 15, scope: !8511)
!8515 = !DILocation(line: 570, column: 12, scope: !8511)
!8516 = !DILocation(line: 570, column: 8, scope: !8512)
!8517 = !DILocation(line: 571, column: 8, scope: !8511)
!8518 = !DILocation(line: 571, column: 5, scope: !8511)
!8519 = !DILocation(line: 573, column: 26, scope: !8392)
!8520 = !DILocation(line: 573, column: 30, scope: !8392)
!8521 = !DILocation(line: 573, column: 36, scope: !8392)
!8522 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !8391)
!8523 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !8391)
!8524 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !8391)
!8525 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !8391)
!8526 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !8391)
!8527 = !DILocation(line: 574, column: 10, scope: !8392)
!8528 = !DILocation(line: 574, column: 3, scope: !8392)
!8529 = !DILocation(line: 577, column: 27, scope: !8392)
!8530 = !DILocation(line: 577, column: 31, scope: !8392)
!8531 = !DILocation(line: 577, column: 40, scope: !8392)
!8532 = !DILocation(line: 577, column: 10, scope: !8392)
!8533 = !DILocation(line: 577, column: 3, scope: !8392)
!8534 = !DILocation(line: 580, column: 8, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 580, column: 7)
!8536 = !DILocation(line: 580, column: 31, scope: !8535)
!8537 = !DILocation(line: 580, column: 35, scope: !8535)
!8538 = !DILocation(line: 580, column: 7, scope: !8392)
!8539 = !DILocation(line: 581, column: 4, scope: !8535)
!8540 = !DILocation(line: 582, column: 24, scope: !8392)
!8541 = !DILocation(line: 582, column: 33, scope: !8392)
!8542 = !DILocation(line: 582, column: 10, scope: !8392)
!8543 = !DILocation(line: 582, column: 3, scope: !8392)
!8544 = !DILocation(line: 585, column: 8, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 585, column: 7)
!8546 = !DILocation(line: 585, column: 31, scope: !8545)
!8547 = !DILocation(line: 585, column: 35, scope: !8545)
!8548 = !DILocation(line: 585, column: 7, scope: !8392)
!8549 = !DILocation(line: 586, column: 4, scope: !8545)
!8550 = !DILocation(line: 587, column: 25, scope: !8392)
!8551 = !DILocation(line: 587, column: 34, scope: !8392)
!8552 = !DILocation(line: 587, column: 10, scope: !8392)
!8553 = !DILocation(line: 587, column: 3, scope: !8392)
!8554 = !DILocation(line: 590, column: 6, scope: !8392)
!8555 = !DILocation(line: 591, column: 3, scope: !8392)
!8556 = !DILocation(line: 594, column: 9, scope: !8387)
!8557 = !DILocation(line: 594, column: 2, scope: !8387)
!8558 = !DILocation(line: 595, column: 1, scope: !8387)
!8559 = distinct !DISubprogram(name: "ata_ioc32", scope: !3, file: !3, line: 529, type: !6675, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8560 = !DILocalVariable(name: "ap", arg: 1, scope: !8559, file: !3, line: 529, type: !988)
!8561 = !DILocation(line: 529, column: 39, scope: !8559)
!8562 = !DILocation(line: 531, column: 6, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 531, column: 6)
!8564 = !DILocation(line: 531, column: 10, scope: !8563)
!8565 = !DILocation(line: 531, column: 16, scope: !8563)
!8566 = !DILocation(line: 531, column: 6, scope: !8559)
!8567 = !DILocation(line: 532, column: 3, scope: !8563)
!8568 = !DILocation(line: 533, column: 6, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 533, column: 6)
!8570 = !DILocation(line: 533, column: 10, scope: !8569)
!8571 = !DILocation(line: 533, column: 17, scope: !8569)
!8572 = !DILocation(line: 533, column: 6, scope: !8559)
!8573 = !DILocation(line: 534, column: 3, scope: !8569)
!8574 = !DILocation(line: 535, column: 2, scope: !8559)
!8575 = !DILocation(line: 536, column: 1, scope: !8559)
!8576 = distinct !DISubprogram(name: "might_fault", scope: !933, file: !933, line: 315, type: !5582, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8577 = !DILocation(line: 315, column: 40, scope: !8576)
!8578 = distinct !DISubprogram(name: "ata_get_identity", scope: !3, file: !3, line: 317, type: !8579, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8579 = !DISubroutineType(types: !8580)
!8580 = !{!211, !988, !5987, !983}
!8581 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !8582)
!8582 = distinct !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8583)
!8583 = distinct !DILocation(line: 339, column: 6, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 339, column: 6)
!8585 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !8582)
!8586 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !8582)
!8587 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !8582)
!8588 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !8582)
!8589 = !DILocation(line: 197, column: 27, scope: !7531, inlinedAt: !8583)
!8590 = !DILocation(line: 197, column: 43, scope: !7531, inlinedAt: !8583)
!8591 = !DILocation(line: 197, column: 63, scope: !7531, inlinedAt: !8583)
!8592 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !8593)
!8593 = distinct !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8594)
!8594 = distinct !DILocation(line: 335, column: 6, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 335, column: 6)
!8596 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !8593)
!8597 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !8593)
!8598 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !8593)
!8599 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !8593)
!8600 = !DILocation(line: 197, column: 27, scope: !7531, inlinedAt: !8594)
!8601 = !DILocation(line: 197, column: 43, scope: !7531, inlinedAt: !8594)
!8602 = !DILocation(line: 197, column: 63, scope: !7531, inlinedAt: !8594)
!8603 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !8604)
!8604 = distinct !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8605)
!8605 = distinct !DILocation(line: 331, column: 6, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 331, column: 6)
!8607 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !8604)
!8608 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !8604)
!8609 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !8604)
!8610 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !8604)
!8611 = !DILocation(line: 197, column: 27, scope: !7531, inlinedAt: !8605)
!8612 = !DILocation(line: 197, column: 43, scope: !7531, inlinedAt: !8605)
!8613 = !DILocation(line: 197, column: 63, scope: !7531, inlinedAt: !8605)
!8614 = !DILocation(line: 138, column: 29, scope: !7523, inlinedAt: !8615)
!8615 = distinct !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8616)
!8616 = distinct !DILocation(line: 327, column: 6, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 327, column: 6)
!8618 = !DILocation(line: 138, column: 42, scope: !7523, inlinedAt: !8615)
!8619 = !DILocation(line: 138, column: 54, scope: !7523, inlinedAt: !8615)
!8620 = !DILocation(line: 140, column: 6, scope: !7523, inlinedAt: !8615)
!8621 = !DILocation(line: 150, column: 6, scope: !7543, inlinedAt: !8615)
!8622 = !DILocation(line: 197, column: 27, scope: !7531, inlinedAt: !8616)
!8623 = !DILocation(line: 197, column: 43, scope: !7531, inlinedAt: !8616)
!8624 = !DILocation(line: 197, column: 63, scope: !7531, inlinedAt: !8616)
!8625 = !DILocalVariable(name: "ap", arg: 1, scope: !8578, file: !3, line: 317, type: !988)
!8626 = !DILocation(line: 317, column: 46, scope: !8578)
!8627 = !DILocalVariable(name: "sdev", arg: 2, scope: !8578, file: !3, line: 317, type: !5987)
!8628 = !DILocation(line: 317, column: 70, scope: !8578)
!8629 = !DILocalVariable(name: "arg", arg: 3, scope: !8578, file: !3, line: 318, type: !983)
!8630 = !DILocation(line: 318, column: 21, scope: !8578)
!8631 = !DILocalVariable(name: "dev", scope: !8578, file: !3, line: 320, type: !6455)
!8632 = !DILocation(line: 320, column: 21, scope: !8578)
!8633 = !DILocation(line: 320, column: 45, scope: !8578)
!8634 = !DILocation(line: 320, column: 49, scope: !8578)
!8635 = !DILocation(line: 320, column: 27, scope: !8578)
!8636 = !DILocalVariable(name: "dst", scope: !8578, file: !3, line: 321, type: !6696)
!8637 = !DILocation(line: 321, column: 14, scope: !8578)
!8638 = !DILocation(line: 321, column: 20, scope: !8578)
!8639 = !DILocalVariable(name: "buf", scope: !8578, file: !3, line: 322, type: !8640)
!8640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1439, size: 320, elements: !8641)
!8641 = !{!8642}
!8642 = !DISubrange(count: 40)
!8643 = !DILocation(line: 322, column: 7, scope: !8578)
!8644 = !DILocation(line: 324, column: 7, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 324, column: 6)
!8646 = !DILocation(line: 324, column: 6, scope: !8578)
!8647 = !DILocation(line: 325, column: 3, scope: !8645)
!8648 = !DILocation(line: 327, column: 19, scope: !8617)
!8649 = !DILocation(line: 327, column: 24, scope: !8617)
!8650 = !DILocation(line: 327, column: 29, scope: !8617)
!8651 = !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8616)
!8652 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !8615)
!8653 = !DILocation(line: 0, scope: !7686, inlinedAt: !8615)
!8654 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !8615)
!8655 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !8615)
!8656 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !8615)
!8657 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !8615)
!8658 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !8615)
!8659 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !8615)
!8660 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !8615)
!8661 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !8615)
!8662 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !8615)
!8663 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !8615)
!8664 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !8615)
!8665 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !8615)
!8666 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !8615)
!8667 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !8615)
!8668 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !8615)
!8669 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !8615)
!8670 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !8615)
!8671 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !8615)
!8672 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !8615)
!8673 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !8615)
!8674 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !8615)
!8675 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !8615)
!8676 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !8615)
!8677 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !8615)
!8678 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !8615)
!8679 = !DILocation(line: 199, column: 6, scope: !7531, inlinedAt: !8616)
!8680 = !DILocation(line: 200, column: 21, scope: !7529, inlinedAt: !8616)
!8681 = !DILocation(line: 200, column: 25, scope: !7529, inlinedAt: !8616)
!8682 = !DILocation(line: 200, column: 31, scope: !7529, inlinedAt: !8616)
!8683 = !DILocation(line: 200, column: 7, scope: !7529, inlinedAt: !8616)
!8684 = !DILocation(line: 200, column: 5, scope: !7529, inlinedAt: !8616)
!8685 = !DILocation(line: 200, column: 3, scope: !7529, inlinedAt: !8616)
!8686 = !DILocation(line: 201, column: 9, scope: !7531, inlinedAt: !8616)
!8687 = !DILocation(line: 327, column: 6, scope: !8617)
!8688 = !DILocation(line: 327, column: 6, scope: !8578)
!8689 = !DILocation(line: 328, column: 3, scope: !8617)
!8690 = !DILocation(line: 330, column: 16, scope: !8578)
!8691 = !DILocation(line: 330, column: 21, scope: !8578)
!8692 = !DILocation(line: 330, column: 25, scope: !8578)
!8693 = !DILocation(line: 330, column: 2, scope: !8578)
!8694 = !DILocation(line: 331, column: 19, scope: !8606)
!8695 = !DILocation(line: 331, column: 23, scope: !8606)
!8696 = !DILocation(line: 331, column: 38, scope: !8606)
!8697 = !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8605)
!8698 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !8604)
!8699 = !DILocation(line: 0, scope: !7686, inlinedAt: !8604)
!8700 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !8604)
!8701 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !8604)
!8702 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !8604)
!8703 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !8604)
!8704 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !8604)
!8705 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !8604)
!8706 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !8604)
!8707 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !8604)
!8708 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !8604)
!8709 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !8604)
!8710 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !8604)
!8711 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !8604)
!8712 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !8604)
!8713 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !8604)
!8714 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !8604)
!8715 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !8604)
!8716 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !8604)
!8717 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !8604)
!8718 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !8604)
!8719 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !8604)
!8720 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !8604)
!8721 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !8604)
!8722 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !8604)
!8723 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !8604)
!8724 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !8604)
!8725 = !DILocation(line: 199, column: 6, scope: !7531, inlinedAt: !8605)
!8726 = !DILocation(line: 200, column: 21, scope: !7529, inlinedAt: !8605)
!8727 = !DILocation(line: 200, column: 25, scope: !7529, inlinedAt: !8605)
!8728 = !DILocation(line: 200, column: 31, scope: !7529, inlinedAt: !8605)
!8729 = !DILocation(line: 200, column: 7, scope: !7529, inlinedAt: !8605)
!8730 = !DILocation(line: 200, column: 5, scope: !7529, inlinedAt: !8605)
!8731 = !DILocation(line: 200, column: 3, scope: !7529, inlinedAt: !8605)
!8732 = !DILocation(line: 201, column: 9, scope: !7531, inlinedAt: !8605)
!8733 = !DILocation(line: 331, column: 6, scope: !8606)
!8734 = !DILocation(line: 331, column: 6, scope: !8578)
!8735 = !DILocation(line: 332, column: 3, scope: !8606)
!8736 = !DILocation(line: 334, column: 16, scope: !8578)
!8737 = !DILocation(line: 334, column: 21, scope: !8578)
!8738 = !DILocation(line: 334, column: 25, scope: !8578)
!8739 = !DILocation(line: 334, column: 2, scope: !8578)
!8740 = !DILocation(line: 335, column: 19, scope: !8595)
!8741 = !DILocation(line: 335, column: 23, scope: !8595)
!8742 = !DILocation(line: 335, column: 40, scope: !8595)
!8743 = !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8594)
!8744 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !8593)
!8745 = !DILocation(line: 0, scope: !7686, inlinedAt: !8593)
!8746 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !8593)
!8747 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !8593)
!8748 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !8593)
!8749 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !8593)
!8750 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !8593)
!8751 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !8593)
!8752 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !8593)
!8753 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !8593)
!8754 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !8593)
!8755 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !8593)
!8756 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !8593)
!8757 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !8593)
!8758 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !8593)
!8759 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !8593)
!8760 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !8593)
!8761 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !8593)
!8762 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !8593)
!8763 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !8593)
!8764 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !8593)
!8765 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !8593)
!8766 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !8593)
!8767 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !8593)
!8768 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !8593)
!8769 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !8593)
!8770 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !8593)
!8771 = !DILocation(line: 199, column: 6, scope: !7531, inlinedAt: !8594)
!8772 = !DILocation(line: 200, column: 21, scope: !7529, inlinedAt: !8594)
!8773 = !DILocation(line: 200, column: 25, scope: !7529, inlinedAt: !8594)
!8774 = !DILocation(line: 200, column: 31, scope: !7529, inlinedAt: !8594)
!8775 = !DILocation(line: 200, column: 7, scope: !7529, inlinedAt: !8594)
!8776 = !DILocation(line: 200, column: 5, scope: !7529, inlinedAt: !8594)
!8777 = !DILocation(line: 200, column: 3, scope: !7529, inlinedAt: !8594)
!8778 = !DILocation(line: 201, column: 9, scope: !7531, inlinedAt: !8594)
!8779 = !DILocation(line: 335, column: 6, scope: !8595)
!8780 = !DILocation(line: 335, column: 6, scope: !8578)
!8781 = !DILocation(line: 336, column: 3, scope: !8595)
!8782 = !DILocation(line: 338, column: 16, scope: !8578)
!8783 = !DILocation(line: 338, column: 21, scope: !8578)
!8784 = !DILocation(line: 338, column: 25, scope: !8578)
!8785 = !DILocation(line: 338, column: 2, scope: !8578)
!8786 = !DILocation(line: 339, column: 19, scope: !8584)
!8787 = !DILocation(line: 339, column: 23, scope: !8584)
!8788 = !DILocation(line: 339, column: 39, scope: !8584)
!8789 = !DILocation(line: 199, column: 6, scope: !7529, inlinedAt: !8583)
!8790 = !DILocation(line: 141, column: 6, scope: !7686, inlinedAt: !8582)
!8791 = !DILocation(line: 0, scope: !7686, inlinedAt: !8582)
!8792 = !DILocation(line: 141, column: 6, scope: !7523, inlinedAt: !8582)
!8793 = !DILocation(line: 142, column: 29, scope: !7690, inlinedAt: !8582)
!8794 = !DILocation(line: 142, column: 8, scope: !7690, inlinedAt: !8582)
!8795 = !DILocation(line: 142, column: 7, scope: !7691, inlinedAt: !8582)
!8796 = !DILocation(line: 143, column: 18, scope: !7690, inlinedAt: !8582)
!8797 = !DILocation(line: 143, column: 22, scope: !7690, inlinedAt: !8582)
!8798 = !DILocation(line: 143, column: 4, scope: !7690, inlinedAt: !8582)
!8799 = !DILocation(line: 144, column: 12, scope: !7698, inlinedAt: !8582)
!8800 = !DILocation(line: 144, column: 12, scope: !7690, inlinedAt: !8582)
!8801 = !DILocation(line: 145, column: 4, scope: !7698, inlinedAt: !8582)
!8802 = !DILocation(line: 147, column: 4, scope: !7698, inlinedAt: !8582)
!8803 = !DILocation(line: 148, column: 3, scope: !7691, inlinedAt: !8582)
!8804 = !DILocation(line: 150, column: 6, scope: !7704, inlinedAt: !8582)
!8805 = !DILocation(line: 150, column: 6, scope: !7706, inlinedAt: !8582)
!8806 = !DILocation(line: 150, column: 6, scope: !7710, inlinedAt: !8582)
!8807 = !DILocation(line: 150, column: 6, scope: !7707, inlinedAt: !8582)
!8808 = !DILocation(line: 150, column: 6, scope: !7544, inlinedAt: !8582)
!8809 = !DILocation(line: 150, column: 6, scope: !7523, inlinedAt: !8582)
!8810 = !DILocation(line: 151, column: 3, scope: !7544, inlinedAt: !8582)
!8811 = !DILocation(line: 152, column: 20, scope: !7523, inlinedAt: !8582)
!8812 = !DILocation(line: 152, column: 26, scope: !7523, inlinedAt: !8582)
!8813 = !DILocation(line: 152, column: 33, scope: !7523, inlinedAt: !8582)
!8814 = !DILocation(line: 152, column: 2, scope: !7523, inlinedAt: !8582)
!8815 = !DILocation(line: 153, column: 2, scope: !7523, inlinedAt: !8582)
!8816 = !DILocation(line: 154, column: 1, scope: !7523, inlinedAt: !8582)
!8817 = !DILocation(line: 199, column: 6, scope: !7531, inlinedAt: !8583)
!8818 = !DILocation(line: 200, column: 21, scope: !7529, inlinedAt: !8583)
!8819 = !DILocation(line: 200, column: 25, scope: !7529, inlinedAt: !8583)
!8820 = !DILocation(line: 200, column: 31, scope: !7529, inlinedAt: !8583)
!8821 = !DILocation(line: 200, column: 7, scope: !7529, inlinedAt: !8583)
!8822 = !DILocation(line: 200, column: 5, scope: !7529, inlinedAt: !8583)
!8823 = !DILocation(line: 200, column: 3, scope: !7529, inlinedAt: !8583)
!8824 = !DILocation(line: 201, column: 9, scope: !7531, inlinedAt: !8583)
!8825 = !DILocation(line: 339, column: 6, scope: !8584)
!8826 = !DILocation(line: 339, column: 6, scope: !8578)
!8827 = !DILocation(line: 340, column: 3, scope: !8584)
!8828 = !DILocation(line: 342, column: 2, scope: !8578)
!8829 = !DILocation(line: 343, column: 1, scope: !8578)
!8830 = distinct !DISubprogram(name: "ata_scsi_ioctl", scope: !3, file: !3, line: 598, type: !5985, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8831 = !DILocalVariable(name: "scsidev", arg: 1, scope: !8830, file: !3, line: 598, type: !5987)
!8832 = !DILocation(line: 598, column: 40, scope: !8830)
!8833 = !DILocalVariable(name: "cmd", arg: 2, scope: !8830, file: !3, line: 598, type: !7)
!8834 = !DILocation(line: 598, column: 62, scope: !8830)
!8835 = !DILocalVariable(name: "arg", arg: 3, scope: !8830, file: !3, line: 599, type: !983)
!8836 = !DILocation(line: 599, column: 19, scope: !8830)
!8837 = !DILocation(line: 601, column: 46, scope: !8830)
!8838 = !DILocation(line: 601, column: 55, scope: !8830)
!8839 = !DILocation(line: 601, column: 28, scope: !8830)
!8840 = !DILocation(line: 602, column: 5, scope: !8830)
!8841 = !DILocation(line: 602, column: 14, scope: !8830)
!8842 = !DILocation(line: 602, column: 19, scope: !8830)
!8843 = !DILocation(line: 601, column: 9, scope: !8830)
!8844 = !DILocation(line: 601, column: 2, scope: !8830)
!8845 = distinct !DISubprogram(name: "ata_scsi_sdev_config", scope: !3, file: !3, line: 991, type: !6240, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8846 = !DILocalVariable(name: "sdev", arg: 1, scope: !8845, file: !3, line: 991, type: !5987)
!8847 = !DILocation(line: 991, column: 47, scope: !8845)
!8848 = !DILocation(line: 993, column: 2, scope: !8845)
!8849 = !DILocation(line: 993, column: 8, scope: !8845)
!8850 = !DILocation(line: 993, column: 22, scope: !8845)
!8851 = !DILocation(line: 994, column: 2, scope: !8845)
!8852 = !DILocation(line: 994, column: 8, scope: !8845)
!8853 = !DILocation(line: 994, column: 22, scope: !8845)
!8854 = !DILocation(line: 995, column: 2, scope: !8845)
!8855 = !DILocation(line: 995, column: 8, scope: !8845)
!8856 = !DILocation(line: 995, column: 22, scope: !8845)
!8857 = !DILocation(line: 1002, column: 2, scope: !8845)
!8858 = !DILocation(line: 1002, column: 8, scope: !8845)
!8859 = !DILocation(line: 1002, column: 27, scope: !8845)
!8860 = !DILocation(line: 1003, column: 1, scope: !8845)
!8861 = distinct !DISubprogram(name: "ata_scsi_dma_need_drain", scope: !3, file: !3, line: 1020, type: !6268, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8862 = !DILocalVariable(name: "rq", arg: 1, scope: !8861, file: !3, line: 1020, type: !3768)
!8863 = !DILocation(line: 1020, column: 46, scope: !8861)
!8864 = !DILocation(line: 1022, column: 33, scope: !8861)
!8865 = !DILocation(line: 1022, column: 24, scope: !8861)
!8866 = !DILocation(line: 1022, column: 38, scope: !8861)
!8867 = !DILocation(line: 1022, column: 9, scope: !8861)
!8868 = !DILocation(line: 1022, column: 46, scope: !8861)
!8869 = !DILocation(line: 1022, column: 2, scope: !8861)
!8870 = distinct !DISubprogram(name: "scsi_req", scope: !6145, file: !6145, line: 20, type: !8871, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8871 = !DISubroutineType(types: !8872)
!8872 = !{!8873, !3768}
!8873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 64)
!8874 = !DILocalVariable(name: "rq", arg: 1, scope: !8870, file: !6145, line: 20, type: !3768)
!8875 = !DILocation(line: 20, column: 61, scope: !8870)
!8876 = !DILocation(line: 22, column: 26, scope: !8870)
!8877 = !DILocation(line: 22, column: 9, scope: !8870)
!8878 = !DILocation(line: 22, column: 2, scope: !8870)
!8879 = distinct !DISubprogram(name: "ata_scsi_dev_config", scope: !3, file: !3, line: 1026, type: !8880, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!211, !5987, !6455}
!8882 = !DILocation(line: 445, column: 72, scope: !7568, inlinedAt: !8883)
!8883 = distinct !DILocation(line: 552, column: 10, scope: !7573, inlinedAt: !8884)
!8884 = distinct !DILocation(line: 1046, column: 25, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 1036, column: 35)
!8886 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1036, column: 6)
!8887 = !DILocation(line: 446, column: 9, scope: !7568, inlinedAt: !8883)
!8888 = !DILocation(line: 446, column: 23, scope: !7568, inlinedAt: !8883)
!8889 = !DILocation(line: 448, column: 8, scope: !7568, inlinedAt: !8883)
!8890 = !DILocation(line: 318, column: 67, scope: !7588, inlinedAt: !8891)
!8891 = distinct !DILocation(line: 553, column: 20, scope: !7573, inlinedAt: !8884)
!8892 = !DILocation(line: 346, column: 58, scope: !7594, inlinedAt: !8893)
!8893 = distinct !DILocation(line: 547, column: 11, scope: !7573, inlinedAt: !8884)
!8894 = !DILocation(line: 472, column: 28, scope: !7600, inlinedAt: !8895)
!8895 = distinct !DILocation(line: 481, column: 9, scope: !7605, inlinedAt: !8896)
!8896 = distinct !DILocation(line: 545, column: 11, scope: !7607, inlinedAt: !8884)
!8897 = !DILocation(line: 472, column: 40, scope: !7600, inlinedAt: !8895)
!8898 = !DILocation(line: 472, column: 60, scope: !7600, inlinedAt: !8895)
!8899 = !DILocation(line: 478, column: 51, scope: !7605, inlinedAt: !8896)
!8900 = !DILocation(line: 478, column: 63, scope: !7605, inlinedAt: !8896)
!8901 = !DILocation(line: 480, column: 15, scope: !7605, inlinedAt: !8896)
!8902 = !DILocation(line: 538, column: 45, scope: !7575, inlinedAt: !8884)
!8903 = !DILocation(line: 538, column: 57, scope: !7575, inlinedAt: !8884)
!8904 = !DILocation(line: 542, column: 16, scope: !7573, inlinedAt: !8884)
!8905 = !DILocalVariable(name: "sdev", arg: 1, scope: !8879, file: !3, line: 1026, type: !5987)
!8906 = !DILocation(line: 1026, column: 45, scope: !8879)
!8907 = !DILocalVariable(name: "dev", arg: 2, scope: !8879, file: !3, line: 1026, type: !6455)
!8908 = !DILocation(line: 1026, column: 70, scope: !8879)
!8909 = !DILocalVariable(name: "q", scope: !8879, file: !3, line: 1028, type: !3764)
!8910 = !DILocation(line: 1028, column: 24, scope: !8879)
!8911 = !DILocation(line: 1028, column: 28, scope: !8879)
!8912 = !DILocation(line: 1028, column: 34, scope: !8879)
!8913 = !DILocation(line: 1030, column: 25, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1030, column: 6)
!8915 = !DILocation(line: 1030, column: 30, scope: !8914)
!8916 = !DILocation(line: 1030, column: 7, scope: !8914)
!8917 = !DILocation(line: 1030, column: 6, scope: !8879)
!8918 = !DILocation(line: 1031, column: 3, scope: !8914)
!8919 = !DILocation(line: 1031, column: 8, scope: !8914)
!8920 = !DILocation(line: 1031, column: 14, scope: !8914)
!8921 = !DILocation(line: 1034, column: 27, scope: !8879)
!8922 = !DILocation(line: 1034, column: 30, scope: !8879)
!8923 = !DILocation(line: 1034, column: 35, scope: !8879)
!8924 = !DILocation(line: 1034, column: 2, scope: !8879)
!8925 = !DILocation(line: 1036, column: 6, scope: !8886)
!8926 = !DILocation(line: 1036, column: 11, scope: !8886)
!8927 = !DILocation(line: 1036, column: 17, scope: !8886)
!8928 = !DILocation(line: 1036, column: 6, scope: !8879)
!8929 = !DILocation(line: 1037, column: 3, scope: !8885)
!8930 = !DILocation(line: 1037, column: 9, scope: !8885)
!8931 = !DILocation(line: 1037, column: 21, scope: !8885)
!8932 = !DILocation(line: 1040, column: 28, scope: !8885)
!8933 = !DILocation(line: 1040, column: 3, scope: !8885)
!8934 = !DILocation(line: 1043, column: 26, scope: !8885)
!8935 = !DILocation(line: 1043, column: 48, scope: !8885)
!8936 = !DILocation(line: 1043, column: 29, scope: !8885)
!8937 = !DILocation(line: 1043, column: 51, scope: !8885)
!8938 = !DILocation(line: 1043, column: 3, scope: !8885)
!8939 = !DILocation(line: 1045, column: 3, scope: !8885)
!8940 = !DILocation(line: 1045, column: 9, scope: !8885)
!8941 = !DILocation(line: 1045, column: 23, scope: !8885)
!8942 = !DILocation(line: 1046, column: 33, scope: !8885)
!8943 = !DILocation(line: 1046, column: 39, scope: !8885)
!8944 = !DILocation(line: 1047, column: 5, scope: !8885)
!8945 = !DILocation(line: 1047, column: 8, scope: !8885)
!8946 = !DILocation(line: 1047, column: 19, scope: !8885)
!8947 = !DILocation(line: 540, column: 27, scope: !7574, inlinedAt: !8884)
!8948 = !DILocation(line: 540, column: 6, scope: !7574, inlinedAt: !8884)
!8949 = !DILocation(line: 540, column: 6, scope: !7575, inlinedAt: !8884)
!8950 = !DILocation(line: 544, column: 7, scope: !7607, inlinedAt: !8884)
!8951 = !DILocation(line: 544, column: 12, scope: !7607, inlinedAt: !8884)
!8952 = !DILocation(line: 544, column: 7, scope: !7573, inlinedAt: !8884)
!8953 = !DILocation(line: 545, column: 25, scope: !7607, inlinedAt: !8884)
!8954 = !DILocation(line: 545, column: 31, scope: !7607, inlinedAt: !8884)
!8955 = !DILocation(line: 480, column: 33, scope: !7605, inlinedAt: !8896)
!8956 = !DILocation(line: 480, column: 23, scope: !7605, inlinedAt: !8896)
!8957 = !DILocation(line: 481, column: 29, scope: !7605, inlinedAt: !8896)
!8958 = !DILocation(line: 481, column: 35, scope: !7605, inlinedAt: !8896)
!8959 = !DILocation(line: 481, column: 42, scope: !7605, inlinedAt: !8896)
!8960 = !DILocation(line: 474, column: 23, scope: !7600, inlinedAt: !8895)
!8961 = !DILocation(line: 474, column: 29, scope: !7600, inlinedAt: !8895)
!8962 = !DILocation(line: 474, column: 36, scope: !7600, inlinedAt: !8895)
!8963 = !DILocation(line: 474, column: 9, scope: !7600, inlinedAt: !8895)
!8964 = !DILocation(line: 545, column: 4, scope: !7607, inlinedAt: !8884)
!8965 = !DILocation(line: 547, column: 25, scope: !7573, inlinedAt: !8884)
!8966 = !DILocation(line: 348, column: 7, scope: !7761, inlinedAt: !8893)
!8967 = !DILocation(line: 348, column: 6, scope: !7594, inlinedAt: !8893)
!8968 = !DILocation(line: 349, column: 3, scope: !7761, inlinedAt: !8893)
!8969 = !DILocation(line: 351, column: 6, scope: !7765, inlinedAt: !8893)
!8970 = !DILocation(line: 351, column: 11, scope: !7765, inlinedAt: !8893)
!8971 = !DILocation(line: 351, column: 6, scope: !7594, inlinedAt: !8893)
!8972 = !DILocation(line: 352, column: 3, scope: !7765, inlinedAt: !8893)
!8973 = !DILocation(line: 354, column: 32, scope: !7770, inlinedAt: !8893)
!8974 = !DILocation(line: 354, column: 37, scope: !7770, inlinedAt: !8893)
!8975 = !DILocation(line: 354, column: 42, scope: !7770, inlinedAt: !8893)
!8976 = !DILocation(line: 354, column: 45, scope: !7770, inlinedAt: !8893)
!8977 = !DILocation(line: 354, column: 50, scope: !7770, inlinedAt: !8893)
!8978 = !DILocation(line: 354, column: 6, scope: !7594, inlinedAt: !8893)
!8979 = !DILocation(line: 355, column: 3, scope: !7770, inlinedAt: !8893)
!8980 = !DILocation(line: 356, column: 32, scope: !7778, inlinedAt: !8893)
!8981 = !DILocation(line: 356, column: 37, scope: !7778, inlinedAt: !8893)
!8982 = !DILocation(line: 356, column: 43, scope: !7778, inlinedAt: !8893)
!8983 = !DILocation(line: 356, column: 46, scope: !7778, inlinedAt: !8893)
!8984 = !DILocation(line: 356, column: 51, scope: !7778, inlinedAt: !8893)
!8985 = !DILocation(line: 356, column: 6, scope: !7594, inlinedAt: !8893)
!8986 = !DILocation(line: 357, column: 3, scope: !7778, inlinedAt: !8893)
!8987 = !DILocation(line: 358, column: 6, scope: !7786, inlinedAt: !8893)
!8988 = !DILocation(line: 358, column: 11, scope: !7786, inlinedAt: !8893)
!8989 = !DILocation(line: 358, column: 6, scope: !7594, inlinedAt: !8893)
!8990 = !DILocation(line: 358, column: 26, scope: !7786, inlinedAt: !8893)
!8991 = !DILocation(line: 359, column: 6, scope: !7791, inlinedAt: !8893)
!8992 = !DILocation(line: 359, column: 11, scope: !7791, inlinedAt: !8893)
!8993 = !DILocation(line: 359, column: 6, scope: !7594, inlinedAt: !8893)
!8994 = !DILocation(line: 359, column: 26, scope: !7791, inlinedAt: !8893)
!8995 = !DILocation(line: 360, column: 6, scope: !7796, inlinedAt: !8893)
!8996 = !DILocation(line: 360, column: 11, scope: !7796, inlinedAt: !8893)
!8997 = !DILocation(line: 360, column: 6, scope: !7594, inlinedAt: !8893)
!8998 = !DILocation(line: 360, column: 26, scope: !7796, inlinedAt: !8893)
!8999 = !DILocation(line: 361, column: 6, scope: !7801, inlinedAt: !8893)
!9000 = !DILocation(line: 361, column: 11, scope: !7801, inlinedAt: !8893)
!9001 = !DILocation(line: 361, column: 6, scope: !7594, inlinedAt: !8893)
!9002 = !DILocation(line: 361, column: 26, scope: !7801, inlinedAt: !8893)
!9003 = !DILocation(line: 362, column: 6, scope: !7806, inlinedAt: !8893)
!9004 = !DILocation(line: 362, column: 11, scope: !7806, inlinedAt: !8893)
!9005 = !DILocation(line: 362, column: 6, scope: !7594, inlinedAt: !8893)
!9006 = !DILocation(line: 362, column: 26, scope: !7806, inlinedAt: !8893)
!9007 = !DILocation(line: 363, column: 6, scope: !7811, inlinedAt: !8893)
!9008 = !DILocation(line: 363, column: 11, scope: !7811, inlinedAt: !8893)
!9009 = !DILocation(line: 363, column: 6, scope: !7594, inlinedAt: !8893)
!9010 = !DILocation(line: 363, column: 26, scope: !7811, inlinedAt: !8893)
!9011 = !DILocation(line: 364, column: 6, scope: !7816, inlinedAt: !8893)
!9012 = !DILocation(line: 364, column: 11, scope: !7816, inlinedAt: !8893)
!9013 = !DILocation(line: 364, column: 6, scope: !7594, inlinedAt: !8893)
!9014 = !DILocation(line: 364, column: 26, scope: !7816, inlinedAt: !8893)
!9015 = !DILocation(line: 365, column: 6, scope: !7821, inlinedAt: !8893)
!9016 = !DILocation(line: 365, column: 11, scope: !7821, inlinedAt: !8893)
!9017 = !DILocation(line: 365, column: 6, scope: !7594, inlinedAt: !8893)
!9018 = !DILocation(line: 365, column: 26, scope: !7821, inlinedAt: !8893)
!9019 = !DILocation(line: 366, column: 6, scope: !7826, inlinedAt: !8893)
!9020 = !DILocation(line: 366, column: 11, scope: !7826, inlinedAt: !8893)
!9021 = !DILocation(line: 366, column: 6, scope: !7594, inlinedAt: !8893)
!9022 = !DILocation(line: 366, column: 26, scope: !7826, inlinedAt: !8893)
!9023 = !DILocation(line: 367, column: 6, scope: !7831, inlinedAt: !8893)
!9024 = !DILocation(line: 367, column: 11, scope: !7831, inlinedAt: !8893)
!9025 = !DILocation(line: 367, column: 6, scope: !7594, inlinedAt: !8893)
!9026 = !DILocation(line: 367, column: 26, scope: !7831, inlinedAt: !8893)
!9027 = !DILocation(line: 368, column: 6, scope: !7836, inlinedAt: !8893)
!9028 = !DILocation(line: 368, column: 11, scope: !7836, inlinedAt: !8893)
!9029 = !DILocation(line: 368, column: 6, scope: !7594, inlinedAt: !8893)
!9030 = !DILocation(line: 368, column: 26, scope: !7836, inlinedAt: !8893)
!9031 = !DILocation(line: 369, column: 6, scope: !7841, inlinedAt: !8893)
!9032 = !DILocation(line: 369, column: 11, scope: !7841, inlinedAt: !8893)
!9033 = !DILocation(line: 369, column: 6, scope: !7594, inlinedAt: !8893)
!9034 = !DILocation(line: 369, column: 26, scope: !7841, inlinedAt: !8893)
!9035 = !DILocation(line: 370, column: 6, scope: !7846, inlinedAt: !8893)
!9036 = !DILocation(line: 370, column: 11, scope: !7846, inlinedAt: !8893)
!9037 = !DILocation(line: 370, column: 6, scope: !7594, inlinedAt: !8893)
!9038 = !DILocation(line: 370, column: 26, scope: !7846, inlinedAt: !8893)
!9039 = !DILocation(line: 371, column: 6, scope: !7851, inlinedAt: !8893)
!9040 = !DILocation(line: 371, column: 11, scope: !7851, inlinedAt: !8893)
!9041 = !DILocation(line: 371, column: 6, scope: !7594, inlinedAt: !8893)
!9042 = !DILocation(line: 371, column: 26, scope: !7851, inlinedAt: !8893)
!9043 = !DILocation(line: 372, column: 6, scope: !7856, inlinedAt: !8893)
!9044 = !DILocation(line: 372, column: 11, scope: !7856, inlinedAt: !8893)
!9045 = !DILocation(line: 372, column: 6, scope: !7594, inlinedAt: !8893)
!9046 = !DILocation(line: 372, column: 26, scope: !7856, inlinedAt: !8893)
!9047 = !DILocation(line: 373, column: 6, scope: !7861, inlinedAt: !8893)
!9048 = !DILocation(line: 373, column: 11, scope: !7861, inlinedAt: !8893)
!9049 = !DILocation(line: 373, column: 6, scope: !7594, inlinedAt: !8893)
!9050 = !DILocation(line: 373, column: 26, scope: !7861, inlinedAt: !8893)
!9051 = !DILocation(line: 374, column: 6, scope: !7866, inlinedAt: !8893)
!9052 = !DILocation(line: 374, column: 11, scope: !7866, inlinedAt: !8893)
!9053 = !DILocation(line: 374, column: 6, scope: !7594, inlinedAt: !8893)
!9054 = !DILocation(line: 374, column: 26, scope: !7866, inlinedAt: !8893)
!9055 = !DILocation(line: 375, column: 6, scope: !7871, inlinedAt: !8893)
!9056 = !DILocation(line: 375, column: 11, scope: !7871, inlinedAt: !8893)
!9057 = !DILocation(line: 375, column: 6, scope: !7594, inlinedAt: !8893)
!9058 = !DILocation(line: 375, column: 27, scope: !7871, inlinedAt: !8893)
!9059 = !DILocation(line: 376, column: 6, scope: !7876, inlinedAt: !8893)
!9060 = !DILocation(line: 376, column: 11, scope: !7876, inlinedAt: !8893)
!9061 = !DILocation(line: 376, column: 6, scope: !7594, inlinedAt: !8893)
!9062 = !DILocation(line: 376, column: 32, scope: !7876, inlinedAt: !8893)
!9063 = !DILocation(line: 377, column: 6, scope: !7881, inlinedAt: !8893)
!9064 = !DILocation(line: 377, column: 11, scope: !7881, inlinedAt: !8893)
!9065 = !DILocation(line: 377, column: 6, scope: !7594, inlinedAt: !8893)
!9066 = !DILocation(line: 377, column: 32, scope: !7881, inlinedAt: !8893)
!9067 = !DILocation(line: 378, column: 6, scope: !7886, inlinedAt: !8893)
!9068 = !DILocation(line: 378, column: 11, scope: !7886, inlinedAt: !8893)
!9069 = !DILocation(line: 378, column: 6, scope: !7594, inlinedAt: !8893)
!9070 = !DILocation(line: 378, column: 32, scope: !7886, inlinedAt: !8893)
!9071 = !DILocation(line: 379, column: 6, scope: !7891, inlinedAt: !8893)
!9072 = !DILocation(line: 379, column: 11, scope: !7891, inlinedAt: !8893)
!9073 = !DILocation(line: 379, column: 6, scope: !7594, inlinedAt: !8893)
!9074 = !DILocation(line: 379, column: 33, scope: !7891, inlinedAt: !8893)
!9075 = !DILocation(line: 380, column: 6, scope: !7896, inlinedAt: !8893)
!9076 = !DILocation(line: 380, column: 11, scope: !7896, inlinedAt: !8893)
!9077 = !DILocation(line: 380, column: 6, scope: !7594, inlinedAt: !8893)
!9078 = !DILocation(line: 380, column: 33, scope: !7896, inlinedAt: !8893)
!9079 = !DILocation(line: 381, column: 6, scope: !7901, inlinedAt: !8893)
!9080 = !DILocation(line: 381, column: 11, scope: !7901, inlinedAt: !8893)
!9081 = !DILocation(line: 381, column: 6, scope: !7594, inlinedAt: !8893)
!9082 = !DILocation(line: 381, column: 33, scope: !7901, inlinedAt: !8893)
!9083 = !DILocation(line: 382, column: 2, scope: !7906, inlinedAt: !8893)
!9084 = !DILocation(line: 382, column: 2, scope: !7910, inlinedAt: !8893)
!9085 = !DILocation(line: 382, column: 2, scope: !7911, inlinedAt: !8893)
!9086 = !DILocation(line: 386, column: 1, scope: !7594, inlinedAt: !8893)
!9087 = !DILocation(line: 547, column: 9, scope: !7573, inlinedAt: !8884)
!9088 = !DILocation(line: 549, column: 8, scope: !7917, inlinedAt: !8884)
!9089 = !DILocation(line: 549, column: 7, scope: !7573, inlinedAt: !8884)
!9090 = !DILocation(line: 550, column: 4, scope: !7917, inlinedAt: !8884)
!9091 = !DILocation(line: 553, column: 33, scope: !7573, inlinedAt: !8884)
!9092 = !DILocation(line: 325, column: 6, scope: !7922, inlinedAt: !8891)
!9093 = !DILocation(line: 325, column: 6, scope: !7588, inlinedAt: !8891)
!9094 = !DILocation(line: 326, column: 3, scope: !7922, inlinedAt: !8891)
!9095 = !DILocation(line: 332, column: 9, scope: !7588, inlinedAt: !8891)
!9096 = !DILocation(line: 332, column: 15, scope: !7588, inlinedAt: !8891)
!9097 = !DILocation(line: 332, column: 2, scope: !7588, inlinedAt: !8891)
!9098 = !DILocation(line: 336, column: 1, scope: !7588, inlinedAt: !8891)
!9099 = !DILocation(line: 553, column: 5, scope: !7573, inlinedAt: !8884)
!9100 = !DILocation(line: 553, column: 41, scope: !7573, inlinedAt: !8884)
!9101 = !DILocation(line: 554, column: 5, scope: !7573, inlinedAt: !8884)
!9102 = !DILocation(line: 554, column: 12, scope: !7573, inlinedAt: !8884)
!9103 = !DILocation(line: 448, column: 31, scope: !7568, inlinedAt: !8883)
!9104 = !DILocation(line: 448, column: 34, scope: !7568, inlinedAt: !8883)
!9105 = !DILocation(line: 448, column: 14, scope: !7568, inlinedAt: !8883)
!9106 = !DILocation(line: 450, column: 22, scope: !7568, inlinedAt: !8883)
!9107 = !DILocation(line: 450, column: 25, scope: !7568, inlinedAt: !8883)
!9108 = !DILocation(line: 450, column: 30, scope: !7568, inlinedAt: !8883)
!9109 = !DILocation(line: 450, column: 36, scope: !7568, inlinedAt: !8883)
!9110 = !DILocation(line: 450, column: 8, scope: !7568, inlinedAt: !8883)
!9111 = !DILocation(line: 450, column: 6, scope: !7568, inlinedAt: !8883)
!9112 = !DILocation(line: 451, column: 9, scope: !7568, inlinedAt: !8883)
!9113 = !DILocation(line: 552, column: 3, scope: !7573, inlinedAt: !8884)
!9114 = !DILocation(line: 557, column: 19, scope: !7575, inlinedAt: !8884)
!9115 = !DILocation(line: 557, column: 25, scope: !7575, inlinedAt: !8884)
!9116 = !DILocation(line: 557, column: 9, scope: !7575, inlinedAt: !8884)
!9117 = !DILocation(line: 557, column: 2, scope: !7575, inlinedAt: !8884)
!9118 = !DILocation(line: 558, column: 1, scope: !7575, inlinedAt: !8884)
!9119 = !DILocation(line: 1046, column: 3, scope: !8885)
!9120 = !DILocation(line: 1046, column: 9, scope: !8885)
!9121 = !DILocation(line: 1046, column: 23, scope: !8885)
!9122 = !DILocation(line: 1048, column: 8, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 1048, column: 7)
!9124 = !DILocation(line: 1048, column: 14, scope: !9123)
!9125 = !DILocation(line: 1048, column: 7, scope: !8885)
!9126 = !DILocation(line: 1049, column: 4, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 1048, column: 29)
!9128 = !DILocation(line: 1050, column: 4, scope: !9127)
!9129 = !DILocation(line: 1052, column: 2, scope: !8885)
!9130 = !DILocation(line: 1053, column: 50, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 1052, column: 9)
!9132 = !DILocation(line: 1053, column: 55, scope: !9131)
!9133 = !DILocation(line: 1053, column: 23, scope: !9131)
!9134 = !DILocation(line: 1053, column: 3, scope: !9131)
!9135 = !DILocation(line: 1053, column: 9, scope: !9131)
!9136 = !DILocation(line: 1053, column: 21, scope: !9131)
!9137 = !DILocation(line: 1054, column: 3, scope: !9131)
!9138 = !DILocation(line: 1054, column: 9, scope: !9131)
!9139 = !DILocation(line: 1054, column: 27, scope: !9131)
!9140 = !DILocation(line: 1064, column: 6, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1064, column: 6)
!9142 = !DILocation(line: 1064, column: 12, scope: !9141)
!9143 = !DILocation(line: 1064, column: 24, scope: !9141)
!9144 = !DILocation(line: 1064, column: 6, scope: !8879)
!9145 = !DILocation(line: 1065, column: 3, scope: !9141)
!9146 = !DILocation(line: 1069, column: 33, scope: !8879)
!9147 = !DILocation(line: 1069, column: 36, scope: !8879)
!9148 = !DILocation(line: 1069, column: 42, scope: !8879)
!9149 = !DILocation(line: 1069, column: 54, scope: !8879)
!9150 = !DILocation(line: 1069, column: 2, scope: !8879)
!9151 = !DILocation(line: 1071, column: 6, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1071, column: 6)
!9153 = !DILocation(line: 1071, column: 11, scope: !9152)
!9154 = !DILocation(line: 1071, column: 17, scope: !9152)
!9155 = !DILocation(line: 1071, column: 6, scope: !8879)
!9156 = !DILocation(line: 1072, column: 34, scope: !9152)
!9157 = !DILocation(line: 1072, column: 40, scope: !9152)
!9158 = !DILocation(line: 1072, column: 3, scope: !9152)
!9159 = !DILocation(line: 1074, column: 6, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1074, column: 6)
!9161 = !DILocation(line: 1074, column: 11, scope: !9160)
!9162 = !DILocation(line: 1074, column: 17, scope: !9160)
!9163 = !DILocation(line: 1074, column: 6, scope: !8879)
!9164 = !DILocalVariable(name: "depth", scope: !9165, file: !3, line: 1075, type: !211)
!9165 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 1074, column: 34)
!9166 = !DILocation(line: 1075, column: 7, scope: !9165)
!9167 = !DILocalVariable(name: "__UNIQUE_ID___x313", scope: !9168, file: !3, line: 1077, type: !211)
!9168 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 1077, column: 11)
!9169 = !DILocation(line: 1077, column: 11, scope: !9168)
!9170 = !DILocalVariable(name: "__UNIQUE_ID___y314", scope: !9168, file: !3, line: 1077, type: !211)
!9171 = !DILocation(line: 1077, column: 9, scope: !9165)
!9172 = !DILocalVariable(name: "__UNIQUE_ID___x315", scope: !9173, file: !3, line: 1078, type: !211)
!9173 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 1078, column: 11)
!9174 = !DILocation(line: 1078, column: 11, scope: !9173)
!9175 = !DILocalVariable(name: "__UNIQUE_ID___y316", scope: !9173, file: !3, line: 1078, type: !211)
!9176 = !DILocation(line: 1078, column: 9, scope: !9165)
!9177 = !DILocation(line: 1079, column: 27, scope: !9165)
!9178 = !DILocation(line: 1079, column: 33, scope: !9165)
!9179 = !DILocation(line: 1079, column: 3, scope: !9165)
!9180 = !DILocation(line: 1080, column: 2, scope: !9165)
!9181 = !DILocation(line: 1082, column: 6, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1082, column: 6)
!9183 = !DILocation(line: 1082, column: 11, scope: !9182)
!9184 = !DILocation(line: 1082, column: 17, scope: !9182)
!9185 = !DILocation(line: 1082, column: 6, scope: !8879)
!9186 = !DILocation(line: 1083, column: 3, scope: !9182)
!9187 = !DILocation(line: 1083, column: 9, scope: !9182)
!9188 = !DILocation(line: 1083, column: 28, scope: !9182)
!9189 = !DILocation(line: 1085, column: 14, scope: !8879)
!9190 = !DILocation(line: 1085, column: 2, scope: !8879)
!9191 = !DILocation(line: 1085, column: 7, scope: !8879)
!9192 = !DILocation(line: 1085, column: 12, scope: !8879)
!9193 = !DILocation(line: 1086, column: 2, scope: !8879)
!9194 = !DILocation(line: 1087, column: 1, scope: !8879)
!9195 = distinct !DISubprogram(name: "ata_id_has_unload", scope: !449, file: !449, line: 886, type: !9196, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9196 = !DISubroutineType(types: !9197)
!9197 = !{!1482, !9198}
!9198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9199, size: 64)
!9199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1726)
!9200 = !DILocalVariable(name: "id", arg: 1, scope: !9195, file: !449, line: 886, type: !9198)
!9201 = !DILocation(line: 886, column: 49, scope: !9195)
!9202 = !DILocation(line: 888, column: 27, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9195, file: !449, line: 888, column: 6)
!9204 = !DILocation(line: 888, column: 6, scope: !9203)
!9205 = !DILocation(line: 888, column: 31, scope: !9203)
!9206 = !DILocation(line: 888, column: 36, scope: !9203)
!9207 = !DILocation(line: 889, column: 7, scope: !9203)
!9208 = !DILocation(line: 889, column: 24, scope: !9203)
!9209 = !DILocation(line: 889, column: 34, scope: !9203)
!9210 = !DILocation(line: 889, column: 44, scope: !9203)
!9211 = !DILocation(line: 890, column: 6, scope: !9203)
!9212 = !DILocation(line: 890, column: 23, scope: !9203)
!9213 = !DILocation(line: 888, column: 6, scope: !9195)
!9214 = !DILocation(line: 891, column: 3, scope: !9203)
!9215 = !DILocation(line: 892, column: 2, scope: !9195)
!9216 = !DILocation(line: 893, column: 1, scope: !9195)
!9217 = distinct !DISubprogram(name: "queue_max_segments", scope: !19, file: !19, line: 1401, type: !9218, scopeLine: 1402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9218 = !DISubroutineType(types: !9219)
!9219 = !{!1108, !9220}
!9220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9221, size: 64)
!9221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3765)
!9222 = !DILocalVariable(name: "q", arg: 1, scope: !9217, file: !19, line: 1401, type: !9220)
!9223 = !DILocation(line: 1401, column: 77, scope: !9217)
!9224 = !DILocation(line: 1403, column: 9, scope: !9217)
!9225 = !DILocation(line: 1403, column: 12, scope: !9217)
!9226 = !DILocation(line: 1403, column: 19, scope: !9217)
!9227 = !DILocation(line: 1403, column: 2, scope: !9217)
!9228 = distinct !DISubprogram(name: "ata_id_logical_sector_size", scope: !449, file: !449, line: 648, type: !9229, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9229 = !DISubroutineType(types: !9230)
!9230 = !{!1049, !9198}
!9231 = !DILocalVariable(name: "id", arg: 1, scope: !9228, file: !449, line: 648, type: !9198)
!9232 = !DILocation(line: 648, column: 57, scope: !9228)
!9233 = !DILocation(line: 654, column: 7, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9228, file: !449, line: 654, column: 6)
!9235 = !DILocation(line: 654, column: 30, scope: !9234)
!9236 = !DILocation(line: 654, column: 40, scope: !9234)
!9237 = !DILocation(line: 654, column: 6, scope: !9228)
!9238 = !DILocation(line: 655, column: 13, scope: !9234)
!9239 = !DILocation(line: 655, column: 46, scope: !9234)
!9240 = !DILocation(line: 656, column: 7, scope: !9234)
!9241 = !DILocation(line: 656, column: 5, scope: !9234)
!9242 = !DILocation(line: 655, column: 11, scope: !9234)
!9243 = !DILocation(line: 656, column: 39, scope: !9234)
!9244 = !DILocation(line: 655, column: 10, scope: !9234)
!9245 = !DILocation(line: 655, column: 3, scope: !9234)
!9246 = !DILocation(line: 657, column: 2, scope: !9228)
!9247 = !DILocation(line: 658, column: 1, scope: !9228)
!9248 = distinct !DISubprogram(name: "set_bit", scope: !9249, file: !9249, line: 26, type: !9250, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9249 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9250 = !DISubroutineType(types: !9251)
!9251 = !{null, !944, !9252}
!9252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9253, size: 64)
!9253 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !986)
!9254 = !DILocalVariable(name: "nr", arg: 1, scope: !9255, file: !9256, line: 52, type: !944)
!9255 = distinct !DISubprogram(name: "arch_set_bit", scope: !9256, file: !9256, line: 52, type: !9250, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9256 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9257 = !DILocation(line: 52, column: 19, scope: !9255, inlinedAt: !9258)
!9258 = distinct !DILocation(line: 29, column: 2, scope: !9248)
!9259 = !DILocalVariable(name: "addr", arg: 2, scope: !9255, file: !9256, line: 52, type: !9252)
!9260 = !DILocation(line: 52, column: 47, scope: !9255, inlinedAt: !9258)
!9261 = !DILocalVariable(name: "v", arg: 1, scope: !9262, file: !9263, line: 84, type: !9266)
!9262 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !9263, file: !9263, line: 84, type: !9264, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9263 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!9264 = !DISubroutineType(types: !9265)
!9265 = !{null, !9266, !1631}
!9266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9267, size: 64)
!9267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9268)
!9268 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!9269 = !DILocation(line: 84, column: 74, scope: !9262, inlinedAt: !9270)
!9270 = distinct !DILocation(line: 28, column: 2, scope: !9248)
!9271 = !DILocalVariable(name: "size", arg: 2, scope: !9262, file: !9263, line: 84, type: !1631)
!9272 = !DILocation(line: 84, column: 84, scope: !9262, inlinedAt: !9270)
!9273 = !DILocalVariable(name: "nr", arg: 1, scope: !9248, file: !9249, line: 26, type: !944)
!9274 = !DILocation(line: 26, column: 33, scope: !9248)
!9275 = !DILocalVariable(name: "addr", arg: 2, scope: !9248, file: !9249, line: 26, type: !9252)
!9276 = !DILocation(line: 26, column: 61, scope: !9248)
!9277 = !DILocation(line: 28, column: 26, scope: !9248)
!9278 = !DILocation(line: 28, column: 33, scope: !9248)
!9279 = !DILocation(line: 28, column: 31, scope: !9248)
!9280 = !DILocation(line: 86, column: 20, scope: !9262, inlinedAt: !9270)
!9281 = !DILocation(line: 86, column: 23, scope: !9262, inlinedAt: !9270)
!9282 = !DILocation(line: 86, column: 2, scope: !9262, inlinedAt: !9270)
!9283 = !DILocation(line: 87, column: 2, scope: !9262, inlinedAt: !9270)
!9284 = !DILocation(line: 29, column: 15, scope: !9248)
!9285 = !DILocation(line: 29, column: 19, scope: !9248)
!9286 = !DILocation(line: 54, column: 27, scope: !9287, inlinedAt: !9258)
!9287 = distinct !DILexicalBlock(scope: !9255, file: !9256, line: 54, column: 6)
!9288 = !DILocation(line: 54, column: 6, scope: !9287, inlinedAt: !9258)
!9289 = !DILocation(line: 54, column: 6, scope: !9255, inlinedAt: !9258)
!9290 = !DILocation(line: 56, column: 6, scope: !9291, inlinedAt: !9258)
!9291 = distinct !DILexicalBlock(scope: !9287, file: !9256, line: 54, column: 32)
!9292 = !DILocation(line: 57, column: 12, scope: !9291, inlinedAt: !9258)
!9293 = !DILocation(line: 55, column: 3, scope: !9291, inlinedAt: !9258)
!9294 = !{i32 -2146486060}
!9295 = !DILocation(line: 59, column: 2, scope: !9291, inlinedAt: !9258)
!9296 = !DILocation(line: 61, column: 8, scope: !9297, inlinedAt: !9258)
!9297 = distinct !DILexicalBlock(scope: !9287, file: !9256, line: 59, column: 9)
!9298 = !DILocation(line: 61, column: 32, scope: !9297, inlinedAt: !9258)
!9299 = !DILocation(line: 60, column: 3, scope: !9297, inlinedAt: !9258)
!9300 = !{i32 -2146485928}
!9301 = !DILocation(line: 30, column: 1, scope: !9248)
!9302 = distinct !DISubprogram(name: "ata_scsi_slave_config", scope: !3, file: !3, line: 1101, type: !6235, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9303 = !DILocalVariable(name: "sdev", arg: 1, scope: !9302, file: !3, line: 1101, type: !5987)
!9304 = !DILocation(line: 1101, column: 47, scope: !9302)
!9305 = !DILocalVariable(name: "ap", scope: !9302, file: !3, line: 1103, type: !988)
!9306 = !DILocation(line: 1103, column: 19, scope: !9302)
!9307 = !DILocation(line: 1103, column: 42, scope: !9302)
!9308 = !DILocation(line: 1103, column: 48, scope: !9302)
!9309 = !DILocation(line: 1103, column: 24, scope: !9302)
!9310 = !DILocalVariable(name: "dev", scope: !9302, file: !3, line: 1104, type: !6455)
!9311 = !DILocation(line: 1104, column: 21, scope: !9302)
!9312 = !DILocation(line: 1104, column: 47, scope: !9302)
!9313 = !DILocation(line: 1104, column: 51, scope: !9302)
!9314 = !DILocation(line: 1104, column: 27, scope: !9302)
!9315 = !DILocalVariable(name: "rc", scope: !9302, file: !3, line: 1105, type: !211)
!9316 = !DILocation(line: 1105, column: 6, scope: !9302)
!9317 = !DILocation(line: 1107, column: 23, scope: !9302)
!9318 = !DILocation(line: 1107, column: 2, scope: !9302)
!9319 = !DILocation(line: 1109, column: 6, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 1109, column: 6)
!9321 = !DILocation(line: 1109, column: 6, scope: !9302)
!9322 = !DILocation(line: 1110, column: 28, scope: !9320)
!9323 = !DILocation(line: 1110, column: 34, scope: !9320)
!9324 = !DILocation(line: 1110, column: 8, scope: !9320)
!9325 = !DILocation(line: 1110, column: 6, scope: !9320)
!9326 = !DILocation(line: 1110, column: 3, scope: !9320)
!9327 = !DILocation(line: 1112, column: 9, scope: !9302)
!9328 = !DILocation(line: 1112, column: 2, scope: !9302)
!9329 = distinct !DISubprogram(name: "__ata_scsi_find_dev", scope: !3, file: !3, line: 2760, type: !7499, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9330 = !DILocalVariable(name: "ap", arg: 1, scope: !9329, file: !3, line: 2760, type: !988)
!9331 = !DILocation(line: 2760, column: 64, scope: !9329)
!9332 = !DILocalVariable(name: "scsidev", arg: 2, scope: !9329, file: !3, line: 2761, type: !7501)
!9333 = !DILocation(line: 2761, column: 38, scope: !9329)
!9334 = !DILocalVariable(name: "devno", scope: !9329, file: !3, line: 2763, type: !211)
!9335 = !DILocation(line: 2763, column: 6, scope: !9329)
!9336 = !DILocation(line: 2766, column: 25, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 2766, column: 6)
!9338 = !DILocation(line: 2766, column: 7, scope: !9337)
!9339 = !DILocation(line: 2766, column: 6, scope: !9329)
!9340 = !DILocation(line: 2767, column: 7, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 2767, column: 7)
!9342 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 2766, column: 30)
!9343 = !DILocation(line: 2767, column: 7, scope: !9342)
!9344 = !DILocation(line: 2768, column: 4, scope: !9341)
!9345 = !DILocation(line: 2769, column: 11, scope: !9342)
!9346 = !DILocation(line: 2769, column: 20, scope: !9342)
!9347 = !DILocation(line: 2769, column: 9, scope: !9342)
!9348 = !DILocation(line: 2770, column: 2, scope: !9342)
!9349 = !DILocation(line: 2771, column: 7, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 2771, column: 7)
!9351 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 2770, column: 9)
!9352 = !DILocation(line: 2771, column: 7, scope: !9351)
!9353 = !DILocation(line: 2772, column: 4, scope: !9350)
!9354 = !DILocation(line: 2773, column: 11, scope: !9351)
!9355 = !DILocation(line: 2773, column: 20, scope: !9351)
!9356 = !DILocation(line: 2773, column: 9, scope: !9351)
!9357 = !DILocation(line: 2776, column: 22, scope: !9329)
!9358 = !DILocation(line: 2776, column: 26, scope: !9329)
!9359 = !DILocation(line: 2776, column: 9, scope: !9329)
!9360 = !DILocation(line: 2776, column: 2, scope: !9329)
!9361 = !DILocation(line: 2777, column: 1, scope: !9329)
!9362 = distinct !DISubprogram(name: "ata_scsi_slave_destroy", scope: !3, file: !3, line: 1130, type: !6240, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9363 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !9364)
!9364 = distinct !DILocation(line: 1147, column: 2, scope: !9362)
!9365 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !9364)
!9366 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !9367)
!9367 = distinct !DILocation(line: 1139, column: 2, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 1139, column: 2)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1139, column: 2)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 1139, column: 2)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 1139, column: 2)
!9372 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1139, column: 2)
!9373 = !DILocalVariable(name: "sdev", arg: 1, scope: !9362, file: !3, line: 1130, type: !5987)
!9374 = !DILocation(line: 1130, column: 49, scope: !9362)
!9375 = !DILocalVariable(name: "ap", scope: !9362, file: !3, line: 1132, type: !988)
!9376 = !DILocation(line: 1132, column: 19, scope: !9362)
!9377 = !DILocation(line: 1132, column: 42, scope: !9362)
!9378 = !DILocation(line: 1132, column: 48, scope: !9362)
!9379 = !DILocation(line: 1132, column: 24, scope: !9362)
!9380 = !DILocalVariable(name: "flags", scope: !9362, file: !3, line: 1133, type: !986)
!9381 = !DILocation(line: 1133, column: 16, scope: !9362)
!9382 = !DILocalVariable(name: "dev", scope: !9362, file: !3, line: 1134, type: !6455)
!9383 = !DILocation(line: 1134, column: 21, scope: !9362)
!9384 = !DILocation(line: 1136, column: 7, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1136, column: 6)
!9386 = !DILocation(line: 1136, column: 11, scope: !9385)
!9387 = !DILocation(line: 1136, column: 16, scope: !9385)
!9388 = !DILocation(line: 1136, column: 6, scope: !9362)
!9389 = !DILocation(line: 1137, column: 3, scope: !9385)
!9390 = !DILocation(line: 1139, column: 2, scope: !9362)
!9391 = !DILocation(line: 1139, column: 2, scope: !9372)
!9392 = !DILocalVariable(name: "__dummy", scope: !9393, file: !3, line: 1139, type: !986)
!9393 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 1139, column: 2)
!9394 = !DILocation(line: 1139, column: 2, scope: !9393)
!9395 = !DILocalVariable(name: "__dummy2", scope: !9393, file: !3, line: 1139, type: !986)
!9396 = !DILocation(line: 1139, column: 2, scope: !9371)
!9397 = !DILocation(line: 1139, column: 2, scope: !9370)
!9398 = !DILocation(line: 1139, column: 2, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1139, column: 2)
!9400 = !DILocalVariable(name: "__dummy", scope: !9401, file: !3, line: 1139, type: !986)
!9401 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 1139, column: 2)
!9402 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 1139, column: 2)
!9403 = !DILocation(line: 1139, column: 2, scope: !9401)
!9404 = !DILocalVariable(name: "__dummy2", scope: !9401, file: !3, line: 1139, type: !986)
!9405 = !DILocation(line: 1139, column: 2, scope: !9402)
!9406 = !DILocation(line: 1139, column: 2, scope: !9369)
!9407 = !{i32 -2139700304}
!9408 = !DILocation(line: 1139, column: 2, scope: !9368)
!9409 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !9367)
!9410 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !9367)
!9411 = !DILocation(line: 1140, column: 28, scope: !9362)
!9412 = !DILocation(line: 1140, column: 32, scope: !9362)
!9413 = !DILocation(line: 1140, column: 8, scope: !9362)
!9414 = !DILocation(line: 1140, column: 6, scope: !9362)
!9415 = !DILocation(line: 1141, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1141, column: 6)
!9417 = !DILocation(line: 1141, column: 10, scope: !9416)
!9418 = !DILocation(line: 1141, column: 13, scope: !9416)
!9419 = !DILocation(line: 1141, column: 18, scope: !9416)
!9420 = !DILocation(line: 1141, column: 6, scope: !9362)
!9421 = !DILocation(line: 1143, column: 3, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 1141, column: 24)
!9423 = !DILocation(line: 1143, column: 8, scope: !9422)
!9424 = !DILocation(line: 1143, column: 13, scope: !9422)
!9425 = !DILocation(line: 1144, column: 3, scope: !9422)
!9426 = !DILocation(line: 1144, column: 8, scope: !9422)
!9427 = !DILocation(line: 1144, column: 14, scope: !9422)
!9428 = !DILocation(line: 1145, column: 24, scope: !9422)
!9429 = !DILocation(line: 1145, column: 3, scope: !9422)
!9430 = !DILocation(line: 1146, column: 2, scope: !9422)
!9431 = !DILocation(line: 1147, column: 25, scope: !9362)
!9432 = !DILocation(line: 1147, column: 29, scope: !9362)
!9433 = !DILocation(line: 1147, column: 35, scope: !9362)
!9434 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !9364)
!9435 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !9364)
!9436 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !9364)
!9437 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !9364)
!9438 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !9364)
!9439 = !DILocation(line: 1149, column: 8, scope: !9362)
!9440 = !DILocation(line: 1149, column: 14, scope: !9362)
!9441 = !DILocation(line: 1149, column: 2, scope: !9362)
!9442 = !DILocation(line: 1150, column: 1, scope: !9362)
!9443 = distinct !DISubprogram(name: "ata_dev_enabled", scope: !183, file: !183, line: 1595, type: !9444, scopeLine: 1596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9444 = !DISubroutineType(types: !9445)
!9445 = !{!7, !9446}
!9446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9447, size: 64)
!9447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6456)
!9448 = !DILocalVariable(name: "dev", arg: 1, scope: !9443, file: !183, line: 1595, type: !9446)
!9449 = !DILocation(line: 1595, column: 69, scope: !9443)
!9450 = !DILocation(line: 1597, column: 27, scope: !9443)
!9451 = !DILocation(line: 1597, column: 32, scope: !9443)
!9452 = !DILocation(line: 1597, column: 9, scope: !9443)
!9453 = !DILocation(line: 1597, column: 2, scope: !9443)
!9454 = distinct !DISubprogram(name: "ata_scsi_dump_cdb", scope: !3, file: !3, line: 4008, type: !9455, scopeLine: 4009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9455 = !DISubroutineType(types: !9456)
!9456 = !{null, !988, !6139}
!9457 = !DILocalVariable(name: "ap", arg: 1, scope: !9454, file: !3, line: 4008, type: !988)
!9458 = !DILocation(line: 4008, column: 41, scope: !9454)
!9459 = !DILocalVariable(name: "cmd", arg: 2, scope: !9454, file: !3, line: 4008, type: !6139)
!9460 = !DILocation(line: 4008, column: 63, scope: !9454)
!9461 = !DILocation(line: 4018, column: 1, scope: !9454)
!9462 = distinct !DISubprogram(name: "__ata_scsi_queuecmd", scope: !3, file: !3, line: 4020, type: !9463, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9463 = !DISubroutineType(types: !9464)
!9464 = !{!211, !6139, !6455}
!9465 = !DILocalVariable(name: "scmd", arg: 1, scope: !9462, file: !3, line: 4020, type: !6139)
!9466 = !DILocation(line: 4020, column: 43, scope: !9462)
!9467 = !DILocalVariable(name: "dev", arg: 2, scope: !9462, file: !3, line: 4020, type: !6455)
!9468 = !DILocation(line: 4020, column: 68, scope: !9462)
!9469 = !DILocalVariable(name: "scsi_op", scope: !9462, file: !3, line: 4022, type: !1203)
!9470 = !DILocation(line: 4022, column: 5, scope: !9462)
!9471 = !DILocation(line: 4022, column: 15, scope: !9462)
!9472 = !DILocation(line: 4022, column: 21, scope: !9462)
!9473 = !DILocalVariable(name: "xlat_func", scope: !9462, file: !3, line: 4023, type: !9474)
!9474 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_xlat_func_t", file: !3, line: 45, baseType: !6666)
!9475 = !DILocation(line: 4023, column: 18, scope: !9462)
!9476 = !DILocalVariable(name: "rc", scope: !9462, file: !3, line: 4024, type: !211)
!9477 = !DILocation(line: 4024, column: 6, scope: !9462)
!9478 = !DILocation(line: 4026, column: 6, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 4026, column: 6)
!9480 = !DILocation(line: 4026, column: 11, scope: !9479)
!9481 = !DILocation(line: 4026, column: 17, scope: !9479)
!9482 = !DILocation(line: 4026, column: 32, scope: !9479)
!9483 = !DILocation(line: 4026, column: 35, scope: !9479)
!9484 = !DILocation(line: 4026, column: 40, scope: !9479)
!9485 = !DILocation(line: 4026, column: 46, scope: !9479)
!9486 = !DILocation(line: 4026, column: 6, scope: !9462)
!9487 = !DILocation(line: 4027, column: 7, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 4027, column: 7)
!9489 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 4026, column: 62)
!9490 = !DILocation(line: 4027, column: 7, scope: !9489)
!9491 = !DILocation(line: 4028, column: 4, scope: !9488)
!9492 = !DILocation(line: 4030, column: 33, scope: !9489)
!9493 = !DILocation(line: 4030, column: 38, scope: !9489)
!9494 = !DILocation(line: 4030, column: 15, scope: !9489)
!9495 = !DILocation(line: 4030, column: 13, scope: !9489)
!9496 = !DILocation(line: 4031, column: 2, scope: !9489)
!9497 = !DILocation(line: 4032, column: 7, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 4032, column: 7)
!9499 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 4031, column: 9)
!9500 = !DILocation(line: 4032, column: 7, scope: !9499)
!9501 = !DILocation(line: 4033, column: 4, scope: !9498)
!9502 = !DILocation(line: 4035, column: 13, scope: !9499)
!9503 = !DILocation(line: 4036, column: 7, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 4036, column: 7)
!9505 = !DILocation(line: 4036, column: 7, scope: !9499)
!9506 = !DILocalVariable(name: "len", scope: !9507, file: !3, line: 4038, type: !211)
!9507 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 4036, column: 57)
!9508 = !DILocation(line: 4038, column: 8, scope: !9507)
!9509 = !DILocation(line: 4038, column: 14, scope: !9507)
!9510 = !DILocation(line: 4039, column: 8, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 4039, column: 8)
!9512 = !DILocation(line: 4039, column: 8, scope: !9507)
!9513 = !DILocation(line: 4042, column: 5, scope: !9511)
!9514 = !DILocation(line: 4044, column: 14, scope: !9507)
!9515 = !DILocation(line: 4045, column: 3, scope: !9507)
!9516 = !DILocation(line: 4047, column: 8, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 4047, column: 8)
!9518 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 4045, column: 10)
!9519 = !DILocation(line: 4047, column: 8, scope: !9518)
!9520 = !DILocation(line: 4048, column: 5, scope: !9517)
!9521 = !DILocation(line: 4050, column: 34, scope: !9518)
!9522 = !DILocation(line: 4050, column: 39, scope: !9518)
!9523 = !DILocation(line: 4050, column: 16, scope: !9518)
!9524 = !DILocation(line: 4050, column: 14, scope: !9518)
!9525 = !DILocation(line: 4054, column: 6, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 4054, column: 6)
!9527 = !DILocation(line: 4054, column: 6, scope: !9462)
!9528 = !DILocation(line: 4055, column: 27, scope: !9526)
!9529 = !DILocation(line: 4055, column: 32, scope: !9526)
!9530 = !DILocation(line: 4055, column: 38, scope: !9526)
!9531 = !DILocation(line: 4055, column: 8, scope: !9526)
!9532 = !DILocation(line: 4055, column: 6, scope: !9526)
!9533 = !DILocation(line: 4055, column: 3, scope: !9526)
!9534 = !DILocation(line: 4057, column: 21, scope: !9526)
!9535 = !DILocation(line: 4057, column: 26, scope: !9526)
!9536 = !DILocation(line: 4057, column: 3, scope: !9526)
!9537 = !DILocation(line: 4059, column: 9, scope: !9462)
!9538 = !DILocation(line: 4059, column: 2, scope: !9462)
!9539 = !DILabel(scope: !9462, name: "bad_cdb_len", file: !3, line: 4061)
!9540 = !DILocation(line: 4061, column: 2, scope: !9462)
!9541 = !DILocation(line: 4064, column: 2, scope: !9462)
!9542 = !DILocation(line: 4064, column: 8, scope: !9462)
!9543 = !DILocation(line: 4064, column: 15, scope: !9462)
!9544 = !DILocation(line: 4065, column: 2, scope: !9462)
!9545 = !DILocation(line: 4065, column: 8, scope: !9462)
!9546 = !DILocation(line: 4065, column: 18, scope: !9462)
!9547 = !DILocation(line: 4066, column: 2, scope: !9462)
!9548 = !DILocation(line: 4067, column: 1, scope: !9462)
!9549 = distinct !DISubprogram(name: "ata_get_xlat_func", scope: !3, file: !3, line: 3945, type: !9550, scopeLine: 3946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!9474, !6455, !1203}
!9552 = !DILocalVariable(name: "dev", arg: 1, scope: !9549, file: !3, line: 3945, type: !6455)
!9553 = !DILocation(line: 3945, column: 68, scope: !9549)
!9554 = !DILocalVariable(name: "cmd", arg: 2, scope: !9549, file: !3, line: 3945, type: !1203)
!9555 = !DILocation(line: 3945, column: 76, scope: !9549)
!9556 = !DILocation(line: 3947, column: 10, scope: !9549)
!9557 = !DILocation(line: 3947, column: 2, scope: !9549)
!9558 = !DILocation(line: 3955, column: 3, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 3947, column: 15)
!9560 = !DILocation(line: 3958, column: 3, scope: !9559)
!9561 = !DILocation(line: 3961, column: 27, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 3961, column: 7)
!9563 = !DILocation(line: 3961, column: 7, scope: !9562)
!9564 = !DILocation(line: 3961, column: 7, scope: !9559)
!9565 = !DILocation(line: 3962, column: 4, scope: !9562)
!9566 = !DILocation(line: 3963, column: 3, scope: !9559)
!9567 = !DILocation(line: 3967, column: 3, scope: !9559)
!9568 = !DILocation(line: 3971, column: 3, scope: !9559)
!9569 = !DILocation(line: 3974, column: 3, scope: !9559)
!9570 = !DILocation(line: 3978, column: 3, scope: !9559)
!9571 = !DILocation(line: 3982, column: 3, scope: !9559)
!9572 = !DILocation(line: 3985, column: 3, scope: !9559)
!9573 = !DILocation(line: 3989, column: 9, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 3989, column: 7)
!9575 = !DILocation(line: 3989, column: 14, scope: !9574)
!9576 = !DILocation(line: 3989, column: 20, scope: !9574)
!9577 = !DILocation(line: 3989, column: 7, scope: !9559)
!9578 = !DILocation(line: 3990, column: 4, scope: !9574)
!9579 = !DILocation(line: 3991, column: 3, scope: !9559)
!9580 = !DILocation(line: 3994, column: 3, scope: !9559)
!9581 = !DILocation(line: 3997, column: 2, scope: !9549)
!9582 = !DILocation(line: 3998, column: 1, scope: !9549)
!9583 = distinct !DISubprogram(name: "atapi_xlat", scope: !3, file: !3, line: 2661, type: !6667, scopeLine: 2662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9584 = !DILocalVariable(name: "qc", arg: 1, scope: !9583, file: !3, line: 2661, type: !6450)
!9585 = !DILocation(line: 2661, column: 55, scope: !9583)
!9586 = !DILocalVariable(name: "scmd", scope: !9583, file: !3, line: 2663, type: !6139)
!9587 = !DILocation(line: 2663, column: 20, scope: !9583)
!9588 = !DILocation(line: 2663, column: 27, scope: !9583)
!9589 = !DILocation(line: 2663, column: 31, scope: !9583)
!9590 = !DILocalVariable(name: "dev", scope: !9583, file: !3, line: 2664, type: !6455)
!9591 = !DILocation(line: 2664, column: 21, scope: !9583)
!9592 = !DILocation(line: 2664, column: 27, scope: !9583)
!9593 = !DILocation(line: 2664, column: 31, scope: !9583)
!9594 = !DILocalVariable(name: "nodata", scope: !9583, file: !3, line: 2665, type: !211)
!9595 = !DILocation(line: 2665, column: 6, scope: !9583)
!9596 = !DILocation(line: 2665, column: 16, scope: !9583)
!9597 = !DILocation(line: 2665, column: 22, scope: !9583)
!9598 = !DILocation(line: 2665, column: 40, scope: !9583)
!9599 = !DILocalVariable(name: "using_pio", scope: !9583, file: !3, line: 2666, type: !211)
!9600 = !DILocation(line: 2666, column: 6, scope: !9583)
!9601 = !DILocation(line: 2666, column: 19, scope: !9583)
!9602 = !DILocation(line: 2666, column: 26, scope: !9583)
!9603 = !DILocation(line: 2666, column: 30, scope: !9583)
!9604 = !DILocation(line: 2666, column: 35, scope: !9583)
!9605 = !DILocation(line: 2666, column: 41, scope: !9583)
!9606 = !DILocation(line: 0, scope: !9583)
!9607 = !DILocalVariable(name: "nbytes", scope: !9583, file: !3, line: 2667, type: !7)
!9608 = !DILocation(line: 2667, column: 15, scope: !9583)
!9609 = !DILocation(line: 2669, column: 9, scope: !9583)
!9610 = !DILocation(line: 2669, column: 13, scope: !9583)
!9611 = !DILocation(line: 2669, column: 2, scope: !9583)
!9612 = !DILocation(line: 2669, column: 21, scope: !9583)
!9613 = !DILocation(line: 2669, column: 26, scope: !9583)
!9614 = !DILocation(line: 2670, column: 9, scope: !9583)
!9615 = !DILocation(line: 2670, column: 13, scope: !9583)
!9616 = !DILocation(line: 2670, column: 2, scope: !9583)
!9617 = !DILocation(line: 2670, column: 18, scope: !9583)
!9618 = !DILocation(line: 2670, column: 24, scope: !9583)
!9619 = !DILocation(line: 2670, column: 30, scope: !9583)
!9620 = !DILocation(line: 2670, column: 36, scope: !9583)
!9621 = !DILocation(line: 2672, column: 2, scope: !9583)
!9622 = !DILocation(line: 2672, column: 6, scope: !9583)
!9623 = !DILocation(line: 2672, column: 18, scope: !9583)
!9624 = !DILocation(line: 2674, column: 2, scope: !9583)
!9625 = !DILocation(line: 2674, column: 6, scope: !9583)
!9626 = !DILocation(line: 2674, column: 9, scope: !9583)
!9627 = !DILocation(line: 2674, column: 15, scope: !9583)
!9628 = !DILocation(line: 2675, column: 6, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 2675, column: 6)
!9630 = !DILocation(line: 2675, column: 12, scope: !9629)
!9631 = !DILocation(line: 2675, column: 30, scope: !9629)
!9632 = !DILocation(line: 2675, column: 6, scope: !9583)
!9633 = !DILocation(line: 2676, column: 3, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 2675, column: 48)
!9635 = !DILocation(line: 2676, column: 7, scope: !9634)
!9636 = !DILocation(line: 2676, column: 10, scope: !9634)
!9637 = !DILocation(line: 2676, column: 16, scope: !9634)
!9638 = !DILocation(line: 2678, column: 2, scope: !9634)
!9639 = !DILocation(line: 2680, column: 2, scope: !9583)
!9640 = !DILocation(line: 2680, column: 6, scope: !9583)
!9641 = !DILocation(line: 2680, column: 9, scope: !9583)
!9642 = !DILocation(line: 2680, column: 17, scope: !9583)
!9643 = !DILocation(line: 2681, column: 23, scope: !9583)
!9644 = !DILocation(line: 2681, column: 2, scope: !9583)
!9645 = !DILocation(line: 2684, column: 7, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 2684, column: 6)
!9647 = !DILocation(line: 2684, column: 14, scope: !9646)
!9648 = !DILocation(line: 2684, column: 18, scope: !9646)
!9649 = !DILocation(line: 2684, column: 28, scope: !9646)
!9650 = !DILocation(line: 2684, column: 47, scope: !9646)
!9651 = !DILocation(line: 2684, column: 31, scope: !9646)
!9652 = !DILocation(line: 2684, column: 6, scope: !9583)
!9653 = !DILocation(line: 2685, column: 13, scope: !9646)
!9654 = !DILocation(line: 2685, column: 3, scope: !9646)
!9655 = !DILocalVariable(name: "__UNIQUE_ID___x317", scope: !9656, file: !3, line: 2692, type: !7)
!9656 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 2692, column: 11)
!9657 = !DILocation(line: 2692, column: 11, scope: !9656)
!9658 = !DILocalVariable(name: "__UNIQUE_ID___y318", scope: !9656, file: !3, line: 2692, type: !7)
!9659 = !DILocation(line: 2692, column: 9, scope: !9583)
!9660 = !DILocation(line: 2718, column: 6, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 2718, column: 6)
!9662 = !DILocation(line: 2718, column: 13, scope: !9661)
!9663 = !DILocation(line: 2718, column: 6, scope: !9583)
!9664 = !DILocation(line: 2719, column: 9, scope: !9661)
!9665 = !DILocation(line: 2719, column: 3, scope: !9661)
!9666 = !DILocation(line: 2721, column: 17, scope: !9583)
!9667 = !DILocation(line: 2721, column: 24, scope: !9583)
!9668 = !DILocation(line: 2721, column: 16, scope: !9583)
!9669 = !DILocation(line: 2721, column: 2, scope: !9583)
!9670 = !DILocation(line: 2721, column: 6, scope: !9583)
!9671 = !DILocation(line: 2721, column: 9, scope: !9583)
!9672 = !DILocation(line: 2721, column: 14, scope: !9583)
!9673 = !DILocation(line: 2722, column: 17, scope: !9583)
!9674 = !DILocation(line: 2722, column: 24, scope: !9583)
!9675 = !DILocation(line: 2722, column: 16, scope: !9583)
!9676 = !DILocation(line: 2722, column: 2, scope: !9583)
!9677 = !DILocation(line: 2722, column: 6, scope: !9583)
!9678 = !DILocation(line: 2722, column: 9, scope: !9583)
!9679 = !DILocation(line: 2722, column: 14, scope: !9583)
!9680 = !DILocation(line: 2724, column: 6, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 2724, column: 6)
!9682 = !DILocation(line: 2724, column: 6, scope: !9583)
!9683 = !DILocation(line: 2725, column: 3, scope: !9681)
!9684 = !DILocation(line: 2725, column: 7, scope: !9681)
!9685 = !DILocation(line: 2725, column: 10, scope: !9681)
!9686 = !DILocation(line: 2725, column: 19, scope: !9681)
!9687 = !DILocation(line: 2726, column: 11, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 2726, column: 11)
!9689 = !DILocation(line: 2726, column: 11, scope: !9681)
!9690 = !DILocation(line: 2727, column: 3, scope: !9688)
!9691 = !DILocation(line: 2727, column: 7, scope: !9688)
!9692 = !DILocation(line: 2727, column: 10, scope: !9688)
!9693 = !DILocation(line: 2727, column: 19, scope: !9688)
!9694 = !DILocation(line: 2730, column: 3, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2728, column: 7)
!9696 = !DILocation(line: 2730, column: 7, scope: !9695)
!9697 = !DILocation(line: 2730, column: 10, scope: !9695)
!9698 = !DILocation(line: 2730, column: 19, scope: !9695)
!9699 = !DILocation(line: 2731, column: 3, scope: !9695)
!9700 = !DILocation(line: 2731, column: 7, scope: !9695)
!9701 = !DILocation(line: 2731, column: 10, scope: !9695)
!9702 = !DILocation(line: 2731, column: 18, scope: !9695)
!9703 = !DILocation(line: 2733, column: 8, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 2733, column: 7)
!9705 = !DILocation(line: 2733, column: 13, scope: !9704)
!9706 = !DILocation(line: 2733, column: 19, scope: !9704)
!9707 = !DILocation(line: 2733, column: 39, scope: !9704)
!9708 = !DILocation(line: 2734, column: 8, scope: !9704)
!9709 = !DILocation(line: 2734, column: 14, scope: !9704)
!9710 = !DILocation(line: 2734, column: 32, scope: !9704)
!9711 = !DILocation(line: 2733, column: 7, scope: !9695)
!9712 = !DILocation(line: 2736, column: 4, scope: !9704)
!9713 = !DILocation(line: 2736, column: 8, scope: !9704)
!9714 = !DILocation(line: 2736, column: 11, scope: !9704)
!9715 = !DILocation(line: 2736, column: 19, scope: !9704)
!9716 = !DILocation(line: 2742, column: 2, scope: !9583)
!9717 = distinct !DISubprogram(name: "ata_scsi_translate", scope: !3, file: !3, line: 1699, type: !9718, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9718 = !DISubroutineType(types: !9719)
!9719 = !{!211, !6455, !6139, !9474}
!9720 = !DILocalVariable(name: "dev", arg: 1, scope: !9717, file: !3, line: 1699, type: !6455)
!9721 = !DILocation(line: 1699, column: 50, scope: !9717)
!9722 = !DILocalVariable(name: "cmd", arg: 2, scope: !9717, file: !3, line: 1699, type: !6139)
!9723 = !DILocation(line: 1699, column: 73, scope: !9717)
!9724 = !DILocalVariable(name: "xlat_func", arg: 3, scope: !9717, file: !3, line: 1700, type: !9474)
!9725 = !DILocation(line: 1700, column: 26, scope: !9717)
!9726 = !DILocalVariable(name: "ap", scope: !9717, file: !3, line: 1702, type: !988)
!9727 = !DILocation(line: 1702, column: 19, scope: !9717)
!9728 = !DILocation(line: 1702, column: 24, scope: !9717)
!9729 = !DILocation(line: 1702, column: 29, scope: !9717)
!9730 = !DILocation(line: 1702, column: 35, scope: !9717)
!9731 = !DILocalVariable(name: "qc", scope: !9717, file: !3, line: 1703, type: !6450)
!9732 = !DILocation(line: 1703, column: 25, scope: !9717)
!9733 = !DILocalVariable(name: "rc", scope: !9717, file: !3, line: 1704, type: !211)
!9734 = !DILocation(line: 1704, column: 6, scope: !9717)
!9735 = !DILocation(line: 1708, column: 23, scope: !9717)
!9736 = !DILocation(line: 1708, column: 28, scope: !9717)
!9737 = !DILocation(line: 1708, column: 7, scope: !9717)
!9738 = !DILocation(line: 1708, column: 5, scope: !9717)
!9739 = !DILocation(line: 1709, column: 7, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 1709, column: 6)
!9741 = !DILocation(line: 1709, column: 6, scope: !9717)
!9742 = !DILocation(line: 1710, column: 3, scope: !9740)
!9743 = !DILocation(line: 1713, column: 6, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 1713, column: 6)
!9745 = !DILocation(line: 1713, column: 11, scope: !9744)
!9746 = !DILocation(line: 1713, column: 29, scope: !9744)
!9747 = !DILocation(line: 1713, column: 48, scope: !9744)
!9748 = !DILocation(line: 1714, column: 6, scope: !9744)
!9749 = !DILocation(line: 1714, column: 11, scope: !9744)
!9750 = !DILocation(line: 1714, column: 29, scope: !9744)
!9751 = !DILocation(line: 1713, column: 6, scope: !9717)
!9752 = !DILocation(line: 1715, column: 7, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 1715, column: 7)
!9754 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 1714, column: 47)
!9755 = !DILocation(line: 1715, column: 7, scope: !9754)
!9756 = !DILocation(line: 1716, column: 4, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 1715, column: 40)
!9758 = !DILocation(line: 1717, column: 4, scope: !9757)
!9759 = !DILocation(line: 1720, column: 15, scope: !9754)
!9760 = !DILocation(line: 1720, column: 31, scope: !9754)
!9761 = !DILocation(line: 1720, column: 19, scope: !9754)
!9762 = !DILocation(line: 1720, column: 51, scope: !9754)
!9763 = !DILocation(line: 1720, column: 37, scope: !9754)
!9764 = !DILocation(line: 1720, column: 3, scope: !9754)
!9765 = !DILocation(line: 1722, column: 17, scope: !9754)
!9766 = !DILocation(line: 1722, column: 22, scope: !9754)
!9767 = !DILocation(line: 1722, column: 3, scope: !9754)
!9768 = !DILocation(line: 1722, column: 7, scope: !9754)
!9769 = !DILocation(line: 1722, column: 15, scope: !9754)
!9770 = !DILocation(line: 1723, column: 2, scope: !9754)
!9771 = !DILocation(line: 1725, column: 2, scope: !9717)
!9772 = !DILocation(line: 1725, column: 6, scope: !9717)
!9773 = !DILocation(line: 1725, column: 18, scope: !9717)
!9774 = !DILocation(line: 1727, column: 6, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 1727, column: 6)
!9776 = !DILocation(line: 1727, column: 16, scope: !9775)
!9777 = !DILocation(line: 1727, column: 6, scope: !9717)
!9778 = !DILocation(line: 1728, column: 3, scope: !9775)
!9779 = !DILocation(line: 1730, column: 6, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 1730, column: 6)
!9781 = !DILocation(line: 1730, column: 10, scope: !9780)
!9782 = !DILocation(line: 1730, column: 15, scope: !9780)
!9783 = !DILocation(line: 1730, column: 6, scope: !9717)
!9784 = !DILocation(line: 1731, column: 13, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 1731, column: 7)
!9786 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 1730, column: 25)
!9787 = !DILocation(line: 1731, column: 17, scope: !9785)
!9788 = !DILocation(line: 1731, column: 22, scope: !9785)
!9789 = !DILocation(line: 1731, column: 31, scope: !9785)
!9790 = !DILocation(line: 1731, column: 11, scope: !9785)
!9791 = !DILocation(line: 1731, column: 7, scope: !9786)
!9792 = !DILocation(line: 1732, column: 4, scope: !9785)
!9793 = !DILocation(line: 1733, column: 2, scope: !9786)
!9794 = !DILocation(line: 1736, column: 15, scope: !9717)
!9795 = !DILocation(line: 1736, column: 2, scope: !9717)
!9796 = !DILocation(line: 1739, column: 2, scope: !9717)
!9797 = !DILabel(scope: !9717, name: "early_finish", file: !3, line: 1741)
!9798 = !DILocation(line: 1741, column: 1, scope: !9717)
!9799 = !DILocation(line: 1742, column: 14, scope: !9717)
!9800 = !DILocation(line: 1742, column: 2, scope: !9717)
!9801 = !DILocation(line: 1743, column: 2, scope: !9717)
!9802 = !DILocation(line: 1743, column: 7, scope: !9717)
!9803 = !DILocation(line: 1743, column: 17, scope: !9717)
!9804 = !DILocation(line: 1745, column: 2, scope: !9717)
!9805 = !DILabel(scope: !9717, name: "err_did", file: !3, line: 1747)
!9806 = !DILocation(line: 1747, column: 1, scope: !9717)
!9807 = !DILocation(line: 1748, column: 14, scope: !9717)
!9808 = !DILocation(line: 1748, column: 2, scope: !9717)
!9809 = !DILocation(line: 1749, column: 2, scope: !9717)
!9810 = !DILocation(line: 1749, column: 7, scope: !9717)
!9811 = !DILocation(line: 1749, column: 14, scope: !9717)
!9812 = !DILocation(line: 1750, column: 2, scope: !9717)
!9813 = !DILocation(line: 1750, column: 7, scope: !9717)
!9814 = !DILocation(line: 1750, column: 17, scope: !9717)
!9815 = !DILabel(scope: !9717, name: "err_mem", file: !3, line: 1751)
!9816 = !DILocation(line: 1751, column: 1, scope: !9717)
!9817 = !DILocation(line: 1753, column: 2, scope: !9717)
!9818 = !DILabel(scope: !9717, name: "defer", file: !3, line: 1755)
!9819 = !DILocation(line: 1755, column: 1, scope: !9717)
!9820 = !DILocation(line: 1756, column: 14, scope: !9717)
!9821 = !DILocation(line: 1756, column: 2, scope: !9717)
!9822 = !DILocation(line: 1758, column: 6, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 1758, column: 6)
!9824 = !DILocation(line: 1758, column: 9, scope: !9823)
!9825 = !DILocation(line: 1758, column: 6, scope: !9717)
!9826 = !DILocation(line: 1759, column: 3, scope: !9823)
!9827 = !DILocation(line: 1761, column: 3, scope: !9823)
!9828 = !DILocation(line: 1762, column: 1, scope: !9717)
!9829 = distinct !DISubprogram(name: "ata_scsi_simulate", scope: !3, file: !3, line: 4128, type: !9830, scopeLine: 4129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{null, !6455, !6139}
!9832 = !DILocalVariable(name: "dev", arg: 1, scope: !9829, file: !3, line: 4128, type: !6455)
!9833 = !DILocation(line: 4128, column: 43, scope: !9829)
!9834 = !DILocalVariable(name: "cmd", arg: 2, scope: !9829, file: !3, line: 4128, type: !6139)
!9835 = !DILocation(line: 4128, column: 66, scope: !9829)
!9836 = !DILocalVariable(name: "args", scope: !9829, file: !3, line: 4130, type: !6986)
!9837 = !DILocation(line: 4130, column: 23, scope: !9829)
!9838 = !DILocalVariable(name: "scsicmd", scope: !9829, file: !3, line: 4131, type: !9839)
!9839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6964, size: 64)
!9840 = !DILocation(line: 4131, column: 12, scope: !9829)
!9841 = !DILocation(line: 4131, column: 22, scope: !9829)
!9842 = !DILocation(line: 4131, column: 27, scope: !9829)
!9843 = !DILocalVariable(name: "tmp8", scope: !9829, file: !3, line: 4132, type: !1203)
!9844 = !DILocation(line: 4132, column: 5, scope: !9829)
!9845 = !DILocation(line: 4134, column: 13, scope: !9829)
!9846 = !DILocation(line: 4134, column: 7, scope: !9829)
!9847 = !DILocation(line: 4134, column: 11, scope: !9829)
!9848 = !DILocation(line: 4135, column: 12, scope: !9829)
!9849 = !DILocation(line: 4135, column: 17, scope: !9829)
!9850 = !DILocation(line: 4135, column: 7, scope: !9829)
!9851 = !DILocation(line: 4135, column: 10, scope: !9829)
!9852 = !DILocation(line: 4136, column: 13, scope: !9829)
!9853 = !DILocation(line: 4136, column: 7, scope: !9829)
!9854 = !DILocation(line: 4136, column: 11, scope: !9829)
!9855 = !DILocation(line: 4138, column: 9, scope: !9829)
!9856 = !DILocation(line: 4138, column: 2, scope: !9829)
!9857 = !DILocation(line: 4140, column: 7, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 4140, column: 7)
!9859 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4138, column: 21)
!9860 = !DILocation(line: 4140, column: 18, scope: !9858)
!9861 = !DILocation(line: 4140, column: 7, scope: !9859)
!9862 = !DILocation(line: 4141, column: 31, scope: !9858)
!9863 = !DILocation(line: 4141, column: 36, scope: !9858)
!9864 = !DILocation(line: 4141, column: 4, scope: !9858)
!9865 = !DILocation(line: 4142, column: 13, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 4142, column: 12)
!9867 = !DILocation(line: 4142, column: 24, scope: !9866)
!9868 = !DILocation(line: 4142, column: 29, scope: !9866)
!9869 = !DILocation(line: 4142, column: 12, scope: !9858)
!9870 = !DILocation(line: 4143, column: 4, scope: !9866)
!9871 = !DILocation(line: 4144, column: 16, scope: !9866)
!9872 = !DILocation(line: 4144, column: 8, scope: !9866)
!9873 = !DILocation(line: 4146, column: 4, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 4144, column: 28)
!9875 = !DILocation(line: 4147, column: 4, scope: !9874)
!9876 = !DILocation(line: 4149, column: 4, scope: !9874)
!9877 = !DILocation(line: 4150, column: 4, scope: !9874)
!9878 = !DILocation(line: 4152, column: 4, scope: !9874)
!9879 = !DILocation(line: 4153, column: 4, scope: !9874)
!9880 = !DILocation(line: 4155, column: 4, scope: !9874)
!9881 = !DILocation(line: 4156, column: 4, scope: !9874)
!9882 = !DILocation(line: 4158, column: 4, scope: !9874)
!9883 = !DILocation(line: 4159, column: 4, scope: !9874)
!9884 = !DILocation(line: 4161, column: 4, scope: !9874)
!9885 = !DILocation(line: 4162, column: 4, scope: !9874)
!9886 = !DILocation(line: 4164, column: 4, scope: !9874)
!9887 = !DILocation(line: 4165, column: 4, scope: !9874)
!9888 = !DILocation(line: 4167, column: 8, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 4167, column: 8)
!9890 = !DILocation(line: 4167, column: 13, scope: !9889)
!9891 = !DILocation(line: 4167, column: 19, scope: !9889)
!9892 = !DILocation(line: 4167, column: 8, scope: !9874)
!9893 = !DILocation(line: 4168, column: 5, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 4167, column: 36)
!9895 = !DILocation(line: 4169, column: 5, scope: !9894)
!9896 = !DILocation(line: 4167, column: 21, scope: !9889)
!9897 = !DILocation(line: 4173, column: 31, scope: !9874)
!9898 = !DILocation(line: 4173, column: 36, scope: !9874)
!9899 = !DILocation(line: 4173, column: 4, scope: !9874)
!9900 = !DILocation(line: 4174, column: 4, scope: !9874)
!9901 = !DILocation(line: 4176, column: 3, scope: !9859)
!9902 = !DILocation(line: 4180, column: 3, scope: !9859)
!9903 = !DILocation(line: 4181, column: 3, scope: !9859)
!9904 = !DILocation(line: 4184, column: 3, scope: !9859)
!9905 = !DILocation(line: 4185, column: 3, scope: !9859)
!9906 = !DILocation(line: 4188, column: 8, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 4188, column: 7)
!9908 = !DILocation(line: 4188, column: 19, scope: !9907)
!9909 = !DILocation(line: 4188, column: 27, scope: !9907)
!9910 = !DILocation(line: 4188, column: 7, scope: !9859)
!9911 = !DILocation(line: 4189, column: 4, scope: !9907)
!9912 = !DILocation(line: 4191, column: 31, scope: !9907)
!9913 = !DILocation(line: 4191, column: 36, scope: !9907)
!9914 = !DILocation(line: 4191, column: 4, scope: !9907)
!9915 = !DILocation(line: 4192, column: 3, scope: !9859)
!9916 = !DILocation(line: 4195, column: 3, scope: !9859)
!9917 = !DILocation(line: 4196, column: 3, scope: !9859)
!9918 = !DILocation(line: 4199, column: 22, scope: !9859)
!9919 = !DILocation(line: 4199, column: 27, scope: !9859)
!9920 = !DILocation(line: 4199, column: 3, scope: !9859)
!9921 = !DILocation(line: 4200, column: 3, scope: !9859)
!9922 = !DILocation(line: 4200, column: 8, scope: !9859)
!9923 = !DILocation(line: 4200, column: 15, scope: !9859)
!9924 = !DILocation(line: 4201, column: 3, scope: !9859)
!9925 = !DILocation(line: 4214, column: 3, scope: !9859)
!9926 = !DILocation(line: 4217, column: 10, scope: !9859)
!9927 = !DILocation(line: 4217, column: 21, scope: !9859)
!9928 = !DILocation(line: 4217, column: 8, scope: !9859)
!9929 = !DILocation(line: 4218, column: 7, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 4218, column: 7)
!9931 = !DILocation(line: 4218, column: 12, scope: !9930)
!9932 = !DILocation(line: 4218, column: 19, scope: !9930)
!9933 = !DILocation(line: 4218, column: 22, scope: !9930)
!9934 = !DILocation(line: 4218, column: 33, scope: !9930)
!9935 = !DILocation(line: 4218, column: 36, scope: !9930)
!9936 = !DILocation(line: 4218, column: 7, scope: !9859)
!9937 = !DILocation(line: 4219, column: 31, scope: !9930)
!9938 = !DILocation(line: 4219, column: 36, scope: !9930)
!9939 = !DILocation(line: 4219, column: 4, scope: !9930)
!9940 = !DILocation(line: 4220, column: 3, scope: !9859)
!9941 = !DILocation(line: 4223, column: 7, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 4223, column: 7)
!9943 = !DILocation(line: 4223, column: 18, scope: !9942)
!9944 = !DILocation(line: 4223, column: 7, scope: !9859)
!9945 = !DILocation(line: 4224, column: 4, scope: !9942)
!9946 = !DILocation(line: 4226, column: 31, scope: !9942)
!9947 = !DILocation(line: 4226, column: 36, scope: !9942)
!9948 = !DILocation(line: 4226, column: 4, scope: !9942)
!9949 = !DILocation(line: 4227, column: 3, scope: !9859)
!9950 = !DILocation(line: 4231, column: 22, scope: !9859)
!9951 = !DILocation(line: 4231, column: 27, scope: !9859)
!9952 = !DILocation(line: 4231, column: 3, scope: !9859)
!9953 = !DILocation(line: 4233, column: 3, scope: !9859)
!9954 = !DILocation(line: 4236, column: 2, scope: !9829)
!9955 = !DILocation(line: 4236, column: 7, scope: !9829)
!9956 = !DILocation(line: 4236, column: 17, scope: !9829)
!9957 = !DILocation(line: 4237, column: 1, scope: !9829)
!9958 = distinct !DISubprogram(name: "ata_scsi_queuecmd", scope: !3, file: !3, line: 4088, type: !6137, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!9959 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !9960)
!9960 = distinct !DILocation(line: 4110, column: 2, scope: !9958)
!9961 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !9960)
!9962 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !9963)
!9963 = distinct !DILocation(line: 4098, column: 2, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 4098, column: 2)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 4098, column: 2)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 4098, column: 2)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 4098, column: 2)
!9968 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 4098, column: 2)
!9969 = !DILocalVariable(name: "shost", arg: 1, scope: !9958, file: !3, line: 4088, type: !992)
!9970 = !DILocation(line: 4088, column: 41, scope: !9958)
!9971 = !DILocalVariable(name: "cmd", arg: 2, scope: !9958, file: !3, line: 4088, type: !6139)
!9972 = !DILocation(line: 4088, column: 66, scope: !9958)
!9973 = !DILocalVariable(name: "ap", scope: !9958, file: !3, line: 4090, type: !988)
!9974 = !DILocation(line: 4090, column: 19, scope: !9958)
!9975 = !DILocalVariable(name: "dev", scope: !9958, file: !3, line: 4091, type: !6455)
!9976 = !DILocation(line: 4091, column: 21, scope: !9958)
!9977 = !DILocalVariable(name: "scsidev", scope: !9958, file: !3, line: 4092, type: !5987)
!9978 = !DILocation(line: 4092, column: 22, scope: !9958)
!9979 = !DILocation(line: 4092, column: 32, scope: !9958)
!9980 = !DILocation(line: 4092, column: 37, scope: !9958)
!9981 = !DILocalVariable(name: "rc", scope: !9958, file: !3, line: 4093, type: !211)
!9982 = !DILocation(line: 4093, column: 6, scope: !9958)
!9983 = !DILocalVariable(name: "irq_flags", scope: !9958, file: !3, line: 4094, type: !986)
!9984 = !DILocation(line: 4094, column: 16, scope: !9958)
!9985 = !DILocation(line: 4096, column: 25, scope: !9958)
!9986 = !DILocation(line: 4096, column: 7, scope: !9958)
!9987 = !DILocation(line: 4096, column: 5, scope: !9958)
!9988 = !DILocation(line: 4098, column: 2, scope: !9958)
!9989 = !DILocation(line: 4098, column: 2, scope: !9968)
!9990 = !DILocalVariable(name: "__dummy", scope: !9991, file: !3, line: 4098, type: !986)
!9991 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 4098, column: 2)
!9992 = !DILocation(line: 4098, column: 2, scope: !9991)
!9993 = !DILocalVariable(name: "__dummy2", scope: !9991, file: !3, line: 4098, type: !986)
!9994 = !DILocation(line: 4098, column: 2, scope: !9967)
!9995 = !DILocation(line: 4098, column: 2, scope: !9966)
!9996 = !DILocation(line: 4098, column: 2, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 4098, column: 2)
!9998 = !DILocalVariable(name: "__dummy", scope: !9999, file: !3, line: 4098, type: !986)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 4098, column: 2)
!10000 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 4098, column: 2)
!10001 = !DILocation(line: 4098, column: 2, scope: !9999)
!10002 = !DILocalVariable(name: "__dummy2", scope: !9999, file: !3, line: 4098, type: !986)
!10003 = !DILocation(line: 4098, column: 2, scope: !10000)
!10004 = !DILocation(line: 4098, column: 2, scope: !9965)
!10005 = !{i32 -2139688066}
!10006 = !DILocation(line: 4098, column: 2, scope: !9964)
!10007 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !9963)
!10008 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !9963)
!10009 = !DILocation(line: 4100, column: 20, scope: !9958)
!10010 = !DILocation(line: 4100, column: 24, scope: !9958)
!10011 = !DILocation(line: 4100, column: 2, scope: !9958)
!10012 = !DILocation(line: 4102, column: 26, scope: !9958)
!10013 = !DILocation(line: 4102, column: 30, scope: !9958)
!10014 = !DILocation(line: 4102, column: 8, scope: !9958)
!10015 = !DILocation(line: 4102, column: 6, scope: !9958)
!10016 = !DILocation(line: 4103, column: 6, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 4103, column: 6)
!10018 = !DILocation(line: 4103, column: 6, scope: !9958)
!10019 = !DILocation(line: 4104, column: 28, scope: !10017)
!10020 = !DILocation(line: 4104, column: 33, scope: !10017)
!10021 = !DILocation(line: 4104, column: 8, scope: !10017)
!10022 = !DILocation(line: 4104, column: 6, scope: !10017)
!10023 = !DILocation(line: 4104, column: 3, scope: !10017)
!10024 = !DILocation(line: 4106, column: 3, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 4105, column: 7)
!10026 = !DILocation(line: 4106, column: 8, scope: !10025)
!10027 = !DILocation(line: 4106, column: 15, scope: !10025)
!10028 = !DILocation(line: 4107, column: 3, scope: !10025)
!10029 = !DILocation(line: 4107, column: 8, scope: !10025)
!10030 = !DILocation(line: 4107, column: 18, scope: !10025)
!10031 = !DILocation(line: 4110, column: 25, scope: !9958)
!10032 = !DILocation(line: 4110, column: 29, scope: !9958)
!10033 = !DILocation(line: 4110, column: 35, scope: !9958)
!10034 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !9960)
!10035 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !9960)
!10036 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !9960)
!10037 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !9960)
!10038 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !9960)
!10039 = !DILocation(line: 4112, column: 9, scope: !9958)
!10040 = !DILocation(line: 4112, column: 2, scope: !9958)
!10041 = distinct !DISubprogram(name: "ata_scsi_set_invalid_field", scope: !3, file: !3, line: 221, type: !10042, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{null, !6455, !6139, !1726, !1203}
!10044 = !DILocalVariable(name: "dev", arg: 1, scope: !10041, file: !3, line: 221, type: !6455)
!10045 = !DILocation(line: 221, column: 59, scope: !10041)
!10046 = !DILocalVariable(name: "cmd", arg: 2, scope: !10041, file: !3, line: 222, type: !6139)
!10047 = !DILocation(line: 222, column: 30, scope: !10041)
!10048 = !DILocalVariable(name: "field", arg: 3, scope: !10041, file: !3, line: 222, type: !1726)
!10049 = !DILocation(line: 222, column: 39, scope: !10041)
!10050 = !DILocalVariable(name: "bit", arg: 4, scope: !10041, file: !3, line: 222, type: !1203)
!10051 = !DILocation(line: 222, column: 49, scope: !10041)
!10052 = !DILocation(line: 224, column: 21, scope: !10041)
!10053 = !DILocation(line: 224, column: 26, scope: !10041)
!10054 = !DILocation(line: 224, column: 2, scope: !10041)
!10055 = !DILocation(line: 226, column: 31, scope: !10041)
!10056 = !DILocation(line: 226, column: 36, scope: !10041)
!10057 = !DILocation(line: 227, column: 10, scope: !10041)
!10058 = !DILocation(line: 227, column: 17, scope: !10041)
!10059 = !DILocation(line: 226, column: 2, scope: !10041)
!10060 = !DILocation(line: 228, column: 1, scope: !10041)
!10061 = distinct !DISubprogram(name: "ata_scsi_rbuf_fill", scope: !3, file: !3, line: 1832, type: !10062, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{null, !6985, !10064}
!10064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6983, size: 64)
!10065 = !DILocalVariable(name: "args", arg: 1, scope: !10061, file: !3, line: 1832, type: !6985)
!10066 = !DILocation(line: 1832, column: 54, scope: !10061)
!10067 = !DILocalVariable(name: "actor", arg: 2, scope: !10061, file: !3, line: 1833, type: !10064)
!10068 = !DILocation(line: 1833, column: 18, scope: !10061)
!10069 = !DILocalVariable(name: "rbuf", scope: !10061, file: !3, line: 1835, type: !6537)
!10070 = !DILocation(line: 1835, column: 6, scope: !10061)
!10071 = !DILocalVariable(name: "rc", scope: !10061, file: !3, line: 1836, type: !7)
!10072 = !DILocation(line: 1836, column: 15, scope: !10061)
!10073 = !DILocalVariable(name: "cmd", scope: !10061, file: !3, line: 1837, type: !6139)
!10074 = !DILocation(line: 1837, column: 20, scope: !10061)
!10075 = !DILocation(line: 1837, column: 26, scope: !10061)
!10076 = !DILocation(line: 1837, column: 32, scope: !10061)
!10077 = !DILocalVariable(name: "flags", scope: !10061, file: !3, line: 1838, type: !986)
!10078 = !DILocation(line: 1838, column: 16, scope: !10061)
!10079 = !DILocation(line: 1840, column: 27, scope: !10061)
!10080 = !DILocation(line: 1840, column: 9, scope: !10061)
!10081 = !DILocation(line: 1840, column: 7, scope: !10061)
!10082 = !DILocation(line: 1841, column: 7, scope: !10061)
!10083 = !DILocation(line: 1841, column: 13, scope: !10061)
!10084 = !DILocation(line: 1841, column: 19, scope: !10061)
!10085 = !DILocation(line: 1841, column: 5, scope: !10061)
!10086 = !DILocation(line: 1842, column: 20, scope: !10061)
!10087 = !DILocation(line: 1842, column: 25, scope: !10061)
!10088 = !DILocation(line: 1842, column: 28, scope: !10061)
!10089 = !DILocation(line: 1842, column: 2, scope: !10061)
!10090 = !DILocation(line: 1844, column: 6, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 1844, column: 6)
!10092 = !DILocation(line: 1844, column: 9, scope: !10091)
!10093 = !DILocation(line: 1844, column: 6, scope: !10061)
!10094 = !DILocation(line: 1845, column: 3, scope: !10091)
!10095 = !DILocation(line: 1845, column: 8, scope: !10091)
!10096 = !DILocation(line: 1845, column: 15, scope: !10091)
!10097 = !DILocation(line: 1846, column: 1, scope: !10061)
!10098 = !DILocalVariable(name: "args", arg: 1, scope: !6982, file: !3, line: 1859, type: !6985)
!10099 = !DILocation(line: 1859, column: 62, scope: !6982)
!10100 = !DILocalVariable(name: "rbuf", arg: 2, scope: !6982, file: !3, line: 1859, type: !6537)
!10101 = !DILocation(line: 1859, column: 72, scope: !6982)
!10102 = !DILocalVariable(name: "hdr", scope: !6982, file: !3, line: 1885, type: !6594)
!10103 = !DILocation(line: 1885, column: 5, scope: !6982)
!10104 = !DILocation(line: 1901, column: 6, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1901, column: 6)
!10106 = !DILocation(line: 1901, column: 33, scope: !10105)
!10107 = !DILocation(line: 1902, column: 7, scope: !10105)
!10108 = !DILocation(line: 1902, column: 13, scope: !10105)
!10109 = !DILocation(line: 1902, column: 18, scope: !10105)
!10110 = !DILocation(line: 1902, column: 24, scope: !10105)
!10111 = !DILocation(line: 1902, column: 28, scope: !10105)
!10112 = !DILocation(line: 1902, column: 35, scope: !10105)
!10113 = !DILocation(line: 1901, column: 6, scope: !6982)
!10114 = !DILocation(line: 1903, column: 3, scope: !10105)
!10115 = !DILocation(line: 1903, column: 10, scope: !10105)
!10116 = !DILocation(line: 1905, column: 6, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1905, column: 6)
!10118 = !DILocation(line: 1905, column: 12, scope: !10117)
!10119 = !DILocation(line: 1905, column: 17, scope: !10117)
!10120 = !DILocation(line: 1905, column: 23, scope: !10117)
!10121 = !DILocation(line: 1905, column: 6, scope: !6982)
!10122 = !DILocation(line: 1906, column: 3, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 1905, column: 39)
!10124 = !DILocation(line: 1906, column: 10, scope: !10123)
!10125 = !DILocation(line: 1907, column: 3, scope: !10123)
!10126 = !DILocation(line: 1907, column: 10, scope: !10123)
!10127 = !DILocation(line: 1908, column: 2, scope: !10123)
!10128 = !DILocation(line: 1910, column: 9, scope: !6982)
!10129 = !DILocation(line: 1910, column: 2, scope: !6982)
!10130 = !DILocation(line: 1911, column: 10, scope: !6982)
!10131 = !DILocation(line: 1911, column: 2, scope: !6982)
!10132 = !DILocation(line: 1912, column: 16, scope: !6982)
!10133 = !DILocation(line: 1912, column: 22, scope: !6982)
!10134 = !DILocation(line: 1912, column: 27, scope: !6982)
!10135 = !DILocation(line: 1912, column: 2, scope: !6982)
!10136 = !DILocation(line: 1915, column: 16, scope: !6982)
!10137 = !DILocation(line: 1915, column: 22, scope: !6982)
!10138 = !DILocation(line: 1915, column: 27, scope: !6982)
!10139 = !DILocation(line: 1915, column: 2, scope: !6982)
!10140 = !DILocation(line: 1916, column: 15, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1916, column: 6)
!10142 = !DILocation(line: 1916, column: 6, scope: !10141)
!10143 = !DILocation(line: 1916, column: 36, scope: !10141)
!10144 = !DILocation(line: 1916, column: 6, scope: !6982)
!10145 = !DILocation(line: 1917, column: 17, scope: !10141)
!10146 = !DILocation(line: 1917, column: 23, scope: !10141)
!10147 = !DILocation(line: 1917, column: 28, scope: !10141)
!10148 = !DILocation(line: 1917, column: 3, scope: !10141)
!10149 = !DILocation(line: 1919, column: 6, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1919, column: 6)
!10151 = !DILocation(line: 1919, column: 15, scope: !10150)
!10152 = !DILocation(line: 1919, column: 20, scope: !10150)
!10153 = !DILocation(line: 1919, column: 23, scope: !10150)
!10154 = !DILocation(line: 1919, column: 32, scope: !10150)
!10155 = !DILocation(line: 1919, column: 6, scope: !6982)
!10156 = !DILocation(line: 1920, column: 11, scope: !10150)
!10157 = !DILocation(line: 1920, column: 3, scope: !10150)
!10158 = !DILocation(line: 1922, column: 23, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1922, column: 6)
!10160 = !DILocation(line: 1922, column: 29, scope: !10159)
!10161 = !DILocation(line: 1922, column: 6, scope: !10159)
!10162 = !DILocation(line: 1922, column: 33, scope: !10159)
!10163 = !DILocation(line: 1922, column: 36, scope: !10159)
!10164 = !DILocation(line: 1922, column: 42, scope: !10159)
!10165 = !DILocation(line: 1922, column: 47, scope: !10159)
!10166 = !DILocation(line: 1922, column: 53, scope: !10159)
!10167 = !DILocation(line: 1922, column: 6, scope: !6982)
!10168 = !DILocation(line: 1923, column: 10, scope: !10159)
!10169 = !DILocation(line: 1923, column: 15, scope: !10159)
!10170 = !DILocation(line: 1923, column: 3, scope: !10159)
!10171 = !DILocation(line: 1925, column: 10, scope: !10159)
!10172 = !DILocation(line: 1925, column: 15, scope: !10159)
!10173 = !DILocation(line: 1925, column: 3, scope: !10159)
!10174 = !DILocation(line: 1927, column: 2, scope: !6982)
!10175 = !DILocalVariable(name: "args", arg: 1, scope: !6997, file: !3, line: 1940, type: !6985)
!10176 = !DILocation(line: 1940, column: 61, scope: !6997)
!10177 = !DILocalVariable(name: "rbuf", arg: 2, scope: !6997, file: !3, line: 1940, type: !6537)
!10178 = !DILocation(line: 1940, column: 71, scope: !6997)
!10179 = !DILocalVariable(name: "num_pages", scope: !6997, file: !3, line: 1942, type: !211)
!10180 = !DILocation(line: 1942, column: 6, scope: !6997)
!10181 = !DILocation(line: 1954, column: 12, scope: !6997)
!10182 = !DILocation(line: 1955, column: 8, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 1955, column: 6)
!10184 = !DILocation(line: 1955, column: 14, scope: !10183)
!10185 = !DILocation(line: 1955, column: 19, scope: !10183)
!10186 = !DILocation(line: 1955, column: 25, scope: !10183)
!10187 = !DILocation(line: 1955, column: 6, scope: !6997)
!10188 = !DILocation(line: 1956, column: 12, scope: !10183)
!10189 = !DILocation(line: 1956, column: 3, scope: !10183)
!10190 = !DILocation(line: 1957, column: 12, scope: !6997)
!10191 = !DILocation(line: 1957, column: 2, scope: !6997)
!10192 = !DILocation(line: 1957, column: 10, scope: !6997)
!10193 = !DILocation(line: 1958, column: 9, scope: !6997)
!10194 = !DILocation(line: 1958, column: 14, scope: !6997)
!10195 = !DILocation(line: 1958, column: 26, scope: !6997)
!10196 = !DILocation(line: 1958, column: 2, scope: !6997)
!10197 = !DILocation(line: 1959, column: 2, scope: !6997)
!10198 = !DILocalVariable(name: "args", arg: 1, scope: !7000, file: !3, line: 1972, type: !6985)
!10199 = !DILocation(line: 1972, column: 61, scope: !7000)
!10200 = !DILocalVariable(name: "rbuf", arg: 2, scope: !7000, file: !3, line: 1972, type: !6537)
!10201 = !DILocation(line: 1972, column: 71, scope: !7000)
!10202 = !DILocation(line: 1981, column: 9, scope: !7000)
!10203 = !DILocation(line: 1981, column: 2, scope: !7000)
!10204 = !DILocation(line: 1982, column: 16, scope: !7000)
!10205 = !DILocation(line: 1982, column: 22, scope: !7000)
!10206 = !DILocation(line: 1982, column: 45, scope: !7000)
!10207 = !DILocation(line: 1982, column: 2, scope: !7000)
!10208 = !DILocation(line: 1984, column: 2, scope: !7000)
!10209 = distinct !DISubprogram(name: "ata_scsiop_inq_83", scope: !3, file: !3, line: 2000, type: !6983, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10210 = !DILocalVariable(name: "args", arg: 1, scope: !10209, file: !3, line: 2000, type: !6985)
!10211 = !DILocation(line: 2000, column: 61, scope: !10209)
!10212 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10209, file: !3, line: 2000, type: !6537)
!10213 = !DILocation(line: 2000, column: 71, scope: !10209)
!10214 = !DILocalVariable(name: "sat_model_serial_desc_len", scope: !10209, file: !3, line: 2002, type: !10215)
!10215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!10216 = !DILocation(line: 2002, column: 12, scope: !10209)
!10217 = !DILocalVariable(name: "num", scope: !10209, file: !3, line: 2003, type: !211)
!10218 = !DILocation(line: 2003, column: 6, scope: !10209)
!10219 = !DILocation(line: 2005, column: 2, scope: !10209)
!10220 = !DILocation(line: 2005, column: 10, scope: !10209)
!10221 = !DILocation(line: 2006, column: 6, scope: !10209)
!10222 = !DILocation(line: 2009, column: 2, scope: !10209)
!10223 = !DILocation(line: 2009, column: 7, scope: !10209)
!10224 = !DILocation(line: 2009, column: 11, scope: !10209)
!10225 = !DILocation(line: 2009, column: 16, scope: !10209)
!10226 = !DILocation(line: 2010, column: 2, scope: !10209)
!10227 = !DILocation(line: 2010, column: 7, scope: !10209)
!10228 = !DILocation(line: 2010, column: 11, scope: !10209)
!10229 = !DILocation(line: 2010, column: 16, scope: !10209)
!10230 = !DILocation(line: 2011, column: 6, scope: !10209)
!10231 = !DILocation(line: 2012, column: 16, scope: !10209)
!10232 = !DILocation(line: 2012, column: 22, scope: !10209)
!10233 = !DILocation(line: 2012, column: 44, scope: !10209)
!10234 = !DILocation(line: 2012, column: 51, scope: !10209)
!10235 = !DILocation(line: 2012, column: 49, scope: !10209)
!10236 = !DILocation(line: 2012, column: 2, scope: !10209)
!10237 = !DILocation(line: 2014, column: 6, scope: !10209)
!10238 = !DILocation(line: 2018, column: 2, scope: !10209)
!10239 = !DILocation(line: 2018, column: 7, scope: !10209)
!10240 = !DILocation(line: 2018, column: 11, scope: !10209)
!10241 = !DILocation(line: 2018, column: 16, scope: !10209)
!10242 = !DILocation(line: 2019, column: 2, scope: !10209)
!10243 = !DILocation(line: 2019, column: 7, scope: !10209)
!10244 = !DILocation(line: 2019, column: 11, scope: !10209)
!10245 = !DILocation(line: 2019, column: 16, scope: !10209)
!10246 = !DILocation(line: 2020, column: 2, scope: !10209)
!10247 = !DILocation(line: 2020, column: 7, scope: !10209)
!10248 = !DILocation(line: 2020, column: 11, scope: !10209)
!10249 = !DILocation(line: 2020, column: 16, scope: !10209)
!10250 = !DILocation(line: 2021, column: 6, scope: !10209)
!10251 = !DILocation(line: 2022, column: 9, scope: !10209)
!10252 = !DILocation(line: 2022, column: 16, scope: !10209)
!10253 = !DILocation(line: 2022, column: 14, scope: !10209)
!10254 = !DILocation(line: 2022, column: 2, scope: !10209)
!10255 = !DILocation(line: 2023, column: 6, scope: !10209)
!10256 = !DILocation(line: 2024, column: 16, scope: !10209)
!10257 = !DILocation(line: 2024, column: 22, scope: !10209)
!10258 = !DILocation(line: 2024, column: 44, scope: !10209)
!10259 = !DILocation(line: 2024, column: 51, scope: !10209)
!10260 = !DILocation(line: 2024, column: 49, scope: !10209)
!10261 = !DILocation(line: 2024, column: 2, scope: !10209)
!10262 = !DILocation(line: 2026, column: 6, scope: !10209)
!10263 = !DILocation(line: 2027, column: 16, scope: !10209)
!10264 = !DILocation(line: 2027, column: 22, scope: !10209)
!10265 = !DILocation(line: 2027, column: 44, scope: !10209)
!10266 = !DILocation(line: 2027, column: 51, scope: !10209)
!10267 = !DILocation(line: 2027, column: 49, scope: !10209)
!10268 = !DILocation(line: 2027, column: 2, scope: !10209)
!10269 = !DILocation(line: 2029, column: 6, scope: !10209)
!10270 = !DILocation(line: 2031, column: 21, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 2031, column: 6)
!10272 = !DILocation(line: 2031, column: 27, scope: !10271)
!10273 = !DILocation(line: 2031, column: 6, scope: !10271)
!10274 = !DILocation(line: 2031, column: 6, scope: !10209)
!10275 = !DILocation(line: 2034, column: 3, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 2031, column: 32)
!10277 = !DILocation(line: 2034, column: 8, scope: !10276)
!10278 = !DILocation(line: 2034, column: 12, scope: !10276)
!10279 = !DILocation(line: 2034, column: 17, scope: !10276)
!10280 = !DILocation(line: 2035, column: 3, scope: !10276)
!10281 = !DILocation(line: 2035, column: 8, scope: !10276)
!10282 = !DILocation(line: 2035, column: 12, scope: !10276)
!10283 = !DILocation(line: 2035, column: 17, scope: !10276)
!10284 = !DILocation(line: 2036, column: 3, scope: !10276)
!10285 = !DILocation(line: 2036, column: 8, scope: !10276)
!10286 = !DILocation(line: 2036, column: 12, scope: !10276)
!10287 = !DILocation(line: 2036, column: 17, scope: !10276)
!10288 = !DILocation(line: 2037, column: 7, scope: !10276)
!10289 = !DILocation(line: 2038, column: 17, scope: !10276)
!10290 = !DILocation(line: 2038, column: 23, scope: !10276)
!10291 = !DILocation(line: 2038, column: 45, scope: !10276)
!10292 = !DILocation(line: 2038, column: 52, scope: !10276)
!10293 = !DILocation(line: 2038, column: 50, scope: !10276)
!10294 = !DILocation(line: 2038, column: 3, scope: !10276)
!10295 = !DILocation(line: 2040, column: 7, scope: !10276)
!10296 = !DILocation(line: 2041, column: 2, scope: !10276)
!10297 = !DILocation(line: 2042, column: 12, scope: !10209)
!10298 = !DILocation(line: 2042, column: 16, scope: !10209)
!10299 = !DILocation(line: 2042, column: 2, scope: !10209)
!10300 = !DILocation(line: 2042, column: 10, scope: !10209)
!10301 = !DILocation(line: 2043, column: 2, scope: !10209)
!10302 = distinct !DISubprogram(name: "ata_scsiop_inq_89", scope: !3, file: !3, line: 2056, type: !6983, scopeLine: 2057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10303 = !DILocalVariable(name: "args", arg: 1, scope: !10302, file: !3, line: 2056, type: !6985)
!10304 = !DILocation(line: 2056, column: 61, scope: !10302)
!10305 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10302, file: !3, line: 2056, type: !6537)
!10306 = !DILocation(line: 2056, column: 71, scope: !10302)
!10307 = !DILocation(line: 2058, column: 2, scope: !10302)
!10308 = !DILocation(line: 2058, column: 10, scope: !10302)
!10309 = !DILocation(line: 2059, column: 2, scope: !10302)
!10310 = !DILocation(line: 2059, column: 10, scope: !10302)
!10311 = !DILocation(line: 2060, column: 2, scope: !10302)
!10312 = !DILocation(line: 2060, column: 10, scope: !10302)
!10313 = !DILocation(line: 2062, column: 10, scope: !10302)
!10314 = !DILocation(line: 2062, column: 2, scope: !10302)
!10315 = !DILocation(line: 2063, column: 10, scope: !10302)
!10316 = !DILocation(line: 2063, column: 2, scope: !10302)
!10317 = !DILocation(line: 2064, column: 10, scope: !10302)
!10318 = !DILocation(line: 2064, column: 2, scope: !10302)
!10319 = !DILocation(line: 2066, column: 2, scope: !10302)
!10320 = !DILocation(line: 2066, column: 11, scope: !10302)
!10321 = !DILocation(line: 2067, column: 2, scope: !10302)
!10322 = !DILocation(line: 2067, column: 11, scope: !10302)
!10323 = !DILocation(line: 2071, column: 2, scope: !10302)
!10324 = !DILocation(line: 2071, column: 11, scope: !10302)
!10325 = !DILocation(line: 2072, column: 2, scope: !10302)
!10326 = !DILocation(line: 2072, column: 11, scope: !10302)
!10327 = !DILocation(line: 2073, column: 2, scope: !10302)
!10328 = !DILocation(line: 2073, column: 11, scope: !10302)
!10329 = !DILocation(line: 2075, column: 2, scope: !10302)
!10330 = !DILocation(line: 2075, column: 11, scope: !10302)
!10331 = !DILocation(line: 2077, column: 10, scope: !10302)
!10332 = !DILocation(line: 2077, column: 21, scope: !10302)
!10333 = !DILocation(line: 2077, column: 27, scope: !10302)
!10334 = !DILocation(line: 2077, column: 2, scope: !10302)
!10335 = !DILocation(line: 2078, column: 2, scope: !10302)
!10336 = distinct !DISubprogram(name: "ata_scsiop_inq_b0", scope: !3, file: !3, line: 2081, type: !6983, scopeLine: 2082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10337 = !DILocalVariable(name: "val", arg: 1, scope: !10338, file: !10339, line: 58, type: !1049)
!10338 = distinct !DISubprogram(name: "put_unaligned_be32", scope: !10339, file: !10339, line: 58, type: !10340, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10339 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!10340 = !DISubroutineType(types: !10341)
!10341 = !{null, !1049, !983}
!10342 = !DILocation(line: 58, column: 52, scope: !10338, inlinedAt: !10343)
!10343 = distinct !DILocation(line: 2115, column: 3, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 2108, column: 33)
!10345 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 2108, column: 6)
!10346 = !DILocalVariable(name: "p", arg: 2, scope: !10338, file: !10339, line: 58, type: !983)
!10347 = !DILocation(line: 58, column: 63, scope: !10338, inlinedAt: !10343)
!10348 = !DILocalVariable(name: "val", arg: 1, scope: !10349, file: !10339, line: 63, type: !976)
!10349 = distinct !DISubprogram(name: "put_unaligned_be64", scope: !10339, file: !10339, line: 63, type: !10350, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10350 = !DISubroutineType(types: !10351)
!10351 = !{null, !976, !983}
!10352 = !DILocation(line: 63, column: 52, scope: !10349, inlinedAt: !10353)
!10353 = distinct !DILocation(line: 2114, column: 3, scope: !10344)
!10354 = !DILocalVariable(name: "p", arg: 2, scope: !10349, file: !10339, line: 63, type: !983)
!10355 = !DILocation(line: 63, column: 63, scope: !10349, inlinedAt: !10353)
!10356 = !DILocalVariable(name: "val", arg: 1, scope: !10357, file: !10339, line: 53, type: !1726)
!10357 = distinct !DISubprogram(name: "put_unaligned_be16", scope: !10339, file: !10339, line: 53, type: !10358, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10358 = !DISubroutineType(types: !10359)
!10359 = !{null, !1726, !983}
!10360 = !DILocation(line: 53, column: 52, scope: !10357, inlinedAt: !10361)
!10361 = distinct !DILocation(line: 2097, column: 2, scope: !10336)
!10362 = !DILocalVariable(name: "p", arg: 2, scope: !10357, file: !10339, line: 53, type: !983)
!10363 = !DILocation(line: 53, column: 63, scope: !10357, inlinedAt: !10361)
!10364 = !DILocalVariable(name: "args", arg: 1, scope: !10336, file: !3, line: 2081, type: !6985)
!10365 = !DILocation(line: 2081, column: 61, scope: !10336)
!10366 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10336, file: !3, line: 2081, type: !6537)
!10367 = !DILocation(line: 2081, column: 71, scope: !10336)
!10368 = !DILocalVariable(name: "dev", scope: !10336, file: !3, line: 2083, type: !6455)
!10369 = !DILocation(line: 2083, column: 21, scope: !10336)
!10370 = !DILocation(line: 2083, column: 27, scope: !10336)
!10371 = !DILocation(line: 2083, column: 33, scope: !10336)
!10372 = !DILocalVariable(name: "min_io_sectors", scope: !10336, file: !3, line: 2084, type: !1726)
!10373 = !DILocation(line: 2084, column: 6, scope: !10336)
!10374 = !DILocation(line: 2086, column: 2, scope: !10336)
!10375 = !DILocation(line: 2086, column: 10, scope: !10336)
!10376 = !DILocation(line: 2087, column: 2, scope: !10336)
!10377 = !DILocation(line: 2087, column: 10, scope: !10336)
!10378 = !DILocation(line: 2096, column: 56, scope: !10336)
!10379 = !DILocation(line: 2096, column: 62, scope: !10336)
!10380 = !DILocation(line: 2096, column: 24, scope: !10336)
!10381 = !DILocation(line: 2096, column: 21, scope: !10336)
!10382 = !DILocation(line: 2096, column: 19, scope: !10336)
!10383 = !DILocation(line: 2096, column: 17, scope: !10336)
!10384 = !DILocation(line: 2097, column: 21, scope: !10336)
!10385 = !DILocation(line: 2097, column: 38, scope: !10336)
!10386 = !DILocation(line: 55, column: 19, scope: !10357, inlinedAt: !10361)
!10387 = !DILocation(line: 55, column: 14, scope: !10357, inlinedAt: !10361)
!10388 = !DILocation(line: 55, column: 4, scope: !10357, inlinedAt: !10361)
!10389 = !DILocation(line: 55, column: 17, scope: !10357, inlinedAt: !10361)
!10390 = !DILocation(line: 2108, column: 22, scope: !10345)
!10391 = !DILocation(line: 2108, column: 28, scope: !10345)
!10392 = !DILocation(line: 2108, column: 6, scope: !10345)
!10393 = !DILocation(line: 2108, column: 6, scope: !10336)
!10394 = !DILocalVariable(name: "max_blocks", scope: !10344, file: !3, line: 2109, type: !976)
!10395 = !DILocation(line: 2109, column: 7, scope: !10344)
!10396 = !DILocation(line: 2111, column: 7, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10344, file: !3, line: 2111, column: 7)
!10398 = !DILocation(line: 2111, column: 12, scope: !10397)
!10399 = !DILocation(line: 2111, column: 20, scope: !10397)
!10400 = !DILocation(line: 2111, column: 7, scope: !10344)
!10401 = !DILocation(line: 2112, column: 15, scope: !10397)
!10402 = !DILocation(line: 2112, column: 4, scope: !10397)
!10403 = !DILocation(line: 2114, column: 22, scope: !10344)
!10404 = !DILocation(line: 2114, column: 35, scope: !10344)
!10405 = !DILocation(line: 65, column: 19, scope: !10349, inlinedAt: !10353)
!10406 = !DILocation(line: 65, column: 14, scope: !10349, inlinedAt: !10353)
!10407 = !DILocation(line: 65, column: 4, scope: !10349, inlinedAt: !10353)
!10408 = !DILocation(line: 65, column: 17, scope: !10349, inlinedAt: !10353)
!10409 = !DILocation(line: 2115, column: 26, scope: !10344)
!10410 = !DILocation(line: 60, column: 19, scope: !10338, inlinedAt: !10343)
!10411 = !DILocation(line: 60, column: 14, scope: !10338, inlinedAt: !10343)
!10412 = !DILocation(line: 60, column: 4, scope: !10338, inlinedAt: !10343)
!10413 = !DILocation(line: 60, column: 17, scope: !10338, inlinedAt: !10343)
!10414 = !DILocation(line: 2116, column: 2, scope: !10344)
!10415 = !DILocation(line: 2118, column: 2, scope: !10336)
!10416 = distinct !DISubprogram(name: "ata_scsiop_inq_b1", scope: !3, file: !3, line: 2121, type: !6983, scopeLine: 2122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10417 = !DILocalVariable(name: "args", arg: 1, scope: !10416, file: !3, line: 2121, type: !6985)
!10418 = !DILocation(line: 2121, column: 61, scope: !10416)
!10419 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10416, file: !3, line: 2121, type: !6537)
!10420 = !DILocation(line: 2121, column: 71, scope: !10416)
!10421 = !DILocalVariable(name: "form_factor", scope: !10416, file: !3, line: 2123, type: !211)
!10422 = !DILocation(line: 2123, column: 6, scope: !10416)
!10423 = !DILocation(line: 2123, column: 39, scope: !10416)
!10424 = !DILocation(line: 2123, column: 45, scope: !10416)
!10425 = !DILocation(line: 2123, column: 20, scope: !10416)
!10426 = !DILocalVariable(name: "media_rotation_rate", scope: !10416, file: !3, line: 2124, type: !211)
!10427 = !DILocation(line: 2124, column: 6, scope: !10416)
!10428 = !DILocation(line: 2124, column: 49, scope: !10416)
!10429 = !DILocation(line: 2124, column: 55, scope: !10416)
!10430 = !DILocation(line: 2124, column: 28, scope: !10416)
!10431 = !DILocalVariable(name: "zoned", scope: !10416, file: !3, line: 2125, type: !1203)
!10432 = !DILocation(line: 2125, column: 5, scope: !10416)
!10433 = !DILocation(line: 2125, column: 30, scope: !10416)
!10434 = !DILocation(line: 2125, column: 36, scope: !10416)
!10435 = !DILocation(line: 2125, column: 13, scope: !10416)
!10436 = !DILocation(line: 2127, column: 2, scope: !10416)
!10437 = !DILocation(line: 2127, column: 10, scope: !10416)
!10438 = !DILocation(line: 2128, column: 2, scope: !10416)
!10439 = !DILocation(line: 2128, column: 10, scope: !10416)
!10440 = !DILocation(line: 2129, column: 12, scope: !10416)
!10441 = !DILocation(line: 2129, column: 32, scope: !10416)
!10442 = !DILocation(line: 2129, column: 2, scope: !10416)
!10443 = !DILocation(line: 2129, column: 10, scope: !10416)
!10444 = !DILocation(line: 2130, column: 12, scope: !10416)
!10445 = !DILocation(line: 2130, column: 2, scope: !10416)
!10446 = !DILocation(line: 2130, column: 10, scope: !10416)
!10447 = !DILocation(line: 2131, column: 12, scope: !10416)
!10448 = !DILocation(line: 2131, column: 2, scope: !10416)
!10449 = !DILocation(line: 2131, column: 10, scope: !10416)
!10450 = !DILocation(line: 2132, column: 6, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 2132, column: 6)
!10452 = !DILocation(line: 2132, column: 6, scope: !10416)
!10453 = !DILocation(line: 2133, column: 14, scope: !10451)
!10454 = !DILocation(line: 2133, column: 20, scope: !10451)
!10455 = !DILocation(line: 2133, column: 13, scope: !10451)
!10456 = !DILocation(line: 2133, column: 3, scope: !10451)
!10457 = !DILocation(line: 2133, column: 11, scope: !10451)
!10458 = !DILocation(line: 2135, column: 2, scope: !10416)
!10459 = distinct !DISubprogram(name: "ata_scsiop_inq_b2", scope: !3, file: !3, line: 2138, type: !6983, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10460 = !DILocalVariable(name: "args", arg: 1, scope: !10459, file: !3, line: 2138, type: !6985)
!10461 = !DILocation(line: 2138, column: 61, scope: !10459)
!10462 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10459, file: !3, line: 2138, type: !6537)
!10463 = !DILocation(line: 2138, column: 71, scope: !10459)
!10464 = !DILocation(line: 2141, column: 2, scope: !10459)
!10465 = !DILocation(line: 2141, column: 10, scope: !10459)
!10466 = !DILocation(line: 2142, column: 2, scope: !10459)
!10467 = !DILocation(line: 2142, column: 10, scope: !10459)
!10468 = !DILocation(line: 2143, column: 2, scope: !10459)
!10469 = !DILocation(line: 2143, column: 10, scope: !10459)
!10470 = !DILocation(line: 2145, column: 2, scope: !10459)
!10471 = distinct !DISubprogram(name: "ata_scsiop_inq_b6", scope: !3, file: !3, line: 2148, type: !6983, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10472 = !DILocation(line: 58, column: 52, scope: !10338, inlinedAt: !10473)
!10473 = distinct !DILocation(line: 2163, column: 2, scope: !10471)
!10474 = !DILocation(line: 58, column: 63, scope: !10338, inlinedAt: !10473)
!10475 = !DILocation(line: 58, column: 52, scope: !10338, inlinedAt: !10476)
!10476 = distinct !DILocation(line: 2162, column: 2, scope: !10471)
!10477 = !DILocation(line: 58, column: 63, scope: !10338, inlinedAt: !10476)
!10478 = !DILocation(line: 58, column: 52, scope: !10338, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 2161, column: 2, scope: !10471)
!10480 = !DILocation(line: 58, column: 63, scope: !10338, inlinedAt: !10479)
!10481 = !DILocalVariable(name: "args", arg: 1, scope: !10471, file: !3, line: 2148, type: !6985)
!10482 = !DILocation(line: 2148, column: 61, scope: !10471)
!10483 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10471, file: !3, line: 2148, type: !6537)
!10484 = !DILocation(line: 2148, column: 71, scope: !10471)
!10485 = !DILocation(line: 2153, column: 2, scope: !10471)
!10486 = !DILocation(line: 2153, column: 10, scope: !10471)
!10487 = !DILocation(line: 2154, column: 2, scope: !10471)
!10488 = !DILocation(line: 2154, column: 10, scope: !10471)
!10489 = !DILocation(line: 2159, column: 6, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 2159, column: 6)
!10491 = !DILocation(line: 2159, column: 12, scope: !10490)
!10492 = !DILocation(line: 2159, column: 17, scope: !10490)
!10493 = !DILocation(line: 2159, column: 31, scope: !10490)
!10494 = !DILocation(line: 2159, column: 6, scope: !10471)
!10495 = !DILocation(line: 2160, column: 3, scope: !10490)
!10496 = !DILocation(line: 2160, column: 11, scope: !10490)
!10497 = !DILocation(line: 2161, column: 21, scope: !10471)
!10498 = !DILocation(line: 2161, column: 27, scope: !10471)
!10499 = !DILocation(line: 2161, column: 32, scope: !10471)
!10500 = !DILocation(line: 2161, column: 57, scope: !10471)
!10501 = !DILocation(line: 60, column: 19, scope: !10338, inlinedAt: !10479)
!10502 = !DILocation(line: 60, column: 14, scope: !10338, inlinedAt: !10479)
!10503 = !DILocation(line: 60, column: 4, scope: !10338, inlinedAt: !10479)
!10504 = !DILocation(line: 60, column: 17, scope: !10338, inlinedAt: !10479)
!10505 = !DILocation(line: 2162, column: 21, scope: !10471)
!10506 = !DILocation(line: 2162, column: 27, scope: !10471)
!10507 = !DILocation(line: 2162, column: 32, scope: !10471)
!10508 = !DILocation(line: 2162, column: 59, scope: !10471)
!10509 = !DILocation(line: 60, column: 19, scope: !10338, inlinedAt: !10476)
!10510 = !DILocation(line: 60, column: 14, scope: !10338, inlinedAt: !10476)
!10511 = !DILocation(line: 60, column: 4, scope: !10338, inlinedAt: !10476)
!10512 = !DILocation(line: 60, column: 17, scope: !10338, inlinedAt: !10476)
!10513 = !DILocation(line: 2163, column: 21, scope: !10471)
!10514 = !DILocation(line: 2163, column: 27, scope: !10471)
!10515 = !DILocation(line: 2163, column: 32, scope: !10471)
!10516 = !DILocation(line: 2163, column: 53, scope: !10471)
!10517 = !DILocation(line: 60, column: 19, scope: !10338, inlinedAt: !10473)
!10518 = !DILocation(line: 60, column: 14, scope: !10338, inlinedAt: !10473)
!10519 = !DILocation(line: 60, column: 4, scope: !10338, inlinedAt: !10473)
!10520 = !DILocation(line: 60, column: 17, scope: !10338, inlinedAt: !10473)
!10521 = !DILocation(line: 2165, column: 2, scope: !10471)
!10522 = !DILocalVariable(name: "args", arg: 1, scope: !7004, file: !3, line: 2294, type: !6985)
!10523 = !DILocation(line: 2294, column: 65, scope: !7004)
!10524 = !DILocalVariable(name: "rbuf", arg: 2, scope: !7004, file: !3, line: 2294, type: !6537)
!10525 = !DILocation(line: 2294, column: 75, scope: !7004)
!10526 = !DILocalVariable(name: "dev", scope: !7004, file: !3, line: 2296, type: !6455)
!10527 = !DILocation(line: 2296, column: 21, scope: !7004)
!10528 = !DILocation(line: 2296, column: 27, scope: !7004)
!10529 = !DILocation(line: 2296, column: 33, scope: !7004)
!10530 = !DILocalVariable(name: "scsicmd", scope: !7004, file: !3, line: 2297, type: !6537)
!10531 = !DILocation(line: 2297, column: 6, scope: !7004)
!10532 = !DILocation(line: 2297, column: 16, scope: !7004)
!10533 = !DILocation(line: 2297, column: 22, scope: !7004)
!10534 = !DILocation(line: 2297, column: 27, scope: !7004)
!10535 = !DILocalVariable(name: "p", scope: !7004, file: !3, line: 2297, type: !6537)
!10536 = !DILocation(line: 2297, column: 34, scope: !7004)
!10537 = !DILocation(line: 2297, column: 38, scope: !7004)
!10538 = !DILocalVariable(name: "pg", scope: !7004, file: !3, line: 2303, type: !1203)
!10539 = !DILocation(line: 2303, column: 5, scope: !7004)
!10540 = !DILocalVariable(name: "spg", scope: !7004, file: !3, line: 2303, type: !1203)
!10541 = !DILocation(line: 2303, column: 9, scope: !7004)
!10542 = !DILocalVariable(name: "ebd", scope: !7004, file: !3, line: 2304, type: !7)
!10543 = !DILocation(line: 2304, column: 15, scope: !7004)
!10544 = !DILocalVariable(name: "page_control", scope: !7004, file: !3, line: 2304, type: !7)
!10545 = !DILocation(line: 2304, column: 20, scope: !7004)
!10546 = !DILocalVariable(name: "six_byte", scope: !7004, file: !3, line: 2304, type: !7)
!10547 = !DILocation(line: 2304, column: 34, scope: !7004)
!10548 = !DILocalVariable(name: "dpofua", scope: !7004, file: !3, line: 2305, type: !1203)
!10549 = !DILocation(line: 2305, column: 5, scope: !7004)
!10550 = !DILocalVariable(name: "bp", scope: !7004, file: !3, line: 2305, type: !1203)
!10551 = !DILocation(line: 2305, column: 13, scope: !7004)
!10552 = !DILocalVariable(name: "fp", scope: !7004, file: !3, line: 2306, type: !1726)
!10553 = !DILocation(line: 2306, column: 6, scope: !7004)
!10554 = !DILocation(line: 2310, column: 14, scope: !7004)
!10555 = !DILocation(line: 2310, column: 25, scope: !7004)
!10556 = !DILocation(line: 2310, column: 11, scope: !7004)
!10557 = !DILocation(line: 2311, column: 10, scope: !7004)
!10558 = !DILocation(line: 2311, column: 21, scope: !7004)
!10559 = !DILocation(line: 2311, column: 8, scope: !7004)
!10560 = !DILocation(line: 2311, column: 6, scope: !7004)
!10561 = !DILocation(line: 2316, column: 17, scope: !7004)
!10562 = !DILocation(line: 2316, column: 28, scope: !7004)
!10563 = !DILocation(line: 2316, column: 15, scope: !7004)
!10564 = !DILocation(line: 2317, column: 10, scope: !7004)
!10565 = !DILocation(line: 2317, column: 2, scope: !7004)
!10566 = !DILocation(line: 2321, column: 3, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2317, column: 24)
!10568 = !DILocation(line: 2323, column: 3, scope: !10567)
!10569 = !DILocation(line: 2325, column: 6, scope: !10567)
!10570 = !DILocation(line: 2326, column: 6, scope: !10567)
!10571 = !DILocation(line: 2327, column: 3, scope: !10567)
!10572 = !DILocation(line: 2330, column: 6, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2330, column: 6)
!10574 = !DILocation(line: 2330, column: 6, scope: !7004)
!10575 = !DILocation(line: 2331, column: 13, scope: !10573)
!10576 = !DILocation(line: 2331, column: 10, scope: !10573)
!10577 = !DILocation(line: 2331, column: 5, scope: !10573)
!10578 = !DILocation(line: 2331, column: 3, scope: !10573)
!10579 = !DILocation(line: 2333, column: 13, scope: !10573)
!10580 = !DILocation(line: 2333, column: 10, scope: !10573)
!10581 = !DILocation(line: 2333, column: 5, scope: !10573)
!10582 = !DILocation(line: 2335, column: 7, scope: !7004)
!10583 = !DILocation(line: 2335, column: 18, scope: !7004)
!10584 = !DILocation(line: 2335, column: 5, scope: !7004)
!10585 = !DILocation(line: 2336, column: 8, scope: !7004)
!10586 = !DILocation(line: 2336, column: 6, scope: !7004)
!10587 = !DILocation(line: 2341, column: 6, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2341, column: 6)
!10589 = !DILocation(line: 2341, column: 10, scope: !10588)
!10590 = !DILocation(line: 2341, column: 14, scope: !10588)
!10591 = !DILocation(line: 2341, column: 18, scope: !10588)
!10592 = !DILocation(line: 2341, column: 6, scope: !7004)
!10593 = !DILocation(line: 2342, column: 6, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2341, column: 38)
!10595 = !DILocation(line: 2343, column: 3, scope: !10594)
!10596 = !DILocation(line: 2346, column: 9, scope: !7004)
!10597 = !DILocation(line: 2346, column: 2, scope: !7004)
!10598 = !DILocation(line: 2348, column: 31, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2346, column: 13)
!10600 = !DILocation(line: 2348, column: 34, scope: !10599)
!10601 = !DILocation(line: 2348, column: 47, scope: !10599)
!10602 = !DILocation(line: 2348, column: 8, scope: !10599)
!10603 = !DILocation(line: 2348, column: 5, scope: !10599)
!10604 = !DILocation(line: 2349, column: 3, scope: !10599)
!10605 = !DILocation(line: 2352, column: 27, scope: !10599)
!10606 = !DILocation(line: 2352, column: 33, scope: !10599)
!10607 = !DILocation(line: 2352, column: 37, scope: !10599)
!10608 = !DILocation(line: 2352, column: 40, scope: !10599)
!10609 = !DILocation(line: 2352, column: 53, scope: !10599)
!10610 = !DILocation(line: 2352, column: 8, scope: !10599)
!10611 = !DILocation(line: 2352, column: 5, scope: !10599)
!10612 = !DILocation(line: 2353, column: 3, scope: !10599)
!10613 = !DILocation(line: 2356, column: 27, scope: !10599)
!10614 = !DILocation(line: 2356, column: 33, scope: !10599)
!10615 = !DILocation(line: 2356, column: 38, scope: !10599)
!10616 = !DILocation(line: 2356, column: 41, scope: !10599)
!10617 = !DILocation(line: 2356, column: 54, scope: !10599)
!10618 = !DILocation(line: 2356, column: 8, scope: !10599)
!10619 = !DILocation(line: 2356, column: 5, scope: !10599)
!10620 = !DILocation(line: 2357, column: 3, scope: !10599)
!10621 = !DILocation(line: 2360, column: 31, scope: !10599)
!10622 = !DILocation(line: 2360, column: 34, scope: !10599)
!10623 = !DILocation(line: 2360, column: 47, scope: !10599)
!10624 = !DILocation(line: 2360, column: 8, scope: !10599)
!10625 = !DILocation(line: 2360, column: 5, scope: !10599)
!10626 = !DILocation(line: 2361, column: 27, scope: !10599)
!10627 = !DILocation(line: 2361, column: 33, scope: !10599)
!10628 = !DILocation(line: 2361, column: 37, scope: !10599)
!10629 = !DILocation(line: 2361, column: 40, scope: !10599)
!10630 = !DILocation(line: 2361, column: 53, scope: !10599)
!10631 = !DILocation(line: 2361, column: 8, scope: !10599)
!10632 = !DILocation(line: 2361, column: 5, scope: !10599)
!10633 = !DILocation(line: 2362, column: 27, scope: !10599)
!10634 = !DILocation(line: 2362, column: 33, scope: !10599)
!10635 = !DILocation(line: 2362, column: 38, scope: !10599)
!10636 = !DILocation(line: 2362, column: 41, scope: !10599)
!10637 = !DILocation(line: 2362, column: 54, scope: !10599)
!10638 = !DILocation(line: 2362, column: 8, scope: !10599)
!10639 = !DILocation(line: 2362, column: 5, scope: !10599)
!10640 = !DILocation(line: 2363, column: 3, scope: !10599)
!10641 = !DILocation(line: 2366, column: 6, scope: !10599)
!10642 = !DILocation(line: 2367, column: 3, scope: !10599)
!10643 = !DILocation(line: 2370, column: 9, scope: !7004)
!10644 = !DILocation(line: 2371, column: 27, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2371, column: 6)
!10646 = !DILocation(line: 2371, column: 33, scope: !10645)
!10647 = !DILocation(line: 2371, column: 6, scope: !10645)
!10648 = !DILocation(line: 2371, column: 37, scope: !10645)
!10649 = !DILocation(line: 2371, column: 41, scope: !10645)
!10650 = !DILocation(line: 2371, column: 46, scope: !10645)
!10651 = !DILocation(line: 2371, column: 52, scope: !10645)
!10652 = !DILocation(line: 2371, column: 71, scope: !10645)
!10653 = !DILocation(line: 2372, column: 9, scope: !10645)
!10654 = !DILocation(line: 2372, column: 14, scope: !10645)
!10655 = !DILocation(line: 2372, column: 20, scope: !10645)
!10656 = !DILocation(line: 2372, column: 37, scope: !10645)
!10657 = !DILocation(line: 2372, column: 40, scope: !10645)
!10658 = !DILocation(line: 2372, column: 45, scope: !10645)
!10659 = !DILocation(line: 2371, column: 6, scope: !7004)
!10660 = !DILocation(line: 2373, column: 10, scope: !10645)
!10661 = !DILocation(line: 2373, column: 3, scope: !10645)
!10662 = !DILocation(line: 2375, column: 6, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2375, column: 6)
!10664 = !DILocation(line: 2375, column: 6, scope: !7004)
!10665 = !DILocation(line: 2376, column: 13, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 2375, column: 16)
!10667 = !DILocation(line: 2376, column: 17, scope: !10666)
!10668 = !DILocation(line: 2376, column: 15, scope: !10666)
!10669 = !DILocation(line: 2376, column: 22, scope: !10666)
!10670 = !DILocation(line: 2376, column: 3, scope: !10666)
!10671 = !DILocation(line: 2376, column: 11, scope: !10666)
!10672 = !DILocation(line: 2377, column: 14, scope: !10666)
!10673 = !DILocation(line: 2377, column: 3, scope: !10666)
!10674 = !DILocation(line: 2377, column: 11, scope: !10666)
!10675 = !DILocation(line: 2378, column: 7, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 2378, column: 7)
!10677 = !DILocation(line: 2378, column: 7, scope: !10666)
!10678 = !DILocation(line: 2379, column: 4, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 2378, column: 12)
!10680 = !DILocation(line: 2379, column: 12, scope: !10679)
!10681 = !DILocation(line: 2380, column: 11, scope: !10679)
!10682 = !DILocation(line: 2380, column: 16, scope: !10679)
!10683 = !DILocation(line: 2380, column: 4, scope: !10679)
!10684 = !DILocation(line: 2381, column: 3, scope: !10679)
!10685 = !DILocation(line: 2382, column: 2, scope: !10666)
!10686 = !DILocalVariable(name: "output_len", scope: !10687, file: !3, line: 2383, type: !7)
!10687 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 2382, column: 9)
!10688 = !DILocation(line: 2383, column: 16, scope: !10687)
!10689 = !DILocation(line: 2383, column: 29, scope: !10687)
!10690 = !DILocation(line: 2383, column: 33, scope: !10687)
!10691 = !DILocation(line: 2383, column: 31, scope: !10687)
!10692 = !DILocation(line: 2383, column: 38, scope: !10687)
!10693 = !DILocation(line: 2385, column: 13, scope: !10687)
!10694 = !DILocation(line: 2385, column: 24, scope: !10687)
!10695 = !DILocation(line: 2385, column: 3, scope: !10687)
!10696 = !DILocation(line: 2385, column: 11, scope: !10687)
!10697 = !DILocation(line: 2386, column: 13, scope: !10687)
!10698 = !DILocation(line: 2386, column: 3, scope: !10687)
!10699 = !DILocation(line: 2386, column: 11, scope: !10687)
!10700 = !DILocation(line: 2387, column: 14, scope: !10687)
!10701 = !DILocation(line: 2387, column: 3, scope: !10687)
!10702 = !DILocation(line: 2387, column: 11, scope: !10687)
!10703 = !DILocation(line: 2388, column: 7, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 2388, column: 7)
!10705 = !DILocation(line: 2388, column: 7, scope: !10687)
!10706 = !DILocation(line: 2389, column: 4, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 2388, column: 12)
!10708 = !DILocation(line: 2389, column: 12, scope: !10707)
!10709 = !DILocation(line: 2390, column: 11, scope: !10707)
!10710 = !DILocation(line: 2390, column: 16, scope: !10707)
!10711 = !DILocation(line: 2390, column: 4, scope: !10707)
!10712 = !DILocation(line: 2391, column: 3, scope: !10707)
!10713 = !DILocation(line: 2393, column: 2, scope: !7004)
!10714 = !DILabel(scope: !7004, name: "invalid_fld", file: !3, line: 2395)
!10715 = !DILocation(line: 2395, column: 1, scope: !7004)
!10716 = !DILocation(line: 2396, column: 29, scope: !7004)
!10717 = !DILocation(line: 2396, column: 34, scope: !7004)
!10718 = !DILocation(line: 2396, column: 40, scope: !7004)
!10719 = !DILocation(line: 2396, column: 45, scope: !7004)
!10720 = !DILocation(line: 2396, column: 49, scope: !7004)
!10721 = !DILocation(line: 2396, column: 2, scope: !7004)
!10722 = !DILocation(line: 2397, column: 2, scope: !7004)
!10723 = !DILabel(scope: !7004, name: "saving_not_supp", file: !3, line: 2399)
!10724 = !DILocation(line: 2399, column: 1, scope: !7004)
!10725 = !DILocation(line: 2400, column: 21, scope: !7004)
!10726 = !DILocation(line: 2400, column: 26, scope: !7004)
!10727 = !DILocation(line: 2400, column: 32, scope: !7004)
!10728 = !DILocation(line: 2400, column: 2, scope: !7004)
!10729 = !DILocation(line: 2402, column: 2, scope: !7004)
!10730 = !DILocation(line: 2403, column: 1, scope: !7004)
!10731 = distinct !DISubprogram(name: "ata_scsiop_read_cap", scope: !3, file: !3, line: 2415, type: !6983, scopeLine: 2416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10732 = !DILocalVariable(name: "args", arg: 1, scope: !10731, file: !3, line: 2415, type: !6985)
!10733 = !DILocation(line: 2415, column: 63, scope: !10731)
!10734 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10731, file: !3, line: 2415, type: !6537)
!10735 = !DILocation(line: 2415, column: 73, scope: !10731)
!10736 = !DILocalVariable(name: "dev", scope: !10731, file: !3, line: 2417, type: !6455)
!10737 = !DILocation(line: 2417, column: 21, scope: !10731)
!10738 = !DILocation(line: 2417, column: 27, scope: !10731)
!10739 = !DILocation(line: 2417, column: 33, scope: !10731)
!10740 = !DILocalVariable(name: "last_lba", scope: !10731, file: !3, line: 2418, type: !976)
!10741 = !DILocation(line: 2418, column: 6, scope: !10731)
!10742 = !DILocation(line: 2418, column: 17, scope: !10731)
!10743 = !DILocation(line: 2418, column: 22, scope: !10731)
!10744 = !DILocation(line: 2418, column: 32, scope: !10731)
!10745 = !DILocalVariable(name: "sector_size", scope: !10731, file: !3, line: 2419, type: !1049)
!10746 = !DILocation(line: 2419, column: 6, scope: !10731)
!10747 = !DILocalVariable(name: "log2_per_phys", scope: !10731, file: !3, line: 2420, type: !1203)
!10748 = !DILocation(line: 2420, column: 5, scope: !10731)
!10749 = !DILocalVariable(name: "lowest_aligned", scope: !10731, file: !3, line: 2421, type: !1726)
!10750 = !DILocation(line: 2421, column: 6, scope: !10731)
!10751 = !DILocation(line: 2423, column: 43, scope: !10731)
!10752 = !DILocation(line: 2423, column: 48, scope: !10731)
!10753 = !DILocation(line: 2423, column: 16, scope: !10731)
!10754 = !DILocation(line: 2423, column: 14, scope: !10731)
!10755 = !DILocation(line: 2424, column: 50, scope: !10731)
!10756 = !DILocation(line: 2424, column: 55, scope: !10731)
!10757 = !DILocation(line: 2424, column: 18, scope: !10731)
!10758 = !DILocation(line: 2424, column: 16, scope: !10731)
!10759 = !DILocation(line: 2425, column: 48, scope: !10731)
!10760 = !DILocation(line: 2425, column: 53, scope: !10731)
!10761 = !DILocation(line: 2425, column: 57, scope: !10731)
!10762 = !DILocation(line: 2425, column: 19, scope: !10731)
!10763 = !DILocation(line: 2425, column: 17, scope: !10731)
!10764 = !DILocation(line: 2429, column: 6, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 2429, column: 6)
!10766 = !DILocation(line: 2429, column: 12, scope: !10765)
!10767 = !DILocation(line: 2429, column: 17, scope: !10765)
!10768 = !DILocation(line: 2429, column: 25, scope: !10765)
!10769 = !DILocation(line: 2429, column: 6, scope: !10731)
!10770 = !DILocation(line: 2430, column: 7, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 2430, column: 7)
!10772 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 2429, column: 43)
!10773 = !DILocation(line: 2430, column: 16, scope: !10771)
!10774 = !DILocation(line: 2430, column: 7, scope: !10772)
!10775 = !DILocation(line: 2431, column: 13, scope: !10771)
!10776 = !DILocation(line: 2431, column: 4, scope: !10771)
!10777 = !DILocation(line: 2434, column: 13, scope: !10772)
!10778 = !DILocation(line: 2434, column: 22, scope: !10772)
!10779 = !DILocation(line: 2434, column: 3, scope: !10772)
!10780 = !DILocation(line: 2434, column: 11, scope: !10772)
!10781 = !DILocation(line: 2435, column: 13, scope: !10772)
!10782 = !DILocation(line: 2435, column: 22, scope: !10772)
!10783 = !DILocation(line: 2435, column: 3, scope: !10772)
!10784 = !DILocation(line: 2435, column: 11, scope: !10772)
!10785 = !DILocation(line: 2436, column: 13, scope: !10772)
!10786 = !DILocation(line: 2436, column: 22, scope: !10772)
!10787 = !DILocation(line: 2436, column: 3, scope: !10772)
!10788 = !DILocation(line: 2436, column: 11, scope: !10772)
!10789 = !DILocation(line: 2437, column: 13, scope: !10772)
!10790 = !DILocation(line: 2437, column: 3, scope: !10772)
!10791 = !DILocation(line: 2437, column: 11, scope: !10772)
!10792 = !DILocation(line: 2440, column: 13, scope: !10772)
!10793 = !DILocation(line: 2440, column: 25, scope: !10772)
!10794 = !DILocation(line: 2440, column: 3, scope: !10772)
!10795 = !DILocation(line: 2440, column: 11, scope: !10772)
!10796 = !DILocation(line: 2441, column: 13, scope: !10772)
!10797 = !DILocation(line: 2441, column: 25, scope: !10772)
!10798 = !DILocation(line: 2441, column: 3, scope: !10772)
!10799 = !DILocation(line: 2441, column: 11, scope: !10772)
!10800 = !DILocation(line: 2442, column: 13, scope: !10772)
!10801 = !DILocation(line: 2442, column: 25, scope: !10772)
!10802 = !DILocation(line: 2442, column: 3, scope: !10772)
!10803 = !DILocation(line: 2442, column: 11, scope: !10772)
!10804 = !DILocation(line: 2443, column: 13, scope: !10772)
!10805 = !DILocation(line: 2443, column: 3, scope: !10772)
!10806 = !DILocation(line: 2443, column: 11, scope: !10772)
!10807 = !DILocation(line: 2444, column: 2, scope: !10772)
!10808 = !DILocation(line: 2446, column: 13, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 2444, column: 9)
!10810 = !DILocation(line: 2446, column: 22, scope: !10809)
!10811 = !DILocation(line: 2446, column: 3, scope: !10809)
!10812 = !DILocation(line: 2446, column: 11, scope: !10809)
!10813 = !DILocation(line: 2447, column: 13, scope: !10809)
!10814 = !DILocation(line: 2447, column: 22, scope: !10809)
!10815 = !DILocation(line: 2447, column: 3, scope: !10809)
!10816 = !DILocation(line: 2447, column: 11, scope: !10809)
!10817 = !DILocation(line: 2448, column: 13, scope: !10809)
!10818 = !DILocation(line: 2448, column: 22, scope: !10809)
!10819 = !DILocation(line: 2448, column: 3, scope: !10809)
!10820 = !DILocation(line: 2448, column: 11, scope: !10809)
!10821 = !DILocation(line: 2449, column: 13, scope: !10809)
!10822 = !DILocation(line: 2449, column: 22, scope: !10809)
!10823 = !DILocation(line: 2449, column: 3, scope: !10809)
!10824 = !DILocation(line: 2449, column: 11, scope: !10809)
!10825 = !DILocation(line: 2450, column: 13, scope: !10809)
!10826 = !DILocation(line: 2450, column: 22, scope: !10809)
!10827 = !DILocation(line: 2450, column: 3, scope: !10809)
!10828 = !DILocation(line: 2450, column: 11, scope: !10809)
!10829 = !DILocation(line: 2451, column: 13, scope: !10809)
!10830 = !DILocation(line: 2451, column: 22, scope: !10809)
!10831 = !DILocation(line: 2451, column: 3, scope: !10809)
!10832 = !DILocation(line: 2451, column: 11, scope: !10809)
!10833 = !DILocation(line: 2452, column: 13, scope: !10809)
!10834 = !DILocation(line: 2452, column: 22, scope: !10809)
!10835 = !DILocation(line: 2452, column: 3, scope: !10809)
!10836 = !DILocation(line: 2452, column: 11, scope: !10809)
!10837 = !DILocation(line: 2453, column: 13, scope: !10809)
!10838 = !DILocation(line: 2453, column: 3, scope: !10809)
!10839 = !DILocation(line: 2453, column: 11, scope: !10809)
!10840 = !DILocation(line: 2456, column: 14, scope: !10809)
!10841 = !DILocation(line: 2456, column: 26, scope: !10809)
!10842 = !DILocation(line: 2456, column: 3, scope: !10809)
!10843 = !DILocation(line: 2456, column: 12, scope: !10809)
!10844 = !DILocation(line: 2457, column: 14, scope: !10809)
!10845 = !DILocation(line: 2457, column: 26, scope: !10809)
!10846 = !DILocation(line: 2457, column: 3, scope: !10809)
!10847 = !DILocation(line: 2457, column: 12, scope: !10809)
!10848 = !DILocation(line: 2458, column: 14, scope: !10809)
!10849 = !DILocation(line: 2458, column: 26, scope: !10809)
!10850 = !DILocation(line: 2458, column: 3, scope: !10809)
!10851 = !DILocation(line: 2458, column: 12, scope: !10809)
!10852 = !DILocation(line: 2459, column: 14, scope: !10809)
!10853 = !DILocation(line: 2459, column: 3, scope: !10809)
!10854 = !DILocation(line: 2459, column: 12, scope: !10809)
!10855 = !DILocation(line: 2461, column: 3, scope: !10809)
!10856 = !DILocation(line: 2461, column: 12, scope: !10809)
!10857 = !DILocation(line: 2462, column: 14, scope: !10809)
!10858 = !DILocation(line: 2462, column: 3, scope: !10809)
!10859 = !DILocation(line: 2462, column: 12, scope: !10809)
!10860 = !DILocation(line: 2463, column: 15, scope: !10809)
!10861 = !DILocation(line: 2463, column: 30, scope: !10809)
!10862 = !DILocation(line: 2463, column: 36, scope: !10809)
!10863 = !DILocation(line: 2463, column: 14, scope: !10809)
!10864 = !DILocation(line: 2463, column: 3, scope: !10809)
!10865 = !DILocation(line: 2463, column: 12, scope: !10809)
!10866 = !DILocation(line: 2464, column: 14, scope: !10809)
!10867 = !DILocation(line: 2464, column: 3, scope: !10809)
!10868 = !DILocation(line: 2464, column: 12, scope: !10809)
!10869 = !DILocation(line: 2466, column: 23, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 2466, column: 7)
!10871 = !DILocation(line: 2466, column: 29, scope: !10870)
!10872 = !DILocation(line: 2466, column: 7, scope: !10870)
!10873 = !DILocation(line: 2466, column: 33, scope: !10870)
!10874 = !DILocation(line: 2467, column: 9, scope: !10870)
!10875 = !DILocation(line: 2467, column: 14, scope: !10870)
!10876 = !DILocation(line: 2467, column: 22, scope: !10870)
!10877 = !DILocation(line: 2466, column: 7, scope: !10809)
!10878 = !DILocation(line: 2468, column: 4, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 2467, column: 45)
!10880 = !DILocation(line: 2468, column: 13, scope: !10879)
!10881 = !DILocation(line: 2470, column: 35, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10879, file: !3, line: 2470, column: 8)
!10883 = !DILocation(line: 2470, column: 41, scope: !10882)
!10884 = !DILocation(line: 2470, column: 8, scope: !10882)
!10885 = !DILocation(line: 2470, column: 45, scope: !10882)
!10886 = !DILocation(line: 2471, column: 8, scope: !10882)
!10887 = !DILocation(line: 2471, column: 13, scope: !10882)
!10888 = !DILocation(line: 2471, column: 21, scope: !10882)
!10889 = !DILocation(line: 2470, column: 8, scope: !10879)
!10890 = !DILocation(line: 2472, column: 5, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 2471, column: 52)
!10892 = !DILocation(line: 2473, column: 5, scope: !10891)
!10893 = !DILocation(line: 2473, column: 14, scope: !10891)
!10894 = !DILocation(line: 2474, column: 4, scope: !10891)
!10895 = !DILocation(line: 2475, column: 3, scope: !10879)
!10896 = !DILocation(line: 2476, column: 24, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 2476, column: 7)
!10898 = !DILocation(line: 2476, column: 30, scope: !10897)
!10899 = !DILocation(line: 2476, column: 7, scope: !10897)
!10900 = !DILocation(line: 2476, column: 34, scope: !10897)
!10901 = !DILocation(line: 2477, column: 7, scope: !10897)
!10902 = !DILocation(line: 2477, column: 13, scope: !10897)
!10903 = !DILocation(line: 2477, column: 18, scope: !10897)
!10904 = !DILocation(line: 2477, column: 24, scope: !10897)
!10905 = !DILocation(line: 2476, column: 7, scope: !10809)
!10906 = !DILocation(line: 2478, column: 4, scope: !10897)
!10907 = !DILocation(line: 2478, column: 13, scope: !10897)
!10908 = !DILocation(line: 2480, column: 2, scope: !10731)
!10909 = distinct !DISubprogram(name: "ata_scsiop_report_luns", scope: !3, file: !3, line: 2493, type: !6983, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10910 = !DILocalVariable(name: "args", arg: 1, scope: !10909, file: !3, line: 2493, type: !6985)
!10911 = !DILocation(line: 2493, column: 66, scope: !10909)
!10912 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10909, file: !3, line: 2493, type: !6537)
!10913 = !DILocation(line: 2493, column: 76, scope: !10909)
!10914 = !DILocation(line: 2496, column: 2, scope: !10909)
!10915 = !DILocation(line: 2496, column: 10, scope: !10909)
!10916 = !DILocation(line: 2498, column: 2, scope: !10909)
!10917 = distinct !DISubprogram(name: "ata_scsiop_maint_in", scope: !3, file: !3, line: 3274, type: !6983, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10918 = !DILocalVariable(name: "args", arg: 1, scope: !10917, file: !3, line: 3274, type: !6985)
!10919 = !DILocation(line: 3274, column: 63, scope: !10917)
!10920 = !DILocalVariable(name: "rbuf", arg: 2, scope: !10917, file: !3, line: 3274, type: !6537)
!10921 = !DILocation(line: 3274, column: 73, scope: !10917)
!10922 = !DILocalVariable(name: "dev", scope: !10917, file: !3, line: 3276, type: !6455)
!10923 = !DILocation(line: 3276, column: 21, scope: !10917)
!10924 = !DILocation(line: 3276, column: 27, scope: !10917)
!10925 = !DILocation(line: 3276, column: 33, scope: !10917)
!10926 = !DILocalVariable(name: "cdb", scope: !10917, file: !3, line: 3277, type: !6537)
!10927 = !DILocation(line: 3277, column: 6, scope: !10917)
!10928 = !DILocation(line: 3277, column: 12, scope: !10917)
!10929 = !DILocation(line: 3277, column: 18, scope: !10917)
!10930 = !DILocation(line: 3277, column: 23, scope: !10917)
!10931 = !DILocalVariable(name: "supported", scope: !10917, file: !3, line: 3278, type: !1203)
!10932 = !DILocation(line: 3278, column: 5, scope: !10917)
!10933 = !DILocalVariable(name: "err", scope: !10917, file: !3, line: 3279, type: !7)
!10934 = !DILocation(line: 3279, column: 15, scope: !10917)
!10935 = !DILocation(line: 3281, column: 6, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 3281, column: 6)
!10937 = !DILocation(line: 3281, column: 13, scope: !10936)
!10938 = !DILocation(line: 3281, column: 6, scope: !10917)
!10939 = !DILocation(line: 3282, column: 3, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3281, column: 19)
!10941 = !DILocation(line: 3283, column: 7, scope: !10940)
!10942 = !DILocation(line: 3284, column: 3, scope: !10940)
!10943 = !DILocation(line: 3286, column: 10, scope: !10917)
!10944 = !DILocation(line: 3286, column: 2, scope: !10917)
!10945 = !DILocation(line: 3314, column: 13, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 3286, column: 18)
!10947 = !DILocation(line: 3315, column: 3, scope: !10946)
!10948 = !DILocation(line: 3318, column: 24, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 3318, column: 7)
!10950 = !DILocation(line: 3318, column: 29, scope: !10949)
!10951 = !DILocation(line: 3318, column: 7, scope: !10949)
!10952 = !DILocation(line: 3318, column: 33, scope: !10949)
!10953 = !DILocation(line: 3319, column: 7, scope: !10949)
!10954 = !DILocation(line: 3319, column: 12, scope: !10949)
!10955 = !DILocation(line: 3319, column: 18, scope: !10949)
!10956 = !DILocation(line: 3318, column: 7, scope: !10946)
!10957 = !DILocation(line: 3320, column: 14, scope: !10949)
!10958 = !DILocation(line: 3320, column: 4, scope: !10949)
!10959 = !DILocation(line: 3321, column: 3, scope: !10946)
!10960 = !DILocation(line: 3324, column: 7, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 3324, column: 7)
!10962 = !DILocation(line: 3324, column: 12, scope: !10961)
!10963 = !DILocation(line: 3324, column: 18, scope: !10961)
!10964 = !DILocation(line: 3324, column: 7, scope: !10946)
!10965 = !DILocation(line: 3325, column: 14, scope: !10961)
!10966 = !DILocation(line: 3325, column: 4, scope: !10961)
!10967 = !DILocation(line: 3326, column: 3, scope: !10946)
!10968 = !DILocation(line: 3328, column: 3, scope: !10946)
!10969 = !DILocation(line: 3329, column: 2, scope: !10946)
!10970 = !DILabel(scope: !10917, name: "out", file: !3, line: 3330)
!10971 = !DILocation(line: 3330, column: 1, scope: !10917)
!10972 = !DILocation(line: 3331, column: 12, scope: !10917)
!10973 = !DILocation(line: 3331, column: 2, scope: !10917)
!10974 = !DILocation(line: 3331, column: 10, scope: !10917)
!10975 = !DILocation(line: 3332, column: 9, scope: !10917)
!10976 = !DILocation(line: 3332, column: 2, scope: !10917)
!10977 = distinct !DISubprogram(name: "ata_scsi_add_hosts", scope: !3, file: !3, line: 4239, type: !10978, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!10978 = !DISubroutineType(types: !10979)
!10979 = !{!211, !6756, !5974}
!10980 = !DILocalVariable(name: "host", arg: 1, scope: !10977, file: !3, line: 4239, type: !6756)
!10981 = !DILocation(line: 4239, column: 41, scope: !10977)
!10982 = !DILocalVariable(name: "sht", arg: 2, scope: !10977, file: !3, line: 4239, type: !5974)
!10983 = !DILocation(line: 4239, column: 74, scope: !10977)
!10984 = !DILocalVariable(name: "i", scope: !10977, file: !3, line: 4241, type: !211)
!10985 = !DILocation(line: 4241, column: 6, scope: !10977)
!10986 = !DILocalVariable(name: "rc", scope: !10977, file: !3, line: 4241, type: !211)
!10987 = !DILocation(line: 4241, column: 9, scope: !10977)
!10988 = !DILocation(line: 4243, column: 9, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 4243, column: 2)
!10990 = !DILocation(line: 4243, column: 7, scope: !10989)
!10991 = !DILocation(line: 4243, column: 14, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 4243, column: 2)
!10993 = !DILocation(line: 4243, column: 18, scope: !10992)
!10994 = !DILocation(line: 4243, column: 24, scope: !10992)
!10995 = !DILocation(line: 4243, column: 16, scope: !10992)
!10996 = !DILocation(line: 4243, column: 2, scope: !10989)
!10997 = !DILocalVariable(name: "ap", scope: !10998, file: !3, line: 4244, type: !988)
!10998 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 4243, column: 38)
!10999 = !DILocation(line: 4244, column: 20, scope: !10998)
!11000 = !DILocation(line: 4244, column: 25, scope: !10998)
!11001 = !DILocation(line: 4244, column: 31, scope: !10998)
!11002 = !DILocation(line: 4244, column: 37, scope: !10998)
!11003 = !DILocalVariable(name: "shost", scope: !10998, file: !3, line: 4245, type: !992)
!11004 = !DILocation(line: 4245, column: 21, scope: !10998)
!11005 = !DILocation(line: 4247, column: 6, scope: !10998)
!11006 = !DILocation(line: 4248, column: 27, scope: !10998)
!11007 = !DILocation(line: 4248, column: 11, scope: !10998)
!11008 = !DILocation(line: 4248, column: 9, scope: !10998)
!11009 = !DILocation(line: 4249, column: 8, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 4249, column: 7)
!11011 = !DILocation(line: 4249, column: 7, scope: !10998)
!11012 = !DILocation(line: 4250, column: 4, scope: !11010)
!11013 = !DILocation(line: 4252, column: 3, scope: !10998)
!11014 = !DILocation(line: 4252, column: 10, scope: !10998)
!11015 = !DILocation(line: 4252, column: 22, scope: !10998)
!11016 = !DILocation(line: 4253, column: 46, scope: !10998)
!11017 = !DILocation(line: 4253, column: 25, scope: !10998)
!11018 = !DILocation(line: 4253, column: 32, scope: !10998)
!11019 = !DILocation(line: 4253, column: 3, scope: !10998)
!11020 = !DILocation(line: 4253, column: 44, scope: !10998)
!11021 = !DILocation(line: 4254, column: 19, scope: !10998)
!11022 = !DILocation(line: 4254, column: 3, scope: !10998)
!11023 = !DILocation(line: 4254, column: 7, scope: !10998)
!11024 = !DILocation(line: 4254, column: 17, scope: !10998)
!11025 = !DILocation(line: 4256, column: 23, scope: !10998)
!11026 = !DILocation(line: 4256, column: 3, scope: !10998)
!11027 = !DILocation(line: 4256, column: 10, scope: !10998)
!11028 = !DILocation(line: 4256, column: 21, scope: !10998)
!11029 = !DILocation(line: 4257, column: 22, scope: !10998)
!11030 = !DILocation(line: 4257, column: 26, scope: !10998)
!11031 = !DILocation(line: 4257, column: 3, scope: !10998)
!11032 = !DILocation(line: 4257, column: 10, scope: !10998)
!11033 = !DILocation(line: 4257, column: 20, scope: !10998)
!11034 = !DILocation(line: 4258, column: 3, scope: !10998)
!11035 = !DILocation(line: 4258, column: 10, scope: !10998)
!11036 = !DILocation(line: 4258, column: 17, scope: !10998)
!11037 = !DILocation(line: 4259, column: 3, scope: !10998)
!11038 = !DILocation(line: 4259, column: 10, scope: !10998)
!11039 = !DILocation(line: 4259, column: 18, scope: !10998)
!11040 = !DILocation(line: 4260, column: 3, scope: !10998)
!11041 = !DILocation(line: 4260, column: 10, scope: !10998)
!11042 = !DILocation(line: 4260, column: 22, scope: !10998)
!11043 = !DILocation(line: 4261, column: 3, scope: !10998)
!11044 = !DILocation(line: 4261, column: 10, scope: !10998)
!11045 = !DILocation(line: 4261, column: 22, scope: !10998)
!11046 = !DILocation(line: 4268, column: 3, scope: !10998)
!11047 = !DILocation(line: 4268, column: 10, scope: !10998)
!11048 = !DILocation(line: 4268, column: 27, scope: !10998)
!11049 = !DILocation(line: 4270, column: 31, scope: !10998)
!11050 = !DILocation(line: 4270, column: 39, scope: !10998)
!11051 = !DILocation(line: 4270, column: 43, scope: !10998)
!11052 = !DILocation(line: 4270, column: 49, scope: !10998)
!11053 = !DILocation(line: 4270, column: 53, scope: !10998)
!11054 = !DILocation(line: 4270, column: 59, scope: !10998)
!11055 = !DILocation(line: 4270, column: 8, scope: !10998)
!11056 = !DILocation(line: 4270, column: 6, scope: !10998)
!11057 = !DILocation(line: 4271, column: 7, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 4271, column: 7)
!11059 = !DILocation(line: 4271, column: 7, scope: !10998)
!11060 = !DILocation(line: 4272, column: 4, scope: !11058)
!11061 = !DILocation(line: 4273, column: 2, scope: !10998)
!11062 = !DILocation(line: 4243, column: 34, scope: !10992)
!11063 = !DILocation(line: 4243, column: 2, scope: !10992)
!11064 = distinct !{!11064, !10996, !11065}
!11065 = !DILocation(line: 4273, column: 2, scope: !10989)
!11066 = !DILocation(line: 4275, column: 2, scope: !10977)
!11067 = !DILabel(scope: !10977, name: "err_alloc", file: !3, line: 4277)
!11068 = !DILocation(line: 4277, column: 2, scope: !10977)
!11069 = !DILocation(line: 4278, column: 2, scope: !10977)
!11070 = !DILocation(line: 4278, column: 9, scope: !10977)
!11071 = !DILocation(line: 4278, column: 13, scope: !10977)
!11072 = !DILocalVariable(name: "shost", scope: !11073, file: !3, line: 4279, type: !992)
!11073 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 4278, column: 19)
!11074 = !DILocation(line: 4279, column: 21, scope: !11073)
!11075 = !DILocation(line: 4279, column: 29, scope: !11073)
!11076 = !DILocation(line: 4279, column: 35, scope: !11073)
!11077 = !DILocation(line: 4279, column: 41, scope: !11073)
!11078 = !DILocation(line: 4279, column: 45, scope: !11073)
!11079 = !DILocation(line: 4282, column: 20, scope: !11073)
!11080 = !DILocation(line: 4282, column: 3, scope: !11073)
!11081 = distinct !{!11081, !11069, !11082}
!11082 = !DILocation(line: 4283, column: 2, scope: !10977)
!11083 = !DILocation(line: 4284, column: 9, scope: !10977)
!11084 = !DILocation(line: 4284, column: 2, scope: !10977)
!11085 = !DILocation(line: 4285, column: 1, scope: !10977)
!11086 = distinct !DISubprogram(name: "ata_scsi_scan_host", scope: !3, file: !3, line: 4315, type: !11087, scopeLine: 4316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11087 = !DISubroutineType(types: !11088)
!11088 = !{null, !988, !211}
!11089 = !DILocalVariable(name: "ap", arg: 1, scope: !11086, file: !3, line: 4315, type: !988)
!11090 = !DILocation(line: 4315, column: 42, scope: !11086)
!11091 = !DILocalVariable(name: "sync", arg: 2, scope: !11086, file: !3, line: 4315, type: !211)
!11092 = !DILocation(line: 4315, column: 50, scope: !11086)
!11093 = !DILocalVariable(name: "tries", scope: !11086, file: !3, line: 4317, type: !211)
!11094 = !DILocation(line: 4317, column: 6, scope: !11086)
!11095 = !DILocalVariable(name: "last_failed_dev", scope: !11086, file: !3, line: 4318, type: !6455)
!11096 = !DILocation(line: 4318, column: 21, scope: !11086)
!11097 = !DILocalVariable(name: "link", scope: !11086, file: !3, line: 4319, type: !6459)
!11098 = !DILocation(line: 4319, column: 19, scope: !11086)
!11099 = !DILocalVariable(name: "dev", scope: !11086, file: !3, line: 4320, type: !6455)
!11100 = !DILocation(line: 4320, column: 21, scope: !11086)
!11101 = !DILocation(line: 4320, column: 2, scope: !11086)
!11102 = !DILabel(scope: !11086, name: "repeat", file: !3, line: 4322)
!11103 = !DILocation(line: 4322, column: 2, scope: !11086)
!11104 = !DILocation(line: 4323, column: 2, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 4323, column: 2)
!11106 = !DILocation(line: 4323, column: 2, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4323, column: 2)
!11108 = !DILocation(line: 4324, column: 3, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 4324, column: 3)
!11110 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 4323, column: 36)
!11111 = !DILocation(line: 4324, column: 3, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 4324, column: 3)
!11113 = !DILocalVariable(name: "sdev", scope: !11114, file: !3, line: 4325, type: !5987)
!11114 = distinct !DILexicalBlock(scope: !11112, file: !3, line: 4324, column: 40)
!11115 = !DILocation(line: 4325, column: 24, scope: !11114)
!11116 = !DILocalVariable(name: "channel", scope: !11114, file: !3, line: 4326, type: !211)
!11117 = !DILocation(line: 4326, column: 8, scope: !11114)
!11118 = !DILocalVariable(name: "id", scope: !11114, file: !3, line: 4326, type: !211)
!11119 = !DILocation(line: 4326, column: 21, scope: !11114)
!11120 = !DILocation(line: 4328, column: 8, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 4328, column: 8)
!11122 = !DILocation(line: 4328, column: 13, scope: !11121)
!11123 = !DILocation(line: 4328, column: 8, scope: !11114)
!11124 = !DILocation(line: 4329, column: 5, scope: !11121)
!11125 = !DILocation(line: 4331, column: 25, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 4331, column: 8)
!11127 = !DILocation(line: 4331, column: 8, scope: !11126)
!11128 = !DILocation(line: 4331, column: 8, scope: !11114)
!11129 = !DILocation(line: 4332, column: 10, scope: !11126)
!11130 = !DILocation(line: 4332, column: 15, scope: !11126)
!11131 = !DILocation(line: 4332, column: 8, scope: !11126)
!11132 = !DILocation(line: 4332, column: 5, scope: !11126)
!11133 = !DILocation(line: 4334, column: 15, scope: !11126)
!11134 = !DILocation(line: 4334, column: 21, scope: !11126)
!11135 = !DILocation(line: 4334, column: 13, scope: !11126)
!11136 = !DILocation(line: 4336, column: 29, scope: !11114)
!11137 = !DILocation(line: 4336, column: 33, scope: !11114)
!11138 = !DILocation(line: 4336, column: 44, scope: !11114)
!11139 = !DILocation(line: 4336, column: 53, scope: !11114)
!11140 = !DILocation(line: 4336, column: 11, scope: !11114)
!11141 = !DILocation(line: 4336, column: 9, scope: !11114)
!11142 = !DILocation(line: 4338, column: 16, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 4338, column: 8)
!11144 = !DILocation(line: 4338, column: 9, scope: !11143)
!11145 = !DILocation(line: 4338, column: 8, scope: !11114)
!11146 = !DILocation(line: 4339, column: 17, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 4338, column: 23)
!11148 = !DILocation(line: 4339, column: 5, scope: !11147)
!11149 = !DILocation(line: 4339, column: 10, scope: !11147)
!11150 = !DILocation(line: 4339, column: 15, scope: !11147)
!11151 = !DILocation(line: 4340, column: 28, scope: !11147)
!11152 = !DILocation(line: 4340, column: 33, scope: !11147)
!11153 = !DILocation(line: 4340, column: 5, scope: !11147)
!11154 = !DILocation(line: 4341, column: 21, scope: !11147)
!11155 = !DILocation(line: 4341, column: 5, scope: !11147)
!11156 = !DILocation(line: 4342, column: 4, scope: !11147)
!11157 = !DILocation(line: 4343, column: 5, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 4342, column: 11)
!11159 = !DILocation(line: 4343, column: 10, scope: !11158)
!11160 = !DILocation(line: 4343, column: 15, scope: !11158)
!11161 = !DILocation(line: 4345, column: 3, scope: !11114)
!11162 = distinct !{!11162, !11108, !11163}
!11163 = !DILocation(line: 4345, column: 3, scope: !11109)
!11164 = !DILocation(line: 4346, column: 2, scope: !11110)
!11165 = distinct !{!11165, !11104, !11166}
!11166 = !DILocation(line: 4346, column: 2, scope: !11105)
!11167 = !DILocation(line: 4352, column: 2, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 4352, column: 2)
!11169 = !DILocation(line: 4352, column: 2, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 4352, column: 2)
!11171 = !DILocation(line: 4353, column: 3, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !3, line: 4353, column: 3)
!11173 = distinct !DILexicalBlock(scope: !11170, file: !3, line: 4352, column: 36)
!11174 = !DILocation(line: 4353, column: 3, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11172, file: !3, line: 4353, column: 3)
!11176 = !DILocation(line: 4354, column: 9, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !3, line: 4354, column: 8)
!11178 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 4353, column: 40)
!11179 = !DILocation(line: 4354, column: 14, scope: !11177)
!11180 = !DILocation(line: 4354, column: 8, scope: !11178)
!11181 = !DILocation(line: 4355, column: 5, scope: !11177)
!11182 = !DILocation(line: 4356, column: 3, scope: !11178)
!11183 = distinct !{!11183, !11171, !11184}
!11184 = !DILocation(line: 4356, column: 3, scope: !11172)
!11185 = !DILocation(line: 4357, column: 2, scope: !11173)
!11186 = distinct !{!11186, !11167, !11187}
!11187 = !DILocation(line: 4357, column: 2, scope: !11168)
!11188 = !DILabel(scope: !11086, name: "exit_loop", file: !3, line: 4358)
!11189 = !DILocation(line: 4358, column: 2, scope: !11086)
!11190 = !DILocation(line: 4359, column: 7, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 4359, column: 6)
!11192 = !DILocation(line: 4359, column: 6, scope: !11086)
!11193 = !DILocation(line: 4360, column: 3, scope: !11191)
!11194 = !DILocation(line: 4363, column: 6, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 4363, column: 6)
!11196 = !DILocation(line: 4363, column: 6, scope: !11086)
!11197 = !DILocation(line: 4367, column: 7, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 4367, column: 7)
!11199 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 4363, column: 12)
!11200 = !DILocation(line: 4367, column: 14, scope: !11198)
!11201 = !DILocation(line: 4367, column: 11, scope: !11198)
!11202 = !DILocation(line: 4367, column: 7, scope: !11199)
!11203 = !DILocation(line: 4368, column: 4, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 4367, column: 31)
!11205 = !DILocation(line: 4369, column: 22, scope: !11204)
!11206 = !DILocation(line: 4369, column: 20, scope: !11204)
!11207 = !DILocation(line: 4370, column: 4, scope: !11204)
!11208 = !DILocation(line: 4376, column: 7, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 4376, column: 7)
!11210 = !DILocation(line: 4376, column: 7, scope: !11199)
!11211 = !DILocation(line: 4377, column: 4, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 4376, column: 16)
!11213 = !DILocation(line: 4378, column: 4, scope: !11212)
!11214 = !DILocation(line: 4381, column: 3, scope: !11199)
!11215 = !DILocation(line: 4383, column: 2, scope: !11199)
!11216 = !DILocation(line: 4385, column: 21, scope: !11086)
!11217 = !DILocation(line: 4385, column: 38, scope: !11086)
!11218 = !DILocation(line: 4385, column: 42, scope: !11086)
!11219 = !DILocation(line: 4386, column: 7, scope: !11086)
!11220 = !DILocation(line: 4385, column: 2, scope: !11086)
!11221 = !DILocation(line: 4387, column: 1, scope: !11086)
!11222 = distinct !DISubprogram(name: "ata_is_host_link", scope: !183, file: !183, line: 1437, type: !11223, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11223 = !DISubroutineType(types: !11224)
!11224 = !{!1482, !11225}
!11225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11226, size: 64)
!11226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6460)
!11227 = !DILocalVariable(name: "link", arg: 1, scope: !11222, file: !183, line: 1437, type: !11225)
!11228 = !DILocation(line: 1437, column: 60, scope: !11222)
!11229 = !DILocation(line: 1439, column: 9, scope: !11222)
!11230 = !DILocation(line: 1439, column: 18, scope: !11222)
!11231 = !DILocation(line: 1439, column: 24, scope: !11222)
!11232 = !DILocation(line: 1439, column: 28, scope: !11222)
!11233 = !DILocation(line: 1439, column: 14, scope: !11222)
!11234 = !DILocation(line: 1439, column: 33, scope: !11222)
!11235 = !DILocation(line: 1439, column: 36, scope: !11222)
!11236 = !DILocation(line: 1439, column: 44, scope: !11222)
!11237 = !DILocation(line: 1439, column: 50, scope: !11222)
!11238 = !DILocation(line: 1439, column: 54, scope: !11222)
!11239 = !DILocation(line: 1439, column: 41, scope: !11222)
!11240 = !DILocation(line: 1439, column: 2, scope: !11222)
!11241 = distinct !DISubprogram(name: "IS_ERR", scope: !11242, file: !11242, line: 34, type: !11243, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11242 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!11243 = !DISubroutineType(types: !11244)
!11244 = !{!1482, !2823}
!11245 = !DILocalVariable(name: "ptr", arg: 1, scope: !11241, file: !11242, line: 34, type: !2823)
!11246 = !DILocation(line: 34, column: 60, scope: !11241)
!11247 = !DILocation(line: 36, column: 9, scope: !11241)
!11248 = !DILocation(line: 36, column: 2, scope: !11241)
!11249 = distinct !DISubprogram(name: "ata_scsi_assign_ofnode", scope: !3, file: !3, line: 4288, type: !11250, scopeLine: 4289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11250 = !DISubroutineType(types: !11251)
!11251 = !{null, !6455, !988}
!11252 = !DILocalVariable(name: "dev", arg: 1, scope: !11249, file: !3, line: 4288, type: !6455)
!11253 = !DILocation(line: 4288, column: 55, scope: !11249)
!11254 = !DILocalVariable(name: "ap", arg: 2, scope: !11249, file: !3, line: 4288, type: !988)
!11255 = !DILocation(line: 4288, column: 77, scope: !11249)
!11256 = !DILocalVariable(name: "sdev", scope: !11249, file: !3, line: 4290, type: !5987)
!11257 = !DILocation(line: 4290, column: 22, scope: !11249)
!11258 = !DILocation(line: 4290, column: 29, scope: !11249)
!11259 = !DILocation(line: 4290, column: 34, scope: !11249)
!11260 = !DILocalVariable(name: "d", scope: !11249, file: !3, line: 4291, type: !2988)
!11261 = !DILocation(line: 4291, column: 17, scope: !11249)
!11262 = !DILocation(line: 4291, column: 21, scope: !11249)
!11263 = !DILocation(line: 4291, column: 25, scope: !11249)
!11264 = !DILocation(line: 4291, column: 31, scope: !11249)
!11265 = !DILocalVariable(name: "np", scope: !11249, file: !3, line: 4292, type: !3282)
!11266 = !DILocation(line: 4292, column: 22, scope: !11249)
!11267 = !DILocation(line: 4292, column: 27, scope: !11249)
!11268 = !DILocation(line: 4292, column: 30, scope: !11249)
!11269 = !DILocalVariable(name: "child", scope: !11249, file: !3, line: 4293, type: !3282)
!11270 = !DILocation(line: 4293, column: 22, scope: !11249)
!11271 = !DILocation(line: 4295, column: 2, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 4295, column: 2)
!11273 = !DILocation(line: 4295, column: 2, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 4295, column: 2)
!11275 = !DILocalVariable(name: "ret", scope: !11276, file: !3, line: 4296, type: !211)
!11276 = distinct !DILexicalBlock(scope: !11274, file: !3, line: 4295, column: 46)
!11277 = !DILocation(line: 4296, column: 7, scope: !11276)
!11278 = !DILocalVariable(name: "val", scope: !11276, file: !3, line: 4297, type: !1049)
!11279 = !DILocation(line: 4297, column: 7, scope: !11276)
!11280 = !DILocation(line: 4299, column: 30, scope: !11276)
!11281 = !DILocation(line: 4299, column: 9, scope: !11276)
!11282 = !DILocation(line: 4299, column: 7, scope: !11276)
!11283 = !DILocation(line: 4300, column: 7, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 4300, column: 7)
!11285 = !DILocation(line: 4300, column: 7, scope: !11276)
!11286 = !DILocation(line: 4301, column: 4, scope: !11284)
!11287 = !DILocation(line: 4302, column: 7, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 4302, column: 7)
!11289 = !DILocation(line: 4302, column: 14, scope: !11288)
!11290 = !DILocation(line: 4302, column: 19, scope: !11288)
!11291 = !DILocation(line: 4302, column: 11, scope: !11288)
!11292 = !DILocation(line: 4302, column: 7, scope: !11276)
!11293 = !DILocation(line: 4304, column: 32, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 4302, column: 26)
!11295 = !DILocation(line: 4304, column: 4, scope: !11294)
!11296 = !DILocation(line: 4304, column: 10, scope: !11294)
!11297 = !DILocation(line: 4304, column: 22, scope: !11294)
!11298 = !DILocation(line: 4304, column: 30, scope: !11294)
!11299 = !DILocation(line: 4305, column: 4, scope: !11294)
!11300 = !DILocation(line: 4307, column: 2, scope: !11276)
!11301 = distinct !{!11301, !11271, !11302}
!11302 = !DILocation(line: 4307, column: 2, scope: !11272)
!11303 = !DILocation(line: 4308, column: 1, scope: !11249)
!11304 = distinct !DISubprogram(name: "queue_delayed_work", scope: !943, file: !943, line: 518, type: !11305, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11305 = !DISubroutineType(types: !11306)
!11306 = !{!1482, !3558, !11307, !986}
!11307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!11308 = !DILocalVariable(name: "wq", arg: 1, scope: !11304, file: !943, line: 518, type: !3558)
!11309 = !DILocation(line: 518, column: 64, scope: !11304)
!11310 = !DILocalVariable(name: "dwork", arg: 2, scope: !11304, file: !943, line: 519, type: !11307)
!11311 = !DILocation(line: 519, column: 32, scope: !11304)
!11312 = !DILocalVariable(name: "delay", arg: 3, scope: !11304, file: !943, line: 520, type: !986)
!11313 = !DILocation(line: 520, column: 25, scope: !11304)
!11314 = !DILocation(line: 522, column: 49, scope: !11304)
!11315 = !DILocation(line: 522, column: 53, scope: !11304)
!11316 = !DILocation(line: 522, column: 60, scope: !11304)
!11317 = !DILocation(line: 522, column: 9, scope: !11304)
!11318 = !DILocation(line: 522, column: 2, scope: !11304)
!11319 = distinct !DISubprogram(name: "ata_scsi_offline_dev", scope: !3, file: !3, line: 4404, type: !11320, scopeLine: 4405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11320 = !DISubroutineType(types: !11321)
!11321 = !{!211, !6455}
!11322 = !DILocalVariable(name: "dev", arg: 1, scope: !11319, file: !3, line: 4404, type: !6455)
!11323 = !DILocation(line: 4404, column: 45, scope: !11319)
!11324 = !DILocation(line: 4406, column: 6, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11319, file: !3, line: 4406, column: 6)
!11326 = !DILocation(line: 4406, column: 11, scope: !11325)
!11327 = !DILocation(line: 4406, column: 6, scope: !11319)
!11328 = !DILocation(line: 4407, column: 25, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 4406, column: 17)
!11330 = !DILocation(line: 4407, column: 30, scope: !11329)
!11331 = !DILocation(line: 4407, column: 3, scope: !11329)
!11332 = !DILocation(line: 4408, column: 3, scope: !11329)
!11333 = !DILocation(line: 4410, column: 2, scope: !11319)
!11334 = !DILocation(line: 4411, column: 1, scope: !11319)
!11335 = distinct !DISubprogram(name: "ata_scsi_media_change_notify", scope: !3, file: !3, line: 4504, type: !6699, scopeLine: 4505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11336 = !DILocalVariable(name: "dev", arg: 1, scope: !11335, file: !3, line: 4504, type: !6455)
!11337 = !DILocation(line: 4504, column: 54, scope: !11335)
!11338 = !DILocation(line: 4506, column: 6, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 4506, column: 6)
!11340 = !DILocation(line: 4506, column: 11, scope: !11339)
!11341 = !DILocation(line: 4506, column: 6, scope: !11335)
!11342 = !DILocation(line: 4507, column: 24, scope: !11339)
!11343 = !DILocation(line: 4507, column: 29, scope: !11339)
!11344 = !DILocation(line: 4507, column: 3, scope: !11339)
!11345 = !DILocation(line: 4509, column: 1, scope: !11335)
!11346 = distinct !DISubprogram(name: "ata_scsi_hotplug", scope: !3, file: !3, line: 4523, type: !2285, scopeLine: 4524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11347 = !DILocalVariable(name: "work", arg: 1, scope: !11346, file: !3, line: 4523, type: !2287)
!11348 = !DILocation(line: 4523, column: 43, scope: !11346)
!11349 = !DILocalVariable(name: "ap", scope: !11346, file: !3, line: 4525, type: !988)
!11350 = !DILocation(line: 4525, column: 19, scope: !11346)
!11351 = !DILocalVariable(name: "__mptr", scope: !11352, file: !3, line: 4526, type: !983)
!11352 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 4526, column: 3)
!11353 = !DILocation(line: 4526, column: 3, scope: !11352)
!11354 = !DILocation(line: 4526, column: 3, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 4526, column: 3)
!11356 = !DILocalVariable(name: "i", scope: !11346, file: !3, line: 4527, type: !211)
!11357 = !DILocation(line: 4527, column: 6, scope: !11346)
!11358 = !DILocation(line: 4529, column: 6, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 4529, column: 6)
!11360 = !DILocation(line: 4529, column: 10, scope: !11359)
!11361 = !DILocation(line: 4529, column: 17, scope: !11359)
!11362 = !DILocation(line: 4529, column: 6, scope: !11346)
!11363 = !DILocation(line: 4531, column: 3, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 4529, column: 40)
!11365 = !DILocation(line: 4535, column: 14, scope: !11346)
!11366 = !DILocation(line: 4535, column: 18, scope: !11346)
!11367 = !DILocation(line: 4535, column: 2, scope: !11346)
!11368 = !DILocation(line: 4541, column: 31, scope: !11346)
!11369 = !DILocation(line: 4541, column: 35, scope: !11346)
!11370 = !DILocation(line: 4541, column: 2, scope: !11346)
!11371 = !DILocation(line: 4542, column: 6, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 4542, column: 6)
!11373 = !DILocation(line: 4542, column: 10, scope: !11372)
!11374 = !DILocation(line: 4542, column: 6, scope: !11346)
!11375 = !DILocation(line: 4543, column: 10, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 4543, column: 3)
!11377 = !DILocation(line: 4543, column: 8, scope: !11376)
!11378 = !DILocation(line: 4543, column: 15, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 4543, column: 3)
!11380 = !DILocation(line: 4543, column: 17, scope: !11379)
!11381 = !DILocation(line: 4543, column: 3, scope: !11376)
!11382 = !DILocation(line: 4544, column: 33, scope: !11379)
!11383 = !DILocation(line: 4544, column: 37, scope: !11379)
!11384 = !DILocation(line: 4544, column: 46, scope: !11379)
!11385 = !DILocation(line: 4544, column: 4, scope: !11379)
!11386 = !DILocation(line: 4543, column: 40, scope: !11379)
!11387 = !DILocation(line: 4543, column: 3, scope: !11379)
!11388 = distinct !{!11388, !11381, !11389}
!11389 = !DILocation(line: 4544, column: 48, scope: !11376)
!11390 = !DILocation(line: 4547, column: 21, scope: !11346)
!11391 = !DILocation(line: 4547, column: 2, scope: !11346)
!11392 = !DILocation(line: 4549, column: 16, scope: !11346)
!11393 = !DILocation(line: 4549, column: 20, scope: !11346)
!11394 = !DILocation(line: 4549, column: 2, scope: !11346)
!11395 = !DILocation(line: 4551, column: 1, scope: !11346)
!11396 = distinct !DISubprogram(name: "ata_scsi_handle_link_detach", scope: !3, file: !3, line: 4472, type: !11397, scopeLine: 4473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11397 = !DISubroutineType(types: !11398)
!11398 = !{null, !6459}
!11399 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !11400)
!11400 = distinct !DILocation(line: 4485, column: 3, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 4477, column: 35)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 4477, column: 2)
!11403 = distinct !DILexicalBlock(scope: !11396, file: !3, line: 4477, column: 2)
!11404 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !11400)
!11405 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !11406)
!11406 = distinct !DILocation(line: 4483, column: 3, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 4483, column: 3)
!11408 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 4483, column: 3)
!11409 = distinct !DILexicalBlock(scope: !11410, file: !3, line: 4483, column: 3)
!11410 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 4483, column: 3)
!11411 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 4483, column: 3)
!11412 = !DILocalVariable(name: "link", arg: 1, scope: !11396, file: !3, line: 4472, type: !6459)
!11413 = !DILocation(line: 4472, column: 58, scope: !11396)
!11414 = !DILocalVariable(name: "ap", scope: !11396, file: !3, line: 4474, type: !988)
!11415 = !DILocation(line: 4474, column: 19, scope: !11396)
!11416 = !DILocation(line: 4474, column: 24, scope: !11396)
!11417 = !DILocation(line: 4474, column: 30, scope: !11396)
!11418 = !DILocalVariable(name: "dev", scope: !11396, file: !3, line: 4475, type: !6455)
!11419 = !DILocation(line: 4475, column: 21, scope: !11396)
!11420 = !DILocation(line: 4477, column: 2, scope: !11403)
!11421 = !DILocation(line: 4477, column: 2, scope: !11402)
!11422 = !DILocalVariable(name: "flags", scope: !11401, file: !3, line: 4478, type: !986)
!11423 = !DILocation(line: 4478, column: 17, scope: !11401)
!11424 = !DILocation(line: 4480, column: 9, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 4480, column: 7)
!11426 = !DILocation(line: 4480, column: 14, scope: !11425)
!11427 = !DILocation(line: 4480, column: 20, scope: !11425)
!11428 = !DILocation(line: 4480, column: 7, scope: !11401)
!11429 = !DILocation(line: 4481, column: 4, scope: !11425)
!11430 = !DILocation(line: 4483, column: 3, scope: !11401)
!11431 = !DILocation(line: 4483, column: 3, scope: !11411)
!11432 = !DILocalVariable(name: "__dummy", scope: !11433, file: !3, line: 4483, type: !986)
!11433 = distinct !DILexicalBlock(scope: !11410, file: !3, line: 4483, column: 3)
!11434 = !DILocation(line: 4483, column: 3, scope: !11433)
!11435 = !DILocalVariable(name: "__dummy2", scope: !11433, file: !3, line: 4483, type: !986)
!11436 = !DILocation(line: 4483, column: 3, scope: !11410)
!11437 = !DILocation(line: 4483, column: 3, scope: !11409)
!11438 = !DILocation(line: 4483, column: 3, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 4483, column: 3)
!11440 = !DILocalVariable(name: "__dummy", scope: !11441, file: !3, line: 4483, type: !986)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 4483, column: 3)
!11442 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 4483, column: 3)
!11443 = !DILocation(line: 4483, column: 3, scope: !11441)
!11444 = !DILocalVariable(name: "__dummy2", scope: !11441, file: !3, line: 4483, type: !986)
!11445 = !DILocation(line: 4483, column: 3, scope: !11442)
!11446 = !DILocation(line: 4483, column: 3, scope: !11408)
!11447 = !{i32 -2139682552}
!11448 = !DILocation(line: 4483, column: 3, scope: !11407)
!11449 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !11406)
!11450 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !11406)
!11451 = !DILocation(line: 4484, column: 3, scope: !11401)
!11452 = !DILocation(line: 4484, column: 8, scope: !11401)
!11453 = !DILocation(line: 4484, column: 14, scope: !11401)
!11454 = !DILocation(line: 4485, column: 26, scope: !11401)
!11455 = !DILocation(line: 4485, column: 30, scope: !11401)
!11456 = !DILocation(line: 4485, column: 36, scope: !11401)
!11457 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !11400)
!11458 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !11400)
!11459 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !11400)
!11460 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !11400)
!11461 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !11400)
!11462 = !DILocation(line: 4487, column: 25, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 4487, column: 7)
!11464 = !DILocation(line: 4487, column: 7, scope: !11463)
!11465 = !DILocation(line: 4487, column: 7, scope: !11401)
!11466 = !DILocation(line: 4488, column: 15, scope: !11463)
!11467 = !DILocation(line: 4488, column: 4, scope: !11463)
!11468 = !DILocation(line: 4490, column: 23, scope: !11401)
!11469 = !DILocation(line: 4490, column: 3, scope: !11401)
!11470 = !DILocation(line: 4491, column: 2, scope: !11401)
!11471 = distinct !{!11471, !11420, !11472}
!11472 = !DILocation(line: 4491, column: 2, scope: !11403)
!11473 = !DILocation(line: 4492, column: 1, scope: !11396)
!11474 = distinct !DISubprogram(name: "ata_scsi_user_scan", scope: !3, file: !3, line: 4569, type: !11475, scopeLine: 4571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11475 = !DISubroutineType(types: !11476)
!11476 = !{!211, !992, !7, !7, !976}
!11477 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !11478)
!11478 = distinct !DILocation(line: 4615, column: 3, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 4613, column: 15)
!11480 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 4613, column: 6)
!11481 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !11478)
!11482 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !11483)
!11483 = distinct !DILocation(line: 4618, column: 3, scope: !11480)
!11484 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !11483)
!11485 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !11486)
!11486 = distinct !DILocation(line: 4592, column: 2, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 4592, column: 2)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 4592, column: 2)
!11489 = distinct !DILexicalBlock(scope: !11490, file: !3, line: 4592, column: 2)
!11490 = distinct !DILexicalBlock(scope: !11491, file: !3, line: 4592, column: 2)
!11491 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 4592, column: 2)
!11492 = !DILocalVariable(name: "shost", arg: 1, scope: !11474, file: !3, line: 4569, type: !992)
!11493 = !DILocation(line: 4569, column: 42, scope: !11474)
!11494 = !DILocalVariable(name: "channel", arg: 2, scope: !11474, file: !3, line: 4569, type: !7)
!11495 = !DILocation(line: 4569, column: 62, scope: !11474)
!11496 = !DILocalVariable(name: "id", arg: 3, scope: !11474, file: !3, line: 4570, type: !7)
!11497 = !DILocation(line: 4570, column: 23, scope: !11474)
!11498 = !DILocalVariable(name: "lun", arg: 4, scope: !11474, file: !3, line: 4570, type: !976)
!11499 = !DILocation(line: 4570, column: 31, scope: !11474)
!11500 = !DILocalVariable(name: "ap", scope: !11474, file: !3, line: 4572, type: !988)
!11501 = !DILocation(line: 4572, column: 19, scope: !11474)
!11502 = !DILocation(line: 4572, column: 42, scope: !11474)
!11503 = !DILocation(line: 4572, column: 24, scope: !11474)
!11504 = !DILocalVariable(name: "flags", scope: !11474, file: !3, line: 4573, type: !986)
!11505 = !DILocation(line: 4573, column: 16, scope: !11474)
!11506 = !DILocalVariable(name: "devno", scope: !11474, file: !3, line: 4574, type: !211)
!11507 = !DILocation(line: 4574, column: 6, scope: !11474)
!11508 = !DILocalVariable(name: "rc", scope: !11474, file: !3, line: 4574, type: !211)
!11509 = !DILocation(line: 4574, column: 13, scope: !11474)
!11510 = !DILocation(line: 4576, column: 7, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 4576, column: 6)
!11512 = !DILocation(line: 4576, column: 11, scope: !11511)
!11513 = !DILocation(line: 4576, column: 16, scope: !11511)
!11514 = !DILocation(line: 4576, column: 6, scope: !11474)
!11515 = !DILocation(line: 4577, column: 3, scope: !11511)
!11516 = !DILocation(line: 4579, column: 6, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 4579, column: 6)
!11518 = !DILocation(line: 4579, column: 10, scope: !11517)
!11519 = !DILocation(line: 4579, column: 28, scope: !11517)
!11520 = !DILocation(line: 4579, column: 31, scope: !11517)
!11521 = !DILocation(line: 4579, column: 6, scope: !11474)
!11522 = !DILocation(line: 4580, column: 3, scope: !11517)
!11523 = !DILocation(line: 4582, column: 25, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 4582, column: 6)
!11525 = !DILocation(line: 4582, column: 7, scope: !11524)
!11526 = !DILocation(line: 4582, column: 6, scope: !11474)
!11527 = !DILocation(line: 4583, column: 7, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 4583, column: 7)
!11529 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4582, column: 30)
!11530 = !DILocation(line: 4583, column: 15, scope: !11528)
!11531 = !DILocation(line: 4583, column: 33, scope: !11528)
!11532 = !DILocation(line: 4583, column: 36, scope: !11528)
!11533 = !DILocation(line: 4583, column: 7, scope: !11529)
!11534 = !DILocation(line: 4584, column: 4, scope: !11528)
!11535 = !DILocation(line: 4585, column: 11, scope: !11529)
!11536 = !DILocation(line: 4585, column: 9, scope: !11529)
!11537 = !DILocation(line: 4586, column: 2, scope: !11529)
!11538 = !DILocation(line: 4587, column: 7, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 4587, column: 7)
!11540 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4586, column: 9)
!11541 = !DILocation(line: 4587, column: 10, scope: !11539)
!11542 = !DILocation(line: 4587, column: 28, scope: !11539)
!11543 = !DILocation(line: 4587, column: 31, scope: !11539)
!11544 = !DILocation(line: 4587, column: 7, scope: !11540)
!11545 = !DILocation(line: 4588, column: 4, scope: !11539)
!11546 = !DILocation(line: 4589, column: 11, scope: !11540)
!11547 = !DILocation(line: 4589, column: 9, scope: !11540)
!11548 = !DILocation(line: 4592, column: 2, scope: !11474)
!11549 = !DILocation(line: 4592, column: 2, scope: !11491)
!11550 = !DILocalVariable(name: "__dummy", scope: !11551, file: !3, line: 4592, type: !986)
!11551 = distinct !DILexicalBlock(scope: !11490, file: !3, line: 4592, column: 2)
!11552 = !DILocation(line: 4592, column: 2, scope: !11551)
!11553 = !DILocalVariable(name: "__dummy2", scope: !11551, file: !3, line: 4592, type: !986)
!11554 = !DILocation(line: 4592, column: 2, scope: !11490)
!11555 = !DILocation(line: 4592, column: 2, scope: !11489)
!11556 = !DILocation(line: 4592, column: 2, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 4592, column: 2)
!11558 = !DILocalVariable(name: "__dummy", scope: !11559, file: !3, line: 4592, type: !986)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !3, line: 4592, column: 2)
!11560 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 4592, column: 2)
!11561 = !DILocation(line: 4592, column: 2, scope: !11559)
!11562 = !DILocalVariable(name: "__dummy2", scope: !11559, file: !3, line: 4592, type: !986)
!11563 = !DILocation(line: 4592, column: 2, scope: !11560)
!11564 = !DILocation(line: 4592, column: 2, scope: !11488)
!11565 = !{i32 -2139679832}
!11566 = !DILocation(line: 4592, column: 2, scope: !11487)
!11567 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !11486)
!11568 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !11486)
!11569 = !DILocation(line: 4594, column: 6, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 4594, column: 6)
!11571 = !DILocation(line: 4594, column: 12, scope: !11570)
!11572 = !DILocation(line: 4594, column: 6, scope: !11474)
!11573 = !DILocalVariable(name: "link", scope: !11574, file: !3, line: 4595, type: !6459)
!11574 = distinct !DILexicalBlock(scope: !11570, file: !3, line: 4594, column: 31)
!11575 = !DILocation(line: 4595, column: 20, scope: !11574)
!11576 = !DILocation(line: 4597, column: 3, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11574, file: !3, line: 4597, column: 3)
!11578 = !DILocation(line: 4597, column: 3, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11577, file: !3, line: 4597, column: 3)
!11580 = !DILocalVariable(name: "ehi", scope: !11581, file: !3, line: 4598, type: !11582)
!11581 = distinct !DILexicalBlock(scope: !11579, file: !3, line: 4597, column: 37)
!11582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 64)
!11583 = !DILocation(line: 4598, column: 24, scope: !11581)
!11584 = !DILocation(line: 4598, column: 31, scope: !11581)
!11585 = !DILocation(line: 4598, column: 37, scope: !11581)
!11586 = !DILocation(line: 4599, column: 4, scope: !11581)
!11587 = !DILocation(line: 4599, column: 9, scope: !11581)
!11588 = !DILocation(line: 4599, column: 20, scope: !11581)
!11589 = !DILocation(line: 4600, column: 4, scope: !11581)
!11590 = !DILocation(line: 4600, column: 9, scope: !11581)
!11591 = !DILocation(line: 4600, column: 16, scope: !11581)
!11592 = !DILocation(line: 4601, column: 3, scope: !11581)
!11593 = distinct !{!11593, !11576, !11594}
!11594 = !DILocation(line: 4601, column: 3, scope: !11577)
!11595 = !DILocation(line: 4602, column: 2, scope: !11574)
!11596 = !DILocalVariable(name: "dev", scope: !11597, file: !3, line: 4603, type: !6455)
!11597 = distinct !DILexicalBlock(scope: !11570, file: !3, line: 4602, column: 9)
!11598 = !DILocation(line: 4603, column: 22, scope: !11597)
!11599 = !DILocation(line: 4603, column: 41, scope: !11597)
!11600 = !DILocation(line: 4603, column: 45, scope: !11597)
!11601 = !DILocation(line: 4603, column: 28, scope: !11597)
!11602 = !DILocation(line: 4605, column: 7, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 4605, column: 7)
!11604 = !DILocation(line: 4605, column: 7, scope: !11597)
!11605 = !DILocalVariable(name: "ehi", scope: !11606, file: !3, line: 4606, type: !11582)
!11606 = distinct !DILexicalBlock(scope: !11603, file: !3, line: 4605, column: 12)
!11607 = !DILocation(line: 4606, column: 24, scope: !11606)
!11608 = !DILocation(line: 4606, column: 31, scope: !11606)
!11609 = !DILocation(line: 4606, column: 36, scope: !11606)
!11610 = !DILocation(line: 4606, column: 42, scope: !11606)
!11611 = !DILocation(line: 4607, column: 28, scope: !11606)
!11612 = !DILocation(line: 4607, column: 33, scope: !11606)
!11613 = !DILocation(line: 4607, column: 25, scope: !11606)
!11614 = !DILocation(line: 4607, column: 4, scope: !11606)
!11615 = !DILocation(line: 4607, column: 9, scope: !11606)
!11616 = !DILocation(line: 4607, column: 20, scope: !11606)
!11617 = !DILocation(line: 4608, column: 4, scope: !11606)
!11618 = !DILocation(line: 4608, column: 9, scope: !11606)
!11619 = !DILocation(line: 4608, column: 16, scope: !11606)
!11620 = !DILocation(line: 4609, column: 3, scope: !11606)
!11621 = !DILocation(line: 4610, column: 7, scope: !11603)
!11622 = !DILocation(line: 4613, column: 6, scope: !11480)
!11623 = !DILocation(line: 4613, column: 9, scope: !11480)
!11624 = !DILocation(line: 4613, column: 6, scope: !11474)
!11625 = !DILocation(line: 4614, column: 24, scope: !11479)
!11626 = !DILocation(line: 4614, column: 3, scope: !11479)
!11627 = !DILocation(line: 4615, column: 26, scope: !11479)
!11628 = !DILocation(line: 4615, column: 30, scope: !11479)
!11629 = !DILocation(line: 4615, column: 36, scope: !11479)
!11630 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !11478)
!11631 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !11478)
!11632 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !11478)
!11633 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !11478)
!11634 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !11478)
!11635 = !DILocation(line: 4616, column: 20, scope: !11479)
!11636 = !DILocation(line: 4616, column: 3, scope: !11479)
!11637 = !DILocation(line: 4617, column: 2, scope: !11479)
!11638 = !DILocation(line: 4618, column: 26, scope: !11480)
!11639 = !DILocation(line: 4618, column: 30, scope: !11480)
!11640 = !DILocation(line: 4618, column: 36, scope: !11480)
!11641 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !11483)
!11642 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !11483)
!11643 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !11483)
!11644 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !11483)
!11645 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !11483)
!11646 = !DILocation(line: 4620, column: 9, scope: !11474)
!11647 = !DILocation(line: 4620, column: 2, scope: !11474)
!11648 = !DILocation(line: 4621, column: 1, scope: !11474)
!11649 = distinct !DISubprogram(name: "sata_pmp_attached", scope: !183, file: !183, line: 1432, type: !6806, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11650 = !DILocalVariable(name: "ap", arg: 1, scope: !11649, file: !183, line: 1432, type: !988)
!11651 = !DILocation(line: 1432, column: 55, scope: !11649)
!11652 = !DILocation(line: 1434, column: 9, scope: !11649)
!11653 = !DILocation(line: 1434, column: 13, scope: !11649)
!11654 = !DILocation(line: 1434, column: 26, scope: !11649)
!11655 = !DILocation(line: 1434, column: 2, scope: !11649)
!11656 = distinct !DISubprogram(name: "ata_find_dev", scope: !3, file: !3, line: 2745, type: !11657, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{!6455, !988, !211}
!11659 = !DILocalVariable(name: "ap", arg: 1, scope: !11656, file: !3, line: 2745, type: !988)
!11660 = !DILocation(line: 2745, column: 57, scope: !11656)
!11661 = !DILocalVariable(name: "devno", arg: 2, scope: !11656, file: !3, line: 2745, type: !211)
!11662 = !DILocation(line: 2745, column: 65, scope: !11656)
!11663 = !DILocation(line: 2747, column: 25, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 2747, column: 6)
!11665 = !DILocation(line: 2747, column: 7, scope: !11664)
!11666 = !DILocation(line: 2747, column: 6, scope: !11656)
!11667 = !DILocation(line: 2748, column: 7, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 2748, column: 7)
!11669 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 2747, column: 30)
!11670 = !DILocation(line: 0, scope: !11668)
!11671 = !DILocation(line: 2748, column: 7, scope: !11669)
!11672 = !DILocation(line: 2750, column: 12, scope: !11668)
!11673 = !DILocation(line: 2750, column: 16, scope: !11668)
!11674 = !DILocation(line: 2750, column: 21, scope: !11668)
!11675 = !DILocation(line: 2750, column: 28, scope: !11668)
!11676 = !DILocation(line: 2750, column: 4, scope: !11668)
!11677 = !DILocation(line: 2751, column: 2, scope: !11669)
!11678 = !DILocation(line: 2752, column: 7, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 2752, column: 7)
!11680 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 2751, column: 9)
!11681 = !DILocation(line: 0, scope: !11679)
!11682 = !DILocation(line: 2752, column: 7, scope: !11680)
!11683 = !DILocation(line: 2754, column: 12, scope: !11679)
!11684 = !DILocation(line: 2754, column: 16, scope: !11679)
!11685 = !DILocation(line: 2754, column: 25, scope: !11679)
!11686 = !DILocation(line: 2754, column: 32, scope: !11679)
!11687 = !DILocation(line: 2754, column: 4, scope: !11679)
!11688 = !DILocation(line: 2757, column: 2, scope: !11656)
!11689 = !DILocation(line: 2758, column: 1, scope: !11656)
!11690 = distinct !DISubprogram(name: "ata_scsi_dev_rescan", scope: !3, file: !3, line: 4633, type: !2285, scopeLine: 4634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11691 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !11692)
!11692 = distinct !DILocation(line: 4656, column: 4, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 4656, column: 4)
!11694 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 4656, column: 4)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 4656, column: 4)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 4656, column: 4)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 4656, column: 4)
!11698 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 4645, column: 40)
!11699 = distinct !DILexicalBlock(scope: !11700, file: !3, line: 4645, column: 3)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 4645, column: 3)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 4644, column: 36)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 4644, column: 2)
!11703 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 4644, column: 2)
!11704 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !11705)
!11705 = distinct !DILocation(line: 4653, column: 4, scope: !11698)
!11706 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !11705)
!11707 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !11708)
!11708 = distinct !DILocation(line: 4660, column: 2, scope: !11690)
!11709 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !11708)
!11710 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !11711)
!11711 = distinct !DILocation(line: 4642, column: 2, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !3, line: 4642, column: 2)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !3, line: 4642, column: 2)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 4642, column: 2)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 4642, column: 2)
!11716 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 4642, column: 2)
!11717 = !DILocalVariable(name: "work", arg: 1, scope: !11690, file: !3, line: 4633, type: !2287)
!11718 = !DILocation(line: 4633, column: 46, scope: !11690)
!11719 = !DILocalVariable(name: "ap", scope: !11690, file: !3, line: 4635, type: !988)
!11720 = !DILocation(line: 4635, column: 19, scope: !11690)
!11721 = !DILocalVariable(name: "__mptr", scope: !11722, file: !3, line: 4636, type: !983)
!11722 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 4636, column: 3)
!11723 = !DILocation(line: 4636, column: 3, scope: !11722)
!11724 = !DILocation(line: 4636, column: 3, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11722, file: !3, line: 4636, column: 3)
!11726 = !DILocalVariable(name: "link", scope: !11690, file: !3, line: 4637, type: !6459)
!11727 = !DILocation(line: 4637, column: 19, scope: !11690)
!11728 = !DILocalVariable(name: "dev", scope: !11690, file: !3, line: 4638, type: !6455)
!11729 = !DILocation(line: 4638, column: 21, scope: !11690)
!11730 = !DILocalVariable(name: "flags", scope: !11690, file: !3, line: 4639, type: !986)
!11731 = !DILocation(line: 4639, column: 16, scope: !11690)
!11732 = !DILocation(line: 4641, column: 14, scope: !11690)
!11733 = !DILocation(line: 4641, column: 18, scope: !11690)
!11734 = !DILocation(line: 4641, column: 2, scope: !11690)
!11735 = !DILocation(line: 4642, column: 2, scope: !11690)
!11736 = !DILocation(line: 4642, column: 2, scope: !11716)
!11737 = !DILocalVariable(name: "__dummy", scope: !11738, file: !3, line: 4642, type: !986)
!11738 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 4642, column: 2)
!11739 = !DILocation(line: 4642, column: 2, scope: !11738)
!11740 = !DILocalVariable(name: "__dummy2", scope: !11738, file: !3, line: 4642, type: !986)
!11741 = !DILocation(line: 4642, column: 2, scope: !11715)
!11742 = !DILocation(line: 4642, column: 2, scope: !11714)
!11743 = !DILocation(line: 4642, column: 2, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11714, file: !3, line: 4642, column: 2)
!11745 = !DILocalVariable(name: "__dummy", scope: !11746, file: !3, line: 4642, type: !986)
!11746 = distinct !DILexicalBlock(scope: !11747, file: !3, line: 4642, column: 2)
!11747 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 4642, column: 2)
!11748 = !DILocation(line: 4642, column: 2, scope: !11746)
!11749 = !DILocalVariable(name: "__dummy2", scope: !11746, file: !3, line: 4642, type: !986)
!11750 = !DILocation(line: 4642, column: 2, scope: !11747)
!11751 = !DILocation(line: 4642, column: 2, scope: !11713)
!11752 = !{i32 -2139677092}
!11753 = !DILocation(line: 4642, column: 2, scope: !11712)
!11754 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !11711)
!11755 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !11711)
!11756 = !DILocation(line: 4644, column: 2, scope: !11703)
!11757 = !DILocation(line: 4644, column: 2, scope: !11702)
!11758 = !DILocation(line: 4645, column: 3, scope: !11700)
!11759 = !DILocation(line: 4645, column: 3, scope: !11699)
!11760 = !DILocalVariable(name: "sdev", scope: !11698, file: !3, line: 4646, type: !5987)
!11761 = !DILocation(line: 4646, column: 24, scope: !11698)
!11762 = !DILocation(line: 4646, column: 31, scope: !11698)
!11763 = !DILocation(line: 4646, column: 36, scope: !11698)
!11764 = !DILocation(line: 4648, column: 9, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 4648, column: 8)
!11766 = !DILocation(line: 4648, column: 8, scope: !11698)
!11767 = !DILocation(line: 4649, column: 5, scope: !11765)
!11768 = !DILocation(line: 4650, column: 24, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 4650, column: 8)
!11770 = !DILocation(line: 4650, column: 8, scope: !11769)
!11771 = !DILocation(line: 4650, column: 8, scope: !11698)
!11772 = !DILocation(line: 4651, column: 5, scope: !11769)
!11773 = !DILocation(line: 4653, column: 27, scope: !11698)
!11774 = !DILocation(line: 4653, column: 31, scope: !11698)
!11775 = !DILocation(line: 4653, column: 37, scope: !11698)
!11776 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !11705)
!11777 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !11705)
!11778 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !11705)
!11779 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !11705)
!11780 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !11705)
!11781 = !DILocation(line: 4654, column: 25, scope: !11698)
!11782 = !DILocation(line: 4654, column: 31, scope: !11698)
!11783 = !DILocation(line: 4654, column: 4, scope: !11698)
!11784 = !DILocation(line: 4655, column: 20, scope: !11698)
!11785 = !DILocation(line: 4655, column: 4, scope: !11698)
!11786 = !DILocation(line: 4656, column: 4, scope: !11698)
!11787 = !DILocation(line: 4656, column: 4, scope: !11697)
!11788 = !DILocalVariable(name: "__dummy", scope: !11789, file: !3, line: 4656, type: !986)
!11789 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 4656, column: 4)
!11790 = !DILocation(line: 4656, column: 4, scope: !11789)
!11791 = !DILocalVariable(name: "__dummy2", scope: !11789, file: !3, line: 4656, type: !986)
!11792 = !DILocation(line: 4656, column: 4, scope: !11696)
!11793 = !DILocation(line: 4656, column: 4, scope: !11695)
!11794 = !DILocation(line: 4656, column: 4, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 4656, column: 4)
!11796 = !DILocalVariable(name: "__dummy", scope: !11797, file: !3, line: 4656, type: !986)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !3, line: 4656, column: 4)
!11798 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 4656, column: 4)
!11799 = !DILocation(line: 4656, column: 4, scope: !11797)
!11800 = !DILocalVariable(name: "__dummy2", scope: !11797, file: !3, line: 4656, type: !986)
!11801 = !DILocation(line: 4656, column: 4, scope: !11798)
!11802 = !DILocation(line: 4656, column: 4, scope: !11694)
!11803 = !{i32 -2139675666}
!11804 = !DILocation(line: 4656, column: 4, scope: !11693)
!11805 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !11692)
!11806 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !11692)
!11807 = !DILocation(line: 4657, column: 3, scope: !11698)
!11808 = distinct !{!11808, !11758, !11809}
!11809 = !DILocation(line: 4657, column: 3, scope: !11700)
!11810 = !DILocation(line: 4658, column: 2, scope: !11701)
!11811 = distinct !{!11811, !11756, !11812}
!11812 = !DILocation(line: 4658, column: 2, scope: !11703)
!11813 = !DILocation(line: 4660, column: 25, scope: !11690)
!11814 = !DILocation(line: 4660, column: 29, scope: !11690)
!11815 = !DILocation(line: 4660, column: 35, scope: !11690)
!11816 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !11708)
!11817 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !11708)
!11818 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !11708)
!11819 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !11708)
!11820 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !11708)
!11821 = !DILocation(line: 4661, column: 16, scope: !11690)
!11822 = !DILocation(line: 4661, column: 20, scope: !11690)
!11823 = !DILocation(line: 4661, column: 2, scope: !11690)
!11824 = !DILocation(line: 4662, column: 1, scope: !11690)
!11825 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7488, file: !7488, line: 656, type: !5582, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11826 = !DILocalVariable(name: "__edi", scope: !11827, file: !7488, line: 658, type: !986)
!11827 = distinct !DILexicalBlock(scope: !11825, file: !7488, line: 658, column: 2)
!11828 = !DILocation(line: 658, column: 2, scope: !11827)
!11829 = !DILocalVariable(name: "__esi", scope: !11827, file: !7488, line: 658, type: !986)
!11830 = !DILocalVariable(name: "__edx", scope: !11827, file: !7488, line: 658, type: !986)
!11831 = !DILocalVariable(name: "__ecx", scope: !11827, file: !7488, line: 658, type: !986)
!11832 = !DILocalVariable(name: "__eax", scope: !11827, file: !7488, line: 658, type: !986)
!11833 = !{i32 -2145746032, i32 -2145745300, i32 -2145745066, i32 -2145745015, i32 -2145744987, i32 -2145744962, i32 -2145745278, i32 -2145745265, i32 -2145744827, i32 -2145744708, i32 -2145745173, i32 -2145745146, i32 -2145745118, i32 -2145745088}
!11834 = !DILocation(line: 659, column: 1, scope: !11825)
!11835 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !7488, file: !7488, line: 661, type: !5582, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11836 = !DILocalVariable(name: "__edi", scope: !11837, file: !7488, line: 663, type: !986)
!11837 = distinct !DILexicalBlock(scope: !11835, file: !7488, line: 663, column: 2)
!11838 = !DILocation(line: 663, column: 2, scope: !11837)
!11839 = !DILocalVariable(name: "__esi", scope: !11837, file: !7488, line: 663, type: !986)
!11840 = !DILocalVariable(name: "__edx", scope: !11837, file: !7488, line: 663, type: !986)
!11841 = !DILocalVariable(name: "__ecx", scope: !11837, file: !7488, line: 663, type: !986)
!11842 = !DILocalVariable(name: "__eax", scope: !11837, file: !7488, line: 663, type: !986)
!11843 = !{i32 -2145743448, i32 -2145742718, i32 -2145742484, i32 -2145742433, i32 -2145742405, i32 -2145742380, i32 -2145742696, i32 -2145742683, i32 -2145742245, i32 -2145742126, i32 -2145742591, i32 -2145742564, i32 -2145742536, i32 -2145742506}
!11844 = !DILocation(line: 664, column: 1, scope: !11835)
!11845 = distinct !DISubprogram(name: "kstrtol", scope: !933, file: !933, line: 379, type: !11846, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11846 = !DISubroutineType(types: !11847)
!11847 = !{!211, !1437, !7, !11848}
!11848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!11849 = !DILocalVariable(name: "s", arg: 1, scope: !11845, file: !933, line: 379, type: !1437)
!11850 = !DILocation(line: 379, column: 52, scope: !11845)
!11851 = !DILocalVariable(name: "base", arg: 2, scope: !11845, file: !933, line: 379, type: !7)
!11852 = !DILocation(line: 379, column: 68, scope: !11845)
!11853 = !DILocalVariable(name: "res", arg: 3, scope: !11845, file: !933, line: 379, type: !11848)
!11854 = !DILocation(line: 379, column: 80, scope: !11845)
!11855 = !DILocation(line: 387, column: 19, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11845, file: !933, line: 385, column: 6)
!11857 = !DILocation(line: 387, column: 22, scope: !11856)
!11858 = !DILocation(line: 387, column: 41, scope: !11856)
!11859 = !DILocation(line: 387, column: 10, scope: !11856)
!11860 = !DILocation(line: 387, column: 3, scope: !11856)
!11861 = distinct !DISubprogram(name: "ata_deadline", scope: !183, file: !183, line: 1835, type: !11862, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11862 = !DISubroutineType(types: !11863)
!11863 = !{!986, !986, !986}
!11864 = !DILocalVariable(name: "m", arg: 1, scope: !11865, file: !11866, line: 363, type: !4092)
!11865 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !11866, file: !11866, line: 363, type: !11867, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11866 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!11867 = !DISubroutineType(types: !11868)
!11868 = !{!986, !4092}
!11869 = !DILocation(line: 363, column: 74, scope: !11865, inlinedAt: !11870)
!11870 = distinct !DILocation(line: 1838, column: 24, scope: !11861)
!11871 = !DILocalVariable(name: "from_jiffies", arg: 1, scope: !11861, file: !183, line: 1835, type: !986)
!11872 = !DILocation(line: 1835, column: 56, scope: !11861)
!11873 = !DILocalVariable(name: "timeout_msecs", arg: 2, scope: !11861, file: !183, line: 1836, type: !986)
!11874 = !DILocation(line: 1836, column: 21, scope: !11861)
!11875 = !DILocation(line: 1838, column: 9, scope: !11861)
!11876 = !DILocation(line: 1838, column: 41, scope: !11861)
!11877 = !DILocation(line: 365, column: 27, scope: !11878, inlinedAt: !11870)
!11878 = distinct !DILexicalBlock(scope: !11865, file: !11866, line: 365, column: 6)
!11879 = !DILocation(line: 365, column: 6, scope: !11878, inlinedAt: !11870)
!11880 = !DILocation(line: 365, column: 6, scope: !11865, inlinedAt: !11870)
!11881 = !DILocation(line: 366, column: 12, scope: !11882, inlinedAt: !11870)
!11882 = distinct !DILexicalBlock(scope: !11883, file: !11866, line: 366, column: 7)
!11883 = distinct !DILexicalBlock(scope: !11878, file: !11866, line: 365, column: 31)
!11884 = !DILocation(line: 366, column: 14, scope: !11882, inlinedAt: !11870)
!11885 = !DILocation(line: 366, column: 7, scope: !11883, inlinedAt: !11870)
!11886 = !DILocation(line: 367, column: 4, scope: !11882, inlinedAt: !11870)
!11887 = !DILocation(line: 368, column: 28, scope: !11883, inlinedAt: !11870)
!11888 = !DILocation(line: 368, column: 10, scope: !11883, inlinedAt: !11870)
!11889 = !DILocation(line: 368, column: 3, scope: !11883, inlinedAt: !11870)
!11890 = !DILocation(line: 370, column: 29, scope: !11891, inlinedAt: !11870)
!11891 = distinct !DILexicalBlock(scope: !11878, file: !11866, line: 369, column: 9)
!11892 = !DILocation(line: 370, column: 10, scope: !11891, inlinedAt: !11870)
!11893 = !DILocation(line: 370, column: 3, scope: !11891, inlinedAt: !11870)
!11894 = !DILocation(line: 372, column: 1, scope: !11865, inlinedAt: !11870)
!11895 = !DILocation(line: 1838, column: 22, scope: !11861)
!11896 = !DILocation(line: 1838, column: 2, scope: !11861)
!11897 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !11866, file: !11866, line: 308, type: !11867, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11898 = !DILocalVariable(name: "m", arg: 1, scope: !11897, file: !11866, line: 308, type: !4092)
!11899 = !DILocation(line: 308, column: 66, scope: !11897)
!11900 = !DILocation(line: 310, column: 10, scope: !11897)
!11901 = !DILocation(line: 310, column: 12, scope: !11897)
!11902 = !DILocation(line: 310, column: 34, scope: !11897)
!11903 = !DILocation(line: 310, column: 39, scope: !11897)
!11904 = !DILocation(line: 310, column: 2, scope: !11897)
!11905 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7488, file: !7488, line: 646, type: !7489, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11906 = !DILocalVariable(name: "__ret", scope: !11907, file: !7488, line: 648, type: !986)
!11907 = distinct !DILexicalBlock(scope: !11905, file: !7488, line: 648, column: 9)
!11908 = !DILocation(line: 648, column: 9, scope: !11907)
!11909 = !DILocalVariable(name: "__edi", scope: !11907, file: !7488, line: 648, type: !986)
!11910 = !DILocalVariable(name: "__esi", scope: !11907, file: !7488, line: 648, type: !986)
!11911 = !DILocalVariable(name: "__edx", scope: !11907, file: !7488, line: 648, type: !986)
!11912 = !DILocalVariable(name: "__ecx", scope: !11907, file: !7488, line: 648, type: !986)
!11913 = !DILocalVariable(name: "__eax", scope: !11907, file: !7488, line: 648, type: !986)
!11914 = !DILocation(line: 648, column: 9, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11916, file: !7488, line: 648, column: 9)
!11916 = distinct !DILexicalBlock(scope: !11907, file: !7488, line: 648, column: 9)
!11917 = !{i32 -2145753126, i32 -2145750811, i32 -2145750577, i32 -2145750526, i32 -2145750498, i32 -2145750473, i32 -2145750789, i32 -2145750776, i32 -2145750338, i32 -2145750219, i32 -2145750684, i32 -2145750657, i32 -2145750629, i32 -2145750599}
!11918 = !DILocalVariable(name: "__mask", scope: !11919, file: !7488, line: 648, type: !986)
!11919 = distinct !DILexicalBlock(scope: !11915, file: !7488, line: 648, column: 9)
!11920 = !DILocation(line: 648, column: 9, scope: !11919)
!11921 = !DILocation(line: 648, column: 9, scope: !11916)
!11922 = !DILocation(line: 648, column: 2, scope: !11905)
!11923 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7488, file: !7488, line: 651, type: !11924, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11924 = !DISubroutineType(types: !11925)
!11925 = !{null, !986}
!11926 = !DILocalVariable(name: "f", arg: 1, scope: !11923, file: !7488, line: 651, type: !986)
!11927 = !DILocation(line: 651, column: 65, scope: !11923)
!11928 = !DILocalVariable(name: "__edi", scope: !11929, file: !7488, line: 653, type: !986)
!11929 = distinct !DILexicalBlock(scope: !11923, file: !7488, line: 653, column: 2)
!11930 = !DILocation(line: 653, column: 2, scope: !11929)
!11931 = !DILocalVariable(name: "__esi", scope: !11929, file: !7488, line: 653, type: !986)
!11932 = !DILocalVariable(name: "__edx", scope: !11929, file: !7488, line: 653, type: !986)
!11933 = !DILocalVariable(name: "__ecx", scope: !11929, file: !7488, line: 653, type: !986)
!11934 = !DILocalVariable(name: "__eax", scope: !11929, file: !7488, line: 653, type: !986)
!11935 = !{i32 -2145748659, i32 -2145747909, i32 -2145747675, i32 -2145747624, i32 -2145747596, i32 -2145747571, i32 -2145747887, i32 -2145747874, i32 -2145747436, i32 -2145747317, i32 -2145747782, i32 -2145747755, i32 -2145747727, i32 -2145747697}
!11936 = !DILocation(line: 654, column: 1, scope: !11923)
!11937 = distinct !DISubprogram(name: "copy_overflow", scope: !7524, file: !7524, line: 132, type: !11938, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11938 = !DISubroutineType(types: !11939)
!11939 = !{null, !211, !986}
!11940 = !DILocalVariable(name: "size", arg: 1, scope: !11937, file: !7524, line: 132, type: !211)
!11941 = !DILocation(line: 132, column: 38, scope: !11937)
!11942 = !DILocalVariable(name: "count", arg: 2, scope: !11937, file: !7524, line: 132, type: !986)
!11943 = !DILocation(line: 132, column: 58, scope: !11937)
!11944 = !DILocalVariable(name: "__ret_warn_on", scope: !11945, file: !7524, line: 134, type: !211)
!11945 = distinct !DILexicalBlock(scope: !11937, file: !7524, line: 134, column: 2)
!11946 = !DILocation(line: 134, column: 2, scope: !11945)
!11947 = !DILocation(line: 134, column: 2, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11945, file: !7524, line: 134, column: 2)
!11949 = !DILocation(line: 134, column: 2, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11948, file: !7524, line: 134, column: 2)
!11951 = !DILocation(line: 134, column: 2, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11950, file: !7524, line: 134, column: 2)
!11953 = !DILocation(line: 134, column: 2, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11950, file: !7524, line: 134, column: 2)
!11955 = !DILocation(line: 134, column: 2, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11954, file: !7524, line: 134, column: 2)
!11957 = !DILocation(line: 134, column: 2, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11954, file: !7524, line: 134, column: 2)
!11959 = !{i32 -2145510088, i32 -2145510059, i32 -2145510013, i32 -2145509955, i32 -2145509901, i32 -2145509847, i32 -2145509792, i32 -2145509761}
!11960 = !DILocation(line: 134, column: 2, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11954, file: !7524, line: 134, column: 2)
!11962 = !{i32 -2145509341, i32 -2145509334, i32 -2145509282, i32 -2145509251, i32 -2145509221}
!11963 = !DILocation(line: 134, column: 2, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11954, file: !7524, line: 134, column: 2)
!11965 = !DILocation(line: 134, column: 2, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11950, file: !7524, line: 134, column: 2)
!11967 = !DILocation(line: 135, column: 1, scope: !11937)
!11968 = distinct !DISubprogram(name: "check_object_size", scope: !7524, file: !7524, line: 122, type: !11969, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11969 = !DISubroutineType(types: !11970)
!11970 = !{null, !2823, !986, !1482}
!11971 = !DILocalVariable(name: "ptr", arg: 1, scope: !11968, file: !7524, line: 122, type: !2823)
!11972 = !DILocation(line: 122, column: 50, scope: !11968)
!11973 = !DILocalVariable(name: "n", arg: 2, scope: !11968, file: !7524, line: 122, type: !986)
!11974 = !DILocation(line: 122, column: 69, scope: !11968)
!11975 = !DILocalVariable(name: "to_user", arg: 3, scope: !11968, file: !7524, line: 123, type: !1482)
!11976 = !DILocation(line: 123, column: 15, scope: !11968)
!11977 = !DILocation(line: 124, column: 3, scope: !11968)
!11978 = distinct !DISubprogram(name: "get_order", scope: !11979, file: !11979, line: 29, type: !11980, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11979 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11980 = !DISubroutineType(types: !11981)
!11981 = !{!211, !986}
!11982 = !DILocalVariable(name: "x", arg: 1, scope: !11983, file: !9256, line: 366, type: !978)
!11983 = distinct !DISubprogram(name: "fls64", scope: !9256, file: !9256, line: 366, type: !11984, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!11984 = !DISubroutineType(types: !11985)
!11985 = !{!211, !978}
!11986 = !DILocation(line: 366, column: 40, scope: !11983, inlinedAt: !11987)
!11987 = distinct !DILocation(line: 46, column: 9, scope: !11978)
!11988 = !DILocalVariable(name: "bitpos", scope: !11983, file: !9256, line: 368, type: !211)
!11989 = !DILocation(line: 368, column: 6, scope: !11983, inlinedAt: !11987)
!11990 = !DILocalVariable(name: "size", arg: 1, scope: !11978, file: !11979, line: 29, type: !986)
!11991 = !DILocation(line: 29, column: 63, scope: !11978)
!11992 = !DILocation(line: 31, column: 27, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11978, file: !11979, line: 31, column: 6)
!11994 = !DILocation(line: 31, column: 6, scope: !11993)
!11995 = !DILocation(line: 31, column: 6, scope: !11978)
!11996 = !DILocation(line: 32, column: 8, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11998, file: !11979, line: 32, column: 7)
!11998 = distinct !DILexicalBlock(scope: !11993, file: !11979, line: 31, column: 34)
!11999 = !DILocation(line: 32, column: 7, scope: !11998)
!12000 = !DILocation(line: 33, column: 4, scope: !11997)
!12001 = !DILocation(line: 35, column: 7, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11998, file: !11979, line: 35, column: 7)
!12003 = !DILocation(line: 35, column: 12, scope: !12002)
!12004 = !DILocation(line: 35, column: 7, scope: !11998)
!12005 = !DILocation(line: 36, column: 4, scope: !12002)
!12006 = !DILocation(line: 38, column: 10, scope: !11998)
!12007 = !DILocation(line: 38, column: 28, scope: !11998)
!12008 = !DILocation(line: 38, column: 41, scope: !11998)
!12009 = !DILocation(line: 38, column: 3, scope: !11998)
!12010 = !DILocation(line: 41, column: 6, scope: !11978)
!12011 = !DILocation(line: 42, column: 7, scope: !11978)
!12012 = !DILocation(line: 46, column: 15, scope: !11978)
!12013 = !DILocation(line: 374, column: 2, scope: !11983, inlinedAt: !11987)
!12014 = !DILocation(line: 376, column: 14, scope: !11983, inlinedAt: !11987)
!12015 = !{i32 996790}
!12016 = !DILocation(line: 377, column: 9, scope: !11983, inlinedAt: !11987)
!12017 = !DILocation(line: 377, column: 16, scope: !11983, inlinedAt: !11987)
!12018 = !DILocation(line: 46, column: 2, scope: !11978)
!12019 = !DILocation(line: 48, column: 1, scope: !11978)
!12020 = distinct !DISubprogram(name: "__ilog2_u64", scope: !12021, file: !12021, line: 30, type: !12022, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12021 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!12022 = !DISubroutineType(types: !12023)
!12023 = !{!211, !976}
!12024 = !DILocation(line: 366, column: 40, scope: !11983, inlinedAt: !12025)
!12025 = distinct !DILocation(line: 32, column: 9, scope: !12020)
!12026 = !DILocation(line: 368, column: 6, scope: !11983, inlinedAt: !12025)
!12027 = !DILocalVariable(name: "n", arg: 1, scope: !12020, file: !12021, line: 30, type: !976)
!12028 = !DILocation(line: 30, column: 21, scope: !12020)
!12029 = !DILocation(line: 32, column: 15, scope: !12020)
!12030 = !DILocation(line: 374, column: 2, scope: !11983, inlinedAt: !12025)
!12031 = !DILocation(line: 376, column: 14, scope: !11983, inlinedAt: !12025)
!12032 = !DILocation(line: 377, column: 9, scope: !11983, inlinedAt: !12025)
!12033 = !DILocation(line: 377, column: 16, scope: !11983, inlinedAt: !12025)
!12034 = !DILocation(line: 32, column: 18, scope: !12020)
!12035 = !DILocation(line: 32, column: 2, scope: !12020)
!12036 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !12037, file: !12037, line: 137, type: !12038, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12037 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!12038 = !DISubroutineType(types: !12039)
!12039 = !{!983, !3647, !2823, !1631, !984}
!12040 = !DILocalVariable(name: "s", arg: 1, scope: !12036, file: !12037, line: 137, type: !3647)
!12041 = !DILocation(line: 137, column: 54, scope: !12036)
!12042 = !DILocalVariable(name: "object", arg: 2, scope: !12036, file: !12037, line: 137, type: !2823)
!12043 = !DILocation(line: 137, column: 69, scope: !12036)
!12044 = !DILocalVariable(name: "size", arg: 3, scope: !12036, file: !12037, line: 138, type: !1631)
!12045 = !DILocation(line: 138, column: 12, scope: !12036)
!12046 = !DILocalVariable(name: "flags", arg: 4, scope: !12036, file: !12037, line: 138, type: !984)
!12047 = !DILocation(line: 138, column: 24, scope: !12036)
!12048 = !DILocation(line: 140, column: 17, scope: !12036)
!12049 = !DILocation(line: 140, column: 2, scope: !12036)
!12050 = distinct !DISubprogram(name: "blk_mq_rq_to_pdu", scope: !3778, file: !3778, line: 567, type: !12051, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12051 = !DISubroutineType(types: !12052)
!12052 = !{!983, !3768}
!12053 = !DILocalVariable(name: "rq", arg: 1, scope: !12050, file: !3778, line: 567, type: !3768)
!12054 = !DILocation(line: 567, column: 54, scope: !12050)
!12055 = !DILocation(line: 569, column: 9, scope: !12050)
!12056 = !DILocation(line: 569, column: 12, scope: !12050)
!12057 = !DILocation(line: 569, column: 2, scope: !12050)
!12058 = distinct !DISubprogram(name: "ata_id_major_version", scope: !449, file: !449, line: 835, type: !12059, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12059 = !DISubroutineType(types: !12060)
!12060 = !{!7, !9198}
!12061 = !DILocalVariable(name: "id", arg: 1, scope: !12058, file: !449, line: 835, type: !9198)
!12062 = !DILocation(line: 835, column: 60, scope: !12058)
!12063 = !DILocalVariable(name: "mver", scope: !12058, file: !449, line: 837, type: !7)
!12064 = !DILocation(line: 837, column: 15, scope: !12058)
!12065 = !DILocation(line: 839, column: 6, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12058, file: !449, line: 839, column: 6)
!12067 = !DILocation(line: 839, column: 27, scope: !12066)
!12068 = !DILocation(line: 839, column: 6, scope: !12058)
!12069 = !DILocation(line: 840, column: 3, scope: !12066)
!12070 = !DILocation(line: 842, column: 12, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12058, file: !449, line: 842, column: 2)
!12072 = !DILocation(line: 842, column: 7, scope: !12071)
!12073 = !DILocation(line: 842, column: 18, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12071, file: !449, line: 842, column: 2)
!12075 = !DILocation(line: 842, column: 23, scope: !12074)
!12076 = !DILocation(line: 842, column: 2, scope: !12071)
!12077 = !DILocation(line: 843, column: 7, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12074, file: !449, line: 843, column: 7)
!12079 = !DILocation(line: 843, column: 36, scope: !12078)
!12080 = !DILocation(line: 843, column: 33, scope: !12078)
!12081 = !DILocation(line: 843, column: 28, scope: !12078)
!12082 = !DILocation(line: 843, column: 7, scope: !12074)
!12083 = !DILocation(line: 844, column: 4, scope: !12078)
!12084 = !DILocation(line: 843, column: 40, scope: !12078)
!12085 = !DILocation(line: 842, column: 33, scope: !12074)
!12086 = !DILocation(line: 842, column: 2, scope: !12074)
!12087 = distinct !{!12087, !12076, !12088}
!12088 = !DILocation(line: 844, column: 4, scope: !12071)
!12089 = !DILocation(line: 845, column: 9, scope: !12058)
!12090 = !DILocation(line: 845, column: 2, scope: !12058)
!12091 = !DILocation(line: 846, column: 1, scope: !12058)
!12092 = distinct !DISubprogram(name: "kasan_check_write", scope: !12093, file: !12093, line: 38, type: !12094, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12093 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12094 = !DISubroutineType(types: !12095)
!12095 = !{!1482, !9266, !7}
!12096 = !DILocalVariable(name: "p", arg: 1, scope: !12092, file: !12093, line: 38, type: !9266)
!12097 = !DILocation(line: 38, column: 59, scope: !12092)
!12098 = !DILocalVariable(name: "size", arg: 2, scope: !12092, file: !12093, line: 38, type: !7)
!12099 = !DILocation(line: 38, column: 75, scope: !12092)
!12100 = !DILocation(line: 40, column: 2, scope: !12092)
!12101 = distinct !DISubprogram(name: "kcsan_check_access", scope: !12102, file: !12102, line: 178, type: !12103, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12102 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12103 = !DISubroutineType(types: !12104)
!12104 = !{null, !9266, !1631, !211}
!12105 = !DILocalVariable(name: "ptr", arg: 1, scope: !12101, file: !12102, line: 178, type: !9266)
!12106 = !DILocation(line: 178, column: 60, scope: !12101)
!12107 = !DILocalVariable(name: "size", arg: 2, scope: !12101, file: !12102, line: 178, type: !1631)
!12108 = !DILocation(line: 178, column: 72, scope: !12101)
!12109 = !DILocalVariable(name: "type", arg: 3, scope: !12101, file: !12102, line: 179, type: !211)
!12110 = !DILocation(line: 179, column: 15, scope: !12101)
!12111 = !DILocation(line: 179, column: 23, scope: !12101)
!12112 = distinct !DISubprogram(name: "ata_class_enabled", scope: !183, file: !183, line: 1576, type: !12113, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12113 = !DISubroutineType(types: !12114)
!12114 = !{!7, !7}
!12115 = !DILocalVariable(name: "class", arg: 1, scope: !12112, file: !183, line: 1576, type: !7)
!12116 = !DILocation(line: 1576, column: 59, scope: !12112)
!12117 = !DILocation(line: 1578, column: 9, scope: !12112)
!12118 = !DILocation(line: 1578, column: 15, scope: !12112)
!12119 = !DILocation(line: 1578, column: 30, scope: !12112)
!12120 = !DILocation(line: 1578, column: 33, scope: !12112)
!12121 = !DILocation(line: 1578, column: 39, scope: !12112)
!12122 = !DILocation(line: 1578, column: 56, scope: !12112)
!12123 = !DILocation(line: 1579, column: 3, scope: !12112)
!12124 = !DILocation(line: 1579, column: 9, scope: !12112)
!12125 = !DILocation(line: 1579, column: 24, scope: !12112)
!12126 = !DILocation(line: 1579, column: 27, scope: !12112)
!12127 = !DILocation(line: 1579, column: 33, scope: !12112)
!12128 = !DILocation(line: 1579, column: 49, scope: !12112)
!12129 = !DILocation(line: 1580, column: 3, scope: !12112)
!12130 = !DILocation(line: 1580, column: 9, scope: !12112)
!12131 = !DILocation(line: 1578, column: 2, scope: !12112)
!12132 = distinct !DISubprogram(name: "ata_scsi_rw_xlat", scope: !3, file: !3, line: 1532, type: !6667, scopeLine: 1533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12133 = !DILocalVariable(name: "qc", arg: 1, scope: !12132, file: !3, line: 1532, type: !6450)
!12134 = !DILocation(line: 1532, column: 61, scope: !12132)
!12135 = !DILocalVariable(name: "scmd", scope: !12132, file: !3, line: 1534, type: !6139)
!12136 = !DILocation(line: 1534, column: 20, scope: !12132)
!12137 = !DILocation(line: 1534, column: 27, scope: !12132)
!12138 = !DILocation(line: 1534, column: 31, scope: !12132)
!12139 = !DILocalVariable(name: "cdb", scope: !12132, file: !3, line: 1535, type: !9839)
!12140 = !DILocation(line: 1535, column: 12, scope: !12132)
!12141 = !DILocation(line: 1535, column: 18, scope: !12132)
!12142 = !DILocation(line: 1535, column: 24, scope: !12132)
!12143 = !DILocalVariable(name: "rq", scope: !12132, file: !3, line: 1536, type: !3768)
!12144 = !DILocation(line: 1536, column: 18, scope: !12132)
!12145 = !DILocation(line: 1536, column: 23, scope: !12132)
!12146 = !DILocation(line: 1536, column: 29, scope: !12132)
!12147 = !DILocalVariable(name: "class", scope: !12132, file: !3, line: 1537, type: !211)
!12148 = !DILocation(line: 1537, column: 6, scope: !12132)
!12149 = !DILocation(line: 1537, column: 14, scope: !12132)
!12150 = !DILocalVariable(name: "tf_flags", scope: !12132, file: !3, line: 1538, type: !7)
!12151 = !DILocation(line: 1538, column: 15, scope: !12132)
!12152 = !DILocalVariable(name: "block", scope: !12132, file: !3, line: 1539, type: !976)
!12153 = !DILocation(line: 1539, column: 6, scope: !12132)
!12154 = !DILocalVariable(name: "n_block", scope: !12132, file: !3, line: 1540, type: !1049)
!12155 = !DILocation(line: 1540, column: 6, scope: !12132)
!12156 = !DILocalVariable(name: "rc", scope: !12132, file: !3, line: 1541, type: !211)
!12157 = !DILocation(line: 1541, column: 6, scope: !12132)
!12158 = !DILocalVariable(name: "fp", scope: !12132, file: !3, line: 1542, type: !1726)
!12159 = !DILocation(line: 1542, column: 6, scope: !12132)
!12160 = !DILocation(line: 1544, column: 6, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12132, file: !3, line: 1544, column: 6)
!12162 = !DILocation(line: 1544, column: 13, scope: !12161)
!12163 = !DILocation(line: 1544, column: 25, scope: !12161)
!12164 = !DILocation(line: 1544, column: 28, scope: !12161)
!12165 = !DILocation(line: 1544, column: 35, scope: !12161)
!12166 = !DILocation(line: 1544, column: 46, scope: !12161)
!12167 = !DILocation(line: 1544, column: 49, scope: !12161)
!12168 = !DILocation(line: 1544, column: 56, scope: !12161)
!12169 = !DILocation(line: 1544, column: 6, scope: !12132)
!12170 = !DILocation(line: 1545, column: 12, scope: !12161)
!12171 = !DILocation(line: 1545, column: 3, scope: !12161)
!12172 = !DILocation(line: 1548, column: 10, scope: !12132)
!12173 = !DILocation(line: 1548, column: 2, scope: !12132)
!12174 = !DILocation(line: 1551, column: 7, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1551, column: 7)
!12176 = distinct !DILexicalBlock(scope: !12132, file: !3, line: 1548, column: 18)
!12177 = !DILocation(line: 1551, column: 7, scope: !12176)
!12178 = !DILocation(line: 1552, column: 7, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12175, file: !3, line: 1551, column: 37)
!12180 = !DILocation(line: 1553, column: 4, scope: !12179)
!12181 = !DILocation(line: 1555, column: 19, scope: !12176)
!12182 = !DILocation(line: 1555, column: 3, scope: !12176)
!12183 = !DILocation(line: 1556, column: 7, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1556, column: 7)
!12185 = !DILocation(line: 1556, column: 14, scope: !12184)
!12186 = !DILocation(line: 1556, column: 7, scope: !12176)
!12187 = !DILocation(line: 1557, column: 13, scope: !12184)
!12188 = !DILocation(line: 1557, column: 4, scope: !12184)
!12189 = !DILocation(line: 1558, column: 26, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1558, column: 7)
!12191 = !DILocation(line: 1558, column: 32, scope: !12190)
!12192 = !DILocation(line: 1558, column: 8, scope: !12190)
!12193 = !DILocation(line: 1558, column: 7, scope: !12176)
!12194 = !DILocation(line: 1559, column: 4, scope: !12190)
!12195 = !DILocation(line: 1560, column: 3, scope: !12176)
!12196 = !DILocation(line: 1563, column: 7, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1563, column: 7)
!12198 = !DILocation(line: 1563, column: 7, scope: !12176)
!12199 = !DILocation(line: 1564, column: 7, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12197, file: !3, line: 1563, column: 36)
!12201 = !DILocation(line: 1565, column: 4, scope: !12200)
!12202 = !DILocation(line: 1567, column: 18, scope: !12176)
!12203 = !DILocation(line: 1567, column: 3, scope: !12176)
!12204 = !DILocation(line: 1572, column: 8, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1572, column: 7)
!12206 = !DILocation(line: 1572, column: 7, scope: !12176)
!12207 = !DILocation(line: 1573, column: 12, scope: !12205)
!12208 = !DILocation(line: 1573, column: 4, scope: !12205)
!12209 = !DILocation(line: 1574, column: 26, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1574, column: 7)
!12211 = !DILocation(line: 1574, column: 32, scope: !12210)
!12212 = !DILocation(line: 1574, column: 8, scope: !12210)
!12213 = !DILocation(line: 1574, column: 7, scope: !12176)
!12214 = !DILocation(line: 1575, column: 4, scope: !12210)
!12215 = !DILocation(line: 1576, column: 3, scope: !12176)
!12216 = !DILocation(line: 1579, column: 7, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1579, column: 7)
!12218 = !DILocation(line: 1579, column: 7, scope: !12176)
!12219 = !DILocation(line: 1580, column: 7, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12217, file: !3, line: 1579, column: 37)
!12221 = !DILocation(line: 1581, column: 4, scope: !12220)
!12222 = !DILocation(line: 1583, column: 19, scope: !12176)
!12223 = !DILocation(line: 1583, column: 3, scope: !12176)
!12224 = !DILocation(line: 1584, column: 7, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1584, column: 7)
!12226 = !DILocation(line: 1584, column: 14, scope: !12225)
!12227 = !DILocation(line: 1584, column: 7, scope: !12176)
!12228 = !DILocation(line: 1585, column: 13, scope: !12225)
!12229 = !DILocation(line: 1585, column: 4, scope: !12225)
!12230 = !DILocation(line: 1586, column: 26, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1586, column: 7)
!12232 = !DILocation(line: 1586, column: 32, scope: !12231)
!12233 = !DILocation(line: 1586, column: 8, scope: !12231)
!12234 = !DILocation(line: 1586, column: 7, scope: !12176)
!12235 = !DILocation(line: 1587, column: 4, scope: !12231)
!12236 = !DILocation(line: 1588, column: 3, scope: !12176)
!12237 = !DILocation(line: 1591, column: 6, scope: !12176)
!12238 = !DILocation(line: 1592, column: 3, scope: !12176)
!12239 = !DILocation(line: 1596, column: 7, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12132, file: !3, line: 1596, column: 6)
!12241 = !DILocation(line: 1596, column: 6, scope: !12132)
!12242 = !DILocation(line: 1604, column: 3, scope: !12240)
!12243 = !DILocation(line: 1606, column: 2, scope: !12132)
!12244 = !DILocation(line: 1606, column: 6, scope: !12132)
!12245 = !DILocation(line: 1606, column: 12, scope: !12132)
!12246 = !DILocation(line: 1607, column: 15, scope: !12132)
!12247 = !DILocation(line: 1607, column: 25, scope: !12132)
!12248 = !DILocation(line: 1607, column: 31, scope: !12132)
!12249 = !DILocation(line: 1607, column: 39, scope: !12132)
!12250 = !DILocation(line: 1607, column: 23, scope: !12132)
!12251 = !DILocation(line: 1607, column: 2, scope: !12132)
!12252 = !DILocation(line: 1607, column: 6, scope: !12132)
!12253 = !DILocation(line: 1607, column: 13, scope: !12132)
!12254 = !DILocation(line: 1609, column: 24, scope: !12132)
!12255 = !DILocation(line: 1609, column: 28, scope: !12132)
!12256 = !DILocation(line: 1609, column: 32, scope: !12132)
!12257 = !DILocation(line: 1609, column: 36, scope: !12132)
!12258 = !DILocation(line: 1609, column: 41, scope: !12132)
!12259 = !DILocation(line: 1609, column: 48, scope: !12132)
!12260 = !DILocation(line: 1609, column: 57, scope: !12132)
!12261 = !DILocation(line: 1610, column: 9, scope: !12132)
!12262 = !DILocation(line: 1610, column: 13, scope: !12132)
!12263 = !DILocation(line: 1610, column: 21, scope: !12132)
!12264 = !DILocation(line: 1609, column: 7, scope: !12132)
!12265 = !DILocation(line: 1609, column: 5, scope: !12132)
!12266 = !DILocation(line: 1612, column: 6, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12132, file: !3, line: 1612, column: 6)
!12268 = !DILocation(line: 1612, column: 6, scope: !12132)
!12269 = !DILocation(line: 1613, column: 3, scope: !12267)
!12270 = !DILocation(line: 1615, column: 6, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12132, file: !3, line: 1615, column: 6)
!12272 = !DILocation(line: 1615, column: 9, scope: !12271)
!12273 = !DILocation(line: 1615, column: 6, scope: !12132)
!12274 = !DILocation(line: 1616, column: 3, scope: !12271)
!12275 = !DILocation(line: 1615, column: 13, scope: !12271)
!12276 = !DILabel(scope: !12132, name: "invalid_fld", file: !3, line: 1618)
!12277 = !DILocation(line: 1618, column: 1, scope: !12132)
!12278 = !DILocation(line: 1619, column: 29, scope: !12132)
!12279 = !DILocation(line: 1619, column: 33, scope: !12132)
!12280 = !DILocation(line: 1619, column: 38, scope: !12132)
!12281 = !DILocation(line: 1619, column: 44, scope: !12132)
!12282 = !DILocation(line: 1619, column: 2, scope: !12132)
!12283 = !DILocation(line: 1620, column: 2, scope: !12132)
!12284 = !DILabel(scope: !12132, name: "out_of_range", file: !3, line: 1622)
!12285 = !DILocation(line: 1622, column: 1, scope: !12132)
!12286 = !DILocation(line: 1623, column: 21, scope: !12132)
!12287 = !DILocation(line: 1623, column: 25, scope: !12132)
!12288 = !DILocation(line: 1623, column: 30, scope: !12132)
!12289 = !DILocation(line: 1623, column: 2, scope: !12132)
!12290 = !DILocation(line: 1625, column: 2, scope: !12132)
!12291 = !DILabel(scope: !12132, name: "nothing_to_do", file: !3, line: 1627)
!12292 = !DILocation(line: 1627, column: 1, scope: !12132)
!12293 = !DILocation(line: 1628, column: 2, scope: !12132)
!12294 = !DILocation(line: 1628, column: 8, scope: !12132)
!12295 = !DILocation(line: 1628, column: 15, scope: !12132)
!12296 = !DILocation(line: 1629, column: 2, scope: !12132)
!12297 = !DILocation(line: 1630, column: 1, scope: !12132)
!12298 = distinct !DISubprogram(name: "ata_scsi_write_same_xlat", scope: !3, file: !3, line: 3161, type: !6667, scopeLine: 3162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12299 = !DILocalVariable(name: "qc", arg: 1, scope: !12298, file: !3, line: 3161, type: !6450)
!12300 = !DILocation(line: 3161, column: 69, scope: !12298)
!12301 = !DILocalVariable(name: "tf", scope: !12298, file: !3, line: 3163, type: !6695)
!12302 = !DILocation(line: 3163, column: 23, scope: !12298)
!12303 = !DILocation(line: 3163, column: 29, scope: !12298)
!12304 = !DILocation(line: 3163, column: 33, scope: !12298)
!12305 = !DILocalVariable(name: "scmd", scope: !12298, file: !3, line: 3164, type: !6139)
!12306 = !DILocation(line: 3164, column: 20, scope: !12298)
!12307 = !DILocation(line: 3164, column: 27, scope: !12298)
!12308 = !DILocation(line: 3164, column: 31, scope: !12298)
!12309 = !DILocalVariable(name: "sdp", scope: !12298, file: !3, line: 3165, type: !5987)
!12310 = !DILocation(line: 3165, column: 22, scope: !12298)
!12311 = !DILocation(line: 3165, column: 28, scope: !12298)
!12312 = !DILocation(line: 3165, column: 34, scope: !12298)
!12313 = !DILocalVariable(name: "len", scope: !12298, file: !3, line: 3166, type: !1631)
!12314 = !DILocation(line: 3166, column: 9, scope: !12298)
!12315 = !DILocation(line: 3166, column: 15, scope: !12298)
!12316 = !DILocation(line: 3166, column: 20, scope: !12298)
!12317 = !DILocalVariable(name: "dev", scope: !12298, file: !3, line: 3167, type: !6455)
!12318 = !DILocation(line: 3167, column: 21, scope: !12298)
!12319 = !DILocation(line: 3167, column: 27, scope: !12298)
!12320 = !DILocation(line: 3167, column: 31, scope: !12298)
!12321 = !DILocalVariable(name: "cdb", scope: !12298, file: !3, line: 3168, type: !9839)
!12322 = !DILocation(line: 3168, column: 12, scope: !12298)
!12323 = !DILocation(line: 3168, column: 18, scope: !12298)
!12324 = !DILocation(line: 3168, column: 24, scope: !12298)
!12325 = !DILocalVariable(name: "block", scope: !12298, file: !3, line: 3169, type: !976)
!12326 = !DILocation(line: 3169, column: 6, scope: !12298)
!12327 = !DILocalVariable(name: "n_block", scope: !12298, file: !3, line: 3170, type: !1049)
!12328 = !DILocation(line: 3170, column: 6, scope: !12298)
!12329 = !DILocalVariable(name: "trmax", scope: !12298, file: !3, line: 3171, type: !3423)
!12330 = !DILocation(line: 3171, column: 12, scope: !12298)
!12331 = !DILocation(line: 3171, column: 20, scope: !12298)
!12332 = !DILocation(line: 3171, column: 24, scope: !12298)
!12333 = !DILocalVariable(name: "size", scope: !12298, file: !3, line: 3172, type: !1049)
!12334 = !DILocation(line: 3172, column: 6, scope: !12298)
!12335 = !DILocalVariable(name: "fp", scope: !12298, file: !3, line: 3173, type: !1726)
!12336 = !DILocation(line: 3173, column: 6, scope: !12298)
!12337 = !DILocalVariable(name: "bp", scope: !12298, file: !3, line: 3174, type: !1203)
!12338 = !DILocation(line: 3174, column: 5, scope: !12298)
!12339 = !DILocalVariable(name: "unmap", scope: !12298, file: !3, line: 3175, type: !1203)
!12340 = !DILocation(line: 3175, column: 5, scope: !12298)
!12341 = !DILocation(line: 3175, column: 13, scope: !12298)
!12342 = !DILocation(line: 3175, column: 20, scope: !12298)
!12343 = !DILocation(line: 3178, column: 6, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3178, column: 6)
!12345 = !DILocation(line: 3178, column: 6, scope: !12298)
!12346 = !DILocation(line: 3179, column: 3, scope: !12344)
!12347 = !DILocation(line: 3186, column: 6, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3186, column: 6)
!12349 = !DILocation(line: 3186, column: 6, scope: !12298)
!12350 = !DILocation(line: 3187, column: 3, scope: !12348)
!12351 = !DILocation(line: 3189, column: 6, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3189, column: 6)
!12353 = !DILocation(line: 3189, column: 6, scope: !12298)
!12354 = !DILocation(line: 3190, column: 6, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 3189, column: 36)
!12356 = !DILocation(line: 3191, column: 3, scope: !12355)
!12357 = !DILocation(line: 3193, column: 18, scope: !12298)
!12358 = !DILocation(line: 3193, column: 2, scope: !12298)
!12359 = !DILocation(line: 3195, column: 7, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3195, column: 6)
!12361 = !DILocation(line: 3195, column: 13, scope: !12360)
!12362 = !DILocation(line: 3196, column: 7, scope: !12360)
!12363 = !DILocation(line: 3196, column: 12, scope: !12360)
!12364 = !DILocation(line: 3196, column: 20, scope: !12360)
!12365 = !DILocation(line: 3196, column: 42, scope: !12360)
!12366 = !DILocation(line: 3197, column: 23, scope: !12360)
!12367 = !DILocation(line: 3197, column: 28, scope: !12360)
!12368 = !DILocation(line: 3197, column: 7, scope: !12360)
!12369 = !DILocation(line: 3195, column: 6, scope: !12298)
!12370 = !DILocation(line: 3198, column: 6, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12360, file: !3, line: 3197, column: 33)
!12372 = !DILocation(line: 3199, column: 6, scope: !12371)
!12373 = !DILocation(line: 3200, column: 3, scope: !12371)
!12374 = !DILocation(line: 3203, column: 6, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3203, column: 6)
!12376 = !DILocation(line: 3203, column: 25, scope: !12375)
!12377 = !DILocation(line: 3203, column: 23, scope: !12375)
!12378 = !DILocation(line: 3203, column: 14, scope: !12375)
!12379 = !DILocation(line: 3203, column: 6, scope: !12298)
!12380 = !DILocation(line: 3204, column: 6, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12375, file: !3, line: 3203, column: 32)
!12382 = !DILocation(line: 3205, column: 3, scope: !12381)
!12383 = !DILocation(line: 3212, column: 21, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3212, column: 6)
!12385 = !DILocation(line: 3212, column: 7, scope: !12384)
!12386 = !DILocation(line: 3212, column: 6, scope: !12298)
!12387 = !DILocation(line: 3213, column: 3, scope: !12384)
!12388 = !DILocation(line: 3221, column: 35, scope: !12298)
!12389 = !DILocation(line: 3221, column: 41, scope: !12298)
!12390 = !DILocation(line: 3221, column: 48, scope: !12298)
!12391 = !DILocation(line: 3221, column: 55, scope: !12298)
!12392 = !DILocation(line: 3221, column: 9, scope: !12298)
!12393 = !DILocation(line: 3221, column: 7, scope: !12298)
!12394 = !DILocation(line: 3222, column: 6, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3222, column: 6)
!12396 = !DILocation(line: 3222, column: 14, scope: !12395)
!12397 = !DILocation(line: 3222, column: 11, scope: !12395)
!12398 = !DILocation(line: 3222, column: 6, scope: !12298)
!12399 = !DILocation(line: 3223, column: 3, scope: !12395)
!12400 = !DILocation(line: 3225, column: 22, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3225, column: 6)
!12402 = !DILocation(line: 3225, column: 6, scope: !12401)
!12403 = !DILocation(line: 3225, column: 27, scope: !12401)
!12404 = !DILocation(line: 3225, column: 54, scope: !12401)
!12405 = !DILocation(line: 3225, column: 30, scope: !12401)
!12406 = !DILocation(line: 3225, column: 6, scope: !12298)
!12407 = !DILocation(line: 3227, column: 3, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 3225, column: 60)
!12409 = !DILocation(line: 3227, column: 7, scope: !12408)
!12410 = !DILocation(line: 3227, column: 16, scope: !12408)
!12411 = !DILocation(line: 3228, column: 3, scope: !12408)
!12412 = !DILocation(line: 3228, column: 7, scope: !12408)
!12413 = !DILocation(line: 3228, column: 15, scope: !12408)
!12414 = !DILocation(line: 3229, column: 3, scope: !12408)
!12415 = !DILocation(line: 3229, column: 7, scope: !12408)
!12416 = !DILocation(line: 3229, column: 17, scope: !12408)
!12417 = !DILocation(line: 3230, column: 15, scope: !12408)
!12418 = !DILocation(line: 3230, column: 19, scope: !12408)
!12419 = !DILocation(line: 3230, column: 26, scope: !12408)
!12420 = !DILocation(line: 3230, column: 3, scope: !12408)
!12421 = !DILocation(line: 3230, column: 7, scope: !12408)
!12422 = !DILocation(line: 3230, column: 13, scope: !12408)
!12423 = !DILocation(line: 3231, column: 22, scope: !12408)
!12424 = !DILocation(line: 3231, column: 27, scope: !12408)
!12425 = !DILocation(line: 3231, column: 34, scope: !12408)
!12426 = !DILocation(line: 3231, column: 21, scope: !12408)
!12427 = !DILocation(line: 3231, column: 3, scope: !12408)
!12428 = !DILocation(line: 3231, column: 7, scope: !12408)
!12429 = !DILocation(line: 3231, column: 19, scope: !12408)
!12430 = !DILocation(line: 3232, column: 17, scope: !12408)
!12431 = !DILocation(line: 3232, column: 22, scope: !12408)
!12432 = !DILocation(line: 3232, column: 3, scope: !12408)
!12433 = !DILocation(line: 3232, column: 7, scope: !12408)
!12434 = !DILocation(line: 3232, column: 15, scope: !12408)
!12435 = !DILocation(line: 3234, column: 3, scope: !12408)
!12436 = !DILocation(line: 3234, column: 7, scope: !12408)
!12437 = !DILocation(line: 3234, column: 17, scope: !12408)
!12438 = !DILocation(line: 3235, column: 2, scope: !12408)
!12439 = !DILocation(line: 3236, column: 3, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 3235, column: 9)
!12441 = !DILocation(line: 3236, column: 7, scope: !12440)
!12442 = !DILocation(line: 3236, column: 16, scope: !12440)
!12443 = !DILocation(line: 3237, column: 3, scope: !12440)
!12444 = !DILocation(line: 3237, column: 7, scope: !12440)
!12445 = !DILocation(line: 3237, column: 19, scope: !12440)
!12446 = !DILocation(line: 3238, column: 3, scope: !12440)
!12447 = !DILocation(line: 3238, column: 7, scope: !12440)
!12448 = !DILocation(line: 3238, column: 15, scope: !12440)
!12449 = !DILocation(line: 3239, column: 20, scope: !12440)
!12450 = !DILocation(line: 3239, column: 25, scope: !12440)
!12451 = !DILocation(line: 3239, column: 32, scope: !12440)
!12452 = !DILocation(line: 3239, column: 19, scope: !12440)
!12453 = !DILocation(line: 3239, column: 3, scope: !12440)
!12454 = !DILocation(line: 3239, column: 7, scope: !12440)
!12455 = !DILocation(line: 3239, column: 17, scope: !12440)
!12456 = !DILocation(line: 3240, column: 15, scope: !12440)
!12457 = !DILocation(line: 3240, column: 20, scope: !12440)
!12458 = !DILocation(line: 3240, column: 3, scope: !12440)
!12459 = !DILocation(line: 3240, column: 7, scope: !12440)
!12460 = !DILocation(line: 3240, column: 13, scope: !12440)
!12461 = !DILocation(line: 3241, column: 3, scope: !12440)
!12462 = !DILocation(line: 3241, column: 7, scope: !12440)
!12463 = !DILocation(line: 3241, column: 15, scope: !12440)
!12464 = !DILocation(line: 3244, column: 2, scope: !12298)
!12465 = !DILocation(line: 3244, column: 6, scope: !12298)
!12466 = !DILocation(line: 3244, column: 12, scope: !12298)
!12467 = !DILocation(line: 3247, column: 23, scope: !12298)
!12468 = !DILocation(line: 3247, column: 2, scope: !12298)
!12469 = !DILocation(line: 3249, column: 2, scope: !12298)
!12470 = !DILabel(scope: !12298, name: "invalid_fld", file: !3, line: 3251)
!12471 = !DILocation(line: 3251, column: 1, scope: !12298)
!12472 = !DILocation(line: 3252, column: 29, scope: !12298)
!12473 = !DILocation(line: 3252, column: 34, scope: !12298)
!12474 = !DILocation(line: 3252, column: 40, scope: !12298)
!12475 = !DILocation(line: 3252, column: 44, scope: !12298)
!12476 = !DILocation(line: 3252, column: 2, scope: !12298)
!12477 = !DILocation(line: 3253, column: 2, scope: !12298)
!12478 = !DILabel(scope: !12298, name: "invalid_param_len", file: !3, line: 3254)
!12479 = !DILocation(line: 3254, column: 1, scope: !12298)
!12480 = !DILocation(line: 3256, column: 21, scope: !12298)
!12481 = !DILocation(line: 3256, column: 26, scope: !12298)
!12482 = !DILocation(line: 3256, column: 2, scope: !12298)
!12483 = !DILocation(line: 3257, column: 2, scope: !12298)
!12484 = !DILabel(scope: !12298, name: "invalid_opcode", file: !3, line: 3258)
!12485 = !DILocation(line: 3258, column: 1, scope: !12298)
!12486 = !DILocation(line: 3260, column: 21, scope: !12298)
!12487 = !DILocation(line: 3260, column: 26, scope: !12298)
!12488 = !DILocation(line: 3260, column: 2, scope: !12298)
!12489 = !DILocation(line: 3261, column: 2, scope: !12298)
!12490 = !DILocation(line: 3262, column: 1, scope: !12298)
!12491 = distinct !DISubprogram(name: "ata_try_flush_cache", scope: !183, file: !183, line: 1794, type: !12492, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12492 = !DISubroutineType(types: !12493)
!12493 = !{!211, !9446}
!12494 = !DILocalVariable(name: "dev", arg: 1, scope: !12491, file: !183, line: 1794, type: !9446)
!12495 = !DILocation(line: 1794, column: 64, scope: !12491)
!12496 = !DILocation(line: 1796, column: 31, scope: !12491)
!12497 = !DILocation(line: 1796, column: 36, scope: !12491)
!12498 = !DILocation(line: 1796, column: 9, scope: !12491)
!12499 = !DILocation(line: 1796, column: 40, scope: !12491)
!12500 = !DILocation(line: 1797, column: 26, scope: !12491)
!12501 = !DILocation(line: 1797, column: 31, scope: !12491)
!12502 = !DILocation(line: 1797, column: 9, scope: !12491)
!12503 = !DILocation(line: 1797, column: 35, scope: !12491)
!12504 = !DILocation(line: 1798, column: 30, scope: !12491)
!12505 = !DILocation(line: 1798, column: 35, scope: !12491)
!12506 = !DILocation(line: 1798, column: 9, scope: !12491)
!12507 = !DILocation(line: 1796, column: 2, scope: !12491)
!12508 = distinct !DISubprogram(name: "ata_scsi_flush_xlat", scope: !3, file: !3, line: 1262, type: !6667, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12509 = !DILocalVariable(name: "qc", arg: 1, scope: !12508, file: !3, line: 1262, type: !6450)
!12510 = !DILocation(line: 1262, column: 64, scope: !12508)
!12511 = !DILocalVariable(name: "tf", scope: !12508, file: !3, line: 1264, type: !6695)
!12512 = !DILocation(line: 1264, column: 23, scope: !12508)
!12513 = !DILocation(line: 1264, column: 29, scope: !12508)
!12514 = !DILocation(line: 1264, column: 33, scope: !12508)
!12515 = !DILocation(line: 1266, column: 2, scope: !12508)
!12516 = !DILocation(line: 1266, column: 6, scope: !12508)
!12517 = !DILocation(line: 1266, column: 12, scope: !12508)
!12518 = !DILocation(line: 1267, column: 2, scope: !12508)
!12519 = !DILocation(line: 1267, column: 6, scope: !12508)
!12520 = !DILocation(line: 1267, column: 15, scope: !12508)
!12521 = !DILocation(line: 1269, column: 6, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12508, file: !3, line: 1269, column: 6)
!12523 = !DILocation(line: 1269, column: 10, scope: !12522)
!12524 = !DILocation(line: 1269, column: 15, scope: !12522)
!12525 = !DILocation(line: 1269, column: 21, scope: !12522)
!12526 = !DILocation(line: 1269, column: 6, scope: !12508)
!12527 = !DILocation(line: 1270, column: 3, scope: !12522)
!12528 = !DILocation(line: 1270, column: 7, scope: !12522)
!12529 = !DILocation(line: 1270, column: 15, scope: !12522)
!12530 = !DILocation(line: 1272, column: 3, scope: !12522)
!12531 = !DILocation(line: 1272, column: 7, scope: !12522)
!12532 = !DILocation(line: 1272, column: 15, scope: !12522)
!12533 = !DILocation(line: 1275, column: 2, scope: !12508)
!12534 = !DILocation(line: 1275, column: 6, scope: !12508)
!12535 = !DILocation(line: 1275, column: 12, scope: !12508)
!12536 = !DILocation(line: 1277, column: 2, scope: !12508)
!12537 = distinct !DISubprogram(name: "ata_scsi_verify_xlat", scope: !3, file: !3, line: 1383, type: !6667, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12538 = !DILocalVariable(name: "qc", arg: 1, scope: !12537, file: !3, line: 1383, type: !6450)
!12539 = !DILocation(line: 1383, column: 65, scope: !12537)
!12540 = !DILocalVariable(name: "scmd", scope: !12537, file: !3, line: 1385, type: !6139)
!12541 = !DILocation(line: 1385, column: 20, scope: !12537)
!12542 = !DILocation(line: 1385, column: 27, scope: !12537)
!12543 = !DILocation(line: 1385, column: 31, scope: !12537)
!12544 = !DILocalVariable(name: "tf", scope: !12537, file: !3, line: 1386, type: !6695)
!12545 = !DILocation(line: 1386, column: 23, scope: !12537)
!12546 = !DILocation(line: 1386, column: 29, scope: !12537)
!12547 = !DILocation(line: 1386, column: 33, scope: !12537)
!12548 = !DILocalVariable(name: "dev", scope: !12537, file: !3, line: 1387, type: !6455)
!12549 = !DILocation(line: 1387, column: 21, scope: !12537)
!12550 = !DILocation(line: 1387, column: 27, scope: !12537)
!12551 = !DILocation(line: 1387, column: 31, scope: !12537)
!12552 = !DILocalVariable(name: "dev_sectors", scope: !12537, file: !3, line: 1388, type: !976)
!12553 = !DILocation(line: 1388, column: 6, scope: !12537)
!12554 = !DILocation(line: 1388, column: 20, scope: !12537)
!12555 = !DILocation(line: 1388, column: 24, scope: !12537)
!12556 = !DILocation(line: 1388, column: 29, scope: !12537)
!12557 = !DILocalVariable(name: "cdb", scope: !12537, file: !3, line: 1389, type: !9839)
!12558 = !DILocation(line: 1389, column: 12, scope: !12537)
!12559 = !DILocation(line: 1389, column: 18, scope: !12537)
!12560 = !DILocation(line: 1389, column: 24, scope: !12537)
!12561 = !DILocalVariable(name: "block", scope: !12537, file: !3, line: 1390, type: !976)
!12562 = !DILocation(line: 1390, column: 6, scope: !12537)
!12563 = !DILocalVariable(name: "n_block", scope: !12537, file: !3, line: 1391, type: !1049)
!12564 = !DILocation(line: 1391, column: 6, scope: !12537)
!12565 = !DILocalVariable(name: "fp", scope: !12537, file: !3, line: 1392, type: !1726)
!12566 = !DILocation(line: 1392, column: 6, scope: !12537)
!12567 = !DILocation(line: 1394, column: 2, scope: !12537)
!12568 = !DILocation(line: 1394, column: 6, scope: !12537)
!12569 = !DILocation(line: 1394, column: 12, scope: !12537)
!12570 = !DILocation(line: 1395, column: 2, scope: !12537)
!12571 = !DILocation(line: 1395, column: 6, scope: !12537)
!12572 = !DILocation(line: 1395, column: 15, scope: !12537)
!12573 = !DILocation(line: 1397, column: 6, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12537, file: !3, line: 1397, column: 6)
!12575 = !DILocation(line: 1397, column: 13, scope: !12574)
!12576 = !DILocation(line: 1397, column: 6, scope: !12537)
!12577 = !DILocation(line: 1398, column: 7, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12579, file: !3, line: 1398, column: 7)
!12579 = distinct !DILexicalBlock(scope: !12574, file: !3, line: 1397, column: 24)
!12580 = !DILocation(line: 1398, column: 13, scope: !12578)
!12581 = !DILocation(line: 1398, column: 21, scope: !12578)
!12582 = !DILocation(line: 1398, column: 7, scope: !12579)
!12583 = !DILocation(line: 1399, column: 7, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12578, file: !3, line: 1398, column: 27)
!12585 = !DILocation(line: 1400, column: 4, scope: !12584)
!12586 = !DILocation(line: 1402, column: 19, scope: !12579)
!12587 = !DILocation(line: 1402, column: 3, scope: !12579)
!12588 = !DILocation(line: 1403, column: 2, scope: !12579)
!12589 = !DILocation(line: 1403, column: 13, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12574, file: !3, line: 1403, column: 13)
!12591 = !DILocation(line: 1403, column: 20, scope: !12590)
!12592 = !DILocation(line: 1403, column: 13, scope: !12574)
!12593 = !DILocation(line: 1404, column: 7, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12595, file: !3, line: 1404, column: 7)
!12595 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 1403, column: 34)
!12596 = !DILocation(line: 1404, column: 13, scope: !12594)
!12597 = !DILocation(line: 1404, column: 21, scope: !12594)
!12598 = !DILocation(line: 1404, column: 7, scope: !12595)
!12599 = !DILocation(line: 1405, column: 7, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12594, file: !3, line: 1404, column: 27)
!12601 = !DILocation(line: 1406, column: 4, scope: !12600)
!12602 = !DILocation(line: 1408, column: 19, scope: !12595)
!12603 = !DILocation(line: 1408, column: 3, scope: !12595)
!12604 = !DILocation(line: 1409, column: 2, scope: !12595)
!12605 = !DILocation(line: 1410, column: 6, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 1409, column: 9)
!12607 = !DILocation(line: 1411, column: 3, scope: !12606)
!12608 = !DILocation(line: 1414, column: 7, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12537, file: !3, line: 1414, column: 6)
!12610 = !DILocation(line: 1414, column: 6, scope: !12537)
!12611 = !DILocation(line: 1415, column: 3, scope: !12609)
!12612 = !DILocation(line: 1416, column: 6, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12537, file: !3, line: 1416, column: 6)
!12614 = !DILocation(line: 1416, column: 15, scope: !12613)
!12615 = !DILocation(line: 1416, column: 12, scope: !12613)
!12616 = !DILocation(line: 1416, column: 6, scope: !12537)
!12617 = !DILocation(line: 1417, column: 3, scope: !12613)
!12618 = !DILocation(line: 1418, column: 7, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12537, file: !3, line: 1418, column: 6)
!12620 = !DILocation(line: 1418, column: 15, scope: !12619)
!12621 = !DILocation(line: 1418, column: 13, scope: !12619)
!12622 = !DILocation(line: 1418, column: 26, scope: !12619)
!12623 = !DILocation(line: 1418, column: 24, scope: !12619)
!12624 = !DILocation(line: 1418, column: 6, scope: !12537)
!12625 = !DILocation(line: 1419, column: 3, scope: !12619)
!12626 = !DILocation(line: 1421, column: 6, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12537, file: !3, line: 1421, column: 6)
!12628 = !DILocation(line: 1421, column: 11, scope: !12627)
!12629 = !DILocation(line: 1421, column: 17, scope: !12627)
!12630 = !DILocation(line: 1421, column: 6, scope: !12537)
!12631 = !DILocation(line: 1422, column: 3, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 1421, column: 34)
!12633 = !DILocation(line: 1422, column: 7, scope: !12632)
!12634 = !DILocation(line: 1422, column: 13, scope: !12632)
!12635 = !DILocation(line: 1424, column: 17, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 1424, column: 7)
!12637 = !DILocation(line: 1424, column: 24, scope: !12636)
!12638 = !DILocation(line: 1424, column: 7, scope: !12636)
!12639 = !DILocation(line: 1424, column: 7, scope: !12632)
!12640 = !DILocation(line: 1426, column: 4, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 1424, column: 34)
!12642 = !DILocation(line: 1426, column: 8, scope: !12641)
!12643 = !DILocation(line: 1426, column: 16, scope: !12641)
!12644 = !DILocation(line: 1427, column: 19, scope: !12641)
!12645 = !DILocation(line: 1427, column: 25, scope: !12641)
!12646 = !DILocation(line: 1427, column: 32, scope: !12641)
!12647 = !DILocation(line: 1427, column: 4, scope: !12641)
!12648 = !DILocation(line: 1427, column: 8, scope: !12641)
!12649 = !DILocation(line: 1427, column: 15, scope: !12641)
!12650 = !DILocation(line: 1428, column: 3, scope: !12641)
!12651 = !DILocation(line: 1428, column: 24, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 1428, column: 14)
!12653 = !DILocation(line: 1428, column: 31, scope: !12652)
!12654 = !DILocation(line: 1428, column: 14, scope: !12652)
!12655 = !DILocation(line: 1428, column: 14, scope: !12636)
!12656 = !DILocation(line: 1429, column: 10, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 1429, column: 8)
!12658 = distinct !DILexicalBlock(scope: !12652, file: !3, line: 1428, column: 41)
!12659 = !DILocation(line: 1429, column: 15, scope: !12657)
!12660 = !DILocation(line: 1429, column: 21, scope: !12657)
!12661 = !DILocation(line: 1429, column: 8, scope: !12658)
!12662 = !DILocation(line: 1430, column: 5, scope: !12657)
!12663 = !DILocation(line: 1433, column: 4, scope: !12658)
!12664 = !DILocation(line: 1433, column: 8, scope: !12658)
!12665 = !DILocation(line: 1433, column: 14, scope: !12658)
!12666 = !DILocation(line: 1434, column: 4, scope: !12658)
!12667 = !DILocation(line: 1434, column: 8, scope: !12658)
!12668 = !DILocation(line: 1434, column: 16, scope: !12658)
!12669 = !DILocation(line: 1436, column: 21, scope: !12658)
!12670 = !DILocation(line: 1436, column: 29, scope: !12658)
!12671 = !DILocation(line: 1436, column: 35, scope: !12658)
!12672 = !DILocation(line: 1436, column: 20, scope: !12658)
!12673 = !DILocation(line: 1436, column: 4, scope: !12658)
!12674 = !DILocation(line: 1436, column: 8, scope: !12658)
!12675 = !DILocation(line: 1436, column: 18, scope: !12658)
!12676 = !DILocation(line: 1438, column: 20, scope: !12658)
!12677 = !DILocation(line: 1438, column: 26, scope: !12658)
!12678 = !DILocation(line: 1438, column: 33, scope: !12658)
!12679 = !DILocation(line: 1438, column: 19, scope: !12658)
!12680 = !DILocation(line: 1438, column: 4, scope: !12658)
!12681 = !DILocation(line: 1438, column: 8, scope: !12658)
!12682 = !DILocation(line: 1438, column: 17, scope: !12658)
!12683 = !DILocation(line: 1439, column: 20, scope: !12658)
!12684 = !DILocation(line: 1439, column: 26, scope: !12658)
!12685 = !DILocation(line: 1439, column: 33, scope: !12658)
!12686 = !DILocation(line: 1439, column: 19, scope: !12658)
!12687 = !DILocation(line: 1439, column: 4, scope: !12658)
!12688 = !DILocation(line: 1439, column: 8, scope: !12658)
!12689 = !DILocation(line: 1439, column: 17, scope: !12658)
!12690 = !DILocation(line: 1440, column: 20, scope: !12658)
!12691 = !DILocation(line: 1440, column: 26, scope: !12658)
!12692 = !DILocation(line: 1440, column: 33, scope: !12658)
!12693 = !DILocation(line: 1440, column: 19, scope: !12658)
!12694 = !DILocation(line: 1440, column: 4, scope: !12658)
!12695 = !DILocation(line: 1440, column: 8, scope: !12658)
!12696 = !DILocation(line: 1440, column: 17, scope: !12658)
!12697 = !DILocation(line: 1441, column: 3, scope: !12658)
!12698 = !DILocation(line: 1443, column: 4, scope: !12652)
!12699 = !DILocation(line: 1445, column: 15, scope: !12632)
!12700 = !DILocation(line: 1445, column: 23, scope: !12632)
!12701 = !DILocation(line: 1445, column: 3, scope: !12632)
!12702 = !DILocation(line: 1445, column: 7, scope: !12632)
!12703 = !DILocation(line: 1445, column: 13, scope: !12632)
!12704 = !DILocation(line: 1447, column: 15, scope: !12632)
!12705 = !DILocation(line: 1447, column: 21, scope: !12632)
!12706 = !DILocation(line: 1447, column: 28, scope: !12632)
!12707 = !DILocation(line: 1447, column: 14, scope: !12632)
!12708 = !DILocation(line: 1447, column: 3, scope: !12632)
!12709 = !DILocation(line: 1447, column: 7, scope: !12632)
!12710 = !DILocation(line: 1447, column: 12, scope: !12632)
!12711 = !DILocation(line: 1448, column: 15, scope: !12632)
!12712 = !DILocation(line: 1448, column: 21, scope: !12632)
!12713 = !DILocation(line: 1448, column: 27, scope: !12632)
!12714 = !DILocation(line: 1448, column: 14, scope: !12632)
!12715 = !DILocation(line: 1448, column: 3, scope: !12632)
!12716 = !DILocation(line: 1448, column: 7, scope: !12632)
!12717 = !DILocation(line: 1448, column: 12, scope: !12632)
!12718 = !DILocation(line: 1449, column: 14, scope: !12632)
!12719 = !DILocation(line: 1449, column: 20, scope: !12632)
!12720 = !DILocation(line: 1449, column: 3, scope: !12632)
!12721 = !DILocation(line: 1449, column: 7, scope: !12632)
!12722 = !DILocation(line: 1449, column: 12, scope: !12632)
!12723 = !DILocation(line: 1451, column: 3, scope: !12632)
!12724 = !DILocation(line: 1451, column: 7, scope: !12632)
!12725 = !DILocation(line: 1451, column: 14, scope: !12632)
!12726 = !DILocation(line: 1452, column: 2, scope: !12632)
!12727 = !DILocalVariable(name: "sect", scope: !12728, file: !3, line: 1454, type: !1049)
!12728 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 1452, column: 9)
!12729 = !DILocation(line: 1454, column: 7, scope: !12728)
!12730 = !DILocalVariable(name: "head", scope: !12728, file: !3, line: 1454, type: !1049)
!12731 = !DILocation(line: 1454, column: 13, scope: !12728)
!12732 = !DILocalVariable(name: "cyl", scope: !12728, file: !3, line: 1454, type: !1049)
!12733 = !DILocation(line: 1454, column: 19, scope: !12728)
!12734 = !DILocalVariable(name: "track", scope: !12728, file: !3, line: 1454, type: !1049)
!12735 = !DILocation(line: 1454, column: 24, scope: !12728)
!12736 = !DILocation(line: 1456, column: 18, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 1456, column: 7)
!12738 = !DILocation(line: 1456, column: 25, scope: !12737)
!12739 = !DILocation(line: 1456, column: 8, scope: !12737)
!12740 = !DILocation(line: 1456, column: 7, scope: !12728)
!12741 = !DILocation(line: 1457, column: 4, scope: !12737)
!12742 = !DILocation(line: 1460, column: 16, scope: !12728)
!12743 = !DILocation(line: 1460, column: 11, scope: !12728)
!12744 = !DILocation(line: 1460, column: 24, scope: !12728)
!12745 = !DILocation(line: 1460, column: 29, scope: !12728)
!12746 = !DILocation(line: 1460, column: 22, scope: !12728)
!12747 = !DILocation(line: 1460, column: 9, scope: !12728)
!12748 = !DILocation(line: 1461, column: 11, scope: !12728)
!12749 = !DILocation(line: 1461, column: 19, scope: !12728)
!12750 = !DILocation(line: 1461, column: 24, scope: !12728)
!12751 = !DILocation(line: 1461, column: 17, scope: !12728)
!12752 = !DILocation(line: 1461, column: 9, scope: !12728)
!12753 = !DILocation(line: 1462, column: 11, scope: !12728)
!12754 = !DILocation(line: 1462, column: 19, scope: !12728)
!12755 = !DILocation(line: 1462, column: 24, scope: !12728)
!12756 = !DILocation(line: 1462, column: 17, scope: !12728)
!12757 = !DILocation(line: 1462, column: 9, scope: !12728)
!12758 = !DILocation(line: 1463, column: 16, scope: !12728)
!12759 = !DILocation(line: 1463, column: 11, scope: !12728)
!12760 = !DILocation(line: 1463, column: 24, scope: !12728)
!12761 = !DILocation(line: 1463, column: 29, scope: !12728)
!12762 = !DILocation(line: 1463, column: 22, scope: !12728)
!12763 = !DILocation(line: 1463, column: 37, scope: !12728)
!12764 = !DILocation(line: 1463, column: 9, scope: !12728)
!12765 = !DILocation(line: 1472, column: 8, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 1472, column: 7)
!12767 = !DILocation(line: 1472, column: 12, scope: !12766)
!12768 = !DILocation(line: 1472, column: 19, scope: !12766)
!12769 = !DILocation(line: 1472, column: 23, scope: !12766)
!12770 = !DILocation(line: 1472, column: 28, scope: !12766)
!12771 = !DILocation(line: 1472, column: 34, scope: !12766)
!12772 = !DILocation(line: 1472, column: 38, scope: !12766)
!12773 = !DILocation(line: 1472, column: 43, scope: !12766)
!12774 = !DILocation(line: 1472, column: 49, scope: !12766)
!12775 = !DILocation(line: 1472, column: 54, scope: !12766)
!12776 = !DILocation(line: 1472, column: 7, scope: !12728)
!12777 = !DILocation(line: 1473, column: 4, scope: !12766)
!12778 = !DILocation(line: 1475, column: 3, scope: !12728)
!12779 = !DILocation(line: 1475, column: 7, scope: !12728)
!12780 = !DILocation(line: 1475, column: 15, scope: !12728)
!12781 = !DILocation(line: 1476, column: 15, scope: !12728)
!12782 = !DILocation(line: 1476, column: 23, scope: !12728)
!12783 = !DILocation(line: 1476, column: 3, scope: !12728)
!12784 = !DILocation(line: 1476, column: 7, scope: !12728)
!12785 = !DILocation(line: 1476, column: 13, scope: !12728)
!12786 = !DILocation(line: 1477, column: 14, scope: !12728)
!12787 = !DILocation(line: 1477, column: 3, scope: !12728)
!12788 = !DILocation(line: 1477, column: 7, scope: !12728)
!12789 = !DILocation(line: 1477, column: 12, scope: !12728)
!12790 = !DILocation(line: 1478, column: 14, scope: !12728)
!12791 = !DILocation(line: 1478, column: 3, scope: !12728)
!12792 = !DILocation(line: 1478, column: 7, scope: !12728)
!12793 = !DILocation(line: 1478, column: 12, scope: !12728)
!12794 = !DILocation(line: 1479, column: 14, scope: !12728)
!12795 = !DILocation(line: 1479, column: 18, scope: !12728)
!12796 = !DILocation(line: 1479, column: 3, scope: !12728)
!12797 = !DILocation(line: 1479, column: 7, scope: !12728)
!12798 = !DILocation(line: 1479, column: 12, scope: !12728)
!12799 = !DILocation(line: 1480, column: 17, scope: !12728)
!12800 = !DILocation(line: 1480, column: 3, scope: !12728)
!12801 = !DILocation(line: 1480, column: 7, scope: !12728)
!12802 = !DILocation(line: 1480, column: 14, scope: !12728)
!12803 = !DILocation(line: 1483, column: 2, scope: !12537)
!12804 = !DILabel(scope: !12537, name: "invalid_fld", file: !3, line: 1485)
!12805 = !DILocation(line: 1485, column: 1, scope: !12537)
!12806 = !DILocation(line: 1486, column: 29, scope: !12537)
!12807 = !DILocation(line: 1486, column: 33, scope: !12537)
!12808 = !DILocation(line: 1486, column: 38, scope: !12537)
!12809 = !DILocation(line: 1486, column: 44, scope: !12537)
!12810 = !DILocation(line: 1486, column: 2, scope: !12537)
!12811 = !DILocation(line: 1487, column: 2, scope: !12537)
!12812 = !DILabel(scope: !12537, name: "out_of_range", file: !3, line: 1489)
!12813 = !DILocation(line: 1489, column: 1, scope: !12537)
!12814 = !DILocation(line: 1490, column: 21, scope: !12537)
!12815 = !DILocation(line: 1490, column: 25, scope: !12537)
!12816 = !DILocation(line: 1490, column: 30, scope: !12537)
!12817 = !DILocation(line: 1490, column: 2, scope: !12537)
!12818 = !DILocation(line: 1492, column: 2, scope: !12537)
!12819 = !DILabel(scope: !12537, name: "nothing_to_do", file: !3, line: 1494)
!12820 = !DILocation(line: 1494, column: 1, scope: !12537)
!12821 = !DILocation(line: 1495, column: 2, scope: !12537)
!12822 = !DILocation(line: 1495, column: 8, scope: !12537)
!12823 = !DILocation(line: 1495, column: 15, scope: !12537)
!12824 = !DILocation(line: 1496, column: 2, scope: !12537)
!12825 = !DILocation(line: 1497, column: 1, scope: !12537)
!12826 = distinct !DISubprogram(name: "ata_scsi_pass_thru", scope: !3, file: !3, line: 2854, type: !6667, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12827 = !DILocalVariable(name: "p", arg: 1, scope: !12828, file: !12829, line: 184, type: !12832)
!12828 = distinct !DISubprogram(name: "__swab32p", scope: !12829, file: !12829, line: 184, type: !12830, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12829 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!12830 = !DISubroutineType(types: !12831)
!12831 = !{!1050, !12832}
!12832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12833, size: 64)
!12833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!12834 = !DILocation(line: 184, column: 53, scope: !12828, inlinedAt: !12835)
!12835 = distinct !DILocation(line: 82, column: 9, scope: !12836, inlinedAt: !12842)
!12836 = distinct !DISubprogram(name: "__be32_to_cpup", scope: !12837, file: !12837, line: 80, type: !12838, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12837 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!12838 = !DISubroutineType(types: !12839)
!12839 = !{!1050, !12840}
!12840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12841, size: 64)
!12841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6939)
!12842 = distinct !DILocation(line: 30, column: 9, scope: !12843, inlinedAt: !12846)
!12843 = distinct !DISubprogram(name: "get_unaligned_be32", scope: !10339, file: !10339, line: 28, type: !12844, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!12844 = !DISubroutineType(types: !12845)
!12845 = !{!1049, !2823}
!12846 = distinct !DILocation(line: 2945, column: 19, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12848, file: !3, line: 2922, column: 9)
!12848 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 2909, column: 13)
!12849 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2883, column: 6)
!12850 = !DILocalVariable(name: "p", arg: 1, scope: !12836, file: !12837, line: 80, type: !12840)
!12851 = !DILocation(line: 80, column: 59, scope: !12836, inlinedAt: !12842)
!12852 = !DILocalVariable(name: "p", arg: 1, scope: !12843, file: !10339, line: 28, type: !2823)
!12853 = !DILocation(line: 28, column: 59, scope: !12843, inlinedAt: !12846)
!12854 = !DILocalVariable(name: "qc", arg: 1, scope: !12826, file: !3, line: 2854, type: !6450)
!12855 = !DILocation(line: 2854, column: 63, scope: !12826)
!12856 = !DILocalVariable(name: "tf", scope: !12826, file: !3, line: 2856, type: !6695)
!12857 = !DILocation(line: 2856, column: 23, scope: !12826)
!12858 = !DILocation(line: 2856, column: 30, scope: !12826)
!12859 = !DILocation(line: 2856, column: 34, scope: !12826)
!12860 = !DILocalVariable(name: "scmd", scope: !12826, file: !3, line: 2857, type: !6139)
!12861 = !DILocation(line: 2857, column: 20, scope: !12826)
!12862 = !DILocation(line: 2857, column: 27, scope: !12826)
!12863 = !DILocation(line: 2857, column: 31, scope: !12826)
!12864 = !DILocalVariable(name: "dev", scope: !12826, file: !3, line: 2858, type: !6455)
!12865 = !DILocation(line: 2858, column: 21, scope: !12826)
!12866 = !DILocation(line: 2858, column: 27, scope: !12826)
!12867 = !DILocation(line: 2858, column: 31, scope: !12826)
!12868 = !DILocalVariable(name: "cdb", scope: !12826, file: !3, line: 2859, type: !9839)
!12869 = !DILocation(line: 2859, column: 12, scope: !12826)
!12870 = !DILocation(line: 2859, column: 18, scope: !12826)
!12871 = !DILocation(line: 2859, column: 24, scope: !12826)
!12872 = !DILocalVariable(name: "fp", scope: !12826, file: !3, line: 2860, type: !1726)
!12873 = !DILocation(line: 2860, column: 6, scope: !12826)
!12874 = !DILocalVariable(name: "cdb_offset", scope: !12826, file: !3, line: 2861, type: !1726)
!12875 = !DILocation(line: 2861, column: 6, scope: !12826)
!12876 = !DILocation(line: 2864, column: 6, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2864, column: 6)
!12878 = !DILocation(line: 2864, column: 13, scope: !12877)
!12879 = !DILocation(line: 2864, column: 6, scope: !12826)
!12880 = !DILocation(line: 2865, column: 14, scope: !12877)
!12881 = !DILocation(line: 2865, column: 3, scope: !12877)
!12882 = !DILocation(line: 2867, column: 36, scope: !12826)
!12883 = !DILocation(line: 2867, column: 44, scope: !12826)
!12884 = !DILocation(line: 2867, column: 42, scope: !12826)
!12885 = !DILocation(line: 2867, column: 17, scope: !12826)
!12886 = !DILocation(line: 2867, column: 2, scope: !12826)
!12887 = !DILocation(line: 2867, column: 6, scope: !12826)
!12888 = !DILocation(line: 2867, column: 15, scope: !12826)
!12889 = !DILocation(line: 2868, column: 6, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2868, column: 6)
!12891 = !DILocation(line: 2868, column: 10, scope: !12890)
!12892 = !DILocation(line: 2868, column: 19, scope: !12890)
!12893 = !DILocation(line: 2868, column: 6, scope: !12826)
!12894 = !DILocation(line: 2869, column: 6, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 2868, column: 40)
!12896 = !DILocation(line: 2870, column: 3, scope: !12895)
!12897 = !DILocation(line: 2873, column: 17, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2873, column: 6)
!12899 = !DILocation(line: 2873, column: 21, scope: !12898)
!12900 = !DILocation(line: 2873, column: 6, scope: !12898)
!12901 = !DILocation(line: 2873, column: 31, scope: !12898)
!12902 = !DILocation(line: 2873, column: 35, scope: !12898)
!12903 = !DILocation(line: 2873, column: 43, scope: !12898)
!12904 = !DILocation(line: 2873, column: 41, scope: !12898)
!12905 = !DILocation(line: 2873, column: 55, scope: !12898)
!12906 = !DILocation(line: 2873, column: 62, scope: !12898)
!12907 = !DILocation(line: 2873, column: 6, scope: !12826)
!12908 = !DILocation(line: 2874, column: 3, scope: !12898)
!12909 = !DILocation(line: 2874, column: 7, scope: !12898)
!12910 = !DILocation(line: 2874, column: 16, scope: !12898)
!12911 = !DILocation(line: 2877, column: 2, scope: !12826)
!12912 = !DILocation(line: 2877, column: 6, scope: !12826)
!12913 = !DILocation(line: 2877, column: 12, scope: !12826)
!12914 = !DILocation(line: 2883, column: 6, scope: !12849)
!12915 = !DILocation(line: 2883, column: 13, scope: !12849)
!12916 = !DILocation(line: 2883, column: 6, scope: !12826)
!12917 = !DILocation(line: 2889, column: 7, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12919, file: !3, line: 2889, column: 7)
!12919 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 2883, column: 24)
!12920 = !DILocation(line: 2889, column: 14, scope: !12918)
!12921 = !DILocation(line: 2889, column: 7, scope: !12919)
!12922 = !DILocation(line: 2890, column: 22, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 2889, column: 22)
!12924 = !DILocation(line: 2890, column: 4, scope: !12923)
!12925 = !DILocation(line: 2890, column: 8, scope: !12923)
!12926 = !DILocation(line: 2890, column: 20, scope: !12923)
!12927 = !DILocation(line: 2891, column: 20, scope: !12923)
!12928 = !DILocation(line: 2891, column: 4, scope: !12923)
!12929 = !DILocation(line: 2891, column: 8, scope: !12923)
!12930 = !DILocation(line: 2891, column: 18, scope: !12923)
!12931 = !DILocation(line: 2892, column: 19, scope: !12923)
!12932 = !DILocation(line: 2892, column: 4, scope: !12923)
!12933 = !DILocation(line: 2892, column: 8, scope: !12923)
!12934 = !DILocation(line: 2892, column: 17, scope: !12923)
!12935 = !DILocation(line: 2893, column: 19, scope: !12923)
!12936 = !DILocation(line: 2893, column: 4, scope: !12923)
!12937 = !DILocation(line: 2893, column: 8, scope: !12923)
!12938 = !DILocation(line: 2893, column: 17, scope: !12923)
!12939 = !DILocation(line: 2894, column: 19, scope: !12923)
!12940 = !DILocation(line: 2894, column: 4, scope: !12923)
!12941 = !DILocation(line: 2894, column: 8, scope: !12923)
!12942 = !DILocation(line: 2894, column: 17, scope: !12923)
!12943 = !DILocation(line: 2895, column: 4, scope: !12923)
!12944 = !DILocation(line: 2895, column: 8, scope: !12923)
!12945 = !DILocation(line: 2895, column: 14, scope: !12923)
!12946 = !DILocation(line: 2896, column: 3, scope: !12923)
!12947 = !DILocation(line: 2897, column: 4, scope: !12918)
!12948 = !DILocation(line: 2897, column: 8, scope: !12918)
!12949 = !DILocation(line: 2897, column: 14, scope: !12918)
!12950 = !DILocation(line: 2902, column: 17, scope: !12919)
!12951 = !DILocation(line: 2902, column: 3, scope: !12919)
!12952 = !DILocation(line: 2902, column: 7, scope: !12919)
!12953 = !DILocation(line: 2902, column: 15, scope: !12919)
!12954 = !DILocation(line: 2903, column: 15, scope: !12919)
!12955 = !DILocation(line: 2903, column: 3, scope: !12919)
!12956 = !DILocation(line: 2903, column: 7, scope: !12919)
!12957 = !DILocation(line: 2903, column: 13, scope: !12919)
!12958 = !DILocation(line: 2904, column: 14, scope: !12919)
!12959 = !DILocation(line: 2904, column: 3, scope: !12919)
!12960 = !DILocation(line: 2904, column: 7, scope: !12919)
!12961 = !DILocation(line: 2904, column: 12, scope: !12919)
!12962 = !DILocation(line: 2905, column: 14, scope: !12919)
!12963 = !DILocation(line: 2905, column: 3, scope: !12919)
!12964 = !DILocation(line: 2905, column: 7, scope: !12919)
!12965 = !DILocation(line: 2905, column: 12, scope: !12919)
!12966 = !DILocation(line: 2906, column: 14, scope: !12919)
!12967 = !DILocation(line: 2906, column: 3, scope: !12919)
!12968 = !DILocation(line: 2906, column: 7, scope: !12919)
!12969 = !DILocation(line: 2906, column: 12, scope: !12919)
!12970 = !DILocation(line: 2907, column: 16, scope: !12919)
!12971 = !DILocation(line: 2907, column: 3, scope: !12919)
!12972 = !DILocation(line: 2907, column: 7, scope: !12919)
!12973 = !DILocation(line: 2907, column: 14, scope: !12919)
!12974 = !DILocation(line: 2908, column: 17, scope: !12919)
!12975 = !DILocation(line: 2908, column: 3, scope: !12919)
!12976 = !DILocation(line: 2908, column: 7, scope: !12919)
!12977 = !DILocation(line: 2908, column: 15, scope: !12919)
!12978 = !DILocation(line: 2909, column: 2, scope: !12919)
!12979 = !DILocation(line: 2909, column: 13, scope: !12848)
!12980 = !DILocation(line: 2909, column: 20, scope: !12848)
!12981 = !DILocation(line: 2909, column: 13, scope: !12849)
!12982 = !DILocation(line: 2913, column: 3, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12848, file: !3, line: 2909, column: 31)
!12984 = !DILocation(line: 2913, column: 7, scope: !12983)
!12985 = !DILocation(line: 2913, column: 13, scope: !12983)
!12986 = !DILocation(line: 2915, column: 17, scope: !12983)
!12987 = !DILocation(line: 2915, column: 3, scope: !12983)
!12988 = !DILocation(line: 2915, column: 7, scope: !12983)
!12989 = !DILocation(line: 2915, column: 15, scope: !12983)
!12990 = !DILocation(line: 2916, column: 15, scope: !12983)
!12991 = !DILocation(line: 2916, column: 3, scope: !12983)
!12992 = !DILocation(line: 2916, column: 7, scope: !12983)
!12993 = !DILocation(line: 2916, column: 13, scope: !12983)
!12994 = !DILocation(line: 2917, column: 14, scope: !12983)
!12995 = !DILocation(line: 2917, column: 3, scope: !12983)
!12996 = !DILocation(line: 2917, column: 7, scope: !12983)
!12997 = !DILocation(line: 2917, column: 12, scope: !12983)
!12998 = !DILocation(line: 2918, column: 14, scope: !12983)
!12999 = !DILocation(line: 2918, column: 3, scope: !12983)
!13000 = !DILocation(line: 2918, column: 7, scope: !12983)
!13001 = !DILocation(line: 2918, column: 12, scope: !12983)
!13002 = !DILocation(line: 2919, column: 14, scope: !12983)
!13003 = !DILocation(line: 2919, column: 3, scope: !12983)
!13004 = !DILocation(line: 2919, column: 7, scope: !12983)
!13005 = !DILocation(line: 2919, column: 12, scope: !12983)
!13006 = !DILocation(line: 2920, column: 16, scope: !12983)
!13007 = !DILocation(line: 2920, column: 3, scope: !12983)
!13008 = !DILocation(line: 2920, column: 7, scope: !12983)
!13009 = !DILocation(line: 2920, column: 14, scope: !12983)
!13010 = !DILocation(line: 2921, column: 17, scope: !12983)
!13011 = !DILocation(line: 2921, column: 3, scope: !12983)
!13012 = !DILocation(line: 2921, column: 7, scope: !12983)
!13013 = !DILocation(line: 2921, column: 15, scope: !12983)
!13014 = !DILocation(line: 2922, column: 2, scope: !12983)
!13015 = !DILocation(line: 2928, column: 7, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12847, file: !3, line: 2928, column: 7)
!13017 = !DILocation(line: 2928, column: 15, scope: !13016)
!13018 = !DILocation(line: 2928, column: 7, scope: !12847)
!13019 = !DILocation(line: 2929, column: 22, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13016, file: !3, line: 2928, column: 23)
!13021 = !DILocation(line: 2929, column: 4, scope: !13020)
!13022 = !DILocation(line: 2929, column: 8, scope: !13020)
!13023 = !DILocation(line: 2929, column: 20, scope: !13020)
!13024 = !DILocation(line: 2930, column: 20, scope: !13020)
!13025 = !DILocation(line: 2930, column: 4, scope: !13020)
!13026 = !DILocation(line: 2930, column: 8, scope: !13020)
!13027 = !DILocation(line: 2930, column: 18, scope: !13020)
!13028 = !DILocation(line: 2931, column: 19, scope: !13020)
!13029 = !DILocation(line: 2931, column: 4, scope: !13020)
!13030 = !DILocation(line: 2931, column: 8, scope: !13020)
!13031 = !DILocation(line: 2931, column: 17, scope: !13020)
!13032 = !DILocation(line: 2932, column: 19, scope: !13020)
!13033 = !DILocation(line: 2932, column: 4, scope: !13020)
!13034 = !DILocation(line: 2932, column: 8, scope: !13020)
!13035 = !DILocation(line: 2932, column: 17, scope: !13020)
!13036 = !DILocation(line: 2933, column: 19, scope: !13020)
!13037 = !DILocation(line: 2933, column: 4, scope: !13020)
!13038 = !DILocation(line: 2933, column: 8, scope: !13020)
!13039 = !DILocation(line: 2933, column: 17, scope: !13020)
!13040 = !DILocation(line: 2934, column: 4, scope: !13020)
!13041 = !DILocation(line: 2934, column: 8, scope: !13020)
!13042 = !DILocation(line: 2934, column: 14, scope: !13020)
!13043 = !DILocation(line: 2935, column: 3, scope: !13020)
!13044 = !DILocation(line: 2936, column: 4, scope: !13016)
!13045 = !DILocation(line: 2936, column: 8, scope: !13016)
!13046 = !DILocation(line: 2936, column: 14, scope: !13016)
!13047 = !DILocation(line: 2938, column: 17, scope: !12847)
!13048 = !DILocation(line: 2938, column: 3, scope: !12847)
!13049 = !DILocation(line: 2938, column: 7, scope: !12847)
!13050 = !DILocation(line: 2938, column: 15, scope: !12847)
!13051 = !DILocation(line: 2939, column: 15, scope: !12847)
!13052 = !DILocation(line: 2939, column: 3, scope: !12847)
!13053 = !DILocation(line: 2939, column: 7, scope: !12847)
!13054 = !DILocation(line: 2939, column: 13, scope: !12847)
!13055 = !DILocation(line: 2940, column: 14, scope: !12847)
!13056 = !DILocation(line: 2940, column: 3, scope: !12847)
!13057 = !DILocation(line: 2940, column: 7, scope: !12847)
!13058 = !DILocation(line: 2940, column: 12, scope: !12847)
!13059 = !DILocation(line: 2941, column: 14, scope: !12847)
!13060 = !DILocation(line: 2941, column: 3, scope: !12847)
!13061 = !DILocation(line: 2941, column: 7, scope: !12847)
!13062 = !DILocation(line: 2941, column: 12, scope: !12847)
!13063 = !DILocation(line: 2942, column: 14, scope: !12847)
!13064 = !DILocation(line: 2942, column: 3, scope: !12847)
!13065 = !DILocation(line: 2942, column: 7, scope: !12847)
!13066 = !DILocation(line: 2942, column: 12, scope: !12847)
!13067 = !DILocation(line: 2943, column: 16, scope: !12847)
!13068 = !DILocation(line: 2943, column: 3, scope: !12847)
!13069 = !DILocation(line: 2943, column: 7, scope: !12847)
!13070 = !DILocation(line: 2943, column: 14, scope: !12847)
!13071 = !DILocation(line: 2944, column: 17, scope: !12847)
!13072 = !DILocation(line: 2944, column: 3, scope: !12847)
!13073 = !DILocation(line: 2944, column: 7, scope: !12847)
!13074 = !DILocation(line: 2944, column: 15, scope: !12847)
!13075 = !DILocation(line: 2945, column: 39, scope: !12847)
!13076 = !DILocation(line: 30, column: 32, scope: !12843, inlinedAt: !12846)
!13077 = !DILocation(line: 30, column: 22, scope: !12843, inlinedAt: !12846)
!13078 = !DILocation(line: 82, column: 28, scope: !12836, inlinedAt: !12842)
!13079 = !DILocation(line: 189, column: 9, scope: !12828, inlinedAt: !12835)
!13080 = !DILocation(line: 2945, column: 3, scope: !12847)
!13081 = !DILocation(line: 2945, column: 7, scope: !12847)
!13082 = !DILocation(line: 2945, column: 17, scope: !12847)
!13083 = !DILocation(line: 2949, column: 17, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2949, column: 6)
!13085 = !DILocation(line: 2949, column: 21, scope: !13084)
!13086 = !DILocation(line: 2949, column: 6, scope: !13084)
!13087 = !DILocation(line: 2949, column: 6, scope: !12826)
!13088 = !DILocation(line: 2950, column: 15, scope: !13084)
!13089 = !DILocation(line: 2950, column: 19, scope: !13084)
!13090 = !DILocation(line: 2950, column: 26, scope: !13084)
!13091 = !DILocation(line: 2950, column: 3, scope: !13084)
!13092 = !DILocation(line: 2950, column: 7, scope: !13084)
!13093 = !DILocation(line: 2950, column: 13, scope: !13084)
!13094 = !DILocation(line: 2953, column: 15, scope: !12826)
!13095 = !DILocation(line: 2953, column: 20, scope: !12826)
!13096 = !DILocation(line: 2954, column: 3, scope: !12826)
!13097 = !DILocation(line: 2954, column: 7, scope: !12826)
!13098 = !DILocation(line: 2954, column: 14, scope: !12826)
!13099 = !DILocation(line: 2954, column: 27, scope: !12826)
!13100 = !DILocation(line: 2954, column: 31, scope: !12826)
!13101 = !DILocation(line: 2954, column: 38, scope: !12826)
!13102 = !DILocation(line: 2953, column: 2, scope: !12826)
!13103 = !DILocation(line: 2953, column: 6, scope: !12826)
!13104 = !DILocation(line: 2953, column: 13, scope: !12826)
!13105 = !DILocation(line: 2956, column: 10, scope: !12826)
!13106 = !DILocation(line: 2956, column: 14, scope: !12826)
!13107 = !DILocation(line: 2956, column: 2, scope: !12826)
!13108 = !DILocation(line: 2962, column: 7, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13110, file: !3, line: 2962, column: 7)
!13110 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2956, column: 23)
!13111 = !DILocation(line: 2962, column: 11, scope: !13109)
!13112 = !DILocation(line: 2962, column: 20, scope: !13109)
!13113 = !DILocation(line: 2962, column: 36, scope: !13109)
!13114 = !DILocation(line: 2962, column: 39, scope: !13109)
!13115 = !DILocation(line: 2962, column: 43, scope: !13109)
!13116 = !DILocation(line: 2962, column: 49, scope: !13109)
!13117 = !DILocation(line: 2962, column: 7, scope: !13110)
!13118 = !DILocation(line: 2963, column: 7, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13109, file: !3, line: 2962, column: 55)
!13120 = !DILocation(line: 2964, column: 4, scope: !13119)
!13121 = !DILocation(line: 2966, column: 32, scope: !13110)
!13122 = !DILocation(line: 2966, column: 19, scope: !13110)
!13123 = !DILocation(line: 2966, column: 3, scope: !13110)
!13124 = !DILocation(line: 2966, column: 7, scope: !13110)
!13125 = !DILocation(line: 2966, column: 17, scope: !13110)
!13126 = !DILocation(line: 2967, column: 3, scope: !13110)
!13127 = !DILocation(line: 3000, column: 19, scope: !13110)
!13128 = !DILocation(line: 3000, column: 25, scope: !13110)
!13129 = !DILocation(line: 3000, column: 33, scope: !13110)
!13130 = !DILocation(line: 3000, column: 3, scope: !13110)
!13131 = !DILocation(line: 3000, column: 7, scope: !13110)
!13132 = !DILocation(line: 3000, column: 17, scope: !13110)
!13133 = !DILocation(line: 3001, column: 3, scope: !13110)
!13134 = !DILocation(line: 3005, column: 3, scope: !13110)
!13135 = !DILocation(line: 3005, column: 7, scope: !13110)
!13136 = !DILocation(line: 3005, column: 17, scope: !13110)
!13137 = !DILocation(line: 3006, column: 2, scope: !13110)
!13138 = !DILocation(line: 3013, column: 2, scope: !12826)
!13139 = !DILocation(line: 3013, column: 6, scope: !12826)
!13140 = !DILocation(line: 3013, column: 12, scope: !12826)
!13141 = !DILocation(line: 3014, column: 6, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3014, column: 6)
!13143 = !DILocation(line: 3014, column: 12, scope: !13142)
!13144 = !DILocation(line: 3014, column: 30, scope: !13142)
!13145 = !DILocation(line: 3014, column: 6, scope: !12826)
!13146 = !DILocation(line: 3015, column: 3, scope: !13142)
!13147 = !DILocation(line: 3015, column: 7, scope: !13142)
!13148 = !DILocation(line: 3015, column: 13, scope: !13142)
!13149 = !DILocation(line: 3017, column: 2, scope: !12826)
!13150 = !DILocation(line: 3017, column: 6, scope: !12826)
!13151 = !DILocation(line: 3017, column: 12, scope: !12826)
!13152 = !DILocation(line: 3025, column: 23, scope: !12826)
!13153 = !DILocation(line: 3025, column: 2, scope: !12826)
!13154 = !DILocation(line: 3028, column: 6, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3028, column: 6)
!13156 = !DILocation(line: 3028, column: 10, scope: !13155)
!13157 = !DILocation(line: 3028, column: 19, scope: !13155)
!13158 = !DILocation(line: 3028, column: 35, scope: !13155)
!13159 = !DILocation(line: 3028, column: 38, scope: !13155)
!13160 = !DILocation(line: 3028, column: 43, scope: !13155)
!13161 = !DILocation(line: 3028, column: 52, scope: !13155)
!13162 = !DILocation(line: 3028, column: 6, scope: !12826)
!13163 = !DILocation(line: 3029, column: 6, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 3028, column: 58)
!13165 = !DILocation(line: 3030, column: 3, scope: !13164)
!13166 = !DILocation(line: 3034, column: 17, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3034, column: 6)
!13168 = !DILocation(line: 3034, column: 21, scope: !13167)
!13169 = !DILocation(line: 3034, column: 6, scope: !13167)
!13170 = !DILocation(line: 3034, column: 31, scope: !13167)
!13171 = !DILocation(line: 3034, column: 51, scope: !13167)
!13172 = !DILocation(line: 3034, column: 35, scope: !13167)
!13173 = !DILocation(line: 3034, column: 6, scope: !12826)
!13174 = !DILocation(line: 3035, column: 6, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 3034, column: 57)
!13176 = !DILocation(line: 3036, column: 3, scope: !13175)
!13177 = !DILocation(line: 3040, column: 7, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3040, column: 6)
!13179 = !DILocation(line: 3040, column: 14, scope: !13178)
!13180 = !DILocation(line: 3040, column: 22, scope: !13178)
!13181 = !DILocation(line: 3040, column: 44, scope: !13178)
!13182 = !DILocation(line: 3040, column: 26, scope: !13178)
!13183 = !DILocation(line: 3040, column: 6, scope: !12826)
!13184 = !DILocation(line: 3041, column: 6, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13178, file: !3, line: 3040, column: 49)
!13186 = !DILocation(line: 3042, column: 3, scope: !13185)
!13187 = !DILocation(line: 3045, column: 24, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3045, column: 6)
!13189 = !DILocation(line: 3045, column: 6, scope: !13188)
!13190 = !DILocation(line: 3045, column: 6, scope: !12826)
!13191 = !DILocalVariable(name: "multi_count", scope: !13192, file: !3, line: 3046, type: !7)
!13192 = distinct !DILexicalBlock(scope: !13188, file: !3, line: 3045, column: 29)
!13193 = !DILocation(line: 3046, column: 16, scope: !13192)
!13194 = !DILocation(line: 3046, column: 36, scope: !13192)
!13195 = !DILocation(line: 3046, column: 43, scope: !13192)
!13196 = !DILocation(line: 3046, column: 32, scope: !13192)
!13197 = !DILocation(line: 3051, column: 7, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13192, file: !3, line: 3051, column: 7)
!13199 = !DILocation(line: 3051, column: 22, scope: !13198)
!13200 = !DILocation(line: 3051, column: 27, scope: !13198)
!13201 = !DILocation(line: 3051, column: 19, scope: !13198)
!13202 = !DILocation(line: 3051, column: 7, scope: !13192)
!13203 = !DILocation(line: 3052, column: 4, scope: !13198)
!13204 = !DILocation(line: 3054, column: 2, scope: !13192)
!13205 = !DILocation(line: 3063, column: 6, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3063, column: 6)
!13207 = !DILocation(line: 3063, column: 10, scope: !13206)
!13208 = !DILocation(line: 3063, column: 18, scope: !13206)
!13209 = !DILocation(line: 3063, column: 42, scope: !13206)
!13210 = !DILocation(line: 3064, column: 6, scope: !13206)
!13211 = !DILocation(line: 3064, column: 10, scope: !13206)
!13212 = !DILocation(line: 3064, column: 18, scope: !13206)
!13213 = !DILocation(line: 3063, column: 6, scope: !12826)
!13214 = !DILocation(line: 3065, column: 9, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13206, file: !3, line: 3064, column: 39)
!13216 = !DILocation(line: 3065, column: 16, scope: !13215)
!13217 = !DILocation(line: 3065, column: 8, scope: !13215)
!13218 = !DILocation(line: 3065, column: 6, scope: !13215)
!13219 = !DILocation(line: 3066, column: 3, scope: !13215)
!13220 = !DILocation(line: 3084, column: 6, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 3084, column: 6)
!13222 = !DILocation(line: 3084, column: 10, scope: !13221)
!13223 = !DILocation(line: 3084, column: 18, scope: !13221)
!13224 = !DILocation(line: 3084, column: 26, scope: !13221)
!13225 = !DILocation(line: 3084, column: 29, scope: !13221)
!13226 = !DILocation(line: 3084, column: 33, scope: !13221)
!13227 = !DILocation(line: 3084, column: 41, scope: !13221)
!13228 = !DILocation(line: 3084, column: 49, scope: !13221)
!13229 = !DILocation(line: 3084, column: 53, scope: !13221)
!13230 = !DILocation(line: 3084, column: 6, scope: !12826)
!13231 = !DILocation(line: 3085, column: 9, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13221, file: !3, line: 3084, column: 71)
!13233 = !DILocation(line: 3085, column: 16, scope: !13232)
!13234 = !DILocation(line: 3085, column: 8, scope: !13232)
!13235 = !DILocation(line: 3085, column: 6, scope: !13232)
!13236 = !DILocation(line: 3086, column: 3, scope: !13232)
!13237 = !DILocation(line: 3089, column: 2, scope: !12826)
!13238 = !DILabel(scope: !12826, name: "invalid_fld", file: !3, line: 3091)
!13239 = !DILocation(line: 3091, column: 2, scope: !12826)
!13240 = !DILocation(line: 3092, column: 29, scope: !12826)
!13241 = !DILocation(line: 3092, column: 34, scope: !12826)
!13242 = !DILocation(line: 3092, column: 40, scope: !12826)
!13243 = !DILocation(line: 3092, column: 2, scope: !12826)
!13244 = !DILocation(line: 3093, column: 2, scope: !12826)
!13245 = !DILocation(line: 3094, column: 1, scope: !12826)
!13246 = distinct !DISubprogram(name: "ata_scsi_var_len_cdb_xlat", scope: !3, file: !3, line: 3916, type: !6667, scopeLine: 3917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13247 = !DILocalVariable(name: "p", arg: 1, scope: !13248, file: !12829, line: 171, type: !13251)
!13248 = distinct !DISubprogram(name: "__swab16p", scope: !12829, file: !12829, line: 171, type: !13249, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13249 = !DISubroutineType(types: !13250)
!13250 = !{!1727, !13251}
!13251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13252, size: 64)
!13252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!13253 = !DILocation(line: 171, column: 53, scope: !13248, inlinedAt: !13254)
!13254 = distinct !DILocation(line: 90, column: 9, scope: !13255, inlinedAt: !13260)
!13255 = distinct !DISubprogram(name: "__be16_to_cpup", scope: !12837, file: !12837, line: 88, type: !13256, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13256 = !DISubroutineType(types: !13257)
!13257 = !{!1727, !13258}
!13258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13259, size: 64)
!13259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6942)
!13260 = distinct !DILocation(line: 25, column: 9, scope: !13261, inlinedAt: !13264)
!13261 = distinct !DISubprogram(name: "get_unaligned_be16", scope: !10339, file: !10339, line: 23, type: !13262, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13262 = !DISubroutineType(types: !13263)
!13263 = !{!1726, !2823}
!13264 = distinct !DILocation(line: 3920, column: 17, scope: !13246)
!13265 = !DILocalVariable(name: "p", arg: 1, scope: !13255, file: !12837, line: 88, type: !13258)
!13266 = !DILocation(line: 88, column: 59, scope: !13255, inlinedAt: !13260)
!13267 = !DILocalVariable(name: "p", arg: 1, scope: !13261, file: !10339, line: 23, type: !2823)
!13268 = !DILocation(line: 23, column: 59, scope: !13261, inlinedAt: !13264)
!13269 = !DILocalVariable(name: "qc", arg: 1, scope: !13246, file: !3, line: 3916, type: !6450)
!13270 = !DILocation(line: 3916, column: 70, scope: !13246)
!13271 = !DILocalVariable(name: "scmd", scope: !13246, file: !3, line: 3918, type: !6139)
!13272 = !DILocation(line: 3918, column: 20, scope: !13246)
!13273 = !DILocation(line: 3918, column: 27, scope: !13246)
!13274 = !DILocation(line: 3918, column: 31, scope: !13246)
!13275 = !DILocalVariable(name: "cdb", scope: !13246, file: !3, line: 3919, type: !9839)
!13276 = !DILocation(line: 3919, column: 12, scope: !13246)
!13277 = !DILocation(line: 3919, column: 18, scope: !13246)
!13278 = !DILocation(line: 3919, column: 24, scope: !13246)
!13279 = !DILocalVariable(name: "sa", scope: !13246, file: !3, line: 3920, type: !9199)
!13280 = !DILocation(line: 3920, column: 12, scope: !13246)
!13281 = !DILocation(line: 3920, column: 37, scope: !13246)
!13282 = !DILocation(line: 25, column: 32, scope: !13261, inlinedAt: !13264)
!13283 = !DILocation(line: 25, column: 22, scope: !13261, inlinedAt: !13264)
!13284 = !DILocation(line: 90, column: 28, scope: !13255, inlinedAt: !13260)
!13285 = !DILocation(line: 176, column: 9, scope: !13248, inlinedAt: !13254)
!13286 = !DILocation(line: 3926, column: 6, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 3926, column: 6)
!13288 = !DILocation(line: 3926, column: 9, scope: !13287)
!13289 = !DILocation(line: 3926, column: 6, scope: !13246)
!13290 = !DILocation(line: 3927, column: 29, scope: !13287)
!13291 = !DILocation(line: 3927, column: 10, scope: !13287)
!13292 = !DILocation(line: 3927, column: 3, scope: !13287)
!13293 = !DILocation(line: 3930, column: 2, scope: !13246)
!13294 = !DILocation(line: 3931, column: 1, scope: !13246)
!13295 = distinct !DISubprogram(name: "ata_scsi_mode_select_xlat", scope: !3, file: !3, line: 3689, type: !6667, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13296 = !DILocalVariable(name: "qc", arg: 1, scope: !13295, file: !3, line: 3689, type: !6450)
!13297 = !DILocation(line: 3689, column: 70, scope: !13295)
!13298 = !DILocalVariable(name: "scmd", scope: !13295, file: !3, line: 3691, type: !6139)
!13299 = !DILocation(line: 3691, column: 20, scope: !13295)
!13300 = !DILocation(line: 3691, column: 27, scope: !13295)
!13301 = !DILocation(line: 3691, column: 31, scope: !13295)
!13302 = !DILocalVariable(name: "cdb", scope: !13295, file: !3, line: 3692, type: !9839)
!13303 = !DILocation(line: 3692, column: 12, scope: !13295)
!13304 = !DILocation(line: 3692, column: 18, scope: !13295)
!13305 = !DILocation(line: 3692, column: 24, scope: !13295)
!13306 = !DILocalVariable(name: "pg", scope: !13295, file: !3, line: 3693, type: !1203)
!13307 = !DILocation(line: 3693, column: 5, scope: !13295)
!13308 = !DILocalVariable(name: "spg", scope: !13295, file: !3, line: 3693, type: !1203)
!13309 = !DILocation(line: 3693, column: 9, scope: !13295)
!13310 = !DILocalVariable(name: "six_byte", scope: !13295, file: !3, line: 3694, type: !7)
!13311 = !DILocation(line: 3694, column: 11, scope: !13295)
!13312 = !DILocalVariable(name: "pg_len", scope: !13295, file: !3, line: 3694, type: !7)
!13313 = !DILocation(line: 3694, column: 21, scope: !13295)
!13314 = !DILocalVariable(name: "hdr_len", scope: !13295, file: !3, line: 3694, type: !7)
!13315 = !DILocation(line: 3694, column: 29, scope: !13295)
!13316 = !DILocalVariable(name: "bd_len", scope: !13295, file: !3, line: 3694, type: !7)
!13317 = !DILocation(line: 3694, column: 38, scope: !13295)
!13318 = !DILocalVariable(name: "len", scope: !13295, file: !3, line: 3695, type: !211)
!13319 = !DILocation(line: 3695, column: 6, scope: !13295)
!13320 = !DILocalVariable(name: "fp", scope: !13295, file: !3, line: 3696, type: !1726)
!13321 = !DILocation(line: 3696, column: 6, scope: !13295)
!13322 = !DILocalVariable(name: "bp", scope: !13295, file: !3, line: 3697, type: !1203)
!13323 = !DILocation(line: 3697, column: 5, scope: !13295)
!13324 = !DILocalVariable(name: "buffer", scope: !13295, file: !3, line: 3698, type: !3551)
!13325 = !DILocation(line: 3698, column: 5, scope: !13295)
!13326 = !DILocalVariable(name: "p", scope: !13295, file: !3, line: 3699, type: !9839)
!13327 = !DILocation(line: 3699, column: 12, scope: !13295)
!13328 = !DILocation(line: 3699, column: 16, scope: !13295)
!13329 = !DILocation(line: 3703, column: 14, scope: !13295)
!13330 = !DILocation(line: 3703, column: 21, scope: !13295)
!13331 = !DILocation(line: 3703, column: 11, scope: !13295)
!13332 = !DILocation(line: 3704, column: 6, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3704, column: 6)
!13334 = !DILocation(line: 3704, column: 6, scope: !13295)
!13335 = !DILocation(line: 3705, column: 7, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 3705, column: 7)
!13337 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3704, column: 16)
!13338 = !DILocation(line: 3705, column: 13, scope: !13336)
!13339 = !DILocation(line: 3705, column: 21, scope: !13336)
!13340 = !DILocation(line: 3705, column: 7, scope: !13337)
!13341 = !DILocation(line: 3706, column: 7, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13336, file: !3, line: 3705, column: 26)
!13343 = !DILocation(line: 3707, column: 4, scope: !13342)
!13344 = !DILocation(line: 3710, column: 9, scope: !13337)
!13345 = !DILocation(line: 3710, column: 7, scope: !13337)
!13346 = !DILocation(line: 3711, column: 11, scope: !13337)
!13347 = !DILocation(line: 3712, column: 2, scope: !13337)
!13348 = !DILocation(line: 3713, column: 7, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13350, file: !3, line: 3713, column: 7)
!13350 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3712, column: 9)
!13351 = !DILocation(line: 3713, column: 13, scope: !13349)
!13352 = !DILocation(line: 3713, column: 21, scope: !13349)
!13353 = !DILocation(line: 3713, column: 7, scope: !13350)
!13354 = !DILocation(line: 3714, column: 7, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 3713, column: 26)
!13356 = !DILocation(line: 3715, column: 4, scope: !13355)
!13357 = !DILocation(line: 3718, column: 10, scope: !13350)
!13358 = !DILocation(line: 3718, column: 17, scope: !13350)
!13359 = !DILocation(line: 3718, column: 25, scope: !13350)
!13360 = !DILocation(line: 3718, column: 23, scope: !13350)
!13361 = !DILocation(line: 3718, column: 7, scope: !13350)
!13362 = !DILocation(line: 3719, column: 11, scope: !13350)
!13363 = !DILocation(line: 3723, column: 7, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3723, column: 6)
!13365 = !DILocation(line: 3723, column: 14, scope: !13364)
!13366 = !DILocation(line: 3723, column: 22, scope: !13364)
!13367 = !DILocation(line: 3723, column: 6, scope: !13295)
!13368 = !DILocation(line: 3724, column: 6, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 3723, column: 31)
!13370 = !DILocation(line: 3725, column: 9, scope: !13369)
!13371 = !DILocation(line: 3725, column: 16, scope: !13369)
!13372 = !DILocation(line: 3725, column: 8, scope: !13369)
!13373 = !DILocation(line: 3725, column: 6, scope: !13369)
!13374 = !DILocation(line: 3726, column: 3, scope: !13369)
!13375 = !DILocation(line: 3730, column: 21, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3730, column: 6)
!13377 = !DILocation(line: 3730, column: 7, scope: !13376)
!13378 = !DILocation(line: 3730, column: 27, scope: !13376)
!13379 = !DILocation(line: 3730, column: 42, scope: !13376)
!13380 = !DILocation(line: 3730, column: 30, scope: !13376)
!13381 = !DILocation(line: 3730, column: 49, scope: !13376)
!13382 = !DILocation(line: 3730, column: 58, scope: !13376)
!13383 = !DILocation(line: 3730, column: 56, scope: !13376)
!13384 = !DILocation(line: 3730, column: 6, scope: !13295)
!13385 = !DILocation(line: 3731, column: 3, scope: !13376)
!13386 = !DILocation(line: 3734, column: 6, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3734, column: 6)
!13388 = !DILocation(line: 3734, column: 12, scope: !13387)
!13389 = !DILocation(line: 3734, column: 10, scope: !13387)
!13390 = !DILocation(line: 3734, column: 6, scope: !13295)
!13391 = !DILocation(line: 3735, column: 3, scope: !13387)
!13392 = !DILocation(line: 3737, column: 37, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3737, column: 6)
!13394 = !DILocation(line: 3737, column: 25, scope: !13393)
!13395 = !DILocation(line: 3737, column: 58, scope: !13393)
!13396 = !DILocation(line: 3737, column: 44, scope: !13393)
!13397 = !DILocation(line: 3738, column: 11, scope: !13393)
!13398 = !DILocation(line: 3737, column: 7, scope: !13393)
!13399 = !DILocation(line: 3737, column: 6, scope: !13295)
!13400 = !DILocation(line: 3739, column: 3, scope: !13393)
!13401 = !DILocation(line: 3741, column: 6, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3741, column: 6)
!13403 = !DILocation(line: 3741, column: 6, scope: !13295)
!13404 = !DILocation(line: 3742, column: 12, scope: !13402)
!13405 = !DILocation(line: 3742, column: 10, scope: !13402)
!13406 = !DILocation(line: 3742, column: 3, scope: !13402)
!13407 = !DILocation(line: 3744, column: 13, scope: !13402)
!13408 = !DILocation(line: 3744, column: 18, scope: !13402)
!13409 = !DILocation(line: 3744, column: 26, scope: !13402)
!13410 = !DILocation(line: 3744, column: 24, scope: !13402)
!13411 = !DILocation(line: 3744, column: 10, scope: !13402)
!13412 = !DILocation(line: 3746, column: 9, scope: !13295)
!13413 = !DILocation(line: 3746, column: 6, scope: !13295)
!13414 = !DILocation(line: 3747, column: 7, scope: !13295)
!13415 = !DILocation(line: 3747, column: 4, scope: !13295)
!13416 = !DILocation(line: 3748, column: 6, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3748, column: 6)
!13418 = !DILocation(line: 3748, column: 12, scope: !13417)
!13419 = !DILocation(line: 3748, column: 10, scope: !13417)
!13420 = !DILocation(line: 3748, column: 6, scope: !13295)
!13421 = !DILocation(line: 3749, column: 3, scope: !13417)
!13422 = !DILocation(line: 3750, column: 6, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3750, column: 6)
!13424 = !DILocation(line: 3750, column: 13, scope: !13423)
!13425 = !DILocation(line: 3750, column: 18, scope: !13423)
!13426 = !DILocation(line: 3750, column: 21, scope: !13423)
!13427 = !DILocation(line: 3750, column: 28, scope: !13423)
!13428 = !DILocation(line: 3750, column: 6, scope: !13295)
!13429 = !DILocation(line: 3751, column: 9, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13423, file: !3, line: 3750, column: 34)
!13431 = !DILocation(line: 3751, column: 8, scope: !13430)
!13432 = !DILocation(line: 3751, column: 6, scope: !13430)
!13433 = !DILocation(line: 3752, column: 9, scope: !13430)
!13434 = !DILocation(line: 3752, column: 18, scope: !13430)
!13435 = !DILocation(line: 3752, column: 16, scope: !13430)
!13436 = !DILocation(line: 3752, column: 6, scope: !13430)
!13437 = !DILocation(line: 3753, column: 3, scope: !13430)
!13438 = !DILocation(line: 3756, column: 9, scope: !13295)
!13439 = !DILocation(line: 3756, column: 6, scope: !13295)
!13440 = !DILocation(line: 3757, column: 7, scope: !13295)
!13441 = !DILocation(line: 3757, column: 4, scope: !13295)
!13442 = !DILocation(line: 3758, column: 6, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3758, column: 6)
!13444 = !DILocation(line: 3758, column: 10, scope: !13443)
!13445 = !DILocation(line: 3758, column: 6, scope: !13295)
!13446 = !DILocation(line: 3759, column: 3, scope: !13443)
!13447 = !DILocation(line: 3762, column: 7, scope: !13295)
!13448 = !DILocation(line: 3762, column: 12, scope: !13295)
!13449 = !DILocation(line: 3762, column: 5, scope: !13295)
!13450 = !DILocation(line: 3763, column: 6, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3763, column: 6)
!13452 = !DILocation(line: 3763, column: 11, scope: !13451)
!13453 = !DILocation(line: 3763, column: 6, scope: !13295)
!13454 = !DILocation(line: 3764, column: 7, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !3, line: 3764, column: 7)
!13456 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 3763, column: 19)
!13457 = !DILocation(line: 3764, column: 11, scope: !13455)
!13458 = !DILocation(line: 3764, column: 7, scope: !13456)
!13459 = !DILocation(line: 3765, column: 4, scope: !13455)
!13460 = !DILocation(line: 3767, column: 9, scope: !13456)
!13461 = !DILocation(line: 3767, column: 7, scope: !13456)
!13462 = !DILocation(line: 3768, column: 13, scope: !13456)
!13463 = !DILocation(line: 3768, column: 18, scope: !13456)
!13464 = !DILocation(line: 3768, column: 26, scope: !13456)
!13465 = !DILocation(line: 3768, column: 24, scope: !13456)
!13466 = !DILocation(line: 3768, column: 10, scope: !13456)
!13467 = !DILocation(line: 3769, column: 5, scope: !13456)
!13468 = !DILocation(line: 3770, column: 7, scope: !13456)
!13469 = !DILocation(line: 3771, column: 2, scope: !13456)
!13470 = !DILocation(line: 3772, column: 7, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 3772, column: 7)
!13472 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 3771, column: 9)
!13473 = !DILocation(line: 3772, column: 11, scope: !13471)
!13474 = !DILocation(line: 3772, column: 7, scope: !13472)
!13475 = !DILocation(line: 3773, column: 4, scope: !13471)
!13476 = !DILocation(line: 3775, column: 7, scope: !13472)
!13477 = !DILocation(line: 3776, column: 12, scope: !13472)
!13478 = !DILocation(line: 3776, column: 10, scope: !13472)
!13479 = !DILocation(line: 3777, column: 5, scope: !13472)
!13480 = !DILocation(line: 3778, column: 7, scope: !13472)
!13481 = !DILocation(line: 3785, column: 6, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3785, column: 6)
!13483 = !DILocation(line: 3785, column: 10, scope: !13482)
!13484 = !DILocation(line: 3785, column: 14, scope: !13482)
!13485 = !DILocation(line: 3785, column: 18, scope: !13482)
!13486 = !DILocation(line: 3785, column: 6, scope: !13295)
!13487 = !DILocation(line: 3786, column: 9, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13482, file: !3, line: 3785, column: 38)
!13489 = !DILocation(line: 3786, column: 14, scope: !13488)
!13490 = !DILocation(line: 3786, column: 8, scope: !13488)
!13491 = !DILocation(line: 3786, column: 6, scope: !13488)
!13492 = !DILocation(line: 3787, column: 9, scope: !13488)
!13493 = !DILocation(line: 3787, column: 19, scope: !13488)
!13494 = !DILocation(line: 3787, column: 17, scope: !13488)
!13495 = !DILocation(line: 3787, column: 6, scope: !13488)
!13496 = !DILocation(line: 3788, column: 3, scope: !13488)
!13497 = !DILocation(line: 3790, column: 6, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3790, column: 6)
!13499 = !DILocation(line: 3790, column: 15, scope: !13498)
!13500 = !DILocation(line: 3790, column: 13, scope: !13498)
!13501 = !DILocation(line: 3790, column: 6, scope: !13295)
!13502 = !DILocation(line: 3791, column: 3, scope: !13498)
!13503 = !DILocation(line: 3793, column: 10, scope: !13295)
!13504 = !DILocation(line: 3793, column: 2, scope: !13295)
!13505 = !DILocation(line: 3795, column: 27, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 3795, column: 7)
!13507 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3793, column: 14)
!13508 = !DILocation(line: 3795, column: 31, scope: !13506)
!13509 = !DILocation(line: 3795, column: 34, scope: !13506)
!13510 = !DILocation(line: 3795, column: 7, scope: !13506)
!13511 = !DILocation(line: 3795, column: 47, scope: !13506)
!13512 = !DILocation(line: 3795, column: 7, scope: !13507)
!13513 = !DILocation(line: 3796, column: 10, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 3795, column: 52)
!13515 = !DILocation(line: 3796, column: 20, scope: !13514)
!13516 = !DILocation(line: 3796, column: 18, scope: !13514)
!13517 = !DILocation(line: 3796, column: 7, scope: !13514)
!13518 = !DILocation(line: 3797, column: 4, scope: !13514)
!13519 = !DILocation(line: 3799, column: 3, scope: !13507)
!13520 = !DILocation(line: 3801, column: 27, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 3801, column: 7)
!13522 = !DILocation(line: 3801, column: 31, scope: !13521)
!13523 = !DILocation(line: 3801, column: 34, scope: !13521)
!13524 = !DILocation(line: 3801, column: 7, scope: !13521)
!13525 = !DILocation(line: 3801, column: 47, scope: !13521)
!13526 = !DILocation(line: 3801, column: 7, scope: !13507)
!13527 = !DILocation(line: 3802, column: 10, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13521, file: !3, line: 3801, column: 52)
!13529 = !DILocation(line: 3802, column: 20, scope: !13528)
!13530 = !DILocation(line: 3802, column: 18, scope: !13528)
!13531 = !DILocation(line: 3802, column: 7, scope: !13528)
!13532 = !DILocation(line: 3803, column: 4, scope: !13528)
!13533 = !DILocation(line: 3805, column: 4, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13521, file: !3, line: 3804, column: 10)
!13535 = !DILocation(line: 3809, column: 8, scope: !13507)
!13536 = !DILocation(line: 3809, column: 17, scope: !13507)
!13537 = !DILocation(line: 3809, column: 15, scope: !13507)
!13538 = !DILocation(line: 3809, column: 6, scope: !13507)
!13539 = !DILocation(line: 3810, column: 3, scope: !13507)
!13540 = !DILocation(line: 3817, column: 6, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 3817, column: 6)
!13542 = !DILocation(line: 3817, column: 12, scope: !13541)
!13543 = !DILocation(line: 3817, column: 10, scope: !13541)
!13544 = !DILocation(line: 3817, column: 6, scope: !13295)
!13545 = !DILocation(line: 3818, column: 3, scope: !13541)
!13546 = !DILocation(line: 3820, column: 2, scope: !13295)
!13547 = !DILabel(scope: !13295, name: "invalid_fld", file: !3, line: 3822)
!13548 = !DILocation(line: 3822, column: 2, scope: !13295)
!13549 = !DILocation(line: 3823, column: 29, scope: !13295)
!13550 = !DILocation(line: 3823, column: 33, scope: !13295)
!13551 = !DILocation(line: 3823, column: 38, scope: !13295)
!13552 = !DILocation(line: 3823, column: 44, scope: !13295)
!13553 = !DILocation(line: 3823, column: 48, scope: !13295)
!13554 = !DILocation(line: 3823, column: 2, scope: !13295)
!13555 = !DILocation(line: 3824, column: 2, scope: !13295)
!13556 = !DILabel(scope: !13295, name: "invalid_param", file: !3, line: 3826)
!13557 = !DILocation(line: 3826, column: 2, scope: !13295)
!13558 = !DILocation(line: 3827, column: 33, scope: !13295)
!13559 = !DILocation(line: 3827, column: 37, scope: !13295)
!13560 = !DILocation(line: 3827, column: 42, scope: !13295)
!13561 = !DILocation(line: 3827, column: 48, scope: !13295)
!13562 = !DILocation(line: 3827, column: 2, scope: !13295)
!13563 = !DILocation(line: 3828, column: 2, scope: !13295)
!13564 = !DILabel(scope: !13295, name: "invalid_param_len", file: !3, line: 3830)
!13565 = !DILocation(line: 3830, column: 2, scope: !13295)
!13566 = !DILocation(line: 3832, column: 21, scope: !13295)
!13567 = !DILocation(line: 3832, column: 25, scope: !13295)
!13568 = !DILocation(line: 3832, column: 30, scope: !13295)
!13569 = !DILocation(line: 3832, column: 2, scope: !13295)
!13570 = !DILocation(line: 3833, column: 2, scope: !13295)
!13571 = !DILabel(scope: !13295, name: "skip", file: !3, line: 3835)
!13572 = !DILocation(line: 3835, column: 2, scope: !13295)
!13573 = !DILocation(line: 3836, column: 2, scope: !13295)
!13574 = !DILocation(line: 3836, column: 8, scope: !13295)
!13575 = !DILocation(line: 3836, column: 15, scope: !13295)
!13576 = !DILocation(line: 3837, column: 2, scope: !13295)
!13577 = !DILocation(line: 3838, column: 1, scope: !13295)
!13578 = distinct !DISubprogram(name: "ata_scsi_zbc_in_xlat", scope: !3, file: !3, line: 3406, type: !6667, scopeLine: 3407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13579 = !DILocalVariable(name: "qc", arg: 1, scope: !13578, file: !3, line: 3406, type: !6450)
!13580 = !DILocation(line: 3406, column: 65, scope: !13578)
!13581 = !DILocalVariable(name: "tf", scope: !13578, file: !3, line: 3408, type: !6695)
!13582 = !DILocation(line: 3408, column: 23, scope: !13578)
!13583 = !DILocation(line: 3408, column: 29, scope: !13578)
!13584 = !DILocation(line: 3408, column: 33, scope: !13578)
!13585 = !DILocalVariable(name: "scmd", scope: !13578, file: !3, line: 3409, type: !6139)
!13586 = !DILocation(line: 3409, column: 20, scope: !13578)
!13587 = !DILocation(line: 3409, column: 27, scope: !13578)
!13588 = !DILocation(line: 3409, column: 31, scope: !13578)
!13589 = !DILocalVariable(name: "cdb", scope: !13578, file: !3, line: 3410, type: !9839)
!13590 = !DILocation(line: 3410, column: 12, scope: !13578)
!13591 = !DILocation(line: 3410, column: 18, scope: !13578)
!13592 = !DILocation(line: 3410, column: 24, scope: !13578)
!13593 = !DILocalVariable(name: "sect", scope: !13578, file: !3, line: 3411, type: !1726)
!13594 = !DILocation(line: 3411, column: 6, scope: !13578)
!13595 = !DILocalVariable(name: "fp", scope: !13578, file: !3, line: 3411, type: !1726)
!13596 = !DILocation(line: 3411, column: 12, scope: !13578)
!13597 = !DILocalVariable(name: "sa", scope: !13578, file: !3, line: 3412, type: !1203)
!13598 = !DILocation(line: 3412, column: 5, scope: !13578)
!13599 = !DILocalVariable(name: "options", scope: !13578, file: !3, line: 3412, type: !1203)
!13600 = !DILocation(line: 3412, column: 9, scope: !13578)
!13601 = !DILocalVariable(name: "bp", scope: !13578, file: !3, line: 3412, type: !1203)
!13602 = !DILocation(line: 3412, column: 18, scope: !13578)
!13603 = !DILocalVariable(name: "block", scope: !13578, file: !3, line: 3413, type: !976)
!13604 = !DILocation(line: 3413, column: 6, scope: !13578)
!13605 = !DILocalVariable(name: "n_block", scope: !13578, file: !3, line: 3414, type: !1049)
!13606 = !DILocation(line: 3414, column: 6, scope: !13578)
!13607 = !DILocation(line: 3416, column: 6, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 3416, column: 6)
!13609 = !DILocation(line: 3416, column: 6, scope: !13578)
!13610 = !DILocation(line: 3417, column: 3, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13608, file: !3, line: 3416, column: 36)
!13612 = !DILocation(line: 3419, column: 6, scope: !13611)
!13613 = !DILocation(line: 3420, column: 3, scope: !13611)
!13614 = !DILocation(line: 3422, column: 18, scope: !13578)
!13615 = !DILocation(line: 3422, column: 2, scope: !13578)
!13616 = !DILocation(line: 3423, column: 6, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 3423, column: 6)
!13618 = !DILocation(line: 3423, column: 30, scope: !13617)
!13619 = !DILocation(line: 3423, column: 17, scope: !13617)
!13620 = !DILocation(line: 3423, column: 14, scope: !13617)
!13621 = !DILocation(line: 3423, column: 6, scope: !13578)
!13622 = !DILocation(line: 3424, column: 3, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13617, file: !3, line: 3423, column: 37)
!13624 = !DILocation(line: 3426, column: 3, scope: !13623)
!13625 = !DILocation(line: 3428, column: 7, scope: !13578)
!13626 = !DILocation(line: 3428, column: 14, scope: !13578)
!13627 = !DILocation(line: 3428, column: 5, scope: !13578)
!13628 = !DILocation(line: 3429, column: 6, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 3429, column: 6)
!13630 = !DILocation(line: 3429, column: 9, scope: !13629)
!13631 = !DILocation(line: 3429, column: 6, scope: !13578)
!13632 = !DILocation(line: 3430, column: 3, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 3429, column: 29)
!13634 = !DILocation(line: 3431, column: 6, scope: !13633)
!13635 = !DILocation(line: 3432, column: 3, scope: !13633)
!13636 = !DILocation(line: 3438, column: 7, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 3438, column: 6)
!13638 = !DILocation(line: 3438, column: 15, scope: !13637)
!13639 = !DILocation(line: 3438, column: 22, scope: !13637)
!13640 = !DILocation(line: 3438, column: 31, scope: !13637)
!13641 = !DILocation(line: 3438, column: 34, scope: !13637)
!13642 = !DILocation(line: 3438, column: 42, scope: !13637)
!13643 = !DILocation(line: 3438, column: 48, scope: !13637)
!13644 = !DILocation(line: 3438, column: 52, scope: !13637)
!13645 = !DILocation(line: 3438, column: 60, scope: !13637)
!13646 = !DILocation(line: 3438, column: 6, scope: !13578)
!13647 = !DILocation(line: 3439, column: 3, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 3438, column: 68)
!13649 = !DILocation(line: 3440, column: 3, scope: !13648)
!13650 = !DILocation(line: 3442, column: 9, scope: !13578)
!13651 = !DILocation(line: 3442, column: 17, scope: !13578)
!13652 = !DILocation(line: 3442, column: 7, scope: !13578)
!13653 = !DILocation(line: 3443, column: 12, scope: !13578)
!13654 = !DILocation(line: 3443, column: 20, scope: !13578)
!13655 = !DILocation(line: 3443, column: 10, scope: !13578)
!13656 = !DILocation(line: 3445, column: 22, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 3445, column: 6)
!13658 = !DILocation(line: 3445, column: 26, scope: !13657)
!13659 = !DILocation(line: 3445, column: 6, scope: !13657)
!13660 = !DILocation(line: 3445, column: 31, scope: !13657)
!13661 = !DILocation(line: 3446, column: 38, scope: !13657)
!13662 = !DILocation(line: 3446, column: 42, scope: !13657)
!13663 = !DILocation(line: 3446, column: 6, scope: !13657)
!13664 = !DILocation(line: 3445, column: 6, scope: !13578)
!13665 = !DILocation(line: 3447, column: 3, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13657, file: !3, line: 3446, column: 48)
!13667 = !DILocation(line: 3447, column: 7, scope: !13666)
!13668 = !DILocation(line: 3447, column: 16, scope: !13666)
!13669 = !DILocation(line: 3448, column: 3, scope: !13666)
!13670 = !DILocation(line: 3448, column: 7, scope: !13666)
!13671 = !DILocation(line: 3448, column: 15, scope: !13666)
!13672 = !DILocation(line: 3449, column: 3, scope: !13666)
!13673 = !DILocation(line: 3449, column: 7, scope: !13666)
!13674 = !DILocation(line: 3449, column: 17, scope: !13666)
!13675 = !DILocation(line: 3450, column: 15, scope: !13666)
!13676 = !DILocation(line: 3450, column: 19, scope: !13666)
!13677 = !DILocation(line: 3450, column: 26, scope: !13666)
!13678 = !DILocation(line: 3450, column: 3, scope: !13666)
!13679 = !DILocation(line: 3450, column: 7, scope: !13666)
!13680 = !DILocation(line: 3450, column: 13, scope: !13666)
!13681 = !DILocation(line: 3451, column: 17, scope: !13666)
!13682 = !DILocation(line: 3451, column: 22, scope: !13666)
!13683 = !DILocation(line: 3451, column: 3, scope: !13666)
!13684 = !DILocation(line: 3451, column: 7, scope: !13666)
!13685 = !DILocation(line: 3451, column: 15, scope: !13666)
!13686 = !DILocation(line: 3452, column: 22, scope: !13666)
!13687 = !DILocation(line: 3452, column: 27, scope: !13666)
!13688 = !DILocation(line: 3452, column: 33, scope: !13666)
!13689 = !DILocation(line: 3452, column: 21, scope: !13666)
!13690 = !DILocation(line: 3452, column: 3, scope: !13666)
!13691 = !DILocation(line: 3452, column: 7, scope: !13666)
!13692 = !DILocation(line: 3452, column: 19, scope: !13666)
!13693 = !DILocation(line: 3453, column: 58, scope: !13666)
!13694 = !DILocation(line: 3453, column: 66, scope: !13666)
!13695 = !DILocation(line: 3453, column: 55, scope: !13666)
!13696 = !DILocation(line: 3453, column: 3, scope: !13666)
!13697 = !DILocation(line: 3453, column: 7, scope: !13666)
!13698 = !DILocation(line: 3453, column: 17, scope: !13666)
!13699 = !DILocation(line: 3454, column: 2, scope: !13666)
!13700 = !DILocation(line: 3455, column: 3, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13657, file: !3, line: 3454, column: 9)
!13702 = !DILocation(line: 3455, column: 7, scope: !13701)
!13703 = !DILocation(line: 3455, column: 15, scope: !13701)
!13704 = !DILocation(line: 3456, column: 3, scope: !13701)
!13705 = !DILocation(line: 3456, column: 7, scope: !13701)
!13706 = !DILocation(line: 3456, column: 15, scope: !13701)
!13707 = !DILocation(line: 3457, column: 3, scope: !13701)
!13708 = !DILocation(line: 3457, column: 7, scope: !13701)
!13709 = !DILocation(line: 3457, column: 16, scope: !13701)
!13710 = !DILocation(line: 3458, column: 21, scope: !13701)
!13711 = !DILocation(line: 3458, column: 3, scope: !13701)
!13712 = !DILocation(line: 3458, column: 7, scope: !13701)
!13713 = !DILocation(line: 3458, column: 19, scope: !13701)
!13714 = !DILocation(line: 3459, column: 20, scope: !13701)
!13715 = !DILocation(line: 3459, column: 25, scope: !13701)
!13716 = !DILocation(line: 3459, column: 31, scope: !13701)
!13717 = !DILocation(line: 3459, column: 19, scope: !13701)
!13718 = !DILocation(line: 3459, column: 3, scope: !13701)
!13719 = !DILocation(line: 3459, column: 7, scope: !13701)
!13720 = !DILocation(line: 3459, column: 17, scope: !13701)
!13721 = !DILocation(line: 3460, column: 15, scope: !13701)
!13722 = !DILocation(line: 3460, column: 20, scope: !13701)
!13723 = !DILocation(line: 3460, column: 3, scope: !13701)
!13724 = !DILocation(line: 3460, column: 7, scope: !13701)
!13725 = !DILocation(line: 3460, column: 13, scope: !13701)
!13726 = !DILocation(line: 3462, column: 2, scope: !13578)
!13727 = !DILocation(line: 3462, column: 6, scope: !13578)
!13728 = !DILocation(line: 3462, column: 13, scope: !13578)
!13729 = !DILocation(line: 3463, column: 14, scope: !13578)
!13730 = !DILocation(line: 3463, column: 20, scope: !13578)
!13731 = !DILocation(line: 3463, column: 27, scope: !13578)
!13732 = !DILocation(line: 3463, column: 13, scope: !13578)
!13733 = !DILocation(line: 3463, column: 2, scope: !13578)
!13734 = !DILocation(line: 3463, column: 6, scope: !13578)
!13735 = !DILocation(line: 3463, column: 11, scope: !13578)
!13736 = !DILocation(line: 3464, column: 14, scope: !13578)
!13737 = !DILocation(line: 3464, column: 20, scope: !13578)
!13738 = !DILocation(line: 3464, column: 26, scope: !13578)
!13739 = !DILocation(line: 3464, column: 13, scope: !13578)
!13740 = !DILocation(line: 3464, column: 2, scope: !13578)
!13741 = !DILocation(line: 3464, column: 6, scope: !13578)
!13742 = !DILocation(line: 3464, column: 11, scope: !13578)
!13743 = !DILocation(line: 3465, column: 13, scope: !13578)
!13744 = !DILocation(line: 3465, column: 19, scope: !13578)
!13745 = !DILocation(line: 3465, column: 2, scope: !13578)
!13746 = !DILocation(line: 3465, column: 6, scope: !13578)
!13747 = !DILocation(line: 3465, column: 11, scope: !13578)
!13748 = !DILocation(line: 3466, column: 18, scope: !13578)
!13749 = !DILocation(line: 3466, column: 24, scope: !13578)
!13750 = !DILocation(line: 3466, column: 31, scope: !13578)
!13751 = !DILocation(line: 3466, column: 17, scope: !13578)
!13752 = !DILocation(line: 3466, column: 2, scope: !13578)
!13753 = !DILocation(line: 3466, column: 6, scope: !13578)
!13754 = !DILocation(line: 3466, column: 15, scope: !13578)
!13755 = !DILocation(line: 3467, column: 18, scope: !13578)
!13756 = !DILocation(line: 3467, column: 24, scope: !13578)
!13757 = !DILocation(line: 3467, column: 31, scope: !13578)
!13758 = !DILocation(line: 3467, column: 17, scope: !13578)
!13759 = !DILocation(line: 3467, column: 2, scope: !13578)
!13760 = !DILocation(line: 3467, column: 6, scope: !13578)
!13761 = !DILocation(line: 3467, column: 15, scope: !13578)
!13762 = !DILocation(line: 3468, column: 18, scope: !13578)
!13763 = !DILocation(line: 3468, column: 24, scope: !13578)
!13764 = !DILocation(line: 3468, column: 31, scope: !13578)
!13765 = !DILocation(line: 3468, column: 17, scope: !13578)
!13766 = !DILocation(line: 3468, column: 2, scope: !13578)
!13767 = !DILocation(line: 3468, column: 6, scope: !13578)
!13768 = !DILocation(line: 3468, column: 15, scope: !13578)
!13769 = !DILocation(line: 3470, column: 2, scope: !13578)
!13770 = !DILocation(line: 3470, column: 6, scope: !13578)
!13771 = !DILocation(line: 3470, column: 12, scope: !13578)
!13772 = !DILocation(line: 3471, column: 2, scope: !13578)
!13773 = !DILocation(line: 3471, column: 6, scope: !13578)
!13774 = !DILocation(line: 3471, column: 12, scope: !13578)
!13775 = !DILocation(line: 3473, column: 23, scope: !13578)
!13776 = !DILocation(line: 3473, column: 2, scope: !13578)
!13777 = !DILocation(line: 3475, column: 2, scope: !13578)
!13778 = !DILocation(line: 3475, column: 6, scope: !13578)
!13779 = !DILocation(line: 3475, column: 18, scope: !13578)
!13780 = !DILocation(line: 3477, column: 2, scope: !13578)
!13781 = !DILabel(scope: !13578, name: "invalid_fld", file: !3, line: 3479)
!13782 = !DILocation(line: 3479, column: 1, scope: !13578)
!13783 = !DILocation(line: 3480, column: 29, scope: !13578)
!13784 = !DILocation(line: 3480, column: 33, scope: !13578)
!13785 = !DILocation(line: 3480, column: 38, scope: !13578)
!13786 = !DILocation(line: 3480, column: 44, scope: !13578)
!13787 = !DILocation(line: 3480, column: 48, scope: !13578)
!13788 = !DILocation(line: 3480, column: 2, scope: !13578)
!13789 = !DILocation(line: 3481, column: 2, scope: !13578)
!13790 = !DILabel(scope: !13578, name: "invalid_param_len", file: !3, line: 3483)
!13791 = !DILocation(line: 3483, column: 1, scope: !13578)
!13792 = !DILocation(line: 3485, column: 21, scope: !13578)
!13793 = !DILocation(line: 3485, column: 25, scope: !13578)
!13794 = !DILocation(line: 3485, column: 30, scope: !13578)
!13795 = !DILocation(line: 3485, column: 2, scope: !13578)
!13796 = !DILocation(line: 3486, column: 2, scope: !13578)
!13797 = !DILocation(line: 3487, column: 1, scope: !13578)
!13798 = distinct !DISubprogram(name: "ata_scsi_zbc_out_xlat", scope: !3, file: !3, line: 3489, type: !6667, scopeLine: 3490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13799 = !DILocalVariable(name: "qc", arg: 1, scope: !13798, file: !3, line: 3489, type: !6450)
!13800 = !DILocation(line: 3489, column: 66, scope: !13798)
!13801 = !DILocalVariable(name: "tf", scope: !13798, file: !3, line: 3491, type: !6695)
!13802 = !DILocation(line: 3491, column: 23, scope: !13798)
!13803 = !DILocation(line: 3491, column: 29, scope: !13798)
!13804 = !DILocation(line: 3491, column: 33, scope: !13798)
!13805 = !DILocalVariable(name: "scmd", scope: !13798, file: !3, line: 3492, type: !6139)
!13806 = !DILocation(line: 3492, column: 20, scope: !13798)
!13807 = !DILocation(line: 3492, column: 27, scope: !13798)
!13808 = !DILocation(line: 3492, column: 31, scope: !13798)
!13809 = !DILocalVariable(name: "dev", scope: !13798, file: !3, line: 3493, type: !6455)
!13810 = !DILocation(line: 3493, column: 21, scope: !13798)
!13811 = !DILocation(line: 3493, column: 27, scope: !13798)
!13812 = !DILocation(line: 3493, column: 31, scope: !13798)
!13813 = !DILocalVariable(name: "cdb", scope: !13798, file: !3, line: 3494, type: !9839)
!13814 = !DILocation(line: 3494, column: 12, scope: !13798)
!13815 = !DILocation(line: 3494, column: 18, scope: !13798)
!13816 = !DILocation(line: 3494, column: 24, scope: !13798)
!13817 = !DILocalVariable(name: "all", scope: !13798, file: !3, line: 3495, type: !1203)
!13818 = !DILocation(line: 3495, column: 5, scope: !13798)
!13819 = !DILocalVariable(name: "sa", scope: !13798, file: !3, line: 3495, type: !1203)
!13820 = !DILocation(line: 3495, column: 10, scope: !13798)
!13821 = !DILocalVariable(name: "block", scope: !13798, file: !3, line: 3496, type: !976)
!13822 = !DILocation(line: 3496, column: 6, scope: !13798)
!13823 = !DILocalVariable(name: "n_block", scope: !13798, file: !3, line: 3497, type: !1049)
!13824 = !DILocation(line: 3497, column: 6, scope: !13798)
!13825 = !DILocalVariable(name: "fp", scope: !13798, file: !3, line: 3498, type: !1726)
!13826 = !DILocation(line: 3498, column: 6, scope: !13798)
!13827 = !DILocation(line: 3500, column: 6, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 3500, column: 6)
!13829 = !DILocation(line: 3500, column: 6, scope: !13798)
!13830 = !DILocation(line: 3501, column: 6, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13828, file: !3, line: 3500, column: 36)
!13832 = !DILocation(line: 3502, column: 3, scope: !13831)
!13833 = !DILocation(line: 3505, column: 7, scope: !13798)
!13834 = !DILocation(line: 3505, column: 14, scope: !13798)
!13835 = !DILocation(line: 3505, column: 5, scope: !13798)
!13836 = !DILocation(line: 3506, column: 7, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 3506, column: 6)
!13838 = !DILocation(line: 3506, column: 10, scope: !13837)
!13839 = !DILocation(line: 3506, column: 28, scope: !13837)
!13840 = !DILocation(line: 3506, column: 32, scope: !13837)
!13841 = !DILocation(line: 3506, column: 35, scope: !13837)
!13842 = !DILocation(line: 3506, column: 54, scope: !13837)
!13843 = !DILocation(line: 3507, column: 7, scope: !13837)
!13844 = !DILocation(line: 3507, column: 10, scope: !13837)
!13845 = !DILocation(line: 3507, column: 27, scope: !13837)
!13846 = !DILocation(line: 3507, column: 31, scope: !13837)
!13847 = !DILocation(line: 3507, column: 34, scope: !13837)
!13848 = !DILocation(line: 3506, column: 6, scope: !13798)
!13849 = !DILocation(line: 3508, column: 6, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13837, file: !3, line: 3507, column: 62)
!13851 = !DILocation(line: 3509, column: 3, scope: !13850)
!13852 = !DILocation(line: 3512, column: 18, scope: !13798)
!13853 = !DILocation(line: 3512, column: 2, scope: !13798)
!13854 = !DILocation(line: 3513, column: 6, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 3513, column: 6)
!13856 = !DILocation(line: 3513, column: 6, scope: !13798)
!13857 = !DILocation(line: 3517, column: 3, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 3513, column: 15)
!13859 = !DILocation(line: 3520, column: 8, scope: !13798)
!13860 = !DILocation(line: 3520, column: 16, scope: !13798)
!13861 = !DILocation(line: 3520, column: 6, scope: !13798)
!13862 = !DILocation(line: 3521, column: 6, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 3521, column: 6)
!13864 = !DILocation(line: 3521, column: 6, scope: !13798)
!13865 = !DILocation(line: 3525, column: 9, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 3521, column: 11)
!13867 = !DILocation(line: 3526, column: 2, scope: !13866)
!13868 = !DILocation(line: 3526, column: 13, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 3526, column: 13)
!13870 = !DILocation(line: 3526, column: 22, scope: !13869)
!13871 = !DILocation(line: 3526, column: 27, scope: !13869)
!13872 = !DILocation(line: 3526, column: 19, scope: !13869)
!13873 = !DILocation(line: 3526, column: 13, scope: !13863)
!13874 = !DILocation(line: 3530, column: 6, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13869, file: !3, line: 3526, column: 38)
!13876 = !DILocation(line: 3531, column: 3, scope: !13875)
!13877 = !DILocation(line: 3534, column: 22, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 3534, column: 6)
!13879 = !DILocation(line: 3534, column: 26, scope: !13878)
!13880 = !DILocation(line: 3534, column: 6, scope: !13878)
!13881 = !DILocation(line: 3534, column: 31, scope: !13878)
!13882 = !DILocation(line: 3535, column: 39, scope: !13878)
!13883 = !DILocation(line: 3535, column: 43, scope: !13878)
!13884 = !DILocation(line: 3535, column: 6, scope: !13878)
!13885 = !DILocation(line: 3534, column: 6, scope: !13798)
!13886 = !DILocation(line: 3536, column: 3, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13878, file: !3, line: 3535, column: 49)
!13888 = !DILocation(line: 3536, column: 7, scope: !13887)
!13889 = !DILocation(line: 3536, column: 16, scope: !13887)
!13890 = !DILocation(line: 3537, column: 3, scope: !13887)
!13891 = !DILocation(line: 3537, column: 7, scope: !13887)
!13892 = !DILocation(line: 3537, column: 15, scope: !13887)
!13893 = !DILocation(line: 3538, column: 3, scope: !13887)
!13894 = !DILocation(line: 3538, column: 7, scope: !13887)
!13895 = !DILocation(line: 3538, column: 15, scope: !13887)
!13896 = !DILocation(line: 3539, column: 15, scope: !13887)
!13897 = !DILocation(line: 3539, column: 19, scope: !13887)
!13898 = !DILocation(line: 3539, column: 26, scope: !13887)
!13899 = !DILocation(line: 3539, column: 3, scope: !13887)
!13900 = !DILocation(line: 3539, column: 7, scope: !13887)
!13901 = !DILocation(line: 3539, column: 13, scope: !13887)
!13902 = !DILocation(line: 3540, column: 19, scope: !13887)
!13903 = !DILocation(line: 3540, column: 30, scope: !13887)
!13904 = !DILocation(line: 3540, column: 25, scope: !13887)
!13905 = !DILocation(line: 3540, column: 34, scope: !13887)
!13906 = !DILocation(line: 3540, column: 22, scope: !13887)
!13907 = !DILocation(line: 3540, column: 3, scope: !13887)
!13908 = !DILocation(line: 3540, column: 7, scope: !13887)
!13909 = !DILocation(line: 3540, column: 17, scope: !13887)
!13910 = !DILocation(line: 3541, column: 2, scope: !13887)
!13911 = !DILocation(line: 3542, column: 3, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13878, file: !3, line: 3541, column: 9)
!13913 = !DILocation(line: 3542, column: 7, scope: !13912)
!13914 = !DILocation(line: 3542, column: 16, scope: !13912)
!13915 = !DILocation(line: 3543, column: 3, scope: !13912)
!13916 = !DILocation(line: 3543, column: 7, scope: !13912)
!13917 = !DILocation(line: 3543, column: 15, scope: !13912)
!13918 = !DILocation(line: 3544, column: 17, scope: !13912)
!13919 = !DILocation(line: 3544, column: 3, scope: !13912)
!13920 = !DILocation(line: 3544, column: 7, scope: !13912)
!13921 = !DILocation(line: 3544, column: 15, scope: !13912)
!13922 = !DILocation(line: 3545, column: 21, scope: !13912)
!13923 = !DILocation(line: 3545, column: 3, scope: !13912)
!13924 = !DILocation(line: 3545, column: 7, scope: !13912)
!13925 = !DILocation(line: 3545, column: 19, scope: !13912)
!13926 = !DILocation(line: 3547, column: 14, scope: !13798)
!13927 = !DILocation(line: 3547, column: 20, scope: !13798)
!13928 = !DILocation(line: 3547, column: 27, scope: !13798)
!13929 = !DILocation(line: 3547, column: 13, scope: !13798)
!13930 = !DILocation(line: 3547, column: 2, scope: !13798)
!13931 = !DILocation(line: 3547, column: 6, scope: !13798)
!13932 = !DILocation(line: 3547, column: 11, scope: !13798)
!13933 = !DILocation(line: 3548, column: 14, scope: !13798)
!13934 = !DILocation(line: 3548, column: 20, scope: !13798)
!13935 = !DILocation(line: 3548, column: 26, scope: !13798)
!13936 = !DILocation(line: 3548, column: 13, scope: !13798)
!13937 = !DILocation(line: 3548, column: 2, scope: !13798)
!13938 = !DILocation(line: 3548, column: 6, scope: !13798)
!13939 = !DILocation(line: 3548, column: 11, scope: !13798)
!13940 = !DILocation(line: 3549, column: 13, scope: !13798)
!13941 = !DILocation(line: 3549, column: 19, scope: !13798)
!13942 = !DILocation(line: 3549, column: 2, scope: !13798)
!13943 = !DILocation(line: 3549, column: 6, scope: !13798)
!13944 = !DILocation(line: 3549, column: 11, scope: !13798)
!13945 = !DILocation(line: 3550, column: 18, scope: !13798)
!13946 = !DILocation(line: 3550, column: 24, scope: !13798)
!13947 = !DILocation(line: 3550, column: 31, scope: !13798)
!13948 = !DILocation(line: 3550, column: 17, scope: !13798)
!13949 = !DILocation(line: 3550, column: 2, scope: !13798)
!13950 = !DILocation(line: 3550, column: 6, scope: !13798)
!13951 = !DILocation(line: 3550, column: 15, scope: !13798)
!13952 = !DILocation(line: 3551, column: 18, scope: !13798)
!13953 = !DILocation(line: 3551, column: 24, scope: !13798)
!13954 = !DILocation(line: 3551, column: 31, scope: !13798)
!13955 = !DILocation(line: 3551, column: 17, scope: !13798)
!13956 = !DILocation(line: 3551, column: 2, scope: !13798)
!13957 = !DILocation(line: 3551, column: 6, scope: !13798)
!13958 = !DILocation(line: 3551, column: 15, scope: !13798)
!13959 = !DILocation(line: 3552, column: 18, scope: !13798)
!13960 = !DILocation(line: 3552, column: 24, scope: !13798)
!13961 = !DILocation(line: 3552, column: 31, scope: !13798)
!13962 = !DILocation(line: 3552, column: 17, scope: !13798)
!13963 = !DILocation(line: 3552, column: 2, scope: !13798)
!13964 = !DILocation(line: 3552, column: 6, scope: !13798)
!13965 = !DILocation(line: 3552, column: 15, scope: !13798)
!13966 = !DILocation(line: 3553, column: 2, scope: !13798)
!13967 = !DILocation(line: 3553, column: 6, scope: !13798)
!13968 = !DILocation(line: 3553, column: 13, scope: !13798)
!13969 = !DILocation(line: 3554, column: 2, scope: !13798)
!13970 = !DILocation(line: 3554, column: 6, scope: !13798)
!13971 = !DILocation(line: 3554, column: 12, scope: !13798)
!13972 = !DILocation(line: 3556, column: 2, scope: !13798)
!13973 = !DILabel(scope: !13798, name: "invalid_fld", file: !3, line: 3558)
!13974 = !DILocation(line: 3558, column: 2, scope: !13798)
!13975 = !DILocation(line: 3559, column: 29, scope: !13798)
!13976 = !DILocation(line: 3559, column: 33, scope: !13798)
!13977 = !DILocation(line: 3559, column: 38, scope: !13798)
!13978 = !DILocation(line: 3559, column: 44, scope: !13798)
!13979 = !DILocation(line: 3559, column: 2, scope: !13798)
!13980 = !DILocation(line: 3560, column: 2, scope: !13798)
!13981 = !DILabel(scope: !13798, name: "invalid_param_len", file: !3, line: 3561)
!13982 = !DILocation(line: 3561, column: 1, scope: !13798)
!13983 = !DILocation(line: 3563, column: 21, scope: !13798)
!13984 = !DILocation(line: 3563, column: 25, scope: !13798)
!13985 = !DILocation(line: 3563, column: 30, scope: !13798)
!13986 = !DILocation(line: 3563, column: 2, scope: !13798)
!13987 = !DILocation(line: 3564, column: 2, scope: !13798)
!13988 = !DILocation(line: 3565, column: 1, scope: !13798)
!13989 = distinct !DISubprogram(name: "ata_scsi_security_inout_xlat", scope: !3, file: !3, line: 3850, type: !6667, scopeLine: 3851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!13990 = !DILocation(line: 184, column: 53, scope: !12828, inlinedAt: !13991)
!13991 = distinct !DILocation(line: 82, column: 9, scope: !12836, inlinedAt: !13992)
!13992 = distinct !DILocation(line: 30, column: 9, scope: !12843, inlinedAt: !13993)
!13993 = distinct !DILocation(line: 3858, column: 12, scope: !13989)
!13994 = !DILocation(line: 80, column: 59, scope: !12836, inlinedAt: !13992)
!13995 = !DILocation(line: 28, column: 59, scope: !12843, inlinedAt: !13993)
!13996 = !DILocation(line: 171, column: 53, scope: !13248, inlinedAt: !13997)
!13997 = distinct !DILocation(line: 90, column: 9, scope: !13255, inlinedAt: !13998)
!13998 = distinct !DILocation(line: 25, column: 9, scope: !13261, inlinedAt: !13999)
!13999 = distinct !DILocation(line: 3857, column: 13, scope: !13989)
!14000 = !DILocation(line: 88, column: 59, scope: !13255, inlinedAt: !13998)
!14001 = !DILocation(line: 23, column: 59, scope: !13261, inlinedAt: !13999)
!14002 = !DILocalVariable(name: "qc", arg: 1, scope: !13989, file: !3, line: 3850, type: !6450)
!14003 = !DILocation(line: 3850, column: 73, scope: !13989)
!14004 = !DILocalVariable(name: "scmd", scope: !13989, file: !3, line: 3852, type: !6139)
!14005 = !DILocation(line: 3852, column: 20, scope: !13989)
!14006 = !DILocation(line: 3852, column: 27, scope: !13989)
!14007 = !DILocation(line: 3852, column: 31, scope: !13989)
!14008 = !DILocalVariable(name: "cdb", scope: !13989, file: !3, line: 3853, type: !9839)
!14009 = !DILocation(line: 3853, column: 12, scope: !13989)
!14010 = !DILocation(line: 3853, column: 18, scope: !13989)
!14011 = !DILocation(line: 3853, column: 24, scope: !13989)
!14012 = !DILocalVariable(name: "tf", scope: !13989, file: !3, line: 3854, type: !6695)
!14013 = !DILocation(line: 3854, column: 23, scope: !13989)
!14014 = !DILocation(line: 3854, column: 29, scope: !13989)
!14015 = !DILocation(line: 3854, column: 33, scope: !13989)
!14016 = !DILocalVariable(name: "secp", scope: !13989, file: !3, line: 3855, type: !1203)
!14017 = !DILocation(line: 3855, column: 5, scope: !13989)
!14018 = !DILocation(line: 3855, column: 12, scope: !13989)
!14019 = !DILocalVariable(name: "send", scope: !13989, file: !3, line: 3856, type: !1482)
!14020 = !DILocation(line: 3856, column: 7, scope: !13989)
!14021 = !DILocation(line: 3856, column: 15, scope: !13989)
!14022 = !DILocation(line: 3856, column: 22, scope: !13989)
!14023 = !DILocalVariable(name: "spsp", scope: !13989, file: !3, line: 3857, type: !1726)
!14024 = !DILocation(line: 3857, column: 6, scope: !13989)
!14025 = !DILocation(line: 3857, column: 33, scope: !13989)
!14026 = !DILocation(line: 25, column: 32, scope: !13261, inlinedAt: !13999)
!14027 = !DILocation(line: 25, column: 22, scope: !13261, inlinedAt: !13999)
!14028 = !DILocation(line: 90, column: 28, scope: !13255, inlinedAt: !13998)
!14029 = !DILocation(line: 176, column: 9, scope: !13248, inlinedAt: !13997)
!14030 = !DILocalVariable(name: "len", scope: !13989, file: !3, line: 3858, type: !1049)
!14031 = !DILocation(line: 3858, column: 6, scope: !13989)
!14032 = !DILocation(line: 3858, column: 32, scope: !13989)
!14033 = !DILocation(line: 30, column: 32, scope: !12843, inlinedAt: !13993)
!14034 = !DILocation(line: 30, column: 22, scope: !12843, inlinedAt: !13993)
!14035 = !DILocation(line: 82, column: 28, scope: !12836, inlinedAt: !13992)
!14036 = !DILocation(line: 189, column: 9, scope: !12828, inlinedAt: !13991)
!14037 = !DILocalVariable(name: "dma", scope: !13989, file: !3, line: 3859, type: !1482)
!14038 = !DILocation(line: 3859, column: 7, scope: !13989)
!14039 = !DILocation(line: 3859, column: 15, scope: !13989)
!14040 = !DILocation(line: 3859, column: 19, scope: !13989)
!14041 = !DILocation(line: 3859, column: 24, scope: !13989)
!14042 = !DILocation(line: 3859, column: 30, scope: !13989)
!14043 = !DILocation(line: 3859, column: 13, scope: !13989)
!14044 = !DILocation(line: 3864, column: 6, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !13989, file: !3, line: 3864, column: 6)
!14046 = !DILocation(line: 3864, column: 11, scope: !14045)
!14047 = !DILocation(line: 3864, column: 6, scope: !13989)
!14048 = !DILocation(line: 3865, column: 30, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 3864, column: 20)
!14050 = !DILocation(line: 3865, column: 34, scope: !14049)
!14051 = !DILocation(line: 3865, column: 39, scope: !14049)
!14052 = !DILocation(line: 3865, column: 3, scope: !14049)
!14053 = !DILocation(line: 3866, column: 3, scope: !14049)
!14054 = !DILocation(line: 3869, column: 6, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !13989, file: !3, line: 3869, column: 6)
!14056 = !DILocation(line: 3869, column: 13, scope: !14055)
!14057 = !DILocation(line: 3869, column: 6, scope: !13989)
!14058 = !DILocation(line: 3870, column: 7, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !3, line: 3870, column: 7)
!14060 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 3869, column: 18)
!14061 = !DILocation(line: 3870, column: 11, scope: !14059)
!14062 = !DILocation(line: 3870, column: 7, scope: !14060)
!14063 = !DILocation(line: 3871, column: 31, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14059, file: !3, line: 3870, column: 21)
!14065 = !DILocation(line: 3871, column: 35, scope: !14064)
!14066 = !DILocation(line: 3871, column: 40, scope: !14064)
!14067 = !DILocation(line: 3871, column: 4, scope: !14064)
!14068 = !DILocation(line: 3872, column: 4, scope: !14064)
!14069 = !DILocation(line: 3874, column: 2, scope: !14060)
!14070 = !DILocation(line: 3875, column: 7, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !3, line: 3875, column: 7)
!14072 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 3874, column: 9)
!14073 = !DILocation(line: 3875, column: 11, scope: !14071)
!14074 = !DILocation(line: 3875, column: 7, scope: !14072)
!14075 = !DILocation(line: 3876, column: 31, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 3875, column: 25)
!14077 = !DILocation(line: 3876, column: 35, scope: !14076)
!14078 = !DILocation(line: 3876, column: 40, scope: !14076)
!14079 = !DILocation(line: 3876, column: 4, scope: !14076)
!14080 = !DILocation(line: 3877, column: 4, scope: !14076)
!14081 = !DILocation(line: 3881, column: 10, scope: !14072)
!14082 = !DILocation(line: 3881, column: 14, scope: !14072)
!14083 = !DILocation(line: 3881, column: 21, scope: !14072)
!14084 = !DILocation(line: 3881, column: 7, scope: !14072)
!14085 = !DILocation(line: 3884, column: 17, scope: !13989)
!14086 = !DILocation(line: 3884, column: 2, scope: !13989)
!14087 = !DILocation(line: 3884, column: 6, scope: !13989)
!14088 = !DILocation(line: 3884, column: 15, scope: !13989)
!14089 = !DILocation(line: 3885, column: 2, scope: !13989)
!14090 = !DILocation(line: 3885, column: 6, scope: !13989)
!14091 = !DILocation(line: 3885, column: 12, scope: !13989)
!14092 = !DILocation(line: 3886, column: 6, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !13989, file: !3, line: 3886, column: 6)
!14094 = !DILocation(line: 3886, column: 6, scope: !13989)
!14095 = !DILocation(line: 3887, column: 3, scope: !14093)
!14096 = !DILocation(line: 3887, column: 7, scope: !14093)
!14097 = !DILocation(line: 3887, column: 13, scope: !14093)
!14098 = !DILocation(line: 3888, column: 36, scope: !13989)
!14099 = !DILocation(line: 3888, column: 41, scope: !13989)
!14100 = !DILocation(line: 3888, column: 47, scope: !13989)
!14101 = !DILocation(line: 3888, column: 16, scope: !13989)
!14102 = !DILocation(line: 3888, column: 2, scope: !13989)
!14103 = !DILocation(line: 3888, column: 6, scope: !13989)
!14104 = !DILocation(line: 3888, column: 14, scope: !13989)
!14105 = !DILocation(line: 3889, column: 16, scope: !13989)
!14106 = !DILocation(line: 3889, column: 2, scope: !13989)
!14107 = !DILocation(line: 3889, column: 6, scope: !13989)
!14108 = !DILocation(line: 3889, column: 14, scope: !13989)
!14109 = !DILocation(line: 3890, column: 13, scope: !13989)
!14110 = !DILocation(line: 3890, column: 18, scope: !13989)
!14111 = !DILocation(line: 3890, column: 2, scope: !13989)
!14112 = !DILocation(line: 3890, column: 6, scope: !13989)
!14113 = !DILocation(line: 3890, column: 11, scope: !13989)
!14114 = !DILocation(line: 3891, column: 13, scope: !13989)
!14115 = !DILocation(line: 3891, column: 18, scope: !13989)
!14116 = !DILocation(line: 3891, column: 2, scope: !13989)
!14117 = !DILocation(line: 3891, column: 6, scope: !13989)
!14118 = !DILocation(line: 3891, column: 11, scope: !13989)
!14119 = !DILocation(line: 3893, column: 6, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !13989, file: !3, line: 3893, column: 6)
!14121 = !DILocation(line: 3893, column: 6, scope: !13989)
!14122 = !DILocation(line: 3894, column: 15, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 3893, column: 11)
!14124 = !DILocation(line: 3894, column: 19, scope: !14123)
!14125 = !DILocation(line: 3894, column: 3, scope: !14123)
!14126 = !DILocation(line: 3894, column: 7, scope: !14123)
!14127 = !DILocation(line: 3894, column: 13, scope: !14123)
!14128 = !DILocation(line: 3895, column: 14, scope: !14123)
!14129 = !DILocation(line: 3895, column: 18, scope: !14123)
!14130 = !DILocation(line: 3895, column: 3, scope: !14123)
!14131 = !DILocation(line: 3895, column: 7, scope: !14123)
!14132 = !DILocation(line: 3895, column: 12, scope: !14123)
!14133 = !DILocation(line: 3896, column: 2, scope: !14123)
!14134 = !DILocation(line: 3897, column: 8, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !3, line: 3897, column: 7)
!14136 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 3896, column: 9)
!14137 = !DILocation(line: 3897, column: 7, scope: !14136)
!14138 = !DILocation(line: 3898, column: 4, scope: !14135)
!14139 = !DILocation(line: 3898, column: 8, scope: !14135)
!14140 = !DILocation(line: 3898, column: 13, scope: !14135)
!14141 = !DILocation(line: 3901, column: 23, scope: !13989)
!14142 = !DILocation(line: 3901, column: 2, scope: !13989)
!14143 = !DILocation(line: 3902, column: 2, scope: !13989)
!14144 = !DILocation(line: 3903, column: 1, scope: !13989)
!14145 = distinct !DISubprogram(name: "ata_scsi_start_stop_xlat", scope: !3, file: !3, line: 1168, type: !6667, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14146 = !DILocalVariable(name: "qc", arg: 1, scope: !14145, file: !3, line: 1168, type: !6450)
!14147 = !DILocation(line: 1168, column: 69, scope: !14145)
!14148 = !DILocalVariable(name: "scmd", scope: !14145, file: !3, line: 1170, type: !6139)
!14149 = !DILocation(line: 1170, column: 20, scope: !14145)
!14150 = !DILocation(line: 1170, column: 27, scope: !14145)
!14151 = !DILocation(line: 1170, column: 31, scope: !14145)
!14152 = !DILocalVariable(name: "tf", scope: !14145, file: !3, line: 1171, type: !6695)
!14153 = !DILocation(line: 1171, column: 23, scope: !14145)
!14154 = !DILocation(line: 1171, column: 29, scope: !14145)
!14155 = !DILocation(line: 1171, column: 33, scope: !14145)
!14156 = !DILocalVariable(name: "cdb", scope: !14145, file: !3, line: 1172, type: !9839)
!14157 = !DILocation(line: 1172, column: 12, scope: !14145)
!14158 = !DILocation(line: 1172, column: 18, scope: !14145)
!14159 = !DILocation(line: 1172, column: 24, scope: !14145)
!14160 = !DILocalVariable(name: "fp", scope: !14145, file: !3, line: 1173, type: !1726)
!14161 = !DILocation(line: 1173, column: 6, scope: !14145)
!14162 = !DILocalVariable(name: "bp", scope: !14145, file: !3, line: 1174, type: !1203)
!14163 = !DILocation(line: 1174, column: 5, scope: !14145)
!14164 = !DILocation(line: 1176, column: 6, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 1176, column: 6)
!14166 = !DILocation(line: 1176, column: 12, scope: !14165)
!14167 = !DILocation(line: 1176, column: 20, scope: !14165)
!14168 = !DILocation(line: 1176, column: 6, scope: !14145)
!14169 = !DILocation(line: 1177, column: 6, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14165, file: !3, line: 1176, column: 25)
!14171 = !DILocation(line: 1178, column: 3, scope: !14170)
!14172 = !DILocation(line: 1181, column: 2, scope: !14145)
!14173 = !DILocation(line: 1181, column: 6, scope: !14145)
!14174 = !DILocation(line: 1181, column: 12, scope: !14145)
!14175 = !DILocation(line: 1182, column: 2, scope: !14145)
!14176 = !DILocation(line: 1182, column: 6, scope: !14145)
!14177 = !DILocation(line: 1182, column: 15, scope: !14145)
!14178 = !DILocation(line: 1183, column: 6, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 1183, column: 6)
!14180 = !DILocation(line: 1183, column: 13, scope: !14179)
!14181 = !DILocation(line: 1183, column: 6, scope: !14145)
!14182 = !DILocation(line: 1185, column: 2, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 1183, column: 20)
!14184 = !DILocation(line: 1186, column: 6, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 1186, column: 6)
!14186 = !DILocation(line: 1186, column: 13, scope: !14185)
!14187 = !DILocation(line: 1186, column: 6, scope: !14145)
!14188 = !DILocation(line: 1187, column: 6, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14185, file: !3, line: 1186, column: 20)
!14190 = !DILocation(line: 1188, column: 6, scope: !14189)
!14191 = !DILocation(line: 1189, column: 3, scope: !14189)
!14192 = !DILocation(line: 1191, column: 8, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 1191, column: 6)
!14194 = !DILocation(line: 1191, column: 15, scope: !14193)
!14195 = !DILocation(line: 1191, column: 21, scope: !14193)
!14196 = !DILocation(line: 1191, column: 28, scope: !14193)
!14197 = !DILocation(line: 1191, column: 6, scope: !14145)
!14198 = !DILocation(line: 1192, column: 6, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14193, file: !3, line: 1191, column: 34)
!14200 = !DILocation(line: 1193, column: 6, scope: !14199)
!14201 = !DILocation(line: 1194, column: 3, scope: !14199)
!14202 = !DILocation(line: 1197, column: 6, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 1197, column: 6)
!14204 = !DILocation(line: 1197, column: 13, scope: !14203)
!14205 = !DILocation(line: 1197, column: 6, scope: !14145)
!14206 = !DILocation(line: 1198, column: 3, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14203, file: !3, line: 1197, column: 20)
!14208 = !DILocation(line: 1198, column: 7, scope: !14207)
!14209 = !DILocation(line: 1198, column: 13, scope: !14207)
!14210 = !DILocation(line: 1200, column: 7, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14207, file: !3, line: 1200, column: 7)
!14212 = !DILocation(line: 1200, column: 11, scope: !14211)
!14213 = !DILocation(line: 1200, column: 16, scope: !14211)
!14214 = !DILocation(line: 1200, column: 22, scope: !14211)
!14215 = !DILocation(line: 1200, column: 7, scope: !14207)
!14216 = !DILocation(line: 1201, column: 4, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 1200, column: 39)
!14218 = !DILocation(line: 1201, column: 8, scope: !14217)
!14219 = !DILocation(line: 1201, column: 14, scope: !14217)
!14220 = !DILocation(line: 1203, column: 4, scope: !14217)
!14221 = !DILocation(line: 1203, column: 8, scope: !14217)
!14222 = !DILocation(line: 1203, column: 13, scope: !14217)
!14223 = !DILocation(line: 1204, column: 4, scope: !14217)
!14224 = !DILocation(line: 1204, column: 8, scope: !14217)
!14225 = !DILocation(line: 1204, column: 13, scope: !14217)
!14226 = !DILocation(line: 1205, column: 4, scope: !14217)
!14227 = !DILocation(line: 1205, column: 8, scope: !14217)
!14228 = !DILocation(line: 1205, column: 13, scope: !14217)
!14229 = !DILocation(line: 1206, column: 4, scope: !14217)
!14230 = !DILocation(line: 1206, column: 8, scope: !14217)
!14231 = !DILocation(line: 1206, column: 15, scope: !14217)
!14232 = !DILocation(line: 1207, column: 3, scope: !14217)
!14233 = !DILocation(line: 1209, column: 4, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 1207, column: 10)
!14235 = !DILocation(line: 1209, column: 8, scope: !14234)
!14236 = !DILocation(line: 1209, column: 13, scope: !14234)
!14237 = !DILocation(line: 1210, column: 4, scope: !14234)
!14238 = !DILocation(line: 1210, column: 8, scope: !14234)
!14239 = !DILocation(line: 1210, column: 13, scope: !14234)
!14240 = !DILocation(line: 1211, column: 4, scope: !14234)
!14241 = !DILocation(line: 1211, column: 8, scope: !14234)
!14242 = !DILocation(line: 1211, column: 13, scope: !14234)
!14243 = !DILocation(line: 1214, column: 3, scope: !14207)
!14244 = !DILocation(line: 1214, column: 7, scope: !14207)
!14245 = !DILocation(line: 1214, column: 15, scope: !14207)
!14246 = !DILocation(line: 1215, column: 2, scope: !14207)
!14247 = !DILocation(line: 1219, column: 8, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 1219, column: 7)
!14249 = distinct !DILexicalBlock(scope: !14203, file: !3, line: 1215, column: 9)
!14250 = !DILocation(line: 1219, column: 12, scope: !14248)
!14251 = !DILocation(line: 1219, column: 16, scope: !14248)
!14252 = !DILocation(line: 1219, column: 22, scope: !14248)
!14253 = !DILocation(line: 1219, column: 55, scope: !14248)
!14254 = !DILocation(line: 1220, column: 7, scope: !14248)
!14255 = !DILocation(line: 1220, column: 20, scope: !14248)
!14256 = !DILocation(line: 1219, column: 7, scope: !14249)
!14257 = !DILocation(line: 1221, column: 4, scope: !14248)
!14258 = !DILocation(line: 1223, column: 8, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 1223, column: 7)
!14260 = !DILocation(line: 1223, column: 12, scope: !14259)
!14261 = !DILocation(line: 1223, column: 16, scope: !14259)
!14262 = !DILocation(line: 1223, column: 22, scope: !14259)
!14263 = !DILocation(line: 1223, column: 56, scope: !14259)
!14264 = !DILocation(line: 1224, column: 8, scope: !14259)
!14265 = !DILocation(line: 1223, column: 7, scope: !14249)
!14266 = !DILocation(line: 1225, column: 4, scope: !14259)
!14267 = !DILocation(line: 1228, column: 3, scope: !14249)
!14268 = !DILocation(line: 1228, column: 7, scope: !14249)
!14269 = !DILocation(line: 1228, column: 15, scope: !14249)
!14270 = !DILocation(line: 1238, column: 2, scope: !14145)
!14271 = !DILabel(scope: !14145, name: "invalid_fld", file: !3, line: 1240)
!14272 = !DILocation(line: 1240, column: 2, scope: !14145)
!14273 = !DILocation(line: 1241, column: 29, scope: !14145)
!14274 = !DILocation(line: 1241, column: 33, scope: !14145)
!14275 = !DILocation(line: 1241, column: 38, scope: !14145)
!14276 = !DILocation(line: 1241, column: 44, scope: !14145)
!14277 = !DILocation(line: 1241, column: 48, scope: !14145)
!14278 = !DILocation(line: 1241, column: 2, scope: !14145)
!14279 = !DILocation(line: 1242, column: 2, scope: !14145)
!14280 = !DILabel(scope: !14145, name: "skip", file: !3, line: 1243)
!14281 = !DILocation(line: 1243, column: 2, scope: !14145)
!14282 = !DILocation(line: 1244, column: 2, scope: !14145)
!14283 = !DILocation(line: 1244, column: 8, scope: !14145)
!14284 = !DILocation(line: 1244, column: 15, scope: !14145)
!14285 = !DILocation(line: 1245, column: 2, scope: !14145)
!14286 = !DILocation(line: 1246, column: 1, scope: !14145)
!14287 = distinct !DISubprogram(name: "req_get_ioprio", scope: !19, file: !19, line: 282, type: !14288, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14288 = !DISubroutineType(types: !14289)
!14289 = !{!1108, !3768}
!14290 = !DILocalVariable(name: "req", arg: 1, scope: !14287, file: !19, line: 282, type: !3768)
!14291 = !DILocation(line: 282, column: 61, scope: !14287)
!14292 = !DILocation(line: 284, column: 9, scope: !14287)
!14293 = !DILocation(line: 284, column: 14, scope: !14287)
!14294 = !DILocation(line: 284, column: 2, scope: !14287)
!14295 = distinct !DISubprogram(name: "scsi_10_lba_len", scope: !3, file: !3, line: 1317, type: !14296, scopeLine: 1318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{null, !9839, !3472, !5308}
!14298 = !DILocalVariable(name: "cdb", arg: 1, scope: !14295, file: !3, line: 1317, type: !9839)
!14299 = !DILocation(line: 1317, column: 39, scope: !14295)
!14300 = !DILocalVariable(name: "plba", arg: 2, scope: !14295, file: !3, line: 1317, type: !3472)
!14301 = !DILocation(line: 1317, column: 49, scope: !14295)
!14302 = !DILocalVariable(name: "plen", arg: 3, scope: !14295, file: !3, line: 1317, type: !5308)
!14303 = !DILocation(line: 1317, column: 60, scope: !14295)
!14304 = !DILocalVariable(name: "lba", scope: !14295, file: !3, line: 1319, type: !976)
!14305 = !DILocation(line: 1319, column: 6, scope: !14295)
!14306 = !DILocalVariable(name: "len", scope: !14295, file: !3, line: 1320, type: !1049)
!14307 = !DILocation(line: 1320, column: 6, scope: !14295)
!14308 = !DILocation(line: 1324, column: 15, scope: !14295)
!14309 = !DILocation(line: 1324, column: 10, scope: !14295)
!14310 = !DILocation(line: 1324, column: 23, scope: !14295)
!14311 = !DILocation(line: 1324, column: 6, scope: !14295)
!14312 = !DILocation(line: 1325, column: 15, scope: !14295)
!14313 = !DILocation(line: 1325, column: 10, scope: !14295)
!14314 = !DILocation(line: 1325, column: 23, scope: !14295)
!14315 = !DILocation(line: 1325, column: 6, scope: !14295)
!14316 = !DILocation(line: 1326, column: 15, scope: !14295)
!14317 = !DILocation(line: 1326, column: 10, scope: !14295)
!14318 = !DILocation(line: 1326, column: 23, scope: !14295)
!14319 = !DILocation(line: 1326, column: 6, scope: !14295)
!14320 = !DILocation(line: 1327, column: 15, scope: !14295)
!14321 = !DILocation(line: 1327, column: 10, scope: !14295)
!14322 = !DILocation(line: 1327, column: 6, scope: !14295)
!14323 = !DILocation(line: 1329, column: 15, scope: !14295)
!14324 = !DILocation(line: 1329, column: 10, scope: !14295)
!14325 = !DILocation(line: 1329, column: 23, scope: !14295)
!14326 = !DILocation(line: 1329, column: 6, scope: !14295)
!14327 = !DILocation(line: 1330, column: 15, scope: !14295)
!14328 = !DILocation(line: 1330, column: 10, scope: !14295)
!14329 = !DILocation(line: 1330, column: 6, scope: !14295)
!14330 = !DILocation(line: 1332, column: 10, scope: !14295)
!14331 = !DILocation(line: 1332, column: 3, scope: !14295)
!14332 = !DILocation(line: 1332, column: 8, scope: !14295)
!14333 = !DILocation(line: 1333, column: 10, scope: !14295)
!14334 = !DILocation(line: 1333, column: 3, scope: !14295)
!14335 = !DILocation(line: 1333, column: 8, scope: !14295)
!14336 = !DILocation(line: 1334, column: 1, scope: !14295)
!14337 = distinct !DISubprogram(name: "ata_check_nblocks", scope: !3, file: !3, line: 1499, type: !14338, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!1482, !6139, !1049}
!14340 = !DILocalVariable(name: "scmd", arg: 1, scope: !14337, file: !3, line: 1499, type: !6139)
!14341 = !DILocation(line: 1499, column: 49, scope: !14337)
!14342 = !DILocalVariable(name: "n_blocks", arg: 2, scope: !14337, file: !3, line: 1499, type: !1049)
!14343 = !DILocation(line: 1499, column: 59, scope: !14337)
!14344 = !DILocalVariable(name: "rq", scope: !14337, file: !3, line: 1501, type: !3768)
!14345 = !DILocation(line: 1501, column: 18, scope: !14337)
!14346 = !DILocation(line: 1501, column: 23, scope: !14337)
!14347 = !DILocation(line: 1501, column: 29, scope: !14337)
!14348 = !DILocalVariable(name: "req_blocks", scope: !14337, file: !3, line: 1502, type: !1049)
!14349 = !DILocation(line: 1502, column: 6, scope: !14337)
!14350 = !DILocation(line: 1504, column: 29, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 1504, column: 6)
!14352 = !DILocation(line: 1504, column: 7, scope: !14351)
!14353 = !DILocation(line: 1504, column: 6, scope: !14337)
!14354 = !DILocation(line: 1505, column: 3, scope: !14351)
!14355 = !DILocation(line: 1507, column: 28, scope: !14337)
!14356 = !DILocation(line: 1507, column: 15, scope: !14337)
!14357 = !DILocation(line: 1507, column: 34, scope: !14337)
!14358 = !DILocation(line: 1507, column: 40, scope: !14337)
!14359 = !DILocation(line: 1507, column: 48, scope: !14337)
!14360 = !DILocation(line: 1507, column: 32, scope: !14337)
!14361 = !DILocation(line: 1507, column: 13, scope: !14337)
!14362 = !DILocation(line: 1508, column: 6, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 1508, column: 6)
!14364 = !DILocation(line: 1508, column: 17, scope: !14363)
!14365 = !DILocation(line: 1508, column: 15, scope: !14363)
!14366 = !DILocation(line: 1508, column: 6, scope: !14337)
!14367 = !DILocation(line: 1509, column: 3, scope: !14363)
!14368 = !DILocation(line: 1511, column: 2, scope: !14337)
!14369 = !DILocation(line: 1512, column: 1, scope: !14337)
!14370 = distinct !DISubprogram(name: "scsi_6_lba_len", scope: !3, file: !3, line: 1290, type: !14296, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14371 = !DILocalVariable(name: "cdb", arg: 1, scope: !14370, file: !3, line: 1290, type: !9839)
!14372 = !DILocation(line: 1290, column: 38, scope: !14370)
!14373 = !DILocalVariable(name: "plba", arg: 2, scope: !14370, file: !3, line: 1290, type: !3472)
!14374 = !DILocation(line: 1290, column: 48, scope: !14370)
!14375 = !DILocalVariable(name: "plen", arg: 3, scope: !14370, file: !3, line: 1290, type: !5308)
!14376 = !DILocation(line: 1290, column: 59, scope: !14370)
!14377 = !DILocalVariable(name: "lba", scope: !14370, file: !3, line: 1292, type: !976)
!14378 = !DILocation(line: 1292, column: 6, scope: !14370)
!14379 = !DILocalVariable(name: "len", scope: !14370, file: !3, line: 1293, type: !1049)
!14380 = !DILocation(line: 1293, column: 6, scope: !14370)
!14381 = !DILocation(line: 1297, column: 16, scope: !14370)
!14382 = !DILocation(line: 1297, column: 23, scope: !14370)
!14383 = !DILocation(line: 1297, column: 10, scope: !14370)
!14384 = !DILocation(line: 1297, column: 32, scope: !14370)
!14385 = !DILocation(line: 1297, column: 6, scope: !14370)
!14386 = !DILocation(line: 1298, column: 15, scope: !14370)
!14387 = !DILocation(line: 1298, column: 10, scope: !14370)
!14388 = !DILocation(line: 1298, column: 23, scope: !14370)
!14389 = !DILocation(line: 1298, column: 6, scope: !14370)
!14390 = !DILocation(line: 1299, column: 15, scope: !14370)
!14391 = !DILocation(line: 1299, column: 10, scope: !14370)
!14392 = !DILocation(line: 1299, column: 6, scope: !14370)
!14393 = !DILocation(line: 1301, column: 8, scope: !14370)
!14394 = !DILocation(line: 1301, column: 6, scope: !14370)
!14395 = !DILocation(line: 1303, column: 10, scope: !14370)
!14396 = !DILocation(line: 1303, column: 3, scope: !14370)
!14397 = !DILocation(line: 1303, column: 8, scope: !14370)
!14398 = !DILocation(line: 1304, column: 10, scope: !14370)
!14399 = !DILocation(line: 1304, column: 3, scope: !14370)
!14400 = !DILocation(line: 1304, column: 8, scope: !14370)
!14401 = !DILocation(line: 1305, column: 1, scope: !14370)
!14402 = distinct !DISubprogram(name: "scsi_16_lba_len", scope: !3, file: !3, line: 1346, type: !14296, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14403 = !DILocalVariable(name: "cdb", arg: 1, scope: !14402, file: !3, line: 1346, type: !9839)
!14404 = !DILocation(line: 1346, column: 39, scope: !14402)
!14405 = !DILocalVariable(name: "plba", arg: 2, scope: !14402, file: !3, line: 1346, type: !3472)
!14406 = !DILocation(line: 1346, column: 49, scope: !14402)
!14407 = !DILocalVariable(name: "plen", arg: 3, scope: !14402, file: !3, line: 1346, type: !5308)
!14408 = !DILocation(line: 1346, column: 60, scope: !14402)
!14409 = !DILocalVariable(name: "lba", scope: !14402, file: !3, line: 1348, type: !976)
!14410 = !DILocation(line: 1348, column: 6, scope: !14402)
!14411 = !DILocalVariable(name: "len", scope: !14402, file: !3, line: 1349, type: !1049)
!14412 = !DILocation(line: 1349, column: 6, scope: !14402)
!14413 = !DILocation(line: 1353, column: 15, scope: !14402)
!14414 = !DILocation(line: 1353, column: 10, scope: !14402)
!14415 = !DILocation(line: 1353, column: 23, scope: !14402)
!14416 = !DILocation(line: 1353, column: 6, scope: !14402)
!14417 = !DILocation(line: 1354, column: 15, scope: !14402)
!14418 = !DILocation(line: 1354, column: 10, scope: !14402)
!14419 = !DILocation(line: 1354, column: 23, scope: !14402)
!14420 = !DILocation(line: 1354, column: 6, scope: !14402)
!14421 = !DILocation(line: 1355, column: 15, scope: !14402)
!14422 = !DILocation(line: 1355, column: 10, scope: !14402)
!14423 = !DILocation(line: 1355, column: 23, scope: !14402)
!14424 = !DILocation(line: 1355, column: 6, scope: !14402)
!14425 = !DILocation(line: 1356, column: 15, scope: !14402)
!14426 = !DILocation(line: 1356, column: 10, scope: !14402)
!14427 = !DILocation(line: 1356, column: 23, scope: !14402)
!14428 = !DILocation(line: 1356, column: 6, scope: !14402)
!14429 = !DILocation(line: 1357, column: 15, scope: !14402)
!14430 = !DILocation(line: 1357, column: 10, scope: !14402)
!14431 = !DILocation(line: 1357, column: 23, scope: !14402)
!14432 = !DILocation(line: 1357, column: 6, scope: !14402)
!14433 = !DILocation(line: 1358, column: 15, scope: !14402)
!14434 = !DILocation(line: 1358, column: 10, scope: !14402)
!14435 = !DILocation(line: 1358, column: 23, scope: !14402)
!14436 = !DILocation(line: 1358, column: 6, scope: !14402)
!14437 = !DILocation(line: 1359, column: 15, scope: !14402)
!14438 = !DILocation(line: 1359, column: 10, scope: !14402)
!14439 = !DILocation(line: 1359, column: 23, scope: !14402)
!14440 = !DILocation(line: 1359, column: 6, scope: !14402)
!14441 = !DILocation(line: 1360, column: 15, scope: !14402)
!14442 = !DILocation(line: 1360, column: 10, scope: !14402)
!14443 = !DILocation(line: 1360, column: 6, scope: !14402)
!14444 = !DILocation(line: 1362, column: 15, scope: !14402)
!14445 = !DILocation(line: 1362, column: 10, scope: !14402)
!14446 = !DILocation(line: 1362, column: 24, scope: !14402)
!14447 = !DILocation(line: 1362, column: 6, scope: !14402)
!14448 = !DILocation(line: 1363, column: 15, scope: !14402)
!14449 = !DILocation(line: 1363, column: 10, scope: !14402)
!14450 = !DILocation(line: 1363, column: 24, scope: !14402)
!14451 = !DILocation(line: 1363, column: 6, scope: !14402)
!14452 = !DILocation(line: 1364, column: 15, scope: !14402)
!14453 = !DILocation(line: 1364, column: 10, scope: !14402)
!14454 = !DILocation(line: 1364, column: 24, scope: !14402)
!14455 = !DILocation(line: 1364, column: 6, scope: !14402)
!14456 = !DILocation(line: 1365, column: 15, scope: !14402)
!14457 = !DILocation(line: 1365, column: 10, scope: !14402)
!14458 = !DILocation(line: 1365, column: 6, scope: !14402)
!14459 = !DILocation(line: 1367, column: 10, scope: !14402)
!14460 = !DILocation(line: 1367, column: 3, scope: !14402)
!14461 = !DILocation(line: 1367, column: 8, scope: !14402)
!14462 = !DILocation(line: 1368, column: 10, scope: !14402)
!14463 = !DILocation(line: 1368, column: 3, scope: !14402)
!14464 = !DILocation(line: 1368, column: 8, scope: !14402)
!14465 = !DILocation(line: 1369, column: 1, scope: !14402)
!14466 = distinct !DISubprogram(name: "blk_rq_is_passthrough", scope: !19, file: !19, line: 270, type: !6268, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14467 = !DILocalVariable(name: "rq", arg: 1, scope: !14466, file: !19, line: 270, type: !3768)
!14468 = !DILocation(line: 270, column: 58, scope: !14466)
!14469 = !DILocation(line: 272, column: 24, scope: !14466)
!14470 = !DILocation(line: 272, column: 9, scope: !14466)
!14471 = !DILocation(line: 272, column: 28, scope: !14466)
!14472 = !DILocation(line: 272, column: 49, scope: !14466)
!14473 = !DILocation(line: 272, column: 31, scope: !14466)
!14474 = !DILocation(line: 272, column: 2, scope: !14466)
!14475 = distinct !DISubprogram(name: "blk_rq_bytes", scope: !19, file: !19, line: 988, type: !14476, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14476 = !DISubroutineType(types: !14477)
!14477 = !{!7, !14478}
!14478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14479, size: 64)
!14479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3769)
!14480 = !DILocalVariable(name: "rq", arg: 1, scope: !14475, file: !19, line: 988, type: !14478)
!14481 = !DILocation(line: 988, column: 63, scope: !14475)
!14482 = !DILocation(line: 990, column: 9, scope: !14475)
!14483 = !DILocation(line: 990, column: 13, scope: !14475)
!14484 = !DILocation(line: 990, column: 2, scope: !14475)
!14485 = distinct !DISubprogram(name: "blk_rq_is_scsi", scope: !19, file: !19, line: 260, type: !6268, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14486 = !DILocalVariable(name: "rq", arg: 1, scope: !14485, file: !19, line: 260, type: !3768)
!14487 = !DILocation(line: 260, column: 51, scope: !14485)
!14488 = !DILocation(line: 262, column: 24, scope: !14485)
!14489 = !DILocation(line: 262, column: 9, scope: !14485)
!14490 = !DILocation(line: 262, column: 2, scope: !14485)
!14491 = distinct !DISubprogram(name: "blk_rq_is_private", scope: !19, file: !19, line: 265, type: !6268, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14492 = !DILocalVariable(name: "rq", arg: 1, scope: !14491, file: !19, line: 265, type: !3768)
!14493 = !DILocation(line: 265, column: 54, scope: !14491)
!14494 = !DILocation(line: 267, column: 27, scope: !14491)
!14495 = !DILocation(line: 267, column: 9, scope: !14491)
!14496 = !DILocation(line: 267, column: 2, scope: !14491)
!14497 = distinct !DISubprogram(name: "blk_op_is_scsi", scope: !19, file: !19, line: 250, type: !14498, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14498 = !DISubroutineType(types: !14499)
!14499 = !{!1482, !7}
!14500 = !DILocalVariable(name: "op", arg: 1, scope: !14497, file: !19, line: 250, type: !7)
!14501 = !DILocation(line: 250, column: 48, scope: !14497)
!14502 = !DILocation(line: 252, column: 9, scope: !14497)
!14503 = !DILocation(line: 252, column: 12, scope: !14497)
!14504 = !DILocation(line: 252, column: 30, scope: !14497)
!14505 = !DILocation(line: 252, column: 33, scope: !14497)
!14506 = !DILocation(line: 252, column: 36, scope: !14497)
!14507 = !DILocation(line: 252, column: 2, scope: !14497)
!14508 = distinct !DISubprogram(name: "blk_op_is_private", scope: !19, file: !19, line: 255, type: !14498, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14509 = !DILocalVariable(name: "op", arg: 1, scope: !14508, file: !19, line: 255, type: !7)
!14510 = !DILocation(line: 255, column: 51, scope: !14508)
!14511 = !DILocation(line: 257, column: 9, scope: !14508)
!14512 = !DILocation(line: 257, column: 12, scope: !14508)
!14513 = !DILocation(line: 257, column: 29, scope: !14508)
!14514 = !DILocation(line: 257, column: 32, scope: !14508)
!14515 = !DILocation(line: 257, column: 35, scope: !14508)
!14516 = !DILocation(line: 257, column: 2, scope: !14508)
!14517 = distinct !DISubprogram(name: "ata_id_has_trim", scope: !449, file: !449, line: 943, type: !9196, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14518 = !DILocalVariable(name: "id", arg: 1, scope: !14517, file: !449, line: 943, type: !9198)
!14519 = !DILocation(line: 943, column: 47, scope: !14517)
!14520 = !DILocation(line: 945, column: 27, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14517, file: !449, line: 945, column: 6)
!14522 = !DILocation(line: 945, column: 6, scope: !14521)
!14523 = !DILocation(line: 945, column: 31, scope: !14521)
!14524 = !DILocation(line: 945, column: 36, scope: !14521)
!14525 = !DILocation(line: 946, column: 7, scope: !14521)
!14526 = !DILocation(line: 946, column: 32, scope: !14521)
!14527 = !DILocation(line: 945, column: 6, scope: !14517)
!14528 = !DILocation(line: 947, column: 3, scope: !14521)
!14529 = !DILocation(line: 948, column: 2, scope: !14517)
!14530 = !DILocation(line: 949, column: 1, scope: !14517)
!14531 = distinct !DISubprogram(name: "scsi_sg_count", scope: !6141, file: !6141, line: 179, type: !14532, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14532 = !DISubroutineType(types: !14533)
!14533 = !{!7, !6139}
!14534 = !DILocalVariable(name: "cmd", arg: 1, scope: !14531, file: !6141, line: 179, type: !6139)
!14535 = !DILocation(line: 179, column: 56, scope: !14531)
!14536 = !DILocation(line: 181, column: 9, scope: !14531)
!14537 = !DILocation(line: 181, column: 14, scope: !14531)
!14538 = !DILocation(line: 181, column: 18, scope: !14531)
!14539 = !DILocation(line: 181, column: 24, scope: !14531)
!14540 = !DILocation(line: 181, column: 2, scope: !14531)
!14541 = distinct !DISubprogram(name: "ata_format_dsm_trim_descr", scope: !3, file: !3, line: 3117, type: !14542, scopeLine: 3119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14542 = !DISubroutineType(types: !14543)
!14543 = !{!1631, !6139, !1049, !976, !1049}
!14544 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 3145, column: 2, scope: !14541)
!14546 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !14545)
!14547 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !14548)
!14548 = distinct !DILocation(line: 3132, column: 2, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 3132, column: 2)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 3132, column: 2)
!14551 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3132, column: 2)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 3132, column: 2)
!14553 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 3132, column: 2)
!14554 = !DILocalVariable(name: "cmd", arg: 1, scope: !14541, file: !3, line: 3117, type: !6139)
!14555 = !DILocation(line: 3117, column: 59, scope: !14541)
!14556 = !DILocalVariable(name: "trmax", arg: 2, scope: !14541, file: !3, line: 3117, type: !1049)
!14557 = !DILocation(line: 3117, column: 68, scope: !14541)
!14558 = !DILocalVariable(name: "sector", arg: 3, scope: !14541, file: !3, line: 3118, type: !976)
!14559 = !DILocation(line: 3118, column: 10, scope: !14541)
!14560 = !DILocalVariable(name: "count", arg: 4, scope: !14541, file: !3, line: 3118, type: !1049)
!14561 = !DILocation(line: 3118, column: 22, scope: !14541)
!14562 = !DILocalVariable(name: "sdp", scope: !14541, file: !3, line: 3120, type: !5987)
!14563 = !DILocation(line: 3120, column: 22, scope: !14541)
!14564 = !DILocation(line: 3120, column: 28, scope: !14541)
!14565 = !DILocation(line: 3120, column: 33, scope: !14541)
!14566 = !DILocalVariable(name: "len", scope: !14541, file: !3, line: 3121, type: !1631)
!14567 = !DILocation(line: 3121, column: 9, scope: !14541)
!14568 = !DILocation(line: 3121, column: 15, scope: !14541)
!14569 = !DILocation(line: 3121, column: 20, scope: !14541)
!14570 = !DILocalVariable(name: "r", scope: !14541, file: !3, line: 3122, type: !1631)
!14571 = !DILocation(line: 3122, column: 9, scope: !14541)
!14572 = !DILocalVariable(name: "buf", scope: !14541, file: !3, line: 3123, type: !6947)
!14573 = !DILocation(line: 3123, column: 10, scope: !14541)
!14574 = !DILocalVariable(name: "i", scope: !14541, file: !3, line: 3124, type: !1049)
!14575 = !DILocation(line: 3124, column: 6, scope: !14541)
!14576 = !DILocalVariable(name: "flags", scope: !14541, file: !3, line: 3125, type: !986)
!14577 = !DILocation(line: 3125, column: 16, scope: !14541)
!14578 = !DILocalVariable(name: "__ret_warn_on", scope: !14579, file: !3, line: 3127, type: !211)
!14579 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 3127, column: 2)
!14580 = !DILocation(line: 3127, column: 2, scope: !14579)
!14581 = !DILocation(line: 3127, column: 2, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14579, file: !3, line: 3127, column: 2)
!14583 = !DILocation(line: 3127, column: 2, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14582, file: !3, line: 3127, column: 2)
!14585 = !DILocation(line: 3127, column: 2, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 3127, column: 2)
!14587 = !DILocation(line: 3127, column: 2, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 3127, column: 2)
!14589 = !{i32 -2139694900, i32 -2139694871, i32 -2139694825, i32 -2139694767, i32 -2139694713, i32 -2139694659, i32 -2139694604, i32 -2139694573}
!14590 = !DILocation(line: 3127, column: 2, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 3127, column: 2)
!14592 = !{i32 -2139694165, i32 -2139694158, i32 -2139694106, i32 -2139694075, i32 -2139694045}
!14593 = !DILocation(line: 3127, column: 2, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 3127, column: 2)
!14595 = !DILocation(line: 3129, column: 6, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 3129, column: 6)
!14597 = !DILocation(line: 3129, column: 10, scope: !14596)
!14598 = !DILocation(line: 3129, column: 6, scope: !14541)
!14599 = !DILocation(line: 3130, column: 7, scope: !14596)
!14600 = !DILocation(line: 3130, column: 3, scope: !14596)
!14601 = !DILocation(line: 3132, column: 2, scope: !14541)
!14602 = !DILocation(line: 3132, column: 2, scope: !14553)
!14603 = !DILocalVariable(name: "__dummy", scope: !14604, file: !3, line: 3132, type: !986)
!14604 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3132, column: 2)
!14605 = !DILocation(line: 3132, column: 2, scope: !14604)
!14606 = !DILocalVariable(name: "__dummy2", scope: !14604, file: !3, line: 3132, type: !986)
!14607 = !DILocation(line: 3132, column: 2, scope: !14552)
!14608 = !DILocation(line: 3132, column: 2, scope: !14551)
!14609 = !DILocation(line: 3132, column: 2, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 3132, column: 2)
!14611 = !DILocalVariable(name: "__dummy", scope: !14612, file: !3, line: 3132, type: !986)
!14612 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 3132, column: 2)
!14613 = distinct !DILexicalBlock(scope: !14610, file: !3, line: 3132, column: 2)
!14614 = !DILocation(line: 3132, column: 2, scope: !14612)
!14615 = !DILocalVariable(name: "__dummy2", scope: !14612, file: !3, line: 3132, type: !986)
!14616 = !DILocation(line: 3132, column: 2, scope: !14613)
!14617 = !DILocation(line: 3132, column: 2, scope: !14550)
!14618 = !{i32 -2139693016}
!14619 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !14548)
!14620 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !14548)
!14621 = !DILocation(line: 3132, column: 2, scope: !14549)
!14622 = !DILocation(line: 3133, column: 6, scope: !14541)
!14623 = !DILocation(line: 3134, column: 9, scope: !14541)
!14624 = !DILocation(line: 3134, column: 2, scope: !14541)
!14625 = !DILocation(line: 3134, column: 17, scope: !14541)
!14626 = !DILocation(line: 3135, column: 2, scope: !14541)
!14627 = !DILocation(line: 3135, column: 9, scope: !14541)
!14628 = !DILocation(line: 3135, column: 13, scope: !14541)
!14629 = !DILocation(line: 3135, column: 11, scope: !14541)
!14630 = !DILocalVariable(name: "entry", scope: !14631, file: !3, line: 3136, type: !976)
!14631 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 3135, column: 20)
!14632 = !DILocation(line: 3136, column: 7, scope: !14631)
!14633 = !DILocation(line: 3136, column: 15, scope: !14631)
!14634 = !DILocation(line: 3137, column: 11, scope: !14631)
!14635 = !DILocation(line: 3137, column: 17, scope: !14631)
!14636 = !DILocation(line: 3137, column: 37, scope: !14631)
!14637 = !DILocation(line: 3137, column: 5, scope: !14631)
!14638 = !DILocation(line: 3137, column: 44, scope: !14631)
!14639 = !DILocation(line: 3136, column: 22, scope: !14631)
!14640 = !DILocation(line: 3138, column: 14, scope: !14631)
!14641 = !DILocation(line: 3138, column: 3, scope: !14631)
!14642 = !DILocation(line: 3138, column: 8, scope: !14631)
!14643 = !DILocation(line: 3138, column: 12, scope: !14631)
!14644 = !DILocation(line: 3139, column: 7, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 3139, column: 7)
!14646 = !DILocation(line: 3139, column: 13, scope: !14645)
!14647 = !DILocation(line: 3139, column: 7, scope: !14631)
!14648 = !DILocation(line: 3140, column: 4, scope: !14645)
!14649 = !DILocation(line: 3141, column: 9, scope: !14631)
!14650 = !DILocation(line: 3142, column: 10, scope: !14631)
!14651 = distinct !{!14651, !14626, !14652}
!14652 = !DILocation(line: 3143, column: 2, scope: !14541)
!14653 = !DILocation(line: 3144, column: 38, scope: !14541)
!14654 = !DILocation(line: 3144, column: 26, scope: !14541)
!14655 = !DILocation(line: 3144, column: 58, scope: !14541)
!14656 = !DILocation(line: 3144, column: 44, scope: !14541)
!14657 = !DILocation(line: 3144, column: 64, scope: !14541)
!14658 = !DILocation(line: 3144, column: 69, scope: !14541)
!14659 = !DILocation(line: 3144, column: 6, scope: !14541)
!14660 = !DILocation(line: 3144, column: 4, scope: !14541)
!14661 = !DILocation(line: 3145, column: 46, scope: !14541)
!14662 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !14545)
!14663 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !14545)
!14664 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !14545)
!14665 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !14545)
!14666 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !14545)
!14667 = !DILocation(line: 3147, column: 9, scope: !14541)
!14668 = !DILocation(line: 3147, column: 2, scope: !14541)
!14669 = distinct !DISubprogram(name: "ata_ncq_enabled", scope: !183, file: !183, line: 1692, type: !11320, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14670 = !DILocalVariable(name: "dev", arg: 1, scope: !14669, file: !183, line: 1692, type: !6455)
!14671 = !DILocation(line: 1692, column: 54, scope: !14669)
!14672 = !DILocation(line: 1696, column: 10, scope: !14669)
!14673 = !DILocation(line: 1696, column: 15, scope: !14669)
!14674 = !DILocation(line: 1696, column: 21, scope: !14669)
!14675 = !DILocation(line: 1697, column: 26, scope: !14669)
!14676 = !DILocation(line: 1696, column: 2, scope: !14669)
!14677 = distinct !DISubprogram(name: "ata_fpdma_dsm_supported", scope: !183, file: !183, line: 1700, type: !14678, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14678 = !DISubroutineType(types: !14679)
!14679 = !{!1482, !6455}
!14680 = !DILocalVariable(name: "dev", arg: 1, scope: !14677, file: !183, line: 1700, type: !6455)
!14681 = !DILocation(line: 1700, column: 63, scope: !14677)
!14682 = !DILocation(line: 1702, column: 10, scope: !14677)
!14683 = !DILocation(line: 1702, column: 15, scope: !14677)
!14684 = !DILocation(line: 1702, column: 21, scope: !14677)
!14685 = !DILocation(line: 1702, column: 48, scope: !14677)
!14686 = !DILocation(line: 1703, column: 4, scope: !14677)
!14687 = !DILocation(line: 1703, column: 9, scope: !14677)
!14688 = !DILocation(line: 1703, column: 62, scope: !14677)
!14689 = !DILocation(line: 0, scope: !14677)
!14690 = !DILocation(line: 1702, column: 2, scope: !14677)
!14691 = distinct !DISubprogram(name: "ata_qc_set_pc_nbytes", scope: !3, file: !3, line: 648, type: !6656, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14692 = !DILocalVariable(name: "qc", arg: 1, scope: !14691, file: !3, line: 648, type: !6450)
!14693 = !DILocation(line: 648, column: 57, scope: !14691)
!14694 = !DILocalVariable(name: "scmd", scope: !14691, file: !3, line: 650, type: !6139)
!14695 = !DILocation(line: 650, column: 20, scope: !14691)
!14696 = !DILocation(line: 650, column: 27, scope: !14691)
!14697 = !DILocation(line: 650, column: 31, scope: !14691)
!14698 = !DILocation(line: 652, column: 19, scope: !14691)
!14699 = !DILocation(line: 652, column: 25, scope: !14691)
!14700 = !DILocation(line: 652, column: 2, scope: !14691)
!14701 = !DILocation(line: 652, column: 6, scope: !14691)
!14702 = !DILocation(line: 652, column: 17, scope: !14691)
!14703 = !DILocation(line: 653, column: 28, scope: !14691)
!14704 = !DILocation(line: 653, column: 15, scope: !14691)
!14705 = !DILocation(line: 653, column: 36, scope: !14691)
!14706 = !DILocation(line: 653, column: 40, scope: !14691)
!14707 = !DILocation(line: 653, column: 34, scope: !14691)
!14708 = !DILocation(line: 653, column: 2, scope: !14691)
!14709 = !DILocation(line: 653, column: 6, scope: !14691)
!14710 = !DILocation(line: 653, column: 13, scope: !14691)
!14711 = !DILocation(line: 654, column: 1, scope: !14691)
!14712 = distinct !DISubprogram(name: "scsi_sglist", scope: !6141, file: !6141, line: 184, type: !14713, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14713 = !DISubroutineType(types: !14714)
!14714 = !{!6178, !6139}
!14715 = !DILocalVariable(name: "cmd", arg: 1, scope: !14712, file: !6141, line: 184, type: !6139)
!14716 = !DILocation(line: 184, column: 65, scope: !14712)
!14717 = !DILocation(line: 186, column: 9, scope: !14712)
!14718 = !DILocation(line: 186, column: 14, scope: !14712)
!14719 = !DILocation(line: 186, column: 18, scope: !14712)
!14720 = !DILocation(line: 186, column: 24, scope: !14712)
!14721 = !DILocation(line: 186, column: 2, scope: !14712)
!14722 = distinct !DISubprogram(name: "scsi_bufflen", scope: !6141, file: !6141, line: 189, type: !14532, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14723 = !DILocalVariable(name: "cmd", arg: 1, scope: !14722, file: !6141, line: 189, type: !6139)
!14724 = !DILocation(line: 189, column: 55, scope: !14722)
!14725 = !DILocation(line: 191, column: 9, scope: !14722)
!14726 = !DILocation(line: 191, column: 14, scope: !14722)
!14727 = !DILocation(line: 191, column: 18, scope: !14722)
!14728 = !DILocation(line: 191, column: 2, scope: !14722)
!14729 = distinct !DISubprogram(name: "ata_id_wcache_enabled", scope: !449, file: !449, line: 747, type: !9196, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14730 = !DILocalVariable(name: "id", arg: 1, scope: !14729, file: !449, line: 747, type: !9198)
!14731 = !DILocation(line: 747, column: 53, scope: !14729)
!14732 = !DILocation(line: 749, column: 7, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14729, file: !449, line: 749, column: 6)
!14734 = !DILocation(line: 749, column: 30, scope: !14733)
!14735 = !DILocation(line: 749, column: 40, scope: !14733)
!14736 = !DILocation(line: 749, column: 6, scope: !14729)
!14737 = !DILocation(line: 750, column: 3, scope: !14733)
!14738 = !DILocation(line: 751, column: 9, scope: !14729)
!14739 = !DILocation(line: 751, column: 33, scope: !14729)
!14740 = !DILocation(line: 751, column: 2, scope: !14729)
!14741 = !DILocation(line: 752, column: 1, scope: !14729)
!14742 = distinct !DISubprogram(name: "ata_id_has_flush", scope: !449, file: !449, line: 612, type: !9196, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14743 = !DILocalVariable(name: "id", arg: 1, scope: !14742, file: !449, line: 612, type: !9198)
!14744 = !DILocation(line: 612, column: 48, scope: !14742)
!14745 = !DILocation(line: 614, column: 7, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14742, file: !449, line: 614, column: 6)
!14747 = !DILocation(line: 614, column: 32, scope: !14746)
!14748 = !DILocation(line: 614, column: 42, scope: !14746)
!14749 = !DILocation(line: 614, column: 6, scope: !14742)
!14750 = !DILocation(line: 615, column: 3, scope: !14746)
!14751 = !DILocation(line: 616, column: 9, scope: !14742)
!14752 = !DILocation(line: 616, column: 34, scope: !14742)
!14753 = !DILocation(line: 616, column: 2, scope: !14742)
!14754 = !DILocation(line: 617, column: 1, scope: !14742)
!14755 = distinct !DISubprogram(name: "ata_id_has_flush_ext", scope: !449, file: !449, line: 628, type: !9196, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14756 = !DILocalVariable(name: "id", arg: 1, scope: !14755, file: !449, line: 628, type: !9198)
!14757 = !DILocation(line: 628, column: 52, scope: !14755)
!14758 = !DILocation(line: 630, column: 7, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14755, file: !449, line: 630, column: 6)
!14760 = !DILocation(line: 630, column: 32, scope: !14759)
!14761 = !DILocation(line: 630, column: 42, scope: !14759)
!14762 = !DILocation(line: 630, column: 6, scope: !14755)
!14763 = !DILocation(line: 631, column: 3, scope: !14759)
!14764 = !DILocation(line: 632, column: 9, scope: !14755)
!14765 = !DILocation(line: 632, column: 34, scope: !14755)
!14766 = !DILocation(line: 632, column: 2, scope: !14755)
!14767 = !DILocation(line: 633, column: 1, scope: !14755)
!14768 = distinct !DISubprogram(name: "lba_28_ok", scope: !449, file: !449, line: 1123, type: !14769, scopeLine: 1124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14769 = !DISubroutineType(types: !14770)
!14770 = !{!1482, !976, !1049}
!14771 = !DILocalVariable(name: "block", arg: 1, scope: !14768, file: !449, line: 1123, type: !976)
!14772 = !DILocation(line: 1123, column: 34, scope: !14768)
!14773 = !DILocalVariable(name: "n_block", arg: 2, scope: !14768, file: !449, line: 1123, type: !1049)
!14774 = !DILocation(line: 1123, column: 45, scope: !14768)
!14775 = !DILocation(line: 1126, column: 11, scope: !14768)
!14776 = !DILocation(line: 1126, column: 19, scope: !14768)
!14777 = !DILocation(line: 1126, column: 17, scope: !14768)
!14778 = !DILocation(line: 1126, column: 28, scope: !14768)
!14779 = !DILocation(line: 1126, column: 47, scope: !14768)
!14780 = !DILocation(line: 1126, column: 51, scope: !14768)
!14781 = !DILocation(line: 1126, column: 59, scope: !14768)
!14782 = !DILocation(line: 0, scope: !14768)
!14783 = !DILocation(line: 1126, column: 2, scope: !14768)
!14784 = distinct !DISubprogram(name: "lba_48_ok", scope: !449, file: !449, line: 1129, type: !14769, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14785 = !DILocalVariable(name: "block", arg: 1, scope: !14784, file: !449, line: 1129, type: !976)
!14786 = !DILocation(line: 1129, column: 34, scope: !14784)
!14787 = !DILocalVariable(name: "n_block", arg: 2, scope: !14784, file: !449, line: 1129, type: !1049)
!14788 = !DILocation(line: 1129, column: 45, scope: !14784)
!14789 = !DILocation(line: 1132, column: 11, scope: !14784)
!14790 = !DILocation(line: 1132, column: 19, scope: !14784)
!14791 = !DILocation(line: 1132, column: 17, scope: !14784)
!14792 = !DILocation(line: 1132, column: 27, scope: !14784)
!14793 = !DILocation(line: 1132, column: 32, scope: !14784)
!14794 = !DILocation(line: 1132, column: 50, scope: !14784)
!14795 = !DILocation(line: 1132, column: 54, scope: !14784)
!14796 = !DILocation(line: 1132, column: 62, scope: !14784)
!14797 = !DILocation(line: 0, scope: !14784)
!14798 = !DILocation(line: 1132, column: 2, scope: !14784)
!14799 = distinct !DISubprogram(name: "ata_scsi_map_proto", scope: !3, file: !3, line: 2814, type: !14800, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14800 = !DISubroutineType(types: !14801)
!14801 = !{!1203, !1203}
!14802 = !DILocalVariable(name: "byte1", arg: 1, scope: !14799, file: !3, line: 2814, type: !1203)
!14803 = !DILocation(line: 2814, column: 23, scope: !14799)
!14804 = !DILocation(line: 2816, column: 10, scope: !14799)
!14805 = !DILocation(line: 2816, column: 16, scope: !14799)
!14806 = !DILocation(line: 2816, column: 24, scope: !14799)
!14807 = !DILocation(line: 2816, column: 2, scope: !14799)
!14808 = !DILocation(line: 2818, column: 3, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14799, file: !3, line: 2816, column: 30)
!14810 = !DILocation(line: 2823, column: 3, scope: !14809)
!14811 = !DILocation(line: 2827, column: 3, scope: !14809)
!14812 = !DILocation(line: 2830, column: 3, scope: !14809)
!14813 = !DILocation(line: 2839, column: 3, scope: !14809)
!14814 = !DILocation(line: 2842, column: 2, scope: !14799)
!14815 = !DILocation(line: 2843, column: 1, scope: !14799)
!14816 = distinct !DISubprogram(name: "ata_is_ncq", scope: !183, file: !183, line: 1046, type: !14817, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14817 = !DISubroutineType(types: !14818)
!14818 = !{!1482, !1203}
!14819 = !DILocalVariable(name: "prot", arg: 1, scope: !14816, file: !183, line: 1046, type: !1203)
!14820 = !DILocation(line: 1046, column: 34, scope: !14816)
!14821 = !DILocation(line: 1048, column: 9, scope: !14816)
!14822 = !DILocation(line: 1048, column: 14, scope: !14816)
!14823 = !DILocation(line: 1048, column: 2, scope: !14816)
!14824 = distinct !DISubprogram(name: "is_multi_taskfile", scope: !183, file: !183, line: 1056, type: !14825, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14825 = !DISubroutineType(types: !14826)
!14826 = !{!211, !6695}
!14827 = !DILocalVariable(name: "tf", arg: 1, scope: !14824, file: !183, line: 1056, type: !6695)
!14828 = !DILocation(line: 1056, column: 58, scope: !14824)
!14829 = !DILocation(line: 1058, column: 10, scope: !14824)
!14830 = !DILocation(line: 1058, column: 14, scope: !14824)
!14831 = !DILocation(line: 1058, column: 22, scope: !14824)
!14832 = !DILocation(line: 1058, column: 45, scope: !14824)
!14833 = !DILocation(line: 1059, column: 10, scope: !14824)
!14834 = !DILocation(line: 1059, column: 14, scope: !14824)
!14835 = !DILocation(line: 1059, column: 22, scope: !14824)
!14836 = !DILocation(line: 1059, column: 46, scope: !14824)
!14837 = !DILocation(line: 1060, column: 10, scope: !14824)
!14838 = !DILocation(line: 1060, column: 14, scope: !14824)
!14839 = !DILocation(line: 1060, column: 22, scope: !14824)
!14840 = !DILocation(line: 1060, column: 49, scope: !14824)
!14841 = !DILocation(line: 1061, column: 10, scope: !14824)
!14842 = !DILocation(line: 1061, column: 14, scope: !14824)
!14843 = !DILocation(line: 1061, column: 22, scope: !14824)
!14844 = !DILocation(line: 1061, column: 50, scope: !14824)
!14845 = !DILocation(line: 1062, column: 10, scope: !14824)
!14846 = !DILocation(line: 1062, column: 14, scope: !14824)
!14847 = !DILocation(line: 1062, column: 22, scope: !14824)
!14848 = !DILocation(line: 1058, column: 2, scope: !14824)
!14849 = distinct !DISubprogram(name: "__fswab32", scope: !12829, file: !12829, line: 57, type: !14850, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14850 = !DISubroutineType(types: !14851)
!14851 = !{!1050, !1050}
!14852 = !DILocalVariable(name: "val", arg: 1, scope: !14849, file: !12829, line: 57, type: !1050)
!14853 = !DILocation(line: 57, column: 57, scope: !14849)
!14854 = !DILocation(line: 60, column: 23, scope: !14849)
!14855 = !DILocation(line: 60, column: 9, scope: !14849)
!14856 = !DILocation(line: 60, column: 2, scope: !14849)
!14857 = distinct !DISubprogram(name: "__arch_swab32", scope: !14858, file: !14858, line: 8, type: !14850, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14858 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!14859 = !DILocalVariable(name: "val", arg: 1, scope: !14857, file: !14858, line: 8, type: !1050)
!14860 = !DILocation(line: 8, column: 61, scope: !14857)
!14861 = !DILocation(line: 10, column: 38, scope: !14857)
!14862 = !DILocation(line: 10, column: 2, scope: !14857)
!14863 = !{i32 1048113}
!14864 = !DILocation(line: 11, column: 9, scope: !14857)
!14865 = !DILocation(line: 11, column: 2, scope: !14857)
!14866 = distinct !DISubprogram(name: "__fswab16", scope: !12829, file: !12829, line: 48, type: !14867, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14867 = !DISubroutineType(types: !14868)
!14868 = !{!1727, !1727}
!14869 = !DILocalVariable(name: "val", arg: 1, scope: !14866, file: !12829, line: 48, type: !1727)
!14870 = !DILocation(line: 48, column: 57, scope: !14866)
!14871 = !DILocation(line: 53, column: 9, scope: !14866)
!14872 = !DILocation(line: 53, column: 2, scope: !14866)
!14873 = distinct !DISubprogram(name: "ata_mselect_caching", scope: !3, file: !3, line: 3579, type: !14874, scopeLine: 3581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14874 = !DISubroutineType(types: !14875)
!14875 = !{!211, !6450, !9839, !211, !6696}
!14876 = !DILocalVariable(name: "qc", arg: 1, scope: !14873, file: !3, line: 3579, type: !6450)
!14877 = !DILocation(line: 3579, column: 55, scope: !14873)
!14878 = !DILocalVariable(name: "buf", arg: 2, scope: !14873, file: !3, line: 3580, type: !9839)
!14879 = !DILocation(line: 3580, column: 21, scope: !14873)
!14880 = !DILocalVariable(name: "len", arg: 3, scope: !14873, file: !3, line: 3580, type: !211)
!14881 = !DILocation(line: 3580, column: 30, scope: !14873)
!14882 = !DILocalVariable(name: "fp", arg: 4, scope: !14873, file: !3, line: 3580, type: !6696)
!14883 = !DILocation(line: 3580, column: 40, scope: !14873)
!14884 = !DILocalVariable(name: "tf", scope: !14873, file: !3, line: 3582, type: !6695)
!14885 = !DILocation(line: 3582, column: 23, scope: !14873)
!14886 = !DILocation(line: 3582, column: 29, scope: !14873)
!14887 = !DILocation(line: 3582, column: 33, scope: !14873)
!14888 = !DILocalVariable(name: "dev", scope: !14873, file: !3, line: 3583, type: !6455)
!14889 = !DILocation(line: 3583, column: 21, scope: !14873)
!14890 = !DILocation(line: 3583, column: 27, scope: !14873)
!14891 = !DILocation(line: 3583, column: 31, scope: !14873)
!14892 = !DILocalVariable(name: "mpage", scope: !14873, file: !3, line: 3584, type: !6596)
!14893 = !DILocation(line: 3584, column: 5, scope: !14873)
!14894 = !DILocalVariable(name: "wce", scope: !14873, file: !3, line: 3585, type: !1203)
!14895 = !DILocation(line: 3585, column: 5, scope: !14873)
!14896 = !DILocalVariable(name: "i", scope: !14873, file: !3, line: 3586, type: !211)
!14897 = !DILocation(line: 3586, column: 6, scope: !14873)
!14898 = !DILocation(line: 3593, column: 6, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14873, file: !3, line: 3593, column: 6)
!14900 = !DILocation(line: 3593, column: 10, scope: !14899)
!14901 = !DILocation(line: 3593, column: 6, scope: !14873)
!14902 = !DILocation(line: 3594, column: 7, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14904, file: !3, line: 3594, column: 7)
!14904 = distinct !DILexicalBlock(scope: !14899, file: !3, line: 3593, column: 34)
!14905 = !DILocation(line: 3594, column: 11, scope: !14903)
!14906 = !DILocation(line: 3594, column: 7, scope: !14904)
!14907 = !DILocation(line: 3595, column: 10, scope: !14903)
!14908 = !DILocation(line: 3595, column: 5, scope: !14903)
!14909 = !DILocation(line: 3595, column: 8, scope: !14903)
!14910 = !DILocation(line: 3595, column: 4, scope: !14903)
!14911 = !DILocation(line: 3597, column: 5, scope: !14903)
!14912 = !DILocation(line: 3597, column: 8, scope: !14903)
!14913 = !DILocation(line: 3598, column: 3, scope: !14904)
!14914 = !DILocation(line: 3601, column: 8, scope: !14873)
!14915 = !DILocation(line: 3601, column: 15, scope: !14873)
!14916 = !DILocation(line: 3601, column: 6, scope: !14873)
!14917 = !DILocation(line: 3606, column: 21, scope: !14873)
!14918 = !DILocation(line: 3606, column: 26, scope: !14873)
!14919 = !DILocation(line: 3606, column: 30, scope: !14873)
!14920 = !DILocation(line: 3606, column: 2, scope: !14873)
!14921 = !DILocation(line: 3607, column: 9, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14873, file: !3, line: 3607, column: 2)
!14923 = !DILocation(line: 3607, column: 7, scope: !14922)
!14924 = !DILocation(line: 3607, column: 14, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14922, file: !3, line: 3607, column: 2)
!14926 = !DILocation(line: 3607, column: 16, scope: !14925)
!14927 = !DILocation(line: 3607, column: 2, scope: !14922)
!14928 = !DILocation(line: 3608, column: 7, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 3608, column: 7)
!14930 = distinct !DILexicalBlock(scope: !14925, file: !3, line: 3607, column: 44)
!14931 = !DILocation(line: 3608, column: 9, scope: !14929)
!14932 = !DILocation(line: 3608, column: 7, scope: !14930)
!14933 = !DILocation(line: 3609, column: 4, scope: !14929)
!14934 = !DILocation(line: 3610, column: 13, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 3610, column: 7)
!14936 = !DILocation(line: 3610, column: 15, scope: !14935)
!14937 = !DILocation(line: 3610, column: 7, scope: !14935)
!14938 = !DILocation(line: 3610, column: 23, scope: !14935)
!14939 = !DILocation(line: 3610, column: 27, scope: !14935)
!14940 = !DILocation(line: 3610, column: 20, scope: !14935)
!14941 = !DILocation(line: 3610, column: 7, scope: !14930)
!14942 = !DILocation(line: 3611, column: 10, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14935, file: !3, line: 3610, column: 31)
!14944 = !DILocation(line: 3611, column: 5, scope: !14943)
!14945 = !DILocation(line: 3611, column: 8, scope: !14943)
!14946 = !DILocation(line: 3612, column: 4, scope: !14943)
!14947 = !DILocation(line: 3614, column: 2, scope: !14930)
!14948 = !DILocation(line: 3607, column: 40, scope: !14925)
!14949 = !DILocation(line: 3607, column: 2, scope: !14925)
!14950 = distinct !{!14950, !14927, !14951}
!14951 = !DILocation(line: 3614, column: 2, scope: !14922)
!14952 = !DILocation(line: 3616, column: 2, scope: !14873)
!14953 = !DILocation(line: 3616, column: 6, scope: !14873)
!14954 = !DILocation(line: 3616, column: 12, scope: !14873)
!14955 = !DILocation(line: 3617, column: 2, scope: !14873)
!14956 = !DILocation(line: 3617, column: 6, scope: !14873)
!14957 = !DILocation(line: 3617, column: 15, scope: !14873)
!14958 = !DILocation(line: 3618, column: 2, scope: !14873)
!14959 = !DILocation(line: 3618, column: 6, scope: !14873)
!14960 = !DILocation(line: 3618, column: 12, scope: !14873)
!14961 = !DILocation(line: 3619, column: 2, scope: !14873)
!14962 = !DILocation(line: 3619, column: 6, scope: !14873)
!14963 = !DILocation(line: 3619, column: 14, scope: !14873)
!14964 = !DILocation(line: 3620, column: 16, scope: !14873)
!14965 = !DILocation(line: 3620, column: 2, scope: !14873)
!14966 = !DILocation(line: 3620, column: 6, scope: !14873)
!14967 = !DILocation(line: 3620, column: 14, scope: !14873)
!14968 = !DILocation(line: 3621, column: 2, scope: !14873)
!14969 = !DILocation(line: 3622, column: 1, scope: !14873)
!14970 = distinct !DISubprogram(name: "ata_mselect_control", scope: !3, file: !3, line: 3636, type: !14874, scopeLine: 3638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!14971 = !DILocalVariable(name: "qc", arg: 1, scope: !14970, file: !3, line: 3636, type: !6450)
!14972 = !DILocation(line: 3636, column: 55, scope: !14970)
!14973 = !DILocalVariable(name: "buf", arg: 2, scope: !14970, file: !3, line: 3637, type: !9839)
!14974 = !DILocation(line: 3637, column: 21, scope: !14970)
!14975 = !DILocalVariable(name: "len", arg: 3, scope: !14970, file: !3, line: 3637, type: !211)
!14976 = !DILocation(line: 3637, column: 30, scope: !14970)
!14977 = !DILocalVariable(name: "fp", arg: 4, scope: !14970, file: !3, line: 3637, type: !6696)
!14978 = !DILocation(line: 3637, column: 40, scope: !14970)
!14979 = !DILocalVariable(name: "dev", scope: !14970, file: !3, line: 3639, type: !6455)
!14980 = !DILocation(line: 3639, column: 21, scope: !14970)
!14981 = !DILocation(line: 3639, column: 27, scope: !14970)
!14982 = !DILocation(line: 3639, column: 31, scope: !14970)
!14983 = !DILocalVariable(name: "mpage", scope: !14970, file: !3, line: 3640, type: !14984)
!14984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 96, elements: !5897)
!14985 = !DILocation(line: 3640, column: 5, scope: !14970)
!14986 = !DILocalVariable(name: "d_sense", scope: !14970, file: !3, line: 3641, type: !1203)
!14987 = !DILocation(line: 3641, column: 5, scope: !14970)
!14988 = !DILocalVariable(name: "i", scope: !14970, file: !3, line: 3642, type: !211)
!14989 = !DILocation(line: 3642, column: 6, scope: !14970)
!14990 = !DILocation(line: 3649, column: 6, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 3649, column: 6)
!14992 = !DILocation(line: 3649, column: 10, scope: !14991)
!14993 = !DILocation(line: 3649, column: 6, scope: !14970)
!14994 = !DILocation(line: 3650, column: 7, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !3, line: 3650, column: 7)
!14996 = distinct !DILexicalBlock(scope: !14991, file: !3, line: 3649, column: 36)
!14997 = !DILocation(line: 3650, column: 11, scope: !14995)
!14998 = !DILocation(line: 3650, column: 7, scope: !14996)
!14999 = !DILocation(line: 3651, column: 10, scope: !14995)
!15000 = !DILocation(line: 3651, column: 5, scope: !14995)
!15001 = !DILocation(line: 3651, column: 8, scope: !14995)
!15002 = !DILocation(line: 3651, column: 4, scope: !14995)
!15003 = !DILocation(line: 3653, column: 5, scope: !14995)
!15004 = !DILocation(line: 3653, column: 8, scope: !14995)
!15005 = !DILocation(line: 3654, column: 3, scope: !14996)
!15006 = !DILocation(line: 3657, column: 12, scope: !14970)
!15007 = !DILocation(line: 3657, column: 19, scope: !14970)
!15008 = !DILocation(line: 3657, column: 10, scope: !14970)
!15009 = !DILocation(line: 3662, column: 21, scope: !14970)
!15010 = !DILocation(line: 3662, column: 26, scope: !14970)
!15011 = !DILocation(line: 3662, column: 2, scope: !14970)
!15012 = !DILocation(line: 3663, column: 9, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 3663, column: 2)
!15014 = !DILocation(line: 3663, column: 7, scope: !15013)
!15015 = !DILocation(line: 3663, column: 14, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 3663, column: 2)
!15017 = !DILocation(line: 3663, column: 16, scope: !15016)
!15018 = !DILocation(line: 3663, column: 2, scope: !15013)
!15019 = !DILocation(line: 3664, column: 7, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 3664, column: 7)
!15021 = distinct !DILexicalBlock(scope: !15016, file: !3, line: 3663, column: 46)
!15022 = !DILocation(line: 3664, column: 9, scope: !15020)
!15023 = !DILocation(line: 3664, column: 7, scope: !15021)
!15024 = !DILocation(line: 3665, column: 4, scope: !15020)
!15025 = !DILocation(line: 3666, column: 17, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 3666, column: 7)
!15027 = !DILocation(line: 3666, column: 15, scope: !15026)
!15028 = !DILocation(line: 3666, column: 7, scope: !15026)
!15029 = !DILocation(line: 3666, column: 23, scope: !15026)
!15030 = !DILocation(line: 3666, column: 27, scope: !15026)
!15031 = !DILocation(line: 3666, column: 20, scope: !15026)
!15032 = !DILocation(line: 3666, column: 7, scope: !15021)
!15033 = !DILocation(line: 3667, column: 10, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 3666, column: 31)
!15035 = !DILocation(line: 3667, column: 5, scope: !15034)
!15036 = !DILocation(line: 3667, column: 8, scope: !15034)
!15037 = !DILocation(line: 3668, column: 4, scope: !15034)
!15038 = !DILocation(line: 3670, column: 2, scope: !15021)
!15039 = !DILocation(line: 3663, column: 42, scope: !15016)
!15040 = !DILocation(line: 3663, column: 2, scope: !15016)
!15041 = distinct !{!15041, !15018, !15042}
!15042 = !DILocation(line: 3670, column: 2, scope: !15013)
!15043 = !DILocation(line: 3671, column: 6, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 3671, column: 6)
!15045 = !DILocation(line: 3671, column: 14, scope: !15044)
!15046 = !DILocation(line: 3671, column: 6, scope: !14970)
!15047 = !DILocation(line: 3672, column: 3, scope: !15044)
!15048 = !DILocation(line: 3672, column: 8, scope: !15044)
!15049 = !DILocation(line: 3672, column: 14, scope: !15044)
!15050 = !DILocation(line: 3674, column: 3, scope: !15044)
!15051 = !DILocation(line: 3674, column: 8, scope: !15044)
!15052 = !DILocation(line: 3674, column: 14, scope: !15044)
!15053 = !DILocation(line: 3675, column: 2, scope: !14970)
!15054 = !DILocation(line: 3676, column: 1, scope: !14970)
!15055 = distinct !DISubprogram(name: "ata_scsi_set_invalid_parameter", scope: !3, file: !3, line: 230, type: !15056, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{null, !6455, !6139, !1726}
!15058 = !DILocalVariable(name: "dev", arg: 1, scope: !15055, file: !3, line: 230, type: !6455)
!15059 = !DILocation(line: 230, column: 63, scope: !15055)
!15060 = !DILocalVariable(name: "cmd", arg: 2, scope: !15055, file: !3, line: 231, type: !6139)
!15061 = !DILocation(line: 231, column: 27, scope: !15055)
!15062 = !DILocalVariable(name: "field", arg: 3, scope: !15055, file: !3, line: 231, type: !1726)
!15063 = !DILocation(line: 231, column: 36, scope: !15055)
!15064 = !DILocation(line: 234, column: 21, scope: !15055)
!15065 = !DILocation(line: 234, column: 26, scope: !15055)
!15066 = !DILocation(line: 234, column: 2, scope: !15055)
!15067 = !DILocation(line: 235, column: 31, scope: !15055)
!15068 = !DILocation(line: 235, column: 36, scope: !15055)
!15069 = !DILocation(line: 236, column: 10, scope: !15055)
!15070 = !DILocation(line: 235, column: 2, scope: !15055)
!15071 = !DILocation(line: 237, column: 1, scope: !15055)
!15072 = distinct !DISubprogram(name: "ata_msense_caching", scope: !3, file: !3, line: 2204, type: !15073, scopeLine: 2205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15073 = !DISubroutineType(types: !15074)
!15074 = !{!7, !6696, !6537, !1482}
!15075 = !DILocalVariable(name: "id", arg: 1, scope: !15072, file: !3, line: 2204, type: !6696)
!15076 = !DILocation(line: 2204, column: 45, scope: !15072)
!15077 = !DILocalVariable(name: "buf", arg: 2, scope: !15072, file: !3, line: 2204, type: !6537)
!15078 = !DILocation(line: 2204, column: 53, scope: !15072)
!15079 = !DILocalVariable(name: "changeable", arg: 3, scope: !15072, file: !3, line: 2204, type: !1482)
!15080 = !DILocation(line: 2204, column: 63, scope: !15072)
!15081 = !DILocation(line: 2206, column: 10, scope: !15072)
!15082 = !DILocation(line: 2206, column: 57, scope: !15072)
!15083 = !DILocation(line: 2206, column: 2, scope: !15072)
!15084 = !DILocation(line: 2207, column: 6, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15072, file: !3, line: 2207, column: 6)
!15086 = !DILocation(line: 2207, column: 6, scope: !15072)
!15087 = !DILocation(line: 2208, column: 3, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15085, file: !3, line: 2207, column: 18)
!15089 = !DILocation(line: 2208, column: 10, scope: !15088)
!15090 = !DILocation(line: 2209, column: 2, scope: !15088)
!15091 = !DILocation(line: 2210, column: 36, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15085, file: !3, line: 2209, column: 9)
!15093 = !DILocation(line: 2210, column: 14, scope: !15092)
!15094 = !DILocation(line: 2210, column: 40, scope: !15092)
!15095 = !DILocation(line: 2210, column: 3, scope: !15092)
!15096 = !DILocation(line: 2210, column: 10, scope: !15092)
!15097 = !DILocation(line: 2211, column: 38, scope: !15092)
!15098 = !DILocation(line: 2211, column: 16, scope: !15092)
!15099 = !DILocation(line: 2211, column: 15, scope: !15092)
!15100 = !DILocation(line: 2211, column: 42, scope: !15092)
!15101 = !DILocation(line: 2211, column: 3, scope: !15092)
!15102 = !DILocation(line: 2211, column: 11, scope: !15092)
!15103 = !DILocation(line: 2213, column: 2, scope: !15072)
!15104 = distinct !DISubprogram(name: "modecpy", scope: !3, file: !3, line: 2181, type: !15105, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15105 = !DISubroutineType(types: !15106)
!15106 = !{null, !6537, !9839, !211, !1482}
!15107 = !DILocalVariable(name: "dest", arg: 1, scope: !15104, file: !3, line: 2181, type: !6537)
!15108 = !DILocation(line: 2181, column: 25, scope: !15104)
!15109 = !DILocalVariable(name: "src", arg: 2, scope: !15104, file: !3, line: 2181, type: !9839)
!15110 = !DILocation(line: 2181, column: 41, scope: !15104)
!15111 = !DILocalVariable(name: "n", arg: 3, scope: !15104, file: !3, line: 2181, type: !211)
!15112 = !DILocation(line: 2181, column: 50, scope: !15104)
!15113 = !DILocalVariable(name: "changeable", arg: 4, scope: !15104, file: !3, line: 2181, type: !1482)
!15114 = !DILocation(line: 2181, column: 58, scope: !15104)
!15115 = !DILocation(line: 2183, column: 6, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15104, file: !3, line: 2183, column: 6)
!15117 = !DILocation(line: 2183, column: 6, scope: !15104)
!15118 = !DILocation(line: 2184, column: 10, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15116, file: !3, line: 2183, column: 18)
!15120 = !DILocation(line: 2184, column: 16, scope: !15119)
!15121 = !DILocation(line: 2184, column: 3, scope: !15119)
!15122 = !DILocation(line: 2185, column: 10, scope: !15119)
!15123 = !DILocation(line: 2185, column: 15, scope: !15119)
!15124 = !DILocation(line: 2185, column: 23, scope: !15119)
!15125 = !DILocation(line: 2185, column: 25, scope: !15119)
!15126 = !DILocation(line: 2185, column: 3, scope: !15119)
!15127 = !DILocation(line: 2186, column: 2, scope: !15119)
!15128 = !DILocation(line: 2187, column: 10, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15116, file: !3, line: 2186, column: 9)
!15130 = !DILocation(line: 2187, column: 16, scope: !15129)
!15131 = !DILocation(line: 2187, column: 21, scope: !15129)
!15132 = !DILocation(line: 2187, column: 3, scope: !15129)
!15133 = !DILocation(line: 2189, column: 1, scope: !15104)
!15134 = distinct !DISubprogram(name: "ata_id_rahead_enabled", scope: !449, file: !449, line: 740, type: !9196, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15135 = !DILocalVariable(name: "id", arg: 1, scope: !15134, file: !449, line: 740, type: !9198)
!15136 = !DILocation(line: 740, column: 53, scope: !15134)
!15137 = !DILocation(line: 742, column: 7, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15134, file: !449, line: 742, column: 6)
!15139 = !DILocation(line: 742, column: 30, scope: !15138)
!15140 = !DILocation(line: 742, column: 40, scope: !15138)
!15141 = !DILocation(line: 742, column: 6, scope: !15134)
!15142 = !DILocation(line: 743, column: 3, scope: !15138)
!15143 = !DILocation(line: 744, column: 9, scope: !15134)
!15144 = !DILocation(line: 744, column: 33, scope: !15134)
!15145 = !DILocation(line: 744, column: 2, scope: !15134)
!15146 = !DILocation(line: 745, column: 1, scope: !15134)
!15147 = distinct !DISubprogram(name: "ata_msense_control", scope: !3, file: !3, line: 2227, type: !15148, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15148 = !DISubroutineType(types: !15149)
!15149 = !{!7, !6455, !6537, !1482}
!15150 = !DILocalVariable(name: "dev", arg: 1, scope: !15147, file: !3, line: 2227, type: !6455)
!15151 = !DILocation(line: 2227, column: 59, scope: !15147)
!15152 = !DILocalVariable(name: "buf", arg: 2, scope: !15147, file: !3, line: 2227, type: !6537)
!15153 = !DILocation(line: 2227, column: 68, scope: !15147)
!15154 = !DILocalVariable(name: "changeable", arg: 3, scope: !15147, file: !3, line: 2228, type: !1482)
!15155 = !DILocation(line: 2228, column: 11, scope: !15147)
!15156 = !DILocation(line: 2230, column: 10, scope: !15147)
!15157 = !DILocation(line: 2230, column: 61, scope: !15147)
!15158 = !DILocation(line: 2230, column: 2, scope: !15147)
!15159 = !DILocation(line: 2231, column: 6, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15147, file: !3, line: 2231, column: 6)
!15161 = !DILocation(line: 2231, column: 6, scope: !15147)
!15162 = !DILocation(line: 2232, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15160, file: !3, line: 2231, column: 18)
!15164 = !DILocation(line: 2232, column: 10, scope: !15163)
!15165 = !DILocation(line: 2233, column: 2, scope: !15163)
!15166 = !DILocalVariable(name: "d_sense", scope: !15167, file: !3, line: 2234, type: !1482)
!15167 = distinct !DILexicalBlock(scope: !15160, file: !3, line: 2233, column: 9)
!15168 = !DILocation(line: 2234, column: 8, scope: !15167)
!15169 = !DILocation(line: 2234, column: 19, scope: !15167)
!15170 = !DILocation(line: 2234, column: 24, scope: !15167)
!15171 = !DILocation(line: 2234, column: 30, scope: !15167)
!15172 = !DILocation(line: 2234, column: 18, scope: !15167)
!15173 = !DILocation(line: 2236, column: 14, scope: !15167)
!15174 = !DILocation(line: 2236, column: 22, scope: !15167)
!15175 = !DILocation(line: 2236, column: 3, scope: !15167)
!15176 = !DILocation(line: 2236, column: 10, scope: !15167)
!15177 = !DILocation(line: 2238, column: 2, scope: !15147)
!15178 = distinct !DISubprogram(name: "ata_fpdma_zac_mgmt_in_supported", scope: !183, file: !183, line: 1714, type: !14678, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15179 = !DILocalVariable(name: "dev", arg: 1, scope: !15178, file: !183, line: 1714, type: !6455)
!15180 = !DILocation(line: 1714, column: 71, scope: !15178)
!15181 = !DILocation(line: 1716, column: 10, scope: !15178)
!15182 = !DILocation(line: 1716, column: 15, scope: !15178)
!15183 = !DILocation(line: 1716, column: 21, scope: !15178)
!15184 = !DILocation(line: 1716, column: 48, scope: !15178)
!15185 = !DILocation(line: 1717, column: 4, scope: !15178)
!15186 = !DILocation(line: 1717, column: 9, scope: !15178)
!15187 = !DILocation(line: 1717, column: 67, scope: !15178)
!15188 = !DILocation(line: 0, scope: !15178)
!15189 = !DILocation(line: 1716, column: 2, scope: !15178)
!15190 = distinct !DISubprogram(name: "ata_scsi_report_zones_complete", scope: !3, file: !3, line: 3343, type: !6656, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15191 = !DILocation(line: 63, column: 52, scope: !10349, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 3392, column: 4, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15194, file: !3, line: 3376, column: 33)
!15194 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 3354, column: 32)
!15195 = !DILocation(line: 63, column: 63, scope: !10349, inlinedAt: !15192)
!15196 = !DILocalVariable(name: "p", arg: 1, scope: !15197, file: !12837, line: 48, type: !15200)
!15197 = distinct !DISubprogram(name: "__le64_to_cpup", scope: !12837, file: !12837, line: 48, type: !15198, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15198 = !DISubroutineType(types: !15199)
!15199 = !{!978, !15200}
!15200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15201, size: 64)
!15201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6937)
!15202 = !DILocation(line: 48, column: 59, scope: !15197, inlinedAt: !15203)
!15203 = distinct !DILocation(line: 20, column: 9, scope: !15204, inlinedAt: !15207)
!15204 = distinct !DISubprogram(name: "get_unaligned_le64", scope: !10339, file: !10339, line: 18, type: !15205, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15205 = !DISubroutineType(types: !15206)
!15206 = !{!976, !2823}
!15207 = distinct !DILocation(line: 3389, column: 9, scope: !15193)
!15208 = !DILocalVariable(name: "p", arg: 1, scope: !15204, file: !10339, line: 18, type: !2823)
!15209 = !DILocation(line: 18, column: 59, scope: !15204, inlinedAt: !15207)
!15210 = !DILocation(line: 63, column: 52, scope: !10349, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 3393, column: 4, scope: !15193)
!15212 = !DILocation(line: 63, column: 63, scope: !10349, inlinedAt: !15211)
!15213 = !DILocation(line: 48, column: 59, scope: !15197, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 20, column: 9, scope: !15204, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 3388, column: 12, scope: !15193)
!15216 = !DILocation(line: 18, column: 59, scope: !15204, inlinedAt: !15215)
!15217 = !DILocation(line: 63, column: 52, scope: !10349, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 3394, column: 4, scope: !15193)
!15219 = !DILocation(line: 63, column: 63, scope: !10349, inlinedAt: !15218)
!15220 = !DILocation(line: 48, column: 59, scope: !15197, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 20, column: 9, scope: !15204, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 3387, column: 11, scope: !15193)
!15223 = !DILocation(line: 18, column: 59, scope: !15204, inlinedAt: !15222)
!15224 = !DILocation(line: 63, column: 52, scope: !10349, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 3372, column: 4, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15227, file: !3, line: 3357, column: 19)
!15227 = distinct !DILexicalBlock(scope: !15194, file: !3, line: 3357, column: 7)
!15228 = !DILocation(line: 63, column: 63, scope: !10349, inlinedAt: !15225)
!15229 = !DILocation(line: 63, column: 52, scope: !10349, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 3371, column: 4, scope: !15226)
!15231 = !DILocation(line: 63, column: 63, scope: !10349, inlinedAt: !15230)
!15232 = !DILocation(line: 58, column: 52, scope: !10338, inlinedAt: !15233)
!15233 = distinct !DILocation(line: 3369, column: 4, scope: !15226)
!15234 = !DILocation(line: 58, column: 63, scope: !10338, inlinedAt: !15233)
!15235 = !DILocation(line: 48, column: 59, scope: !15197, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 20, column: 9, scope: !15204, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 3368, column: 14, scope: !15226)
!15238 = !DILocation(line: 18, column: 59, scope: !15204, inlinedAt: !15237)
!15239 = !DILocation(line: 48, column: 59, scope: !15197, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 20, column: 9, scope: !15204, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 3367, column: 14, scope: !15226)
!15242 = !DILocation(line: 18, column: 59, scope: !15204, inlinedAt: !15241)
!15243 = !DILocalVariable(name: "p", arg: 1, scope: !15244, file: !12837, line: 64, type: !15247)
!15244 = distinct !DISubprogram(name: "__le16_to_cpup", scope: !12837, file: !12837, line: 64, type: !15245, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15245 = !DISubroutineType(types: !15246)
!15246 = !{!1727, !15247}
!15247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15248, size: 64)
!15248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6946)
!15249 = !DILocation(line: 64, column: 59, scope: !15244, inlinedAt: !15250)
!15250 = distinct !DILocation(line: 10, column: 9, scope: !15251, inlinedAt: !15252)
!15251 = distinct !DISubprogram(name: "get_unaligned_le16", scope: !10339, file: !10339, line: 8, type: !13262, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15252 = distinct !DILocation(line: 3366, column: 11, scope: !15226)
!15253 = !DILocalVariable(name: "p", arg: 1, scope: !15251, file: !10339, line: 8, type: !2823)
!15254 = !DILocation(line: 8, column: 59, scope: !15251, inlinedAt: !15252)
!15255 = !DILocalVariable(name: "p", arg: 1, scope: !15256, file: !12837, line: 56, type: !15259)
!15256 = distinct !DISubprogram(name: "__le32_to_cpup", scope: !12837, file: !12837, line: 56, type: !15257, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15257 = !DISubroutineType(types: !15258)
!15258 = !{!1050, !15259}
!15259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15260, size: 64)
!15260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6872)
!15261 = !DILocation(line: 56, column: 59, scope: !15256, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 15, column: 9, scope: !15263, inlinedAt: !15264)
!15263 = distinct !DISubprogram(name: "get_unaligned_le32", scope: !10339, file: !10339, line: 13, type: !12844, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15264 = distinct !DILocation(line: 3365, column: 18, scope: !15226)
!15265 = !DILocalVariable(name: "p", arg: 1, scope: !15263, file: !10339, line: 13, type: !2823)
!15266 = !DILocation(line: 13, column: 59, scope: !15263, inlinedAt: !15264)
!15267 = !DILocalVariable(name: "qc", arg: 1, scope: !15190, file: !3, line: 3343, type: !6450)
!15268 = !DILocation(line: 3343, column: 67, scope: !15190)
!15269 = !DILocalVariable(name: "scmd", scope: !15190, file: !3, line: 3345, type: !6139)
!15270 = !DILocation(line: 3345, column: 20, scope: !15190)
!15271 = !DILocation(line: 3345, column: 27, scope: !15190)
!15272 = !DILocation(line: 3345, column: 31, scope: !15190)
!15273 = !DILocalVariable(name: "miter", scope: !15190, file: !3, line: 3346, type: !15274)
!15274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_mapping_iter", file: !6175, line: 497, size: 576, elements: !15275)
!15275 = !{!15276, !15277, !15278, !15279, !15280, !15287, !15288, !15289}
!15276 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !15274, file: !6175, line: 499, baseType: !1318, size: 64)
!15277 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !15274, file: !6175, line: 500, baseType: !983, size: 64, offset: 64)
!15278 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !15274, file: !6175, line: 501, baseType: !1631, size: 64, offset: 128)
!15279 = !DIDerivedType(tag: DW_TAG_member, name: "consumed", scope: !15274, file: !6175, line: 502, baseType: !1631, size: 64, offset: 192)
!15280 = !DIDerivedType(tag: DW_TAG_member, name: "piter", scope: !15274, file: !6175, line: 503, baseType: !15281, size: 192, offset: 256)
!15281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_page_iter", file: !6175, line: 372, size: 192, elements: !15282)
!15282 = !{!15283, !15284, !15285, !15286}
!15283 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !15281, file: !6175, line: 373, baseType: !6178, size: 64)
!15284 = !DIDerivedType(tag: DW_TAG_member, name: "sg_pgoffset", scope: !15281, file: !6175, line: 374, baseType: !7, size: 32, offset: 64)
!15285 = !DIDerivedType(tag: DW_TAG_member, name: "__nents", scope: !15281, file: !6175, line: 377, baseType: !7, size: 32, offset: 96)
!15286 = !DIDerivedType(tag: DW_TAG_member, name: "__pg_advance", scope: !15281, file: !6175, line: 378, baseType: !211, size: 32, offset: 128)
!15287 = !DIDerivedType(tag: DW_TAG_member, name: "__offset", scope: !15274, file: !6175, line: 506, baseType: !7, size: 32, offset: 448)
!15288 = !DIDerivedType(tag: DW_TAG_member, name: "__remaining", scope: !15274, file: !6175, line: 507, baseType: !7, size: 32, offset: 480)
!15289 = !DIDerivedType(tag: DW_TAG_member, name: "__flags", scope: !15274, file: !6175, line: 508, baseType: !7, size: 32, offset: 512)
!15290 = !DILocation(line: 3346, column: 25, scope: !15190)
!15291 = !DILocalVariable(name: "flags", scope: !15190, file: !3, line: 3347, type: !986)
!15292 = !DILocation(line: 3347, column: 16, scope: !15190)
!15293 = !DILocalVariable(name: "bytes", scope: !15190, file: !3, line: 3348, type: !7)
!15294 = !DILocation(line: 3348, column: 15, scope: !15190)
!15295 = !DILocation(line: 3350, column: 37, scope: !15190)
!15296 = !DILocation(line: 3350, column: 25, scope: !15190)
!15297 = !DILocation(line: 3350, column: 58, scope: !15190)
!15298 = !DILocation(line: 3350, column: 44, scope: !15190)
!15299 = !DILocation(line: 3350, column: 2, scope: !15190)
!15300 = !DILocation(line: 3353, column: 2, scope: !15190)
!15301 = !DILocation(line: 3353, column: 2, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 3353, column: 2)
!15303 = !DILocalVariable(name: "__dummy", scope: !15304, file: !3, line: 3353, type: !986)
!15304 = distinct !DILexicalBlock(scope: !15305, file: !3, line: 3353, column: 2)
!15305 = distinct !DILexicalBlock(scope: !15302, file: !3, line: 3353, column: 2)
!15306 = !DILocation(line: 3353, column: 2, scope: !15304)
!15307 = !DILocalVariable(name: "__dummy2", scope: !15304, file: !3, line: 3353, type: !986)
!15308 = !DILocation(line: 3353, column: 2, scope: !15305)
!15309 = !DILocation(line: 3354, column: 2, scope: !15190)
!15310 = !DILocation(line: 3354, column: 9, scope: !15190)
!15311 = !DILocalVariable(name: "offset", scope: !15194, file: !3, line: 3355, type: !7)
!15312 = !DILocation(line: 3355, column: 16, scope: !15194)
!15313 = !DILocation(line: 3357, column: 7, scope: !15227)
!15314 = !DILocation(line: 3357, column: 13, scope: !15227)
!15315 = !DILocation(line: 3357, column: 7, scope: !15194)
!15316 = !DILocalVariable(name: "hdr", scope: !15226, file: !3, line: 3358, type: !1463)
!15317 = !DILocation(line: 3358, column: 10, scope: !15226)
!15318 = !DILocalVariable(name: "list_length", scope: !15226, file: !3, line: 3359, type: !1049)
!15319 = !DILocation(line: 3359, column: 8, scope: !15226)
!15320 = !DILocalVariable(name: "max_lba", scope: !15226, file: !3, line: 3360, type: !976)
!15321 = !DILocation(line: 3360, column: 8, scope: !15226)
!15322 = !DILocalVariable(name: "opt_lba", scope: !15226, file: !3, line: 3360, type: !976)
!15323 = !DILocation(line: 3360, column: 17, scope: !15226)
!15324 = !DILocalVariable(name: "same", scope: !15226, file: !3, line: 3361, type: !1726)
!15325 = !DILocation(line: 3361, column: 8, scope: !15226)
!15326 = !DILocation(line: 3364, column: 16, scope: !15226)
!15327 = !DILocation(line: 3364, column: 8, scope: !15226)
!15328 = !DILocation(line: 3365, column: 38, scope: !15226)
!15329 = !DILocation(line: 15, column: 32, scope: !15263, inlinedAt: !15264)
!15330 = !DILocation(line: 15, column: 22, scope: !15263, inlinedAt: !15264)
!15331 = !DILocation(line: 58, column: 25, scope: !15256, inlinedAt: !15262)
!15332 = !DILocation(line: 58, column: 24, scope: !15256, inlinedAt: !15262)
!15333 = !DILocation(line: 3365, column: 16, scope: !15226)
!15334 = !DILocation(line: 3366, column: 31, scope: !15226)
!15335 = !DILocation(line: 10, column: 32, scope: !15251, inlinedAt: !15252)
!15336 = !DILocation(line: 10, column: 22, scope: !15251, inlinedAt: !15252)
!15337 = !DILocation(line: 66, column: 25, scope: !15244, inlinedAt: !15250)
!15338 = !DILocation(line: 66, column: 24, scope: !15244, inlinedAt: !15250)
!15339 = !DILocation(line: 3366, column: 9, scope: !15226)
!15340 = !DILocation(line: 3367, column: 34, scope: !15226)
!15341 = !DILocation(line: 20, column: 32, scope: !15204, inlinedAt: !15241)
!15342 = !DILocation(line: 20, column: 22, scope: !15204, inlinedAt: !15241)
!15343 = !DILocation(line: 50, column: 25, scope: !15197, inlinedAt: !15240)
!15344 = !DILocation(line: 50, column: 24, scope: !15197, inlinedAt: !15240)
!15345 = !DILocation(line: 3367, column: 12, scope: !15226)
!15346 = !DILocation(line: 3368, column: 34, scope: !15226)
!15347 = !DILocation(line: 20, column: 32, scope: !15204, inlinedAt: !15237)
!15348 = !DILocation(line: 20, column: 22, scope: !15204, inlinedAt: !15237)
!15349 = !DILocation(line: 50, column: 25, scope: !15197, inlinedAt: !15236)
!15350 = !DILocation(line: 50, column: 24, scope: !15197, inlinedAt: !15236)
!15351 = !DILocation(line: 3368, column: 12, scope: !15226)
!15352 = !DILocation(line: 3369, column: 23, scope: !15226)
!15353 = !DILocation(line: 3369, column: 37, scope: !15226)
!15354 = !DILocation(line: 60, column: 19, scope: !10338, inlinedAt: !15233)
!15355 = !DILocation(line: 60, column: 14, scope: !10338, inlinedAt: !15233)
!15356 = !DILocation(line: 60, column: 4, scope: !10338, inlinedAt: !15233)
!15357 = !DILocation(line: 60, column: 17, scope: !10338, inlinedAt: !15233)
!15358 = !DILocation(line: 3370, column: 13, scope: !15226)
!15359 = !DILocation(line: 3370, column: 18, scope: !15226)
!15360 = !DILocation(line: 3370, column: 4, scope: !15226)
!15361 = !DILocation(line: 3370, column: 11, scope: !15226)
!15362 = !DILocation(line: 3371, column: 23, scope: !15226)
!15363 = !DILocation(line: 3371, column: 33, scope: !15226)
!15364 = !DILocation(line: 65, column: 19, scope: !10349, inlinedAt: !15230)
!15365 = !DILocation(line: 65, column: 14, scope: !10349, inlinedAt: !15230)
!15366 = !DILocation(line: 65, column: 4, scope: !10349, inlinedAt: !15230)
!15367 = !DILocation(line: 65, column: 17, scope: !10349, inlinedAt: !15230)
!15368 = !DILocation(line: 3372, column: 23, scope: !15226)
!15369 = !DILocation(line: 3372, column: 33, scope: !15226)
!15370 = !DILocation(line: 65, column: 19, scope: !10349, inlinedAt: !15225)
!15371 = !DILocation(line: 65, column: 14, scope: !10349, inlinedAt: !15225)
!15372 = !DILocation(line: 65, column: 4, scope: !10349, inlinedAt: !15225)
!15373 = !DILocation(line: 65, column: 17, scope: !10349, inlinedAt: !15225)
!15374 = !DILocation(line: 3373, column: 11, scope: !15226)
!15375 = !DILocation(line: 3374, column: 10, scope: !15226)
!15376 = !DILocation(line: 3375, column: 3, scope: !15226)
!15377 = !DILocation(line: 3376, column: 3, scope: !15194)
!15378 = !DILocation(line: 3376, column: 10, scope: !15194)
!15379 = !DILocation(line: 3376, column: 25, scope: !15194)
!15380 = !DILocation(line: 3376, column: 17, scope: !15194)
!15381 = !DILocalVariable(name: "rec", scope: !15193, file: !3, line: 3377, type: !1463)
!15382 = !DILocation(line: 3377, column: 10, scope: !15193)
!15383 = !DILocalVariable(name: "cond", scope: !15193, file: !3, line: 3378, type: !1203)
!15384 = !DILocation(line: 3378, column: 7, scope: !15193)
!15385 = !DILocalVariable(name: "type", scope: !15193, file: !3, line: 3378, type: !1203)
!15386 = !DILocation(line: 3378, column: 13, scope: !15193)
!15387 = !DILocalVariable(name: "non_seq", scope: !15193, file: !3, line: 3378, type: !1203)
!15388 = !DILocation(line: 3378, column: 19, scope: !15193)
!15389 = !DILocalVariable(name: "reset", scope: !15193, file: !3, line: 3378, type: !1203)
!15390 = !DILocation(line: 3378, column: 28, scope: !15193)
!15391 = !DILocalVariable(name: "size", scope: !15193, file: !3, line: 3379, type: !976)
!15392 = !DILocation(line: 3379, column: 8, scope: !15193)
!15393 = !DILocalVariable(name: "start", scope: !15193, file: !3, line: 3379, type: !976)
!15394 = !DILocation(line: 3379, column: 14, scope: !15193)
!15395 = !DILocalVariable(name: "wp", scope: !15193, file: !3, line: 3379, type: !976)
!15396 = !DILocation(line: 3379, column: 21, scope: !15193)
!15397 = !DILocation(line: 3382, column: 16, scope: !15193)
!15398 = !DILocation(line: 3382, column: 23, scope: !15193)
!15399 = !DILocation(line: 3382, column: 21, scope: !15193)
!15400 = !DILocation(line: 3382, column: 8, scope: !15193)
!15401 = !DILocation(line: 3383, column: 11, scope: !15193)
!15402 = !DILocation(line: 3383, column: 18, scope: !15193)
!15403 = !DILocation(line: 3383, column: 9, scope: !15193)
!15404 = !DILocation(line: 3384, column: 12, scope: !15193)
!15405 = !DILocation(line: 3384, column: 19, scope: !15193)
!15406 = !DILocation(line: 3384, column: 25, scope: !15193)
!15407 = !DILocation(line: 3384, column: 11, scope: !15193)
!15408 = !DILocation(line: 3384, column: 9, scope: !15193)
!15409 = !DILocation(line: 3385, column: 15, scope: !15193)
!15410 = !DILocation(line: 3385, column: 22, scope: !15193)
!15411 = !DILocation(line: 3385, column: 14, scope: !15193)
!15412 = !DILocation(line: 3385, column: 12, scope: !15193)
!15413 = !DILocation(line: 3386, column: 13, scope: !15193)
!15414 = !DILocation(line: 3386, column: 20, scope: !15193)
!15415 = !DILocation(line: 3386, column: 12, scope: !15193)
!15416 = !DILocation(line: 3386, column: 10, scope: !15193)
!15417 = !DILocation(line: 3387, column: 31, scope: !15193)
!15418 = !DILocation(line: 20, column: 32, scope: !15204, inlinedAt: !15222)
!15419 = !DILocation(line: 20, column: 22, scope: !15204, inlinedAt: !15222)
!15420 = !DILocation(line: 50, column: 25, scope: !15197, inlinedAt: !15221)
!15421 = !DILocation(line: 50, column: 24, scope: !15197, inlinedAt: !15221)
!15422 = !DILocation(line: 3387, column: 9, scope: !15193)
!15423 = !DILocation(line: 3388, column: 32, scope: !15193)
!15424 = !DILocation(line: 20, column: 32, scope: !15204, inlinedAt: !15215)
!15425 = !DILocation(line: 20, column: 22, scope: !15204, inlinedAt: !15215)
!15426 = !DILocation(line: 50, column: 25, scope: !15197, inlinedAt: !15214)
!15427 = !DILocation(line: 50, column: 24, scope: !15197, inlinedAt: !15214)
!15428 = !DILocation(line: 3388, column: 10, scope: !15193)
!15429 = !DILocation(line: 3389, column: 29, scope: !15193)
!15430 = !DILocation(line: 20, column: 32, scope: !15204, inlinedAt: !15207)
!15431 = !DILocation(line: 20, column: 22, scope: !15204, inlinedAt: !15207)
!15432 = !DILocation(line: 50, column: 25, scope: !15197, inlinedAt: !15203)
!15433 = !DILocation(line: 50, column: 24, scope: !15197, inlinedAt: !15203)
!15434 = !DILocation(line: 3389, column: 7, scope: !15193)
!15435 = !DILocation(line: 3390, column: 13, scope: !15193)
!15436 = !DILocation(line: 3390, column: 4, scope: !15193)
!15437 = !DILocation(line: 3390, column: 11, scope: !15193)
!15438 = !DILocation(line: 3391, column: 14, scope: !15193)
!15439 = !DILocation(line: 3391, column: 19, scope: !15193)
!15440 = !DILocation(line: 3391, column: 27, scope: !15193)
!15441 = !DILocation(line: 3391, column: 25, scope: !15193)
!15442 = !DILocation(line: 3391, column: 37, scope: !15193)
!15443 = !DILocation(line: 3391, column: 35, scope: !15193)
!15444 = !DILocation(line: 3391, column: 13, scope: !15193)
!15445 = !DILocation(line: 3391, column: 4, scope: !15193)
!15446 = !DILocation(line: 3391, column: 11, scope: !15193)
!15447 = !DILocation(line: 3392, column: 23, scope: !15193)
!15448 = !DILocation(line: 3392, column: 30, scope: !15193)
!15449 = !DILocation(line: 65, column: 19, scope: !10349, inlinedAt: !15192)
!15450 = !DILocation(line: 65, column: 14, scope: !10349, inlinedAt: !15192)
!15451 = !DILocation(line: 65, column: 4, scope: !10349, inlinedAt: !15192)
!15452 = !DILocation(line: 65, column: 17, scope: !10349, inlinedAt: !15192)
!15453 = !DILocation(line: 3393, column: 23, scope: !15193)
!15454 = !DILocation(line: 3393, column: 31, scope: !15193)
!15455 = !DILocation(line: 65, column: 19, scope: !10349, inlinedAt: !15211)
!15456 = !DILocation(line: 65, column: 14, scope: !10349, inlinedAt: !15211)
!15457 = !DILocation(line: 65, column: 4, scope: !10349, inlinedAt: !15211)
!15458 = !DILocation(line: 65, column: 17, scope: !10349, inlinedAt: !15211)
!15459 = !DILocation(line: 3394, column: 23, scope: !15193)
!15460 = !DILocation(line: 3394, column: 28, scope: !15193)
!15461 = !DILocation(line: 65, column: 19, scope: !10349, inlinedAt: !15218)
!15462 = !DILocation(line: 65, column: 14, scope: !10349, inlinedAt: !15218)
!15463 = !DILocation(line: 65, column: 4, scope: !10349, inlinedAt: !15218)
!15464 = !DILocation(line: 65, column: 17, scope: !10349, inlinedAt: !15218)
!15465 = !DILocalVariable(name: "__ret_warn_on", scope: !15466, file: !3, line: 3395, type: !211)
!15466 = distinct !DILexicalBlock(scope: !15193, file: !3, line: 3395, column: 4)
!15467 = !DILocation(line: 3395, column: 4, scope: !15466)
!15468 = !DILocation(line: 3395, column: 4, scope: !15469)
!15469 = distinct !DILexicalBlock(scope: !15466, file: !3, line: 3395, column: 4)
!15470 = !DILocation(line: 3395, column: 4, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15469, file: !3, line: 3395, column: 4)
!15472 = !DILocation(line: 3395, column: 4, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 3395, column: 4)
!15474 = !DILocation(line: 3395, column: 4, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 3395, column: 4)
!15476 = !{i32 -2139691612, i32 -2139691583, i32 -2139691537, i32 -2139691479, i32 -2139691425, i32 -2139691371, i32 -2139691316, i32 -2139691285}
!15477 = !DILocation(line: 3395, column: 4, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 3395, column: 4)
!15479 = !{i32 -2139690877, i32 -2139690870, i32 -2139690818, i32 -2139690787, i32 -2139690757}
!15480 = !DILocation(line: 3395, column: 4, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 3395, column: 4)
!15482 = !DILocation(line: 3396, column: 11, scope: !15193)
!15483 = !DILocation(line: 3397, column: 10, scope: !15193)
!15484 = distinct !{!15484, !15377, !15485}
!15485 = !DILocation(line: 3398, column: 3, scope: !15194)
!15486 = distinct !{!15486, !15309, !15487}
!15487 = !DILocation(line: 3399, column: 2, scope: !15190)
!15488 = !DILocation(line: 3400, column: 2, scope: !15190)
!15489 = !DILocation(line: 3401, column: 2, scope: !15190)
!15490 = !DILocation(line: 3401, column: 2, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 3401, column: 2)
!15492 = !DILocalVariable(name: "__dummy", scope: !15493, file: !3, line: 3401, type: !986)
!15493 = distinct !DILexicalBlock(scope: !15494, file: !3, line: 3401, column: 2)
!15494 = distinct !DILexicalBlock(scope: !15491, file: !3, line: 3401, column: 2)
!15495 = !DILocation(line: 3401, column: 2, scope: !15493)
!15496 = !DILocalVariable(name: "__dummy2", scope: !15493, file: !3, line: 3401, type: !986)
!15497 = !DILocation(line: 3401, column: 2, scope: !15494)
!15498 = !DILocation(line: 3403, column: 23, scope: !15190)
!15499 = !DILocation(line: 3403, column: 2, scope: !15190)
!15500 = !DILocation(line: 3404, column: 1, scope: !15190)
!15501 = distinct !DISubprogram(name: "ata_scsi_qc_complete", scope: !3, file: !3, line: 1641, type: !6656, scopeLine: 1642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15502 = !DILocalVariable(name: "qc", arg: 1, scope: !15501, file: !3, line: 1641, type: !6450)
!15503 = !DILocation(line: 1641, column: 57, scope: !15501)
!15504 = !DILocalVariable(name: "ap", scope: !15501, file: !3, line: 1643, type: !988)
!15505 = !DILocation(line: 1643, column: 19, scope: !15501)
!15506 = !DILocation(line: 1643, column: 24, scope: !15501)
!15507 = !DILocation(line: 1643, column: 28, scope: !15501)
!15508 = !DILocalVariable(name: "cmd", scope: !15501, file: !3, line: 1644, type: !6139)
!15509 = !DILocation(line: 1644, column: 20, scope: !15501)
!15510 = !DILocation(line: 1644, column: 26, scope: !15501)
!15511 = !DILocation(line: 1644, column: 30, scope: !15501)
!15512 = !DILocalVariable(name: "cdb", scope: !15501, file: !3, line: 1645, type: !6537)
!15513 = !DILocation(line: 1645, column: 6, scope: !15501)
!15514 = !DILocation(line: 1645, column: 12, scope: !15501)
!15515 = !DILocation(line: 1645, column: 17, scope: !15501)
!15516 = !DILocalVariable(name: "need_sense", scope: !15501, file: !3, line: 1646, type: !211)
!15517 = !DILocation(line: 1646, column: 6, scope: !15501)
!15518 = !DILocation(line: 1646, column: 20, scope: !15501)
!15519 = !DILocation(line: 1646, column: 24, scope: !15501)
!15520 = !DILocation(line: 1646, column: 33, scope: !15501)
!15521 = !DILocation(line: 1657, column: 8, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15501, file: !3, line: 1657, column: 6)
!15523 = !DILocation(line: 1657, column: 15, scope: !15522)
!15524 = !DILocation(line: 1657, column: 26, scope: !15522)
!15525 = !DILocation(line: 1657, column: 30, scope: !15522)
!15526 = !DILocation(line: 1657, column: 37, scope: !15522)
!15527 = !DILocation(line: 1657, column: 49, scope: !15522)
!15528 = !DILocation(line: 1658, column: 8, scope: !15522)
!15529 = !DILocation(line: 1658, column: 15, scope: !15522)
!15530 = !DILocation(line: 1658, column: 23, scope: !15522)
!15531 = !DILocation(line: 1658, column: 26, scope: !15522)
!15532 = !DILocation(line: 1657, column: 6, scope: !15501)
!15533 = !DILocation(line: 1659, column: 26, scope: !15522)
!15534 = !DILocation(line: 1659, column: 3, scope: !15522)
!15535 = !DILocation(line: 1660, column: 11, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15522, file: !3, line: 1660, column: 11)
!15537 = !DILocation(line: 1660, column: 15, scope: !15536)
!15538 = !DILocation(line: 1660, column: 21, scope: !15536)
!15539 = !DILocation(line: 1660, column: 11, scope: !15522)
!15540 = !DILocation(line: 1661, column: 3, scope: !15536)
!15541 = !DILocation(line: 1661, column: 8, scope: !15536)
!15542 = !DILocation(line: 1661, column: 15, scope: !15536)
!15543 = !DILocation(line: 1662, column: 11, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15536, file: !3, line: 1662, column: 11)
!15545 = !DILocation(line: 1662, column: 11, scope: !15536)
!15546 = !DILocation(line: 1663, column: 21, scope: !15544)
!15547 = !DILocation(line: 1663, column: 3, scope: !15544)
!15548 = !DILocation(line: 1665, column: 3, scope: !15544)
!15549 = !DILocation(line: 1665, column: 8, scope: !15544)
!15550 = !DILocation(line: 1665, column: 15, scope: !15544)
!15551 = !DILocation(line: 1667, column: 6, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15501, file: !3, line: 1667, column: 6)
!15553 = !DILocation(line: 1667, column: 17, scope: !15552)
!15554 = !DILocation(line: 1667, column: 21, scope: !15552)
!15555 = !DILocation(line: 1667, column: 25, scope: !15552)
!15556 = !DILocation(line: 1667, column: 30, scope: !15552)
!15557 = !DILocation(line: 1667, column: 6, scope: !15501)
!15558 = !DILocation(line: 1668, column: 19, scope: !15552)
!15559 = !DILocation(line: 1668, column: 23, scope: !15552)
!15560 = !DILocation(line: 1668, column: 34, scope: !15552)
!15561 = !DILocation(line: 1668, column: 38, scope: !15552)
!15562 = !DILocation(line: 1668, column: 3, scope: !15552)
!15563 = !DILocation(line: 1670, column: 14, scope: !15501)
!15564 = !DILocation(line: 1670, column: 2, scope: !15501)
!15565 = !DILocation(line: 1671, column: 1, scope: !15501)
!15566 = distinct !DISubprogram(name: "__fswab64", scope: !12829, file: !12829, line: 66, type: !15567, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15567 = !DISubroutineType(types: !15568)
!15568 = !{!978, !978}
!15569 = !DILocalVariable(name: "val", arg: 1, scope: !15566, file: !12829, line: 66, type: !978)
!15570 = !DILocation(line: 66, column: 57, scope: !15566)
!15571 = !DILocation(line: 69, column: 23, scope: !15566)
!15572 = !DILocation(line: 69, column: 9, scope: !15566)
!15573 = !DILocation(line: 69, column: 2, scope: !15566)
!15574 = distinct !DISubprogram(name: "__arch_swab64", scope: !14858, file: !14858, line: 15, type: !15567, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15575 = !DILocalVariable(name: "val", arg: 1, scope: !15574, file: !14858, line: 15, type: !978)
!15576 = !DILocation(line: 15, column: 61, scope: !15574)
!15577 = !DILocation(line: 31, column: 38, scope: !15574)
!15578 = !DILocation(line: 31, column: 2, scope: !15574)
!15579 = !{i32 1048517}
!15580 = !DILocation(line: 32, column: 9, scope: !15574)
!15581 = !DILocation(line: 32, column: 2, scope: !15574)
!15582 = distinct !DISubprogram(name: "ata_gen_passthru_sense", scope: !3, file: !3, line: 850, type: !6656, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15583 = !DILocalVariable(name: "qc", arg: 1, scope: !15582, file: !3, line: 850, type: !6450)
!15584 = !DILocation(line: 850, column: 59, scope: !15582)
!15585 = !DILocalVariable(name: "cmd", scope: !15582, file: !3, line: 852, type: !6139)
!15586 = !DILocation(line: 852, column: 20, scope: !15582)
!15587 = !DILocation(line: 852, column: 26, scope: !15582)
!15588 = !DILocation(line: 852, column: 30, scope: !15582)
!15589 = !DILocalVariable(name: "tf", scope: !15582, file: !3, line: 853, type: !6695)
!15590 = !DILocation(line: 853, column: 23, scope: !15582)
!15591 = !DILocation(line: 853, column: 29, scope: !15582)
!15592 = !DILocation(line: 853, column: 33, scope: !15582)
!15593 = !DILocalVariable(name: "sb", scope: !15582, file: !3, line: 854, type: !4944)
!15594 = !DILocation(line: 854, column: 17, scope: !15582)
!15595 = !DILocation(line: 854, column: 22, scope: !15582)
!15596 = !DILocation(line: 854, column: 27, scope: !15582)
!15597 = !DILocalVariable(name: "desc", scope: !15582, file: !3, line: 855, type: !4944)
!15598 = !DILocation(line: 855, column: 17, scope: !15582)
!15599 = !DILocation(line: 855, column: 24, scope: !15582)
!15600 = !DILocation(line: 855, column: 27, scope: !15582)
!15601 = !DILocalVariable(name: "verbose", scope: !15582, file: !3, line: 856, type: !211)
!15602 = !DILocation(line: 856, column: 6, scope: !15582)
!15603 = !DILocation(line: 856, column: 16, scope: !15582)
!15604 = !DILocation(line: 856, column: 20, scope: !15582)
!15605 = !DILocation(line: 856, column: 24, scope: !15582)
!15606 = !DILocation(line: 856, column: 29, scope: !15582)
!15607 = !DILocation(line: 856, column: 43, scope: !15582)
!15608 = !DILocalVariable(name: "sense_key", scope: !15582, file: !3, line: 857, type: !1203)
!15609 = !DILocation(line: 857, column: 5, scope: !15582)
!15610 = !DILocalVariable(name: "asc", scope: !15582, file: !3, line: 857, type: !1203)
!15611 = !DILocation(line: 857, column: 16, scope: !15582)
!15612 = !DILocalVariable(name: "ascq", scope: !15582, file: !3, line: 857, type: !1203)
!15613 = !DILocation(line: 857, column: 21, scope: !15582)
!15614 = !DILocation(line: 859, column: 9, scope: !15582)
!15615 = !DILocation(line: 859, column: 2, scope: !15582)
!15616 = !DILocation(line: 861, column: 2, scope: !15582)
!15617 = !DILocation(line: 861, column: 7, scope: !15582)
!15618 = !DILocation(line: 861, column: 14, scope: !15582)
!15619 = !DILocation(line: 867, column: 6, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 867, column: 6)
!15621 = !DILocation(line: 867, column: 10, scope: !15620)
!15622 = !DILocation(line: 867, column: 19, scope: !15620)
!15623 = !DILocation(line: 868, column: 6, scope: !15620)
!15624 = !DILocation(line: 868, column: 10, scope: !15620)
!15625 = !DILocation(line: 868, column: 18, scope: !15620)
!15626 = !DILocation(line: 867, column: 6, scope: !15582)
!15627 = !DILocation(line: 869, column: 22, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15620, file: !3, line: 868, column: 61)
!15629 = !DILocation(line: 869, column: 26, scope: !15628)
!15630 = !DILocation(line: 869, column: 30, scope: !15628)
!15631 = !DILocation(line: 869, column: 40, scope: !15628)
!15632 = !DILocation(line: 869, column: 44, scope: !15628)
!15633 = !DILocation(line: 869, column: 53, scope: !15628)
!15634 = !DILocation(line: 869, column: 57, scope: !15628)
!15635 = !DILocation(line: 870, column: 33, scope: !15628)
!15636 = !DILocation(line: 869, column: 3, scope: !15628)
!15637 = !DILocation(line: 871, column: 22, scope: !15628)
!15638 = !DILocation(line: 871, column: 26, scope: !15628)
!15639 = !DILocation(line: 871, column: 31, scope: !15628)
!15640 = !DILocation(line: 871, column: 36, scope: !15628)
!15641 = !DILocation(line: 871, column: 47, scope: !15628)
!15642 = !DILocation(line: 871, column: 52, scope: !15628)
!15643 = !DILocation(line: 871, column: 3, scope: !15628)
!15644 = !DILocation(line: 872, column: 2, scope: !15628)
!15645 = !DILocation(line: 877, column: 30, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15620, file: !3, line: 872, column: 9)
!15647 = !DILocation(line: 877, column: 35, scope: !15646)
!15648 = !DILocation(line: 877, column: 3, scope: !15646)
!15649 = !DILocation(line: 881, column: 7, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 881, column: 6)
!15651 = !DILocation(line: 881, column: 12, scope: !15650)
!15652 = !DILocation(line: 881, column: 28, scope: !15650)
!15653 = !DILocation(line: 881, column: 36, scope: !15650)
!15654 = !DILocation(line: 881, column: 6, scope: !15582)
!15655 = !DILocalVariable(name: "len", scope: !15656, file: !3, line: 882, type: !1203)
!15656 = distinct !DILexicalBlock(scope: !15650, file: !3, line: 881, column: 45)
!15657 = !DILocation(line: 882, column: 6, scope: !15656)
!15658 = !DILocation(line: 885, column: 9, scope: !15656)
!15659 = !DILocation(line: 885, column: 7, scope: !15656)
!15660 = !DILocation(line: 886, column: 39, scope: !15656)
!15661 = !DILocation(line: 886, column: 43, scope: !15656)
!15662 = !DILocation(line: 886, column: 47, scope: !15656)
!15663 = !DILocation(line: 886, column: 18, scope: !15656)
!15664 = !DILocation(line: 886, column: 8, scope: !15656)
!15665 = !DILocation(line: 887, column: 8, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15656, file: !3, line: 887, column: 7)
!15667 = !DILocation(line: 887, column: 7, scope: !15656)
!15668 = !DILocation(line: 888, column: 32, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15670, file: !3, line: 888, column: 8)
!15670 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 887, column: 14)
!15671 = !DILocation(line: 888, column: 36, scope: !15669)
!15672 = !DILocation(line: 888, column: 30, scope: !15669)
!15673 = !DILocation(line: 888, column: 8, scope: !15670)
!15674 = !DILocation(line: 889, column: 5, scope: !15669)
!15675 = !DILocation(line: 890, column: 12, scope: !15670)
!15676 = !DILocation(line: 890, column: 16, scope: !15670)
!15677 = !DILocation(line: 890, column: 4, scope: !15670)
!15678 = !DILocation(line: 890, column: 10, scope: !15670)
!15679 = !DILocation(line: 891, column: 11, scope: !15670)
!15680 = !DILocation(line: 891, column: 14, scope: !15670)
!15681 = !DILocation(line: 891, column: 20, scope: !15670)
!15682 = !DILocation(line: 891, column: 18, scope: !15670)
!15683 = !DILocation(line: 891, column: 9, scope: !15670)
!15684 = !DILocation(line: 892, column: 3, scope: !15670)
!15685 = !DILocation(line: 893, column: 3, scope: !15656)
!15686 = !DILocation(line: 893, column: 11, scope: !15656)
!15687 = !DILocation(line: 894, column: 3, scope: !15656)
!15688 = !DILocation(line: 894, column: 11, scope: !15656)
!15689 = !DILocation(line: 898, column: 3, scope: !15656)
!15690 = !DILocation(line: 898, column: 11, scope: !15656)
!15691 = !DILocation(line: 899, column: 13, scope: !15656)
!15692 = !DILocation(line: 899, column: 17, scope: !15656)
!15693 = !DILocation(line: 899, column: 3, scope: !15656)
!15694 = !DILocation(line: 899, column: 11, scope: !15656)
!15695 = !DILocation(line: 900, column: 13, scope: !15656)
!15696 = !DILocation(line: 900, column: 17, scope: !15656)
!15697 = !DILocation(line: 900, column: 3, scope: !15656)
!15698 = !DILocation(line: 900, column: 11, scope: !15656)
!15699 = !DILocation(line: 901, column: 13, scope: !15656)
!15700 = !DILocation(line: 901, column: 17, scope: !15656)
!15701 = !DILocation(line: 901, column: 3, scope: !15656)
!15702 = !DILocation(line: 901, column: 11, scope: !15656)
!15703 = !DILocation(line: 902, column: 13, scope: !15656)
!15704 = !DILocation(line: 902, column: 17, scope: !15656)
!15705 = !DILocation(line: 902, column: 3, scope: !15656)
!15706 = !DILocation(line: 902, column: 11, scope: !15656)
!15707 = !DILocation(line: 903, column: 14, scope: !15656)
!15708 = !DILocation(line: 903, column: 18, scope: !15656)
!15709 = !DILocation(line: 903, column: 3, scope: !15656)
!15710 = !DILocation(line: 903, column: 12, scope: !15656)
!15711 = !DILocation(line: 904, column: 14, scope: !15656)
!15712 = !DILocation(line: 904, column: 18, scope: !15656)
!15713 = !DILocation(line: 904, column: 3, scope: !15656)
!15714 = !DILocation(line: 904, column: 12, scope: !15656)
!15715 = !DILocation(line: 905, column: 14, scope: !15656)
!15716 = !DILocation(line: 905, column: 18, scope: !15656)
!15717 = !DILocation(line: 905, column: 3, scope: !15656)
!15718 = !DILocation(line: 905, column: 12, scope: !15656)
!15719 = !DILocation(line: 911, column: 7, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15656, file: !3, line: 911, column: 7)
!15721 = !DILocation(line: 911, column: 11, scope: !15720)
!15722 = !DILocation(line: 911, column: 17, scope: !15720)
!15723 = !DILocation(line: 911, column: 7, scope: !15656)
!15724 = !DILocation(line: 912, column: 4, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 911, column: 36)
!15726 = !DILocation(line: 912, column: 12, scope: !15725)
!15727 = !DILocation(line: 913, column: 14, scope: !15725)
!15728 = !DILocation(line: 913, column: 18, scope: !15725)
!15729 = !DILocation(line: 913, column: 4, scope: !15725)
!15730 = !DILocation(line: 913, column: 12, scope: !15725)
!15731 = !DILocation(line: 914, column: 14, scope: !15725)
!15732 = !DILocation(line: 914, column: 18, scope: !15725)
!15733 = !DILocation(line: 914, column: 4, scope: !15725)
!15734 = !DILocation(line: 914, column: 12, scope: !15725)
!15735 = !DILocation(line: 915, column: 14, scope: !15725)
!15736 = !DILocation(line: 915, column: 18, scope: !15725)
!15737 = !DILocation(line: 915, column: 4, scope: !15725)
!15738 = !DILocation(line: 915, column: 12, scope: !15725)
!15739 = !DILocation(line: 916, column: 15, scope: !15725)
!15740 = !DILocation(line: 916, column: 19, scope: !15725)
!15741 = !DILocation(line: 916, column: 4, scope: !15725)
!15742 = !DILocation(line: 916, column: 13, scope: !15725)
!15743 = !DILocation(line: 917, column: 3, scope: !15725)
!15744 = !DILocation(line: 918, column: 2, scope: !15656)
!15745 = !DILocation(line: 920, column: 13, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15650, file: !3, line: 918, column: 9)
!15747 = !DILocation(line: 920, column: 17, scope: !15746)
!15748 = !DILocation(line: 920, column: 3, scope: !15746)
!15749 = !DILocation(line: 920, column: 11, scope: !15746)
!15750 = !DILocation(line: 921, column: 13, scope: !15746)
!15751 = !DILocation(line: 921, column: 17, scope: !15746)
!15752 = !DILocation(line: 921, column: 3, scope: !15746)
!15753 = !DILocation(line: 921, column: 11, scope: !15746)
!15754 = !DILocation(line: 922, column: 13, scope: !15746)
!15755 = !DILocation(line: 922, column: 17, scope: !15746)
!15756 = !DILocation(line: 922, column: 3, scope: !15746)
!15757 = !DILocation(line: 922, column: 11, scope: !15746)
!15758 = !DILocation(line: 923, column: 13, scope: !15746)
!15759 = !DILocation(line: 923, column: 17, scope: !15746)
!15760 = !DILocation(line: 923, column: 3, scope: !15746)
!15761 = !DILocation(line: 923, column: 11, scope: !15746)
!15762 = !DILocation(line: 924, column: 3, scope: !15746)
!15763 = !DILocation(line: 924, column: 11, scope: !15746)
!15764 = !DILocation(line: 925, column: 7, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 925, column: 7)
!15766 = !DILocation(line: 925, column: 11, scope: !15765)
!15767 = !DILocation(line: 925, column: 17, scope: !15765)
!15768 = !DILocation(line: 925, column: 7, scope: !15746)
!15769 = !DILocation(line: 926, column: 4, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15765, file: !3, line: 925, column: 37)
!15771 = !DILocation(line: 926, column: 12, scope: !15770)
!15772 = !DILocation(line: 927, column: 8, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15770, file: !3, line: 927, column: 8)
!15774 = !DILocation(line: 927, column: 12, scope: !15773)
!15775 = !DILocation(line: 927, column: 8, scope: !15770)
!15776 = !DILocation(line: 928, column: 5, scope: !15773)
!15777 = !DILocation(line: 928, column: 13, scope: !15773)
!15778 = !DILocation(line: 929, column: 8, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15770, file: !3, line: 929, column: 8)
!15780 = !DILocation(line: 929, column: 12, scope: !15779)
!15781 = !DILocation(line: 929, column: 21, scope: !15779)
!15782 = !DILocation(line: 929, column: 24, scope: !15779)
!15783 = !DILocation(line: 929, column: 28, scope: !15779)
!15784 = !DILocation(line: 929, column: 37, scope: !15779)
!15785 = !DILocation(line: 929, column: 40, scope: !15779)
!15786 = !DILocation(line: 929, column: 44, scope: !15779)
!15787 = !DILocation(line: 929, column: 8, scope: !15770)
!15788 = !DILocation(line: 930, column: 5, scope: !15779)
!15789 = !DILocation(line: 930, column: 13, scope: !15779)
!15790 = !DILocation(line: 931, column: 3, scope: !15770)
!15791 = !DILocation(line: 932, column: 13, scope: !15746)
!15792 = !DILocation(line: 932, column: 17, scope: !15746)
!15793 = !DILocation(line: 932, column: 3, scope: !15746)
!15794 = !DILocation(line: 932, column: 11, scope: !15746)
!15795 = !DILocation(line: 933, column: 14, scope: !15746)
!15796 = !DILocation(line: 933, column: 18, scope: !15746)
!15797 = !DILocation(line: 933, column: 3, scope: !15746)
!15798 = !DILocation(line: 933, column: 12, scope: !15746)
!15799 = !DILocation(line: 934, column: 14, scope: !15746)
!15800 = !DILocation(line: 934, column: 18, scope: !15746)
!15801 = !DILocation(line: 934, column: 3, scope: !15746)
!15802 = !DILocation(line: 934, column: 12, scope: !15746)
!15803 = !DILocation(line: 936, column: 1, scope: !15582)
!15804 = distinct !DISubprogram(name: "ata_gen_ata_sense", scope: !3, file: !3, line: 948, type: !6656, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15805 = !DILocalVariable(name: "qc", arg: 1, scope: !15804, file: !3, line: 948, type: !6450)
!15806 = !DILocation(line: 948, column: 54, scope: !15804)
!15807 = !DILocalVariable(name: "dev", scope: !15804, file: !3, line: 950, type: !6455)
!15808 = !DILocation(line: 950, column: 21, scope: !15804)
!15809 = !DILocation(line: 950, column: 27, scope: !15804)
!15810 = !DILocation(line: 950, column: 31, scope: !15804)
!15811 = !DILocalVariable(name: "cmd", scope: !15804, file: !3, line: 951, type: !6139)
!15812 = !DILocation(line: 951, column: 20, scope: !15804)
!15813 = !DILocation(line: 951, column: 26, scope: !15804)
!15814 = !DILocation(line: 951, column: 30, scope: !15804)
!15815 = !DILocalVariable(name: "tf", scope: !15804, file: !3, line: 952, type: !6695)
!15816 = !DILocation(line: 952, column: 23, scope: !15804)
!15817 = !DILocation(line: 952, column: 29, scope: !15804)
!15818 = !DILocation(line: 952, column: 33, scope: !15804)
!15819 = !DILocalVariable(name: "sb", scope: !15804, file: !3, line: 953, type: !4944)
!15820 = !DILocation(line: 953, column: 17, scope: !15804)
!15821 = !DILocation(line: 953, column: 22, scope: !15804)
!15822 = !DILocation(line: 953, column: 27, scope: !15804)
!15823 = !DILocalVariable(name: "verbose", scope: !15804, file: !3, line: 954, type: !211)
!15824 = !DILocation(line: 954, column: 6, scope: !15804)
!15825 = !DILocation(line: 954, column: 16, scope: !15804)
!15826 = !DILocation(line: 954, column: 20, scope: !15804)
!15827 = !DILocation(line: 954, column: 24, scope: !15804)
!15828 = !DILocation(line: 954, column: 29, scope: !15804)
!15829 = !DILocation(line: 954, column: 43, scope: !15804)
!15830 = !DILocalVariable(name: "block", scope: !15804, file: !3, line: 955, type: !976)
!15831 = !DILocation(line: 955, column: 6, scope: !15804)
!15832 = !DILocalVariable(name: "sense_key", scope: !15804, file: !3, line: 956, type: !1203)
!15833 = !DILocation(line: 956, column: 5, scope: !15804)
!15834 = !DILocalVariable(name: "asc", scope: !15804, file: !3, line: 956, type: !1203)
!15835 = !DILocation(line: 956, column: 16, scope: !15804)
!15836 = !DILocalVariable(name: "ascq", scope: !15804, file: !3, line: 956, type: !1203)
!15837 = !DILocation(line: 956, column: 21, scope: !15804)
!15838 = !DILocation(line: 958, column: 9, scope: !15804)
!15839 = !DILocation(line: 958, column: 2, scope: !15804)
!15840 = !DILocation(line: 960, column: 2, scope: !15804)
!15841 = !DILocation(line: 960, column: 7, scope: !15804)
!15842 = !DILocation(line: 960, column: 14, scope: !15804)
!15843 = !DILocation(line: 962, column: 23, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 962, column: 6)
!15845 = !DILocation(line: 962, column: 6, scope: !15844)
!15846 = !DILocation(line: 962, column: 6, scope: !15804)
!15847 = !DILocation(line: 965, column: 22, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15844, file: !3, line: 962, column: 29)
!15849 = !DILocation(line: 965, column: 27, scope: !15848)
!15850 = !DILocation(line: 965, column: 3, scope: !15848)
!15851 = !DILocation(line: 966, column: 3, scope: !15848)
!15852 = !DILocation(line: 971, column: 6, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 971, column: 6)
!15854 = !DILocation(line: 971, column: 10, scope: !15853)
!15855 = !DILocation(line: 971, column: 19, scope: !15853)
!15856 = !DILocation(line: 972, column: 6, scope: !15853)
!15857 = !DILocation(line: 972, column: 10, scope: !15853)
!15858 = !DILocation(line: 972, column: 18, scope: !15853)
!15859 = !DILocation(line: 971, column: 6, scope: !15804)
!15860 = !DILocation(line: 973, column: 22, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15853, file: !3, line: 972, column: 61)
!15862 = !DILocation(line: 973, column: 26, scope: !15861)
!15863 = !DILocation(line: 973, column: 30, scope: !15861)
!15864 = !DILocation(line: 973, column: 40, scope: !15861)
!15865 = !DILocation(line: 973, column: 44, scope: !15861)
!15866 = !DILocation(line: 973, column: 53, scope: !15861)
!15867 = !DILocation(line: 973, column: 57, scope: !15861)
!15868 = !DILocation(line: 974, column: 33, scope: !15861)
!15869 = !DILocation(line: 973, column: 3, scope: !15861)
!15870 = !DILocation(line: 975, column: 22, scope: !15861)
!15871 = !DILocation(line: 975, column: 27, scope: !15861)
!15872 = !DILocation(line: 975, column: 32, scope: !15861)
!15873 = !DILocation(line: 975, column: 43, scope: !15861)
!15874 = !DILocation(line: 975, column: 48, scope: !15861)
!15875 = !DILocation(line: 975, column: 3, scope: !15861)
!15876 = !DILocation(line: 976, column: 2, scope: !15861)
!15877 = !DILocation(line: 978, column: 3, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15853, file: !3, line: 976, column: 9)
!15879 = !DILocation(line: 980, column: 22, scope: !15878)
!15880 = !DILocation(line: 980, column: 27, scope: !15878)
!15881 = !DILocation(line: 980, column: 3, scope: !15878)
!15882 = !DILocation(line: 981, column: 3, scope: !15878)
!15883 = !DILocation(line: 984, column: 29, scope: !15804)
!15884 = !DILocation(line: 984, column: 33, scope: !15804)
!15885 = !DILocation(line: 984, column: 44, scope: !15804)
!15886 = !DILocation(line: 984, column: 10, scope: !15804)
!15887 = !DILocation(line: 984, column: 8, scope: !15804)
!15888 = !DILocation(line: 985, column: 6, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 985, column: 6)
!15890 = !DILocation(line: 985, column: 12, scope: !15889)
!15891 = !DILocation(line: 985, column: 6, scope: !15804)
!15892 = !DILocation(line: 986, column: 3, scope: !15889)
!15893 = !DILocation(line: 988, column: 29, scope: !15804)
!15894 = !DILocation(line: 988, column: 56, scope: !15804)
!15895 = !DILocation(line: 988, column: 2, scope: !15804)
!15896 = !DILocation(line: 989, column: 1, scope: !15804)
!15897 = distinct !DISubprogram(name: "ata_dump_status", scope: !3, file: !3, line: 668, type: !15898, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!15898 = !DISubroutineType(types: !15899)
!15899 = !{null, !7, !6695}
!15900 = !DILocalVariable(name: "id", arg: 1, scope: !15897, file: !3, line: 668, type: !7)
!15901 = !DILocation(line: 668, column: 38, scope: !15897)
!15902 = !DILocalVariable(name: "tf", arg: 2, scope: !15897, file: !3, line: 668, type: !6695)
!15903 = !DILocation(line: 668, column: 63, scope: !15897)
!15904 = !DILocalVariable(name: "stat", scope: !15897, file: !3, line: 670, type: !1203)
!15905 = !DILocation(line: 670, column: 5, scope: !15897)
!15906 = !DILocation(line: 670, column: 12, scope: !15897)
!15907 = !DILocation(line: 670, column: 16, scope: !15897)
!15908 = !DILocalVariable(name: "err", scope: !15897, file: !3, line: 670, type: !1203)
!15909 = !DILocation(line: 670, column: 25, scope: !15897)
!15910 = !DILocation(line: 670, column: 31, scope: !15897)
!15911 = !DILocation(line: 670, column: 35, scope: !15897)
!15912 = !DILocation(line: 672, column: 2, scope: !15897)
!15913 = !DILocation(line: 673, column: 6, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15897, file: !3, line: 673, column: 6)
!15915 = !DILocation(line: 673, column: 11, scope: !15914)
!15916 = !DILocation(line: 673, column: 6, scope: !15897)
!15917 = !DILocation(line: 674, column: 3, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15914, file: !3, line: 673, column: 23)
!15919 = !DILocation(line: 675, column: 2, scope: !15918)
!15920 = !DILocation(line: 676, column: 7, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 676, column: 7)
!15922 = distinct !DILexicalBlock(scope: !15914, file: !3, line: 675, column: 9)
!15923 = !DILocation(line: 676, column: 12, scope: !15921)
!15924 = !DILocation(line: 676, column: 7, scope: !15922)
!15925 = !DILocation(line: 676, column: 24, scope: !15921)
!15926 = !DILocation(line: 677, column: 7, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 677, column: 7)
!15928 = !DILocation(line: 677, column: 12, scope: !15927)
!15929 = !DILocation(line: 677, column: 7, scope: !15922)
!15930 = !DILocation(line: 677, column: 22, scope: !15927)
!15931 = !DILocation(line: 678, column: 7, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 678, column: 7)
!15933 = !DILocation(line: 678, column: 12, scope: !15932)
!15934 = !DILocation(line: 678, column: 7, scope: !15922)
!15935 = !DILocation(line: 678, column: 23, scope: !15932)
!15936 = !DILocation(line: 679, column: 7, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 679, column: 7)
!15938 = !DILocation(line: 679, column: 12, scope: !15937)
!15939 = !DILocation(line: 679, column: 7, scope: !15922)
!15940 = !DILocation(line: 679, column: 23, scope: !15937)
!15941 = !DILocation(line: 680, column: 7, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 680, column: 7)
!15943 = !DILocation(line: 680, column: 12, scope: !15942)
!15944 = !DILocation(line: 680, column: 7, scope: !15922)
!15945 = !DILocation(line: 680, column: 24, scope: !15942)
!15946 = !DILocation(line: 681, column: 7, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 681, column: 7)
!15948 = !DILocation(line: 681, column: 12, scope: !15947)
!15949 = !DILocation(line: 681, column: 7, scope: !15922)
!15950 = !DILocation(line: 681, column: 25, scope: !15947)
!15951 = !DILocation(line: 682, column: 7, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 682, column: 7)
!15953 = !DILocation(line: 682, column: 12, scope: !15952)
!15954 = !DILocation(line: 682, column: 7, scope: !15922)
!15955 = !DILocation(line: 682, column: 23, scope: !15952)
!15956 = !DILocation(line: 683, column: 3, scope: !15922)
!15957 = !DILocation(line: 685, column: 7, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 685, column: 7)
!15959 = !DILocation(line: 685, column: 7, scope: !15922)
!15960 = !DILocation(line: 686, column: 4, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15958, file: !3, line: 685, column: 12)
!15962 = !DILocation(line: 687, column: 8, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 687, column: 8)
!15964 = !DILocation(line: 687, column: 12, scope: !15963)
!15965 = !DILocation(line: 687, column: 8, scope: !15961)
!15966 = !DILocation(line: 687, column: 27, scope: !15963)
!15967 = !DILocation(line: 688, column: 8, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 688, column: 8)
!15969 = !DILocation(line: 688, column: 12, scope: !15968)
!15970 = !DILocation(line: 688, column: 8, scope: !15961)
!15971 = !DILocation(line: 689, column: 9, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15973, file: !3, line: 689, column: 9)
!15973 = distinct !DILexicalBlock(scope: !15968, file: !3, line: 688, column: 24)
!15974 = !DILocation(line: 689, column: 13, scope: !15972)
!15975 = !DILocation(line: 689, column: 9, scope: !15973)
!15976 = !DILocation(line: 690, column: 7, scope: !15972)
!15977 = !DILocation(line: 691, column: 11, scope: !15972)
!15978 = !DILocation(line: 692, column: 4, scope: !15973)
!15979 = !DILocation(line: 693, column: 8, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 693, column: 8)
!15981 = !DILocation(line: 693, column: 12, scope: !15980)
!15982 = !DILocation(line: 693, column: 8, scope: !15961)
!15983 = !DILocation(line: 693, column: 23, scope: !15980)
!15984 = !DILocation(line: 694, column: 8, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 694, column: 8)
!15986 = !DILocation(line: 694, column: 12, scope: !15985)
!15987 = !DILocation(line: 694, column: 8, scope: !15961)
!15988 = !DILocation(line: 694, column: 24, scope: !15985)
!15989 = !DILocation(line: 695, column: 8, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 695, column: 8)
!15991 = !DILocation(line: 695, column: 12, scope: !15990)
!15992 = !DILocation(line: 695, column: 8, scope: !15961)
!15993 = !DILocation(line: 695, column: 26, scope: !15990)
!15994 = !DILocation(line: 696, column: 8, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 696, column: 8)
!15996 = !DILocation(line: 696, column: 12, scope: !15995)
!15997 = !DILocation(line: 696, column: 8, scope: !15961)
!15998 = !DILocation(line: 696, column: 24, scope: !15995)
!15999 = !DILocation(line: 697, column: 4, scope: !15961)
!16000 = !DILocation(line: 698, column: 3, scope: !15961)
!16001 = !DILocation(line: 700, column: 1, scope: !15897)
!16002 = distinct !DISubprogram(name: "ata_qc_done", scope: !3, file: !3, line: 1632, type: !6656, scopeLine: 1633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16003 = !DILocalVariable(name: "qc", arg: 1, scope: !16002, file: !3, line: 1632, type: !6450)
!16004 = !DILocation(line: 1632, column: 48, scope: !16002)
!16005 = !DILocalVariable(name: "cmd", scope: !16002, file: !3, line: 1634, type: !6139)
!16006 = !DILocation(line: 1634, column: 20, scope: !16002)
!16007 = !DILocation(line: 1634, column: 26, scope: !16002)
!16008 = !DILocation(line: 1634, column: 30, scope: !16002)
!16009 = !DILocalVariable(name: "done", scope: !16002, file: !3, line: 1635, type: !6196)
!16010 = !DILocation(line: 1635, column: 9, scope: !16002)
!16011 = !DILocation(line: 1635, column: 37, scope: !16002)
!16012 = !DILocation(line: 1635, column: 41, scope: !16002)
!16013 = !DILocation(line: 1637, column: 14, scope: !16002)
!16014 = !DILocation(line: 1637, column: 2, scope: !16002)
!16015 = !DILocation(line: 1638, column: 2, scope: !16002)
!16016 = !DILocation(line: 1638, column: 7, scope: !16002)
!16017 = !DILocation(line: 1639, column: 1, scope: !16002)
!16018 = !DILocalVariable(name: "id", arg: 1, scope: !6970, file: !3, line: 719, type: !7)
!16019 = !DILocation(line: 719, column: 41, scope: !6970)
!16020 = !DILocalVariable(name: "drv_stat", arg: 2, scope: !6970, file: !3, line: 719, type: !1203)
!16021 = !DILocation(line: 719, column: 48, scope: !6970)
!16022 = !DILocalVariable(name: "drv_err", arg: 3, scope: !6970, file: !3, line: 719, type: !1203)
!16023 = !DILocation(line: 719, column: 61, scope: !6970)
!16024 = !DILocalVariable(name: "sk", arg: 4, scope: !6970, file: !3, line: 719, type: !6537)
!16025 = !DILocation(line: 719, column: 74, scope: !6970)
!16026 = !DILocalVariable(name: "asc", arg: 5, scope: !6970, file: !3, line: 720, type: !6537)
!16027 = !DILocation(line: 720, column: 15, scope: !6970)
!16028 = !DILocalVariable(name: "ascq", arg: 6, scope: !6970, file: !3, line: 720, type: !6537)
!16029 = !DILocation(line: 720, column: 24, scope: !6970)
!16030 = !DILocalVariable(name: "verbose", arg: 7, scope: !6970, file: !3, line: 720, type: !211)
!16031 = !DILocation(line: 720, column: 34, scope: !6970)
!16032 = !DILocalVariable(name: "i", scope: !6970, file: !3, line: 722, type: !211)
!16033 = !DILocation(line: 722, column: 6, scope: !6970)
!16034 = !DILocation(line: 786, column: 6, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 786, column: 6)
!16036 = !DILocation(line: 786, column: 15, scope: !16035)
!16037 = !DILocation(line: 786, column: 6, scope: !6970)
!16038 = !DILocation(line: 787, column: 11, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16035, file: !3, line: 786, column: 27)
!16040 = !DILocation(line: 788, column: 2, scope: !16039)
!16041 = !DILocation(line: 790, column: 6, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 790, column: 6)
!16043 = !DILocation(line: 790, column: 6, scope: !6970)
!16044 = !DILocation(line: 792, column: 10, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 792, column: 3)
!16046 = distinct !DILexicalBlock(scope: !16042, file: !3, line: 790, column: 15)
!16047 = !DILocation(line: 792, column: 8, scope: !16045)
!16048 = !DILocation(line: 792, column: 27, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16045, file: !3, line: 792, column: 3)
!16050 = !DILocation(line: 792, column: 15, scope: !16049)
!16051 = !DILocation(line: 792, column: 33, scope: !16049)
!16052 = !DILocation(line: 792, column: 3, scope: !16045)
!16053 = !DILocation(line: 794, column: 21, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16055, file: !3, line: 794, column: 8)
!16055 = distinct !DILexicalBlock(scope: !16049, file: !3, line: 792, column: 47)
!16056 = !DILocation(line: 794, column: 9, scope: !16054)
!16057 = !DILocation(line: 794, column: 29, scope: !16054)
!16058 = !DILocation(line: 794, column: 27, scope: !16054)
!16059 = !DILocation(line: 795, column: 20, scope: !16054)
!16060 = !DILocation(line: 795, column: 8, scope: !16054)
!16061 = !DILocation(line: 794, column: 38, scope: !16054)
!16062 = !DILocation(line: 794, column: 8, scope: !16055)
!16063 = !DILocation(line: 796, column: 23, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !16054, file: !3, line: 795, column: 27)
!16065 = !DILocation(line: 796, column: 11, scope: !16064)
!16066 = !DILocation(line: 796, column: 6, scope: !16064)
!16067 = !DILocation(line: 796, column: 9, scope: !16064)
!16068 = !DILocation(line: 797, column: 24, scope: !16064)
!16069 = !DILocation(line: 797, column: 12, scope: !16064)
!16070 = !DILocation(line: 797, column: 6, scope: !16064)
!16071 = !DILocation(line: 797, column: 10, scope: !16064)
!16072 = !DILocation(line: 798, column: 25, scope: !16064)
!16073 = !DILocation(line: 798, column: 13, scope: !16064)
!16074 = !DILocation(line: 798, column: 6, scope: !16064)
!16075 = !DILocation(line: 798, column: 11, scope: !16064)
!16076 = !DILocation(line: 799, column: 5, scope: !16064)
!16077 = !DILocation(line: 801, column: 3, scope: !16055)
!16078 = !DILocation(line: 792, column: 43, scope: !16049)
!16079 = !DILocation(line: 792, column: 3, scope: !16049)
!16080 = distinct !{!16080, !16052, !16081}
!16081 = !DILocation(line: 801, column: 3, scope: !16045)
!16082 = !DILocation(line: 802, column: 2, scope: !16046)
!16083 = !DILocation(line: 809, column: 9, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 809, column: 2)
!16085 = !DILocation(line: 809, column: 7, scope: !16084)
!16086 = !DILocation(line: 809, column: 25, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16084, file: !3, line: 809, column: 2)
!16088 = !DILocation(line: 809, column: 14, scope: !16087)
!16089 = !DILocation(line: 809, column: 31, scope: !16087)
!16090 = !DILocation(line: 809, column: 2, scope: !16084)
!16091 = !DILocation(line: 810, column: 18, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16093, file: !3, line: 810, column: 7)
!16093 = distinct !DILexicalBlock(scope: !16087, file: !3, line: 809, column: 45)
!16094 = !DILocation(line: 810, column: 7, scope: !16092)
!16095 = !DILocation(line: 810, column: 26, scope: !16092)
!16096 = !DILocation(line: 810, column: 24, scope: !16092)
!16097 = !DILocation(line: 810, column: 7, scope: !16093)
!16098 = !DILocation(line: 811, column: 21, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16092, file: !3, line: 810, column: 36)
!16100 = !DILocation(line: 811, column: 10, scope: !16099)
!16101 = !DILocation(line: 811, column: 5, scope: !16099)
!16102 = !DILocation(line: 811, column: 8, scope: !16099)
!16103 = !DILocation(line: 812, column: 22, scope: !16099)
!16104 = !DILocation(line: 812, column: 11, scope: !16099)
!16105 = !DILocation(line: 812, column: 5, scope: !16099)
!16106 = !DILocation(line: 812, column: 9, scope: !16099)
!16107 = !DILocation(line: 813, column: 23, scope: !16099)
!16108 = !DILocation(line: 813, column: 12, scope: !16099)
!16109 = !DILocation(line: 813, column: 5, scope: !16099)
!16110 = !DILocation(line: 813, column: 10, scope: !16099)
!16111 = !DILocation(line: 814, column: 4, scope: !16099)
!16112 = !DILocation(line: 816, column: 2, scope: !16093)
!16113 = !DILocation(line: 809, column: 41, scope: !16087)
!16114 = !DILocation(line: 809, column: 2, scope: !16087)
!16115 = distinct !{!16115, !16090, !16116}
!16116 = !DILocation(line: 816, column: 2, scope: !16084)
!16117 = !DILocation(line: 822, column: 3, scope: !6970)
!16118 = !DILocation(line: 822, column: 6, scope: !6970)
!16119 = !DILocation(line: 823, column: 3, scope: !6970)
!16120 = !DILocation(line: 823, column: 7, scope: !6970)
!16121 = !DILocation(line: 824, column: 3, scope: !6970)
!16122 = !DILocation(line: 824, column: 8, scope: !6970)
!16123 = !DILocation(line: 824, column: 2, scope: !6970)
!16124 = !DILabel(scope: !6970, name: "translate_done", file: !3, line: 826)
!16125 = !DILocation(line: 826, column: 2, scope: !6970)
!16126 = !DILocation(line: 827, column: 6, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 827, column: 6)
!16128 = !DILocation(line: 827, column: 6, scope: !6970)
!16129 = !DILocation(line: 828, column: 3, scope: !16127)
!16130 = !DILocation(line: 830, column: 2, scope: !6970)
!16131 = distinct !DISubprogram(name: "ata_dev_disabled", scope: !183, file: !183, line: 1600, type: !9444, scopeLine: 1601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16132 = !DILocalVariable(name: "dev", arg: 1, scope: !16131, file: !183, line: 1600, type: !9446)
!16133 = !DILocation(line: 1600, column: 70, scope: !16131)
!16134 = !DILocation(line: 1602, column: 28, scope: !16131)
!16135 = !DILocation(line: 1602, column: 33, scope: !16131)
!16136 = !DILocation(line: 1602, column: 9, scope: !16131)
!16137 = !DILocation(line: 1602, column: 2, scope: !16131)
!16138 = distinct !DISubprogram(name: "ata_class_disabled", scope: !183, file: !183, line: 1583, type: !12113, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16139 = !DILocalVariable(name: "class", arg: 1, scope: !16138, file: !183, line: 1583, type: !7)
!16140 = !DILocation(line: 1583, column: 60, scope: !16138)
!16141 = !DILocation(line: 1585, column: 9, scope: !16138)
!16142 = !DILocation(line: 1585, column: 15, scope: !16138)
!16143 = !DILocation(line: 1585, column: 36, scope: !16138)
!16144 = !DILocation(line: 1585, column: 39, scope: !16138)
!16145 = !DILocation(line: 1585, column: 45, scope: !16138)
!16146 = !DILocation(line: 1585, column: 68, scope: !16138)
!16147 = !DILocation(line: 1586, column: 3, scope: !16138)
!16148 = !DILocation(line: 1586, column: 9, scope: !16138)
!16149 = !DILocation(line: 1586, column: 30, scope: !16138)
!16150 = !DILocation(line: 1586, column: 33, scope: !16138)
!16151 = !DILocation(line: 1586, column: 39, scope: !16138)
!16152 = !DILocation(line: 1586, column: 61, scope: !16138)
!16153 = !DILocation(line: 1587, column: 3, scope: !16138)
!16154 = !DILocation(line: 1587, column: 9, scope: !16138)
!16155 = !DILocation(line: 1585, column: 2, scope: !16138)
!16156 = distinct !DISubprogram(name: "ata_fpdma_zac_mgmt_out_supported", scope: !183, file: !183, line: 1721, type: !14678, scopeLine: 1722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16157 = !DILocalVariable(name: "dev", arg: 1, scope: !16156, file: !183, line: 1721, type: !6455)
!16158 = !DILocation(line: 1721, column: 72, scope: !16156)
!16159 = !DILocation(line: 1723, column: 10, scope: !16156)
!16160 = !DILocation(line: 1723, column: 15, scope: !16156)
!16161 = !DILocation(line: 1723, column: 71, scope: !16156)
!16162 = !DILocation(line: 1723, column: 9, scope: !16156)
!16163 = !DILocation(line: 1723, column: 2, scope: !16156)
!16164 = distinct !DISubprogram(name: "ata_scsi_trusted_op", scope: !3, file: !3, line: 3840, type: !16165, scopeLine: 3841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16165 = !DISubroutineType(types: !16166)
!16166 = !{!1203, !1049, !1482, !1482}
!16167 = !DILocalVariable(name: "len", arg: 1, scope: !16164, file: !3, line: 3840, type: !1049)
!16168 = !DILocation(line: 3840, column: 35, scope: !16164)
!16169 = !DILocalVariable(name: "send", arg: 2, scope: !16164, file: !3, line: 3840, type: !1482)
!16170 = !DILocation(line: 3840, column: 45, scope: !16164)
!16171 = !DILocalVariable(name: "dma", arg: 3, scope: !16164, file: !3, line: 3840, type: !1482)
!16172 = !DILocation(line: 3840, column: 56, scope: !16164)
!16173 = !DILocation(line: 3842, column: 6, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16164, file: !3, line: 3842, column: 6)
!16175 = !DILocation(line: 3842, column: 10, scope: !16174)
!16176 = !DILocation(line: 3842, column: 6, scope: !16164)
!16177 = !DILocation(line: 3843, column: 3, scope: !16174)
!16178 = !DILocation(line: 3844, column: 11, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 3844, column: 11)
!16180 = !DILocation(line: 3844, column: 11, scope: !16174)
!16181 = !DILocation(line: 3845, column: 10, scope: !16179)
!16182 = !DILocation(line: 3845, column: 3, scope: !16179)
!16183 = !DILocation(line: 3847, column: 10, scope: !16179)
!16184 = !DILocation(line: 3847, column: 3, scope: !16179)
!16185 = !DILocation(line: 3848, column: 1, scope: !16164)
!16186 = distinct !DISubprogram(name: "system_entering_hibernation", scope: !16187, file: !16187, line: 467, type: !2813, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16187 = !DIFile(filename: "./include/linux/suspend.h", directory: "/home/lizy2001/genbc/linux")
!16188 = !DILocation(line: 467, column: 56, scope: !16186)
!16189 = distinct !DISubprogram(name: "atapi_qc_complete", scope: !3, file: !3, line: 2590, type: !6656, scopeLine: 2591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16190 = !DILocalVariable(name: "qc", arg: 1, scope: !16189, file: !3, line: 2590, type: !6450)
!16191 = !DILocation(line: 2590, column: 54, scope: !16189)
!16192 = !DILocalVariable(name: "cmd", scope: !16189, file: !3, line: 2592, type: !6139)
!16193 = !DILocation(line: 2592, column: 20, scope: !16189)
!16194 = !DILocation(line: 2592, column: 26, scope: !16189)
!16195 = !DILocation(line: 2592, column: 30, scope: !16189)
!16196 = !DILocalVariable(name: "err_mask", scope: !16189, file: !3, line: 2593, type: !7)
!16197 = !DILocation(line: 2593, column: 15, scope: !16189)
!16198 = !DILocation(line: 2593, column: 26, scope: !16189)
!16199 = !DILocation(line: 2593, column: 30, scope: !16189)
!16200 = !DILocation(line: 2598, column: 6, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16189, file: !3, line: 2598, column: 6)
!16202 = !DILocation(line: 0, scope: !16201)
!16203 = !DILocation(line: 2598, column: 6, scope: !16189)
!16204 = !DILocation(line: 2601, column: 9, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16206, file: !3, line: 2601, column: 7)
!16206 = distinct !DILexicalBlock(scope: !16201, file: !3, line: 2599, column: 59)
!16207 = !DILocation(line: 2601, column: 13, scope: !16205)
!16208 = !DILocation(line: 2601, column: 19, scope: !16205)
!16209 = !DILocation(line: 2601, column: 7, scope: !16206)
!16210 = !DILocation(line: 2607, column: 27, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16205, file: !3, line: 2601, column: 46)
!16212 = !DILocation(line: 2607, column: 4, scope: !16211)
!16213 = !DILocation(line: 2608, column: 3, scope: !16211)
!16214 = !DILocation(line: 2623, column: 7, scope: !16215)
!16215 = distinct !DILexicalBlock(scope: !16206, file: !3, line: 2623, column: 7)
!16216 = !DILocation(line: 2623, column: 11, scope: !16215)
!16217 = !DILocation(line: 2623, column: 18, scope: !16215)
!16218 = !DILocation(line: 2623, column: 42, scope: !16215)
!16219 = !DILocation(line: 2623, column: 45, scope: !16215)
!16220 = !DILocation(line: 2623, column: 49, scope: !16215)
!16221 = !DILocation(line: 2623, column: 54, scope: !16215)
!16222 = !DILocation(line: 2623, column: 7, scope: !16206)
!16223 = !DILocation(line: 2624, column: 4, scope: !16215)
!16224 = !DILocation(line: 2624, column: 8, scope: !16215)
!16225 = !DILocation(line: 2624, column: 13, scope: !16215)
!16226 = !DILocation(line: 2624, column: 19, scope: !16215)
!16227 = !DILocation(line: 2624, column: 26, scope: !16215)
!16228 = !DILocation(line: 2626, column: 3, scope: !16206)
!16229 = !DILocation(line: 2626, column: 7, scope: !16206)
!16230 = !DILocation(line: 2626, column: 16, scope: !16206)
!16231 = !DILocation(line: 2626, column: 23, scope: !16206)
!16232 = !DILocation(line: 2627, column: 15, scope: !16206)
!16233 = !DILocation(line: 2627, column: 3, scope: !16206)
!16234 = !DILocation(line: 2628, column: 3, scope: !16206)
!16235 = !DILocation(line: 2632, column: 6, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16189, file: !3, line: 2632, column: 6)
!16237 = !DILocation(line: 2632, column: 6, scope: !16189)
!16238 = !DILocation(line: 2633, column: 3, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 2632, column: 39)
!16240 = !DILocation(line: 2633, column: 8, scope: !16239)
!16241 = !DILocation(line: 2633, column: 15, scope: !16239)
!16242 = !DILocation(line: 2634, column: 23, scope: !16239)
!16243 = !DILocation(line: 2634, column: 3, scope: !16239)
!16244 = !DILocation(line: 2635, column: 3, scope: !16239)
!16245 = !DILocation(line: 2636, column: 13, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 2636, column: 13)
!16247 = !DILocation(line: 2636, column: 13, scope: !16236)
!16248 = !DILocation(line: 2642, column: 26, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16246, file: !3, line: 2636, column: 33)
!16250 = !DILocation(line: 2642, column: 3, scope: !16249)
!16251 = !DILocation(line: 2643, column: 2, scope: !16249)
!16252 = !DILocation(line: 2644, column: 7, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16254, file: !3, line: 2644, column: 7)
!16254 = distinct !DILexicalBlock(scope: !16246, file: !3, line: 2643, column: 9)
!16255 = !DILocation(line: 2644, column: 12, scope: !16253)
!16256 = !DILocation(line: 2644, column: 20, scope: !16253)
!16257 = !DILocation(line: 2644, column: 31, scope: !16253)
!16258 = !DILocation(line: 2644, column: 35, scope: !16253)
!16259 = !DILocation(line: 2644, column: 40, scope: !16253)
!16260 = !DILocation(line: 2644, column: 48, scope: !16253)
!16261 = !DILocation(line: 2644, column: 56, scope: !16253)
!16262 = !DILocation(line: 2644, column: 7, scope: !16254)
!16263 = !DILocation(line: 2645, column: 24, scope: !16253)
!16264 = !DILocation(line: 2645, column: 4, scope: !16253)
!16265 = !DILocation(line: 2646, column: 3, scope: !16254)
!16266 = !DILocation(line: 2646, column: 8, scope: !16254)
!16267 = !DILocation(line: 2646, column: 15, scope: !16254)
!16268 = !DILocation(line: 2649, column: 14, scope: !16189)
!16269 = !DILocation(line: 2649, column: 2, scope: !16189)
!16270 = !DILocation(line: 2650, column: 1, scope: !16189)
!16271 = distinct !DISubprogram(name: "ata_qc_raw_nbytes", scope: !183, file: !183, line: 1755, type: !6667, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16272 = !DILocalVariable(name: "qc", arg: 1, scope: !16271, file: !183, line: 1755, type: !6450)
!16273 = !DILocation(line: 1755, column: 69, scope: !16271)
!16274 = !DILocation(line: 1757, column: 9, scope: !16271)
!16275 = !DILocation(line: 1757, column: 13, scope: !16271)
!16276 = !DILocalVariable(name: "__UNIQUE_ID___x304", scope: !16277, file: !183, line: 1757, type: !7)
!16277 = distinct !DILexicalBlock(scope: !16271, file: !183, line: 1757, column: 22)
!16278 = !DILocation(line: 1757, column: 22, scope: !16277)
!16279 = !DILocalVariable(name: "__UNIQUE_ID___y305", scope: !16277, file: !183, line: 1757, type: !7)
!16280 = !DILocation(line: 1757, column: 20, scope: !16271)
!16281 = !DILocation(line: 1757, column: 2, scope: !16271)
!16282 = distinct !DISubprogram(name: "atapi_request_sense", scope: !3, file: !3, line: 2521, type: !6656, scopeLine: 2522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16283 = !DILocalVariable(name: "qc", arg: 1, scope: !16282, file: !3, line: 2521, type: !6450)
!16284 = !DILocation(line: 2521, column: 56, scope: !16282)
!16285 = !DILocalVariable(name: "ap", scope: !16282, file: !3, line: 2523, type: !988)
!16286 = !DILocation(line: 2523, column: 19, scope: !16282)
!16287 = !DILocation(line: 2523, column: 24, scope: !16282)
!16288 = !DILocation(line: 2523, column: 28, scope: !16282)
!16289 = !DILocalVariable(name: "cmd", scope: !16282, file: !3, line: 2524, type: !6139)
!16290 = !DILocation(line: 2524, column: 20, scope: !16282)
!16291 = !DILocation(line: 2524, column: 26, scope: !16282)
!16292 = !DILocation(line: 2524, column: 30, scope: !16282)
!16293 = !DILocation(line: 2528, column: 9, scope: !16282)
!16294 = !DILocation(line: 2528, column: 14, scope: !16282)
!16295 = !DILocation(line: 2528, column: 2, scope: !16282)
!16296 = !DILocation(line: 2531, column: 6, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16282, file: !3, line: 2531, column: 6)
!16298 = !DILocation(line: 2531, column: 10, scope: !16297)
!16299 = !DILocation(line: 2531, column: 15, scope: !16297)
!16300 = !DILocation(line: 2531, column: 6, scope: !16282)
!16301 = !DILocation(line: 2532, column: 3, scope: !16297)
!16302 = !DILocation(line: 2532, column: 7, scope: !16297)
!16303 = !DILocation(line: 2532, column: 12, scope: !16297)
!16304 = !DILocation(line: 2532, column: 24, scope: !16297)
!16305 = !DILocation(line: 2532, column: 29, scope: !16297)
!16306 = !DILocation(line: 2532, column: 33, scope: !16297)
!16307 = !DILocation(line: 2536, column: 2, scope: !16282)
!16308 = !DILocation(line: 2536, column: 7, scope: !16282)
!16309 = !DILocation(line: 2536, column: 23, scope: !16282)
!16310 = !DILocation(line: 2537, column: 25, scope: !16282)
!16311 = !DILocation(line: 2537, column: 29, scope: !16282)
!16312 = !DILocation(line: 2537, column: 32, scope: !16282)
!16313 = !DILocation(line: 2537, column: 40, scope: !16282)
!16314 = !DILocation(line: 2537, column: 2, scope: !16282)
!16315 = !DILocation(line: 2537, column: 7, scope: !16282)
!16316 = !DILocation(line: 2537, column: 23, scope: !16282)
!16317 = !DILocation(line: 2539, column: 16, scope: !16282)
!16318 = !DILocation(line: 2539, column: 2, scope: !16282)
!16319 = !DILocation(line: 2542, column: 15, scope: !16282)
!16320 = !DILocation(line: 2542, column: 19, scope: !16282)
!16321 = !DILocation(line: 2542, column: 26, scope: !16282)
!16322 = !DILocation(line: 2542, column: 31, scope: !16282)
!16323 = !DILocation(line: 2542, column: 2, scope: !16282)
!16324 = !DILocation(line: 2543, column: 14, scope: !16282)
!16325 = !DILocation(line: 2543, column: 19, scope: !16282)
!16326 = !DILocation(line: 2543, column: 23, scope: !16282)
!16327 = !DILocation(line: 2543, column: 2, scope: !16282)
!16328 = !DILocation(line: 2544, column: 2, scope: !16282)
!16329 = !DILocation(line: 2544, column: 6, scope: !16282)
!16330 = !DILocation(line: 2544, column: 14, scope: !16282)
!16331 = !DILocation(line: 2546, column: 10, scope: !16282)
!16332 = !DILocation(line: 2546, column: 14, scope: !16282)
!16333 = !DILocation(line: 2546, column: 2, scope: !16282)
!16334 = !DILocation(line: 2546, column: 22, scope: !16282)
!16335 = !DILocation(line: 2546, column: 26, scope: !16282)
!16336 = !DILocation(line: 2546, column: 31, scope: !16282)
!16337 = !DILocation(line: 2547, column: 2, scope: !16282)
!16338 = !DILocation(line: 2547, column: 6, scope: !16282)
!16339 = !DILocation(line: 2547, column: 13, scope: !16282)
!16340 = !DILocation(line: 2548, column: 2, scope: !16282)
!16341 = !DILocation(line: 2548, column: 6, scope: !16282)
!16342 = !DILocation(line: 2548, column: 13, scope: !16282)
!16343 = !DILocation(line: 2550, column: 2, scope: !16282)
!16344 = !DILocation(line: 2550, column: 6, scope: !16282)
!16345 = !DILocation(line: 2550, column: 9, scope: !16282)
!16346 = !DILocation(line: 2550, column: 15, scope: !16282)
!16347 = !DILocation(line: 2551, column: 2, scope: !16282)
!16348 = !DILocation(line: 2551, column: 6, scope: !16282)
!16349 = !DILocation(line: 2551, column: 9, scope: !16282)
!16350 = !DILocation(line: 2551, column: 17, scope: !16282)
!16351 = !DILocation(line: 2553, column: 24, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16282, file: !3, line: 2553, column: 6)
!16353 = !DILocation(line: 2553, column: 6, scope: !16352)
!16354 = !DILocation(line: 2553, column: 6, scope: !16282)
!16355 = !DILocation(line: 2554, column: 3, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16352, file: !3, line: 2553, column: 29)
!16357 = !DILocation(line: 2554, column: 7, scope: !16356)
!16358 = !DILocation(line: 2554, column: 10, scope: !16356)
!16359 = !DILocation(line: 2554, column: 19, scope: !16356)
!16360 = !DILocation(line: 2555, column: 3, scope: !16356)
!16361 = !DILocation(line: 2555, column: 7, scope: !16356)
!16362 = !DILocation(line: 2555, column: 10, scope: !16356)
!16363 = !DILocation(line: 2555, column: 18, scope: !16356)
!16364 = !DILocation(line: 2556, column: 2, scope: !16356)
!16365 = !DILocation(line: 2557, column: 3, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16352, file: !3, line: 2556, column: 9)
!16367 = !DILocation(line: 2557, column: 7, scope: !16366)
!16368 = !DILocation(line: 2557, column: 10, scope: !16366)
!16369 = !DILocation(line: 2557, column: 19, scope: !16366)
!16370 = !DILocation(line: 2558, column: 3, scope: !16366)
!16371 = !DILocation(line: 2558, column: 7, scope: !16366)
!16372 = !DILocation(line: 2558, column: 10, scope: !16366)
!16373 = !DILocation(line: 2558, column: 15, scope: !16366)
!16374 = !DILocation(line: 2559, column: 3, scope: !16366)
!16375 = !DILocation(line: 2559, column: 7, scope: !16366)
!16376 = !DILocation(line: 2559, column: 10, scope: !16366)
!16377 = !DILocation(line: 2559, column: 15, scope: !16366)
!16378 = !DILocation(line: 2561, column: 2, scope: !16282)
!16379 = !DILocation(line: 2561, column: 6, scope: !16282)
!16380 = !DILocation(line: 2561, column: 13, scope: !16282)
!16381 = !DILocation(line: 2563, column: 2, scope: !16282)
!16382 = !DILocation(line: 2563, column: 6, scope: !16282)
!16383 = !DILocation(line: 2563, column: 18, scope: !16282)
!16384 = !DILocation(line: 2565, column: 15, scope: !16282)
!16385 = !DILocation(line: 2565, column: 2, scope: !16282)
!16386 = !DILocation(line: 2568, column: 1, scope: !16282)
!16387 = distinct !DISubprogram(name: "atapi_fixup_inquiry", scope: !3, file: !3, line: 2578, type: !6197, scopeLine: 2579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16388 = !DILocalVariable(name: "cmd", arg: 1, scope: !16387, file: !3, line: 2578, type: !6139)
!16389 = !DILocation(line: 2578, column: 51, scope: !16387)
!16390 = !DILocalVariable(name: "buf", scope: !16387, file: !3, line: 2580, type: !7654)
!16391 = !DILocation(line: 2580, column: 5, scope: !16387)
!16392 = !DILocation(line: 2582, column: 32, scope: !16387)
!16393 = !DILocation(line: 2582, column: 20, scope: !16387)
!16394 = !DILocation(line: 2582, column: 52, scope: !16387)
!16395 = !DILocation(line: 2582, column: 38, scope: !16387)
!16396 = !DILocation(line: 2582, column: 58, scope: !16387)
!16397 = !DILocation(line: 2582, column: 2, scope: !16387)
!16398 = !DILocation(line: 2583, column: 6, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16387, file: !3, line: 2583, column: 6)
!16400 = !DILocation(line: 2583, column: 13, scope: !16399)
!16401 = !DILocation(line: 2583, column: 6, scope: !16387)
!16402 = !DILocation(line: 2584, column: 3, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16399, file: !3, line: 2583, column: 19)
!16404 = !DILocation(line: 2584, column: 10, scope: !16403)
!16405 = !DILocation(line: 2585, column: 3, scope: !16403)
!16406 = !DILocation(line: 2585, column: 10, scope: !16403)
!16407 = !DILocation(line: 2586, column: 2, scope: !16403)
!16408 = !DILocation(line: 2587, column: 34, scope: !16387)
!16409 = !DILocation(line: 2587, column: 22, scope: !16387)
!16410 = !DILocation(line: 2587, column: 54, scope: !16387)
!16411 = !DILocation(line: 2587, column: 40, scope: !16387)
!16412 = !DILocation(line: 2587, column: 60, scope: !16387)
!16413 = !DILocation(line: 2587, column: 2, scope: !16387)
!16414 = !DILocation(line: 2588, column: 1, scope: !16387)
!16415 = distinct !DISubprogram(name: "ata_qc_reinit", scope: !183, file: !183, line: 1775, type: !6656, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16416 = !DILocalVariable(name: "qc", arg: 1, scope: !16415, file: !183, line: 1775, type: !6450)
!16417 = !DILocation(line: 1775, column: 57, scope: !16415)
!16418 = !DILocation(line: 1777, column: 2, scope: !16415)
!16419 = !DILocation(line: 1777, column: 6, scope: !16415)
!16420 = !DILocation(line: 1777, column: 14, scope: !16415)
!16421 = !DILocation(line: 1778, column: 2, scope: !16415)
!16422 = !DILocation(line: 1778, column: 6, scope: !16415)
!16423 = !DILocation(line: 1778, column: 9, scope: !16415)
!16424 = !DILocation(line: 1779, column: 2, scope: !16415)
!16425 = !DILocation(line: 1779, column: 6, scope: !16415)
!16426 = !DILocation(line: 1779, column: 12, scope: !16415)
!16427 = !DILocation(line: 1780, column: 2, scope: !16415)
!16428 = !DILocation(line: 1780, column: 6, scope: !16415)
!16429 = !DILocation(line: 1780, column: 12, scope: !16415)
!16430 = !DILocation(line: 1781, column: 2, scope: !16415)
!16431 = !DILocation(line: 1781, column: 6, scope: !16415)
!16432 = !DILocation(line: 1781, column: 16, scope: !16415)
!16433 = !DILocation(line: 1782, column: 32, scope: !16415)
!16434 = !DILocation(line: 1782, column: 36, scope: !16415)
!16435 = !DILocation(line: 1782, column: 45, scope: !16415)
!16436 = !DILocation(line: 1782, column: 15, scope: !16415)
!16437 = !DILocation(line: 1782, column: 19, scope: !16415)
!16438 = !DILocation(line: 1782, column: 30, scope: !16415)
!16439 = !DILocation(line: 1782, column: 2, scope: !16415)
!16440 = !DILocation(line: 1782, column: 6, scope: !16415)
!16441 = !DILocation(line: 1782, column: 13, scope: !16415)
!16442 = !DILocation(line: 1783, column: 2, scope: !16415)
!16443 = !DILocation(line: 1783, column: 6, scope: !16415)
!16444 = !DILocation(line: 1783, column: 13, scope: !16415)
!16445 = !DILocation(line: 1784, column: 2, scope: !16415)
!16446 = !DILocation(line: 1784, column: 6, scope: !16415)
!16447 = !DILocation(line: 1784, column: 15, scope: !16415)
!16448 = !DILocation(line: 1785, column: 2, scope: !16415)
!16449 = !DILocation(line: 1785, column: 6, scope: !16415)
!16450 = !DILocation(line: 1785, column: 16, scope: !16415)
!16451 = !DILocation(line: 1787, column: 14, scope: !16415)
!16452 = !DILocation(line: 1787, column: 18, scope: !16415)
!16453 = !DILocation(line: 1787, column: 24, scope: !16415)
!16454 = !DILocation(line: 1787, column: 28, scope: !16415)
!16455 = !DILocation(line: 1787, column: 2, scope: !16415)
!16456 = !DILocation(line: 1790, column: 2, scope: !16415)
!16457 = !DILocation(line: 1790, column: 6, scope: !16415)
!16458 = !DILocation(line: 1790, column: 16, scope: !16415)
!16459 = !DILocation(line: 1790, column: 24, scope: !16415)
!16460 = !DILocation(line: 1791, column: 2, scope: !16415)
!16461 = !DILocation(line: 1791, column: 6, scope: !16415)
!16462 = !DILocation(line: 1791, column: 16, scope: !16415)
!16463 = !DILocation(line: 1791, column: 24, scope: !16415)
!16464 = !DILocation(line: 1792, column: 1, scope: !16415)
!16465 = distinct !DISubprogram(name: "ata_pio_use_silly", scope: !3, file: !3, line: 2516, type: !6675, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16466 = !DILocalVariable(name: "ap", arg: 1, scope: !16465, file: !3, line: 2516, type: !988)
!16467 = !DILocation(line: 2516, column: 54, scope: !16465)
!16468 = !DILocation(line: 2518, column: 10, scope: !16465)
!16469 = !DILocation(line: 2518, column: 14, scope: !16465)
!16470 = !DILocation(line: 2518, column: 20, scope: !16465)
!16471 = !DILocation(line: 2518, column: 9, scope: !16465)
!16472 = !DILocation(line: 2518, column: 2, scope: !16465)
!16473 = distinct !DISubprogram(name: "atapi_sense_complete", scope: !3, file: !3, line: 2501, type: !6656, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16474 = !DILocalVariable(name: "qc", arg: 1, scope: !16473, file: !3, line: 2501, type: !6450)
!16475 = !DILocation(line: 2501, column: 57, scope: !16473)
!16476 = !DILocation(line: 2503, column: 6, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16473, file: !3, line: 2503, column: 6)
!16478 = !DILocation(line: 2503, column: 10, scope: !16477)
!16479 = !DILocation(line: 2503, column: 19, scope: !16477)
!16480 = !DILocation(line: 2503, column: 24, scope: !16477)
!16481 = !DILocation(line: 2503, column: 28, scope: !16477)
!16482 = !DILocation(line: 2503, column: 37, scope: !16477)
!16483 = !DILocation(line: 2503, column: 51, scope: !16477)
!16484 = !DILocation(line: 2503, column: 6, scope: !16473)
!16485 = !DILocation(line: 2509, column: 26, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16477, file: !3, line: 2503, column: 58)
!16487 = !DILocation(line: 2509, column: 3, scope: !16486)
!16488 = !DILocation(line: 2510, column: 2, scope: !16486)
!16489 = !DILocation(line: 2512, column: 14, scope: !16473)
!16490 = !DILocation(line: 2512, column: 2, scope: !16473)
!16491 = !DILocation(line: 2513, column: 1, scope: !16473)
!16492 = distinct !DISubprogram(name: "ata_tf_init", scope: !183, file: !183, line: 1760, type: !16493, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16493 = !DISubroutineType(types: !16494)
!16494 = !{null, !6455, !6695}
!16495 = !DILocalVariable(name: "dev", arg: 1, scope: !16492, file: !183, line: 1760, type: !6455)
!16496 = !DILocation(line: 1760, column: 51, scope: !16492)
!16497 = !DILocalVariable(name: "tf", arg: 2, scope: !16492, file: !183, line: 1760, type: !6695)
!16498 = !DILocation(line: 1760, column: 77, scope: !16492)
!16499 = !DILocation(line: 1762, column: 9, scope: !16492)
!16500 = !DILocation(line: 1762, column: 2, scope: !16492)
!16501 = !DILocation(line: 1765, column: 12, scope: !16492)
!16502 = !DILocation(line: 1765, column: 17, scope: !16492)
!16503 = !DILocation(line: 1765, column: 23, scope: !16492)
!16504 = !DILocation(line: 1765, column: 27, scope: !16492)
!16505 = !DILocation(line: 1765, column: 2, scope: !16492)
!16506 = !DILocation(line: 1765, column: 6, scope: !16492)
!16507 = !DILocation(line: 1765, column: 10, scope: !16492)
!16508 = !DILocation(line: 1769, column: 6, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16492, file: !183, line: 1769, column: 6)
!16510 = !DILocation(line: 1769, column: 11, scope: !16509)
!16511 = !DILocation(line: 1769, column: 17, scope: !16509)
!16512 = !DILocation(line: 1769, column: 6, scope: !16492)
!16513 = !DILocation(line: 1770, column: 3, scope: !16509)
!16514 = !DILocation(line: 1770, column: 7, scope: !16509)
!16515 = !DILocation(line: 1770, column: 14, scope: !16509)
!16516 = !DILocation(line: 1772, column: 3, scope: !16509)
!16517 = !DILocation(line: 1772, column: 7, scope: !16509)
!16518 = !DILocation(line: 1772, column: 14, scope: !16509)
!16519 = !DILocation(line: 1773, column: 1, scope: !16492)
!16520 = distinct !DISubprogram(name: "ata_scsi_qc_new", scope: !3, file: !3, line: 625, type: !16521, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16521 = !DISubroutineType(types: !16522)
!16522 = !{!6450, !6455, !6139}
!16523 = !DILocalVariable(name: "dev", arg: 1, scope: !16520, file: !3, line: 625, type: !6455)
!16524 = !DILocation(line: 625, column: 66, scope: !16520)
!16525 = !DILocalVariable(name: "cmd", arg: 2, scope: !16520, file: !3, line: 626, type: !6139)
!16526 = !DILocation(line: 626, column: 30, scope: !16520)
!16527 = !DILocalVariable(name: "qc", scope: !16520, file: !3, line: 628, type: !6450)
!16528 = !DILocation(line: 628, column: 25, scope: !16520)
!16529 = !DILocation(line: 630, column: 23, scope: !16520)
!16530 = !DILocation(line: 630, column: 28, scope: !16520)
!16531 = !DILocation(line: 630, column: 33, scope: !16520)
!16532 = !DILocation(line: 630, column: 42, scope: !16520)
!16533 = !DILocation(line: 630, column: 7, scope: !16520)
!16534 = !DILocation(line: 630, column: 5, scope: !16520)
!16535 = !DILocation(line: 631, column: 6, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 631, column: 6)
!16537 = !DILocation(line: 631, column: 6, scope: !16520)
!16538 = !DILocation(line: 632, column: 17, scope: !16539)
!16539 = distinct !DILexicalBlock(scope: !16536, file: !3, line: 631, column: 10)
!16540 = !DILocation(line: 632, column: 3, scope: !16539)
!16541 = !DILocation(line: 632, column: 7, scope: !16539)
!16542 = !DILocation(line: 632, column: 15, scope: !16539)
!16543 = !DILocation(line: 633, column: 18, scope: !16539)
!16544 = !DILocation(line: 633, column: 23, scope: !16539)
!16545 = !DILocation(line: 633, column: 3, scope: !16539)
!16546 = !DILocation(line: 633, column: 7, scope: !16539)
!16547 = !DILocation(line: 633, column: 16, scope: !16539)
!16548 = !DILocation(line: 635, column: 24, scope: !16539)
!16549 = !DILocation(line: 635, column: 12, scope: !16539)
!16550 = !DILocation(line: 635, column: 3, scope: !16539)
!16551 = !DILocation(line: 635, column: 7, scope: !16539)
!16552 = !DILocation(line: 635, column: 10, scope: !16539)
!16553 = !DILocation(line: 636, column: 30, scope: !16539)
!16554 = !DILocation(line: 636, column: 16, scope: !16539)
!16555 = !DILocation(line: 636, column: 3, scope: !16539)
!16556 = !DILocation(line: 636, column: 7, scope: !16539)
!16557 = !DILocation(line: 636, column: 14, scope: !16539)
!16558 = !DILocation(line: 638, column: 7, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16539, file: !3, line: 638, column: 7)
!16560 = !DILocation(line: 638, column: 12, scope: !16559)
!16561 = !DILocation(line: 638, column: 21, scope: !16559)
!16562 = !DILocation(line: 638, column: 30, scope: !16559)
!16563 = !DILocation(line: 638, column: 7, scope: !16539)
!16564 = !DILocation(line: 639, column: 4, scope: !16559)
!16565 = !DILocation(line: 639, column: 8, scope: !16559)
!16566 = !DILocation(line: 639, column: 14, scope: !16559)
!16567 = !DILocation(line: 640, column: 2, scope: !16539)
!16568 = !DILocation(line: 641, column: 3, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16536, file: !3, line: 640, column: 9)
!16570 = !DILocation(line: 641, column: 8, scope: !16569)
!16571 = !DILocation(line: 641, column: 15, scope: !16569)
!16572 = !DILocation(line: 642, column: 3, scope: !16569)
!16573 = !DILocation(line: 642, column: 8, scope: !16569)
!16574 = !DILocation(line: 642, column: 18, scope: !16569)
!16575 = !DILocation(line: 645, column: 9, scope: !16520)
!16576 = !DILocation(line: 645, column: 2, scope: !16520)
!16577 = distinct !DISubprogram(name: "ata_scsi_rbuf_get", scope: !3, file: !3, line: 1784, type: !16578, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16578 = !DISubroutineType(types: !16579)
!16579 = !{!983, !6139, !1482, !985}
!16580 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 1787, column: 2, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 1787, column: 2)
!16583 = distinct !DILexicalBlock(scope: !16584, file: !3, line: 1787, column: 2)
!16584 = distinct !DILexicalBlock(scope: !16585, file: !3, line: 1787, column: 2)
!16585 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 1787, column: 2)
!16586 = distinct !DILexicalBlock(scope: !16577, file: !3, line: 1787, column: 2)
!16587 = !DILocalVariable(name: "cmd", arg: 1, scope: !16577, file: !3, line: 1784, type: !6139)
!16588 = !DILocation(line: 1784, column: 50, scope: !16577)
!16589 = !DILocalVariable(name: "copy_in", arg: 2, scope: !16577, file: !3, line: 1784, type: !1482)
!16590 = !DILocation(line: 1784, column: 60, scope: !16577)
!16591 = !DILocalVariable(name: "flags", arg: 3, scope: !16577, file: !3, line: 1785, type: !985)
!16592 = !DILocation(line: 1785, column: 26, scope: !16577)
!16593 = !DILocation(line: 1787, column: 2, scope: !16577)
!16594 = !DILocation(line: 1787, column: 2, scope: !16586)
!16595 = !DILocalVariable(name: "__dummy", scope: !16596, file: !3, line: 1787, type: !986)
!16596 = distinct !DILexicalBlock(scope: !16585, file: !3, line: 1787, column: 2)
!16597 = !DILocation(line: 1787, column: 2, scope: !16596)
!16598 = !DILocalVariable(name: "__dummy2", scope: !16596, file: !3, line: 1787, type: !986)
!16599 = !DILocation(line: 1787, column: 2, scope: !16585)
!16600 = !DILocation(line: 1787, column: 2, scope: !16584)
!16601 = !DILocation(line: 1787, column: 2, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16584, file: !3, line: 1787, column: 2)
!16603 = !DILocalVariable(name: "__dummy", scope: !16604, file: !3, line: 1787, type: !986)
!16604 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 1787, column: 2)
!16605 = distinct !DILexicalBlock(scope: !16602, file: !3, line: 1787, column: 2)
!16606 = !DILocation(line: 1787, column: 2, scope: !16604)
!16607 = !DILocalVariable(name: "__dummy2", scope: !16604, file: !3, line: 1787, type: !986)
!16608 = !DILocation(line: 1787, column: 2, scope: !16605)
!16609 = !DILocation(line: 1787, column: 2, scope: !16583)
!16610 = !{i32 -2139698612}
!16611 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !16581)
!16612 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !16581)
!16613 = !DILocation(line: 1787, column: 2, scope: !16582)
!16614 = !DILocation(line: 1789, column: 2, scope: !16577)
!16615 = !DILocation(line: 1790, column: 6, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16577, file: !3, line: 1790, column: 6)
!16617 = !DILocation(line: 1790, column: 6, scope: !16577)
!16618 = !DILocation(line: 1791, column: 33, scope: !16616)
!16619 = !DILocation(line: 1791, column: 21, scope: !16616)
!16620 = !DILocation(line: 1791, column: 53, scope: !16616)
!16621 = !DILocation(line: 1791, column: 39, scope: !16616)
!16622 = !DILocation(line: 1791, column: 3, scope: !16616)
!16623 = !DILocation(line: 1793, column: 2, scope: !16577)
!16624 = distinct !DISubprogram(name: "ata_scsi_rbuf_put", scope: !3, file: !3, line: 1808, type: !16625, scopeLine: 1810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16625 = !DISubroutineType(types: !16626)
!16626 = !{null, !6139, !1482, !985}
!16627 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !16628)
!16628 = distinct !DILocation(line: 1814, column: 2, scope: !16624)
!16629 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !16628)
!16630 = !DILocalVariable(name: "cmd", arg: 1, scope: !16624, file: !3, line: 1808, type: !6139)
!16631 = !DILocation(line: 1808, column: 56, scope: !16624)
!16632 = !DILocalVariable(name: "copy_out", arg: 2, scope: !16624, file: !3, line: 1808, type: !1482)
!16633 = !DILocation(line: 1808, column: 66, scope: !16624)
!16634 = !DILocalVariable(name: "flags", arg: 3, scope: !16624, file: !3, line: 1809, type: !985)
!16635 = !DILocation(line: 1809, column: 25, scope: !16624)
!16636 = !DILocation(line: 1811, column: 6, scope: !16637)
!16637 = distinct !DILexicalBlock(scope: !16624, file: !3, line: 1811, column: 6)
!16638 = !DILocation(line: 1811, column: 6, scope: !16624)
!16639 = !DILocation(line: 1812, column: 35, scope: !16637)
!16640 = !DILocation(line: 1812, column: 23, scope: !16637)
!16641 = !DILocation(line: 1812, column: 55, scope: !16637)
!16642 = !DILocation(line: 1812, column: 41, scope: !16637)
!16643 = !DILocation(line: 1812, column: 3, scope: !16637)
!16644 = !DILocation(line: 1814, column: 47, scope: !16624)
!16645 = !DILocation(line: 1814, column: 46, scope: !16624)
!16646 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !16628)
!16647 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !16628)
!16648 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !16628)
!16649 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !16628)
!16650 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !16628)
!16651 = !DILocation(line: 1815, column: 1, scope: !16624)
!16652 = distinct !DISubprogram(name: "ata_id_zoned_cap", scope: !449, file: !449, line: 994, type: !16653, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16653 = !DISubroutineType(types: !16654)
!16654 = !{!1203, !9198}
!16655 = !DILocalVariable(name: "id", arg: 1, scope: !16652, file: !449, line: 994, type: !9198)
!16656 = !DILocation(line: 994, column: 46, scope: !16652)
!16657 = !DILocation(line: 996, column: 10, scope: !16652)
!16658 = !DILocation(line: 996, column: 37, scope: !16652)
!16659 = !DILocation(line: 996, column: 9, scope: !16652)
!16660 = !DILocation(line: 996, column: 2, scope: !16652)
!16661 = distinct !DISubprogram(name: "ata_id_has_wwn", scope: !449, file: !449, line: 895, type: !9196, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16662 = !DILocalVariable(name: "id", arg: 1, scope: !16661, file: !449, line: 895, type: !9198)
!16663 = !DILocation(line: 895, column: 46, scope: !16661)
!16664 = !DILocation(line: 897, column: 10, scope: !16661)
!16665 = !DILocation(line: 897, column: 33, scope: !16661)
!16666 = !DILocation(line: 897, column: 43, scope: !16661)
!16667 = !DILocation(line: 897, column: 2, scope: !16661)
!16668 = distinct !DISubprogram(name: "ata_id_log2_per_physical_sector", scope: !449, file: !449, line: 660, type: !16653, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16669 = !DILocalVariable(name: "id", arg: 1, scope: !16668, file: !449, line: 660, type: !9198)
!16670 = !DILocation(line: 660, column: 61, scope: !16668)
!16671 = !DILocation(line: 666, column: 7, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16668, file: !449, line: 666, column: 6)
!16673 = !DILocation(line: 666, column: 30, scope: !16672)
!16674 = !DILocation(line: 666, column: 40, scope: !16672)
!16675 = !DILocation(line: 666, column: 6, scope: !16668)
!16676 = !DILocation(line: 667, column: 11, scope: !16672)
!16677 = !DILocation(line: 667, column: 34, scope: !16672)
!16678 = !DILocation(line: 667, column: 10, scope: !16672)
!16679 = !DILocation(line: 667, column: 3, scope: !16672)
!16680 = !DILocation(line: 668, column: 2, scope: !16668)
!16681 = !DILocation(line: 669, column: 1, scope: !16668)
!16682 = distinct !DISubprogram(name: "ata_id_form_factor", scope: !449, file: !449, line: 900, type: !16683, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!211, !9198}
!16685 = !DILocalVariable(name: "id", arg: 1, scope: !16682, file: !449, line: 900, type: !9198)
!16686 = !DILocation(line: 900, column: 49, scope: !16682)
!16687 = !DILocalVariable(name: "val", scope: !16682, file: !449, line: 902, type: !1726)
!16688 = !DILocation(line: 902, column: 6, scope: !16682)
!16689 = !DILocation(line: 902, column: 12, scope: !16682)
!16690 = !DILocation(line: 904, column: 27, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16682, file: !449, line: 904, column: 6)
!16692 = !DILocation(line: 904, column: 6, scope: !16691)
!16693 = !DILocation(line: 904, column: 31, scope: !16691)
!16694 = !DILocation(line: 904, column: 35, scope: !16691)
!16695 = !DILocation(line: 904, column: 38, scope: !16691)
!16696 = !DILocation(line: 904, column: 42, scope: !16691)
!16697 = !DILocation(line: 904, column: 47, scope: !16691)
!16698 = !DILocation(line: 904, column: 50, scope: !16691)
!16699 = !DILocation(line: 904, column: 54, scope: !16691)
!16700 = !DILocation(line: 904, column: 6, scope: !16682)
!16701 = !DILocation(line: 905, column: 3, scope: !16691)
!16702 = !DILocation(line: 907, column: 6, scope: !16682)
!16703 = !DILocation(line: 909, column: 6, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !16682, file: !449, line: 909, column: 6)
!16705 = !DILocation(line: 909, column: 10, scope: !16704)
!16706 = !DILocation(line: 909, column: 6, scope: !16682)
!16707 = !DILocation(line: 910, column: 3, scope: !16704)
!16708 = !DILocation(line: 912, column: 9, scope: !16682)
!16709 = !DILocation(line: 912, column: 2, scope: !16682)
!16710 = !DILocation(line: 913, column: 1, scope: !16682)
!16711 = distinct !DISubprogram(name: "ata_id_rotation_rate", scope: !449, file: !449, line: 915, type: !16683, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16712 = !DILocalVariable(name: "id", arg: 1, scope: !16711, file: !449, line: 915, type: !9198)
!16713 = !DILocation(line: 915, column: 51, scope: !16711)
!16714 = !DILocalVariable(name: "val", scope: !16711, file: !449, line: 917, type: !1726)
!16715 = !DILocation(line: 917, column: 6, scope: !16711)
!16716 = !DILocation(line: 917, column: 12, scope: !16711)
!16717 = !DILocation(line: 919, column: 27, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16711, file: !449, line: 919, column: 6)
!16719 = !DILocation(line: 919, column: 6, scope: !16718)
!16720 = !DILocation(line: 919, column: 31, scope: !16718)
!16721 = !DILocation(line: 919, column: 35, scope: !16718)
!16722 = !DILocation(line: 919, column: 38, scope: !16718)
!16723 = !DILocation(line: 919, column: 42, scope: !16718)
!16724 = !DILocation(line: 919, column: 47, scope: !16718)
!16725 = !DILocation(line: 919, column: 50, scope: !16718)
!16726 = !DILocation(line: 919, column: 54, scope: !16718)
!16727 = !DILocation(line: 919, column: 6, scope: !16711)
!16728 = !DILocation(line: 920, column: 3, scope: !16718)
!16729 = !DILocation(line: 922, column: 6, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16711, file: !449, line: 922, column: 6)
!16731 = !DILocation(line: 922, column: 10, scope: !16730)
!16732 = !DILocation(line: 922, column: 14, scope: !16730)
!16733 = !DILocation(line: 922, column: 17, scope: !16730)
!16734 = !DILocation(line: 922, column: 21, scope: !16730)
!16735 = !DILocation(line: 922, column: 6, scope: !16711)
!16736 = !DILocation(line: 923, column: 3, scope: !16730)
!16737 = !DILocation(line: 925, column: 9, scope: !16711)
!16738 = !DILocation(line: 925, column: 2, scope: !16711)
!16739 = !DILocation(line: 926, column: 1, scope: !16711)
!16740 = distinct !DISubprogram(name: "ata_msense_rw_recovery", scope: !3, file: !3, line: 2251, type: !16741, scopeLine: 2252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16741 = !DISubroutineType(types: !16742)
!16742 = !{!7, !6537, !1482}
!16743 = !DILocalVariable(name: "buf", arg: 1, scope: !16740, file: !3, line: 2251, type: !6537)
!16744 = !DILocation(line: 2251, column: 48, scope: !16740)
!16745 = !DILocalVariable(name: "changeable", arg: 2, scope: !16740, file: !3, line: 2251, type: !1482)
!16746 = !DILocation(line: 2251, column: 58, scope: !16740)
!16747 = !DILocation(line: 2253, column: 10, scope: !16740)
!16748 = !DILocation(line: 2254, column: 3, scope: !16740)
!16749 = !DILocation(line: 2253, column: 2, scope: !16740)
!16750 = !DILocation(line: 2255, column: 2, scope: !16740)
!16751 = distinct !DISubprogram(name: "ata_dev_supports_fua", scope: !3, file: !3, line: 2262, type: !16752, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16752 = !DISubroutineType(types: !16753)
!16753 = !{!211, !6696}
!16754 = !DILocalVariable(name: "id", arg: 1, scope: !16751, file: !3, line: 2262, type: !6696)
!16755 = !DILocation(line: 2262, column: 38, scope: !16751)
!16756 = !DILocalVariable(name: "model", scope: !16751, file: !3, line: 2264, type: !16757)
!16757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1205, size: 328, elements: !16758)
!16758 = !{!16759}
!16759 = !DISubrange(count: 41)
!16760 = !DILocation(line: 2264, column: 16, scope: !16751)
!16761 = !DILocalVariable(name: "fw", scope: !16751, file: !3, line: 2264, type: !16762)
!16762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1205, size: 72, elements: !3089)
!16763 = !DILocation(line: 2264, column: 44, scope: !16751)
!16764 = !DILocation(line: 2266, column: 7, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 2266, column: 6)
!16766 = !DILocation(line: 2266, column: 6, scope: !16751)
!16767 = !DILocation(line: 2267, column: 3, scope: !16765)
!16768 = !DILocation(line: 2268, column: 22, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 2268, column: 6)
!16770 = !DILocation(line: 2268, column: 7, scope: !16769)
!16771 = !DILocation(line: 2268, column: 6, scope: !16751)
!16772 = !DILocation(line: 2269, column: 3, scope: !16769)
!16773 = !DILocation(line: 2271, column: 18, scope: !16751)
!16774 = !DILocation(line: 2271, column: 22, scope: !16751)
!16775 = !DILocation(line: 2271, column: 2, scope: !16751)
!16776 = !DILocation(line: 2272, column: 18, scope: !16751)
!16777 = !DILocation(line: 2272, column: 22, scope: !16751)
!16778 = !DILocation(line: 2272, column: 2, scope: !16751)
!16779 = !DILocation(line: 2274, column: 13, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 2274, column: 6)
!16781 = !DILocation(line: 2274, column: 6, scope: !16780)
!16782 = !DILocation(line: 2274, column: 6, scope: !16751)
!16783 = !DILocation(line: 2275, column: 3, scope: !16780)
!16784 = !DILocation(line: 2276, column: 13, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 2276, column: 6)
!16786 = !DILocation(line: 2276, column: 6, scope: !16785)
!16787 = !DILocation(line: 2276, column: 6, scope: !16751)
!16788 = !DILocation(line: 2277, column: 3, scope: !16785)
!16789 = !DILocation(line: 2279, column: 2, scope: !16751)
!16790 = !DILocation(line: 2280, column: 1, scope: !16751)
!16791 = distinct !DISubprogram(name: "ata_id_has_fua", scope: !449, file: !449, line: 605, type: !9196, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16792 = !DILocalVariable(name: "id", arg: 1, scope: !16791, file: !449, line: 605, type: !9198)
!16793 = !DILocation(line: 605, column: 46, scope: !16791)
!16794 = !DILocation(line: 607, column: 7, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16791, file: !449, line: 607, column: 6)
!16796 = !DILocation(line: 607, column: 24, scope: !16795)
!16797 = !DILocation(line: 607, column: 34, scope: !16795)
!16798 = !DILocation(line: 607, column: 6, scope: !16791)
!16799 = !DILocation(line: 608, column: 3, scope: !16795)
!16800 = !DILocation(line: 609, column: 9, scope: !16791)
!16801 = !DILocation(line: 609, column: 26, scope: !16791)
!16802 = !DILocation(line: 609, column: 2, scope: !16791)
!16803 = !DILocation(line: 610, column: 1, scope: !16791)
!16804 = distinct !DISubprogram(name: "ata_id_logical_sector_offset", scope: !449, file: !449, line: 680, type: !16805, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16805 = !DISubroutineType(types: !16806)
!16806 = !{!1726, !9198, !1203}
!16807 = !DILocalVariable(name: "id", arg: 1, scope: !16804, file: !449, line: 680, type: !9198)
!16808 = !DILocation(line: 680, column: 59, scope: !16804)
!16809 = !DILocalVariable(name: "log2_per_phys", arg: 2, scope: !16804, file: !449, line: 681, type: !1203)
!16810 = !DILocation(line: 681, column: 6, scope: !16804)
!16811 = !DILocalVariable(name: "word_209", scope: !16804, file: !449, line: 683, type: !1726)
!16812 = !DILocation(line: 683, column: 6, scope: !16804)
!16813 = !DILocation(line: 683, column: 17, scope: !16804)
!16814 = !DILocation(line: 685, column: 7, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16804, file: !449, line: 685, column: 6)
!16816 = !DILocation(line: 685, column: 21, scope: !16815)
!16817 = !DILocation(line: 685, column: 26, scope: !16815)
!16818 = !DILocation(line: 685, column: 30, scope: !16815)
!16819 = !DILocation(line: 685, column: 39, scope: !16815)
!16820 = !DILocation(line: 685, column: 49, scope: !16815)
!16821 = !DILocation(line: 685, column: 6, scope: !16804)
!16822 = !DILocalVariable(name: "first", scope: !16823, file: !449, line: 686, type: !1726)
!16823 = distinct !DILexicalBlock(scope: !16815, file: !449, line: 685, column: 60)
!16824 = !DILocation(line: 686, column: 7, scope: !16823)
!16825 = !DILocation(line: 686, column: 15, scope: !16823)
!16826 = !DILocation(line: 686, column: 24, scope: !16823)
!16827 = !DILocation(line: 687, column: 7, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16823, file: !449, line: 687, column: 7)
!16829 = !DILocation(line: 687, column: 13, scope: !16828)
!16830 = !DILocation(line: 687, column: 7, scope: !16823)
!16831 = !DILocation(line: 688, column: 17, scope: !16828)
!16832 = !DILocation(line: 688, column: 14, scope: !16828)
!16833 = !DILocation(line: 688, column: 34, scope: !16828)
!16834 = !DILocation(line: 688, column: 32, scope: !16828)
!16835 = !DILocation(line: 688, column: 11, scope: !16828)
!16836 = !DILocation(line: 688, column: 4, scope: !16828)
!16837 = !DILocation(line: 689, column: 2, scope: !16823)
!16838 = !DILocation(line: 690, column: 2, scope: !16804)
!16839 = !DILocation(line: 691, column: 1, scope: !16804)
!16840 = distinct !DISubprogram(name: "ata_id_has_zero_after_trim", scope: !449, file: !449, line: 951, type: !9196, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16841 = !DILocalVariable(name: "id", arg: 1, scope: !16840, file: !449, line: 951, type: !9198)
!16842 = !DILocation(line: 951, column: 58, scope: !16840)
!16843 = !DILocation(line: 954, column: 22, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16840, file: !449, line: 954, column: 6)
!16845 = !DILocation(line: 954, column: 6, scope: !16844)
!16846 = !DILocation(line: 954, column: 26, scope: !16844)
!16847 = !DILocation(line: 955, column: 7, scope: !16844)
!16848 = !DILocation(line: 955, column: 34, scope: !16844)
!16849 = !DILocation(line: 955, column: 44, scope: !16844)
!16850 = !DILocation(line: 954, column: 6, scope: !16840)
!16851 = !DILocation(line: 956, column: 3, scope: !16844)
!16852 = !DILocation(line: 958, column: 2, scope: !16840)
!16853 = !DILocation(line: 959, column: 1, scope: !16840)
!16854 = distinct !DISubprogram(name: "of_property_read_u32", scope: !3284, file: !3284, line: 1214, type: !16855, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16855 = !DISubroutineType(types: !16856)
!16856 = !{!211, !16857, !1437, !5308}
!16857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16858, size: 64)
!16858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3283)
!16859 = !DILocalVariable(name: "np", arg: 1, scope: !16854, file: !3284, line: 1214, type: !16857)
!16860 = !DILocation(line: 1214, column: 66, scope: !16854)
!16861 = !DILocalVariable(name: "propname", arg: 2, scope: !16854, file: !3284, line: 1215, type: !1437)
!16862 = !DILocation(line: 1215, column: 24, scope: !16854)
!16863 = !DILocalVariable(name: "out_value", arg: 3, scope: !16854, file: !3284, line: 1216, type: !5308)
!16864 = !DILocation(line: 1216, column: 17, scope: !16854)
!16865 = !DILocation(line: 1218, column: 36, scope: !16854)
!16866 = !DILocation(line: 1218, column: 40, scope: !16854)
!16867 = !DILocation(line: 1218, column: 50, scope: !16854)
!16868 = !DILocation(line: 1218, column: 9, scope: !16854)
!16869 = !DILocation(line: 1218, column: 2, scope: !16854)
!16870 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !3284, file: !3284, line: 494, type: !16871, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16871 = !DISubroutineType(types: !16872)
!16872 = !{!211, !16857, !1437, !5308, !1631}
!16873 = !DILocalVariable(name: "np", arg: 1, scope: !16870, file: !3284, line: 494, type: !16857)
!16874 = !DILocation(line: 494, column: 72, scope: !16870)
!16875 = !DILocalVariable(name: "propname", arg: 2, scope: !16870, file: !3284, line: 495, type: !1437)
!16876 = !DILocation(line: 495, column: 23, scope: !16870)
!16877 = !DILocalVariable(name: "out_values", arg: 3, scope: !16870, file: !3284, line: 496, type: !5308)
!16878 = !DILocation(line: 496, column: 16, scope: !16870)
!16879 = !DILocalVariable(name: "sz", arg: 4, scope: !16870, file: !3284, line: 496, type: !1631)
!16880 = !DILocation(line: 496, column: 35, scope: !16870)
!16881 = !DILocalVariable(name: "ret", scope: !16870, file: !3284, line: 498, type: !211)
!16882 = !DILocation(line: 498, column: 6, scope: !16870)
!16883 = !DILocation(line: 498, column: 48, scope: !16870)
!16884 = !DILocation(line: 498, column: 52, scope: !16870)
!16885 = !DILocation(line: 498, column: 62, scope: !16870)
!16886 = !DILocation(line: 499, column: 13, scope: !16870)
!16887 = !DILocation(line: 498, column: 12, scope: !16870)
!16888 = !DILocation(line: 500, column: 6, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16870, file: !3284, line: 500, column: 6)
!16890 = !DILocation(line: 500, column: 10, scope: !16889)
!16891 = !DILocation(line: 500, column: 6, scope: !16870)
!16892 = !DILocation(line: 501, column: 3, scope: !16889)
!16893 = !DILocation(line: 503, column: 10, scope: !16889)
!16894 = !DILocation(line: 503, column: 3, scope: !16889)
!16895 = !DILocation(line: 504, column: 1, scope: !16870)
!16896 = distinct !DISubprogram(name: "zpodd_dev_enabled", scope: !16897, file: !16897, line: 250, type: !14678, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16897 = !DIFile(filename: "drivers/ata/libata.h", directory: "/home/lizy2001/genbc/linux")
!16898 = !DILocalVariable(name: "dev", arg: 1, scope: !16896, file: !16897, line: 250, type: !6455)
!16899 = !DILocation(line: 250, column: 57, scope: !16896)
!16900 = !DILocation(line: 250, column: 64, scope: !16896)
!16901 = distinct !DISubprogram(name: "zpodd_exit", scope: !16897, file: !16897, line: 249, type: !6699, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16902 = !DILocalVariable(name: "dev", arg: 1, scope: !16901, file: !16897, line: 249, type: !6455)
!16903 = !DILocation(line: 249, column: 50, scope: !16901)
!16904 = !DILocation(line: 249, column: 56, scope: !16901)
!16905 = distinct !DISubprogram(name: "ata_scsi_remove_dev", scope: !3, file: !3, line: 4423, type: !6699, scopeLine: 4424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!16906 = !DILocation(line: 407, column: 64, scope: !7130, inlinedAt: !16907)
!16907 = distinct !DILocation(line: 4460, column: 2, scope: !16905)
!16908 = !DILocation(line: 407, column: 84, scope: !7130, inlinedAt: !16907)
!16909 = !DILocation(line: 327, column: 67, scope: !7138, inlinedAt: !16910)
!16910 = distinct !DILocation(line: 4436, column: 2, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16912, file: !3, line: 4436, column: 2)
!16912 = distinct !DILexicalBlock(scope: !16913, file: !3, line: 4436, column: 2)
!16913 = distinct !DILexicalBlock(scope: !16914, file: !3, line: 4436, column: 2)
!16914 = distinct !DILexicalBlock(scope: !16915, file: !3, line: 4436, column: 2)
!16915 = distinct !DILexicalBlock(scope: !16905, file: !3, line: 4436, column: 2)
!16916 = !DILocalVariable(name: "dev", arg: 1, scope: !16905, file: !3, line: 4423, type: !6455)
!16917 = !DILocation(line: 4423, column: 52, scope: !16905)
!16918 = !DILocalVariable(name: "ap", scope: !16905, file: !3, line: 4425, type: !988)
!16919 = !DILocation(line: 4425, column: 19, scope: !16905)
!16920 = !DILocation(line: 4425, column: 24, scope: !16905)
!16921 = !DILocation(line: 4425, column: 29, scope: !16905)
!16922 = !DILocation(line: 4425, column: 35, scope: !16905)
!16923 = !DILocalVariable(name: "sdev", scope: !16905, file: !3, line: 4426, type: !5987)
!16924 = !DILocation(line: 4426, column: 22, scope: !16905)
!16925 = !DILocalVariable(name: "flags", scope: !16905, file: !3, line: 4427, type: !986)
!16926 = !DILocation(line: 4427, column: 16, scope: !16905)
!16927 = !DILocation(line: 4435, column: 14, scope: !16905)
!16928 = !DILocation(line: 4435, column: 18, scope: !16905)
!16929 = !DILocation(line: 4435, column: 29, scope: !16905)
!16930 = !DILocation(line: 4435, column: 2, scope: !16905)
!16931 = !DILocation(line: 4436, column: 2, scope: !16905)
!16932 = !DILocation(line: 4436, column: 2, scope: !16915)
!16933 = !DILocalVariable(name: "__dummy", scope: !16934, file: !3, line: 4436, type: !986)
!16934 = distinct !DILexicalBlock(scope: !16914, file: !3, line: 4436, column: 2)
!16935 = !DILocation(line: 4436, column: 2, scope: !16934)
!16936 = !DILocalVariable(name: "__dummy2", scope: !16934, file: !3, line: 4436, type: !986)
!16937 = !DILocation(line: 4436, column: 2, scope: !16914)
!16938 = !DILocation(line: 4436, column: 2, scope: !16913)
!16939 = !DILocation(line: 4436, column: 2, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16913, file: !3, line: 4436, column: 2)
!16941 = !DILocalVariable(name: "__dummy", scope: !16942, file: !3, line: 4436, type: !986)
!16942 = distinct !DILexicalBlock(scope: !16943, file: !3, line: 4436, column: 2)
!16943 = distinct !DILexicalBlock(scope: !16940, file: !3, line: 4436, column: 2)
!16944 = !DILocation(line: 4436, column: 2, scope: !16942)
!16945 = !DILocalVariable(name: "__dummy2", scope: !16942, file: !3, line: 4436, type: !986)
!16946 = !DILocation(line: 4436, column: 2, scope: !16943)
!16947 = !DILocation(line: 4436, column: 2, scope: !16912)
!16948 = !{i32 -2139685333}
!16949 = !DILocation(line: 4436, column: 2, scope: !16911)
!16950 = !DILocation(line: 329, column: 10, scope: !7138, inlinedAt: !16910)
!16951 = !DILocation(line: 329, column: 16, scope: !7138, inlinedAt: !16910)
!16952 = !DILocation(line: 4439, column: 9, scope: !16905)
!16953 = !DILocation(line: 4439, column: 14, scope: !16905)
!16954 = !DILocation(line: 4439, column: 7, scope: !16905)
!16955 = !DILocation(line: 4440, column: 2, scope: !16905)
!16956 = !DILocation(line: 4440, column: 7, scope: !16905)
!16957 = !DILocation(line: 4440, column: 12, scope: !16905)
!16958 = !DILocation(line: 4442, column: 6, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16905, file: !3, line: 4442, column: 6)
!16960 = !DILocation(line: 4442, column: 6, scope: !16905)
!16961 = !DILocation(line: 4447, column: 23, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16963, file: !3, line: 4447, column: 7)
!16963 = distinct !DILexicalBlock(scope: !16959, file: !3, line: 4442, column: 12)
!16964 = !DILocation(line: 4447, column: 7, scope: !16962)
!16965 = !DILocation(line: 4447, column: 29, scope: !16962)
!16966 = !DILocation(line: 4447, column: 7, scope: !16963)
!16967 = !DILocation(line: 4453, column: 26, scope: !16968)
!16968 = distinct !DILexicalBlock(scope: !16962, file: !3, line: 4447, column: 35)
!16969 = !DILocation(line: 4453, column: 4, scope: !16968)
!16970 = !DILocation(line: 4454, column: 3, scope: !16968)
!16971 = !DILocalVariable(name: "__ret_warn_on", scope: !16972, file: !3, line: 4455, type: !211)
!16972 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 4455, column: 4)
!16973 = distinct !DILexicalBlock(scope: !16962, file: !3, line: 4454, column: 10)
!16974 = !DILocation(line: 4455, column: 4, scope: !16972)
!16975 = !DILocation(line: 4455, column: 4, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16972, file: !3, line: 4455, column: 4)
!16977 = !DILocation(line: 4455, column: 4, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16976, file: !3, line: 4455, column: 4)
!16979 = !DILocation(line: 4455, column: 4, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 4455, column: 4)
!16981 = !DILocation(line: 4455, column: 4, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 4455, column: 4)
!16983 = !{i32 -2139684716, i32 -2139684687, i32 -2139684641, i32 -2139684583, i32 -2139684529, i32 -2139684475, i32 -2139684420, i32 -2139684389}
!16984 = !DILocation(line: 4455, column: 4, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 4455, column: 4)
!16986 = !{i32 -2139683981, i32 -2139683974, i32 -2139683922, i32 -2139683891, i32 -2139683861}
!16987 = !DILocation(line: 4455, column: 4, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 4455, column: 4)
!16989 = !DILocation(line: 4456, column: 9, scope: !16973)
!16990 = !DILocation(line: 4458, column: 2, scope: !16963)
!16991 = !DILocation(line: 4460, column: 25, scope: !16905)
!16992 = !DILocation(line: 4460, column: 29, scope: !16905)
!16993 = !DILocation(line: 4460, column: 35, scope: !16905)
!16994 = !DILocation(line: 409, column: 2, scope: !7293, inlinedAt: !16907)
!16995 = !DILocation(line: 409, column: 2, scope: !7298, inlinedAt: !16907)
!16996 = !DILocation(line: 409, column: 2, scope: !7299, inlinedAt: !16907)
!16997 = !DILocation(line: 409, column: 2, scope: !7306, inlinedAt: !16907)
!16998 = !DILocation(line: 409, column: 2, scope: !7309, inlinedAt: !16907)
!16999 = !DILocation(line: 4461, column: 16, scope: !16905)
!17000 = !DILocation(line: 4461, column: 20, scope: !16905)
!17001 = !DILocation(line: 4461, column: 31, scope: !16905)
!17002 = !DILocation(line: 4461, column: 2, scope: !16905)
!17003 = !DILocation(line: 4463, column: 6, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16905, file: !3, line: 4463, column: 6)
!17005 = !DILocation(line: 4463, column: 6, scope: !16905)
!17006 = !DILocation(line: 4464, column: 3, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17004, file: !3, line: 4463, column: 12)
!17008 = !DILocation(line: 4467, column: 22, scope: !17007)
!17009 = !DILocation(line: 4467, column: 3, scope: !17007)
!17010 = !DILocation(line: 4468, column: 19, scope: !17007)
!17011 = !DILocation(line: 4468, column: 3, scope: !17007)
!17012 = !DILocation(line: 4469, column: 2, scope: !17007)
!17013 = !DILocation(line: 4470, column: 1, scope: !16905)
!17014 = distinct !DISubprogram(name: "dev_name", scope: !119, file: !119, line: 609, type: !17015, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!17015 = !DISubroutineType(types: !17016)
!17016 = !{!1437, !3319}
!17017 = !DILocalVariable(name: "dev", arg: 1, scope: !17014, file: !119, line: 609, type: !3319)
!17018 = !DILocation(line: 609, column: 57, scope: !17014)
!17019 = !DILocation(line: 612, column: 6, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17014, file: !119, line: 612, column: 6)
!17021 = !DILocation(line: 612, column: 11, scope: !17020)
!17022 = !DILocation(line: 612, column: 6, scope: !17014)
!17023 = !DILocation(line: 613, column: 10, scope: !17020)
!17024 = !DILocation(line: 613, column: 15, scope: !17020)
!17025 = !DILocation(line: 613, column: 3, scope: !17020)
!17026 = !DILocation(line: 615, column: 23, scope: !17014)
!17027 = !DILocation(line: 615, column: 28, scope: !17014)
!17028 = !DILocation(line: 615, column: 9, scope: !17014)
!17029 = !DILocation(line: 615, column: 2, scope: !17014)
!17030 = !DILocation(line: 616, column: 1, scope: !17014)
!17031 = distinct !DISubprogram(name: "kobject_name", scope: !2692, file: !2692, line: 88, type: !17032, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!17032 = !DISubroutineType(types: !17033)
!17033 = !{!1437, !17034}
!17034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17035, size: 64)
!17035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2691)
!17036 = !DILocalVariable(name: "kobj", arg: 1, scope: !17031, file: !2692, line: 88, type: !17034)
!17037 = !DILocation(line: 88, column: 62, scope: !17031)
!17038 = !DILocation(line: 90, column: 9, scope: !17031)
!17039 = !DILocation(line: 90, column: 15, scope: !17031)
!17040 = !DILocation(line: 90, column: 2, scope: !17031)
!17041 = distinct !DISubprogram(name: "ata_link_max_devices", scope: !183, file: !183, line: 1613, type: !17042, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1018)
!17042 = !DISubroutineType(types: !17043)
!17043 = !{!211, !11225}
!17044 = !DILocalVariable(name: "link", arg: 1, scope: !17041, file: !183, line: 1613, type: !11225)
!17045 = !DILocation(line: 1613, column: 63, scope: !17041)
!17046 = !DILocation(line: 1615, column: 23, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17041, file: !183, line: 1615, column: 6)
!17048 = !DILocation(line: 1615, column: 6, scope: !17047)
!17049 = !DILocation(line: 1615, column: 29, scope: !17047)
!17050 = !DILocation(line: 1615, column: 32, scope: !17047)
!17051 = !DILocation(line: 1615, column: 38, scope: !17047)
!17052 = !DILocation(line: 1615, column: 42, scope: !17047)
!17053 = !DILocation(line: 1615, column: 48, scope: !17047)
!17054 = !DILocation(line: 1615, column: 6, scope: !17041)
!17055 = !DILocation(line: 1616, column: 3, scope: !17047)
!17056 = !DILocation(line: 1617, column: 2, scope: !17041)
!17057 = !DILocation(line: 1618, column: 1, scope: !17041)
