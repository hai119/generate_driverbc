; ModuleID = '../bcout/drivers/ata/sata_mv.llvm.bc'
source_filename = "drivers/ata/sata_mv.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_mv_init6:\09\09\09"
module asm ".long\09mv_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.71, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.70, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.70 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.68, %struct.list_head, %struct.list_head, %union.anon.69 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.66 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.58, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.58 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.59, i32 }
%union.anon.59 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.36, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.36 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.73, %union.anon.74, %union.anon.75, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.78, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.72, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.72 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.73 = type { %struct.hlist_node }
%union.anon.74 = type { %struct.rb_node }
%union.anon.75 = type { %struct.anon.77 }
%struct.anon.77 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.78 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.79, void (i8*)*, i8* }
%union.anon.79 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.80, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.80 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.37, %union.anon.38, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.37 = type { %struct.list_head }
%union.anon.38 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.51, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.43 }
%struct.anon.43 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.50, i32, [12 x i8] }
%union.anon.50 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.51 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.52, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.55 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, i64 }
%union.anon.55 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32, [48 x i8] }
%struct.anon.32 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.33, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.68 = type { %struct.list_head }
%union.anon.69 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.60, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.61, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.62, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.65, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.60 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.61 = type { %struct.callback_head }
%union.anon.62 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.65 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.63 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.63 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.35 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.35 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.pci_vpd = type opaque
%union.anon.71 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.platform_driver = type { i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)*, void (%struct.platform_device*)*, i32 (%struct.platform_device*, i32)*, i32 (%struct.platform_device*)*, %struct.device_driver, %struct.platform_device_id*, i8 }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.ata_port_info = type { i64, i64, i64, i64, i64, %struct.ata_port_operations*, i8* }
%struct.ata_port_operations = type { i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i1 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_port*)*, i64 (%struct.ata_device*, i64)*, void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)*, i32 (%struct.ata_link*, %struct.ata_device**)*, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)*, void (%struct.ata_device*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32*)*, i32 (%struct.ata_link*, i32, i32)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_port*, i32)*, i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_host*)*, void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i8)*, i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, void (%struct.ata_port*)*, i1 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, i8 (%struct.ata_port*)*, i64 (%struct.ata_port*, i8*)*, i64 (%struct.ata_port*, i8*, i64)*, i64 (%struct.ata_device*, i8*)*, i64 (%struct.ata_device*, i32)*, i64 (%struct.ata_port*, i32, i64)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, %struct.ata_port_operations* }
%struct.ata_queued_cmd = type { %struct.ata_port*, %struct.ata_device*, %struct.scsi_cmnd*, void (%struct.scsi_cmnd*)*, %struct.ata_taskfile, [16 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.scatterlist, %struct.scatterlist*, %struct.scatterlist*, i32, i32, %struct.ata_taskfile, void (%struct.ata_queued_cmd*)*, i8*, i8* }
%struct.ata_port = type { %struct.Scsi_Host*, %struct.ata_port_operations*, %struct.spinlock*, i64, i32, i32, i32, i32, %struct.ata_ioports, i8, i8, %struct.ata_link*, %struct.delayed_work, %struct.ata_bmdma_prd*, i64, i32, i32, i32, i32, [33 x %struct.ata_queued_cmd], i64, i64, i32, i32, [8 x i8], %struct.ata_link, %struct.ata_link*, i32, %struct.ata_link*, %struct.ata_link*, %struct.ata_port_stats, %struct.ata_host*, %struct.device*, %struct.device, %struct.mutex, %struct.delayed_work, %struct.work_struct, i32, i32, %struct.list_head, %struct.wait_queue_head, i32, %struct.completion, %struct.pm_message, i32, %struct.timer_list, i64, i64, i32, i8*, %struct.ata_acpi_gtm, [4 x i8], [512 x i8] }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type opaque
%struct.ata_ioports = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.ata_bmdma_prd = type { i32, i32 }
%struct.ata_link = type { %struct.ata_port*, i32, %struct.device, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ata_eh_info, %struct.ata_eh_context, [16 x i8], [2 x %struct.ata_device], i64, [56 x i8] }
%struct.ata_eh_info = type { %struct.ata_device*, i32, i32, i32, [2 x i32], i32, i32, [80 x i8], i32 }
%struct.ata_eh_context = type { %struct.ata_eh_info, [2 x i32], [2 x [6 x i32]], [2 x i32], i32, i32, i32, [2 x i8], i64 }
%struct.ata_device = type { %struct.ata_link*, i32, i32, i64, %struct.scsi_device*, i8*, %union.acpi_object*, i32, %struct.device, i64, i64, i32, i64, i8, i8, i8, i32, i32, i32, i32, i64, i64, i64, i16, i16, i16, [58 x i8], %union.anon.89, [8 x i8], [20 x i8], [64 x i8], i32, i32, i32, i32, i32, %struct.ata_ering, [8 x i8] }
%union.acpi_object = type { %struct.anon.87 }
%struct.anon.87 = type { i32, i32, i64, i32 }
%union.anon.89 = type { [128 x i32] }
%struct.ata_ering = type { i32, [32 x %struct.ata_ering_entry] }
%struct.ata_ering_entry = type { i32, i32, i64 }
%struct.ata_port_stats = type { i64, i64, i64 }
%struct.ata_host = type { %struct.spinlock, %struct.device*, i8**, i32, i32, i8*, %struct.ata_port_operations*, i64, %struct.kref, %struct.mutex, %struct.task_struct*, %struct.ata_port*, [0 x %struct.ata_port*] }
%struct.ata_acpi_gtm = type { [2 x %struct.ata_acpi_drive], i32 }
%struct.ata_acpi_drive = type { i32, i32 }
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.ata_taskfile = type { i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.mv_hw_ops = type { void (%struct.mv_host_priv*, i8*, i32)*, void (%struct.mv_host_priv*, i8*)*, void (%struct.mv_host_priv*, i32, i8*)*, i32 (%struct.mv_host_priv*, i8*, i32)*, void (%struct.mv_host_priv*, i8*)*, void (%struct.ata_host*, i8*)* }
%struct.mv_host_priv = type { i32, i32, i32, [8 x %struct.mv_port_signal], %struct.mv_hw_ops*, i32, i8*, i8*, i8*, i32, i32, i32, %struct.clk*, %struct.clk**, %struct.phy**, %struct.dma_pool*, %struct.dma_pool*, %struct.dma_pool* }
%struct.mv_port_signal = type { i32, i32 }
%struct.clk = type opaque
%struct.phy = type { %struct.device, i32, %struct.phy_ops*, %struct.mutex, i32, i32, %struct.phy_attrs, %struct.regulator* }
%struct.phy_ops = type { i32 (%struct.phy*)*, i32 (%struct.phy*)*, i32 (%struct.phy*)*, i32 (%struct.phy*)*, i32 (%struct.phy*, i32, i32)*, i32 (%struct.phy*, %union.phy_configure_opts*)*, i32 (%struct.phy*, i32, i32, %union.phy_configure_opts*)*, i32 (%struct.phy*)*, i32 (%struct.phy*)*, void (%struct.phy*)*, %struct.module* }
%union.phy_configure_opts = type { %struct.phy_configure_opts_mipi_dphy }
%struct.phy_configure_opts_mipi_dphy = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i8 }
%struct.phy_attrs = type { i32, i32, i32 }
%struct.regulator = type opaque
%struct.dma_pool = type opaque
%struct.mv_port_priv = type { %struct.mv_crqb*, i64, %struct.mv_crpb*, i64, [32 x %struct.mv_sg*], [32 x i64], i32, i32, i32, %struct.mv_cached_regs, i32 }
%struct.mv_crqb = type { i32, i32, i16, [11 x i16] }
%struct.mv_crpb = type { i16, i16, i32 }
%struct.mv_sg = type { i32, i32, i32, i32 }
%struct.mv_cached_regs = type { i32, i32, i32, i32 }
%struct.mv_crqb_iie = type { i32, i32, i32, i32, [4 x i32] }
%struct.mv_sata_platform_data = type { i32 }
%struct.mbus_dram_target_info = type { i8, i32, [4 x %struct.mbus_dram_window] }
%struct.mbus_dram_window = type { i8, i8, i64, i64 }

@__param_str_msi = internal constant [12 x i8] c"sata_mv.msi\00", align 1, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@msi = internal global i32 0, align 4, !dbg !6788
@__param_msi = internal constant %struct.kernel_param { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_msi, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @msi to i8*) } }, section "__param", align 8, !dbg !6621
@__UNIQUE_ID_msitype308 = internal constant [25 x i8] c"sata_mv.parmtype=msi:int\00", section ".modinfo", align 1, !dbg !6672
@__UNIQUE_ID_msi309 = internal constant [53 x i8] c"sata_mv.parm=msi:Enable use of PCI MSI (0=off, 1=on)\00", section ".modinfo", align 1, !dbg !6677
@__param_str_irq_coalescing_io_count = internal constant [32 x i8] c"sata_mv.irq_coalescing_io_count\00", align 16, !dbg !6794
@irq_coalescing_io_count = internal global i32 0, align 4, !dbg !6790
@__param_irq_coalescing_io_count = internal constant %struct.kernel_param { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__param_str_irq_coalescing_io_count, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @irq_coalescing_io_count to i8*) } }, section "__param", align 8, !dbg !6682
@__UNIQUE_ID_irq_coalescing_io_counttype310 = internal constant [45 x i8] c"sata_mv.parmtype=irq_coalescing_io_count:int\00", section ".modinfo", align 1, !dbg !6684
@__UNIQUE_ID_irq_coalescing_io_count311 = internal constant [81 x i8] c"sata_mv.parm=irq_coalescing_io_count:IRQ coalescing I/O count threshold (0..255)\00", section ".modinfo", align 1, !dbg !6689
@__param_str_irq_coalescing_usecs = internal constant [29 x i8] c"sata_mv.irq_coalescing_usecs\00", align 16, !dbg !6797
@irq_coalescing_usecs = internal global i32 0, align 4, !dbg !6792
@__param_irq_coalescing_usecs = internal constant %struct.kernel_param { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__param_str_irq_coalescing_usecs, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @irq_coalescing_usecs to i8*) } }, section "__param", align 8, !dbg !6694
@__UNIQUE_ID_irq_coalescing_usecstype312 = internal constant [42 x i8] c"sata_mv.parmtype=irq_coalescing_usecs:int\00", section ".modinfo", align 1, !dbg !6696
@__UNIQUE_ID_irq_coalescing_usecs313 = internal constant [73 x i8] c"sata_mv.parm=irq_coalescing_usecs:IRQ coalescing time threshold in usecs\00", section ".modinfo", align 1, !dbg !6701
@mv_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([18 x %struct.pci_device_id], [18 x %struct.pci_device_id]* @mv_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @mv_pci_init_one, void (%struct.pci_dev*)* @ata_pci_remove_one, i32 (%struct.pci_dev*, i32)* @ata_pci_device_suspend, i32 (%struct.pci_dev*)* @mv_pci_device_resume, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !6802
@mv_platform_driver = internal global %struct.platform_driver { i32 (%struct.platform_device*)* @mv_platform_probe, i32 (%struct.platform_device*)* @mv_platform_remove, void (%struct.platform_device*)* null, i32 (%struct.platform_device*, i32)* @mv_platform_suspend, i32 (%struct.platform_device*)* @mv_platform_resume, %struct.device_driver { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* getelementptr inbounds ([3 x %struct.of_device_id], [3 x %struct.of_device_id]* @mv_sata_dt_ids, i32 0, i32 0), %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null }, %struct.platform_device_id* null, i8 0 }, align 8, !dbg !7919
@__UNIQUE_ID_author322 = internal constant [26 x i8] c"sata_mv.author=Brett Russ\00", section ".modinfo", align 1, !dbg !6706
@__UNIQUE_ID_description323 = internal constant [71 x i8] c"sata_mv.description=SCSI low-level driver for Marvell SATA controllers\00", section ".modinfo", align 1, !dbg !6711
@__UNIQUE_ID_file324 = internal constant [33 x i8] c"sata_mv.file=drivers/ata/sata_mv\00", section ".modinfo", align 1, !dbg !6716
@__UNIQUE_ID_license325 = internal constant [23 x i8] c"sata_mv.license=GPL v2\00", section ".modinfo", align 1, !dbg !6721
@__UNIQUE_ID_version326 = internal constant [21 x i8] c"sata_mv.version=1.28\00", section ".modinfo", align 1, !dbg !6726
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0) }, align 8, !dbg !7971
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !6731
@__UNIQUE_ID_alias327 = internal constant [31 x i8] c"sata_mv.alias=platform:sata_mv\00", section ".modinfo", align 1, !dbg !6776
@__UNIQUE_ID___addressable_mv_init328 = internal global i8* bitcast (i32 ()* @mv_init to i8*), section ".discard.addressable", align 8, !dbg !6781
@__exitcall_mv_exit = internal global void ()* @mv_exit, section ".exitcall.exit", align 8, !dbg !6783
@.str = private unnamed_addr constant [8 x i8] c"sata_mv\00", align 1
@mv_pci_tbl = internal constant [18 x %struct.pci_device_id] [%struct.pci_device_id { i32 4523, i32 20544, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 20545, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 20608, i32 -1, i32 -1, i32 0, i32 0, i64 2 }, %struct.pci_device_id { i32 4523, i32 20609, i32 -1, i32 -1, i32 0, i32 0, i64 1 }, %struct.pci_device_id { i32 4355, i32 5920, i32 -1, i32 -1, i32 0, i32 0, i64 5 }, %struct.pci_device_id { i32 4355, i32 5952, i32 -1, i32 -1, i32 0, i32 0, i64 5 }, %struct.pci_device_id { i32 4355, i32 5954, i32 -1, i32 -1, i32 0, i32 0, i64 5 }, %struct.pci_device_id { i32 4523, i32 24640, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 4523, i32 24641, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 4523, i32 24642, i32 -1, i32 -1, i32 0, i32 0, i64 5 }, %struct.pci_device_id { i32 4523, i32 24704, i32 -1, i32 -1, i32 0, i32 0, i64 4 }, %struct.pci_device_id { i32 4523, i32 24705, i32 -1, i32 -1, i32 0, i32 0, i64 4 }, %struct.pci_device_id { i32 36869, i32 577, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 36869, i32 579, i32 -1, i32 -1, i32 0, i32 0, i64 6 }, %struct.pci_device_id { i32 4523, i32 28738, i32 -1, i32 -1, i32 0, i32 0, i64 6 }, %struct.pci_device_id { i32 4355, i32 8960, i32 -1, i32 -1, i32 0, i32 0, i64 6 }, %struct.pci_device_id { i32 4355, i32 8976, i32 -1, i32 -1, i32 0, i32 0, i64 6 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !6804
@mv_port_info = internal constant [8 x %struct.ata_port_info] [%struct.ata_port_info { i64 578, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv5_ops, i8* null }, %struct.ata_port_info { i64 1073742402, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv5_ops, i8* null }, %struct.ata_port_info { i64 1073742402, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv5_ops, i8* null }, %struct.ata_port_info { i64 656898, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv6_ops, i8* null }, %struct.ata_port_info { i64 1074398722, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv6_ops, i8* null }, %struct.ata_port_info { i64 919042, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv_iie_ops, i8* null }, %struct.ata_port_info { i64 919042, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv_iie_ops, i8* null }, %struct.ata_port_info { i64 919042, i64 0, i64 31, i64 0, i64 127, %struct.ata_port_operations* @mv_iie_ops, i8* null }], align 16, !dbg !6812
@mv_pci_init_one.__print_once = internal global i8 0, align 1, !dbg !6809
@.str.1 = private unnamed_addr constant [5 x i8] c"1.28\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"DMA enable failed\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"mmio\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@mv5_sht = internal global %struct.scsi_host_template { %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32, i8*)* @ata_scsi_ioctl, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @ata_scsi_queuecmd, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_device*)* null, i32 (%struct.scsi_device*)* @ata_scsi_slave_config, void (%struct.scsi_device*)* @ata_scsi_slave_destroy, i32 (%struct.scsi_target*)* null, void (%struct.scsi_target*)* null, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* null, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* @ata_scsi_dma_need_drain, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* @ata_std_bios_param, void (%struct.scsi_device*)* @ata_scsi_unlock_native_capacity, i32 (%struct.seq_file*, %struct.Scsi_Host*)* null, i32 (%struct.Scsi_Host*, i8*, i32)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), %struct.proc_dir_entry* null, i32 1, i32 -1, i16 128, i16 0, i32 0, i32 0, i64 65535, i64 0, i16 0, i8 0, i32 1, i8 16, i32 0, %struct.device_attribute** null, %struct.device_attribute** getelementptr inbounds ([0 x %struct.device_attribute*], [0 x %struct.device_attribute*]* @ata_common_sdev_attrs, i32 0, i32 0), %struct.attribute_group** null, i64 0, i32 0, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !7915
@mv6_sht = internal global %struct.scsi_host_template { %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32, i8*)* @ata_scsi_ioctl, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @ata_scsi_queuecmd, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_device*)* null, i32 (%struct.scsi_device*)* @ata_scsi_slave_config, void (%struct.scsi_device*)* @ata_scsi_slave_destroy, i32 (%struct.scsi_target*)* null, void (%struct.scsi_target*)* null, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* @ata_scsi_change_queue_depth, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* @ata_scsi_dma_need_drain, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* @ata_std_bios_param, void (%struct.scsi_device*)* @ata_scsi_unlock_native_capacity, i32 (%struct.seq_file*, %struct.Scsi_Host*)* null, i32 (%struct.Scsi_Host*, i8*, i32)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), %struct.proc_dir_entry* null, i32 31, i32 -1, i16 128, i16 0, i32 0, i32 0, i64 65535, i64 0, i16 0, i8 0, i32 1, i8 16, i32 0, %struct.device_attribute** null, %struct.device_attribute** getelementptr inbounds ([0 x %struct.device_attribute*], [0 x %struct.device_attribute*]* @ata_ncq_sdev_attrs, i32 0, i32 0), %struct.attribute_group** null, i64 0, i32 0, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !7917
@mv5_ops = internal global %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* @mv_qc_defer, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* @mv_qc_prep, i32 (%struct.ata_queued_cmd*)* @mv_qc_issue, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* null, void (%struct.ata_port*)* @mv_eh_freeze, void (%struct.ata_port*)* @mv_eh_thaw, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* @mv_hardreset, void (%struct.ata_link*, i32*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* inttoptr (i64 -2 to void (%struct.ata_port*)*), void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32*)* @mv5_scr_read, i32 (%struct.ata_link*, i32, i32)* @mv5_scr_write, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* @mv_port_start, void (%struct.ata_port*)* @mv_port_stop, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* null, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* null, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, i8 (%struct.ata_port*)* null, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* @ata_sff_port_ops }, align 8, !dbg !7745
@mv6_ops = internal global %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* @mv_qc_defer, i32 (%struct.ata_queued_cmd*)* @mv_check_atapi_dma, i32 (%struct.ata_queued_cmd*)* @mv_qc_prep, i32 (%struct.ata_queued_cmd*)* @mv_qc_issue, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* @mv6_dev_config, void (%struct.ata_port*)* @mv_eh_freeze, void (%struct.ata_port*)* @mv_eh_thaw, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* @mv_softreset, i32 (%struct.ata_link*, i32*, i64)* @mv_hardreset, void (%struct.ata_link*, i32*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* @mv_softreset, i32 (%struct.ata_link*, i32*, i64)* @mv_pmp_hardreset, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* @mv_pmp_error_handler, void (%struct.ata_port*)* inttoptr (i64 -2 to void (%struct.ata_port*)*), void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32*)* @mv_scr_read, i32 (%struct.ata_link*, i32, i32)* @mv_scr_write, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* @mv_port_start, void (%struct.ata_port*)* @mv_port_stop, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* @mv_sff_check_status, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* null, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* @mv_sff_irq_clear, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* @mv_bmdma_setup, void (%struct.ata_queued_cmd*)* @mv_bmdma_start, void (%struct.ata_queued_cmd*)* @mv_bmdma_stop, i8 (%struct.ata_port*)* @mv_bmdma_status, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* @ata_bmdma_port_ops }, align 8, !dbg !7750
@mv_iie_ops = internal global %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* @mv_qc_prep_iie, i32 (%struct.ata_queued_cmd*)* null, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* inttoptr (i64 -2 to void (%struct.ata_device*)*), void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32*)* null, i32 (%struct.ata_link*, i32, i32)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* null, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* null, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, i8 (%struct.ata_port*)* null, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* @mv6_ops }, align 8, !dbg !7752
@ata_sff_port_ops = external dso_local constant %struct.ata_port_operations, align 8
@.str.5 = private unnamed_addr constant [22 x i8] c"drivers/ata/sata_mv.c\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"%s: unsupported command: %.2x\0A\00", align 1
@__func__.mv_qc_prep = private unnamed_addr constant [11 x i8] c"mv_qc_prep\00", align 1
@mv_qc_issue.limit_warnings = internal global i32 10, align 4, !dbg !7747
@.str.8 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.9 = private unnamed_addr constant [73 x i8] c"sata_mv: attempting PIO w/multiple DRQ: this may fail due to h/w errata\0A\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"Unable to stop eDMA\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%s transmission error, ifstat=%08x\0A\00", align 1
@__func__.mv_send_fis = private unnamed_addr constant [12 x i8] c"mv_send_fis\00", align 1
@jiffies = external dso_local global i64, align 8
@sata_deb_timing_hotplug = external dso_local constant [0 x i64], align 8
@sata_deb_timing_normal = external dso_local constant [0 x i64], align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@ata_bmdma_port_ops = external dso_local constant %struct.ata_port_operations, align 8
@.str.12 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"NCQ disabled for command-based switching\0A\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"crqb_q\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"crpb_q\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"sg_tbl\00", align 1
@mv5xxx_ops = internal constant %struct.mv_hw_ops { void (%struct.mv_host_priv*, i8*, i32)* @mv5_phy_errata, void (%struct.mv_host_priv*, i8*)* @mv5_enable_leds, void (%struct.mv_host_priv*, i32, i8*)* @mv5_read_preamp, i32 (%struct.mv_host_priv*, i8*, i32)* @mv5_reset_hc, void (%struct.mv_host_priv*, i8*)* @mv5_reset_flash, void (%struct.ata_host*, i8*)* @mv5_reset_bus }, align 8, !dbg !7754
@.str.17 = private unnamed_addr constant [44 x i8] c"Applying 50XXB2 workarounds to unknown rev\0A\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"Applying B2 workarounds to unknown rev\0A\00", align 1
@mv6xxx_ops = internal constant %struct.mv_hw_ops { void (%struct.mv_host_priv*, i8*, i32)* @mv6_phy_errata, void (%struct.mv_host_priv*, i8*)* @mv6_enable_leds, void (%struct.mv_host_priv*, i32, i8*)* @mv6_read_preamp, i32 (%struct.mv_host_priv*, i8*, i32)* @mv6_reset_hc, void (%struct.mv_host_priv*, i8*)* @mv6_reset_flash, void (%struct.ata_host*, i8*)* @mv_reset_pci_bus }, align 8, !dbg !7909
@.str.19 = private unnamed_addr constant [126 x i8] c"\014sata_mv: Highpoint RocketRAID BIOS CORRUPTS DATA on all attached drives, regardless of if/how they are configured. BEWARE!\0A\00", align 1
@.str.20 = private unnamed_addr constant [149 x i8] c"\014sata_mv: For data safety, do not use sectors 8-9 on \22Legacy\22 drives, and avoid the final two gigabytes on all RocketRAID BIOS initialized drives.\0A\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"Applying 60X1C0 workarounds to unknown rev\0A\00", align 1
@mv_soc_65n_ops = internal constant %struct.mv_hw_ops { void (%struct.mv_host_priv*, i8*, i32)* @mv_soc_65n_phy_errata, void (%struct.mv_host_priv*, i8*)* @mv_soc_enable_leds, void (%struct.mv_host_priv*, i32, i8*)* null, i32 (%struct.mv_host_priv*, i8*, i32)* @mv_soc_reset_hc, void (%struct.mv_host_priv*, i8*)* @mv_soc_reset_flash, void (%struct.ata_host*, i8*)* @mv_soc_reset_bus }, align 8, !dbg !7911
@mv_soc_ops = internal constant %struct.mv_hw_ops { void (%struct.mv_host_priv*, i8*, i32)* @mv6_phy_errata, void (%struct.mv_host_priv*, i8*)* @mv_soc_enable_leds, void (%struct.mv_host_priv*, i32, i8*)* @mv_soc_read_preamp, i32 (%struct.mv_host_priv*, i8*, i32)* @mv_soc_reset_hc, void (%struct.mv_host_priv*, i8*)* @mv_soc_reset_flash, void (%struct.ata_host*, i8*)* @mv_soc_reset_bus }, align 8, !dbg !7913
@.str.22 = private unnamed_addr constant [29 x i8] c"BUG: invalid board index %u\0A\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"\013sata_mv: PCI master won't flush\0A\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"\013sata_mv: can't set global reset\0A\00", align 1
@.str.25 = private unnamed_addr constant [37 x i8] c"\013sata_mv: can't clear global reset\0A\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"SCSI\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"RAID\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"II\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"IIE\00", align 1
@.str.32 = private unnamed_addr constant [45 x i8] c"Gen-%s %u slots %u ports %s mode IRQ via %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"MSI\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"INTx\00", align 1
@.str.35 = private unnamed_addr constant [33 x i8] c"PCI ERROR; PCI IRQ cause=0x%08x\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"PCI err cause 0x%08x\00", align 1
@.str.37 = private unnamed_addr constant [67 x i8] c"%s: pmp_map=%04x qc_map=%04llx failed_links=%d nr_active_links=%d\0A\00", align 1
@__func__.mv_handle_fbs_ncq_dev_err = private unnamed_addr constant [26 x i8] c"mv_handle_fbs_ncq_dev_err\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"%s: done\0A\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"%s: waiting\0A\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"dev err\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"edma_err_cause=%08x pp_flags=%08x\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"fis_cause=%08x\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"SDB notify\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"dev error\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"parity error\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"dev disconnect\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"dev connect\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"EDMA self-disable\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"SError=%08x\00", align 1
@.str.50 = private unnamed_addr constant [34 x i8] c"%s: err_cause=0x%x pp_flags=0x%x\0A\00", align 1
@__func__.mv_handle_dev_err = private unnamed_addr constant [18 x i8] c"mv_handle_dev_err\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"EDMA enabled\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"polling\00", align 1
@.str.54 = private unnamed_addr constant [37 x i8] c"unexpected device interrupt while %s\00", align 1
@ata_common_sdev_attrs = external dso_local global [0 x %struct.device_attribute*], align 8
@ata_ncq_sdev_attrs = external dso_local global [0 x %struct.device_attribute*], align 8
@mv_sata_dt_ids = internal constant [3 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,armada-370-sata\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* null }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,orion-sata\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* null }, %struct.of_device_id zeroinitializer], align 16, !dbg !7968
@__const.mv_platform_probe.ppi = private unnamed_addr constant [2 x %struct.ata_port_info*] [%struct.ata_port_info* bitcast (i8* getelementptr (i8, i8* bitcast ([8 x %struct.ata_port_info]* @mv_port_info to i8*), i64 392) to %struct.ata_port_info*), %struct.ata_port_info* null], align 16
@mv_platform_probe.__print_once = internal global i8 0, align 1, !dbg !7965
@.str.55 = private unnamed_addr constant [29 x i8] c"invalid number of resources\0A\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"nr-ports\00", align 1
@.str.57 = private unnamed_addr constant [37 x i8] c"error parsing nr-ports property: %d\0A\00", align 1
@.str.58 = private unnamed_addr constant [31 x i8] c"nr-ports must be positive: %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"cannot get optional clkdev\0A\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"port%d\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"error getting phy %d\00", align 1
@.str.63 = private unnamed_addr constant [24 x i8] c"marvell,armada-370-sata\00", align 1
@.str.64 = private unnamed_addr constant [19 x i8] c"slots %u ports %d\0A\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"\013sata_mv: Error during HW init\0A\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@llvm.used = appending global [19 x i8*] [i8* bitcast (%struct.kernel_param* @__param_msi to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_msitype308, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__UNIQUE_ID_msi309, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_irq_coalescing_io_count to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_irq_coalescing_io_counttype310, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__UNIQUE_ID_irq_coalescing_io_count311, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_irq_coalescing_usecs to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_irq_coalescing_usecstype312, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__UNIQUE_ID_irq_coalescing_usecs313, i32 0, i32 0), i8* bitcast (void ()* @mv_exit to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_author322, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__UNIQUE_ID_description323, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_file324, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_license325, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_version326, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_alias327, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_mv_init328 to i8*), i8* bitcast (void ()** @__exitcall_mv_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mv_exit() #0 section ".exit.text" !dbg !7980 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @mv_pci_driver) #9, !dbg !7981
  call void @platform_driver_unregister(%struct.platform_driver* @mv_platform_driver) #9, !dbg !7982
  ret void, !dbg !7983
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local void @platform_driver_unregister(%struct.platform_driver*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_init() #0 section ".init.text" !dbg !7984 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7987, metadata !DIExpression()), !dbg !7988
  store i32 -19, i32* %rc, align 4, !dbg !7988
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @mv_pci_driver, %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #9, !dbg !7989
  store i32 %call, i32* %rc, align 4, !dbg !7990
  %0 = load i32, i32* %rc, align 4, !dbg !7991
  %cmp = icmp slt i32 %0, 0, !dbg !7993
  br i1 %cmp, label %if.then, label %if.end, !dbg !7994

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %rc, align 4, !dbg !7995
  store i32 %1, i32* %retval, align 4, !dbg !7996
  br label %return, !dbg !7996

if.end:                                           ; preds = %entry
  %call1 = call i32 @__platform_driver_register(%struct.platform_driver* @mv_platform_driver, %struct.module* null) #9, !dbg !7997
  store i32 %call1, i32* %rc, align 4, !dbg !7998
  %2 = load i32, i32* %rc, align 4, !dbg !7999
  %cmp2 = icmp slt i32 %2, 0, !dbg !8001
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8002

if.then3:                                         ; preds = %if.end
  call void @pci_unregister_driver(%struct.pci_driver* @mv_pci_driver) #9, !dbg !8003
  br label %if.end4, !dbg !8003

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i32, i32* %rc, align 4, !dbg !8004
  store i32 %3, i32* %retval, align 4, !dbg !8005
  br label %return, !dbg !8005

return:                                           ; preds = %if.end4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8006
  ret i32 %4, !dbg !8006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_pci_init_one(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !6811 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %board_idx = alloca i32, align 4
  %ppi = alloca [2 x %struct.ata_port_info*], align 16
  %host = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %n_ports = alloca i32, align 4
  %port = alloca i32, align 4
  %rc = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %offset = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8007, metadata !DIExpression()), !dbg !8008
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !8009, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.declare(metadata i32* %board_idx, metadata !8011, metadata !DIExpression()), !dbg !8012
  %0 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !8013
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %0, i32 0, i32 6, !dbg !8014
  %1 = load i64, i64* %driver_data, align 8, !dbg !8014
  %conv = trunc i64 %1 to i32, !dbg !8015
  store i32 %conv, i32* %board_idx, align 4, !dbg !8012
  call void @llvm.dbg.declare(metadata [2 x %struct.ata_port_info*]* %ppi, metadata !8016, metadata !DIExpression()), !dbg !8019
  %arrayinit.begin = getelementptr inbounds [2 x %struct.ata_port_info*], [2 x %struct.ata_port_info*]* %ppi, i64 0, i64 0, !dbg !8020
  %2 = load i32, i32* %board_idx, align 4, !dbg !8021
  %idxprom = zext i32 %2 to i64, !dbg !8022
  %arrayidx = getelementptr [8 x %struct.ata_port_info], [8 x %struct.ata_port_info]* @mv_port_info, i64 0, i64 %idxprom, !dbg !8022
  store %struct.ata_port_info* %arrayidx, %struct.ata_port_info** %arrayinit.begin, align 8, !dbg !8020
  %arrayinit.element = getelementptr inbounds %struct.ata_port_info*, %struct.ata_port_info** %arrayinit.begin, i64 1, !dbg !8020
  store %struct.ata_port_info* null, %struct.ata_port_info** %arrayinit.element, align 8, !dbg !8020
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.declare(metadata i32* %n_ports, metadata !8027, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %port, metadata !8029, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8031, metadata !DIExpression()), !dbg !8032
  %3 = load i8, i8* @mv_pci_init_one.__print_once, align 1, !dbg !8033
  %tobool = trunc i8 %3 to i1, !dbg !8033
  br i1 %tobool, label %if.end, label %if.then, !dbg !8036

if.then:                                          ; preds = %entry
  store i8 1, i8* @mv_pci_init_one.__print_once, align 1, !dbg !8037
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8037
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !8037
  call void @ata_print_version(%struct.device* %dev, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !8037
  br label %if.end, !dbg !8037

if.end:                                           ; preds = %if.then, %entry
  %arrayidx1 = getelementptr [2 x %struct.ata_port_info*], [2 x %struct.ata_port_info*]* %ppi, i64 0, i64 0, !dbg !8039
  %5 = load %struct.ata_port_info*, %struct.ata_port_info** %arrayidx1, align 16, !dbg !8039
  %flags = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %5, i32 0, i32 0, !dbg !8040
  %6 = load i64, i64* %flags, align 8, !dbg !8040
  %call = call i32 @mv_get_hc_count(i64 %6) #9, !dbg !8041
  %mul = mul i32 %call, 4, !dbg !8042
  store i32 %mul, i32* %n_ports, align 4, !dbg !8043
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8044
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !8045
  %arraydecay = getelementptr inbounds [2 x %struct.ata_port_info*], [2 x %struct.ata_port_info*]* %ppi, i64 0, i64 0, !dbg !8046
  %8 = load i32, i32* %n_ports, align 4, !dbg !8047
  %call3 = call %struct.ata_host* @ata_host_alloc_pinfo(%struct.device* %dev2, %struct.ata_port_info** %arraydecay, i32 %8) #9, !dbg !8048
  store %struct.ata_host* %call3, %struct.ata_host** %host, align 8, !dbg !8049
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8050
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !8051
  %call5 = call i8* @devm_kzalloc(%struct.device* %dev4, i64 184, i32 3264) #9, !dbg !8052
  %10 = bitcast i8* %call5 to %struct.mv_host_priv*, !dbg !8052
  store %struct.mv_host_priv* %10, %struct.mv_host_priv** %hpriv, align 8, !dbg !8053
  %11 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8054
  %tobool6 = icmp ne %struct.ata_host* %11, null, !dbg !8054
  br i1 %tobool6, label %lor.lhs.false, label %if.then8, !dbg !8056

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8057
  %tobool7 = icmp ne %struct.mv_host_priv* %12, null, !dbg !8057
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8058

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -12, i32* %retval, align 4, !dbg !8059
  br label %return, !dbg !8059

if.end9:                                          ; preds = %lor.lhs.false
  %13 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8060
  %14 = bitcast %struct.mv_host_priv* %13 to i8*, !dbg !8060
  %15 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8061
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %15, i32 0, i32 5, !dbg !8062
  store i8* %14, i8** %private_data, align 8, !dbg !8063
  %16 = load i32, i32* %n_ports, align 4, !dbg !8064
  %17 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8065
  %n_ports10 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %17, i32 0, i32 5, !dbg !8066
  store i32 %16, i32* %n_ports10, align 8, !dbg !8067
  %18 = load i32, i32* %board_idx, align 4, !dbg !8068
  %19 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8069
  %board_idx11 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %19, i32 0, i32 1, !dbg !8070
  store i32 %18, i32* %board_idx11, align 4, !dbg !8071
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8072
  %call12 = call i32 @pcim_enable_device(%struct.pci_dev* %20) #9, !dbg !8073
  store i32 %call12, i32* %rc, align 4, !dbg !8074
  %21 = load i32, i32* %rc, align 4, !dbg !8075
  %tobool13 = icmp ne i32 %21, 0, !dbg !8075
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8077

if.then14:                                        ; preds = %if.end9
  %22 = load i32, i32* %rc, align 4, !dbg !8078
  store i32 %22, i32* %retval, align 4, !dbg !8079
  br label %return, !dbg !8079

if.end15:                                         ; preds = %if.end9
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8080
  %call16 = call i32 @pcim_iomap_regions(%struct.pci_dev* %23, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #9, !dbg !8081
  store i32 %call16, i32* %rc, align 4, !dbg !8082
  %24 = load i32, i32* %rc, align 4, !dbg !8083
  %cmp = icmp eq i32 %24, -16, !dbg !8085
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !8086

if.then18:                                        ; preds = %if.end15
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8087
  call void @pcim_pin_device(%struct.pci_dev* %25) #9, !dbg !8088
  br label %if.end19, !dbg !8088

if.end19:                                         ; preds = %if.then18, %if.end15
  %26 = load i32, i32* %rc, align 4, !dbg !8089
  %tobool20 = icmp ne i32 %26, 0, !dbg !8089
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !8091

if.then21:                                        ; preds = %if.end19
  %27 = load i32, i32* %rc, align 4, !dbg !8092
  store i32 %27, i32* %retval, align 4, !dbg !8093
  br label %return, !dbg !8093

if.end22:                                         ; preds = %if.end19
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8094
  %call23 = call i8** @pcim_iomap_table(%struct.pci_dev* %28) #9, !dbg !8095
  %29 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8096
  %iomap = getelementptr inbounds %struct.ata_host, %struct.ata_host* %29, i32 0, i32 2, !dbg !8097
  store i8** %call23, i8*** %iomap, align 8, !dbg !8098
  %30 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8099
  %iomap24 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %30, i32 0, i32 2, !dbg !8100
  %31 = load i8**, i8*** %iomap24, align 8, !dbg !8100
  %arrayidx25 = getelementptr i8*, i8** %31, i64 0, !dbg !8099
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !8099
  %33 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8101
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %33, i32 0, i32 6, !dbg !8102
  store i8* %32, i8** %base, align 8, !dbg !8103
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8104
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 41, !dbg !8105
  %call27 = call i32 @dma_set_mask_and_coherent(%struct.device* %dev26, i64 -1) #9, !dbg !8106
  store i32 %call27, i32* %rc, align 4, !dbg !8107
  %35 = load i32, i32* %rc, align 4, !dbg !8108
  %tobool28 = icmp ne i32 %35, 0, !dbg !8108
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !8110

if.then29:                                        ; preds = %if.end22
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8111
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 41, !dbg !8111
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev30, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !8111
  %37 = load i32, i32* %rc, align 4, !dbg !8113
  store i32 %37, i32* %retval, align 4, !dbg !8114
  br label %return, !dbg !8114

if.end31:                                         ; preds = %if.end22
  %38 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8115
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8116
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !8117
  %call33 = call i32 @mv_create_dma_pools(%struct.mv_host_priv* %38, %struct.device* %dev32) #9, !dbg !8118
  store i32 %call33, i32* %rc, align 4, !dbg !8119
  %40 = load i32, i32* %rc, align 4, !dbg !8120
  %tobool34 = icmp ne i32 %40, 0, !dbg !8120
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !8122

if.then35:                                        ; preds = %if.end31
  %41 = load i32, i32* %rc, align 4, !dbg !8123
  store i32 %41, i32* %retval, align 4, !dbg !8124
  br label %return, !dbg !8124

if.end36:                                         ; preds = %if.end31
  store i32 0, i32* %port, align 4, !dbg !8125
  br label %for.cond, !dbg !8127

for.cond:                                         ; preds = %for.inc, %if.end36
  %42 = load i32, i32* %port, align 4, !dbg !8128
  %43 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8130
  %n_ports37 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %43, i32 0, i32 3, !dbg !8131
  %44 = load i32, i32* %n_ports37, align 8, !dbg !8131
  %cmp38 = icmp ult i32 %42, %44, !dbg !8132
  br i1 %cmp38, label %for.body, label %for.end, !dbg !8133

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8134, metadata !DIExpression()), !dbg !8136
  %45 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8137
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %45, i32 0, i32 12, !dbg !8138
  %46 = load i32, i32* %port, align 4, !dbg !8139
  %idxprom40 = sext i32 %46 to i64, !dbg !8137
  %arrayidx41 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom40, !dbg !8137
  %47 = load %struct.ata_port*, %struct.ata_port** %arrayidx41, align 8, !dbg !8137
  store %struct.ata_port* %47, %struct.ata_port** %ap, align 8, !dbg !8136
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !8140, metadata !DIExpression()), !dbg !8141
  %48 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8142
  %base42 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %48, i32 0, i32 6, !dbg !8143
  %49 = load i8*, i8** %base42, align 8, !dbg !8143
  %50 = load i32, i32* %port, align 4, !dbg !8144
  %call43 = call i8* @mv_port_base(i8* %49, i32 %50) #9, !dbg !8145
  store i8* %call43, i8** %port_mmio, align 8, !dbg !8141
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8146, metadata !DIExpression()), !dbg !8147
  %51 = load i8*, i8** %port_mmio, align 8, !dbg !8148
  %52 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8149
  %base44 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %52, i32 0, i32 6, !dbg !8150
  %53 = load i8*, i8** %base44, align 8, !dbg !8150
  %sub.ptr.lhs.cast = ptrtoint i8* %51 to i64, !dbg !8151
  %sub.ptr.rhs.cast = ptrtoint i8* %53 to i64, !dbg !8151
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8151
  %conv45 = trunc i64 %sub.ptr.sub to i32, !dbg !8148
  store i32 %conv45, i32* %offset, align 4, !dbg !8147
  %54 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8152
  call void @ata_port_pbar_desc(%struct.ata_port* %54, i32 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !8153
  %55 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8154
  %56 = load i32, i32* %offset, align 4, !dbg !8155
  %conv46 = zext i32 %56 to i64, !dbg !8155
  call void @ata_port_pbar_desc(%struct.ata_port* %55, i32 0, i64 %conv46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #9, !dbg !8156
  br label %for.inc, !dbg !8157

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %port, align 4, !dbg !8158
  %inc = add i32 %57, 1, !dbg !8158
  store i32 %inc, i32* %port, align 4, !dbg !8158
  br label %for.cond, !dbg !8159, !llvm.loop !8160

for.end:                                          ; preds = %for.cond
  %58 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8162
  %call47 = call i32 @mv_init_host(%struct.ata_host* %58) #9, !dbg !8163
  store i32 %call47, i32* %rc, align 4, !dbg !8164
  %59 = load i32, i32* %rc, align 4, !dbg !8165
  %tobool48 = icmp ne i32 %59, 0, !dbg !8165
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !8167

if.then49:                                        ; preds = %for.end
  %60 = load i32, i32* %rc, align 4, !dbg !8168
  store i32 %60, i32* %retval, align 4, !dbg !8169
  br label %return, !dbg !8169

if.end50:                                         ; preds = %for.end
  %61 = load i32, i32* @msi, align 4, !dbg !8170
  %tobool51 = icmp ne i32 %61, 0, !dbg !8170
  br i1 %tobool51, label %land.lhs.true, label %if.end56, !dbg !8172

land.lhs.true:                                    ; preds = %if.end50
  %62 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8173
  %call52 = call i32 @pci_enable_msi(%struct.pci_dev* %62) #9, !dbg !8174
  %cmp53 = icmp eq i32 %call52, 0, !dbg !8175
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !8176

if.then55:                                        ; preds = %land.lhs.true
  %63 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8177
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %63, i32 0, i32 0, !dbg !8178
  %64 = load i32, i32* %hp_flags, align 8, !dbg !8179
  %or = or i32 %64, 1, !dbg !8179
  store i32 %or, i32* %hp_flags, align 8, !dbg !8179
  br label %if.end56, !dbg !8177

if.end56:                                         ; preds = %if.then55, %land.lhs.true, %if.end50
  %65 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8180
  call void @mv_dump_pci_cfg(%struct.pci_dev* %65, i32 104) #9, !dbg !8181
  %66 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8182
  call void @mv_print_info(%struct.ata_host* %66) #9, !dbg !8183
  %67 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8184
  call void @pci_set_master(%struct.pci_dev* %67) #9, !dbg !8185
  %68 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8186
  %call57 = call i32 @pci_try_set_mwi(%struct.pci_dev* %68) #9, !dbg !8187
  %69 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8188
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8189
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 43, !dbg !8190
  %71 = load i32, i32* %irq, align 4, !dbg !8190
  %72 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8191
  %hp_flags58 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %72, i32 0, i32 0, !dbg !8191
  %73 = load i32, i32* %hp_flags58, align 8, !dbg !8191
  %and = and i32 %73, 64, !dbg !8191
  %tobool59 = icmp ne i32 %and, 0, !dbg !8191
  %74 = zext i1 %tobool59 to i64, !dbg !8191
  %cond = select i1 %tobool59, %struct.scsi_host_template* @mv5_sht, %struct.scsi_host_template* @mv6_sht, !dbg !8191
  %call60 = call i32 @ata_host_activate(%struct.ata_host* %69, i32 %71, i32 (i32, i8*)* @mv_interrupt, i64 128, %struct.scsi_host_template* %cond) #9, !dbg !8192
  store i32 %call60, i32* %retval, align 4, !dbg !8193
  br label %return, !dbg !8193

return:                                           ; preds = %if.end56, %if.then49, %if.then35, %if.then29, %if.then21, %if.then14, %if.then8
  %75 = load i32, i32* %retval, align 4, !dbg !8194
  ret i32 %75, !dbg !8194
}

; Function Attrs: noredzone
declare dso_local void @ata_pci_remove_one(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_pci_device_suspend(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_pci_device_resume(%struct.pci_dev* %pdev) #2 !dbg !8195 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.ata_host*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !8198, metadata !DIExpression()), !dbg !8199
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8200
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #9, !dbg !8201
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !8201
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !8199
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8202, metadata !DIExpression()), !dbg !8203
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8204
  %call1 = call i32 @ata_pci_device_do_resume(%struct.pci_dev* %2) #9, !dbg !8205
  store i32 %call1, i32* %rc, align 4, !dbg !8206
  %3 = load i32, i32* %rc, align 4, !dbg !8207
  %tobool = icmp ne i32 %3, 0, !dbg !8207
  br i1 %tobool, label %if.then, label %if.end, !dbg !8209

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %rc, align 4, !dbg !8210
  store i32 %4, i32* %retval, align 4, !dbg !8211
  br label %return, !dbg !8211

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8212
  %call2 = call i32 @mv_init_host(%struct.ata_host* %5) #9, !dbg !8213
  store i32 %call2, i32* %rc, align 4, !dbg !8214
  %6 = load i32, i32* %rc, align 4, !dbg !8215
  %tobool3 = icmp ne i32 %6, 0, !dbg !8215
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8217

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %rc, align 4, !dbg !8218
  store i32 %7, i32* %retval, align 4, !dbg !8219
  br label %return, !dbg !8219

if.end5:                                          ; preds = %if.end
  %8 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8220
  call void @ata_host_resume(%struct.ata_host* %8) #9, !dbg !8221
  store i32 0, i32* %retval, align 4, !dbg !8222
  br label %return, !dbg !8222

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8223
  ret i32 %9, !dbg !8223
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local void @ata_print_version(%struct.device*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_get_hc_count(i64 %port_flags) #2 !dbg !8224 {
entry:
  %port_flags.addr = alloca i64, align 8
  store i64 %port_flags, i64* %port_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %port_flags.addr, metadata !8227, metadata !DIExpression()), !dbg !8228
  %0 = load i64, i64* %port_flags.addr, align 8, !dbg !8229
  %and = and i64 %0, 1073741824, !dbg !8230
  %tobool = icmp ne i64 %and, 0, !dbg !8231
  %1 = zext i1 %tobool to i64, !dbg !8231
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !8231
  ret i32 %cond, !dbg !8232
}

; Function Attrs: noredzone
declare dso_local %struct.ata_host* @ata_host_alloc_pinfo(%struct.device*, %struct.ata_port_info**, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #2 !dbg !8233 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8242
  %1 = load i64, i64* %size.addr, align 8, !dbg !8243
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !8244
  %or = or i32 %2, 256, !dbg !8245
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #9, !dbg !8246
  ret i8* %call, !dbg !8247
}

; Function Attrs: noredzone
declare dso_local i32 @pcim_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pcim_iomap_regions(%struct.pci_dev*, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pcim_pin_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i8** @pcim_iomap_table(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_mask_and_coherent(%struct.device* %dev, i64 %mask) #2 !dbg !8248 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %mask.addr = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !8254, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8256, metadata !DIExpression()), !dbg !8257
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8258
  %1 = load i64, i64* %mask.addr, align 8, !dbg !8259
  %call = call i32 @dma_set_mask(%struct.device* %0, i64 %1) #9, !dbg !8260
  store i32 %call, i32* %rc, align 4, !dbg !8257
  %2 = load i32, i32* %rc, align 4, !dbg !8261
  %cmp = icmp eq i32 %2, 0, !dbg !8263
  br i1 %cmp, label %if.then, label %if.end, !dbg !8264

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8265
  %4 = load i64, i64* %mask.addr, align 8, !dbg !8266
  %call1 = call i32 @dma_set_coherent_mask(%struct.device* %3, i64 %4) #9, !dbg !8267
  br label %if.end, !dbg !8267

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %rc, align 4, !dbg !8268
  ret i32 %5, !dbg !8269
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_create_dma_pools(%struct.mv_host_priv* %hpriv, %struct.device* %dev) #2 !dbg !8270 {
entry:
  %retval = alloca i32, align 4
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8277
  %call = call %struct.dma_pool* @dmam_pool_create(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), %struct.device* %0, i64 1024, i64 1024, i64 0) #9, !dbg !8278
  %1 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !8279
  %crqb_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %1, i32 0, i32 15, !dbg !8280
  store %struct.dma_pool* %call, %struct.dma_pool** %crqb_pool, align 8, !dbg !8281
  %2 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !8282
  %crqb_pool1 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %2, i32 0, i32 15, !dbg !8284
  %3 = load %struct.dma_pool*, %struct.dma_pool** %crqb_pool1, align 8, !dbg !8284
  %tobool = icmp ne %struct.dma_pool* %3, null, !dbg !8282
  br i1 %tobool, label %if.end, label %if.then, !dbg !8285

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8286
  br label %return, !dbg !8286

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8287
  %call2 = call %struct.dma_pool* @dmam_pool_create(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), %struct.device* %4, i64 256, i64 256, i64 0) #9, !dbg !8288
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !8289
  %crpb_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 16, !dbg !8290
  store %struct.dma_pool* %call2, %struct.dma_pool** %crpb_pool, align 8, !dbg !8291
  %6 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !8292
  %crpb_pool3 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %6, i32 0, i32 16, !dbg !8294
  %7 = load %struct.dma_pool*, %struct.dma_pool** %crpb_pool3, align 8, !dbg !8294
  %tobool4 = icmp ne %struct.dma_pool* %7, null, !dbg !8292
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8295

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !8296
  br label %return, !dbg !8296

if.end6:                                          ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8297
  %call7 = call %struct.dma_pool* @dmam_pool_create(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), %struct.device* %8, i64 4096, i64 4096, i64 0) #9, !dbg !8298
  %9 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !8299
  %sg_tbl_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %9, i32 0, i32 17, !dbg !8300
  store %struct.dma_pool* %call7, %struct.dma_pool** %sg_tbl_pool, align 8, !dbg !8301
  %10 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !8302
  %sg_tbl_pool8 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %10, i32 0, i32 17, !dbg !8304
  %11 = load %struct.dma_pool*, %struct.dma_pool** %sg_tbl_pool8, align 8, !dbg !8304
  %tobool9 = icmp ne %struct.dma_pool* %11, null, !dbg !8302
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !8305

if.then10:                                        ; preds = %if.end6
  store i32 -12, i32* %retval, align 4, !dbg !8306
  br label %return, !dbg !8306

if.end11:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8307
  br label %return, !dbg !8307

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8308
  ret i32 %12, !dbg !8308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mv_port_base(i8* %base, i32 %port) #2 !dbg !8309 {
entry:
  %base.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  %0 = load i8*, i8** %base.addr, align 8, !dbg !8316
  %1 = load i32, i32* %port.addr, align 4, !dbg !8317
  %call = call i8* @mv_hc_base_from_port(i8* %0, i32 %1) #9, !dbg !8318
  %add.ptr = getelementptr i8, i8* %call, i64 8192, !dbg !8319
  %2 = load i32, i32* %port.addr, align 4, !dbg !8320
  %call1 = call i32 @mv_hardport_from_port(i32 %2) #9, !dbg !8321
  %mul = mul i32 %call1, 8192, !dbg !8322
  %idx.ext = zext i32 %mul to i64, !dbg !8323
  %add.ptr2 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !8323
  ret i8* %add.ptr2, !dbg !8324
}

; Function Attrs: noredzone
declare dso_local void @ata_port_pbar_desc(%struct.ata_port*, i32, i64, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_init_host(%struct.ata_host* %host) #2 !dbg !8325 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %rc = alloca i32, align 4
  %n_hc = alloca i32, align 4
  %port = alloca i32, align 4
  %hc = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %hc_mmio = alloca i8*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !8328, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8330, metadata !DIExpression()), !dbg !8331
  store i32 0, i32* %rc, align 4, !dbg !8331
  call void @llvm.dbg.declare(metadata i32* %n_hc, metadata !8332, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.declare(metadata i32* %port, metadata !8334, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.declare(metadata i32* %hc, metadata !8336, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !8338, metadata !DIExpression()), !dbg !8339
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8340
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !8341
  %1 = load i8*, i8** %private_data, align 8, !dbg !8341
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !8340
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !8339
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !8342, metadata !DIExpression()), !dbg !8343
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8344
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 6, !dbg !8345
  %4 = load i8*, i8** %base, align 8, !dbg !8345
  store i8* %4, i8** %mmio, align 8, !dbg !8343
  %5 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8346
  %6 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8347
  %board_idx = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %6, i32 0, i32 1, !dbg !8348
  %7 = load i32, i32* %board_idx, align 4, !dbg !8348
  %call = call i32 @mv_chip_id(%struct.ata_host* %5, i32 %7) #9, !dbg !8349
  store i32 %call, i32* %rc, align 4, !dbg !8350
  %8 = load i32, i32* %rc, align 4, !dbg !8351
  %tobool = icmp ne i32 %8, 0, !dbg !8351
  br i1 %tobool, label %if.then, label %if.end, !dbg !8353

if.then:                                          ; preds = %entry
  br label %done, !dbg !8354

if.end:                                           ; preds = %entry
  %9 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8355
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %9, i32 0, i32 0, !dbg !8355
  %10 = load i32, i32* %hp_flags, align 8, !dbg !8355
  %and = and i32 %10, 2048, !dbg !8355
  %tobool1 = icmp ne i32 %and, 0, !dbg !8355
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !8357

if.then2:                                         ; preds = %if.end
  %11 = load i8*, i8** %mmio, align 8, !dbg !8358
  %add.ptr = getelementptr i8, i8* %11, i64 131104, !dbg !8360
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8361
  %main_irq_cause_addr = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %12, i32 0, i32 7, !dbg !8362
  store i8* %add.ptr, i8** %main_irq_cause_addr, align 8, !dbg !8363
  %13 = load i8*, i8** %mmio, align 8, !dbg !8364
  %add.ptr3 = getelementptr i8, i8* %13, i64 131108, !dbg !8365
  %14 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8366
  %main_irq_mask_addr = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %14, i32 0, i32 8, !dbg !8367
  store i8* %add.ptr3, i8** %main_irq_mask_addr, align 8, !dbg !8368
  br label %if.end8, !dbg !8369

if.else:                                          ; preds = %if.end
  %15 = load i8*, i8** %mmio, align 8, !dbg !8370
  %add.ptr4 = getelementptr i8, i8* %15, i64 7520, !dbg !8372
  %16 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8373
  %main_irq_cause_addr5 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %16, i32 0, i32 7, !dbg !8374
  store i8* %add.ptr4, i8** %main_irq_cause_addr5, align 8, !dbg !8375
  %17 = load i8*, i8** %mmio, align 8, !dbg !8376
  %add.ptr6 = getelementptr i8, i8* %17, i64 7524, !dbg !8377
  %18 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8378
  %main_irq_mask_addr7 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %18, i32 0, i32 8, !dbg !8379
  store i8* %add.ptr6, i8** %main_irq_mask_addr7, align 8, !dbg !8380
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then2
  %19 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8381
  %main_irq_mask_addr9 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %19, i32 0, i32 8, !dbg !8382
  %20 = load i8*, i8** %main_irq_mask_addr9, align 8, !dbg !8382
  %call10 = call i32 @readl(i8* %20) #9, !dbg !8383
  %21 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8384
  %main_irq_mask = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %21, i32 0, i32 2, !dbg !8385
  store i32 %call10, i32* %main_irq_mask, align 8, !dbg !8386
  %22 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8387
  call void @mv_set_main_irq_mask(%struct.ata_host* %22, i32 -1, i32 0) #9, !dbg !8388
  %23 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8389
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %23, i32 0, i32 12, !dbg !8390
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 0, !dbg !8389
  %24 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !8389
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %24, i32 0, i32 3, !dbg !8391
  %25 = load i64, i64* %flags, align 8, !dbg !8391
  %call11 = call i32 @mv_get_hc_count(i64 %25) #9, !dbg !8392
  store i32 %call11, i32* %n_hc, align 4, !dbg !8393
  store i32 0, i32* %port, align 4, !dbg !8394
  br label %for.cond, !dbg !8396

for.cond:                                         ; preds = %for.inc, %if.end8
  %26 = load i32, i32* %port, align 4, !dbg !8397
  %27 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8399
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %27, i32 0, i32 3, !dbg !8400
  %28 = load i32, i32* %n_ports, align 8, !dbg !8400
  %cmp = icmp ult i32 %26, %28, !dbg !8401
  br i1 %cmp, label %for.body, label %for.end, !dbg !8402

for.body:                                         ; preds = %for.cond
  %29 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8403
  %ops = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %29, i32 0, i32 4, !dbg !8405
  %30 = load %struct.mv_hw_ops*, %struct.mv_hw_ops** %ops, align 8, !dbg !8405
  %read_preamp = getelementptr inbounds %struct.mv_hw_ops, %struct.mv_hw_ops* %30, i32 0, i32 2, !dbg !8406
  %31 = load void (%struct.mv_host_priv*, i32, i8*)*, void (%struct.mv_host_priv*, i32, i8*)** %read_preamp, align 8, !dbg !8406
  %tobool12 = icmp ne void (%struct.mv_host_priv*, i32, i8*)* %31, null, !dbg !8403
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !8407

if.then13:                                        ; preds = %for.body
  %32 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8408
  %ops14 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %32, i32 0, i32 4, !dbg !8409
  %33 = load %struct.mv_hw_ops*, %struct.mv_hw_ops** %ops14, align 8, !dbg !8409
  %read_preamp15 = getelementptr inbounds %struct.mv_hw_ops, %struct.mv_hw_ops* %33, i32 0, i32 2, !dbg !8410
  %34 = load void (%struct.mv_host_priv*, i32, i8*)*, void (%struct.mv_host_priv*, i32, i8*)** %read_preamp15, align 8, !dbg !8410
  %35 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8411
  %36 = load i32, i32* %port, align 4, !dbg !8412
  %37 = load i8*, i8** %mmio, align 8, !dbg !8413
  call void %34(%struct.mv_host_priv* %35, i32 %36, i8* %37) #9, !dbg !8408
  br label %if.end16, !dbg !8408

if.end16:                                         ; preds = %if.then13, %for.body
  br label %for.inc, !dbg !8406

for.inc:                                          ; preds = %if.end16
  %38 = load i32, i32* %port, align 4, !dbg !8414
  %inc = add i32 %38, 1, !dbg !8414
  store i32 %inc, i32* %port, align 4, !dbg !8414
  br label %for.cond, !dbg !8415, !llvm.loop !8416

for.end:                                          ; preds = %for.cond
  %39 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8418
  %ops17 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %39, i32 0, i32 4, !dbg !8419
  %40 = load %struct.mv_hw_ops*, %struct.mv_hw_ops** %ops17, align 8, !dbg !8419
  %reset_hc = getelementptr inbounds %struct.mv_hw_ops, %struct.mv_hw_ops* %40, i32 0, i32 3, !dbg !8420
  %41 = load i32 (%struct.mv_host_priv*, i8*, i32)*, i32 (%struct.mv_host_priv*, i8*, i32)** %reset_hc, align 8, !dbg !8420
  %42 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8421
  %43 = load i8*, i8** %mmio, align 8, !dbg !8422
  %44 = load i32, i32* %n_hc, align 4, !dbg !8423
  %call18 = call i32 %41(%struct.mv_host_priv* %42, i8* %43, i32 %44) #9, !dbg !8418
  store i32 %call18, i32* %rc, align 4, !dbg !8424
  %45 = load i32, i32* %rc, align 4, !dbg !8425
  %tobool19 = icmp ne i32 %45, 0, !dbg !8425
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !8427

if.then20:                                        ; preds = %for.end
  br label %done, !dbg !8428

if.end21:                                         ; preds = %for.end
  %46 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8429
  %ops22 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %46, i32 0, i32 4, !dbg !8430
  %47 = load %struct.mv_hw_ops*, %struct.mv_hw_ops** %ops22, align 8, !dbg !8430
  %reset_flash = getelementptr inbounds %struct.mv_hw_ops, %struct.mv_hw_ops* %47, i32 0, i32 4, !dbg !8431
  %48 = load void (%struct.mv_host_priv*, i8*)*, void (%struct.mv_host_priv*, i8*)** %reset_flash, align 8, !dbg !8431
  %49 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8432
  %50 = load i8*, i8** %mmio, align 8, !dbg !8433
  call void %48(%struct.mv_host_priv* %49, i8* %50) #9, !dbg !8429
  %51 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8434
  %ops23 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %51, i32 0, i32 4, !dbg !8435
  %52 = load %struct.mv_hw_ops*, %struct.mv_hw_ops** %ops23, align 8, !dbg !8435
  %reset_bus = getelementptr inbounds %struct.mv_hw_ops, %struct.mv_hw_ops* %52, i32 0, i32 5, !dbg !8436
  %53 = load void (%struct.ata_host*, i8*)*, void (%struct.ata_host*, i8*)** %reset_bus, align 8, !dbg !8436
  %54 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8437
  %55 = load i8*, i8** %mmio, align 8, !dbg !8438
  call void %53(%struct.ata_host* %54, i8* %55) #9, !dbg !8434
  %56 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8439
  %ops24 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %56, i32 0, i32 4, !dbg !8440
  %57 = load %struct.mv_hw_ops*, %struct.mv_hw_ops** %ops24, align 8, !dbg !8440
  %enable_leds = getelementptr inbounds %struct.mv_hw_ops, %struct.mv_hw_ops* %57, i32 0, i32 1, !dbg !8441
  %58 = load void (%struct.mv_host_priv*, i8*)*, void (%struct.mv_host_priv*, i8*)** %enable_leds, align 8, !dbg !8441
  %59 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8442
  %60 = load i8*, i8** %mmio, align 8, !dbg !8443
  call void %58(%struct.mv_host_priv* %59, i8* %60) #9, !dbg !8439
  store i32 0, i32* %port, align 4, !dbg !8444
  br label %for.cond25, !dbg !8446

for.cond25:                                       ; preds = %for.inc32, %if.end21
  %61 = load i32, i32* %port, align 4, !dbg !8447
  %62 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8449
  %n_ports26 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %62, i32 0, i32 3, !dbg !8450
  %63 = load i32, i32* %n_ports26, align 8, !dbg !8450
  %cmp27 = icmp ult i32 %61, %63, !dbg !8451
  br i1 %cmp27, label %for.body28, label %for.end34, !dbg !8452

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8453, metadata !DIExpression()), !dbg !8455
  %64 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8456
  %ports29 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %64, i32 0, i32 12, !dbg !8457
  %65 = load i32, i32* %port, align 4, !dbg !8458
  %idxprom = sext i32 %65 to i64, !dbg !8456
  %arrayidx30 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports29, i64 0, i64 %idxprom, !dbg !8456
  %66 = load %struct.ata_port*, %struct.ata_port** %arrayidx30, align 8, !dbg !8456
  store %struct.ata_port* %66, %struct.ata_port** %ap, align 8, !dbg !8455
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !8459, metadata !DIExpression()), !dbg !8460
  %67 = load i8*, i8** %mmio, align 8, !dbg !8461
  %68 = load i32, i32* %port, align 4, !dbg !8462
  %call31 = call i8* @mv_port_base(i8* %67, i32 %68) #9, !dbg !8463
  store i8* %call31, i8** %port_mmio, align 8, !dbg !8460
  %69 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8464
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %69, i32 0, i32 8, !dbg !8465
  %70 = load i8*, i8** %port_mmio, align 8, !dbg !8466
  call void @mv_port_init(%struct.ata_ioports* %ioaddr, i8* %70) #9, !dbg !8467
  br label %for.inc32, !dbg !8468

for.inc32:                                        ; preds = %for.body28
  %71 = load i32, i32* %port, align 4, !dbg !8469
  %inc33 = add i32 %71, 1, !dbg !8469
  store i32 %inc33, i32* %port, align 4, !dbg !8469
  br label %for.cond25, !dbg !8470, !llvm.loop !8471

for.end34:                                        ; preds = %for.cond25
  store i32 0, i32* %hc, align 4, !dbg !8473
  br label %for.cond35, !dbg !8475

for.cond35:                                       ; preds = %for.inc40, %for.end34
  %72 = load i32, i32* %hc, align 4, !dbg !8476
  %73 = load i32, i32* %n_hc, align 4, !dbg !8478
  %cmp36 = icmp slt i32 %72, %73, !dbg !8479
  br i1 %cmp36, label %for.body37, label %for.end42, !dbg !8480

for.body37:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !8481, metadata !DIExpression()), !dbg !8483
  %74 = load i8*, i8** %mmio, align 8, !dbg !8484
  %75 = load i32, i32* %hc, align 4, !dbg !8485
  %call38 = call i8* @mv_hc_base(i8* %74, i32 %75) #9, !dbg !8486
  store i8* %call38, i8** %hc_mmio, align 8, !dbg !8483
  %76 = load i8*, i8** %hc_mmio, align 8, !dbg !8487
  %add.ptr39 = getelementptr i8, i8* %76, i64 20, !dbg !8488
  call void @writelfl(i64 0, i8* %add.ptr39) #9, !dbg !8489
  br label %for.inc40, !dbg !8490

for.inc40:                                        ; preds = %for.body37
  %77 = load i32, i32* %hc, align 4, !dbg !8491
  %inc41 = add i32 %77, 1, !dbg !8491
  store i32 %inc41, i32* %hc, align 4, !dbg !8491
  br label %for.cond35, !dbg !8492, !llvm.loop !8493

for.end42:                                        ; preds = %for.cond35
  %78 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8495
  %hp_flags43 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %78, i32 0, i32 0, !dbg !8495
  %79 = load i32, i32* %hp_flags43, align 8, !dbg !8495
  %and44 = and i32 %79, 2048, !dbg !8495
  %tobool45 = icmp ne i32 %and44, 0, !dbg !8495
  br i1 %tobool45, label %if.end50, label %if.then46, !dbg !8497

if.then46:                                        ; preds = %for.end42
  %80 = load i8*, i8** %mmio, align 8, !dbg !8498
  %81 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8500
  %irq_cause_offset = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %81, i32 0, i32 9, !dbg !8501
  %82 = load i32, i32* %irq_cause_offset, align 8, !dbg !8501
  %idx.ext = zext i32 %82 to i64, !dbg !8502
  %add.ptr47 = getelementptr i8, i8* %80, i64 %idx.ext, !dbg !8502
  call void @writelfl(i64 0, i8* %add.ptr47) #9, !dbg !8503
  %83 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8504
  %unmask_all_irqs = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %83, i32 0, i32 11, !dbg !8505
  %84 = load i32, i32* %unmask_all_irqs, align 8, !dbg !8505
  %conv = zext i32 %84 to i64, !dbg !8504
  %85 = load i8*, i8** %mmio, align 8, !dbg !8506
  %86 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8507
  %irq_mask_offset = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %86, i32 0, i32 10, !dbg !8508
  %87 = load i32, i32* %irq_mask_offset, align 4, !dbg !8508
  %idx.ext48 = zext i32 %87 to i64, !dbg !8509
  %add.ptr49 = getelementptr i8, i8* %85, i64 %idx.ext48, !dbg !8509
  call void @writelfl(i64 %conv, i8* %add.ptr49) #9, !dbg !8510
  br label %if.end50, !dbg !8511

if.end50:                                         ; preds = %if.then46, %for.end42
  %88 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8512
  call void @mv_set_main_irq_mask(%struct.ata_host* %88, i32 0, i32 262144) #9, !dbg !8513
  %89 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8514
  %90 = load i32, i32* @irq_coalescing_io_count, align 4, !dbg !8515
  %91 = load i32, i32* @irq_coalescing_usecs, align 4, !dbg !8516
  call void @mv_set_irq_coalescing(%struct.ata_host* %89, i32 %90, i32 %91) #9, !dbg !8517
  br label %done, !dbg !8517

done:                                             ; preds = %if.end50, %if.then20, %if.then
  call void @llvm.dbg.label(metadata !8518), !dbg !8519
  %92 = load i32, i32* %rc, align 4, !dbg !8520
  ret i32 %92, !dbg !8521
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msi(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_dump_pci_cfg(%struct.pci_dev* %pdev, i32 %bytes) #2 !dbg !8522 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_print_info(%struct.ata_host* %host) #2 !dbg !8530 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %scc = alloca i8, align 1
  %scc_s = alloca i8*, align 8
  %gen = alloca i8*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !8533, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8535, metadata !DIExpression()), !dbg !8537
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8537
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !8537
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8537
  %2 = bitcast %struct.device* %1 to i8*, !dbg !8537
  store i8* %2, i8** %__mptr, align 8, !dbg !8537
  br label %do.body, !dbg !8537

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8538

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8537
  %add.ptr = getelementptr i8, i8* %3, i64 -176, !dbg !8537
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !8537
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !8538
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !8537
  store %struct.pci_dev* %5, %struct.pci_dev** %pdev, align 8, !dbg !8534
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !8540, metadata !DIExpression()), !dbg !8541
  %6 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8542
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %6, i32 0, i32 5, !dbg !8543
  %7 = load i8*, i8** %private_data, align 8, !dbg !8543
  %8 = bitcast i8* %7 to %struct.mv_host_priv*, !dbg !8542
  store %struct.mv_host_priv* %8, %struct.mv_host_priv** %hpriv, align 8, !dbg !8541
  call void @llvm.dbg.declare(metadata i8* %scc, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.declare(metadata i8** %scc_s, metadata !8546, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.declare(metadata i8** %gen, metadata !8548, metadata !DIExpression()), !dbg !8549
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8550
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %9, i32 10, i8* %scc) #9, !dbg !8551
  %10 = load i8, i8* %scc, align 1, !dbg !8552
  %conv = zext i8 %10 to i32, !dbg !8552
  %cmp = icmp eq i32 %conv, 0, !dbg !8554
  br i1 %cmp, label %if.then, label %if.else, !dbg !8555

if.then:                                          ; preds = %do.end
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i8** %scc_s, align 8, !dbg !8556
  br label %if.end7, !dbg !8557

if.else:                                          ; preds = %do.end
  %11 = load i8, i8* %scc, align 1, !dbg !8558
  %conv2 = zext i8 %11 to i32, !dbg !8558
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !8560
  br i1 %cmp3, label %if.then5, label %if.else6, !dbg !8561

if.then5:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i8** %scc_s, align 8, !dbg !8562
  br label %if.end, !dbg !8563

if.else6:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8** %scc_s, align 8, !dbg !8564
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8565
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %12, i32 0, i32 0, !dbg !8565
  %13 = load i32, i32* %hp_flags, align 8, !dbg !8565
  %and = and i32 %13, 64, !dbg !8565
  %tobool = icmp ne i32 %and, 0, !dbg !8565
  br i1 %tobool, label %if.then8, label %if.else9, !dbg !8567

if.then8:                                         ; preds = %if.end7
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i8** %gen, align 8, !dbg !8568
  br label %if.end22, !dbg !8569

if.else9:                                         ; preds = %if.end7
  %14 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8570
  %hp_flags10 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %14, i32 0, i32 0, !dbg !8570
  %15 = load i32, i32* %hp_flags10, align 8, !dbg !8570
  %and11 = and i32 %15, 128, !dbg !8570
  %tobool12 = icmp ne i32 %and11, 0, !dbg !8570
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !8572

if.then13:                                        ; preds = %if.else9
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i8** %gen, align 8, !dbg !8573
  br label %if.end21, !dbg !8574

if.else14:                                        ; preds = %if.else9
  %16 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8575
  %hp_flags15 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %16, i32 0, i32 0, !dbg !8575
  %17 = load i32, i32* %hp_flags15, align 8, !dbg !8575
  %and16 = and i32 %17, 256, !dbg !8575
  %tobool17 = icmp ne i32 %and16, 0, !dbg !8575
  br i1 %tobool17, label %if.then18, label %if.else19, !dbg !8577

if.then18:                                        ; preds = %if.else14
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i8** %gen, align 8, !dbg !8578
  br label %if.end20, !dbg !8579

if.else19:                                        ; preds = %if.else14
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8** %gen, align 8, !dbg !8580
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then18
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then13
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then8
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8581
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !8581
  %19 = load i8*, i8** %gen, align 8, !dbg !8581
  %20 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !8581
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %20, i32 0, i32 3, !dbg !8581
  %21 = load i32, i32* %n_ports, align 8, !dbg !8581
  %22 = load i8*, i8** %scc_s, align 8, !dbg !8581
  %23 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8581
  %hp_flags24 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %23, i32 0, i32 0, !dbg !8581
  %24 = load i32, i32* %hp_flags24, align 8, !dbg !8581
  %and25 = and i32 1, %24, !dbg !8581
  %tobool26 = icmp ne i32 %and25, 0, !dbg !8581
  %25 = zext i1 %tobool26 to i64, !dbg !8581
  %cond = select i1 %tobool26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0), !dbg !8581
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev23, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32, i64 0, i64 0), i8* %19, i32 32, i32 %21, i8* %22, i8* %cond) #10, !dbg !8581
  ret void, !dbg !8582
}

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_try_set_mwi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_host_activate(%struct.ata_host*, i32, i32 (i32, i8*)*, i64, %struct.scsi_host_template*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_interrupt(i32 %irq, i8* %dev_instance) #2 !dbg !8583 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !8584, metadata !DIExpression()), !dbg !8589
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8591, metadata !DIExpression()), !dbg !8593
  %irq.addr = alloca i32, align 4
  %dev_instance.addr = alloca i8*, align 8
  %host = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %handled = alloca i32, align 4
  %using_msi = alloca i32, align 4
  %main_irq_cause = alloca i32, align 4
  %pending_irqs = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8595, metadata !DIExpression()), !dbg !8596
  store i8* %dev_instance, i8** %dev_instance.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_instance.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !8599, metadata !DIExpression()), !dbg !8600
  %0 = load i8*, i8** %dev_instance.addr, align 8, !dbg !8601
  %1 = bitcast i8* %0 to %struct.ata_host*, !dbg !8601
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !8600
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !8602, metadata !DIExpression()), !dbg !8603
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8604
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 5, !dbg !8605
  %3 = load i8*, i8** %private_data, align 8, !dbg !8605
  %4 = bitcast i8* %3 to %struct.mv_host_priv*, !dbg !8604
  store %struct.mv_host_priv* %4, %struct.mv_host_priv** %hpriv, align 8, !dbg !8603
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !8606, metadata !DIExpression()), !dbg !8607
  store i32 0, i32* %handled, align 4, !dbg !8607
  call void @llvm.dbg.declare(metadata i32* %using_msi, metadata !8608, metadata !DIExpression()), !dbg !8609
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8610
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 0, !dbg !8611
  %6 = load i32, i32* %hp_flags, align 8, !dbg !8611
  %and = and i32 %6, 1, !dbg !8612
  store i32 %and, i32* %using_msi, align 4, !dbg !8609
  call void @llvm.dbg.declare(metadata i32* %main_irq_cause, metadata !8613, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.declare(metadata i32* %pending_irqs, metadata !8615, metadata !DIExpression()), !dbg !8616
  %7 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8617
  %lock = getelementptr inbounds %struct.ata_host, %struct.ata_host* %7, i32 0, i32 0, !dbg !8618
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8619, !srcloc !8621
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8622
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8622
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !8622
  %10 = load i32, i32* %using_msi, align 4, !dbg !8624
  %tobool = icmp ne i32 %10, 0, !dbg !8624
  br i1 %tobool, label %if.then, label %if.end, !dbg !8626

if.then:                                          ; preds = %entry
  %11 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8627
  call void @mv_write_main_irq_mask(i32 0, %struct.mv_host_priv* %11) #9, !dbg !8628
  br label %if.end, !dbg !8628

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8629
  %main_irq_cause_addr = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %12, i32 0, i32 7, !dbg !8630
  %13 = load i8*, i8** %main_irq_cause_addr, align 8, !dbg !8630
  %call = call i32 @readl(i8* %13) #9, !dbg !8631
  store i32 %call, i32* %main_irq_cause, align 4, !dbg !8632
  %14 = load i32, i32* %main_irq_cause, align 4, !dbg !8633
  %15 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8634
  %main_irq_mask = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %15, i32 0, i32 2, !dbg !8635
  %16 = load i32, i32* %main_irq_mask, align 8, !dbg !8635
  %and1 = and i32 %14, %16, !dbg !8636
  store i32 %and1, i32* %pending_irqs, align 4, !dbg !8637
  %17 = load i32, i32* %pending_irqs, align 4, !dbg !8638
  %tobool2 = icmp ne i32 %17, 0, !dbg !8638
  br i1 %tobool2, label %land.lhs.true, label %if.end16, !dbg !8640

land.lhs.true:                                    ; preds = %if.end
  %18 = load i32, i32* %main_irq_cause, align 4, !dbg !8641
  %cmp = icmp ne i32 %18, -1, !dbg !8642
  br i1 %cmp, label %if.then3, label %if.end16, !dbg !8643

if.then3:                                         ; preds = %land.lhs.true
  %19 = load i32, i32* %pending_irqs, align 4, !dbg !8644
  %and4 = and i32 %19, 262144, !dbg !8644
  %tobool5 = icmp ne i32 %and4, 0, !dbg !8644
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !8644

land.rhs:                                         ; preds = %if.then3
  %20 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8644
  %hp_flags6 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %20, i32 0, i32 0, !dbg !8644
  %21 = load i32, i32* %hp_flags6, align 8, !dbg !8644
  %and7 = and i32 %21, 2048, !dbg !8644
  %tobool8 = icmp ne i32 %and7, 0, !dbg !8644
  %lnot = xor i1 %tobool8, true, !dbg !8644
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then3
  %22 = phi i1 [ false, %if.then3 ], [ %lnot, %land.rhs ], !dbg !8647
  %lnot9 = xor i1 %22, true, !dbg !8644
  %lnot10 = xor i1 %lnot9, true, !dbg !8644
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !8644
  %conv = sext i32 %lnot.ext to i64, !dbg !8644
  %tobool11 = icmp ne i64 %conv, 0, !dbg !8644
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !8648

if.then12:                                        ; preds = %land.end
  %23 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8649
  %24 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8650
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %24, i32 0, i32 6, !dbg !8651
  %25 = load i8*, i8** %base, align 8, !dbg !8651
  %call13 = call i32 @mv_pci_error(%struct.ata_host* %23, i8* %25) #9, !dbg !8652
  store i32 %call13, i32* %handled, align 4, !dbg !8653
  br label %if.end15, !dbg !8654

if.else:                                          ; preds = %land.end
  %26 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8655
  %27 = load i32, i32* %pending_irqs, align 4, !dbg !8656
  %call14 = call i32 @mv_host_intr(%struct.ata_host* %26, i32 %27) #9, !dbg !8657
  store i32 %call14, i32* %handled, align 4, !dbg !8658
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  br label %if.end16, !dbg !8659

if.end16:                                         ; preds = %if.end15, %land.lhs.true, %if.end
  %28 = load i32, i32* %using_msi, align 4, !dbg !8660
  %tobool17 = icmp ne i32 %28, 0, !dbg !8660
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !8662

if.then18:                                        ; preds = %if.end16
  %29 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8663
  %main_irq_mask19 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %29, i32 0, i32 2, !dbg !8664
  %30 = load i32, i32* %main_irq_mask19, align 8, !dbg !8664
  %31 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !8665
  call void @mv_write_main_irq_mask(i32 %30, %struct.mv_host_priv* %31) #9, !dbg !8666
  br label %if.end20, !dbg !8666

if.end20:                                         ; preds = %if.then18, %if.end16
  %32 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !8667
  %lock21 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %32, i32 0, i32 0, !dbg !8668
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i23, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8669, !srcloc !8671
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !8672
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !8672
  %rlock.i24 = bitcast %union.anon.2* %34 to %struct.raw_spinlock*, !dbg !8672
  %35 = load i32, i32* %handled, align 4, !dbg !8674
  %tobool22 = icmp ne i32 %35, 0, !dbg !8674
  %36 = zext i1 %tobool22 to i64, !dbg !8674
  %cond = select i1 %tobool22, i32 1, i32 0, !dbg !8674
  ret i32 %cond, !dbg !8675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_qc_defer(%struct.ata_queued_cmd* %qc) #2 !dbg !8676 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %link = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8677, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !8679, metadata !DIExpression()), !dbg !8680
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8681
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !8682
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8682
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 0, !dbg !8683
  %2 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !8683
  store %struct.ata_link* %2, %struct.ata_link** %link, align 8, !dbg !8680
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8684, metadata !DIExpression()), !dbg !8685
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8686
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !8687
  %4 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !8687
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !8685
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !8688, metadata !DIExpression()), !dbg !8734
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8735
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 49, !dbg !8736
  %6 = load i8*, i8** %private_data, align 32, !dbg !8736
  %7 = bitcast i8* %6 to %struct.mv_port_priv*, !dbg !8735
  store %struct.mv_port_priv* %7, %struct.mv_port_priv** %pp, align 8, !dbg !8734
  %8 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8737
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %8, i32 0, i32 8, !dbg !8739
  %9 = load i32, i32* %pp_flags, align 8, !dbg !8739
  %and = and i32 %9, 8, !dbg !8740
  %tobool = icmp ne i32 %and, 0, !dbg !8740
  br i1 %tobool, label %if.then, label %if.end, !dbg !8741

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8742
  br label %return, !dbg !8742

if.end:                                           ; preds = %entry
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8743
  %excl_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 29, !dbg !8743
  %11 = load %struct.ata_link*, %struct.ata_link** %excl_link, align 8, !dbg !8743
  %tobool3 = icmp ne %struct.ata_link* %11, null, !dbg !8743
  %lnot = xor i1 %tobool3, true, !dbg !8743
  %lnot4 = xor i1 %lnot, true, !dbg !8743
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8743
  %conv = sext i32 %lnot.ext to i64, !dbg !8743
  %tobool5 = icmp ne i64 %conv, 0, !dbg !8743
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !8745

if.then6:                                         ; preds = %if.end
  %12 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8746
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8749
  %excl_link7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 29, !dbg !8750
  %14 = load %struct.ata_link*, %struct.ata_link** %excl_link7, align 8, !dbg !8750
  %cmp = icmp eq %struct.ata_link* %12, %14, !dbg !8751
  br i1 %cmp, label %if.then9, label %if.else, !dbg !8752

if.then9:                                         ; preds = %if.then6
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8753
  %nr_active_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 22, !dbg !8756
  %16 = load i32, i32* %nr_active_links, align 16, !dbg !8756
  %tobool10 = icmp ne i32 %16, 0, !dbg !8753
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !8757

if.then11:                                        ; preds = %if.then9
  store i32 2, i32* %retval, align 4, !dbg !8758
  br label %return, !dbg !8758

if.end12:                                         ; preds = %if.then9
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8759
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %17, i32 0, i32 6, !dbg !8760
  %18 = load i64, i64* %flags, align 8, !dbg !8761
  %or = or i64 %18, 32, !dbg !8761
  store i64 %or, i64* %flags, align 8, !dbg !8761
  store i32 0, i32* %retval, align 4, !dbg !8762
  br label %return, !dbg !8762

if.else:                                          ; preds = %if.then6
  store i32 2, i32* %retval, align 4, !dbg !8763
  br label %return, !dbg !8763

if.end13:                                         ; preds = %if.end
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8764
  %nr_active_links14 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 22, !dbg !8766
  %20 = load i32, i32* %nr_active_links14, align 16, !dbg !8766
  %cmp15 = icmp eq i32 %20, 0, !dbg !8767
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8768

if.then17:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !8769
  br label %return, !dbg !8769

if.end18:                                         ; preds = %if.end13
  %21 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8770
  %pp_flags19 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %21, i32 0, i32 8, !dbg !8772
  %22 = load i32, i32* %pp_flags19, align 8, !dbg !8772
  %and20 = and i32 %22, 1, !dbg !8773
  %tobool21 = icmp ne i32 %and20, 0, !dbg !8773
  br i1 %tobool21, label %land.lhs.true, label %if.end29, !dbg !8774

land.lhs.true:                                    ; preds = %if.end18
  %23 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8775
  %pp_flags22 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %23, i32 0, i32 8, !dbg !8776
  %24 = load i32, i32* %pp_flags22, align 8, !dbg !8776
  %and23 = and i32 %24, 2, !dbg !8777
  %tobool24 = icmp ne i32 %and23, 0, !dbg !8777
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !8778

if.then25:                                        ; preds = %land.lhs.true
  %25 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8779
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %25, i32 0, i32 4, !dbg !8782
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !8783
  %26 = load i8, i8* %protocol, align 8, !dbg !8783
  %call = call zeroext i1 @ata_is_ncq(i8 zeroext %26) #9, !dbg !8784
  br i1 %call, label %if.then26, label %if.else27, !dbg !8785

if.then26:                                        ; preds = %if.then25
  store i32 0, i32* %retval, align 4, !dbg !8786
  br label %return, !dbg !8786

if.else27:                                        ; preds = %if.then25
  %27 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8787
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8789
  %excl_link28 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 29, !dbg !8790
  store %struct.ata_link* %27, %struct.ata_link** %excl_link28, align 8, !dbg !8791
  store i32 2, i32* %retval, align 4, !dbg !8792
  br label %return, !dbg !8792

if.end29:                                         ; preds = %land.lhs.true, %if.end18
  store i32 2, i32* %retval, align 4, !dbg !8793
  br label %return, !dbg !8793

return:                                           ; preds = %if.end29, %if.else27, %if.then26, %if.then17, %if.else, %if.end12, %if.then11, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !8794
  ret i32 %29, !dbg !8794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_qc_prep(%struct.ata_queued_cmd* %qc) #2 !dbg !8795 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %cw = alloca i16*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %flags = alloca i16, align 2
  %in_index = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8798, metadata !DIExpression()), !dbg !8799
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8800
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !8801
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !8801
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !8799
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !8802, metadata !DIExpression()), !dbg !8803
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8804
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 49, !dbg !8805
  %3 = load i8*, i8** %private_data, align 32, !dbg !8805
  %4 = bitcast i8* %3 to %struct.mv_port_priv*, !dbg !8804
  store %struct.mv_port_priv* %4, %struct.mv_port_priv** %pp, align 8, !dbg !8803
  call void @llvm.dbg.declare(metadata i16** %cw, metadata !8806, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !8809, metadata !DIExpression()), !dbg !8810
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8811
  %tf2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 4, !dbg !8812
  store %struct.ata_taskfile* %tf2, %struct.ata_taskfile** %tf, align 8, !dbg !8810
  call void @llvm.dbg.declare(metadata i16* %flags, metadata !8813, metadata !DIExpression()), !dbg !8814
  store i16 0, i16* %flags, align 2, !dbg !8814
  call void @llvm.dbg.declare(metadata i32* %in_index, metadata !8815, metadata !DIExpression()), !dbg !8816
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8817
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 1, !dbg !8818
  %7 = load i8, i8* %protocol, align 8, !dbg !8818
  %conv = zext i8 %7 to i32, !dbg !8817
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 6, label %sw.bb5
    i32 1, label %sw.bb6
  ], !dbg !8819

sw.bb:                                            ; preds = %entry
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8820
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 14, !dbg !8823
  %9 = load i8, i8* %command, align 1, !dbg !8823
  %conv3 = zext i8 %9 to i32, !dbg !8820
  %cmp = icmp eq i32 %conv3, 6, !dbg !8824
  br i1 %cmp, label %if.then, label %if.end, !dbg !8825

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !8826
  br label %return, !dbg !8826

if.end:                                           ; preds = %sw.bb
  br label %sw.bb5, !dbg !8827

sw.bb5:                                           ; preds = %entry, %if.end
  br label %sw.epilog, !dbg !8828

sw.bb6:                                           ; preds = %entry
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8829
  call void @mv_rw_multi_errata_sata24(%struct.ata_queued_cmd* %10) #9, !dbg !8830
  store i32 0, i32* %retval, align 4, !dbg !8831
  br label %return, !dbg !8831

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8832
  br label %return, !dbg !8832

sw.epilog:                                        ; preds = %sw.bb5
  %11 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8833
  %flags7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %11, i32 0, i32 0, !dbg !8835
  %12 = load i64, i64* %flags7, align 8, !dbg !8835
  %and = and i64 %12, 8, !dbg !8836
  %tobool = icmp ne i64 %and, 0, !dbg !8836
  br i1 %tobool, label %if.end11, label %if.then8, !dbg !8837

if.then8:                                         ; preds = %sw.epilog
  %13 = load i16, i16* %flags, align 2, !dbg !8838
  %conv9 = zext i16 %13 to i32, !dbg !8838
  %or = or i32 %conv9, 1, !dbg !8838
  %conv10 = trunc i32 %or to i16, !dbg !8838
  store i16 %conv10, i16* %flags, align 2, !dbg !8838
  br label %if.end11, !dbg !8839

if.end11:                                         ; preds = %if.then8, %sw.epilog
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8840, metadata !DIExpression()), !dbg !8842
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8842
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 8, !dbg !8842
  %15 = load i32, i32* %hw_tag, align 4, !dbg !8842
  %cmp12 = icmp ule i32 32, %15, !dbg !8842
  %lnot = xor i1 %cmp12, true, !dbg !8842
  %lnot14 = xor i1 %lnot, true, !dbg !8842
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !8842
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8842
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !8843
  %tobool15 = icmp ne i32 %16, 0, !dbg !8843
  %lnot16 = xor i1 %tobool15, true, !dbg !8843
  %lnot18 = xor i1 %lnot16, true, !dbg !8843
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8843
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8843
  %tobool21 = icmp ne i64 %conv20, 0, !dbg !8843
  br i1 %tobool21, label %if.then22, label %if.end29, !dbg !8842

if.then22:                                        ; preds = %if.end11
  br label %do.body, !dbg !8843

do.body:                                          ; preds = %if.then22
  br label %do.body23, !dbg !8845

do.body23:                                        ; preds = %do.body
  br label %do.end, !dbg !8847

do.end:                                           ; preds = %do.body23
  br label %do.body24, !dbg !8845

do.body24:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2061, i32 2305, i64 12) #6, !dbg !8849, !srcloc !8851
  br label %do.end25, !dbg !8849

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 316) #6, !dbg !8852, !srcloc !8854
  br label %do.body26, !dbg !8845

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !8855

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !8845

do.end28:                                         ; preds = %do.end27
  br label %if.end29, !dbg !8845

if.end29:                                         ; preds = %do.end28, %if.end11
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !8842
  %tobool30 = icmp ne i32 %17, 0, !dbg !8842
  %lnot31 = xor i1 %tobool30, true, !dbg !8842
  %lnot33 = xor i1 %lnot31, true, !dbg !8842
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !8842
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !8842
  store i64 %conv35, i64* %tmp, align 8, !dbg !8843
  %18 = load i64, i64* %tmp, align 8, !dbg !8842
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8857
  %hw_tag36 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 8, !dbg !8858
  %20 = load i32, i32* %hw_tag36, align 4, !dbg !8858
  %shl = shl i32 %20, 1, !dbg !8859
  %21 = load i16, i16* %flags, align 2, !dbg !8860
  %conv37 = zext i16 %21 to i32, !dbg !8860
  %or38 = or i32 %conv37, %shl, !dbg !8860
  %conv39 = trunc i32 %or38 to i16, !dbg !8860
  store i16 %conv39, i16* %flags, align 2, !dbg !8860
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8861
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %22, i32 0, i32 1, !dbg !8862
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8862
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %23, i32 0, i32 0, !dbg !8863
  %24 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !8863
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %24, i32 0, i32 1, !dbg !8864
  %25 = load i32, i32* %pmp, align 8, !dbg !8864
  %and40 = and i32 %25, 15, !dbg !8865
  %shl41 = shl i32 %and40, 12, !dbg !8866
  %26 = load i16, i16* %flags, align 2, !dbg !8867
  %conv42 = zext i16 %26 to i32, !dbg !8867
  %or43 = or i32 %conv42, %shl41, !dbg !8867
  %conv44 = trunc i32 %or43 to i16, !dbg !8867
  store i16 %conv44, i16* %flags, align 2, !dbg !8867
  %27 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8868
  %req_idx = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %27, i32 0, i32 6, !dbg !8869
  %28 = load i32, i32* %req_idx, align 8, !dbg !8869
  store i32 %28, i32* %in_index, align 4, !dbg !8870
  %29 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8871
  %sg_tbl_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %29, i32 0, i32 5, !dbg !8871
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8871
  %hw_tag45 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %30, i32 0, i32 8, !dbg !8871
  %31 = load i32, i32* %hw_tag45, align 4, !dbg !8871
  %idxprom = zext i32 %31 to i64, !dbg !8871
  %arrayidx = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma, i64 0, i64 %idxprom, !dbg !8871
  %32 = load i64, i64* %arrayidx, align 8, !dbg !8871
  %and46 = and i64 %32, 4294967295, !dbg !8871
  %conv47 = trunc i64 %and46 to i32, !dbg !8871
  %33 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8872
  %crqb = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %33, i32 0, i32 0, !dbg !8873
  %34 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb, align 8, !dbg !8873
  %35 = load i32, i32* %in_index, align 4, !dbg !8874
  %idxprom48 = zext i32 %35 to i64, !dbg !8872
  %arrayidx49 = getelementptr %struct.mv_crqb, %struct.mv_crqb* %34, i64 %idxprom48, !dbg !8872
  %sg_addr = getelementptr inbounds %struct.mv_crqb, %struct.mv_crqb* %arrayidx49, i32 0, i32 0, !dbg !8875
  store i32 %conv47, i32* %sg_addr, align 4, !dbg !8876
  %36 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8877
  %sg_tbl_dma50 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %36, i32 0, i32 5, !dbg !8877
  %37 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8877
  %hw_tag51 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %37, i32 0, i32 8, !dbg !8877
  %38 = load i32, i32* %hw_tag51, align 4, !dbg !8877
  %idxprom52 = zext i32 %38 to i64, !dbg !8877
  %arrayidx53 = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma50, i64 0, i64 %idxprom52, !dbg !8877
  %39 = load i64, i64* %arrayidx53, align 8, !dbg !8877
  %shr = lshr i64 %39, 16, !dbg !8877
  %shr54 = lshr i64 %shr, 16, !dbg !8877
  %conv55 = trunc i64 %shr54 to i32, !dbg !8877
  %40 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8878
  %crqb56 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %40, i32 0, i32 0, !dbg !8879
  %41 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb56, align 8, !dbg !8879
  %42 = load i32, i32* %in_index, align 4, !dbg !8880
  %idxprom57 = zext i32 %42 to i64, !dbg !8878
  %arrayidx58 = getelementptr %struct.mv_crqb, %struct.mv_crqb* %41, i64 %idxprom57, !dbg !8878
  %sg_addr_hi = getelementptr inbounds %struct.mv_crqb, %struct.mv_crqb* %arrayidx58, i32 0, i32 1, !dbg !8881
  store i32 %conv55, i32* %sg_addr_hi, align 4, !dbg !8882
  %43 = load i16, i16* %flags, align 2, !dbg !8883
  %44 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8884
  %crqb59 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %44, i32 0, i32 0, !dbg !8885
  %45 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb59, align 8, !dbg !8885
  %46 = load i32, i32* %in_index, align 4, !dbg !8886
  %idxprom60 = zext i32 %46 to i64, !dbg !8884
  %arrayidx61 = getelementptr %struct.mv_crqb, %struct.mv_crqb* %45, i64 %idxprom60, !dbg !8884
  %ctrl_flags = getelementptr inbounds %struct.mv_crqb, %struct.mv_crqb* %arrayidx61, i32 0, i32 2, !dbg !8887
  store i16 %43, i16* %ctrl_flags, align 4, !dbg !8888
  %47 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8889
  %crqb62 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %47, i32 0, i32 0, !dbg !8890
  %48 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb62, align 8, !dbg !8890
  %49 = load i32, i32* %in_index, align 4, !dbg !8891
  %idxprom63 = zext i32 %49 to i64, !dbg !8889
  %arrayidx64 = getelementptr %struct.mv_crqb, %struct.mv_crqb* %48, i64 %idxprom63, !dbg !8889
  %ata_cmd = getelementptr inbounds %struct.mv_crqb, %struct.mv_crqb* %arrayidx64, i32 0, i32 3, !dbg !8892
  %arrayidx65 = getelementptr [11 x i16], [11 x i16]* %ata_cmd, i64 0, i64 0, !dbg !8889
  store i16* %arrayidx65, i16** %cw, align 8, !dbg !8893
  %50 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8894
  %command66 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %50, i32 0, i32 14, !dbg !8895
  %51 = load i8, i8* %command66, align 1, !dbg !8895
  %conv67 = zext i8 %51 to i32, !dbg !8894
  switch i32 %conv67, label %sw.default72 [
    i32 200, label %sw.bb68
    i32 37, label %sw.bb68
    i32 202, label %sw.bb68
    i32 53, label %sw.bb68
    i32 61, label %sw.bb68
    i32 96, label %sw.bb69
    i32 97, label %sw.bb69
  ], !dbg !8896

sw.bb68:                                          ; preds = %if.end29, %if.end29, %if.end29, %if.end29, %if.end29
  %52 = load i16*, i16** %cw, align 8, !dbg !8897
  %incdec.ptr = getelementptr i16, i16* %52, i32 1, !dbg !8897
  store i16* %incdec.ptr, i16** %cw, align 8, !dbg !8897
  %53 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8899
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %53, i32 0, i32 4, !dbg !8900
  %54 = load i8, i8* %hob_nsect, align 1, !dbg !8900
  call void @mv_crqb_pack_cmd(i16* %52, i8 zeroext %54, i8 zeroext 2, i32 0) #9, !dbg !8901
  br label %sw.epilog75, !dbg !8902

sw.bb69:                                          ; preds = %if.end29, %if.end29
  %55 = load i16*, i16** %cw, align 8, !dbg !8903
  %incdec.ptr70 = getelementptr i16, i16* %55, i32 1, !dbg !8903
  store i16* %incdec.ptr70, i16** %cw, align 8, !dbg !8903
  %56 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8904
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %56, i32 0, i32 3, !dbg !8905
  %57 = load i8, i8* %hob_feature, align 2, !dbg !8905
  call void @mv_crqb_pack_cmd(i16* %55, i8 zeroext %57, i8 zeroext 1, i32 0) #9, !dbg !8906
  %58 = load i16*, i16** %cw, align 8, !dbg !8907
  %incdec.ptr71 = getelementptr i16, i16* %58, i32 1, !dbg !8907
  store i16* %incdec.ptr71, i16** %cw, align 8, !dbg !8907
  %59 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8908
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %59, i32 0, i32 8, !dbg !8909
  %60 = load i8, i8* %feature, align 1, !dbg !8909
  call void @mv_crqb_pack_cmd(i16* %58, i8 zeroext %60, i8 zeroext 1, i32 0) #9, !dbg !8910
  br label %sw.epilog75, !dbg !8911

sw.default72:                                     ; preds = %if.end29
  %61 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8912
  %62 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8912
  %command73 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %62, i32 0, i32 14, !dbg !8912
  %63 = load i8, i8* %command73, align 1, !dbg !8912
  %conv74 = zext i8 %63 to i32, !dbg !8912
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.mv_qc_prep, i64 0, i64 0), i32 %conv74) #9, !dbg !8912
  store i32 128, i32* %retval, align 4, !dbg !8913
  br label %return, !dbg !8913

sw.epilog75:                                      ; preds = %sw.bb69, %sw.bb68
  %64 = load i16*, i16** %cw, align 8, !dbg !8914
  %incdec.ptr76 = getelementptr i16, i16* %64, i32 1, !dbg !8914
  store i16* %incdec.ptr76, i16** %cw, align 8, !dbg !8914
  %65 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8915
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %65, i32 0, i32 9, !dbg !8916
  %66 = load i8, i8* %nsect, align 8, !dbg !8916
  call void @mv_crqb_pack_cmd(i16* %64, i8 zeroext %66, i8 zeroext 2, i32 0) #9, !dbg !8917
  %67 = load i16*, i16** %cw, align 8, !dbg !8918
  %incdec.ptr77 = getelementptr i16, i16* %67, i32 1, !dbg !8918
  store i16* %incdec.ptr77, i16** %cw, align 8, !dbg !8918
  %68 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8919
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %68, i32 0, i32 5, !dbg !8920
  %69 = load i8, i8* %hob_lbal, align 4, !dbg !8920
  call void @mv_crqb_pack_cmd(i16* %67, i8 zeroext %69, i8 zeroext 3, i32 0) #9, !dbg !8921
  %70 = load i16*, i16** %cw, align 8, !dbg !8922
  %incdec.ptr78 = getelementptr i16, i16* %70, i32 1, !dbg !8922
  store i16* %incdec.ptr78, i16** %cw, align 8, !dbg !8922
  %71 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8923
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %71, i32 0, i32 10, !dbg !8924
  %72 = load i8, i8* %lbal, align 1, !dbg !8924
  call void @mv_crqb_pack_cmd(i16* %70, i8 zeroext %72, i8 zeroext 3, i32 0) #9, !dbg !8925
  %73 = load i16*, i16** %cw, align 8, !dbg !8926
  %incdec.ptr79 = getelementptr i16, i16* %73, i32 1, !dbg !8926
  store i16* %incdec.ptr79, i16** %cw, align 8, !dbg !8926
  %74 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8927
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %74, i32 0, i32 6, !dbg !8928
  %75 = load i8, i8* %hob_lbam, align 1, !dbg !8928
  call void @mv_crqb_pack_cmd(i16* %73, i8 zeroext %75, i8 zeroext 4, i32 0) #9, !dbg !8929
  %76 = load i16*, i16** %cw, align 8, !dbg !8930
  %incdec.ptr80 = getelementptr i16, i16* %76, i32 1, !dbg !8930
  store i16* %incdec.ptr80, i16** %cw, align 8, !dbg !8930
  %77 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8931
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %77, i32 0, i32 11, !dbg !8932
  %78 = load i8, i8* %lbam, align 2, !dbg !8932
  call void @mv_crqb_pack_cmd(i16* %76, i8 zeroext %78, i8 zeroext 4, i32 0) #9, !dbg !8933
  %79 = load i16*, i16** %cw, align 8, !dbg !8934
  %incdec.ptr81 = getelementptr i16, i16* %79, i32 1, !dbg !8934
  store i16* %incdec.ptr81, i16** %cw, align 8, !dbg !8934
  %80 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8935
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %80, i32 0, i32 7, !dbg !8936
  %81 = load i8, i8* %hob_lbah, align 2, !dbg !8936
  call void @mv_crqb_pack_cmd(i16* %79, i8 zeroext %81, i8 zeroext 5, i32 0) #9, !dbg !8937
  %82 = load i16*, i16** %cw, align 8, !dbg !8938
  %incdec.ptr82 = getelementptr i16, i16* %82, i32 1, !dbg !8938
  store i16* %incdec.ptr82, i16** %cw, align 8, !dbg !8938
  %83 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8939
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %83, i32 0, i32 12, !dbg !8940
  %84 = load i8, i8* %lbah, align 1, !dbg !8940
  call void @mv_crqb_pack_cmd(i16* %82, i8 zeroext %84, i8 zeroext 5, i32 0) #9, !dbg !8941
  %85 = load i16*, i16** %cw, align 8, !dbg !8942
  %incdec.ptr83 = getelementptr i16, i16* %85, i32 1, !dbg !8942
  store i16* %incdec.ptr83, i16** %cw, align 8, !dbg !8942
  %86 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8943
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %86, i32 0, i32 13, !dbg !8944
  %87 = load i8, i8* %device, align 4, !dbg !8944
  call void @mv_crqb_pack_cmd(i16* %85, i8 zeroext %87, i8 zeroext 6, i32 0) #9, !dbg !8945
  %88 = load i16*, i16** %cw, align 8, !dbg !8946
  %incdec.ptr84 = getelementptr i16, i16* %88, i32 1, !dbg !8946
  store i16* %incdec.ptr84, i16** %cw, align 8, !dbg !8946
  %89 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !8947
  %command85 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %89, i32 0, i32 14, !dbg !8948
  %90 = load i8, i8* %command85, align 1, !dbg !8948
  call void @mv_crqb_pack_cmd(i16* %88, i8 zeroext %90, i8 zeroext 7, i32 1) #9, !dbg !8949
  %91 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8950
  %flags86 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %91, i32 0, i32 6, !dbg !8952
  %92 = load i64, i64* %flags86, align 8, !dbg !8952
  %and87 = and i64 %92, 2, !dbg !8953
  %tobool88 = icmp ne i64 %and87, 0, !dbg !8953
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !8954

if.then89:                                        ; preds = %sw.epilog75
  store i32 0, i32* %retval, align 4, !dbg !8955
  br label %return, !dbg !8955

if.end90:                                         ; preds = %sw.epilog75
  %93 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8956
  call void @mv_fill_sg(%struct.ata_queued_cmd* %93) #9, !dbg !8957
  store i32 0, i32* %retval, align 4, !dbg !8958
  br label %return, !dbg !8958

return:                                           ; preds = %if.end90, %if.then89, %sw.default72, %sw.default, %sw.bb6, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !8959
  ret i32 %94, !dbg !8959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_qc_issue(%struct.ata_queued_cmd* %qc) #2 !dbg !7749 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %in_index = alloca i32, align 4
  %port_irqs = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8962, metadata !DIExpression()), !dbg !8963
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8964
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !8965
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !8965
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !8963
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !8966, metadata !DIExpression()), !dbg !8967
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8968
  %call = call i8* @mv_ap_base(%struct.ata_port* %2) #9, !dbg !8969
  store i8* %call, i8** %port_mmio, align 8, !dbg !8967
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !8970, metadata !DIExpression()), !dbg !8971
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8972
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 49, !dbg !8973
  %4 = load i8*, i8** %private_data, align 32, !dbg !8973
  %5 = bitcast i8* %4 to %struct.mv_port_priv*, !dbg !8972
  store %struct.mv_port_priv* %5, %struct.mv_port_priv** %pp, align 8, !dbg !8971
  call void @llvm.dbg.declare(metadata i32* %in_index, metadata !8974, metadata !DIExpression()), !dbg !8975
  call void @llvm.dbg.declare(metadata i32* %port_irqs, metadata !8976, metadata !DIExpression()), !dbg !8977
  %6 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !8978
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %6, i32 0, i32 8, !dbg !8979
  %7 = load i32, i32* %pp_flags, align 8, !dbg !8980
  %and = and i32 %7, -17, !dbg !8980
  store i32 %and, i32* %pp_flags, align 8, !dbg !8980
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8981
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 4, !dbg !8982
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !8983
  %9 = load i8, i8* %protocol, align 8, !dbg !8983
  %conv = zext i8 %9 to i32, !dbg !8981
  switch i32 %conv, label %sw.epilog [
    i32 2, label %sw.bb
    i32 6, label %sw.bb7
    i32 1, label %sw.bb15
    i32 0, label %sw.bb22
    i32 9, label %sw.bb22
    i32 8, label %sw.bb22
  ], !dbg !8984

sw.bb:                                            ; preds = %entry
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8985
  %tf2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 4, !dbg !8988
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf2, i32 0, i32 14, !dbg !8989
  %11 = load i8, i8* %command, align 1, !dbg !8989
  %conv3 = zext i8 %11 to i32, !dbg !8985
  %cmp = icmp eq i32 %conv3, 6, !dbg !8990
  br i1 %cmp, label %if.then, label %if.end6, !dbg !8991

if.then:                                          ; preds = %sw.bb
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8992
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 1, !dbg !8995
  %13 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8995
  %bmdma_setup = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %13, i32 0, i32 49, !dbg !8996
  %14 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_setup, align 8, !dbg !8996
  %tobool = icmp ne void (%struct.ata_queued_cmd*)* %14, null, !dbg !8992
  br i1 %tobool, label %if.end, label %if.then5, !dbg !8997

if.then5:                                         ; preds = %if.then
  store i32 256, i32* %retval, align 4, !dbg !8998
  br label %return, !dbg !8998

if.end:                                           ; preds = %if.then
  br label %sw.epilog, !dbg !8999

if.end6:                                          ; preds = %sw.bb
  br label %sw.bb7, !dbg !9000

sw.bb7:                                           ; preds = %entry, %if.end6
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9001
  %16 = load i8*, i8** %port_mmio, align 8, !dbg !9002
  %17 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9003
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9004
  %tf8 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 4, !dbg !9005
  %protocol9 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf8, i32 0, i32 1, !dbg !9006
  %19 = load i8, i8* %protocol9, align 8, !dbg !9006
  call void @mv_start_edma(%struct.ata_port* %15, i8* %16, %struct.mv_port_priv* %17, i8 zeroext %19) #9, !dbg !9007
  %20 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9008
  %req_idx = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %20, i32 0, i32 6, !dbg !9009
  %21 = load i32, i32* %req_idx, align 8, !dbg !9009
  %add = add i32 %21, 1, !dbg !9010
  %and10 = and i32 %add, 31, !dbg !9011
  %22 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9012
  %req_idx11 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %22, i32 0, i32 6, !dbg !9013
  store i32 %and10, i32* %req_idx11, align 8, !dbg !9014
  %23 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9015
  %req_idx12 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %23, i32 0, i32 6, !dbg !9016
  %24 = load i32, i32* %req_idx12, align 8, !dbg !9016
  %shl = shl i32 %24, 5, !dbg !9017
  store i32 %shl, i32* %in_index, align 4, !dbg !9018
  %25 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9019
  %crqb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %25, i32 0, i32 1, !dbg !9020
  %26 = load i64, i64* %crqb_dma, align 8, !dbg !9020
  %and13 = and i64 %26, 4294966272, !dbg !9021
  %27 = load i32, i32* %in_index, align 4, !dbg !9022
  %conv14 = zext i32 %27 to i64, !dbg !9022
  %or = or i64 %and13, %conv14, !dbg !9023
  %28 = load i8*, i8** %port_mmio, align 8, !dbg !9024
  %add.ptr = getelementptr i8, i8* %28, i64 20, !dbg !9025
  call void @writelfl(i64 %or, i8* %add.ptr) #9, !dbg !9026
  store i32 0, i32* %retval, align 4, !dbg !9027
  br label %return, !dbg !9027

sw.bb15:                                          ; preds = %entry
  %29 = load i32, i32* @mv_qc_issue.limit_warnings, align 4, !dbg !9028
  %cmp16 = icmp sgt i32 %29, 0, !dbg !9030
  br i1 %cmp16, label %land.lhs.true, label %if.end21, !dbg !9031

land.lhs.true:                                    ; preds = %sw.bb15
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9032
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %30, i32 0, i32 13, !dbg !9033
  %31 = load i32, i32* %nbytes, align 8, !dbg !9033
  %32 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9034
  %sect_size = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %32, i32 0, i32 12, !dbg !9035
  %33 = load i32, i32* %sect_size, align 4, !dbg !9035
  %div = udiv i32 %31, %33, !dbg !9036
  %cmp18 = icmp ugt i32 %div, 1, !dbg !9037
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !9038

if.then20:                                        ; preds = %land.lhs.true
  %34 = load i32, i32* @mv_qc_issue.limit_warnings, align 4, !dbg !9039
  %dec = add i32 %34, -1, !dbg !9039
  store i32 %dec, i32* @mv_qc_issue.limit_warnings, align 4, !dbg !9039
  %35 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9041
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %35, i32 0, i32 1, !dbg !9041
  %36 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9041
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %36, i32 0, i32 0, !dbg !9041
  %37 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !9041
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.9, i64 0, i64 0)) #9, !dbg !9041
  br label %if.end21, !dbg !9042

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %sw.bb15
  br label %sw.bb22, !dbg !9043

sw.bb22:                                          ; preds = %entry, %entry, %entry, %if.end21
  %38 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9044
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 3, !dbg !9046
  %39 = load i64, i64* %flags, align 8, !dbg !9046
  %and23 = and i64 %39, 512, !dbg !9047
  %tobool24 = icmp ne i64 %and23, 0, !dbg !9047
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !9048

if.then25:                                        ; preds = %sw.bb22
  %40 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9049
  %tf26 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %40, i32 0, i32 4, !dbg !9050
  %flags27 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf26, i32 0, i32 0, !dbg !9051
  %41 = load i64, i64* %flags27, align 8, !dbg !9052
  %or28 = or i64 %41, 64, !dbg !9052
  store i64 %or28, i64* %flags27, align 8, !dbg !9052
  br label %if.end29, !dbg !9049

if.end29:                                         ; preds = %if.then25, %sw.bb22
  br label %sw.epilog, !dbg !9053

sw.epilog:                                        ; preds = %entry, %if.end29, %if.end
  %42 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9054
  %tf30 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %42, i32 0, i32 4, !dbg !9056
  %flags31 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf30, i32 0, i32 0, !dbg !9057
  %43 = load i64, i64* %flags31, align 8, !dbg !9057
  %and32 = and i64 %43, 64, !dbg !9058
  %tobool33 = icmp ne i64 %and32, 0, !dbg !9058
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !9059

if.then34:                                        ; preds = %sw.epilog
  store i32 1, i32* %port_irqs, align 4, !dbg !9060
  br label %if.end35, !dbg !9061

if.else:                                          ; preds = %sw.epilog
  store i32 3, i32* %port_irqs, align 4, !dbg !9062
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then34
  %44 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9063
  %call36 = call i32 @mv_stop_edma(%struct.ata_port* %44) #9, !dbg !9064
  %45 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9065
  %46 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9066
  %call37 = call i8* @mv_ap_base(%struct.ata_port* %46) #9, !dbg !9067
  %47 = load i32, i32* %port_irqs, align 4, !dbg !9068
  call void @mv_clear_and_enable_port_irqs(%struct.ata_port* %45, i8* %call37, i32 %47) #9, !dbg !9069
  %48 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9070
  %49 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9071
  %dev38 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %49, i32 0, i32 1, !dbg !9072
  %50 = load %struct.ata_device*, %struct.ata_device** %dev38, align 8, !dbg !9072
  %link39 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %50, i32 0, i32 0, !dbg !9073
  %51 = load %struct.ata_link*, %struct.ata_link** %link39, align 64, !dbg !9073
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %51, i32 0, i32 1, !dbg !9074
  %52 = load i32, i32* %pmp, align 8, !dbg !9074
  call void @mv_pmp_select(%struct.ata_port* %48, i32 %52) #9, !dbg !9075
  %53 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9076
  %tf40 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %53, i32 0, i32 4, !dbg !9078
  %command41 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf40, i32 0, i32 14, !dbg !9079
  %54 = load i8, i8* %command41, align 1, !dbg !9079
  %conv42 = zext i8 %54 to i32, !dbg !9076
  %cmp43 = icmp eq i32 %conv42, 47, !dbg !9080
  br i1 %cmp43, label %if.then45, label %if.end52, !dbg !9081

if.then45:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9082, metadata !DIExpression()), !dbg !9084
  %55 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9085
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %55, i32 0, i32 31, !dbg !9086
  %56 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9086
  %private_data46 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %56, i32 0, i32 5, !dbg !9087
  %57 = load i8*, i8** %private_data46, align 8, !dbg !9087
  %58 = bitcast i8* %57 to %struct.mv_host_priv*, !dbg !9085
  store %struct.mv_host_priv* %58, %struct.mv_host_priv** %hpriv, align 8, !dbg !9084
  %59 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9088
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %59, i32 0, i32 0, !dbg !9088
  %60 = load i32, i32* %hp_flags, align 8, !dbg !9088
  %and47 = and i32 %60, 128, !dbg !9088
  %tobool48 = icmp ne i32 %and47, 0, !dbg !9088
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !9090

if.then49:                                        ; preds = %if.then45
  %61 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9091
  %call50 = call i32 @mv_qc_issue_fis(%struct.ata_queued_cmd* %61) #9, !dbg !9092
  store i32 %call50, i32* %retval, align 4, !dbg !9093
  br label %return, !dbg !9093

if.end51:                                         ; preds = %if.then45
  br label %if.end52, !dbg !9094

if.end52:                                         ; preds = %if.end51, %if.end35
  %62 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9095
  %call53 = call i32 @ata_bmdma_qc_issue(%struct.ata_queued_cmd* %62) #9, !dbg !9096
  store i32 %call53, i32* %retval, align 4, !dbg !9097
  br label %return, !dbg !9097

return:                                           ; preds = %if.end52, %if.then49, %sw.bb7, %if.then5
  %63 = load i32, i32* %retval, align 4, !dbg !9098
  ret i32 %63, !dbg !9098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_eh_freeze(%struct.ata_port* %ap) #2 !dbg !9099 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9102
  %call = call i32 @mv_stop_edma(%struct.ata_port* %0) #9, !dbg !9103
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9104
  call void @mv_enable_port_irqs(%struct.ata_port* %1, i32 0) #9, !dbg !9105
  ret void, !dbg !9106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_eh_thaw(%struct.ata_port* %ap) #2 !dbg !9107 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %port = alloca i32, align 4
  %hardport = alloca i32, align 4
  %hc_mmio = alloca i8*, align 8
  %port_mmio = alloca i8*, align 8
  %hc_irq_cause = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9108, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9110, metadata !DIExpression()), !dbg !9111
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9112
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !9113
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9113
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 5, !dbg !9114
  %2 = load i8*, i8** %private_data, align 8, !dbg !9114
  %3 = bitcast i8* %2 to %struct.mv_host_priv*, !dbg !9112
  store %struct.mv_host_priv* %3, %struct.mv_host_priv** %hpriv, align 8, !dbg !9111
  call void @llvm.dbg.declare(metadata i32* %port, metadata !9115, metadata !DIExpression()), !dbg !9116
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9117
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 7, !dbg !9118
  %5 = load i32, i32* %port_no, align 4, !dbg !9118
  store i32 %5, i32* %port, align 4, !dbg !9116
  call void @llvm.dbg.declare(metadata i32* %hardport, metadata !9119, metadata !DIExpression()), !dbg !9120
  %6 = load i32, i32* %port, align 4, !dbg !9121
  %call = call i32 @mv_hardport_from_port(i32 %6) #9, !dbg !9122
  store i32 %call, i32* %hardport, align 4, !dbg !9120
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !9123, metadata !DIExpression()), !dbg !9124
  %7 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9125
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %7, i32 0, i32 6, !dbg !9126
  %8 = load i8*, i8** %base, align 8, !dbg !9126
  %9 = load i32, i32* %port, align 4, !dbg !9127
  %call1 = call i8* @mv_hc_base_from_port(i8* %8, i32 %9) #9, !dbg !9128
  store i8* %call1, i8** %hc_mmio, align 8, !dbg !9124
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !9129, metadata !DIExpression()), !dbg !9130
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9131
  %call2 = call i8* @mv_ap_base(%struct.ata_port* %10) #9, !dbg !9132
  store i8* %call2, i8** %port_mmio, align 8, !dbg !9130
  call void @llvm.dbg.declare(metadata i32* %hc_irq_cause, metadata !9133, metadata !DIExpression()), !dbg !9134
  %11 = load i8*, i8** %port_mmio, align 8, !dbg !9135
  %add.ptr = getelementptr i8, i8* %11, i64 8, !dbg !9136
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !9137
  %12 = load i32, i32* %hardport, align 4, !dbg !9138
  %shl = shl i32 257, %12, !dbg !9139
  %neg = xor i32 %shl, -1, !dbg !9140
  store i32 %neg, i32* %hc_irq_cause, align 4, !dbg !9141
  %13 = load i32, i32* %hc_irq_cause, align 4, !dbg !9142
  %conv = zext i32 %13 to i64, !dbg !9142
  %14 = load i8*, i8** %hc_mmio, align 8, !dbg !9143
  %add.ptr3 = getelementptr i8, i8* %14, i64 20, !dbg !9144
  call void @writelfl(i64 %conv, i8* %add.ptr3) #9, !dbg !9145
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9146
  call void @mv_enable_port_irqs(%struct.ata_port* %15, i32 1) #9, !dbg !9147
  ret void, !dbg !9148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_hardreset(%struct.ata_link* %link, i32* %class, i64 %deadline) #2 !dbg !9149 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %class.addr = alloca i32*, align 8
  %deadline.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %mmio = alloca i8*, align 8
  %rc = alloca i32, align 4
  %attempts = alloca i32, align 4
  %extra = alloca i32, align 4
  %sstatus = alloca i32, align 4
  %online = alloca i8, align 1
  %timing = alloca i64*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  store i32* %class, i32** %class.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %class.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9156, metadata !DIExpression()), !dbg !9157
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9158
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !9159
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9159
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9157
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9160, metadata !DIExpression()), !dbg !9161
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9162
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 31, !dbg !9163
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9163
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 5, !dbg !9164
  %4 = load i8*, i8** %private_data, align 8, !dbg !9164
  %5 = bitcast i8* %4 to %struct.mv_host_priv*, !dbg !9162
  store %struct.mv_host_priv* %5, %struct.mv_host_priv** %hpriv, align 8, !dbg !9161
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !9165, metadata !DIExpression()), !dbg !9166
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9167
  %private_data2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 49, !dbg !9168
  %7 = load i8*, i8** %private_data2, align 32, !dbg !9168
  %8 = bitcast i8* %7 to %struct.mv_port_priv*, !dbg !9167
  store %struct.mv_port_priv* %8, %struct.mv_port_priv** %pp, align 8, !dbg !9166
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !9169, metadata !DIExpression()), !dbg !9170
  %9 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9171
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %9, i32 0, i32 6, !dbg !9172
  %10 = load i8*, i8** %base, align 8, !dbg !9172
  store i8* %10, i8** %mmio, align 8, !dbg !9170
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9173, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !9175, metadata !DIExpression()), !dbg !9176
  store i32 0, i32* %attempts, align 4, !dbg !9176
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !9177, metadata !DIExpression()), !dbg !9178
  store i32 0, i32* %extra, align 4, !dbg !9178
  call void @llvm.dbg.declare(metadata i32* %sstatus, metadata !9179, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.declare(metadata i8* %online, metadata !9181, metadata !DIExpression()), !dbg !9182
  %11 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9183
  %12 = load i8*, i8** %mmio, align 8, !dbg !9184
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9185
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 7, !dbg !9186
  %14 = load i32, i32* %port_no, align 4, !dbg !9186
  call void @mv_reset_channel(%struct.mv_host_priv* %11, i8* %12, i32 %14) #9, !dbg !9187
  %15 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9188
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %15, i32 0, i32 8, !dbg !9189
  %16 = load i32, i32* %pp_flags, align 8, !dbg !9190
  %and = and i32 %16, -2, !dbg !9190
  store i32 %and, i32* %pp_flags, align 8, !dbg !9190
  %17 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9191
  %pp_flags3 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %17, i32 0, i32 8, !dbg !9192
  %18 = load i32, i32* %pp_flags3, align 8, !dbg !9193
  %and4 = and i32 %18, -23, !dbg !9193
  store i32 %and4, i32* %pp_flags3, align 8, !dbg !9193
  br label %do.body, !dbg !9194

do.body:                                          ; preds = %land.end, %entry
  call void @llvm.dbg.declare(metadata i64** %timing, metadata !9195, metadata !DIExpression()), !dbg !9198
  %19 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9199
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %19, i32 0, i32 12, !dbg !9200
  %call = call i64* @sata_ehc_deb_timing(%struct.ata_eh_context* %eh_context) #9, !dbg !9201
  store i64* %call, i64** %timing, align 8, !dbg !9198
  %20 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9202
  %21 = load i64*, i64** %timing, align 8, !dbg !9203
  %22 = load i64, i64* %deadline.addr, align 8, !dbg !9204
  %23 = load i32, i32* %extra, align 4, !dbg !9205
  %conv = sext i32 %23 to i64, !dbg !9205
  %add = add i64 %22, %conv, !dbg !9206
  %call5 = call i32 @sata_link_hardreset(%struct.ata_link* %20, i64* %21, i64 %add, i8* %online, i32 (%struct.ata_link*)* null) #9, !dbg !9207
  store i32 %call5, i32* %rc, align 4, !dbg !9208
  %24 = load i8, i8* %online, align 1, !dbg !9209
  %tobool = trunc i8 %24 to i1, !dbg !9209
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9209

cond.true:                                        ; preds = %do.body
  br label %cond.end, !dbg !9209

cond.false:                                       ; preds = %do.body
  %25 = load i32, i32* %rc, align 4, !dbg !9210
  br label %cond.end, !dbg !9209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -11, %cond.true ], [ %25, %cond.false ], !dbg !9209
  store i32 %cond, i32* %rc, align 4, !dbg !9211
  %26 = load i32, i32* %rc, align 4, !dbg !9212
  %tobool7 = icmp ne i32 %26, 0, !dbg !9212
  br i1 %tobool7, label %if.then, label %if.end, !dbg !9214

if.then:                                          ; preds = %cond.end
  %27 = load i32, i32* %rc, align 4, !dbg !9215
  store i32 %27, i32* %retval, align 4, !dbg !9216
  br label %return, !dbg !9216

if.end:                                           ; preds = %cond.end
  %28 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9217
  %call8 = call i32 @sata_scr_read(%struct.ata_link* %28, i32 0, i32* %sstatus) #9, !dbg !9218
  %29 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9219
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %29, i32 0, i32 0, !dbg !9219
  %30 = load i32, i32* %hp_flags, align 8, !dbg !9219
  %and9 = and i32 %30, 64, !dbg !9219
  %tobool10 = icmp ne i32 %and9, 0, !dbg !9219
  br i1 %tobool10, label %if.end22, label %land.lhs.true, !dbg !9221

land.lhs.true:                                    ; preds = %if.end
  %31 = load i32, i32* %attempts, align 4, !dbg !9222
  %inc = add i32 %31, 1, !dbg !9222
  store i32 %inc, i32* %attempts, align 4, !dbg !9222
  %cmp = icmp sge i32 %inc, 5, !dbg !9223
  br i1 %cmp, label %land.lhs.true12, label %if.end22, !dbg !9224

land.lhs.true12:                                  ; preds = %land.lhs.true
  %32 = load i32, i32* %sstatus, align 4, !dbg !9225
  %cmp13 = icmp eq i32 %32, 289, !dbg !9226
  br i1 %cmp13, label %if.then15, label %if.end22, !dbg !9227

if.then15:                                        ; preds = %land.lhs.true12
  %33 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9228
  %call16 = call i8* @mv_ap_base(%struct.ata_port* %33) #9, !dbg !9230
  call void @mv_setup_ifcfg(i8* %call16, i32 0) #9, !dbg !9231
  %34 = load i64, i64* %deadline.addr, align 8, !dbg !9232
  %35 = load volatile i64, i64* @jiffies, align 8, !dbg !9232
  %add17 = add i64 %35, 250, !dbg !9232
  %sub = sub i64 %34, %add17, !dbg !9232
  %cmp18 = icmp slt i64 %sub, 0, !dbg !9232
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !9234

if.then20:                                        ; preds = %if.then15
  store i32 250, i32* %extra, align 4, !dbg !9235
  br label %if.end21, !dbg !9236

if.end21:                                         ; preds = %if.then20, %if.then15
  br label %if.end22, !dbg !9237

if.end22:                                         ; preds = %if.end21, %land.lhs.true12, %land.lhs.true, %if.end
  br label %do.cond, !dbg !9238

do.cond:                                          ; preds = %if.end22
  %36 = load i32, i32* %sstatus, align 4, !dbg !9239
  %cmp23 = icmp ne i32 %36, 0, !dbg !9240
  br i1 %cmp23, label %land.lhs.true25, label %land.end, !dbg !9241

land.lhs.true25:                                  ; preds = %do.cond
  %37 = load i32, i32* %sstatus, align 4, !dbg !9242
  %cmp26 = icmp ne i32 %37, 275, !dbg !9243
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !9244

land.rhs:                                         ; preds = %land.lhs.true25
  %38 = load i32, i32* %sstatus, align 4, !dbg !9245
  %cmp28 = icmp ne i32 %38, 291, !dbg !9246
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true25, %do.cond
  %39 = phi i1 [ false, %land.lhs.true25 ], [ false, %do.cond ], [ %cmp28, %land.rhs ], !dbg !9247
  br i1 %39, label %do.body, label %do.end, !dbg !9238, !llvm.loop !9248

do.end:                                           ; preds = %land.end
  %40 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9250
  call void @mv_save_cached_regs(%struct.ata_port* %40) #9, !dbg !9251
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9252
  call void @mv_edma_cfg(%struct.ata_port* %41, i32 0, i32 0) #9, !dbg !9253
  %42 = load i32, i32* %rc, align 4, !dbg !9254
  store i32 %42, i32* %retval, align 4, !dbg !9255
  br label %return, !dbg !9255

return:                                           ; preds = %do.end, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !9256
  ret i32 %43, !dbg !9256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv5_scr_read(%struct.ata_link* %link, i32 %sc_reg_in, i32* %val) #2 !dbg !9257 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %sc_reg_in.addr = alloca i32, align 4
  %val.addr = alloca i32*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %addr = alloca i8*, align 8
  %ofs = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9258, metadata !DIExpression()), !dbg !9259
  store i32 %sc_reg_in, i32* %sc_reg_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sc_reg_in.addr, metadata !9260, metadata !DIExpression()), !dbg !9261
  store i32* %val, i32** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %val.addr, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9264, metadata !DIExpression()), !dbg !9265
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9266
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !9267
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !9267
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 31, !dbg !9268
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9268
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 5, !dbg !9269
  %3 = load i8*, i8** %private_data, align 8, !dbg !9269
  %4 = bitcast i8* %3 to %struct.mv_host_priv*, !dbg !9266
  store %struct.mv_host_priv* %4, %struct.mv_host_priv** %hpriv, align 8, !dbg !9265
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !9270, metadata !DIExpression()), !dbg !9271
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9272
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 6, !dbg !9273
  %6 = load i8*, i8** %base, align 8, !dbg !9273
  store i8* %6, i8** %mmio, align 8, !dbg !9271
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !9274, metadata !DIExpression()), !dbg !9275
  %7 = load i8*, i8** %mmio, align 8, !dbg !9276
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9277
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %8, i32 0, i32 0, !dbg !9278
  %9 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9278
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 7, !dbg !9279
  %10 = load i32, i32* %port_no, align 4, !dbg !9279
  %call = call i8* @mv5_phy_base(i8* %7, i32 %10) #9, !dbg !9280
  store i8* %call, i8** %addr, align 8, !dbg !9275
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !9281, metadata !DIExpression()), !dbg !9282
  %11 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !9283
  %call2 = call i32 @mv5_scr_offset(i32 %11) #9, !dbg !9284
  store i32 %call2, i32* %ofs, align 4, !dbg !9282
  %12 = load i32, i32* %ofs, align 4, !dbg !9285
  %cmp = icmp ne i32 %12, -1, !dbg !9287
  br i1 %cmp, label %if.then, label %if.else, !dbg !9288

if.then:                                          ; preds = %entry
  %13 = load i8*, i8** %addr, align 8, !dbg !9289
  %14 = load i32, i32* %ofs, align 4, !dbg !9291
  %idx.ext = zext i32 %14 to i64, !dbg !9292
  %add.ptr = getelementptr i8, i8* %13, i64 %idx.ext, !dbg !9292
  %call3 = call i32 @readl(i8* %add.ptr) #9, !dbg !9293
  %15 = load i32*, i32** %val.addr, align 8, !dbg !9294
  store i32 %call3, i32* %15, align 4, !dbg !9295
  store i32 0, i32* %retval, align 4, !dbg !9296
  br label %return, !dbg !9296

if.else:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9297
  br label %return, !dbg !9297

return:                                           ; preds = %if.else, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9298
  ret i32 %16, !dbg !9298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv5_scr_write(%struct.ata_link* %link, i32 %sc_reg_in, i32 %val) #2 !dbg !9299 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %sc_reg_in.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %addr = alloca i8*, align 8
  %ofs = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9300, metadata !DIExpression()), !dbg !9301
  store i32 %sc_reg_in, i32* %sc_reg_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sc_reg_in.addr, metadata !9302, metadata !DIExpression()), !dbg !9303
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9306, metadata !DIExpression()), !dbg !9307
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9308
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !9309
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !9309
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 31, !dbg !9310
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9310
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 5, !dbg !9311
  %3 = load i8*, i8** %private_data, align 8, !dbg !9311
  %4 = bitcast i8* %3 to %struct.mv_host_priv*, !dbg !9308
  store %struct.mv_host_priv* %4, %struct.mv_host_priv** %hpriv, align 8, !dbg !9307
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !9312, metadata !DIExpression()), !dbg !9313
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9314
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 6, !dbg !9315
  %6 = load i8*, i8** %base, align 8, !dbg !9315
  store i8* %6, i8** %mmio, align 8, !dbg !9313
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !9316, metadata !DIExpression()), !dbg !9317
  %7 = load i8*, i8** %mmio, align 8, !dbg !9318
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9319
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %8, i32 0, i32 0, !dbg !9320
  %9 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9320
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 7, !dbg !9321
  %10 = load i32, i32* %port_no, align 4, !dbg !9321
  %call = call i8* @mv5_phy_base(i8* %7, i32 %10) #9, !dbg !9322
  store i8* %call, i8** %addr, align 8, !dbg !9317
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !9323, metadata !DIExpression()), !dbg !9324
  %11 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !9325
  %call2 = call i32 @mv5_scr_offset(i32 %11) #9, !dbg !9326
  store i32 %call2, i32* %ofs, align 4, !dbg !9324
  %12 = load i32, i32* %ofs, align 4, !dbg !9327
  %cmp = icmp ne i32 %12, -1, !dbg !9329
  br i1 %cmp, label %if.then, label %if.else, !dbg !9330

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %val.addr, align 4, !dbg !9331
  %conv = zext i32 %13 to i64, !dbg !9331
  %14 = load i8*, i8** %addr, align 8, !dbg !9333
  %15 = load i32, i32* %ofs, align 4, !dbg !9334
  %idx.ext = zext i32 %15 to i64, !dbg !9335
  %add.ptr = getelementptr i8, i8* %14, i64 %idx.ext, !dbg !9335
  call void @writelfl(i64 %conv, i8* %add.ptr) #9, !dbg !9336
  store i32 0, i32* %retval, align 4, !dbg !9337
  br label %return, !dbg !9337

if.else:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9338
  br label %return, !dbg !9338

return:                                           ; preds = %if.else, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9339
  ret i32 %16, !dbg !9339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_port_start(%struct.ata_port* %ap) #2 !dbg !9340 {
entry:
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !9341, metadata !DIExpression()), !dbg !9345
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9347, metadata !DIExpression()), !dbg !9348
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9349, metadata !DIExpression()), !dbg !9354
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.device*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %flags = alloca i64, align 8
  %tag = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy48 = alloca i64, align 8
  %__dummy249 = alloca i64, align 8
  %tmp52 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9361, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9363, metadata !DIExpression()), !dbg !9364
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9365
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !9366
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9366
  %dev1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 1, !dbg !9367
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9367
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !9364
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9368, metadata !DIExpression()), !dbg !9369
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9370
  %host2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 31, !dbg !9371
  %4 = load %struct.ata_host*, %struct.ata_host** %host2, align 8, !dbg !9371
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %4, i32 0, i32 5, !dbg !9372
  %5 = load i8*, i8** %private_data, align 8, !dbg !9372
  %6 = bitcast i8* %5 to %struct.mv_host_priv*, !dbg !9370
  store %struct.mv_host_priv* %6, %struct.mv_host_priv** %hpriv, align 8, !dbg !9369
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9375, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !9377, metadata !DIExpression()), !dbg !9378
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9379
  %call = call i8* @devm_kzalloc(%struct.device* %7, i64 576, i32 3264) #9, !dbg !9380
  %8 = bitcast i8* %call to %struct.mv_port_priv*, !dbg !9380
  store %struct.mv_port_priv* %8, %struct.mv_port_priv** %pp, align 8, !dbg !9381
  %9 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9382
  %tobool = icmp ne %struct.mv_port_priv* %9, null, !dbg !9382
  br i1 %tobool, label %if.end, label %if.then, !dbg !9384

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9385
  br label %return, !dbg !9385

if.end:                                           ; preds = %entry
  %10 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9386
  %11 = bitcast %struct.mv_port_priv* %10 to i8*, !dbg !9386
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9387
  %private_data3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 49, !dbg !9388
  store i8* %11, i8** %private_data3, align 32, !dbg !9389
  %13 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9390
  %crqb_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %13, i32 0, i32 15, !dbg !9391
  %14 = load %struct.dma_pool*, %struct.dma_pool** %crqb_pool, align 8, !dbg !9391
  %15 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9392
  %crqb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %15, i32 0, i32 1, !dbg !9393
  %call4 = call i8* @dma_pool_zalloc(%struct.dma_pool* %14, i32 3264, i64* %crqb_dma) #9, !dbg !9394
  %16 = bitcast i8* %call4 to %struct.mv_crqb*, !dbg !9394
  %17 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9395
  %crqb = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %17, i32 0, i32 0, !dbg !9396
  store %struct.mv_crqb* %16, %struct.mv_crqb** %crqb, align 8, !dbg !9397
  %18 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9398
  %crqb5 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %18, i32 0, i32 0, !dbg !9400
  %19 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb5, align 8, !dbg !9400
  %tobool6 = icmp ne %struct.mv_crqb* %19, null, !dbg !9398
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !9401

if.then7:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9402
  br label %return, !dbg !9402

if.end8:                                          ; preds = %if.end
  %20 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9403
  %crpb_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %20, i32 0, i32 16, !dbg !9404
  %21 = load %struct.dma_pool*, %struct.dma_pool** %crpb_pool, align 8, !dbg !9404
  %22 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9405
  %crpb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %22, i32 0, i32 3, !dbg !9406
  %call9 = call i8* @dma_pool_zalloc(%struct.dma_pool* %21, i32 3264, i64* %crpb_dma) #9, !dbg !9407
  %23 = bitcast i8* %call9 to %struct.mv_crpb*, !dbg !9407
  %24 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9408
  %crpb = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %24, i32 0, i32 2, !dbg !9409
  store %struct.mv_crpb* %23, %struct.mv_crpb** %crpb, align 8, !dbg !9410
  %25 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9411
  %crpb10 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %25, i32 0, i32 2, !dbg !9413
  %26 = load %struct.mv_crpb*, %struct.mv_crpb** %crpb10, align 8, !dbg !9413
  %tobool11 = icmp ne %struct.mv_crpb* %26, null, !dbg !9411
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !9414

if.then12:                                        ; preds = %if.end8
  br label %out_port_free_dma_mem, !dbg !9415

if.end13:                                         ; preds = %if.end8
  %27 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9416
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %27, i32 0, i32 0, !dbg !9418
  %28 = load i32, i32* %hp_flags, align 8, !dbg !9418
  %and = and i32 %28, 16, !dbg !9419
  %tobool14 = icmp ne i32 %and, 0, !dbg !9419
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !9420

if.then15:                                        ; preds = %if.end13
  %29 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9421
  %flags16 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %29, i32 0, i32 3, !dbg !9422
  %30 = load i64, i64* %flags16, align 8, !dbg !9423
  %or = or i64 %30, 262144, !dbg !9423
  store i64 %or, i64* %flags16, align 8, !dbg !9423
  br label %if.end17, !dbg !9421

if.end17:                                         ; preds = %if.then15, %if.end13
  store i32 0, i32* %tag, align 4, !dbg !9424
  br label %for.cond, !dbg !9426

for.cond:                                         ; preds = %for.inc, %if.end17
  %31 = load i32, i32* %tag, align 4, !dbg !9427
  %cmp = icmp slt i32 %31, 32, !dbg !9429
  br i1 %cmp, label %for.body, label %for.end, !dbg !9430

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %tag, align 4, !dbg !9431
  %cmp18 = icmp eq i32 %32, 0, !dbg !9434
  br i1 %cmp18, label %if.then22, label %lor.lhs.false, !dbg !9435

lor.lhs.false:                                    ; preds = %for.body
  %33 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9436
  %hp_flags19 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %33, i32 0, i32 0, !dbg !9436
  %34 = load i32, i32* %hp_flags19, align 8, !dbg !9436
  %and20 = and i32 %34, 64, !dbg !9436
  %tobool21 = icmp ne i32 %and20, 0, !dbg !9436
  br i1 %tobool21, label %if.else, label %if.then22, !dbg !9437

if.then22:                                        ; preds = %lor.lhs.false, %for.body
  %35 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9438
  %sg_tbl_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %35, i32 0, i32 17, !dbg !9440
  %36 = load %struct.dma_pool*, %struct.dma_pool** %sg_tbl_pool, align 8, !dbg !9440
  %37 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9441
  %sg_tbl_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %37, i32 0, i32 5, !dbg !9442
  %38 = load i32, i32* %tag, align 4, !dbg !9443
  %idxprom = sext i32 %38 to i64, !dbg !9441
  %arrayidx = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma, i64 0, i64 %idxprom, !dbg !9441
  %call23 = call i8* @dma_pool_alloc(%struct.dma_pool* %36, i32 3264, i64* %arrayidx) #9, !dbg !9444
  %39 = bitcast i8* %call23 to %struct.mv_sg*, !dbg !9444
  %40 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9445
  %sg_tbl = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %40, i32 0, i32 4, !dbg !9446
  %41 = load i32, i32* %tag, align 4, !dbg !9447
  %idxprom24 = sext i32 %41 to i64, !dbg !9445
  %arrayidx25 = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl, i64 0, i64 %idxprom24, !dbg !9445
  store %struct.mv_sg* %39, %struct.mv_sg** %arrayidx25, align 8, !dbg !9448
  %42 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9449
  %sg_tbl26 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %42, i32 0, i32 4, !dbg !9451
  %43 = load i32, i32* %tag, align 4, !dbg !9452
  %idxprom27 = sext i32 %43 to i64, !dbg !9449
  %arrayidx28 = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl26, i64 0, i64 %idxprom27, !dbg !9449
  %44 = load %struct.mv_sg*, %struct.mv_sg** %arrayidx28, align 8, !dbg !9449
  %tobool29 = icmp ne %struct.mv_sg* %44, null, !dbg !9449
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !9453

if.then30:                                        ; preds = %if.then22
  br label %out_port_free_dma_mem, !dbg !9454

if.end31:                                         ; preds = %if.then22
  br label %if.end42, !dbg !9455

if.else:                                          ; preds = %lor.lhs.false
  %45 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9456
  %sg_tbl32 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %45, i32 0, i32 4, !dbg !9458
  %arrayidx33 = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl32, i64 0, i64 0, !dbg !9456
  %46 = load %struct.mv_sg*, %struct.mv_sg** %arrayidx33, align 8, !dbg !9456
  %47 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9459
  %sg_tbl34 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %47, i32 0, i32 4, !dbg !9460
  %48 = load i32, i32* %tag, align 4, !dbg !9461
  %idxprom35 = sext i32 %48 to i64, !dbg !9459
  %arrayidx36 = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl34, i64 0, i64 %idxprom35, !dbg !9459
  store %struct.mv_sg* %46, %struct.mv_sg** %arrayidx36, align 8, !dbg !9462
  %49 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9463
  %sg_tbl_dma37 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %49, i32 0, i32 5, !dbg !9464
  %arrayidx38 = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma37, i64 0, i64 0, !dbg !9463
  %50 = load i64, i64* %arrayidx38, align 8, !dbg !9463
  %51 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9465
  %sg_tbl_dma39 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %51, i32 0, i32 5, !dbg !9466
  %52 = load i32, i32* %tag, align 4, !dbg !9467
  %idxprom40 = sext i32 %52 to i64, !dbg !9465
  %arrayidx41 = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma39, i64 0, i64 %idxprom40, !dbg !9465
  store i64 %50, i64* %arrayidx41, align 8, !dbg !9468
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.end31
  br label %for.inc, !dbg !9469

for.inc:                                          ; preds = %if.end42
  %53 = load i32, i32* %tag, align 4, !dbg !9470
  %inc = add i32 %53, 1, !dbg !9470
  store i32 %inc, i32* %tag, align 4, !dbg !9470
  br label %for.cond, !dbg !9471, !llvm.loop !9472

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !9474

do.body:                                          ; preds = %for.end
  br label %do.body43, !dbg !9475

do.body43:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9476, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9479, metadata !DIExpression()), !dbg !9478
  %cmp44 = icmp eq i64* %__dummy, %__dummy2, !dbg !9478
  %conv = zext i1 %cmp44 to i32, !dbg !9478
  store i32 1, i32* %tmp, align 4, !dbg !9478
  %54 = load i32, i32* %tmp, align 4, !dbg !9478
  br label %do.body45, !dbg !9480

do.body45:                                        ; preds = %do.body43
  br label %do.body46, !dbg !9481

do.body46:                                        ; preds = %do.body45
  br label %do.body47, !dbg !9482

do.body47:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata i64* %__dummy48, metadata !9484, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.declare(metadata i64* %__dummy249, metadata !9488, metadata !DIExpression()), !dbg !9487
  %cmp50 = icmp eq i64* %__dummy48, %__dummy249, !dbg !9487
  %conv51 = zext i1 %cmp50 to i32, !dbg !9487
  store i32 1, i32* %tmp52, align 4, !dbg !9487
  %55 = load i32, i32* %tmp52, align 4, !dbg !9487
  %call53 = call i64 @arch_local_irq_save() #9, !dbg !9489
  store i64 %call53, i64* %flags, align 8, !dbg !9489
  br label %do.end, !dbg !9489

do.end:                                           ; preds = %do.body47
  br label %do.end54, !dbg !9482

do.end54:                                         ; preds = %do.end
  br label %do.body55, !dbg !9481

do.body55:                                        ; preds = %do.end54
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9490, !srcloc !9491
  br label %do.body56, !dbg !9490

do.body56:                                        ; preds = %do.body55
  %56 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9492
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %56, i32 0, i32 2, !dbg !9492
  %57 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9492
  store %struct.spinlock* %57, %struct.spinlock** %lock.addr.i, align 8
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9493
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !9494
  %rlock.i = bitcast %union.anon.2* %59 to %struct.raw_spinlock*, !dbg !9494
  br label %do.end58, !dbg !9492

do.end58:                                         ; preds = %do.body56
  br label %do.end59, !dbg !9490

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !9481

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !9480

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !9475

do.end62:                                         ; preds = %do.end61
  %60 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9495
  call void @mv_save_cached_regs(%struct.ata_port* %60) #9, !dbg !9496
  %61 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9497
  call void @mv_edma_cfg(%struct.ata_port* %61, i32 0, i32 0) #9, !dbg !9498
  %62 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9499
  %lock63 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %62, i32 0, i32 2, !dbg !9500
  %63 = load %struct.spinlock*, %struct.spinlock** %lock63, align 16, !dbg !9500
  %64 = load i64, i64* %flags, align 8, !dbg !9501
  store %struct.spinlock* %63, %struct.spinlock** %lock.addr.i64, align 8
  store i64 %64, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1322, metadata !9502, metadata !DIExpression()) #6, !dbg !9505
  call void @llvm.dbg.declare(metadata !1322, metadata !9506, metadata !DIExpression()) #6, !dbg !9505
  store i32 1, i32* %tmp.i, align 4, !dbg !9505
  %65 = load i32, i32* %tmp.i, align 4, !dbg !9505
  call void @llvm.dbg.declare(metadata !1322, metadata !9507, metadata !DIExpression()) #6, !dbg !9512
  call void @llvm.dbg.declare(metadata !1322, metadata !9513, metadata !DIExpression()) #6, !dbg !9512
  store i32 1, i32* %tmp8.i, align 4, !dbg !9512
  %66 = load i32, i32* %tmp8.i, align 4, !dbg !9512
  %67 = load i64, i64* %flags.addr.i, align 8, !dbg !9514
  call void @arch_local_irq_restore(i64 %67) #11, !dbg !9514
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9515, !srcloc !9517
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !9518
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !9518
  %rlock.i65 = bitcast %union.anon.2* %69 to %struct.raw_spinlock*, !dbg !9518
  store i32 0, i32* %retval, align 4, !dbg !9520
  br label %return, !dbg !9520

out_port_free_dma_mem:                            ; preds = %if.then30, %if.then12
  call void @llvm.dbg.label(metadata !9521), !dbg !9522
  %70 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9523
  call void @mv_port_free_dma_mem(%struct.ata_port* %70) #9, !dbg !9524
  store i32 -12, i32* %retval, align 4, !dbg !9525
  br label %return, !dbg !9525

return:                                           ; preds = %out_port_free_dma_mem, %do.end62, %if.then7, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !9526
  ret i32 %71, !dbg !9526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_port_stop(%struct.ata_port* %ap) #2 !dbg !9527 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !9341, metadata !DIExpression()), !dbg !9528
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9347, metadata !DIExpression()), !dbg !9530
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9349, metadata !DIExpression()), !dbg !9531
  %ap.addr = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9538, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9540, metadata !DIExpression()), !dbg !9541
  br label %do.body, !dbg !9542

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9543

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9544, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9547, metadata !DIExpression()), !dbg !9546
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9546
  %conv = zext i1 %cmp to i32, !dbg !9546
  store i32 1, i32* %tmp, align 4, !dbg !9546
  %0 = load i32, i32* %tmp, align 4, !dbg !9546
  br label %do.body2, !dbg !9548

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9549

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9550

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9552, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9556, metadata !DIExpression()), !dbg !9555
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9555
  %conv8 = zext i1 %cmp7 to i32, !dbg !9555
  store i32 1, i32* %tmp9, align 4, !dbg !9555
  %1 = load i32, i32* %tmp9, align 4, !dbg !9555
  %call = call i64 @arch_local_irq_save() #9, !dbg !9557
  store i64 %call, i64* %flags, align 8, !dbg !9557
  br label %do.end, !dbg !9557

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9550

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9549

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9558, !srcloc !9559
  br label %do.body12, !dbg !9558

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9560
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 2, !dbg !9560
  %3 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9560
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9561
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !9562
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !9562
  br label %do.end14, !dbg !9560

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9558

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9549

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9548

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9543

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9563
  %call19 = call i32 @mv_stop_edma(%struct.ata_port* %6) #9, !dbg !9564
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9565
  call void @mv_enable_port_irqs(%struct.ata_port* %7, i32 0) #9, !dbg !9566
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9567
  %lock20 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !9568
  %9 = load %struct.spinlock*, %struct.spinlock** %lock20, align 16, !dbg !9568
  %10 = load i64, i64* %flags, align 8, !dbg !9569
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1322, metadata !9502, metadata !DIExpression()) #6, !dbg !9570
  call void @llvm.dbg.declare(metadata !1322, metadata !9506, metadata !DIExpression()) #6, !dbg !9570
  store i32 1, i32* %tmp.i, align 4, !dbg !9570
  %11 = load i32, i32* %tmp.i, align 4, !dbg !9570
  call void @llvm.dbg.declare(metadata !1322, metadata !9507, metadata !DIExpression()) #6, !dbg !9571
  call void @llvm.dbg.declare(metadata !1322, metadata !9513, metadata !DIExpression()) #6, !dbg !9571
  store i32 1, i32* %tmp8.i, align 4, !dbg !9571
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !9571
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !9572
  call void @arch_local_irq_restore(i64 %13) #11, !dbg !9572
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9573, !srcloc !9517
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !9574
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !9574
  %rlock.i22 = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !9574
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9575
  call void @mv_port_free_dma_mem(%struct.ata_port* %16) #9, !dbg !9576
  ret void, !dbg !9577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_ncq(i8 zeroext %prot) #2 !dbg !9578 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !9581, metadata !DIExpression()), !dbg !9582
  %0 = load i8, i8* %prot.addr, align 1, !dbg !9583
  %conv = zext i8 %0 to i32, !dbg !9583
  %and = and i32 %conv, 4, !dbg !9584
  %tobool = icmp ne i32 %and, 0, !dbg !9583
  ret i1 %tobool, !dbg !9585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_rw_multi_errata_sata24(%struct.ata_queued_cmd* %qc) #2 !dbg !9586 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9587, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !9589, metadata !DIExpression()), !dbg !9590
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9591
  %tf1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !9592
  store %struct.ata_taskfile* %tf1, %struct.ata_taskfile** %tf, align 8, !dbg !9590
  %1 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !9593
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %1, i32 0, i32 0, !dbg !9595
  %2 = load i64, i64* %flags, align 8, !dbg !9595
  %and = and i64 %2, 8, !dbg !9596
  %tobool = icmp ne i64 %and, 0, !dbg !9596
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !9597

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !9598
  %call = call i32 @is_multi_taskfile(%struct.ata_taskfile* %3) #9, !dbg !9599
  %tobool2 = icmp ne i32 %call, 0, !dbg !9599
  br i1 %tobool2, label %if.then, label %if.end10, !dbg !9600

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9601
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 1, !dbg !9604
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9604
  %multi_count = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 17, !dbg !9605
  %6 = load i32, i32* %multi_count, align 8, !dbg !9605
  %cmp = icmp ugt i32 %6, 7, !dbg !9606
  br i1 %cmp, label %if.then3, label %if.end, !dbg !9607

if.then3:                                         ; preds = %if.then
  %7 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !9608
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %7, i32 0, i32 14, !dbg !9610
  %8 = load i8, i8* %command, align 1, !dbg !9610
  %conv = zext i8 %8 to i32, !dbg !9608
  switch i32 %conv, label %sw.epilog [
    i32 197, label %sw.bb
    i32 206, label %sw.bb5
    i32 57, label %sw.bb8
  ], !dbg !9611

sw.bb:                                            ; preds = %if.then3
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !9612
  %command4 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 14, !dbg !9614
  store i8 48, i8* %command4, align 1, !dbg !9615
  br label %sw.epilog, !dbg !9616

sw.bb5:                                           ; preds = %if.then3
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !9617
  %flags6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 0, !dbg !9618
  %11 = load i64, i64* %flags6, align 8, !dbg !9619
  %and7 = and i64 %11, -33, !dbg !9619
  store i64 %and7, i64* %flags6, align 8, !dbg !9619
  br label %sw.bb8, !dbg !9617

sw.bb8:                                           ; preds = %if.then3, %sw.bb5
  %12 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !9620
  %command9 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %12, i32 0, i32 14, !dbg !9621
  store i8 52, i8* %command9, align 1, !dbg !9622
  br label %sw.epilog, !dbg !9623

sw.epilog:                                        ; preds = %if.then3, %sw.bb8, %sw.bb
  br label %if.end, !dbg !9624

if.end:                                           ; preds = %sw.epilog, %if.then
  br label %if.end10, !dbg !9625

if.end10:                                         ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !9626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_crqb_pack_cmd(i16* %cmdw, i8 zeroext %data, i8 zeroext %addr, i32 %last) #2 !dbg !9627 {
entry:
  %cmdw.addr = alloca i16*, align 8
  %data.addr = alloca i8, align 1
  %addr.addr = alloca i8, align 1
  %last.addr = alloca i32, align 4
  %tmp = alloca i16, align 2
  store i16* %cmdw, i16** %cmdw.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %cmdw.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !9636, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.declare(metadata i16* %tmp, metadata !9638, metadata !DIExpression()), !dbg !9639
  %0 = load i8, i8* %data.addr, align 1, !dbg !9640
  %conv = zext i8 %0 to i32, !dbg !9640
  %1 = load i8, i8* %addr.addr, align 1, !dbg !9641
  %conv1 = zext i8 %1 to i32, !dbg !9641
  %shl = shl i32 %conv1, 8, !dbg !9642
  %or = or i32 %conv, %shl, !dbg !9643
  %or2 = or i32 %or, 4096, !dbg !9644
  %2 = load i32, i32* %last.addr, align 4, !dbg !9645
  %tobool = icmp ne i32 %2, 0, !dbg !9645
  %3 = zext i1 %tobool to i64, !dbg !9645
  %cond = select i1 %tobool, i32 32768, i32 0, !dbg !9645
  %or3 = or i32 %or2, %cond, !dbg !9646
  %conv4 = trunc i32 %or3 to i16, !dbg !9640
  store i16 %conv4, i16* %tmp, align 2, !dbg !9639
  %4 = load i16, i16* %tmp, align 2, !dbg !9647
  %5 = load i16*, i16** %cmdw.addr, align 8, !dbg !9648
  store i16 %4, i16* %5, align 2, !dbg !9649
  ret void, !dbg !9650
}

; Function Attrs: noredzone
declare dso_local void @ata_port_printk(%struct.ata_port*, i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_fill_sg(%struct.ata_queued_cmd* %qc) #2 !dbg !9651 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %mv_sg = alloca %struct.mv_sg*, align 8
  %last_sg = alloca %struct.mv_sg*, align 8
  %si = alloca i32, align 4
  %addr = alloca i64, align 8
  %sg_len = alloca i32, align 4
  %offset = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9652, metadata !DIExpression()), !dbg !9653
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !9654, metadata !DIExpression()), !dbg !9655
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9656
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !9657
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9657
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 49, !dbg !9658
  %2 = load i8*, i8** %private_data, align 32, !dbg !9658
  %3 = bitcast i8* %2 to %struct.mv_port_priv*, !dbg !9656
  store %struct.mv_port_priv* %3, %struct.mv_port_priv** %pp, align 8, !dbg !9655
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.declare(metadata %struct.mv_sg** %mv_sg, metadata !9661, metadata !DIExpression()), !dbg !9662
  call void @llvm.dbg.declare(metadata %struct.mv_sg** %last_sg, metadata !9663, metadata !DIExpression()), !dbg !9664
  store %struct.mv_sg* null, %struct.mv_sg** %last_sg, align 8, !dbg !9664
  call void @llvm.dbg.declare(metadata i32* %si, metadata !9665, metadata !DIExpression()), !dbg !9666
  %4 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9667
  %sg_tbl = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %4, i32 0, i32 4, !dbg !9668
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9669
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 8, !dbg !9670
  %6 = load i32, i32* %hw_tag, align 4, !dbg !9670
  %idxprom = zext i32 %6 to i64, !dbg !9667
  %arrayidx = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl, i64 0, i64 %idxprom, !dbg !9667
  %7 = load %struct.mv_sg*, %struct.mv_sg** %arrayidx, align 8, !dbg !9667
  store %struct.mv_sg* %7, %struct.mv_sg** %mv_sg, align 8, !dbg !9671
  store i32 0, i32* %si, align 4, !dbg !9672
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9672
  %sg1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 17, !dbg !9672
  %9 = load %struct.scatterlist*, %struct.scatterlist** %sg1, align 8, !dbg !9672
  store %struct.scatterlist* %9, %struct.scatterlist** %sg, align 8, !dbg !9672
  br label %for.cond, !dbg !9672

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %si, align 4, !dbg !9674
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9674
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 9, !dbg !9674
  %12 = load i32, i32* %n_elem, align 8, !dbg !9674
  %cmp = icmp ult i32 %10, %12, !dbg !9674
  br i1 %cmp, label %for.body, label %for.end, !dbg !9672

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !9676, metadata !DIExpression()), !dbg !9678
  %13 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9679
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %13, i32 0, i32 3, !dbg !9679
  %14 = load i64, i64* %dma_address, align 8, !dbg !9679
  store i64 %14, i64* %addr, align 8, !dbg !9678
  call void @llvm.dbg.declare(metadata i32* %sg_len, metadata !9680, metadata !DIExpression()), !dbg !9681
  %15 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9682
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %15, i32 0, i32 4, !dbg !9682
  %16 = load i32, i32* %dma_length, align 8, !dbg !9682
  store i32 %16, i32* %sg_len, align 4, !dbg !9681
  br label %while.cond, !dbg !9683

while.cond:                                       ; preds = %if.end, %for.body
  %17 = load i32, i32* %sg_len, align 4, !dbg !9684
  %tobool = icmp ne i32 %17, 0, !dbg !9683
  br i1 %tobool, label %while.body, label %while.end, !dbg !9683

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9685, metadata !DIExpression()), !dbg !9687
  %18 = load i64, i64* %addr, align 8, !dbg !9688
  %and = and i64 %18, 65535, !dbg !9689
  %conv = trunc i64 %and to i32, !dbg !9688
  store i32 %conv, i32* %offset, align 4, !dbg !9687
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9690, metadata !DIExpression()), !dbg !9691
  %19 = load i32, i32* %sg_len, align 4, !dbg !9692
  store i32 %19, i32* %len, align 4, !dbg !9691
  %20 = load i32, i32* %offset, align 4, !dbg !9693
  %21 = load i32, i32* %len, align 4, !dbg !9695
  %add = add i32 %20, %21, !dbg !9696
  %cmp2 = icmp ugt i32 %add, 65536, !dbg !9697
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9698

if.then:                                          ; preds = %while.body
  %22 = load i32, i32* %offset, align 4, !dbg !9699
  %sub = sub i32 65536, %22, !dbg !9700
  store i32 %sub, i32* %len, align 4, !dbg !9701
  br label %if.end, !dbg !9702

if.end:                                           ; preds = %if.then, %while.body
  %23 = load i64, i64* %addr, align 8, !dbg !9703
  %and4 = and i64 %23, 4294967295, !dbg !9703
  %conv5 = trunc i64 %and4 to i32, !dbg !9703
  %24 = load %struct.mv_sg*, %struct.mv_sg** %mv_sg, align 8, !dbg !9704
  %addr6 = getelementptr inbounds %struct.mv_sg, %struct.mv_sg* %24, i32 0, i32 0, !dbg !9705
  store i32 %conv5, i32* %addr6, align 4, !dbg !9706
  %25 = load i64, i64* %addr, align 8, !dbg !9707
  %shr = lshr i64 %25, 16, !dbg !9707
  %shr7 = lshr i64 %shr, 16, !dbg !9707
  %conv8 = trunc i64 %shr7 to i32, !dbg !9707
  %26 = load %struct.mv_sg*, %struct.mv_sg** %mv_sg, align 8, !dbg !9708
  %addr_hi = getelementptr inbounds %struct.mv_sg, %struct.mv_sg* %26, i32 0, i32 2, !dbg !9709
  store i32 %conv8, i32* %addr_hi, align 4, !dbg !9710
  %27 = load i32, i32* %len, align 4, !dbg !9711
  %and9 = and i32 %27, 65535, !dbg !9711
  %28 = load %struct.mv_sg*, %struct.mv_sg** %mv_sg, align 8, !dbg !9712
  %flags_size = getelementptr inbounds %struct.mv_sg, %struct.mv_sg* %28, i32 0, i32 1, !dbg !9713
  store i32 %and9, i32* %flags_size, align 4, !dbg !9714
  %29 = load %struct.mv_sg*, %struct.mv_sg** %mv_sg, align 8, !dbg !9715
  %reserved = getelementptr inbounds %struct.mv_sg, %struct.mv_sg* %29, i32 0, i32 3, !dbg !9716
  store i32 0, i32* %reserved, align 4, !dbg !9717
  %30 = load i32, i32* %len, align 4, !dbg !9718
  %31 = load i32, i32* %sg_len, align 4, !dbg !9719
  %sub10 = sub i32 %31, %30, !dbg !9719
  store i32 %sub10, i32* %sg_len, align 4, !dbg !9719
  %32 = load i32, i32* %len, align 4, !dbg !9720
  %conv11 = zext i32 %32 to i64, !dbg !9720
  %33 = load i64, i64* %addr, align 8, !dbg !9721
  %add12 = add i64 %33, %conv11, !dbg !9721
  store i64 %add12, i64* %addr, align 8, !dbg !9721
  %34 = load %struct.mv_sg*, %struct.mv_sg** %mv_sg, align 8, !dbg !9722
  store %struct.mv_sg* %34, %struct.mv_sg** %last_sg, align 8, !dbg !9723
  %35 = load %struct.mv_sg*, %struct.mv_sg** %mv_sg, align 8, !dbg !9724
  %incdec.ptr = getelementptr %struct.mv_sg, %struct.mv_sg* %35, i32 1, !dbg !9724
  store %struct.mv_sg* %incdec.ptr, %struct.mv_sg** %mv_sg, align 8, !dbg !9724
  br label %while.cond, !dbg !9683, !llvm.loop !9725

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !9727

for.inc:                                          ; preds = %while.end
  %36 = load i32, i32* %si, align 4, !dbg !9674
  %inc = add i32 %36, 1, !dbg !9674
  store i32 %inc, i32* %si, align 4, !dbg !9674
  %37 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9674
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %37) #9, !dbg !9674
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !9674
  br label %for.cond, !dbg !9674, !llvm.loop !9728

for.end:                                          ; preds = %for.cond
  %38 = load %struct.mv_sg*, %struct.mv_sg** %last_sg, align 8, !dbg !9730
  %tobool13 = icmp ne %struct.mv_sg* %38, null, !dbg !9730
  %lnot = xor i1 %tobool13, true, !dbg !9730
  %lnot14 = xor i1 %lnot, true, !dbg !9730
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !9730
  %conv15 = sext i32 %lnot.ext to i64, !dbg !9730
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !9730
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !9732

if.then17:                                        ; preds = %for.end
  %39 = load %struct.mv_sg*, %struct.mv_sg** %last_sg, align 8, !dbg !9733
  %flags_size18 = getelementptr inbounds %struct.mv_sg, %struct.mv_sg* %39, i32 0, i32 1, !dbg !9734
  %40 = load i32, i32* %flags_size18, align 4, !dbg !9735
  %or = or i32 %40, -2147483648, !dbg !9735
  store i32 %or, i32* %flags_size18, align 4, !dbg !9735
  br label %if.end19, !dbg !9733

if.end19:                                         ; preds = %if.then17, %for.end
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9736, !srcloc !9737
  ret void, !dbg !9738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_multi_taskfile(%struct.ata_taskfile* %tf) #2 !dbg !9739 {
entry:
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9744
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 14, !dbg !9745
  %1 = load i8, i8* %command, align 1, !dbg !9745
  %conv = zext i8 %1 to i32, !dbg !9744
  %cmp = icmp eq i32 %conv, 196, !dbg !9746
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !9747

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9748
  %command2 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 14, !dbg !9749
  %3 = load i8, i8* %command2, align 1, !dbg !9749
  %conv3 = zext i8 %3 to i32, !dbg !9748
  %cmp4 = icmp eq i32 %conv3, 197, !dbg !9750
  br i1 %cmp4, label %lor.end, label %lor.lhs.false6, !dbg !9751

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %4 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9752
  %command7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %4, i32 0, i32 14, !dbg !9753
  %5 = load i8, i8* %command7, align 1, !dbg !9753
  %conv8 = zext i8 %5 to i32, !dbg !9752
  %cmp9 = icmp eq i32 %conv8, 41, !dbg !9754
  br i1 %cmp9, label %lor.end, label %lor.lhs.false11, !dbg !9755

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9756
  %command12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 14, !dbg !9757
  %7 = load i8, i8* %command12, align 1, !dbg !9757
  %conv13 = zext i8 %7 to i32, !dbg !9756
  %cmp14 = icmp eq i32 %conv13, 57, !dbg !9758
  br i1 %cmp14, label %lor.end, label %lor.rhs, !dbg !9759

lor.rhs:                                          ; preds = %lor.lhs.false11
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9760
  %command16 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 14, !dbg !9761
  %9 = load i8, i8* %command16, align 1, !dbg !9761
  %conv17 = zext i8 %9 to i32, !dbg !9760
  %cmp18 = icmp eq i32 %conv17, 206, !dbg !9762
  br label %lor.end, !dbg !9759

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false, %entry
  %10 = phi i1 [ true, %lor.lhs.false11 ], [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp18, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !9759
  ret i32 %lor.ext, !dbg !9763
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mv_ap_base(%struct.ata_port* %ap) #2 !dbg !9764 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9769
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !9770
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9770
  %call = call i8* @mv_host_base(%struct.ata_host* %1) #9, !dbg !9771
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9772
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 7, !dbg !9773
  %3 = load i32, i32* %port_no, align 4, !dbg !9773
  %call1 = call i8* @mv_port_base(i8* %call, i32 %3) #9, !dbg !9774
  ret i8* %call1, !dbg !9775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_start_edma(%struct.ata_port* %ap, i8* %port_mmio, %struct.mv_port_priv* %pp, i8 zeroext %protocol) #2 !dbg !9776 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio.addr = alloca i8*, align 8
  %pp.addr = alloca %struct.mv_port_priv*, align 8
  %protocol.addr = alloca i8, align 1
  %want_ncq = alloca i32, align 4
  %using_ncq = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  store i8* %port_mmio, i8** %port_mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_mmio.addr, metadata !9781, metadata !DIExpression()), !dbg !9782
  store %struct.mv_port_priv* %pp, %struct.mv_port_priv** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  store i8 %protocol, i8* %protocol.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %protocol.addr, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata i32* %want_ncq, metadata !9787, metadata !DIExpression()), !dbg !9788
  %0 = load i8, i8* %protocol.addr, align 1, !dbg !9789
  %conv = zext i8 %0 to i32, !dbg !9789
  %cmp = icmp eq i32 %conv, 6, !dbg !9790
  %conv1 = zext i1 %cmp to i32, !dbg !9790
  store i32 %conv1, i32* %want_ncq, align 4, !dbg !9788
  %1 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !9791
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %1, i32 0, i32 8, !dbg !9793
  %2 = load i32, i32* %pp_flags, align 8, !dbg !9793
  %and = and i32 %2, 1, !dbg !9794
  %tobool = icmp ne i32 %and, 0, !dbg !9794
  br i1 %tobool, label %if.then, label %if.end9, !dbg !9795

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %using_ncq, metadata !9796, metadata !DIExpression()), !dbg !9798
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !9799
  %pp_flags2 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 8, !dbg !9800
  %4 = load i32, i32* %pp_flags2, align 8, !dbg !9800
  %and3 = and i32 %4, 2, !dbg !9801
  %cmp4 = icmp ne i32 %and3, 0, !dbg !9802
  %conv5 = zext i1 %cmp4 to i32, !dbg !9802
  store i32 %conv5, i32* %using_ncq, align 4, !dbg !9798
  %5 = load i32, i32* %want_ncq, align 4, !dbg !9803
  %6 = load i32, i32* %using_ncq, align 4, !dbg !9805
  %cmp6 = icmp ne i32 %5, %6, !dbg !9806
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !9807

if.then8:                                         ; preds = %if.then
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9808
  %call = call i32 @mv_stop_edma(%struct.ata_port* %7) #9, !dbg !9809
  br label %if.end, !dbg !9809

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end9, !dbg !9810

if.end9:                                          ; preds = %if.end, %entry
  %8 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !9811
  %pp_flags10 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %8, i32 0, i32 8, !dbg !9813
  %9 = load i32, i32* %pp_flags10, align 8, !dbg !9813
  %and11 = and i32 %9, 1, !dbg !9814
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9814
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !9815

if.then13:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9816, metadata !DIExpression()), !dbg !9818
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9819
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 31, !dbg !9820
  %11 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9820
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %11, i32 0, i32 5, !dbg !9821
  %12 = load i8*, i8** %private_data, align 8, !dbg !9821
  %13 = bitcast i8* %12 to %struct.mv_host_priv*, !dbg !9819
  store %struct.mv_host_priv* %13, %struct.mv_host_priv** %hpriv, align 8, !dbg !9818
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9822
  %15 = load i32, i32* %want_ncq, align 4, !dbg !9823
  call void @mv_edma_cfg(%struct.ata_port* %14, i32 %15, i32 1) #9, !dbg !9824
  %16 = load i8*, i8** %port_mmio.addr, align 8, !dbg !9825
  %17 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9826
  %18 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !9827
  call void @mv_set_edma_ptrs(i8* %16, %struct.mv_host_priv* %17, %struct.mv_port_priv* %18) #9, !dbg !9828
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9829
  %20 = load i8*, i8** %port_mmio.addr, align 8, !dbg !9830
  call void @mv_clear_and_enable_port_irqs(%struct.ata_port* %19, i8* %20, i32 3) #9, !dbg !9831
  %21 = load i8*, i8** %port_mmio.addr, align 8, !dbg !9832
  %add.ptr = getelementptr i8, i8* %21, i64 40, !dbg !9833
  call void @writelfl(i64 1, i8* %add.ptr) #9, !dbg !9834
  %22 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !9835
  %pp_flags14 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %22, i32 0, i32 8, !dbg !9836
  %23 = load i32, i32* %pp_flags14, align 8, !dbg !9837
  %or = or i32 %23, 1, !dbg !9837
  store i32 %or, i32* %pp_flags14, align 8, !dbg !9837
  br label %if.end15, !dbg !9838

if.end15:                                         ; preds = %if.then13, %if.end9
  ret void, !dbg !9839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writelfl(i64 %data, i8* %addr) #2 !dbg !9840 {
entry:
  %data.addr = alloca i64, align 8
  %addr.addr = alloca i8*, align 8
  store i64 %data, i64* %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %data.addr, metadata !9843, metadata !DIExpression()), !dbg !9844
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9845, metadata !DIExpression()), !dbg !9846
  %0 = load i64, i64* %data.addr, align 8, !dbg !9847
  %conv = trunc i64 %0 to i32, !dbg !9847
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9848
  call void @writel(i32 %conv, i8* %1) #9, !dbg !9849
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !9850
  %call = call i32 @readl(i8* %2) #9, !dbg !9851
  ret void, !dbg !9852
}

; Function Attrs: noredzone
declare dso_local void @ata_link_printk(%struct.ata_link*, i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_stop_edma(%struct.ata_port* %ap) #2 !dbg !9853 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %err = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !9856, metadata !DIExpression()), !dbg !9857
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9858
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !9859
  store i8* %call, i8** %port_mmio, align 8, !dbg !9857
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !9860, metadata !DIExpression()), !dbg !9861
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9862
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 49, !dbg !9863
  %2 = load i8*, i8** %private_data, align 32, !dbg !9863
  %3 = bitcast i8* %2 to %struct.mv_port_priv*, !dbg !9862
  store %struct.mv_port_priv* %3, %struct.mv_port_priv** %pp, align 8, !dbg !9861
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9864, metadata !DIExpression()), !dbg !9865
  store i32 0, i32* %err, align 4, !dbg !9865
  %4 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9866
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %4, i32 0, i32 8, !dbg !9868
  %5 = load i32, i32* %pp_flags, align 8, !dbg !9868
  %and = and i32 %5, 1, !dbg !9869
  %tobool = icmp ne i32 %and, 0, !dbg !9869
  br i1 %tobool, label %if.end, label %if.then, !dbg !9870

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9871
  br label %return, !dbg !9871

if.end:                                           ; preds = %entry
  %6 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !9872
  %pp_flags1 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %6, i32 0, i32 8, !dbg !9873
  %7 = load i32, i32* %pp_flags1, align 8, !dbg !9874
  %and2 = and i32 %7, -2, !dbg !9874
  store i32 %and2, i32* %pp_flags1, align 8, !dbg !9874
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9875
  call void @mv_wait_for_edma_empty_idle(%struct.ata_port* %8) #9, !dbg !9876
  %9 = load i8*, i8** %port_mmio, align 8, !dbg !9877
  %call3 = call i32 @mv_stop_edma_engine(i8* %9) #9, !dbg !9879
  %tobool4 = icmp ne i32 %call3, 0, !dbg !9879
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9880

if.then5:                                         ; preds = %if.end
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9881
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !9881
  store i32 -5, i32* %err, align 4, !dbg !9883
  br label %if.end6, !dbg !9884

if.end6:                                          ; preds = %if.then5, %if.end
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9885
  call void @mv_edma_cfg(%struct.ata_port* %11, i32 0, i32 0) #9, !dbg !9886
  %12 = load i32, i32* %err, align 4, !dbg !9887
  store i32 %12, i32* %retval, align 4, !dbg !9888
  br label %return, !dbg !9888

return:                                           ; preds = %if.end6, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9889
  ret i32 %13, !dbg !9889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_clear_and_enable_port_irqs(%struct.ata_port* %ap, i8* %port_mmio, i32 %port_irqs) #2 !dbg !9890 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio.addr = alloca i8*, align 8
  %port_irqs.addr = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %hardport = alloca i32, align 4
  %hc_mmio = alloca i8*, align 8
  %hc_irq_cause = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9893, metadata !DIExpression()), !dbg !9894
  store i8* %port_mmio, i8** %port_mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_mmio.addr, metadata !9895, metadata !DIExpression()), !dbg !9896
  store i32 %port_irqs, i32* %port_irqs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_irqs.addr, metadata !9897, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !9899, metadata !DIExpression()), !dbg !9900
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9901
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !9902
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9902
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 5, !dbg !9903
  %2 = load i8*, i8** %private_data, align 8, !dbg !9903
  %3 = bitcast i8* %2 to %struct.mv_host_priv*, !dbg !9901
  store %struct.mv_host_priv* %3, %struct.mv_host_priv** %hpriv, align 8, !dbg !9900
  call void @llvm.dbg.declare(metadata i32* %hardport, metadata !9904, metadata !DIExpression()), !dbg !9905
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9906
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 7, !dbg !9907
  %5 = load i32, i32* %port_no, align 4, !dbg !9907
  %call = call i32 @mv_hardport_from_port(i32 %5) #9, !dbg !9908
  store i32 %call, i32* %hardport, align 4, !dbg !9905
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !9909, metadata !DIExpression()), !dbg !9910
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9911
  %host1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 31, !dbg !9912
  %7 = load %struct.ata_host*, %struct.ata_host** %host1, align 8, !dbg !9912
  %call2 = call i8* @mv_host_base(%struct.ata_host* %7) #9, !dbg !9913
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9914
  %port_no3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 7, !dbg !9915
  %9 = load i32, i32* %port_no3, align 4, !dbg !9915
  %call4 = call i8* @mv_hc_base_from_port(i8* %call2, i32 %9) #9, !dbg !9916
  store i8* %call4, i8** %hc_mmio, align 8, !dbg !9910
  call void @llvm.dbg.declare(metadata i32* %hc_irq_cause, metadata !9917, metadata !DIExpression()), !dbg !9918
  %10 = load i8*, i8** %port_mmio.addr, align 8, !dbg !9919
  %add.ptr = getelementptr i8, i8* %10, i64 8, !dbg !9920
  call void @writelfl(i64 0, i8* %add.ptr) #9, !dbg !9921
  %11 = load i32, i32* %hardport, align 4, !dbg !9922
  %shl = shl i32 257, %11, !dbg !9923
  %neg = xor i32 %shl, -1, !dbg !9924
  store i32 %neg, i32* %hc_irq_cause, align 4, !dbg !9925
  %12 = load i32, i32* %hc_irq_cause, align 4, !dbg !9926
  %conv = zext i32 %12 to i64, !dbg !9926
  %13 = load i8*, i8** %hc_mmio, align 8, !dbg !9927
  %add.ptr5 = getelementptr i8, i8* %13, i64 20, !dbg !9928
  call void @writelfl(i64 %conv, i8* %add.ptr5) #9, !dbg !9929
  %14 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !9930
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %14, i32 0, i32 0, !dbg !9930
  %15 = load i32, i32* %hp_flags, align 8, !dbg !9930
  %and = and i32 %15, 256, !dbg !9930
  %tobool = icmp ne i32 %and, 0, !dbg !9930
  br i1 %tobool, label %if.then, label %if.end, !dbg !9932

if.then:                                          ; preds = %entry
  %16 = load i8*, i8** %port_mmio.addr, align 8, !dbg !9933
  %add.ptr6 = getelementptr i8, i8* %16, i64 868, !dbg !9934
  call void @writelfl(i64 0, i8* %add.ptr6) #9, !dbg !9935
  br label %if.end, !dbg !9935

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9936
  %18 = load i32, i32* %port_irqs.addr, align 4, !dbg !9937
  call void @mv_enable_port_irqs(%struct.ata_port* %17, i32 %18) #9, !dbg !9938
  ret void, !dbg !9939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_pmp_select(%struct.ata_port* %ap, i32 %pmp) #2 !dbg !9940 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %pmp.addr = alloca i32, align 4
  %port_mmio = alloca i8*, align 8
  %reg = alloca i32, align 4
  %old = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9943, metadata !DIExpression()), !dbg !9944
  store i32 %pmp, i32* %pmp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pmp.addr, metadata !9945, metadata !DIExpression()), !dbg !9946
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9947
  %call = call zeroext i1 @sata_pmp_supported(%struct.ata_port* %0) #9, !dbg !9949
  br i1 %call, label %if.then, label %if.end6, !dbg !9950

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !9951, metadata !DIExpression()), !dbg !9953
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9954
  %call1 = call i8* @mv_ap_base(%struct.ata_port* %1) #9, !dbg !9955
  store i8* %call1, i8** %port_mmio, align 8, !dbg !9953
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9956, metadata !DIExpression()), !dbg !9957
  %2 = load i8*, i8** %port_mmio, align 8, !dbg !9958
  %add.ptr = getelementptr i8, i8* %2, i64 836, !dbg !9959
  %call2 = call i32 @readl(i8* %add.ptr) #9, !dbg !9960
  store i32 %call2, i32* %reg, align 4, !dbg !9957
  call void @llvm.dbg.declare(metadata i32* %old, metadata !9961, metadata !DIExpression()), !dbg !9962
  %3 = load i32, i32* %reg, align 4, !dbg !9963
  %and = and i32 %3, 15, !dbg !9964
  store i32 %and, i32* %old, align 4, !dbg !9962
  %4 = load i32, i32* %old, align 4, !dbg !9965
  %5 = load i32, i32* %pmp.addr, align 4, !dbg !9967
  %cmp = icmp ne i32 %4, %5, !dbg !9968
  br i1 %cmp, label %if.then3, label %if.end, !dbg !9969

if.then3:                                         ; preds = %if.then
  %6 = load i32, i32* %reg, align 4, !dbg !9970
  %and4 = and i32 %6, -16, !dbg !9972
  %7 = load i32, i32* %pmp.addr, align 4, !dbg !9973
  %or = or i32 %and4, %7, !dbg !9974
  store i32 %or, i32* %reg, align 4, !dbg !9975
  %8 = load i32, i32* %reg, align 4, !dbg !9976
  %conv = zext i32 %8 to i64, !dbg !9976
  %9 = load i8*, i8** %port_mmio, align 8, !dbg !9977
  %add.ptr5 = getelementptr i8, i8* %9, i64 836, !dbg !9978
  call void @writelfl(i64 %conv, i8* %add.ptr5) #9, !dbg !9979
  br label %if.end, !dbg !9980

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !9981

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !9982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_qc_issue_fis(%struct.ata_queued_cmd* %qc) #2 !dbg !9983 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %link = alloca %struct.ata_link*, align 8
  %fis = alloca [5 x i32], align 16
  %err = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9984, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9986, metadata !DIExpression()), !dbg !9987
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9988
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !9989
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !9989
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9987
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !9990, metadata !DIExpression()), !dbg !9991
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9992
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 49, !dbg !9993
  %3 = load i8*, i8** %private_data, align 32, !dbg !9993
  %4 = bitcast i8* %3 to %struct.mv_port_priv*, !dbg !9992
  store %struct.mv_port_priv* %4, %struct.mv_port_priv** %pp, align 8, !dbg !9991
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !9994, metadata !DIExpression()), !dbg !9995
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9996
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 1, !dbg !9997
  %6 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9997
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 0, !dbg !9998
  %7 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !9998
  store %struct.ata_link* %7, %struct.ata_link** %link, align 8, !dbg !9995
  call void @llvm.dbg.declare(metadata [5 x i32]* %fis, metadata !9999, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10002, metadata !DIExpression()), !dbg !10003
  store i32 0, i32* %err, align 4, !dbg !10003
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10004
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 4, !dbg !10005
  %9 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !10006
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %9, i32 0, i32 1, !dbg !10007
  %10 = load i32, i32* %pmp, align 8, !dbg !10007
  %conv = trunc i32 %10 to i8, !dbg !10006
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %fis, i64 0, i64 0, !dbg !10008
  %11 = bitcast i32* %arraydecay to i8*, !dbg !10009
  call void @ata_tf_to_fis(%struct.ata_taskfile* %tf, i8 zeroext %conv, i32 1, i8* %11) #9, !dbg !10010
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10011
  %arraydecay3 = getelementptr inbounds [5 x i32], [5 x i32]* %fis, i64 0, i64 0, !dbg !10012
  %call = call i32 @mv_send_fis(%struct.ata_port* %12, i32* %arraydecay3, i32 5) #9, !dbg !10013
  store i32 %call, i32* %err, align 4, !dbg !10014
  %13 = load i32, i32* %err, align 4, !dbg !10015
  %tobool = icmp ne i32 %13, 0, !dbg !10015
  br i1 %tobool, label %if.then, label %if.end, !dbg !10017

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %err, align 4, !dbg !10018
  store i32 %14, i32* %retval, align 4, !dbg !10019
  br label %return, !dbg !10019

if.end:                                           ; preds = %entry
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10020
  %tf4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 4, !dbg !10021
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf4, i32 0, i32 1, !dbg !10022
  %16 = load i8, i8* %protocol, align 8, !dbg !10022
  %conv5 = zext i8 %16 to i32, !dbg !10020
  switch i32 %conv5, label %sw.default [
    i32 9, label %sw.bb
    i32 8, label %sw.bb6
    i32 1, label %sw.bb7
  ], !dbg !10023

sw.bb:                                            ; preds = %if.end
  %17 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10024
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %17, i32 0, i32 8, !dbg !10026
  %18 = load i32, i32* %pp_flags, align 8, !dbg !10027
  %or = or i32 %18, 16, !dbg !10027
  store i32 %or, i32* %pp_flags, align 8, !dbg !10027
  br label %sw.bb6, !dbg !10024

sw.bb6:                                           ; preds = %if.end, %sw.bb
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10028
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 37, !dbg !10029
  store i32 1, i32* %hsm_task_state, align 16, !dbg !10030
  br label %sw.epilog, !dbg !10031

sw.bb7:                                           ; preds = %if.end
  %20 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10032
  %pp_flags8 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %20, i32 0, i32 8, !dbg !10033
  %21 = load i32, i32* %pp_flags8, align 8, !dbg !10034
  %or9 = or i32 %21, 16, !dbg !10034
  store i32 %or9, i32* %pp_flags8, align 8, !dbg !10034
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10035
  %tf10 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %22, i32 0, i32 4, !dbg !10037
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf10, i32 0, i32 0, !dbg !10038
  %23 = load i64, i64* %flags, align 8, !dbg !10038
  %and = and i64 %23, 8, !dbg !10039
  %tobool11 = icmp ne i64 %and, 0, !dbg !10039
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !10040

if.then12:                                        ; preds = %sw.bb7
  %24 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10041
  %hsm_task_state13 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %24, i32 0, i32 37, !dbg !10042
  store i32 1, i32* %hsm_task_state13, align 16, !dbg !10043
  br label %if.end15, !dbg !10041

if.else:                                          ; preds = %sw.bb7
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10044
  %hsm_task_state14 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 37, !dbg !10045
  store i32 2, i32* %hsm_task_state14, align 16, !dbg !10046
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  br label %sw.epilog, !dbg !10047

sw.default:                                       ; preds = %if.end
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10048
  %hsm_task_state16 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 37, !dbg !10049
  store i32 3, i32* %hsm_task_state16, align 16, !dbg !10050
  br label %sw.epilog, !dbg !10051

sw.epilog:                                        ; preds = %sw.default, %if.end15, %sw.bb6
  %27 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10052
  %tf17 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %27, i32 0, i32 4, !dbg !10054
  %flags18 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf17, i32 0, i32 0, !dbg !10055
  %28 = load i64, i64* %flags18, align 8, !dbg !10055
  %and19 = and i64 %28, 64, !dbg !10056
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10056
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10057

if.then21:                                        ; preds = %sw.epilog
  %29 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !10058
  call void @ata_sff_queue_pio_task(%struct.ata_link* %29, i64 0) #9, !dbg !10059
  br label %if.end22, !dbg !10059

if.end22:                                         ; preds = %if.then21, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !10060
  br label %return, !dbg !10060

return:                                           ; preds = %if.end22, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !10061
  ret i32 %30, !dbg !10061
}

; Function Attrs: noredzone
declare dso_local i32 @ata_bmdma_qc_issue(%struct.ata_queued_cmd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mv_host_base(%struct.ata_host* %host) #2 !dbg !10062 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !10067, metadata !DIExpression()), !dbg !10068
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10069
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !10070
  %1 = load i8*, i8** %private_data, align 8, !dbg !10070
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !10069
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !10068
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10071
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 6, !dbg !10072
  %4 = load i8*, i8** %base, align 8, !dbg !10072
  ret i8* %4, !dbg !10073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_edma_cfg(%struct.ata_port* %ap, i32 %want_ncq, i32 %want_edma) #2 !dbg !10074 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %want_ncq.addr = alloca i32, align 4
  %want_edma.addr = alloca i32, align 4
  %cfg = alloca i32, align 4
  %pp = alloca %struct.mv_port_priv*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %port_mmio = alloca i8*, align 8
  %want_fbs = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10077, metadata !DIExpression()), !dbg !10078
  store i32 %want_ncq, i32* %want_ncq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %want_ncq.addr, metadata !10079, metadata !DIExpression()), !dbg !10080
  store i32 %want_edma, i32* %want_edma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %want_edma.addr, metadata !10081, metadata !DIExpression()), !dbg !10082
  call void @llvm.dbg.declare(metadata i32* %cfg, metadata !10083, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !10085, metadata !DIExpression()), !dbg !10086
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10087
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !10088
  %1 = load i8*, i8** %private_data, align 32, !dbg !10088
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !10087
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !10086
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !10089, metadata !DIExpression()), !dbg !10090
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10091
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 31, !dbg !10092
  %4 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10092
  %private_data1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %4, i32 0, i32 5, !dbg !10093
  %5 = load i8*, i8** %private_data1, align 8, !dbg !10093
  %6 = bitcast i8* %5 to %struct.mv_host_priv*, !dbg !10091
  store %struct.mv_host_priv* %6, %struct.mv_host_priv** %hpriv, align 8, !dbg !10090
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !10094, metadata !DIExpression()), !dbg !10095
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10096
  %call = call i8* @mv_ap_base(%struct.ata_port* %7) #9, !dbg !10097
  store i8* %call, i8** %port_mmio, align 8, !dbg !10095
  store i32 31, i32* %cfg, align 4, !dbg !10098
  %8 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10099
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %8, i32 0, i32 8, !dbg !10100
  %9 = load i32, i32* %pp_flags, align 8, !dbg !10101
  %and = and i32 %9, -23, !dbg !10101
  store i32 %and, i32* %pp_flags, align 8, !dbg !10101
  %10 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10102
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %10, i32 0, i32 0, !dbg !10102
  %11 = load i32, i32* %hp_flags, align 8, !dbg !10102
  %and2 = and i32 %11, 64, !dbg !10102
  %tobool = icmp ne i32 %and2, 0, !dbg !10102
  br i1 %tobool, label %if.then, label %if.else, !dbg !10104

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %cfg, align 4, !dbg !10105
  %or = or i32 %12, 256, !dbg !10105
  store i32 %or, i32* %cfg, align 4, !dbg !10105
  br label %if.end49, !dbg !10106

if.else:                                          ; preds = %entry
  %13 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10107
  %hp_flags3 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %13, i32 0, i32 0, !dbg !10107
  %14 = load i32, i32* %hp_flags3, align 8, !dbg !10107
  %and4 = and i32 %14, 128, !dbg !10107
  %tobool5 = icmp ne i32 %and4, 0, !dbg !10107
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !10109

if.then6:                                         ; preds = %if.else
  %15 = load i32, i32* %cfg, align 4, !dbg !10110
  %or7 = or i32 %15, 10240, !dbg !10110
  store i32 %or7, i32* %cfg, align 4, !dbg !10110
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10112
  %17 = load i32, i32* %want_ncq.addr, align 4, !dbg !10113
  call void @mv_60x1_errata_sata25(%struct.ata_port* %16, i32 %17) #9, !dbg !10114
  br label %if.end48, !dbg !10115

if.else8:                                         ; preds = %if.else
  %18 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10116
  %hp_flags9 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %18, i32 0, i32 0, !dbg !10116
  %19 = load i32, i32* %hp_flags9, align 8, !dbg !10116
  %and10 = and i32 %19, 256, !dbg !10116
  %tobool11 = icmp ne i32 %and10, 0, !dbg !10116
  br i1 %tobool11, label %if.then12, label %if.end47, !dbg !10118

if.then12:                                        ; preds = %if.else8
  call void @llvm.dbg.declare(metadata i32* %want_fbs, metadata !10119, metadata !DIExpression()), !dbg !10121
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10122
  %call13 = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %20) #9, !dbg !10123
  %conv = zext i1 %call13 to i32, !dbg !10123
  store i32 %conv, i32* %want_fbs, align 4, !dbg !10121
  %21 = load i32, i32* %want_ncq.addr, align 4, !dbg !10124
  %22 = load i32, i32* %want_fbs, align 4, !dbg !10125
  %and14 = and i32 %22, %21, !dbg !10125
  store i32 %and14, i32* %want_fbs, align 4, !dbg !10125
  %23 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10126
  %24 = load i32, i32* %want_ncq.addr, align 4, !dbg !10127
  %25 = load i32, i32* %want_fbs, align 4, !dbg !10128
  call void @mv_config_fbs(%struct.ata_port* %23, i32 %24, i32 %25) #9, !dbg !10129
  %26 = load i32, i32* %want_fbs, align 4, !dbg !10130
  %tobool15 = icmp ne i32 %26, 0, !dbg !10130
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !10132

if.then16:                                        ; preds = %if.then12
  %27 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10133
  %pp_flags17 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %27, i32 0, i32 8, !dbg !10135
  %28 = load i32, i32* %pp_flags17, align 8, !dbg !10136
  %or18 = or i32 %28, 4, !dbg !10136
  store i32 %or18, i32* %pp_flags17, align 8, !dbg !10136
  %29 = load i32, i32* %cfg, align 4, !dbg !10137
  %or19 = or i32 %29, 65536, !dbg !10137
  store i32 %or19, i32* %cfg, align 4, !dbg !10137
  br label %if.end, !dbg !10138

if.end:                                           ; preds = %if.then16, %if.then12
  %30 = load i32, i32* %cfg, align 4, !dbg !10139
  %or20 = or i32 %30, 8388608, !dbg !10139
  store i32 %or20, i32* %cfg, align 4, !dbg !10139
  %31 = load i32, i32* %want_edma.addr, align 4, !dbg !10140
  %tobool21 = icmp ne i32 %31, 0, !dbg !10140
  br i1 %tobool21, label %if.then22, label %if.end30, !dbg !10142

if.then22:                                        ; preds = %if.end
  %32 = load i32, i32* %cfg, align 4, !dbg !10143
  %or23 = or i32 %32, 4194304, !dbg !10143
  store i32 %or23, i32* %cfg, align 4, !dbg !10143
  %33 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10145
  %hp_flags24 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %33, i32 0, i32 0, !dbg !10145
  %34 = load i32, i32* %hp_flags24, align 8, !dbg !10145
  %and25 = and i32 %34, 2048, !dbg !10145
  %tobool26 = icmp ne i32 %and25, 0, !dbg !10145
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !10147

if.then27:                                        ; preds = %if.then22
  %35 = load i32, i32* %cfg, align 4, !dbg !10148
  %or28 = or i32 %35, 262144, !dbg !10148
  store i32 %or28, i32* %cfg, align 4, !dbg !10148
  br label %if.end29, !dbg !10149

if.end29:                                         ; preds = %if.then27, %if.then22
  br label %if.end30, !dbg !10150

if.end30:                                         ; preds = %if.end29, %if.end
  %36 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10151
  %hp_flags31 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %36, i32 0, i32 0, !dbg !10153
  %37 = load i32, i32* %hp_flags31, align 8, !dbg !10153
  %and32 = and i32 %37, 1024, !dbg !10154
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10154
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !10155

if.then34:                                        ; preds = %if.end30
  %38 = load i32, i32* %cfg, align 4, !dbg !10156
  %or35 = or i32 %38, 131072, !dbg !10156
  store i32 %or35, i32* %cfg, align 4, !dbg !10156
  br label %if.end36, !dbg !10157

if.end36:                                         ; preds = %if.then34, %if.end30
  %39 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10158
  %40 = load i32, i32* %want_edma.addr, align 4, !dbg !10159
  %tobool37 = icmp ne i32 %40, 0, !dbg !10160
  %lnot = xor i1 %tobool37, true, !dbg !10160
  %lnot.ext = zext i1 %lnot to i32, !dbg !10160
  call void @mv_bmdma_enable_iie(%struct.ata_port* %39, i32 %lnot.ext) #9, !dbg !10161
  %41 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10162
  %hp_flags38 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %41, i32 0, i32 0, !dbg !10162
  %42 = load i32, i32* %hp_flags38, align 8, !dbg !10162
  %and39 = and i32 %42, 2048, !dbg !10162
  %tobool40 = icmp ne i32 %and39, 0, !dbg !10162
  br i1 %tobool40, label %if.then41, label %if.end46, !dbg !10164

if.then41:                                        ; preds = %if.end36
  %43 = load i32, i32* %want_ncq.addr, align 4, !dbg !10165
  %tobool42 = icmp ne i32 %43, 0, !dbg !10165
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !10168

if.then43:                                        ; preds = %if.then41
  %44 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10169
  call void @mv_soc_led_blink_enable(%struct.ata_port* %44) #9, !dbg !10170
  br label %if.end45, !dbg !10170

if.else44:                                        ; preds = %if.then41
  %45 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10171
  call void @mv_soc_led_blink_disable(%struct.ata_port* %45) #9, !dbg !10172
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then43
  br label %if.end46, !dbg !10173

if.end46:                                         ; preds = %if.end45, %if.end36
  br label %if.end47, !dbg !10174

if.end47:                                         ; preds = %if.end46, %if.else8
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then6
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then
  %46 = load i32, i32* %want_ncq.addr, align 4, !dbg !10175
  %tobool50 = icmp ne i32 %46, 0, !dbg !10175
  br i1 %tobool50, label %if.then51, label %if.end55, !dbg !10177

if.then51:                                        ; preds = %if.end49
  %47 = load i32, i32* %cfg, align 4, !dbg !10178
  %or52 = or i32 %47, 32, !dbg !10178
  store i32 %or52, i32* %cfg, align 4, !dbg !10178
  %48 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10180
  %pp_flags53 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %48, i32 0, i32 8, !dbg !10181
  %49 = load i32, i32* %pp_flags53, align 8, !dbg !10182
  %or54 = or i32 %49, 2, !dbg !10182
  store i32 %or54, i32* %pp_flags53, align 8, !dbg !10182
  br label %if.end55, !dbg !10183

if.end55:                                         ; preds = %if.then51, %if.end49
  %50 = load i32, i32* %cfg, align 4, !dbg !10184
  %conv56 = zext i32 %50 to i64, !dbg !10184
  %51 = load i8*, i8** %port_mmio, align 8, !dbg !10185
  %add.ptr = getelementptr i8, i8* %51, i64 0, !dbg !10186
  call void @writelfl(i64 %conv56, i8* %add.ptr) #9, !dbg !10187
  ret void, !dbg !10188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_set_edma_ptrs(i8* %port_mmio, %struct.mv_host_priv* %hpriv, %struct.mv_port_priv* %pp) #2 !dbg !10189 {
entry:
  %port_mmio.addr = alloca i8*, align 8
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %pp.addr = alloca %struct.mv_port_priv*, align 8
  %index = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on34 = alloca i32, align 4
  %tmp58 = alloca i64, align 8
  store i8* %port_mmio, i8** %port_mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_mmio.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  store %struct.mv_port_priv* %pp, %struct.mv_port_priv** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10198, metadata !DIExpression()), !dbg !10199
  %0 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10200
  %req_idx = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %0, i32 0, i32 6, !dbg !10201
  %1 = load i32, i32* %req_idx, align 8, !dbg !10202
  %and = and i32 %1, 31, !dbg !10202
  store i32 %and, i32* %req_idx, align 8, !dbg !10202
  %2 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10203
  %req_idx1 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %2, i32 0, i32 6, !dbg !10204
  %3 = load i32, i32* %req_idx1, align 8, !dbg !10204
  %shl = shl i32 %3, 5, !dbg !10205
  store i32 %shl, i32* %index, align 4, !dbg !10206
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10207, metadata !DIExpression()), !dbg !10209
  %4 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10209
  %crqb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %4, i32 0, i32 1, !dbg !10209
  %5 = load i64, i64* %crqb_dma, align 8, !dbg !10209
  %and2 = and i64 %5, 1023, !dbg !10209
  %tobool = icmp ne i64 %and2, 0, !dbg !10209
  %lnot = xor i1 %tobool, true, !dbg !10209
  %lnot3 = xor i1 %lnot, true, !dbg !10209
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10209
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10209
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !10210
  %tobool4 = icmp ne i32 %6, 0, !dbg !10210
  %lnot5 = xor i1 %tobool4, true, !dbg !10210
  %lnot7 = xor i1 %lnot5, true, !dbg !10210
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !10210
  %conv = sext i32 %lnot.ext8 to i64, !dbg !10210
  %tobool9 = icmp ne i64 %conv, 0, !dbg !10210
  br i1 %tobool9, label %if.then, label %if.end, !dbg !10209

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10210

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !10212

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !10214

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !10212

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 1000, i32 2305, i64 12) #6, !dbg !10216, !srcloc !10218
  br label %do.end12, !dbg !10216

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 314) #6, !dbg !10219, !srcloc !10221
  br label %do.body13, !dbg !10212

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !10222

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !10212

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !10212

if.end:                                           ; preds = %do.end15, %entry
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !10209
  %tobool16 = icmp ne i32 %7, 0, !dbg !10209
  %lnot17 = xor i1 %tobool16, true, !dbg !10209
  %lnot19 = xor i1 %lnot17, true, !dbg !10209
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !10209
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !10209
  store i64 %conv21, i64* %tmp, align 8, !dbg !10210
  %8 = load i64, i64* %tmp, align 8, !dbg !10209
  %9 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10224
  %crqb_dma22 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %9, i32 0, i32 1, !dbg !10225
  %10 = load i64, i64* %crqb_dma22, align 8, !dbg !10225
  %shr = lshr i64 %10, 16, !dbg !10226
  %shr23 = lshr i64 %shr, 16, !dbg !10227
  %conv24 = trunc i64 %shr23 to i32, !dbg !10228
  %11 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10229
  %add.ptr = getelementptr i8, i8* %11, i64 16, !dbg !10230
  call void @writel(i32 %conv24, i8* %add.ptr) #9, !dbg !10231
  %12 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10232
  %crqb_dma25 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %12, i32 0, i32 1, !dbg !10233
  %13 = load i64, i64* %crqb_dma25, align 8, !dbg !10233
  %and26 = and i64 %13, 4294966272, !dbg !10234
  %14 = load i32, i32* %index, align 4, !dbg !10235
  %conv27 = zext i32 %14 to i64, !dbg !10235
  %or = or i64 %and26, %conv27, !dbg !10236
  %15 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10237
  %add.ptr28 = getelementptr i8, i8* %15, i64 20, !dbg !10238
  call void @writelfl(i64 %or, i8* %add.ptr28) #9, !dbg !10239
  %16 = load i32, i32* %index, align 4, !dbg !10240
  %conv29 = zext i32 %16 to i64, !dbg !10240
  %17 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10241
  %add.ptr30 = getelementptr i8, i8* %17, i64 24, !dbg !10242
  call void @writelfl(i64 %conv29, i8* %add.ptr30) #9, !dbg !10243
  %18 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10244
  %resp_idx = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %18, i32 0, i32 7, !dbg !10245
  %19 = load i32, i32* %resp_idx, align 4, !dbg !10246
  %and31 = and i32 %19, 31, !dbg !10246
  store i32 %and31, i32* %resp_idx, align 4, !dbg !10246
  %20 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10247
  %resp_idx32 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %20, i32 0, i32 7, !dbg !10248
  %21 = load i32, i32* %resp_idx32, align 4, !dbg !10248
  %shl33 = shl i32 %21, 3, !dbg !10249
  store i32 %shl33, i32* %index, align 4, !dbg !10250
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on34, metadata !10251, metadata !DIExpression()), !dbg !10253
  %22 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10253
  %crpb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %22, i32 0, i32 3, !dbg !10253
  %23 = load i64, i64* %crpb_dma, align 8, !dbg !10253
  %and35 = and i64 %23, 255, !dbg !10253
  %tobool36 = icmp ne i64 %and35, 0, !dbg !10253
  %lnot37 = xor i1 %tobool36, true, !dbg !10253
  %lnot39 = xor i1 %lnot37, true, !dbg !10253
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !10253
  store i32 %lnot.ext40, i32* %__ret_warn_on34, align 4, !dbg !10253
  %24 = load i32, i32* %__ret_warn_on34, align 4, !dbg !10254
  %tobool41 = icmp ne i32 %24, 0, !dbg !10254
  %lnot42 = xor i1 %tobool41, true, !dbg !10254
  %lnot44 = xor i1 %lnot42, true, !dbg !10254
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !10254
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !10254
  %tobool47 = icmp ne i64 %conv46, 0, !dbg !10254
  br i1 %tobool47, label %if.then48, label %if.end57, !dbg !10253

if.then48:                                        ; preds = %if.end
  br label %do.body49, !dbg !10254

do.body49:                                        ; preds = %if.then48
  br label %do.body50, !dbg !10256

do.body50:                                        ; preds = %do.body49
  br label %do.end51, !dbg !10258

do.end51:                                         ; preds = %do.body50
  br label %do.body52, !dbg !10256

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 1012, i32 2305, i64 12) #6, !dbg !10260, !srcloc !10262
  br label %do.end53, !dbg !10260

do.end53:                                         ; preds = %do.body52
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 315) #6, !dbg !10263, !srcloc !10265
  br label %do.body54, !dbg !10256

do.body54:                                        ; preds = %do.end53
  br label %do.end55, !dbg !10266

do.end55:                                         ; preds = %do.body54
  br label %do.end56, !dbg !10256

do.end56:                                         ; preds = %do.end55
  br label %if.end57, !dbg !10256

if.end57:                                         ; preds = %do.end56, %if.end
  %25 = load i32, i32* %__ret_warn_on34, align 4, !dbg !10253
  %tobool59 = icmp ne i32 %25, 0, !dbg !10253
  %lnot60 = xor i1 %tobool59, true, !dbg !10253
  %lnot62 = xor i1 %lnot60, true, !dbg !10253
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !10253
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !10253
  store i64 %conv64, i64* %tmp58, align 8, !dbg !10254
  %26 = load i64, i64* %tmp58, align 8, !dbg !10253
  %27 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10268
  %crpb_dma65 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %27, i32 0, i32 3, !dbg !10269
  %28 = load i64, i64* %crpb_dma65, align 8, !dbg !10269
  %shr66 = lshr i64 %28, 16, !dbg !10270
  %shr67 = lshr i64 %shr66, 16, !dbg !10271
  %conv68 = trunc i64 %shr67 to i32, !dbg !10272
  %29 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10273
  %add.ptr69 = getelementptr i8, i8* %29, i64 28, !dbg !10274
  call void @writel(i32 %conv68, i8* %add.ptr69) #9, !dbg !10275
  %30 = load i32, i32* %index, align 4, !dbg !10276
  %conv70 = zext i32 %30 to i64, !dbg !10276
  %31 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10277
  %add.ptr71 = getelementptr i8, i8* %31, i64 32, !dbg !10278
  call void @writelfl(i64 %conv70, i8* %add.ptr71) #9, !dbg !10279
  %32 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !10280
  %crpb_dma72 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %32, i32 0, i32 3, !dbg !10281
  %33 = load i64, i64* %crpb_dma72, align 8, !dbg !10281
  %and73 = and i64 %33, 4294967040, !dbg !10282
  %34 = load i32, i32* %index, align 4, !dbg !10283
  %conv74 = zext i32 %34 to i64, !dbg !10283
  %or75 = or i64 %and73, %conv74, !dbg !10284
  %35 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10285
  %add.ptr76 = getelementptr i8, i8* %35, i64 36, !dbg !10286
  call void @writelfl(i64 %or75, i8* %add.ptr76) #9, !dbg !10287
  ret void, !dbg !10288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_60x1_errata_sata25(%struct.ata_port* %ap, i32 %want_ncq) #2 !dbg !10289 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %want_ncq.addr = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %old = alloca i32, align 4
  %new = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10290, metadata !DIExpression()), !dbg !10291
  store i32 %want_ncq, i32* %want_ncq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %want_ncq.addr, metadata !10292, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !10294, metadata !DIExpression()), !dbg !10295
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10296
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !10297
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10297
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 5, !dbg !10298
  %2 = load i8*, i8** %private_data, align 8, !dbg !10298
  %3 = bitcast i8* %2 to %struct.mv_host_priv*, !dbg !10296
  store %struct.mv_host_priv* %3, %struct.mv_host_priv** %hpriv, align 8, !dbg !10295
  call void @llvm.dbg.declare(metadata i32* %old, metadata !10299, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.declare(metadata i32* %new, metadata !10301, metadata !DIExpression()), !dbg !10302
  %4 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10303
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %4, i32 0, i32 6, !dbg !10304
  %5 = load i8*, i8** %base, align 8, !dbg !10304
  %add.ptr = getelementptr i8, i8* %5, i64 66800, !dbg !10305
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !10306
  store i32 %call, i32* %old, align 4, !dbg !10307
  %6 = load i32, i32* %want_ncq.addr, align 4, !dbg !10308
  %tobool = icmp ne i32 %6, 0, !dbg !10308
  br i1 %tobool, label %if.then, label %if.else, !dbg !10310

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %old, align 4, !dbg !10311
  %or = or i32 %7, 4194304, !dbg !10312
  store i32 %or, i32* %new, align 4, !dbg !10313
  br label %if.end, !dbg !10314

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %old, align 4, !dbg !10315
  %and = and i32 %8, -4194305, !dbg !10316
  store i32 %and, i32* %new, align 4, !dbg !10317
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %new, align 4, !dbg !10318
  %10 = load i32, i32* %old, align 4, !dbg !10320
  %cmp = icmp ne i32 %9, %10, !dbg !10321
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !10322

if.then1:                                         ; preds = %if.end
  %11 = load i32, i32* %new, align 4, !dbg !10323
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10324
  %base2 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %12, i32 0, i32 6, !dbg !10325
  %13 = load i8*, i8** %base2, align 8, !dbg !10325
  %add.ptr3 = getelementptr i8, i8* %13, i64 66800, !dbg !10326
  call void @writel(i32 %11, i8* %add.ptr3) #9, !dbg !10327
  br label %if.end4, !dbg !10327

if.end4:                                          ; preds = %if.then1, %if.end
  ret void, !dbg !10328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sata_pmp_attached(%struct.ata_port* %ap) #2 !dbg !10329 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10330, metadata !DIExpression()), !dbg !10331
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10332
  %nr_pmp_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 27, !dbg !10333
  %1 = load i32, i32* %nr_pmp_links, align 8, !dbg !10333
  %cmp = icmp ne i32 %1, 0, !dbg !10334
  ret i1 %cmp, !dbg !10335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_config_fbs(%struct.ata_port* %ap, i32 %want_ncq, i32 %want_fbs) #2 !dbg !10336 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %want_ncq.addr = alloca i32, align 4
  %want_fbs.addr = alloca i32, align 4
  %pp = alloca %struct.mv_port_priv*, align 8
  %port_mmio = alloca i8*, align 8
  %fiscfg = alloca i32, align 4
  %old_fiscfg = alloca i32*, align 8
  %ltmode = alloca i32, align 4
  %old_ltmode = alloca i32*, align 8
  %haltcond = alloca i32, align 4
  %old_haltcond = alloca i32*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  store i32 %want_ncq, i32* %want_ncq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %want_ncq.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  store i32 %want_fbs, i32* %want_fbs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %want_fbs.addr, metadata !10341, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !10343, metadata !DIExpression()), !dbg !10344
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10345
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !10346
  %1 = load i8*, i8** %private_data, align 32, !dbg !10346
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !10345
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !10344
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %fiscfg, metadata !10349, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.declare(metadata i32** %old_fiscfg, metadata !10351, metadata !DIExpression()), !dbg !10352
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10353
  %cached = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 9, !dbg !10354
  %fiscfg1 = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached, i32 0, i32 0, !dbg !10355
  store i32* %fiscfg1, i32** %old_fiscfg, align 8, !dbg !10352
  call void @llvm.dbg.declare(metadata i32* %ltmode, metadata !10356, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.declare(metadata i32** %old_ltmode, metadata !10358, metadata !DIExpression()), !dbg !10359
  %4 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10360
  %cached2 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %4, i32 0, i32 9, !dbg !10361
  %ltmode3 = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached2, i32 0, i32 1, !dbg !10362
  store i32* %ltmode3, i32** %old_ltmode, align 8, !dbg !10359
  call void @llvm.dbg.declare(metadata i32* %haltcond, metadata !10363, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.declare(metadata i32** %old_haltcond, metadata !10365, metadata !DIExpression()), !dbg !10366
  %5 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10367
  %cached4 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %5, i32 0, i32 9, !dbg !10368
  %haltcond5 = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached4, i32 0, i32 2, !dbg !10369
  store i32* %haltcond5, i32** %old_haltcond, align 8, !dbg !10366
  %6 = load i32*, i32** %old_ltmode, align 8, !dbg !10370
  %7 = load i32, i32* %6, align 4, !dbg !10371
  %and = and i32 %7, -257, !dbg !10372
  store i32 %and, i32* %ltmode, align 4, !dbg !10373
  %8 = load i32*, i32** %old_haltcond, align 8, !dbg !10374
  %9 = load i32, i32* %8, align 4, !dbg !10375
  %or = or i32 %9, 4, !dbg !10376
  store i32 %or, i32* %haltcond, align 4, !dbg !10377
  %10 = load i32, i32* %want_fbs.addr, align 4, !dbg !10378
  %tobool = icmp ne i32 %10, 0, !dbg !10378
  br i1 %tobool, label %if.then, label %if.else12, !dbg !10380

if.then:                                          ; preds = %entry
  %11 = load i32*, i32** %old_fiscfg, align 8, !dbg !10381
  %12 = load i32, i32* %11, align 4, !dbg !10383
  %or6 = or i32 %12, 65536, !dbg !10384
  store i32 %or6, i32* %fiscfg, align 4, !dbg !10385
  %13 = load i32*, i32** %old_ltmode, align 8, !dbg !10386
  %14 = load i32, i32* %13, align 4, !dbg !10387
  %or7 = or i32 %14, 256, !dbg !10388
  store i32 %or7, i32* %ltmode, align 4, !dbg !10389
  %15 = load i32, i32* %want_ncq.addr, align 4, !dbg !10390
  %tobool8 = icmp ne i32 %15, 0, !dbg !10390
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !10392

if.then9:                                         ; preds = %if.then
  %16 = load i32, i32* %haltcond, align 4, !dbg !10393
  %and10 = and i32 %16, -5, !dbg !10393
  store i32 %and10, i32* %haltcond, align 4, !dbg !10393
  br label %if.end, !dbg !10394

if.else:                                          ; preds = %if.then
  %17 = load i32, i32* %fiscfg, align 4, !dbg !10395
  %or11 = or i32 %17, 256, !dbg !10395
  store i32 %or11, i32* %fiscfg, align 4, !dbg !10395
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end14, !dbg !10396

if.else12:                                        ; preds = %entry
  %18 = load i32*, i32** %old_fiscfg, align 8, !dbg !10397
  %19 = load i32, i32* %18, align 4, !dbg !10399
  %and13 = and i32 %19, -65793, !dbg !10400
  store i32 %and13, i32* %fiscfg, align 4, !dbg !10401
  br label %if.end14

if.end14:                                         ; preds = %if.else12, %if.end
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10402
  %call = call i8* @mv_ap_base(%struct.ata_port* %20) #9, !dbg !10403
  store i8* %call, i8** %port_mmio, align 8, !dbg !10404
  %21 = load i8*, i8** %port_mmio, align 8, !dbg !10405
  %add.ptr = getelementptr i8, i8* %21, i64 864, !dbg !10406
  %22 = load i32*, i32** %old_fiscfg, align 8, !dbg !10407
  %23 = load i32, i32* %fiscfg, align 4, !dbg !10408
  call void @mv_write_cached_reg(i8* %add.ptr, i32* %22, i32 %23) #9, !dbg !10409
  %24 = load i8*, i8** %port_mmio, align 8, !dbg !10410
  %add.ptr15 = getelementptr i8, i8* %24, i64 780, !dbg !10411
  %25 = load i32*, i32** %old_ltmode, align 8, !dbg !10412
  %26 = load i32, i32* %ltmode, align 4, !dbg !10413
  call void @mv_write_cached_reg(i8* %add.ptr15, i32* %25, i32 %26) #9, !dbg !10414
  %27 = load i8*, i8** %port_mmio, align 8, !dbg !10415
  %add.ptr16 = getelementptr i8, i8* %27, i64 96, !dbg !10416
  %28 = load i32*, i32** %old_haltcond, align 8, !dbg !10417
  %29 = load i32, i32* %haltcond, align 4, !dbg !10418
  call void @mv_write_cached_reg(i8* %add.ptr16, i32* %28, i32 %29) #9, !dbg !10419
  ret void, !dbg !10420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_bmdma_enable_iie(%struct.ata_port* %ap, i32 %enable_bmdma) #2 !dbg !10421 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %enable_bmdma.addr = alloca i32, align 4
  %pp = alloca %struct.mv_port_priv*, align 8
  %new = alloca i32, align 4
  %old = alloca i32*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  store i32 %enable_bmdma, i32* %enable_bmdma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable_bmdma.addr, metadata !10424, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !10426, metadata !DIExpression()), !dbg !10427
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10428
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !10429
  %1 = load i8*, i8** %private_data, align 32, !dbg !10429
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !10428
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !10427
  call void @llvm.dbg.declare(metadata i32* %new, metadata !10430, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.declare(metadata i32** %old, metadata !10432, metadata !DIExpression()), !dbg !10433
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10434
  %cached = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 9, !dbg !10435
  %unknown_rsvd = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached, i32 0, i32 3, !dbg !10436
  store i32* %unknown_rsvd, i32** %old, align 8, !dbg !10433
  %4 = load i32, i32* %enable_bmdma.addr, align 4, !dbg !10437
  %tobool = icmp ne i32 %4, 0, !dbg !10437
  br i1 %tobool, label %if.then, label %if.else, !dbg !10439

if.then:                                          ; preds = %entry
  %5 = load i32*, i32** %old, align 8, !dbg !10440
  %6 = load i32, i32* %5, align 4, !dbg !10441
  %or = or i32 %6, 1, !dbg !10442
  store i32 %or, i32* %new, align 4, !dbg !10443
  br label %if.end, !dbg !10444

if.else:                                          ; preds = %entry
  %7 = load i32*, i32** %old, align 8, !dbg !10445
  %8 = load i32, i32* %7, align 4, !dbg !10446
  %and = and i32 %8, -2, !dbg !10447
  store i32 %and, i32* %new, align 4, !dbg !10448
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10449
  %call = call i8* @mv_ap_base(%struct.ata_port* %9) #9, !dbg !10450
  %add.ptr = getelementptr i8, i8* %call, i64 108, !dbg !10451
  %10 = load i32*, i32** %old, align 8, !dbg !10452
  %11 = load i32, i32* %new, align 4, !dbg !10453
  call void @mv_write_cached_reg(i8* %add.ptr, i32* %10, i32 %11) #9, !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_led_blink_enable(%struct.ata_port* %ap) #2 !dbg !10456 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %host = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %hc_mmio = alloca i8*, align 8
  %led_ctrl = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !10459, metadata !DIExpression()), !dbg !10460
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10461
  %host1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !10462
  %1 = load %struct.ata_host*, %struct.ata_host** %host1, align 8, !dbg !10462
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !10460
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !10463, metadata !DIExpression()), !dbg !10464
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10465
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 5, !dbg !10466
  %3 = load i8*, i8** %private_data, align 8, !dbg !10466
  %4 = bitcast i8* %3 to %struct.mv_host_priv*, !dbg !10465
  store %struct.mv_host_priv* %4, %struct.mv_host_priv** %hpriv, align 8, !dbg !10464
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !10467, metadata !DIExpression()), !dbg !10468
  call void @llvm.dbg.declare(metadata i32* %led_ctrl, metadata !10469, metadata !DIExpression()), !dbg !10470
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10471
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 0, !dbg !10473
  %6 = load i32, i32* %hp_flags, align 8, !dbg !10473
  %and = and i32 %6, 4096, !dbg !10474
  %tobool = icmp ne i32 %and, 0, !dbg !10474
  br i1 %tobool, label %if.then, label %if.end, !dbg !10475

if.then:                                          ; preds = %entry
  br label %return, !dbg !10476

if.end:                                           ; preds = %entry
  %7 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10477
  %hp_flags2 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %7, i32 0, i32 0, !dbg !10478
  %8 = load i32, i32* %hp_flags2, align 8, !dbg !10479
  %or = or i32 %8, 4096, !dbg !10479
  store i32 %or, i32* %hp_flags2, align 8, !dbg !10479
  %9 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10480
  %call = call i8* @mv_host_base(%struct.ata_host* %9) #9, !dbg !10481
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10482
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 7, !dbg !10483
  %11 = load i32, i32* %port_no, align 4, !dbg !10483
  %call3 = call i8* @mv_hc_base_from_port(i8* %call, i32 %11) #9, !dbg !10484
  store i8* %call3, i8** %hc_mmio, align 8, !dbg !10485
  %12 = load i8*, i8** %hc_mmio, align 8, !dbg !10486
  %add.ptr = getelementptr i8, i8* %12, i64 44, !dbg !10487
  %call4 = call i32 @readl(i8* %add.ptr) #9, !dbg !10488
  store i32 %call4, i32* %led_ctrl, align 4, !dbg !10489
  %13 = load i32, i32* %led_ctrl, align 4, !dbg !10490
  %or5 = or i32 %13, 1, !dbg !10491
  %14 = load i8*, i8** %hc_mmio, align 8, !dbg !10492
  %add.ptr6 = getelementptr i8, i8* %14, i64 44, !dbg !10493
  call void @writel(i32 %or5, i8* %add.ptr6) #9, !dbg !10494
  br label %return, !dbg !10495

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_led_blink_disable(%struct.ata_port* %ap) #2 !dbg !10496 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %host = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %hc_mmio = alloca i8*, align 8
  %led_ctrl = alloca i32, align 4
  %port = alloca i32, align 4
  %this_ap = alloca %struct.ata_port*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !10499, metadata !DIExpression()), !dbg !10500
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10501
  %host1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !10502
  %1 = load %struct.ata_host*, %struct.ata_host** %host1, align 8, !dbg !10502
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !10500
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !10503, metadata !DIExpression()), !dbg !10504
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10505
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 5, !dbg !10506
  %3 = load i8*, i8** %private_data, align 8, !dbg !10506
  %4 = bitcast i8* %3 to %struct.mv_host_priv*, !dbg !10505
  store %struct.mv_host_priv* %4, %struct.mv_host_priv** %hpriv, align 8, !dbg !10504
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !10507, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.declare(metadata i32* %led_ctrl, metadata !10509, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.declare(metadata i32* %port, metadata !10511, metadata !DIExpression()), !dbg !10512
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10513
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 0, !dbg !10515
  %6 = load i32, i32* %hp_flags, align 8, !dbg !10515
  %and = and i32 %6, 4096, !dbg !10516
  %tobool = icmp ne i32 %and, 0, !dbg !10516
  br i1 %tobool, label %if.end, label %if.then, !dbg !10517

if.then:                                          ; preds = %entry
  br label %return, !dbg !10518

if.end:                                           ; preds = %entry
  store i32 0, i32* %port, align 4, !dbg !10519
  br label %for.cond, !dbg !10521

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %port, align 4, !dbg !10522
  %8 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10524
  %n_ports = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %8, i32 0, i32 5, !dbg !10525
  %9 = load i32, i32* %n_ports, align 8, !dbg !10525
  %cmp = icmp ult i32 %7, %9, !dbg !10526
  br i1 %cmp, label %for.body, label %for.end, !dbg !10527

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %this_ap, metadata !10528, metadata !DIExpression()), !dbg !10530
  %10 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10531
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 12, !dbg !10532
  %11 = load i32, i32* %port, align 4, !dbg !10533
  %idxprom = zext i32 %11 to i64, !dbg !10531
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !10531
  %12 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !10531
  store %struct.ata_port* %12, %struct.ata_port** %this_ap, align 8, !dbg !10530
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !10534, metadata !DIExpression()), !dbg !10535
  %13 = load %struct.ata_port*, %struct.ata_port** %this_ap, align 8, !dbg !10536
  %private_data2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 49, !dbg !10537
  %14 = load i8*, i8** %private_data2, align 32, !dbg !10537
  %15 = bitcast i8* %14 to %struct.mv_port_priv*, !dbg !10536
  store %struct.mv_port_priv* %15, %struct.mv_port_priv** %pp, align 8, !dbg !10535
  %16 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !10538
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %16, i32 0, i32 8, !dbg !10540
  %17 = load i32, i32* %pp_flags, align 8, !dbg !10540
  %and3 = and i32 %17, 2, !dbg !10541
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10541
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10542

if.then5:                                         ; preds = %for.body
  br label %return, !dbg !10543

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !10544

for.inc:                                          ; preds = %if.end6
  %18 = load i32, i32* %port, align 4, !dbg !10545
  %inc = add i32 %18, 1, !dbg !10545
  store i32 %inc, i32* %port, align 4, !dbg !10545
  br label %for.cond, !dbg !10546, !llvm.loop !10547

for.end:                                          ; preds = %for.cond
  %19 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10549
  %hp_flags7 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %19, i32 0, i32 0, !dbg !10550
  %20 = load i32, i32* %hp_flags7, align 8, !dbg !10551
  %and8 = and i32 %20, -4097, !dbg !10551
  store i32 %and8, i32* %hp_flags7, align 8, !dbg !10551
  %21 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10552
  %call = call i8* @mv_host_base(%struct.ata_host* %21) #9, !dbg !10553
  %22 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10554
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %22, i32 0, i32 7, !dbg !10555
  %23 = load i32, i32* %port_no, align 4, !dbg !10555
  %call9 = call i8* @mv_hc_base_from_port(i8* %call, i32 %23) #9, !dbg !10556
  store i8* %call9, i8** %hc_mmio, align 8, !dbg !10557
  %24 = load i8*, i8** %hc_mmio, align 8, !dbg !10558
  %add.ptr = getelementptr i8, i8* %24, i64 44, !dbg !10559
  %call10 = call i32 @readl(i8* %add.ptr) #9, !dbg !10560
  store i32 %call10, i32* %led_ctrl, align 4, !dbg !10561
  %25 = load i32, i32* %led_ctrl, align 4, !dbg !10562
  %and11 = and i32 %25, -2, !dbg !10563
  %26 = load i8*, i8** %hc_mmio, align 8, !dbg !10564
  %add.ptr12 = getelementptr i8, i8* %26, i64 44, !dbg !10565
  call void @writel(i32 %and11, i8* %add.ptr12) #9, !dbg !10566
  br label %return, !dbg !10567

return:                                           ; preds = %for.end, %if.then5, %if.then
  ret void, !dbg !10567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !10568 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10575, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10577, metadata !DIExpression()), !dbg !10576
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10576
  %1 = bitcast i8* %0 to i32*, !dbg !10576
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #6, !dbg !10576, !srcloc !10578
  store i32 %2, i32* %ret, align 4, !dbg !10576
  %3 = load i32, i32* %ret, align 4, !dbg !10576
  ret i32 %3, !dbg !10576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !10579 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10583, metadata !DIExpression()), !dbg !10584
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10585, metadata !DIExpression()), !dbg !10584
  %0 = load i32, i32* %val.addr, align 4, !dbg !10584
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10584
  %2 = bitcast i8* %1 to i32*, !dbg !10584
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #6, !dbg !10584, !srcloc !10586
  ret void, !dbg !10584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_write_cached_reg(i8* %addr, i32* %old, i32 %new) #2 !dbg !10587 {
entry:
  %addr.addr = alloca i8*, align 8
  %old.addr = alloca i32*, align 8
  %new.addr = alloca i32, align 4
  %laddr = alloca i64, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10590, metadata !DIExpression()), !dbg !10591
  store i32* %old, i32** %old.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr, metadata !10592, metadata !DIExpression()), !dbg !10593
  store i32 %new, i32* %new.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr, metadata !10594, metadata !DIExpression()), !dbg !10595
  %0 = load i32, i32* %new.addr, align 4, !dbg !10596
  %1 = load i32*, i32** %old.addr, align 8, !dbg !10598
  %2 = load i32, i32* %1, align 4, !dbg !10599
  %cmp = icmp ne i32 %0, %2, !dbg !10600
  br i1 %cmp, label %if.then, label %if.end9, !dbg !10601

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %laddr, metadata !10602, metadata !DIExpression()), !dbg !10604
  %3 = load i32, i32* %new.addr, align 4, !dbg !10605
  %4 = load i32*, i32** %old.addr, align 8, !dbg !10606
  store i32 %3, i32* %4, align 4, !dbg !10607
  %5 = load i8*, i8** %addr.addr, align 8, !dbg !10608
  %6 = ptrtoint i8* %5 to i64, !dbg !10609
  %and = and i64 %6, 65535, !dbg !10610
  store i64 %and, i64* %laddr, align 8, !dbg !10611
  %7 = load i64, i64* %laddr, align 8, !dbg !10612
  %cmp1 = icmp uge i64 %7, 768, !dbg !10614
  br i1 %cmp1, label %land.lhs.true, label %if.end8, !dbg !10615

land.lhs.true:                                    ; preds = %if.then
  %8 = load i64, i64* %laddr, align 8, !dbg !10616
  %cmp2 = icmp ule i64 %8, 828, !dbg !10617
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !10618

if.then3:                                         ; preds = %land.lhs.true
  %9 = load i64, i64* %laddr, align 8, !dbg !10619
  %and4 = and i64 %9, 15, !dbg !10619
  store i64 %and4, i64* %laddr, align 8, !dbg !10619
  %10 = load i64, i64* %laddr, align 8, !dbg !10621
  %cmp5 = icmp eq i64 %10, 4, !dbg !10623
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !10624

lor.lhs.false:                                    ; preds = %if.then3
  %11 = load i64, i64* %laddr, align 8, !dbg !10625
  %cmp6 = icmp eq i64 %11, 12, !dbg !10626
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10627

if.then7:                                         ; preds = %lor.lhs.false, %if.then3
  %12 = load i32, i32* %new.addr, align 4, !dbg !10628
  %conv = zext i32 %12 to i64, !dbg !10628
  %13 = load i8*, i8** %addr.addr, align 8, !dbg !10630
  call void @writelfl(i64 %conv, i8* %13) #9, !dbg !10631
  br label %if.end9, !dbg !10632

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end8, !dbg !10633

if.end8:                                          ; preds = %if.end, %land.lhs.true, %if.then
  %14 = load i32, i32* %new.addr, align 4, !dbg !10634
  %15 = load i8*, i8** %addr.addr, align 8, !dbg !10635
  call void @writel(i32 %14, i8* %15) #9, !dbg !10636
  br label %if.end9, !dbg !10637

if.end9:                                          ; preds = %if.then7, %if.end8, %entry
  ret void, !dbg !10638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mv_hc_base_from_port(i8* %base, i32 %port) #2 !dbg !10639 {
entry:
  %base.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  %0 = load i8*, i8** %base.addr, align 8, !dbg !10644
  %1 = load i32, i32* %port.addr, align 4, !dbg !10645
  %call = call i32 @mv_hc_from_port(i32 %1) #9, !dbg !10646
  %call1 = call i8* @mv_hc_base(i8* %0, i32 %call) #9, !dbg !10647
  ret i8* %call1, !dbg !10648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mv_hc_base(i8* %base, i32 %hc) #2 !dbg !10649 {
entry:
  %base.addr = alloca i8*, align 8
  %hc.addr = alloca i32, align 4
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10650, metadata !DIExpression()), !dbg !10651
  store i32 %hc, i32* %hc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hc.addr, metadata !10652, metadata !DIExpression()), !dbg !10653
  %0 = load i8*, i8** %base.addr, align 8, !dbg !10654
  %add.ptr = getelementptr i8, i8* %0, i64 131072, !dbg !10655
  %1 = load i32, i32* %hc.addr, align 4, !dbg !10656
  %mul = mul i32 %1, 65536, !dbg !10657
  %idx.ext = zext i32 %mul to i64, !dbg !10658
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10658
  ret i8* %add.ptr1, !dbg !10659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_hc_from_port(i32 %port) #2 !dbg !10660 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10663, metadata !DIExpression()), !dbg !10664
  %0 = load i32, i32* %port.addr, align 4, !dbg !10665
  %shr = lshr i32 %0, 2, !dbg !10666
  ret i32 %shr, !dbg !10667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_wait_for_edma_empty_idle(%struct.ata_port* %ap) #2 !dbg !10668 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %empty_idle = alloca i32, align 4
  %per_loop = alloca i32, align 4
  %timeout = alloca i32, align 4
  %i = alloca i32, align 4
  %edma_stat = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10669, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !10671, metadata !DIExpression()), !dbg !10672
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10673
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !10674
  store i8* %call, i8** %port_mmio, align 8, !dbg !10672
  call void @llvm.dbg.declare(metadata i32* %empty_idle, metadata !10675, metadata !DIExpression()), !dbg !10676
  store i32 192, i32* %empty_idle, align 4, !dbg !10676
  call void @llvm.dbg.declare(metadata i32* %per_loop, metadata !10677, metadata !DIExpression()), !dbg !10679
  store i32 5, i32* %per_loop, align 4, !dbg !10679
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !10680, metadata !DIExpression()), !dbg !10681
  store i32 3000, i32* %timeout, align 4, !dbg !10681
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10682, metadata !DIExpression()), !dbg !10683
  store i32 0, i32* %i, align 4, !dbg !10684
  br label %for.cond, !dbg !10686

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !10687
  %cmp = icmp slt i32 %1, 3000, !dbg !10689
  br i1 %cmp, label %for.body, label %for.end, !dbg !10690

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %edma_stat, metadata !10691, metadata !DIExpression()), !dbg !10693
  %2 = load i8*, i8** %port_mmio, align 8, !dbg !10694
  %add.ptr = getelementptr i8, i8* %2, i64 48, !dbg !10695
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !10696
  store i32 %call1, i32* %edma_stat, align 4, !dbg !10693
  %3 = load i32, i32* %edma_stat, align 4, !dbg !10697
  %and = and i32 %3, 192, !dbg !10699
  %cmp2 = icmp eq i32 %and, 192, !dbg !10700
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10701

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10702

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 21475) #9, !dbg !10703
  br label %for.inc, !dbg !10708

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !10709
  %inc = add i32 %4, 1, !dbg !10709
  store i32 %inc, i32* %i, align 4, !dbg !10709
  br label %for.cond, !dbg !10710, !llvm.loop !10711

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !10713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_stop_edma_engine(i8* %port_mmio) #2 !dbg !10714 {
entry:
  %retval = alloca i32, align 4
  %port_mmio.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %reg = alloca i32, align 4
  store i8* %port_mmio, i8** %port_mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_mmio.addr, metadata !10717, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10719, metadata !DIExpression()), !dbg !10720
  %0 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10721
  %add.ptr = getelementptr i8, i8* %0, i64 40, !dbg !10722
  call void @writelfl(i64 2, i8* %add.ptr) #9, !dbg !10723
  store i32 10000, i32* %i, align 4, !dbg !10724
  br label %for.cond, !dbg !10726

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !10727
  %cmp = icmp sgt i32 %1, 0, !dbg !10729
  br i1 %cmp, label %for.body, label %for.end, !dbg !10730

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10731, metadata !DIExpression()), !dbg !10733
  %2 = load i8*, i8** %port_mmio.addr, align 8, !dbg !10734
  %add.ptr1 = getelementptr i8, i8* %2, i64 40, !dbg !10735
  %call = call i32 @readl(i8* %add.ptr1) #9, !dbg !10736
  store i32 %call, i32* %reg, align 4, !dbg !10733
  %3 = load i32, i32* %reg, align 4, !dbg !10737
  %and = and i32 %3, 1, !dbg !10739
  %tobool = icmp ne i32 %and, 0, !dbg !10739
  br i1 %tobool, label %if.end, label %if.then, !dbg !10740

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !10741
  br label %return, !dbg !10741

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 42950) #9, !dbg !10742
  br label %for.inc, !dbg !10747

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !10748
  %dec = add i32 %4, -1, !dbg !10748
  store i32 %dec, i32* %i, align 4, !dbg !10748
  br label %for.cond, !dbg !10749, !llvm.loop !10750

for.end:                                          ; preds = %for.cond
  store i32 -5, i32* %retval, align 4, !dbg !10752
  br label %return, !dbg !10752

return:                                           ; preds = %for.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10753
  ret i32 %5, !dbg !10753
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_hardport_from_port(i32 %port) #2 !dbg !10754 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10755, metadata !DIExpression()), !dbg !10756
  %0 = load i32, i32* %port.addr, align 4, !dbg !10757
  %and = and i32 %0, 3, !dbg !10758
  ret i32 %and, !dbg !10759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_enable_port_irqs(%struct.ata_port* %ap, i32 %port_bits) #2 !dbg !10760 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %hardport = alloca i32, align 4
  %port = alloca i32, align 4
  %disable_bits = alloca i32, align 4
  %enable_bits = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10761, metadata !DIExpression()), !dbg !10762
  store i32 %port_bits, i32* %port_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_bits.addr, metadata !10763, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !10765, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.declare(metadata i32* %hardport, metadata !10767, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.declare(metadata i32* %port, metadata !10769, metadata !DIExpression()), !dbg !10770
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10771
  %port_no = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 7, !dbg !10772
  %1 = load i32, i32* %port_no, align 4, !dbg !10772
  store i32 %1, i32* %port, align 4, !dbg !10770
  call void @llvm.dbg.declare(metadata i32* %disable_bits, metadata !10773, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.declare(metadata i32* %enable_bits, metadata !10775, metadata !DIExpression()), !dbg !10776
  %2 = load i32, i32* %port, align 4, !dbg !10777
  %call = call i32 @mv_hc_from_port(i32 %2) #9, !dbg !10777
  %mul = mul i32 %call, 9, !dbg !10777
  store i32 %mul, i32* %shift, align 4, !dbg !10777
  %3 = load i32, i32* %port, align 4, !dbg !10777
  %call1 = call i32 @mv_hardport_from_port(i32 %3) #9, !dbg !10777
  store i32 %call1, i32* %hardport, align 4, !dbg !10777
  %4 = load i32, i32* %hardport, align 4, !dbg !10777
  %mul2 = mul i32 %4, 2, !dbg !10777
  %5 = load i32, i32* %shift, align 4, !dbg !10777
  %add = add i32 %5, %mul2, !dbg !10777
  store i32 %add, i32* %shift, align 4, !dbg !10777
  %6 = load i32, i32* %shift, align 4, !dbg !10779
  %shl = shl i32 3, %6, !dbg !10780
  store i32 %shl, i32* %disable_bits, align 4, !dbg !10781
  %7 = load i32, i32* %port_bits.addr, align 4, !dbg !10782
  %8 = load i32, i32* %shift, align 4, !dbg !10783
  %shl3 = shl i32 %7, %8, !dbg !10784
  store i32 %shl3, i32* %enable_bits, align 4, !dbg !10785
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10786
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 31, !dbg !10787
  %10 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10787
  %11 = load i32, i32* %disable_bits, align 4, !dbg !10788
  %12 = load i32, i32* %enable_bits, align 4, !dbg !10789
  call void @mv_set_main_irq_mask(%struct.ata_host* %10, i32 %11, i32 %12) #9, !dbg !10790
  ret void, !dbg !10791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_set_main_irq_mask(%struct.ata_host* %host, i32 %disable_bits, i32 %enable_bits) #2 !dbg !10792 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %disable_bits.addr = alloca i32, align 4
  %enable_bits.addr = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %old_mask = alloca i32, align 4
  %new_mask = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !10795, metadata !DIExpression()), !dbg !10796
  store i32 %disable_bits, i32* %disable_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %disable_bits.addr, metadata !10797, metadata !DIExpression()), !dbg !10798
  store i32 %enable_bits, i32* %enable_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable_bits.addr, metadata !10799, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !10801, metadata !DIExpression()), !dbg !10802
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10803
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !10804
  %1 = load i8*, i8** %private_data, align 8, !dbg !10804
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !10803
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !10802
  call void @llvm.dbg.declare(metadata i32* %old_mask, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.declare(metadata i32* %new_mask, metadata !10807, metadata !DIExpression()), !dbg !10808
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10809
  %main_irq_mask = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 2, !dbg !10810
  %4 = load i32, i32* %main_irq_mask, align 8, !dbg !10810
  store i32 %4, i32* %old_mask, align 4, !dbg !10811
  %5 = load i32, i32* %old_mask, align 4, !dbg !10812
  %6 = load i32, i32* %disable_bits.addr, align 4, !dbg !10813
  %neg = xor i32 %6, -1, !dbg !10814
  %and = and i32 %5, %neg, !dbg !10815
  %7 = load i32, i32* %enable_bits.addr, align 4, !dbg !10816
  %or = or i32 %and, %7, !dbg !10817
  store i32 %or, i32* %new_mask, align 4, !dbg !10818
  %8 = load i32, i32* %new_mask, align 4, !dbg !10819
  %9 = load i32, i32* %old_mask, align 4, !dbg !10821
  %cmp = icmp ne i32 %8, %9, !dbg !10822
  br i1 %cmp, label %if.then, label %if.end, !dbg !10823

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %new_mask, align 4, !dbg !10824
  %11 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10826
  %main_irq_mask1 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %11, i32 0, i32 2, !dbg !10827
  store i32 %10, i32* %main_irq_mask1, align 8, !dbg !10828
  %12 = load i32, i32* %new_mask, align 4, !dbg !10829
  %13 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !10830
  call void @mv_write_main_irq_mask(i32 %12, %struct.mv_host_priv* %13) #9, !dbg !10831
  br label %if.end, !dbg !10832

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_write_main_irq_mask(i32 %mask, %struct.mv_host_priv* %hpriv) #2 !dbg !10834 {
entry:
  %mask.addr = alloca i32, align 4
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !10837, metadata !DIExpression()), !dbg !10838
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !10839, metadata !DIExpression()), !dbg !10840
  %0 = load i32, i32* %mask.addr, align 4, !dbg !10841
  %and = and i32 %0, 2097408, !dbg !10843
  %tobool = icmp ne i32 %and, 0, !dbg !10843
  br i1 %tobool, label %if.then, label %if.end, !dbg !10844

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %mask.addr, align 4, !dbg !10845
  %and1 = and i32 %1, -171, !dbg !10845
  store i32 %and1, i32* %mask.addr, align 4, !dbg !10845
  br label %if.end, !dbg !10846

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %mask.addr, align 4, !dbg !10847
  %and2 = and i32 %2, 2228224, !dbg !10849
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10849
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !10850

if.then4:                                         ; preds = %if.end
  %3 = load i32, i32* %mask.addr, align 4, !dbg !10851
  %and5 = and i32 %3, -87041, !dbg !10851
  store i32 %and5, i32* %mask.addr, align 4, !dbg !10851
  br label %if.end6, !dbg !10852

if.end6:                                          ; preds = %if.then4, %if.end
  %4 = load i32, i32* %mask.addr, align 4, !dbg !10853
  %conv = zext i32 %4 to i64, !dbg !10853
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !10854
  %main_irq_mask_addr = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 8, !dbg !10855
  %6 = load i8*, i8** %main_irq_mask_addr, align 8, !dbg !10855
  call void @writelfl(i64 %conv, i8* %6) #9, !dbg !10856
  ret void, !dbg !10857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sata_pmp_supported(%struct.ata_port* %ap) #2 !dbg !10858 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10859, metadata !DIExpression()), !dbg !10860
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10861
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 3, !dbg !10862
  %1 = load i64, i64* %flags, align 8, !dbg !10862
  %and = and i64 %1, 524288, !dbg !10863
  %tobool = icmp ne i64 %and, 0, !dbg !10861
  ret i1 %tobool, !dbg !10864
}

; Function Attrs: noredzone
declare dso_local void @ata_tf_to_fis(%struct.ata_taskfile*, i8 zeroext, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_send_fis(%struct.ata_port* %ap, i32* %fis, i32 %nwords) #2 !dbg !10865 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %fis.addr = alloca i32*, align 8
  %nwords.addr = alloca i32, align 4
  %port_mmio = alloca i8*, align 8
  %ifctl = alloca i32, align 4
  %old_ifctl = alloca i32, align 4
  %ifstat = alloca i32, align 4
  %i = alloca i32, align 4
  %timeout = alloca i32, align 4
  %final_word = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10868, metadata !DIExpression()), !dbg !10869
  store i32* %fis, i32** %fis.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fis.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  store i32 %nwords, i32* %nwords.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nwords.addr, metadata !10872, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !10874, metadata !DIExpression()), !dbg !10875
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10876
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !10877
  store i8* %call, i8** %port_mmio, align 8, !dbg !10875
  call void @llvm.dbg.declare(metadata i32* %ifctl, metadata !10878, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata i32* %old_ifctl, metadata !10880, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %ifstat, metadata !10882, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10884, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !10886, metadata !DIExpression()), !dbg !10887
  store i32 200, i32* %timeout, align 4, !dbg !10887
  call void @llvm.dbg.declare(metadata i32* %final_word, metadata !10888, metadata !DIExpression()), !dbg !10889
  %1 = load i32, i32* %nwords.addr, align 4, !dbg !10890
  %sub = sub i32 %1, 1, !dbg !10891
  store i32 %sub, i32* %final_word, align 4, !dbg !10889
  %2 = load i8*, i8** %port_mmio, align 8, !dbg !10892
  %add.ptr = getelementptr i8, i8* %2, i64 836, !dbg !10893
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !10894
  store i32 %call1, i32* %old_ifctl, align 4, !dbg !10895
  %3 = load i32, i32* %old_ifctl, align 4, !dbg !10896
  %and = and i32 %3, 15, !dbg !10897
  %or = or i32 256, %and, !dbg !10898
  store i32 %or, i32* %ifctl, align 4, !dbg !10899
  %4 = load i32, i32* %ifctl, align 4, !dbg !10900
  %conv = zext i32 %4 to i64, !dbg !10900
  %5 = load i8*, i8** %port_mmio, align 8, !dbg !10901
  %add.ptr2 = getelementptr i8, i8* %5, i64 836, !dbg !10902
  call void @writelfl(i64 %conv, i8* %add.ptr2) #9, !dbg !10903
  store i32 0, i32* %i, align 4, !dbg !10904
  br label %for.cond, !dbg !10906

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !10907
  %7 = load i32, i32* %final_word, align 4, !dbg !10909
  %cmp = icmp slt i32 %6, %7, !dbg !10910
  br i1 %cmp, label %for.body, label %for.end, !dbg !10911

for.body:                                         ; preds = %for.cond
  %8 = load i32*, i32** %fis.addr, align 8, !dbg !10912
  %9 = load i32, i32* %i, align 4, !dbg !10913
  %idxprom = sext i32 %9 to i64, !dbg !10912
  %arrayidx = getelementptr i32, i32* %8, i64 %idxprom, !dbg !10912
  %10 = load i32, i32* %arrayidx, align 4, !dbg !10912
  %11 = load i8*, i8** %port_mmio, align 8, !dbg !10914
  %add.ptr4 = getelementptr i8, i8* %11, i64 860, !dbg !10915
  call void @writel(i32 %10, i8* %add.ptr4) #9, !dbg !10916
  br label %for.inc, !dbg !10916

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !10917
  %inc = add i32 %12, 1, !dbg !10917
  store i32 %inc, i32* %i, align 4, !dbg !10917
  br label %for.cond, !dbg !10918, !llvm.loop !10919

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %ifctl, align 4, !dbg !10921
  %or5 = or i32 %13, 512, !dbg !10922
  %conv6 = zext i32 %or5 to i64, !dbg !10921
  %14 = load i8*, i8** %port_mmio, align 8, !dbg !10923
  %add.ptr7 = getelementptr i8, i8* %14, i64 836, !dbg !10924
  call void @writelfl(i64 %conv6, i8* %add.ptr7) #9, !dbg !10925
  %15 = load i32*, i32** %fis.addr, align 8, !dbg !10926
  %16 = load i32, i32* %final_word, align 4, !dbg !10927
  %idxprom8 = sext i32 %16 to i64, !dbg !10926
  %arrayidx9 = getelementptr i32, i32* %15, i64 %idxprom8, !dbg !10926
  %17 = load i32, i32* %arrayidx9, align 4, !dbg !10926
  %conv10 = zext i32 %17 to i64, !dbg !10926
  %18 = load i8*, i8** %port_mmio, align 8, !dbg !10928
  %add.ptr11 = getelementptr i8, i8* %18, i64 860, !dbg !10929
  call void @writelfl(i64 %conv10, i8* %add.ptr11) #9, !dbg !10930
  br label %do.body, !dbg !10931

do.body:                                          ; preds = %land.end, %for.end
  %19 = load i8*, i8** %port_mmio, align 8, !dbg !10932
  %add.ptr12 = getelementptr i8, i8* %19, i64 844, !dbg !10934
  %call13 = call i32 @readl(i8* %add.ptr12) #9, !dbg !10935
  store i32 %call13, i32* %ifstat, align 4, !dbg !10936
  br label %do.cond, !dbg !10937

do.cond:                                          ; preds = %do.body
  %20 = load i32, i32* %ifstat, align 4, !dbg !10938
  %and14 = and i32 %20, 4096, !dbg !10939
  %tobool = icmp ne i32 %and14, 0, !dbg !10939
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !10940

land.rhs:                                         ; preds = %do.cond
  %21 = load i32, i32* %timeout, align 4, !dbg !10941
  %dec = add i32 %21, -1, !dbg !10941
  store i32 %dec, i32* %timeout, align 4, !dbg !10941
  %tobool15 = icmp ne i32 %dec, 0, !dbg !10940
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %22 = phi i1 [ false, %do.cond ], [ %tobool15, %land.rhs ], !dbg !10942
  br i1 %22, label %do.body, label %do.end, !dbg !10937, !llvm.loop !10943

do.end:                                           ; preds = %land.end
  %23 = load i32, i32* %old_ifctl, align 4, !dbg !10945
  %conv16 = zext i32 %23 to i64, !dbg !10945
  %24 = load i8*, i8** %port_mmio, align 8, !dbg !10946
  %add.ptr17 = getelementptr i8, i8* %24, i64 836, !dbg !10947
  call void @writelfl(i64 %conv16, i8* %add.ptr17) #9, !dbg !10948
  %25 = load i32, i32* %ifstat, align 4, !dbg !10949
  %and18 = and i32 %25, 12288, !dbg !10951
  %cmp19 = icmp ne i32 %and18, 4096, !dbg !10952
  br i1 %cmp19, label %if.then, label %if.end, !dbg !10953

if.then:                                          ; preds = %do.end
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10954
  %27 = load i32, i32* %ifstat, align 4, !dbg !10954
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.mv_send_fis, i64 0, i64 0), i32 %27) #9, !dbg !10954
  store i32 256, i32* %retval, align 4, !dbg !10956
  br label %return, !dbg !10956

if.end:                                           ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !10957
  br label %return, !dbg !10957

return:                                           ; preds = %if.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !10958
  ret i32 %28, !dbg !10958
}

; Function Attrs: noredzone
declare dso_local void @ata_sff_queue_pio_task(%struct.ata_link*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_reset_channel(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %port_no) #2 !dbg !10959 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %port_no.addr = alloca i32, align 4
  %port_mmio = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  store i32 %port_no, i32* %port_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_no.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !10966, metadata !DIExpression()), !dbg !10967
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !10968
  %1 = load i32, i32* %port_no.addr, align 4, !dbg !10969
  %call = call i8* @mv_port_base(i8* %0, i32 %1) #9, !dbg !10970
  store i8* %call, i8** %port_mmio, align 8, !dbg !10967
  %2 = load i8*, i8** %port_mmio, align 8, !dbg !10971
  %call1 = call i32 @mv_stop_edma_engine(i8* %2) #9, !dbg !10972
  %3 = load i8*, i8** %port_mmio, align 8, !dbg !10973
  %add.ptr = getelementptr i8, i8* %3, i64 40, !dbg !10974
  call void @writelfl(i64 4, i8* %add.ptr) #9, !dbg !10975
  %4 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !10976
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %4, i32 0, i32 0, !dbg !10976
  %5 = load i32, i32* %hp_flags, align 8, !dbg !10976
  %and = and i32 %5, 64, !dbg !10976
  %tobool = icmp ne i32 %and, 0, !dbg !10976
  br i1 %tobool, label %if.end, label %if.then, !dbg !10978

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %port_mmio, align 8, !dbg !10979
  call void @mv_setup_ifcfg(i8* %6, i32 1) #9, !dbg !10981
  br label %if.end, !dbg !10982

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8*, i8** %port_mmio, align 8, !dbg !10983
  %add.ptr2 = getelementptr i8, i8* %7, i64 40, !dbg !10984
  call void @writelfl(i64 4, i8* %add.ptr2) #9, !dbg !10985
  call void @__const_udelay(i64 107375) #9, !dbg !10986
  %8 = load i8*, i8** %port_mmio, align 8, !dbg !10991
  %add.ptr3 = getelementptr i8, i8* %8, i64 40, !dbg !10992
  call void @writelfl(i64 0, i8* %add.ptr3) #9, !dbg !10993
  %9 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !10994
  %ops = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %9, i32 0, i32 4, !dbg !10995
  %10 = load %struct.mv_hw_ops*, %struct.mv_hw_ops** %ops, align 8, !dbg !10995
  %phy_errata = getelementptr inbounds %struct.mv_hw_ops, %struct.mv_hw_ops* %10, i32 0, i32 0, !dbg !10996
  %11 = load void (%struct.mv_host_priv*, i8*, i32)*, void (%struct.mv_host_priv*, i8*, i32)** %phy_errata, align 8, !dbg !10996
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !10997
  %13 = load i8*, i8** %mmio.addr, align 8, !dbg !10998
  %14 = load i32, i32* %port_no.addr, align 4, !dbg !10999
  call void %11(%struct.mv_host_priv* %12, i8* %13, i32 %14) #9, !dbg !10994
  %15 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !11000
  %hp_flags4 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %15, i32 0, i32 0, !dbg !11000
  %16 = load i32, i32* %hp_flags4, align 8, !dbg !11000
  %and5 = and i32 %16, 64, !dbg !11000
  %tobool6 = icmp ne i32 %and5, 0, !dbg !11000
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11002

if.then7:                                         ; preds = %if.end
  call void @usleep_range(i64 500, i64 1000) #9, !dbg !11003
  br label %if.end8, !dbg !11003

if.end8:                                          ; preds = %if.then7, %if.end
  ret void, !dbg !11004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64* @sata_ehc_deb_timing(%struct.ata_eh_context* %ehc) #2 !dbg !11005 {
entry:
  %retval = alloca i64*, align 8
  %ehc.addr = alloca %struct.ata_eh_context*, align 8
  store %struct.ata_eh_context* %ehc, %struct.ata_eh_context** %ehc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc.addr, metadata !11009, metadata !DIExpression()), !dbg !11010
  %0 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc.addr, align 8, !dbg !11011
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %0, i32 0, i32 0, !dbg !11013
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !11014
  %1 = load i32, i32* %flags, align 4, !dbg !11014
  %and = and i32 %1, 1, !dbg !11015
  %tobool = icmp ne i32 %and, 0, !dbg !11015
  br i1 %tobool, label %if.then, label %if.else, !dbg !11016

if.then:                                          ; preds = %entry
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @sata_deb_timing_hotplug, i64 0, i64 0), i64** %retval, align 8, !dbg !11017
  br label %return, !dbg !11017

if.else:                                          ; preds = %entry
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @sata_deb_timing_normal, i64 0, i64 0), i64** %retval, align 8, !dbg !11018
  br label %return, !dbg !11018

return:                                           ; preds = %if.else, %if.then
  %2 = load i64*, i64** %retval, align 8, !dbg !11019
  ret i64* %2, !dbg !11019
}

; Function Attrs: noredzone
declare dso_local i32 @sata_link_hardreset(%struct.ata_link*, i64*, i64, i8*, i32 (%struct.ata_link*)*) #1

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_read(%struct.ata_link*, i32, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_setup_ifcfg(i8* %port_mmio, i32 %want_gen2i) #2 !dbg !11020 {
entry:
  %port_mmio.addr = alloca i8*, align 8
  %want_gen2i.addr = alloca i32, align 4
  %ifcfg = alloca i32, align 4
  store i8* %port_mmio, i8** %port_mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_mmio.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  store i32 %want_gen2i, i32* %want_gen2i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %want_gen2i.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.declare(metadata i32* %ifcfg, metadata !11027, metadata !DIExpression()), !dbg !11028
  %0 = load i8*, i8** %port_mmio.addr, align 8, !dbg !11029
  %add.ptr = getelementptr i8, i8* %0, i64 80, !dbg !11030
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !11031
  store i32 %call, i32* %ifcfg, align 4, !dbg !11028
  %1 = load i32, i32* %ifcfg, align 4, !dbg !11032
  %and = and i32 %1, 3967, !dbg !11033
  %or = or i32 %and, 10162176, !dbg !11034
  store i32 %or, i32* %ifcfg, align 4, !dbg !11035
  %2 = load i32, i32* %want_gen2i.addr, align 4, !dbg !11036
  %tobool = icmp ne i32 %2, 0, !dbg !11036
  br i1 %tobool, label %if.then, label %if.end, !dbg !11038

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ifcfg, align 4, !dbg !11039
  %or1 = or i32 %3, 128, !dbg !11039
  store i32 %or1, i32* %ifcfg, align 4, !dbg !11039
  br label %if.end, !dbg !11040

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %ifcfg, align 4, !dbg !11041
  %conv = zext i32 %4 to i64, !dbg !11041
  %5 = load i8*, i8** %port_mmio.addr, align 8, !dbg !11042
  %add.ptr2 = getelementptr i8, i8* %5, i64 80, !dbg !11043
  call void @writelfl(i64 %conv, i8* %add.ptr2) #9, !dbg !11044
  ret void, !dbg !11045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_save_cached_regs(%struct.ata_port* %ap) #2 !dbg !11046 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !11049, metadata !DIExpression()), !dbg !11050
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11051
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !11052
  store i8* %call, i8** %port_mmio, align 8, !dbg !11050
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !11053, metadata !DIExpression()), !dbg !11054
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11055
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 49, !dbg !11056
  %2 = load i8*, i8** %private_data, align 32, !dbg !11056
  %3 = bitcast i8* %2 to %struct.mv_port_priv*, !dbg !11055
  store %struct.mv_port_priv* %3, %struct.mv_port_priv** %pp, align 8, !dbg !11054
  %4 = load i8*, i8** %port_mmio, align 8, !dbg !11057
  %add.ptr = getelementptr i8, i8* %4, i64 864, !dbg !11058
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !11059
  %5 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11060
  %cached = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %5, i32 0, i32 9, !dbg !11061
  %fiscfg = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached, i32 0, i32 0, !dbg !11062
  store i32 %call1, i32* %fiscfg, align 4, !dbg !11063
  %6 = load i8*, i8** %port_mmio, align 8, !dbg !11064
  %add.ptr2 = getelementptr i8, i8* %6, i64 780, !dbg !11065
  %call3 = call i32 @readl(i8* %add.ptr2) #9, !dbg !11066
  %7 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11067
  %cached4 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %7, i32 0, i32 9, !dbg !11068
  %ltmode = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached4, i32 0, i32 1, !dbg !11069
  store i32 %call3, i32* %ltmode, align 4, !dbg !11070
  %8 = load i8*, i8** %port_mmio, align 8, !dbg !11071
  %add.ptr5 = getelementptr i8, i8* %8, i64 96, !dbg !11072
  %call6 = call i32 @readl(i8* %add.ptr5) #9, !dbg !11073
  %9 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11074
  %cached7 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %9, i32 0, i32 9, !dbg !11075
  %haltcond = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached7, i32 0, i32 2, !dbg !11076
  store i32 %call6, i32* %haltcond, align 4, !dbg !11077
  %10 = load i8*, i8** %port_mmio, align 8, !dbg !11078
  %add.ptr8 = getelementptr i8, i8* %10, i64 108, !dbg !11079
  %call9 = call i32 @readl(i8* %add.ptr8) #9, !dbg !11080
  %11 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11081
  %cached10 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %11, i32 0, i32 9, !dbg !11082
  %unknown_rsvd = getelementptr inbounds %struct.mv_cached_regs, %struct.mv_cached_regs* %cached10, i32 0, i32 3, !dbg !11083
  store i32 %call9, i32* %unknown_rsvd, align 4, !dbg !11084
  ret void, !dbg !11085
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mv5_phy_base(i8* %mmio, i32 %port) #2 !dbg !11086 {
entry:
  %mmio.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %hc_mmio = alloca i8*, align 8
  %ofs = alloca i64, align 8
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !11087, metadata !DIExpression()), !dbg !11088
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !11091, metadata !DIExpression()), !dbg !11092
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !11093
  %1 = load i32, i32* %port.addr, align 4, !dbg !11094
  %call = call i8* @mv_hc_base_from_port(i8* %0, i32 %1) #9, !dbg !11095
  store i8* %call, i8** %hc_mmio, align 8, !dbg !11092
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !11096, metadata !DIExpression()), !dbg !11097
  %2 = load i32, i32* %port.addr, align 4, !dbg !11098
  %call1 = call i32 @mv_hardport_from_port(i32 %2) #9, !dbg !11099
  %add = add i32 %call1, 1, !dbg !11100
  %conv = zext i32 %add to i64, !dbg !11101
  %mul = mul i64 %conv, 256, !dbg !11102
  store i64 %mul, i64* %ofs, align 8, !dbg !11097
  %3 = load i8*, i8** %hc_mmio, align 8, !dbg !11103
  %4 = load i64, i64* %ofs, align 8, !dbg !11104
  %add.ptr = getelementptr i8, i8* %3, i64 %4, !dbg !11105
  ret i8* %add.ptr, !dbg !11106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv5_scr_offset(i32 %sc_reg_in) #2 !dbg !11107 {
entry:
  %sc_reg_in.addr = alloca i32, align 4
  %ofs = alloca i32, align 4
  store i32 %sc_reg_in, i32* %sc_reg_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sc_reg_in.addr, metadata !11108, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !11110, metadata !DIExpression()), !dbg !11111
  %0 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !11112
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
  ], !dbg !11113

sw.bb:                                            ; preds = %entry, %entry, %entry
  %1 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !11114
  %conv = zext i32 %1 to i64, !dbg !11114
  %mul = mul i64 %conv, 4, !dbg !11116
  %conv1 = trunc i64 %mul to i32, !dbg !11114
  store i32 %conv1, i32* %ofs, align 4, !dbg !11117
  br label %sw.epilog, !dbg !11118

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %ofs, align 4, !dbg !11119
  br label %sw.epilog, !dbg !11120

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %ofs, align 4, !dbg !11121
  ret i32 %2, !dbg !11122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_pool_zalloc(%struct.dma_pool* %pool, i32 %mem_flags, i64* %handle) #2 !dbg !11123 {
entry:
  %pool.addr = alloca %struct.dma_pool*, align 8
  %mem_flags.addr = alloca i32, align 4
  %handle.addr = alloca i64*, align 8
  store %struct.dma_pool* %pool, %struct.dma_pool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_pool** %pool.addr, metadata !11127, metadata !DIExpression()), !dbg !11128
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !11129, metadata !DIExpression()), !dbg !11130
  store i64* %handle, i64** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %handle.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  %0 = load %struct.dma_pool*, %struct.dma_pool** %pool.addr, align 8, !dbg !11133
  %1 = load i32, i32* %mem_flags.addr, align 4, !dbg !11134
  %or = or i32 %1, 256, !dbg !11135
  %2 = load i64*, i64** %handle.addr, align 8, !dbg !11136
  %call = call i8* @dma_pool_alloc(%struct.dma_pool* %0, i32 %or, i64* %2) #9, !dbg !11137
  ret i8* %call, !dbg !11138
}

; Function Attrs: noredzone
declare dso_local i8* @dma_pool_alloc(%struct.dma_pool*, i32, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !11139 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !11143, metadata !DIExpression()), !dbg !11144
  %call = call i64 @arch_local_save_flags() #9, !dbg !11145
  store i64 %call, i64* %f, align 8, !dbg !11146
  call void @arch_local_irq_disable() #9, !dbg !11147
  %0 = load i64, i64* %f, align 8, !dbg !11148
  ret i64 %0, !dbg !11149
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_port_free_dma_mem(%struct.ata_port* %ap) #2 !dbg !11150 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %tag = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11151, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !11153, metadata !DIExpression()), !dbg !11154
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11155
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !11156
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !11156
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 5, !dbg !11157
  %2 = load i8*, i8** %private_data, align 8, !dbg !11157
  %3 = bitcast i8* %2 to %struct.mv_host_priv*, !dbg !11155
  store %struct.mv_host_priv* %3, %struct.mv_host_priv** %hpriv, align 8, !dbg !11154
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !11158, metadata !DIExpression()), !dbg !11159
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11160
  %private_data1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 49, !dbg !11161
  %5 = load i8*, i8** %private_data1, align 32, !dbg !11161
  %6 = bitcast i8* %5 to %struct.mv_port_priv*, !dbg !11160
  store %struct.mv_port_priv* %6, %struct.mv_port_priv** %pp, align 8, !dbg !11159
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !11162, metadata !DIExpression()), !dbg !11163
  %7 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11164
  %crqb = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %7, i32 0, i32 0, !dbg !11166
  %8 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb, align 8, !dbg !11166
  %tobool = icmp ne %struct.mv_crqb* %8, null, !dbg !11164
  br i1 %tobool, label %if.then, label %if.end, !dbg !11167

if.then:                                          ; preds = %entry
  %9 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11168
  %crqb_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %9, i32 0, i32 15, !dbg !11170
  %10 = load %struct.dma_pool*, %struct.dma_pool** %crqb_pool, align 8, !dbg !11170
  %11 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11171
  %crqb2 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %11, i32 0, i32 0, !dbg !11172
  %12 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb2, align 8, !dbg !11172
  %13 = bitcast %struct.mv_crqb* %12 to i8*, !dbg !11171
  %14 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11173
  %crqb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %14, i32 0, i32 1, !dbg !11174
  %15 = load i64, i64* %crqb_dma, align 8, !dbg !11174
  call void @dma_pool_free(%struct.dma_pool* %10, i8* %13, i64 %15) #9, !dbg !11175
  %16 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11176
  %crqb3 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %16, i32 0, i32 0, !dbg !11177
  store %struct.mv_crqb* null, %struct.mv_crqb** %crqb3, align 8, !dbg !11178
  br label %if.end, !dbg !11179

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11180
  %crpb = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %17, i32 0, i32 2, !dbg !11182
  %18 = load %struct.mv_crpb*, %struct.mv_crpb** %crpb, align 8, !dbg !11182
  %tobool4 = icmp ne %struct.mv_crpb* %18, null, !dbg !11180
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !11183

if.then5:                                         ; preds = %if.end
  %19 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11184
  %crpb_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %19, i32 0, i32 16, !dbg !11186
  %20 = load %struct.dma_pool*, %struct.dma_pool** %crpb_pool, align 8, !dbg !11186
  %21 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11187
  %crpb6 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %21, i32 0, i32 2, !dbg !11188
  %22 = load %struct.mv_crpb*, %struct.mv_crpb** %crpb6, align 8, !dbg !11188
  %23 = bitcast %struct.mv_crpb* %22 to i8*, !dbg !11187
  %24 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11189
  %crpb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %24, i32 0, i32 3, !dbg !11190
  %25 = load i64, i64* %crpb_dma, align 8, !dbg !11190
  call void @dma_pool_free(%struct.dma_pool* %20, i8* %23, i64 %25) #9, !dbg !11191
  %26 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11192
  %crpb7 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %26, i32 0, i32 2, !dbg !11193
  store %struct.mv_crpb* null, %struct.mv_crpb** %crpb7, align 8, !dbg !11194
  br label %if.end8, !dbg !11195

if.end8:                                          ; preds = %if.then5, %if.end
  store i32 0, i32* %tag, align 4, !dbg !11196
  br label %for.cond, !dbg !11198

for.cond:                                         ; preds = %for.inc, %if.end8
  %27 = load i32, i32* %tag, align 4, !dbg !11199
  %cmp = icmp slt i32 %27, 32, !dbg !11201
  br i1 %cmp, label %for.body, label %for.end, !dbg !11202

for.body:                                         ; preds = %for.cond
  %28 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11203
  %sg_tbl = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %28, i32 0, i32 4, !dbg !11206
  %29 = load i32, i32* %tag, align 4, !dbg !11207
  %idxprom = sext i32 %29 to i64, !dbg !11203
  %arrayidx = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl, i64 0, i64 %idxprom, !dbg !11203
  %30 = load %struct.mv_sg*, %struct.mv_sg** %arrayidx, align 8, !dbg !11203
  %tobool9 = icmp ne %struct.mv_sg* %30, null, !dbg !11203
  br i1 %tobool9, label %if.then10, label %if.end23, !dbg !11208

if.then10:                                        ; preds = %for.body
  %31 = load i32, i32* %tag, align 4, !dbg !11209
  %cmp11 = icmp eq i32 %31, 0, !dbg !11212
  br i1 %cmp11, label %if.then13, label %lor.lhs.false, !dbg !11213

lor.lhs.false:                                    ; preds = %if.then10
  %32 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11214
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %32, i32 0, i32 0, !dbg !11214
  %33 = load i32, i32* %hp_flags, align 8, !dbg !11214
  %and = and i32 %33, 64, !dbg !11214
  %tobool12 = icmp ne i32 %and, 0, !dbg !11214
  br i1 %tobool12, label %if.end19, label %if.then13, !dbg !11215

if.then13:                                        ; preds = %lor.lhs.false, %if.then10
  %34 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11216
  %sg_tbl_pool = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %34, i32 0, i32 17, !dbg !11217
  %35 = load %struct.dma_pool*, %struct.dma_pool** %sg_tbl_pool, align 8, !dbg !11217
  %36 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11218
  %sg_tbl14 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %36, i32 0, i32 4, !dbg !11219
  %37 = load i32, i32* %tag, align 4, !dbg !11220
  %idxprom15 = sext i32 %37 to i64, !dbg !11218
  %arrayidx16 = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl14, i64 0, i64 %idxprom15, !dbg !11218
  %38 = load %struct.mv_sg*, %struct.mv_sg** %arrayidx16, align 8, !dbg !11218
  %39 = bitcast %struct.mv_sg* %38 to i8*, !dbg !11218
  %40 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11221
  %sg_tbl_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %40, i32 0, i32 5, !dbg !11222
  %41 = load i32, i32* %tag, align 4, !dbg !11223
  %idxprom17 = sext i32 %41 to i64, !dbg !11221
  %arrayidx18 = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma, i64 0, i64 %idxprom17, !dbg !11221
  %42 = load i64, i64* %arrayidx18, align 8, !dbg !11221
  call void @dma_pool_free(%struct.dma_pool* %35, i8* %39, i64 %42) #9, !dbg !11224
  br label %if.end19, !dbg !11224

if.end19:                                         ; preds = %if.then13, %lor.lhs.false
  %43 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11225
  %sg_tbl20 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %43, i32 0, i32 4, !dbg !11226
  %44 = load i32, i32* %tag, align 4, !dbg !11227
  %idxprom21 = sext i32 %44 to i64, !dbg !11225
  %arrayidx22 = getelementptr [32 x %struct.mv_sg*], [32 x %struct.mv_sg*]* %sg_tbl20, i64 0, i64 %idxprom21, !dbg !11225
  store %struct.mv_sg* null, %struct.mv_sg** %arrayidx22, align 8, !dbg !11228
  br label %if.end23, !dbg !11229

if.end23:                                         ; preds = %if.end19, %for.body
  br label %for.inc, !dbg !11230

for.inc:                                          ; preds = %if.end23
  %45 = load i32, i32* %tag, align 4, !dbg !11231
  %inc = add i32 %45, 1, !dbg !11231
  store i32 %inc, i32* %tag, align 4, !dbg !11231
  br label %for.cond, !dbg !11232, !llvm.loop !11233

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !11236 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !11237, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11240, metadata !DIExpression()), !dbg !11239
  %0 = load i64, i64* %__edi, align 8, !dbg !11239
  store i64 %0, i64* %__edi, align 8, !dbg !11239
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11241, metadata !DIExpression()), !dbg !11239
  %1 = load i64, i64* %__esi, align 8, !dbg !11239
  store i64 %1, i64* %__esi, align 8, !dbg !11239
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11242, metadata !DIExpression()), !dbg !11239
  %2 = load i64, i64* %__edx, align 8, !dbg !11239
  store i64 %2, i64* %__edx, align 8, !dbg !11239
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11243, metadata !DIExpression()), !dbg !11239
  %3 = load i64, i64* %__ecx, align 8, !dbg !11239
  store i64 %3, i64* %__ecx, align 8, !dbg !11239
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11244, metadata !DIExpression()), !dbg !11239
  %4 = load i64, i64* %__eax, align 8, !dbg !11239
  store i64 %4, i64* %__eax, align 8, !dbg !11239
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !11239
  %6 = call i64 @llvm.read_register.i64(metadata !7974), !dbg !11245
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !11245, !srcloc !11248
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11245
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11245
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11245
  call void @llvm.write_register.i64(metadata !7974, i64 %asmresult1), !dbg !11245
  %8 = load i64, i64* %__eax, align 8, !dbg !11245
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !11249, metadata !DIExpression()), !dbg !11251
  store i64 -1, i64* %__mask, align 8, !dbg !11251
  %9 = load i64, i64* %__mask, align 8, !dbg !11251
  store i64 %9, i64* %tmp, align 8, !dbg !11251
  %10 = load i64, i64* %tmp, align 8, !dbg !11251
  %and = and i64 %8, %10, !dbg !11245
  store i64 %and, i64* %__ret, align 8, !dbg !11245
  %11 = load i64, i64* %__ret, align 8, !dbg !11239
  store i64 %11, i64* %tmp2, align 8, !dbg !11252
  %12 = load i64, i64* %tmp2, align 8, !dbg !11239
  ret i64 %12, !dbg !11253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !11254 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11255, metadata !DIExpression()), !dbg !11257
  %0 = load i64, i64* %__edi, align 8, !dbg !11257
  store i64 %0, i64* %__edi, align 8, !dbg !11257
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11258, metadata !DIExpression()), !dbg !11257
  %1 = load i64, i64* %__esi, align 8, !dbg !11257
  store i64 %1, i64* %__esi, align 8, !dbg !11257
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11259, metadata !DIExpression()), !dbg !11257
  %2 = load i64, i64* %__edx, align 8, !dbg !11257
  store i64 %2, i64* %__edx, align 8, !dbg !11257
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11260, metadata !DIExpression()), !dbg !11257
  %3 = load i64, i64* %__ecx, align 8, !dbg !11257
  store i64 %3, i64* %__ecx, align 8, !dbg !11257
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11261, metadata !DIExpression()), !dbg !11257
  %4 = load i64, i64* %__eax, align 8, !dbg !11257
  store i64 %4, i64* %__eax, align 8, !dbg !11257
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !11257
  %6 = call i64 @llvm.read_register.i64(metadata !7974), !dbg !11257
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !11257, !srcloc !11262
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11257
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11257
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11257
  call void @llvm.write_register.i64(metadata !7974, i64 %asmresult1), !dbg !11257
  ret void, !dbg !11263
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !11264 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11267, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11269, metadata !DIExpression()), !dbg !11271
  %0 = load i64, i64* %__edi, align 8, !dbg !11271
  store i64 %0, i64* %__edi, align 8, !dbg !11271
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11272, metadata !DIExpression()), !dbg !11271
  %1 = load i64, i64* %__esi, align 8, !dbg !11271
  store i64 %1, i64* %__esi, align 8, !dbg !11271
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11273, metadata !DIExpression()), !dbg !11271
  %2 = load i64, i64* %__edx, align 8, !dbg !11271
  store i64 %2, i64* %__edx, align 8, !dbg !11271
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11274, metadata !DIExpression()), !dbg !11271
  %3 = load i64, i64* %__ecx, align 8, !dbg !11271
  store i64 %3, i64* %__ecx, align 8, !dbg !11271
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11275, metadata !DIExpression()), !dbg !11271
  %4 = load i64, i64* %__eax, align 8, !dbg !11271
  store i64 %4, i64* %__eax, align 8, !dbg !11271
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11271
  %6 = call i64 @llvm.read_register.i64(metadata !7974), !dbg !11271
  %7 = load i64, i64* %f.addr, align 8, !dbg !11271
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !11271, !srcloc !11276
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11271
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11271
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11271
  call void @llvm.write_register.i64(metadata !7974, i64 %asmresult1), !dbg !11271
  ret void, !dbg !11277
}

; Function Attrs: noredzone
declare dso_local void @dma_pool_free(%struct.dma_pool*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_check_atapi_dma(%struct.ata_queued_cmd* %qc) #2 !dbg !11278 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11279, metadata !DIExpression()), !dbg !11280
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !11281, metadata !DIExpression()), !dbg !11282
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11283
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !11284
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !11284
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !11282
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !11285
  %tobool = icmp ne %struct.scsi_cmnd* %2, null, !dbg !11285
  br i1 %tobool, label %if.then, label %if.end, !dbg !11287

if.then:                                          ; preds = %entry
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !11288
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 14, !dbg !11290
  %4 = load i8*, i8** %cmnd, align 8, !dbg !11290
  %arrayidx = getelementptr i8, i8* %4, i64 0, !dbg !11288
  %5 = load i8, i8* %arrayidx, align 1, !dbg !11288
  %conv = zext i8 %5 to i32, !dbg !11288
  switch i32 %conv, label %sw.epilog [
    i32 8, label %sw.bb
    i32 40, label %sw.bb
    i32 168, label %sw.bb
    i32 10, label %sw.bb
    i32 42, label %sw.bb
    i32 170, label %sw.bb
    i32 190, label %sw.bb
    i32 191, label %sw.bb
    i32 93, label %sw.bb
  ], !dbg !11291

sw.bb:                                            ; preds = %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then
  store i32 0, i32* %retval, align 4, !dbg !11292
  br label %return, !dbg !11292

sw.epilog:                                        ; preds = %if.then
  br label %if.end, !dbg !11294

if.end:                                           ; preds = %sw.epilog, %entry
  store i32 -95, i32* %retval, align 4, !dbg !11295
  br label %return, !dbg !11295

return:                                           ; preds = %if.end, %sw.bb
  %6 = load i32, i32* %retval, align 4, !dbg !11296
  ret i32 %6, !dbg !11296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv6_dev_config(%struct.ata_device* %adev) #2 !dbg !11297 {
entry:
  %adev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %adev, %struct.ata_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %adev.addr, metadata !11298, metadata !DIExpression()), !dbg !11299
  %0 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !11300
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 3, !dbg !11302
  %1 = load i64, i64* %flags, align 16, !dbg !11302
  %and = and i64 %1, 8, !dbg !11303
  %tobool = icmp ne i64 %and, 0, !dbg !11303
  br i1 %tobool, label %if.then, label %if.end4, !dbg !11304

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !11305
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 0, !dbg !11308
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !11308
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !11309
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11309
  %call = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %4) #9, !dbg !11310
  br i1 %call, label %if.then1, label %if.end, !dbg !11311

if.then1:                                         ; preds = %if.then
  %5 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !11312
  %flags2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 3, !dbg !11314
  %6 = load i64, i64* %flags2, align 16, !dbg !11315
  %and3 = and i64 %6, -9, !dbg !11315
  store i64 %and3, i64* %flags2, align 16, !dbg !11315
  %7 = load %struct.ata_device*, %struct.ata_device** %adev.addr, align 8, !dbg !11316
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !11316
  br label %if.end, !dbg !11317

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end4, !dbg !11318

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !11319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_softreset(%struct.ata_link* %link, i32* %class, i64 %deadline) #2 !dbg !11320 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %class.addr = alloca i32*, align 8
  %deadline.addr = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11321, metadata !DIExpression()), !dbg !11322
  store i32* %class, i32** %class.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %class.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !11325, metadata !DIExpression()), !dbg !11326
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11327
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !11328
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11328
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11329
  %call = call i32 @sata_srst_pmp(%struct.ata_link* %2) #9, !dbg !11330
  call void @mv_pmp_select(%struct.ata_port* %1, i32 %call) #9, !dbg !11331
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11332
  %4 = load i32*, i32** %class.addr, align 8, !dbg !11333
  %5 = load i64, i64* %deadline.addr, align 8, !dbg !11334
  %call1 = call i32 @ata_sff_softreset(%struct.ata_link* %3, i32* %4, i64 %5) #9, !dbg !11335
  ret i32 %call1, !dbg !11336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_pmp_hardreset(%struct.ata_link* %link, i32* %class, i64 %deadline) #2 !dbg !11337 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %class.addr = alloca i32*, align 8
  %deadline.addr = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11338, metadata !DIExpression()), !dbg !11339
  store i32* %class, i32** %class.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %class.addr, metadata !11340, metadata !DIExpression()), !dbg !11341
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !11342, metadata !DIExpression()), !dbg !11343
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11344
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !11345
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11345
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11346
  %call = call i32 @sata_srst_pmp(%struct.ata_link* %2) #9, !dbg !11347
  call void @mv_pmp_select(%struct.ata_port* %1, i32 %call) #9, !dbg !11348
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11349
  %4 = load i32*, i32** %class.addr, align 8, !dbg !11350
  %5 = load i64, i64* %deadline.addr, align 8, !dbg !11351
  %call1 = call i32 @sata_std_hardreset(%struct.ata_link* %3, i32* %4, i64 %5) #9, !dbg !11352
  ret i32 %call1, !dbg !11353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_pmp_error_handler(%struct.ata_port* %ap) #2 !dbg !11354 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %pmp = alloca i32, align 4
  %pmp_map = alloca i32, align 4
  %pp = alloca %struct.mv_port_priv*, align 8
  %this_pmp = alloca i32, align 4
  %link = alloca %struct.ata_link*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11355, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.declare(metadata i32* %pmp, metadata !11357, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.declare(metadata i32* %pmp_map, metadata !11359, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !11361, metadata !DIExpression()), !dbg !11362
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11363
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !11364
  %1 = load i8*, i8** %private_data, align 32, !dbg !11364
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !11363
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !11362
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11365
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 8, !dbg !11367
  %4 = load i32, i32* %pp_flags, align 8, !dbg !11367
  %and = and i32 %4, 8, !dbg !11368
  %tobool = icmp ne i32 %and, 0, !dbg !11368
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11369

if.then:                                          ; preds = %entry
  %5 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11370
  %delayed_eh_pmp_map = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %5, i32 0, i32 10, !dbg !11372
  %6 = load i32, i32* %delayed_eh_pmp_map, align 4, !dbg !11372
  store i32 %6, i32* %pmp_map, align 4, !dbg !11373
  %7 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11374
  %pp_flags1 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %7, i32 0, i32 8, !dbg !11375
  %8 = load i32, i32* %pp_flags1, align 8, !dbg !11376
  %and2 = and i32 %8, -9, !dbg !11376
  store i32 %and2, i32* %pp_flags1, align 8, !dbg !11376
  store i32 0, i32* %pmp, align 4, !dbg !11377
  br label %for.cond, !dbg !11379

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %pmp_map, align 4, !dbg !11380
  %cmp = icmp ne i32 %9, 0, !dbg !11382
  br i1 %cmp, label %for.body, label %for.end, !dbg !11383

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %this_pmp, metadata !11384, metadata !DIExpression()), !dbg !11386
  %10 = load i32, i32* %pmp, align 4, !dbg !11387
  %shl = shl i32 1, %10, !dbg !11388
  store i32 %shl, i32* %this_pmp, align 4, !dbg !11386
  %11 = load i32, i32* %pmp_map, align 4, !dbg !11389
  %12 = load i32, i32* %this_pmp, align 4, !dbg !11391
  %and3 = and i32 %11, %12, !dbg !11392
  %tobool4 = icmp ne i32 %and3, 0, !dbg !11392
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !11393

if.then5:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !11394, metadata !DIExpression()), !dbg !11396
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11397
  %pmp_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 28, !dbg !11398
  %14 = load %struct.ata_link*, %struct.ata_link** %pmp_link, align 16, !dbg !11398
  %15 = load i32, i32* %pmp, align 4, !dbg !11399
  %idxprom = zext i32 %15 to i64, !dbg !11397
  %arrayidx = getelementptr %struct.ata_link, %struct.ata_link* %14, i64 %idxprom, !dbg !11397
  store %struct.ata_link* %arrayidx, %struct.ata_link** %link, align 8, !dbg !11396
  %16 = load i32, i32* %this_pmp, align 4, !dbg !11400
  %neg = xor i32 %16, -1, !dbg !11401
  %17 = load i32, i32* %pmp_map, align 4, !dbg !11402
  %and6 = and i32 %17, %neg, !dbg !11402
  store i32 %and6, i32* %pmp_map, align 4, !dbg !11402
  %18 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11403
  call void @ata_eh_analyze_ncq_error(%struct.ata_link* %18) #9, !dbg !11404
  br label %if.end, !dbg !11405

if.end:                                           ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !11406

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %pmp, align 4, !dbg !11407
  %inc = add i32 %19, 1, !dbg !11407
  store i32 %inc, i32* %pmp, align 4, !dbg !11407
  br label %for.cond, !dbg !11408, !llvm.loop !11409

for.end:                                          ; preds = %for.cond
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11411
  %call = call i32 @ata_port_freeze(%struct.ata_port* %20) #9, !dbg !11412
  br label %if.end7, !dbg !11413

if.end7:                                          ; preds = %for.end, %entry
  %21 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11414
  call void @sata_pmp_error_handler(%struct.ata_port* %21) #9, !dbg !11415
  ret void, !dbg !11416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_scr_read(%struct.ata_link* %link, i32 %sc_reg_in, i32* %val) #2 !dbg !11417 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %sc_reg_in.addr = alloca i32, align 4
  %val.addr = alloca i32*, align 8
  %ofs = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11418, metadata !DIExpression()), !dbg !11419
  store i32 %sc_reg_in, i32* %sc_reg_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sc_reg_in.addr, metadata !11420, metadata !DIExpression()), !dbg !11421
  store i32* %val, i32** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %val.addr, metadata !11422, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !11424, metadata !DIExpression()), !dbg !11425
  %0 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !11426
  %call = call i32 @mv_scr_offset(i32 %0) #9, !dbg !11427
  store i32 %call, i32* %ofs, align 4, !dbg !11425
  %1 = load i32, i32* %ofs, align 4, !dbg !11428
  %cmp = icmp ne i32 %1, -1, !dbg !11430
  br i1 %cmp, label %if.then, label %if.else, !dbg !11431

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11432
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !11434
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11434
  %call1 = call i8* @mv_ap_base(%struct.ata_port* %3) #9, !dbg !11435
  %4 = load i32, i32* %ofs, align 4, !dbg !11436
  %idx.ext = zext i32 %4 to i64, !dbg !11437
  %add.ptr = getelementptr i8, i8* %call1, i64 %idx.ext, !dbg !11437
  %call2 = call i32 @readl(i8* %add.ptr) #9, !dbg !11438
  %5 = load i32*, i32** %val.addr, align 8, !dbg !11439
  store i32 %call2, i32* %5, align 4, !dbg !11440
  store i32 0, i32* %retval, align 4, !dbg !11441
  br label %return, !dbg !11441

if.else:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11442
  br label %return, !dbg !11442

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11443
  ret i32 %6, !dbg !11443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_scr_write(%struct.ata_link* %link, i32 %sc_reg_in, i32 %val) #2 !dbg !11444 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %sc_reg_in.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %ofs = alloca i32, align 4
  %addr = alloca i8*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %lp_phy_addr = alloca i8*, align 8
  %lp_phy_val = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11445, metadata !DIExpression()), !dbg !11446
  store i32 %sc_reg_in, i32* %sc_reg_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sc_reg_in.addr, metadata !11447, metadata !DIExpression()), !dbg !11448
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11449, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !11451, metadata !DIExpression()), !dbg !11452
  %0 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !11453
  %call = call i32 @mv_scr_offset(i32 %0) #9, !dbg !11454
  store i32 %call, i32* %ofs, align 4, !dbg !11452
  %1 = load i32, i32* %ofs, align 4, !dbg !11455
  %cmp = icmp ne i32 %1, -1, !dbg !11457
  br i1 %cmp, label %if.then, label %if.else, !dbg !11458

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !11459, metadata !DIExpression()), !dbg !11461
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11462
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !11463
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11463
  %call1 = call i8* @mv_ap_base(%struct.ata_port* %3) #9, !dbg !11464
  %4 = load i32, i32* %ofs, align 4, !dbg !11465
  %idx.ext = zext i32 %4 to i64, !dbg !11466
  %add.ptr = getelementptr i8, i8* %call1, i64 %idx.ext, !dbg !11466
  store i8* %add.ptr, i8** %addr, align 8, !dbg !11461
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !11467, metadata !DIExpression()), !dbg !11468
  %5 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11469
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 0, !dbg !11470
  %6 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !11470
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 31, !dbg !11471
  %7 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !11471
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %7, i32 0, i32 5, !dbg !11472
  %8 = load i8*, i8** %private_data, align 8, !dbg !11472
  %9 = bitcast i8* %8 to %struct.mv_host_priv*, !dbg !11469
  store %struct.mv_host_priv* %9, %struct.mv_host_priv** %hpriv, align 8, !dbg !11468
  %10 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !11473
  %cmp3 = icmp eq i32 %10, 2, !dbg !11475
  br i1 %cmp3, label %if.then4, label %if.end21, !dbg !11476

if.then4:                                         ; preds = %if.then
  %11 = load i32, i32* %val.addr, align 4, !dbg !11477
  %and = and i32 %11, 15, !dbg !11480
  %cmp5 = icmp eq i32 %and, 1, !dbg !11481
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !11482

lor.lhs.false:                                    ; preds = %if.then4
  %12 = load i8*, i8** %addr, align 8, !dbg !11483
  %call6 = call i32 @readl(i8* %12) #9, !dbg !11484
  %and7 = and i32 %call6, 15, !dbg !11485
  %cmp8 = icmp eq i32 %and7, 1, !dbg !11486
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !11487

if.then9:                                         ; preds = %lor.lhs.false, %if.then4
  %13 = load i32, i32* %val.addr, align 4, !dbg !11488
  %or = or i32 %13, 61440, !dbg !11488
  store i32 %or, i32* %val.addr, align 4, !dbg !11488
  br label %if.end, !dbg !11489

if.end:                                           ; preds = %if.then9, %lor.lhs.false
  %14 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11490
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %14, i32 0, i32 0, !dbg !11492
  %15 = load i32, i32* %hp_flags, align 8, !dbg !11492
  %and10 = and i32 %15, 8192, !dbg !11493
  %tobool = icmp ne i32 %and10, 0, !dbg !11493
  br i1 %tobool, label %if.then11, label %if.end20, !dbg !11494

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %lp_phy_addr, metadata !11495, metadata !DIExpression()), !dbg !11497
  %16 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11498
  %ap12 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %16, i32 0, i32 0, !dbg !11499
  %17 = load %struct.ata_port*, %struct.ata_port** %ap12, align 64, !dbg !11499
  %call13 = call i8* @mv_ap_base(%struct.ata_port* %17) #9, !dbg !11500
  %add.ptr14 = getelementptr i8, i8* %call13, i64 88, !dbg !11501
  store i8* %add.ptr14, i8** %lp_phy_addr, align 8, !dbg !11497
  call void @llvm.dbg.declare(metadata i32* %lp_phy_val, metadata !11502, metadata !DIExpression()), !dbg !11503
  store i32 7, i32* %lp_phy_val, align 4, !dbg !11503
  %18 = load i32, i32* %val.addr, align 4, !dbg !11504
  %and15 = and i32 %18, 240, !dbg !11506
  %cmp16 = icmp ne i32 %and15, 16, !dbg !11507
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !11508

if.then17:                                        ; preds = %if.then11
  %19 = load i32, i32* %lp_phy_val, align 4, !dbg !11509
  %or18 = or i32 %19, 544, !dbg !11509
  store i32 %or18, i32* %lp_phy_val, align 4, !dbg !11509
  br label %if.end19, !dbg !11510

if.end19:                                         ; preds = %if.then17, %if.then11
  %20 = load i32, i32* %lp_phy_val, align 4, !dbg !11511
  %conv = zext i32 %20 to i64, !dbg !11511
  %21 = load i8*, i8** %lp_phy_addr, align 8, !dbg !11512
  call void @writelfl(i64 %conv, i8* %21) #9, !dbg !11513
  br label %if.end20, !dbg !11514

if.end20:                                         ; preds = %if.end19, %if.end
  br label %if.end21, !dbg !11515

if.end21:                                         ; preds = %if.end20, %if.then
  %22 = load i32, i32* %val.addr, align 4, !dbg !11516
  %conv22 = zext i32 %22 to i64, !dbg !11516
  %23 = load i8*, i8** %addr, align 8, !dbg !11517
  call void @writelfl(i64 %conv22, i8* %23) #9, !dbg !11518
  store i32 0, i32* %retval, align 4, !dbg !11519
  br label %return, !dbg !11519

if.else:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11520
  br label %return, !dbg !11520

return:                                           ; preds = %if.else, %if.end21
  %24 = load i32, i32* %retval, align 4, !dbg !11521
  ret i32 %24, !dbg !11521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mv_sff_check_status(%struct.ata_port* %ap) #2 !dbg !11522 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %stat = alloca i8, align 1
  %pp = alloca %struct.mv_port_priv*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11523, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.declare(metadata i8* %stat, metadata !11525, metadata !DIExpression()), !dbg !11526
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11527
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !11528
  %status_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 9, !dbg !11529
  %1 = load i8*, i8** %status_addr, align 8, !dbg !11529
  %call = call i32 @ioread8(i8* %1) #9, !dbg !11530
  %conv = trunc i32 %call to i8, !dbg !11530
  store i8 %conv, i8* %stat, align 1, !dbg !11526
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !11531, metadata !DIExpression()), !dbg !11532
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11533
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 49, !dbg !11534
  %3 = load i8*, i8** %private_data, align 32, !dbg !11534
  %4 = bitcast i8* %3 to %struct.mv_port_priv*, !dbg !11533
  store %struct.mv_port_priv* %4, %struct.mv_port_priv** %pp, align 8, !dbg !11532
  %5 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11535
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %5, i32 0, i32 8, !dbg !11537
  %6 = load i32, i32* %pp_flags, align 8, !dbg !11537
  %and = and i32 %6, 16, !dbg !11538
  %tobool = icmp ne i32 %and, 0, !dbg !11538
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11539

if.then:                                          ; preds = %entry
  %7 = load i8, i8* %stat, align 1, !dbg !11540
  %conv1 = zext i8 %7 to i32, !dbg !11540
  %and2 = and i32 %conv1, 137, !dbg !11543
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11543
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !11544

if.then4:                                         ; preds = %if.then
  %8 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11545
  %pp_flags5 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %8, i32 0, i32 8, !dbg !11546
  %9 = load i32, i32* %pp_flags5, align 8, !dbg !11547
  %and6 = and i32 %9, -17, !dbg !11547
  store i32 %and6, i32* %pp_flags5, align 8, !dbg !11547
  br label %if.end, !dbg !11545

if.else:                                          ; preds = %if.then
  store i8 -128, i8* %stat, align 1, !dbg !11548
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end7, !dbg !11549

if.end7:                                          ; preds = %if.end, %entry
  %10 = load i8, i8* %stat, align 1, !dbg !11550
  ret i8 %10, !dbg !11551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_sff_irq_clear(%struct.ata_port* %ap) #2 !dbg !11552 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11553, metadata !DIExpression()), !dbg !11554
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11555
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11556
  %call = call i8* @mv_ap_base(%struct.ata_port* %1) #9, !dbg !11557
  call void @mv_clear_and_enable_port_irqs(%struct.ata_port* %0, i8* %call, i32 1) #9, !dbg !11558
  ret void, !dbg !11559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_bmdma_setup(%struct.ata_queued_cmd* %qc) #2 !dbg !11560 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11561, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11563, metadata !DIExpression()), !dbg !11564
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11565
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !11566
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !11566
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !11564
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !11567, metadata !DIExpression()), !dbg !11568
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11569
  %call = call i8* @mv_ap_base(%struct.ata_port* %2) #9, !dbg !11570
  store i8* %call, i8** %port_mmio, align 8, !dbg !11568
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !11571, metadata !DIExpression()), !dbg !11572
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11573
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 49, !dbg !11574
  %4 = load i8*, i8** %private_data, align 32, !dbg !11574
  %5 = bitcast i8* %4 to %struct.mv_port_priv*, !dbg !11573
  store %struct.mv_port_priv* %5, %struct.mv_port_priv** %pp, align 8, !dbg !11572
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11575
  call void @mv_fill_sg(%struct.ata_queued_cmd* %6) #9, !dbg !11576
  %7 = load i8*, i8** %port_mmio, align 8, !dbg !11577
  %add.ptr = getelementptr i8, i8* %7, i64 548, !dbg !11578
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !11579
  %8 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11580
  %sg_tbl_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %8, i32 0, i32 5, !dbg !11581
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11582
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 8, !dbg !11583
  %10 = load i32, i32* %hw_tag, align 4, !dbg !11583
  %idxprom = zext i32 %10 to i64, !dbg !11580
  %arrayidx = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma, i64 0, i64 %idxprom, !dbg !11580
  %11 = load i64, i64* %arrayidx, align 8, !dbg !11580
  %shr = lshr i64 %11, 16, !dbg !11584
  %shr2 = lshr i64 %shr, 16, !dbg !11585
  %conv = trunc i64 %shr2 to i32, !dbg !11586
  %12 = load i8*, i8** %port_mmio, align 8, !dbg !11587
  %add.ptr3 = getelementptr i8, i8* %12, i64 560, !dbg !11588
  call void @writel(i32 %conv, i8* %add.ptr3) #9, !dbg !11589
  %13 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11590
  %sg_tbl_dma4 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %13, i32 0, i32 5, !dbg !11591
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11592
  %hw_tag5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 8, !dbg !11593
  %15 = load i32, i32* %hw_tag5, align 4, !dbg !11593
  %idxprom6 = zext i32 %15 to i64, !dbg !11590
  %arrayidx7 = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma4, i64 0, i64 %idxprom6, !dbg !11590
  %16 = load i64, i64* %arrayidx7, align 8, !dbg !11590
  %17 = load i8*, i8** %port_mmio, align 8, !dbg !11594
  %add.ptr8 = getelementptr i8, i8* %17, i64 556, !dbg !11595
  call void @writelfl(i64 %16, i8* %add.ptr8) #9, !dbg !11596
  %18 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11597
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 1, !dbg !11598
  %19 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !11598
  %sff_exec_command = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %19, i32 0, i32 43, !dbg !11599
  %20 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_exec_command, align 8, !dbg !11599
  %21 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11600
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11601
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %22, i32 0, i32 4, !dbg !11602
  call void %20(%struct.ata_port* %21, %struct.ata_taskfile* %tf) #9, !dbg !11597
  ret void, !dbg !11603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_bmdma_start(%struct.ata_queued_cmd* %qc) #2 !dbg !11604 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %rw = alloca i32, align 4
  %cmd = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11605, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11607, metadata !DIExpression()), !dbg !11608
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11609
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !11610
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !11610
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !11608
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !11611, metadata !DIExpression()), !dbg !11612
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11613
  %call = call i8* @mv_ap_base(%struct.ata_port* %2) #9, !dbg !11614
  store i8* %call, i8** %port_mmio, align 8, !dbg !11612
  call void @llvm.dbg.declare(metadata i32* %rw, metadata !11615, metadata !DIExpression()), !dbg !11616
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11617
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 4, !dbg !11618
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !11619
  %4 = load i64, i64* %flags, align 8, !dbg !11619
  %and = and i64 %4, 8, !dbg !11620
  %conv = trunc i64 %and to i32, !dbg !11621
  store i32 %conv, i32* %rw, align 4, !dbg !11616
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !11622, metadata !DIExpression()), !dbg !11623
  %5 = load i32, i32* %rw, align 4, !dbg !11624
  %tobool = icmp ne i32 %5, 0, !dbg !11624
  %6 = zext i1 %tobool to i64, !dbg !11624
  %cond = select i1 %tobool, i32 0, i32 8, !dbg !11624
  %or = or i32 %cond, 1, !dbg !11625
  store i32 %or, i32* %cmd, align 4, !dbg !11623
  %7 = load i32, i32* %cmd, align 4, !dbg !11626
  %conv2 = zext i32 %7 to i64, !dbg !11626
  %8 = load i8*, i8** %port_mmio, align 8, !dbg !11627
  %add.ptr = getelementptr i8, i8* %8, i64 548, !dbg !11628
  call void @writelfl(i64 %conv2, i8* %add.ptr) #9, !dbg !11629
  ret void, !dbg !11630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_bmdma_stop(%struct.ata_queued_cmd* %qc) #2 !dbg !11631 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11632, metadata !DIExpression()), !dbg !11633
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11634
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !11635
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11635
  call void @mv_bmdma_stop_ap(%struct.ata_port* %1) #9, !dbg !11636
  ret void, !dbg !11637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mv_bmdma_status(%struct.ata_port* %ap) #2 !dbg !11638 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %reg = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11639, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !11641, metadata !DIExpression()), !dbg !11642
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11643
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !11644
  store i8* %call, i8** %port_mmio, align 8, !dbg !11642
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11645, metadata !DIExpression()), !dbg !11646
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11647, metadata !DIExpression()), !dbg !11648
  %1 = load i8*, i8** %port_mmio, align 8, !dbg !11649
  %add.ptr = getelementptr i8, i8* %1, i64 552, !dbg !11650
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !11651
  store i32 %call1, i32* %reg, align 4, !dbg !11652
  %2 = load i32, i32* %reg, align 4, !dbg !11653
  %and = and i32 %2, 1, !dbg !11655
  %tobool = icmp ne i32 %and, 0, !dbg !11655
  br i1 %tobool, label %if.then, label %if.else, !dbg !11656

if.then:                                          ; preds = %entry
  store i32 1, i32* %status, align 4, !dbg !11657
  br label %if.end13, !dbg !11658

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %reg, align 4, !dbg !11659
  %and2 = and i32 %3, 2, !dbg !11661
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11661
  br i1 %tobool3, label %if.then4, label %if.else6, !dbg !11662

if.then4:                                         ; preds = %if.else
  %4 = load i32, i32* %reg, align 4, !dbg !11663
  %and5 = and i32 %4, 2, !dbg !11664
  %or = or i32 %and5, 4, !dbg !11665
  store i32 %or, i32* %status, align 4, !dbg !11666
  br label %if.end12, !dbg !11667

if.else6:                                         ; preds = %if.else
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11668
  call void @mv_bmdma_stop_ap(%struct.ata_port* %5) #9, !dbg !11670
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11671
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 8, !dbg !11673
  %altstatus_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 11, !dbg !11674
  %7 = load i8*, i8** %altstatus_addr, align 8, !dbg !11674
  %call7 = call i32 @ioread8(i8* %7) #9, !dbg !11675
  %and8 = and i32 %call7, 128, !dbg !11676
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11676
  br i1 %tobool9, label %if.then10, label %if.else11, !dbg !11677

if.then10:                                        ; preds = %if.else6
  store i32 0, i32* %status, align 4, !dbg !11678
  br label %if.end, !dbg !11679

if.else11:                                        ; preds = %if.else6
  store i32 4, i32* %status, align 4, !dbg !11680
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then4
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %8 = load i32, i32* %status, align 4, !dbg !11681
  %conv = trunc i32 %8 to i8, !dbg !11681
  ret i8 %conv, !dbg !11682
}

; Function Attrs: noredzone
declare dso_local void @ata_dev_printk(%struct.ata_device*, i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sata_srst_pmp(%struct.ata_link* %link) #2 !dbg !11683 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11688
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !11690
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11690
  %call = call zeroext i1 @sata_pmp_supported(%struct.ata_port* %1) #9, !dbg !11691
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !11692

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11693
  %call1 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %2) #9, !dbg !11694
  br i1 %call1, label %if.then, label %if.end, !dbg !11695

if.then:                                          ; preds = %land.lhs.true
  store i32 15, i32* %retval, align 4, !dbg !11696
  br label %return, !dbg !11696

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11697
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 1, !dbg !11698
  %4 = load i32, i32* %pmp, align 8, !dbg !11698
  store i32 %4, i32* %retval, align 4, !dbg !11699
  br label %return, !dbg !11699

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11700
  ret i32 %5, !dbg !11700
}

; Function Attrs: noredzone
declare dso_local i32 @ata_sff_softreset(%struct.ata_link*, i32*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_host_link(%struct.ata_link* %link) #2 !dbg !11701 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11706, metadata !DIExpression()), !dbg !11707
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11708
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11709
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !11710
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11710
  %link1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 25, !dbg !11711
  %cmp = icmp eq %struct.ata_link* %0, %link1, !dbg !11712
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11713

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11714
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11715
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 0, !dbg !11716
  %5 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !11716
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 26, !dbg !11717
  %6 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !11717
  %cmp3 = icmp eq %struct.ata_link* %3, %6, !dbg !11718
  br label %lor.end, !dbg !11713

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %7, !dbg !11719
}

; Function Attrs: noredzone
declare dso_local i32 @sata_std_hardreset(%struct.ata_link*, i32*, i64) #1

; Function Attrs: noredzone
declare dso_local void @ata_eh_analyze_ncq_error(%struct.ata_link*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_port_freeze(%struct.ata_port*) #1

; Function Attrs: noredzone
declare dso_local void @sata_pmp_error_handler(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_scr_offset(i32 %sc_reg_in) #2 !dbg !11720 {
entry:
  %sc_reg_in.addr = alloca i32, align 4
  %ofs = alloca i32, align 4
  store i32 %sc_reg_in, i32* %sc_reg_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sc_reg_in.addr, metadata !11721, metadata !DIExpression()), !dbg !11722
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !11723, metadata !DIExpression()), !dbg !11724
  %0 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !11725
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 3, label %sw.bb2
  ], !dbg !11726

sw.bb:                                            ; preds = %entry, %entry, %entry
  %1 = load i32, i32* %sc_reg_in.addr, align 4, !dbg !11727
  %conv = zext i32 %1 to i64, !dbg !11727
  %mul = mul i64 %conv, 4, !dbg !11729
  %add = add i64 768, %mul, !dbg !11730
  %conv1 = trunc i64 %add to i32, !dbg !11731
  store i32 %conv1, i32* %ofs, align 4, !dbg !11732
  br label %sw.epilog, !dbg !11733

sw.bb2:                                           ; preds = %entry
  store i32 848, i32* %ofs, align 4, !dbg !11734
  br label %sw.epilog, !dbg !11735

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %ofs, align 4, !dbg !11736
  br label %sw.epilog, !dbg !11737

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %2 = load i32, i32* %ofs, align 4, !dbg !11738
  ret i32 %2, !dbg !11739
}

; Function Attrs: noredzone
declare dso_local i32 @ioread8(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_bmdma_stop_ap(%struct.ata_port* %ap) #2 !dbg !11740 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %cmd = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11741, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !11743, metadata !DIExpression()), !dbg !11744
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11745
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !11746
  store i8* %call, i8** %port_mmio, align 8, !dbg !11744
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !11747, metadata !DIExpression()), !dbg !11748
  %1 = load i8*, i8** %port_mmio, align 8, !dbg !11749
  %add.ptr = getelementptr i8, i8* %1, i64 548, !dbg !11750
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !11751
  store i32 %call1, i32* %cmd, align 4, !dbg !11752
  %2 = load i32, i32* %cmd, align 4, !dbg !11753
  %and = and i32 %2, 1, !dbg !11755
  %tobool = icmp ne i32 %and, 0, !dbg !11755
  br i1 %tobool, label %if.then, label %if.end, !dbg !11756

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %cmd, align 4, !dbg !11757
  %and2 = and i32 %3, -2, !dbg !11757
  store i32 %and2, i32* %cmd, align 4, !dbg !11757
  %4 = load i32, i32* %cmd, align 4, !dbg !11759
  %conv = zext i32 %4 to i64, !dbg !11759
  %5 = load i8*, i8** %port_mmio, align 8, !dbg !11760
  %add.ptr3 = getelementptr i8, i8* %5, i64 548, !dbg !11761
  call void @writelfl(i64 %conv, i8* %add.ptr3) #9, !dbg !11762
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11763
  call void @ata_sff_dma_pause(%struct.ata_port* %6) #9, !dbg !11764
  br label %if.end, !dbg !11765

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11766
}

; Function Attrs: noredzone
declare dso_local void @ata_sff_dma_pause(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_qc_prep_iie(%struct.ata_queued_cmd* %qc) #2 !dbg !11767 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %crqb = alloca %struct.mv_crqb_iie*, align 8
  %tf = alloca %struct.ata_taskfile*, align 8
  %in_index = alloca i32, align 4
  %flags = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11768, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11770, metadata !DIExpression()), !dbg !11771
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11772
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !11773
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !11773
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !11771
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !11774, metadata !DIExpression()), !dbg !11775
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11776
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 49, !dbg !11777
  %3 = load i8*, i8** %private_data, align 32, !dbg !11777
  %4 = bitcast i8* %3 to %struct.mv_port_priv*, !dbg !11776
  store %struct.mv_port_priv* %4, %struct.mv_port_priv** %pp, align 8, !dbg !11775
  call void @llvm.dbg.declare(metadata %struct.mv_crqb_iie** %crqb, metadata !11778, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf, metadata !11780, metadata !DIExpression()), !dbg !11781
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11782
  %tf2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 4, !dbg !11783
  store %struct.ata_taskfile* %tf2, %struct.ata_taskfile** %tf, align 8, !dbg !11781
  call void @llvm.dbg.declare(metadata i32* %in_index, metadata !11784, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !11786, metadata !DIExpression()), !dbg !11787
  store i32 0, i32* %flags, align 4, !dbg !11787
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11788
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 1, !dbg !11790
  %7 = load i8, i8* %protocol, align 8, !dbg !11790
  %conv = zext i8 %7 to i32, !dbg !11788
  %cmp = icmp ne i32 %conv, 2, !dbg !11791
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11792

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11793
  %protocol4 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 1, !dbg !11794
  %9 = load i8, i8* %protocol4, align 8, !dbg !11794
  %conv5 = zext i8 %9 to i32, !dbg !11793
  %cmp6 = icmp ne i32 %conv5, 6, !dbg !11795
  br i1 %cmp6, label %if.then, label %if.end, !dbg !11796

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11797
  br label %return, !dbg !11797

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11798
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 14, !dbg !11800
  %11 = load i8, i8* %command, align 1, !dbg !11800
  %conv8 = zext i8 %11 to i32, !dbg !11798
  %cmp9 = icmp eq i32 %conv8, 6, !dbg !11801
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11802

if.then11:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11803
  br label %return, !dbg !11803

if.end12:                                         ; preds = %if.end
  %12 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11804
  %flags13 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %12, i32 0, i32 0, !dbg !11806
  %13 = load i64, i64* %flags13, align 8, !dbg !11806
  %and = and i64 %13, 8, !dbg !11807
  %tobool = icmp ne i64 %and, 0, !dbg !11807
  br i1 %tobool, label %if.end15, label %if.then14, !dbg !11808

if.then14:                                        ; preds = %if.end12
  %14 = load i32, i32* %flags, align 4, !dbg !11809
  %or = or i32 %14, 1, !dbg !11809
  store i32 %or, i32* %flags, align 4, !dbg !11809
  br label %if.end15, !dbg !11810

if.end15:                                         ; preds = %if.then14, %if.end12
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11811, metadata !DIExpression()), !dbg !11813
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11813
  %hw_tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 8, !dbg !11813
  %16 = load i32, i32* %hw_tag, align 4, !dbg !11813
  %cmp16 = icmp ule i32 32, %16, !dbg !11813
  %lnot = xor i1 %cmp16, true, !dbg !11813
  %lnot18 = xor i1 %lnot, true, !dbg !11813
  %lnot.ext = zext i1 %lnot18 to i32, !dbg !11813
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11813
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !11814
  %tobool19 = icmp ne i32 %17, 0, !dbg !11814
  %lnot20 = xor i1 %tobool19, true, !dbg !11814
  %lnot22 = xor i1 %lnot20, true, !dbg !11814
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !11814
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !11814
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !11814
  br i1 %tobool25, label %if.then26, label %if.end33, !dbg !11813

if.then26:                                        ; preds = %if.end15
  br label %do.body, !dbg !11814

do.body:                                          ; preds = %if.then26
  br label %do.body27, !dbg !11816

do.body27:                                        ; preds = %do.body
  br label %do.end, !dbg !11818

do.end:                                           ; preds = %do.body27
  br label %do.body28, !dbg !11816

do.body28:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2154, i32 2305, i64 12) #6, !dbg !11820, !srcloc !11822
  br label %do.end29, !dbg !11820

do.end29:                                         ; preds = %do.body28
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 317) #6, !dbg !11823, !srcloc !11825
  br label %do.body30, !dbg !11816

do.body30:                                        ; preds = %do.end29
  br label %do.end31, !dbg !11826

do.end31:                                         ; preds = %do.body30
  br label %do.end32, !dbg !11816

do.end32:                                         ; preds = %do.end31
  br label %if.end33, !dbg !11816

if.end33:                                         ; preds = %do.end32, %if.end15
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !11813
  %tobool34 = icmp ne i32 %18, 0, !dbg !11813
  %lnot35 = xor i1 %tobool34, true, !dbg !11813
  %lnot37 = xor i1 %lnot35, true, !dbg !11813
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !11813
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !11813
  store i64 %conv39, i64* %tmp, align 8, !dbg !11814
  %19 = load i64, i64* %tmp, align 8, !dbg !11813
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11828
  %hw_tag40 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %20, i32 0, i32 8, !dbg !11829
  %21 = load i32, i32* %hw_tag40, align 4, !dbg !11829
  %shl = shl i32 %21, 1, !dbg !11830
  %22 = load i32, i32* %flags, align 4, !dbg !11831
  %or41 = or i32 %22, %shl, !dbg !11831
  store i32 %or41, i32* %flags, align 4, !dbg !11831
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11832
  %hw_tag42 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 8, !dbg !11833
  %24 = load i32, i32* %hw_tag42, align 4, !dbg !11833
  %shl43 = shl i32 %24, 17, !dbg !11834
  %25 = load i32, i32* %flags, align 4, !dbg !11835
  %or44 = or i32 %25, %shl43, !dbg !11835
  store i32 %or44, i32* %flags, align 4, !dbg !11835
  %26 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11836
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %26, i32 0, i32 1, !dbg !11837
  %27 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11837
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %27, i32 0, i32 0, !dbg !11838
  %28 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !11838
  %pmp = getelementptr inbounds %struct.ata_link, %struct.ata_link* %28, i32 0, i32 1, !dbg !11839
  %29 = load i32, i32* %pmp, align 8, !dbg !11839
  %and45 = and i32 %29, 15, !dbg !11840
  %shl46 = shl i32 %and45, 12, !dbg !11841
  %30 = load i32, i32* %flags, align 4, !dbg !11842
  %or47 = or i32 %30, %shl46, !dbg !11842
  store i32 %or47, i32* %flags, align 4, !dbg !11842
  %31 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11843
  %req_idx = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %31, i32 0, i32 6, !dbg !11844
  %32 = load i32, i32* %req_idx, align 8, !dbg !11844
  store i32 %32, i32* %in_index, align 4, !dbg !11845
  %33 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11846
  %crqb48 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %33, i32 0, i32 0, !dbg !11847
  %34 = load %struct.mv_crqb*, %struct.mv_crqb** %crqb48, align 8, !dbg !11847
  %35 = load i32, i32* %in_index, align 4, !dbg !11848
  %idxprom = zext i32 %35 to i64, !dbg !11846
  %arrayidx = getelementptr %struct.mv_crqb, %struct.mv_crqb* %34, i64 %idxprom, !dbg !11846
  %36 = bitcast %struct.mv_crqb* %arrayidx to %struct.mv_crqb_iie*, !dbg !11849
  store %struct.mv_crqb_iie* %36, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11850
  %37 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11851
  %sg_tbl_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %37, i32 0, i32 5, !dbg !11851
  %38 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11851
  %hw_tag49 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %38, i32 0, i32 8, !dbg !11851
  %39 = load i32, i32* %hw_tag49, align 4, !dbg !11851
  %idxprom50 = zext i32 %39 to i64, !dbg !11851
  %arrayidx51 = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma, i64 0, i64 %idxprom50, !dbg !11851
  %40 = load i64, i64* %arrayidx51, align 8, !dbg !11851
  %and52 = and i64 %40, 4294967295, !dbg !11851
  %conv53 = trunc i64 %and52 to i32, !dbg !11851
  %41 = load %struct.mv_crqb_iie*, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11852
  %addr = getelementptr inbounds %struct.mv_crqb_iie, %struct.mv_crqb_iie* %41, i32 0, i32 0, !dbg !11853
  store i32 %conv53, i32* %addr, align 4, !dbg !11854
  %42 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !11855
  %sg_tbl_dma54 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %42, i32 0, i32 5, !dbg !11855
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11855
  %hw_tag55 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 8, !dbg !11855
  %44 = load i32, i32* %hw_tag55, align 4, !dbg !11855
  %idxprom56 = zext i32 %44 to i64, !dbg !11855
  %arrayidx57 = getelementptr [32 x i64], [32 x i64]* %sg_tbl_dma54, i64 0, i64 %idxprom56, !dbg !11855
  %45 = load i64, i64* %arrayidx57, align 8, !dbg !11855
  %shr = lshr i64 %45, 16, !dbg !11855
  %shr58 = lshr i64 %shr, 16, !dbg !11855
  %conv59 = trunc i64 %shr58 to i32, !dbg !11855
  %46 = load %struct.mv_crqb_iie*, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11856
  %addr_hi = getelementptr inbounds %struct.mv_crqb_iie, %struct.mv_crqb_iie* %46, i32 0, i32 1, !dbg !11857
  store i32 %conv59, i32* %addr_hi, align 4, !dbg !11858
  %47 = load i32, i32* %flags, align 4, !dbg !11859
  %48 = load %struct.mv_crqb_iie*, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11860
  %flags60 = getelementptr inbounds %struct.mv_crqb_iie, %struct.mv_crqb_iie* %48, i32 0, i32 2, !dbg !11861
  store i32 %47, i32* %flags60, align 4, !dbg !11862
  %49 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11863
  %command61 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %49, i32 0, i32 14, !dbg !11863
  %50 = load i8, i8* %command61, align 1, !dbg !11863
  %conv62 = zext i8 %50 to i32, !dbg !11863
  %shl63 = shl i32 %conv62, 16, !dbg !11863
  %51 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11863
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %51, i32 0, i32 8, !dbg !11863
  %52 = load i8, i8* %feature, align 1, !dbg !11863
  %conv64 = zext i8 %52 to i32, !dbg !11863
  %shl65 = shl i32 %conv64, 24, !dbg !11863
  %or66 = or i32 %shl63, %shl65, !dbg !11863
  %53 = load %struct.mv_crqb_iie*, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11864
  %ata_cmd = getelementptr inbounds %struct.mv_crqb_iie, %struct.mv_crqb_iie* %53, i32 0, i32 4, !dbg !11865
  %arrayidx67 = getelementptr [4 x i32], [4 x i32]* %ata_cmd, i64 0, i64 0, !dbg !11864
  store i32 %or66, i32* %arrayidx67, align 4, !dbg !11866
  %54 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11867
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %54, i32 0, i32 10, !dbg !11867
  %55 = load i8, i8* %lbal, align 1, !dbg !11867
  %conv68 = zext i8 %55 to i32, !dbg !11867
  %shl69 = shl i32 %conv68, 0, !dbg !11867
  %56 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11867
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %56, i32 0, i32 11, !dbg !11867
  %57 = load i8, i8* %lbam, align 2, !dbg !11867
  %conv70 = zext i8 %57 to i32, !dbg !11867
  %shl71 = shl i32 %conv70, 8, !dbg !11867
  %or72 = or i32 %shl69, %shl71, !dbg !11867
  %58 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11867
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %58, i32 0, i32 12, !dbg !11867
  %59 = load i8, i8* %lbah, align 1, !dbg !11867
  %conv73 = zext i8 %59 to i32, !dbg !11867
  %shl74 = shl i32 %conv73, 16, !dbg !11867
  %or75 = or i32 %or72, %shl74, !dbg !11867
  %60 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11867
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %60, i32 0, i32 13, !dbg !11867
  %61 = load i8, i8* %device, align 4, !dbg !11867
  %conv76 = zext i8 %61 to i32, !dbg !11867
  %shl77 = shl i32 %conv76, 24, !dbg !11867
  %or78 = or i32 %or75, %shl77, !dbg !11867
  %62 = load %struct.mv_crqb_iie*, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11868
  %ata_cmd79 = getelementptr inbounds %struct.mv_crqb_iie, %struct.mv_crqb_iie* %62, i32 0, i32 4, !dbg !11869
  %arrayidx80 = getelementptr [4 x i32], [4 x i32]* %ata_cmd79, i64 0, i64 1, !dbg !11868
  store i32 %or78, i32* %arrayidx80, align 4, !dbg !11870
  %63 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11871
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %63, i32 0, i32 5, !dbg !11871
  %64 = load i8, i8* %hob_lbal, align 4, !dbg !11871
  %conv81 = zext i8 %64 to i32, !dbg !11871
  %shl82 = shl i32 %conv81, 0, !dbg !11871
  %65 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11871
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %65, i32 0, i32 6, !dbg !11871
  %66 = load i8, i8* %hob_lbam, align 1, !dbg !11871
  %conv83 = zext i8 %66 to i32, !dbg !11871
  %shl84 = shl i32 %conv83, 8, !dbg !11871
  %or85 = or i32 %shl82, %shl84, !dbg !11871
  %67 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11871
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %67, i32 0, i32 7, !dbg !11871
  %68 = load i8, i8* %hob_lbah, align 2, !dbg !11871
  %conv86 = zext i8 %68 to i32, !dbg !11871
  %shl87 = shl i32 %conv86, 16, !dbg !11871
  %or88 = or i32 %or85, %shl87, !dbg !11871
  %69 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11871
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %69, i32 0, i32 3, !dbg !11871
  %70 = load i8, i8* %hob_feature, align 2, !dbg !11871
  %conv89 = zext i8 %70 to i32, !dbg !11871
  %shl90 = shl i32 %conv89, 24, !dbg !11871
  %or91 = or i32 %or88, %shl90, !dbg !11871
  %71 = load %struct.mv_crqb_iie*, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11872
  %ata_cmd92 = getelementptr inbounds %struct.mv_crqb_iie, %struct.mv_crqb_iie* %71, i32 0, i32 4, !dbg !11873
  %arrayidx93 = getelementptr [4 x i32], [4 x i32]* %ata_cmd92, i64 0, i64 2, !dbg !11872
  store i32 %or91, i32* %arrayidx93, align 4, !dbg !11874
  %72 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11875
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %72, i32 0, i32 9, !dbg !11875
  %73 = load i8, i8* %nsect, align 8, !dbg !11875
  %conv94 = zext i8 %73 to i32, !dbg !11875
  %shl95 = shl i32 %conv94, 0, !dbg !11875
  %74 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf, align 8, !dbg !11875
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %74, i32 0, i32 4, !dbg !11875
  %75 = load i8, i8* %hob_nsect, align 1, !dbg !11875
  %conv96 = zext i8 %75 to i32, !dbg !11875
  %shl97 = shl i32 %conv96, 8, !dbg !11875
  %or98 = or i32 %shl95, %shl97, !dbg !11875
  %76 = load %struct.mv_crqb_iie*, %struct.mv_crqb_iie** %crqb, align 8, !dbg !11876
  %ata_cmd99 = getelementptr inbounds %struct.mv_crqb_iie, %struct.mv_crqb_iie* %76, i32 0, i32 4, !dbg !11877
  %arrayidx100 = getelementptr [4 x i32], [4 x i32]* %ata_cmd99, i64 0, i64 3, !dbg !11876
  store i32 %or98, i32* %arrayidx100, align 4, !dbg !11878
  %77 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11879
  %flags101 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %77, i32 0, i32 6, !dbg !11881
  %78 = load i64, i64* %flags101, align 8, !dbg !11881
  %and102 = and i64 %78, 2, !dbg !11882
  %tobool103 = icmp ne i64 %and102, 0, !dbg !11882
  br i1 %tobool103, label %if.end105, label %if.then104, !dbg !11883

if.then104:                                       ; preds = %if.end33
  store i32 0, i32* %retval, align 4, !dbg !11884
  br label %return, !dbg !11884

if.end105:                                        ; preds = %if.end33
  %79 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11885
  call void @mv_fill_sg(%struct.ata_queued_cmd* %79) #9, !dbg !11886
  store i32 0, i32* %retval, align 4, !dbg !11887
  br label %return, !dbg !11887

return:                                           ; preds = %if.end105, %if.then104, %if.then11, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !11888
  ret i32 %80, !dbg !11888
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local %struct.dma_pool* @dmam_pool_create(i8*, %struct.device*, i64, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_chip_id(%struct.ata_host* %host, i32 %board_idx) #2 !dbg !11889 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %board_idx.addr = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %hp_flags = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !11892, metadata !DIExpression()), !dbg !11893
  store i32 %board_idx, i32* %board_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %board_idx.addr, metadata !11894, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !11896, metadata !DIExpression()), !dbg !11897
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11898, metadata !DIExpression()), !dbg !11900
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11900
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !11900
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11900
  %2 = bitcast %struct.device* %1 to i8*, !dbg !11900
  store i8* %2, i8** %__mptr, align 8, !dbg !11900
  br label %do.body, !dbg !11900

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11901

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11900
  %add.ptr = getelementptr i8, i8* %3, i64 -176, !dbg !11900
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !11900
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !11901
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !11900
  store %struct.pci_dev* %5, %struct.pci_dev** %pdev, align 8, !dbg !11897
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !11903, metadata !DIExpression()), !dbg !11904
  %6 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11905
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %6, i32 0, i32 5, !dbg !11906
  %7 = load i8*, i8** %private_data, align 8, !dbg !11906
  %8 = bitcast i8* %7 to %struct.mv_host_priv*, !dbg !11905
  store %struct.mv_host_priv* %8, %struct.mv_host_priv** %hpriv, align 8, !dbg !11904
  call void @llvm.dbg.declare(metadata i32* %hp_flags, metadata !11907, metadata !DIExpression()), !dbg !11908
  %9 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11909
  %hp_flags1 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %9, i32 0, i32 0, !dbg !11910
  %10 = load i32, i32* %hp_flags1, align 8, !dbg !11910
  store i32 %10, i32* %hp_flags, align 4, !dbg !11908
  %11 = load i32, i32* %board_idx.addr, align 4, !dbg !11911
  switch i32 %11, label %sw.default71 [
    i32 2, label %sw.bb
    i32 0, label %sw.bb8
    i32 1, label %sw.bb8
    i32 3, label %sw.bb21
    i32 4, label %sw.bb21
    i32 6, label %sw.bb34
    i32 5, label %sw.bb46
    i32 7, label %sw.bb64
  ], !dbg !11912

sw.bb:                                            ; preds = %do.end
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11913
  %ops = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %12, i32 0, i32 4, !dbg !11915
  store %struct.mv_hw_ops* @mv5xxx_ops, %struct.mv_hw_ops** %ops, align 8, !dbg !11916
  %13 = load i32, i32* %hp_flags, align 4, !dbg !11917
  %or = or i32 %13, 64, !dbg !11917
  store i32 %or, i32* %hp_flags, align 4, !dbg !11917
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11918
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 12, !dbg !11919
  %15 = load i8, i8* %revision, align 8, !dbg !11919
  %conv = zext i8 %15 to i32, !dbg !11918
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb2
    i32 3, label %sw.bb4
  ], !dbg !11920

sw.bb2:                                           ; preds = %sw.bb
  %16 = load i32, i32* %hp_flags, align 4, !dbg !11921
  %or3 = or i32 %16, 2, !dbg !11921
  store i32 %or3, i32* %hp_flags, align 4, !dbg !11921
  br label %sw.epilog, !dbg !11923

sw.bb4:                                           ; preds = %sw.bb
  %17 = load i32, i32* %hp_flags, align 4, !dbg !11924
  %or5 = or i32 %17, 4, !dbg !11924
  store i32 %or5, i32* %hp_flags, align 4, !dbg !11924
  br label %sw.epilog, !dbg !11925

sw.default:                                       ; preds = %sw.bb
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11926
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !11926
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev6, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !11926
  %19 = load i32, i32* %hp_flags, align 4, !dbg !11927
  %or7 = or i32 %19, 4, !dbg !11927
  store i32 %or7, i32* %hp_flags, align 4, !dbg !11927
  br label %sw.epilog, !dbg !11928

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb2
  br label %sw.epilog73, !dbg !11929

sw.bb8:                                           ; preds = %do.end, %do.end
  %20 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11930
  %ops9 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %20, i32 0, i32 4, !dbg !11931
  store %struct.mv_hw_ops* @mv5xxx_ops, %struct.mv_hw_ops** %ops9, align 8, !dbg !11932
  %21 = load i32, i32* %hp_flags, align 4, !dbg !11933
  %or10 = or i32 %21, 64, !dbg !11933
  store i32 %or10, i32* %hp_flags, align 4, !dbg !11933
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11934
  %revision11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 12, !dbg !11935
  %23 = load i8, i8* %revision11, align 8, !dbg !11935
  %conv12 = zext i8 %23 to i32, !dbg !11934
  switch i32 %conv12, label %sw.default17 [
    i32 0, label %sw.bb13
    i32 3, label %sw.bb15
  ], !dbg !11936

sw.bb13:                                          ; preds = %sw.bb8
  %24 = load i32, i32* %hp_flags, align 4, !dbg !11937
  %or14 = or i32 %24, 2, !dbg !11937
  store i32 %or14, i32* %hp_flags, align 4, !dbg !11937
  br label %sw.epilog20, !dbg !11939

sw.bb15:                                          ; preds = %sw.bb8
  %25 = load i32, i32* %hp_flags, align 4, !dbg !11940
  %or16 = or i32 %25, 4, !dbg !11940
  store i32 %or16, i32* %hp_flags, align 4, !dbg !11940
  br label %sw.epilog20, !dbg !11941

sw.default17:                                     ; preds = %sw.bb8
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11942
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !11942
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev18, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !11942
  %27 = load i32, i32* %hp_flags, align 4, !dbg !11943
  %or19 = or i32 %27, 4, !dbg !11943
  store i32 %or19, i32* %hp_flags, align 4, !dbg !11943
  br label %sw.epilog20, !dbg !11944

sw.epilog20:                                      ; preds = %sw.default17, %sw.bb15, %sw.bb13
  br label %sw.epilog73, !dbg !11945

sw.bb21:                                          ; preds = %do.end, %do.end
  %28 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11946
  %ops22 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %28, i32 0, i32 4, !dbg !11947
  store %struct.mv_hw_ops* @mv6xxx_ops, %struct.mv_hw_ops** %ops22, align 8, !dbg !11948
  %29 = load i32, i32* %hp_flags, align 4, !dbg !11949
  %or23 = or i32 %29, 128, !dbg !11949
  store i32 %or23, i32* %hp_flags, align 4, !dbg !11949
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11950
  %revision24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 12, !dbg !11951
  %31 = load i8, i8* %revision24, align 8, !dbg !11951
  %conv25 = zext i8 %31 to i32, !dbg !11950
  switch i32 %conv25, label %sw.default30 [
    i32 7, label %sw.bb26
    i32 9, label %sw.bb28
  ], !dbg !11952

sw.bb26:                                          ; preds = %sw.bb21
  %32 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11953
  call void @mv_60x1b2_errata_pci7(%struct.ata_host* %32) #9, !dbg !11955
  %33 = load i32, i32* %hp_flags, align 4, !dbg !11956
  %or27 = or i32 %33, 8, !dbg !11956
  store i32 %or27, i32* %hp_flags, align 4, !dbg !11956
  br label %sw.epilog33, !dbg !11957

sw.bb28:                                          ; preds = %sw.bb21
  %34 = load i32, i32* %hp_flags, align 4, !dbg !11958
  %or29 = or i32 %34, 16, !dbg !11958
  store i32 %or29, i32* %hp_flags, align 4, !dbg !11958
  br label %sw.epilog33, !dbg !11959

sw.default30:                                     ; preds = %sw.bb21
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11960
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 41, !dbg !11960
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev31, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !11960
  %36 = load i32, i32* %hp_flags, align 4, !dbg !11961
  %or32 = or i32 %36, 8, !dbg !11961
  store i32 %or32, i32* %hp_flags, align 4, !dbg !11961
  br label %sw.epilog33, !dbg !11962

sw.epilog33:                                      ; preds = %sw.default30, %sw.bb28, %sw.bb26
  br label %sw.epilog73, !dbg !11963

sw.bb34:                                          ; preds = %do.end
  %37 = load i32, i32* %hp_flags, align 4, !dbg !11964
  %or35 = or i32 %37, 1536, !dbg !11964
  store i32 %or35, i32* %hp_flags, align 4, !dbg !11964
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11965
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 7, !dbg !11967
  %39 = load i16, i16* %vendor, align 4, !dbg !11967
  %conv36 = zext i16 %39 to i32, !dbg !11965
  %cmp = icmp eq i32 %conv36, 4355, !dbg !11968
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11969

land.lhs.true:                                    ; preds = %sw.bb34
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11970
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 8, !dbg !11971
  %41 = load i16, i16* %device, align 2, !dbg !11971
  %conv38 = zext i16 %41 to i32, !dbg !11970
  %cmp39 = icmp eq i32 %conv38, 8960, !dbg !11972
  br i1 %cmp39, label %if.then, label %lor.lhs.false, !dbg !11973

lor.lhs.false:                                    ; preds = %land.lhs.true
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11974
  %device41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 8, !dbg !11975
  %43 = load i16, i16* %device41, align 2, !dbg !11975
  %conv42 = zext i16 %43 to i32, !dbg !11974
  %cmp43 = icmp eq i32 %conv42, 8976, !dbg !11976
  br i1 %cmp43, label %if.then, label %if.end, !dbg !11977

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([126 x i8], [126 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !11978
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !11980
  br label %if.end, !dbg !11981

if.end:                                           ; preds = %if.then, %lor.lhs.false, %sw.bb34
  br label %sw.bb46, !dbg !11982

sw.bb46:                                          ; preds = %do.end, %if.end
  %44 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !11983
  %ops47 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %44, i32 0, i32 4, !dbg !11984
  store %struct.mv_hw_ops* @mv6xxx_ops, %struct.mv_hw_ops** %ops47, align 8, !dbg !11985
  %45 = load i32, i32* %hp_flags, align 4, !dbg !11986
  %or48 = or i32 %45, 256, !dbg !11986
  store i32 %or48, i32* %hp_flags, align 4, !dbg !11986
  %46 = load i32, i32* %board_idx.addr, align 4, !dbg !11987
  %cmp49 = icmp eq i32 %46, 5, !dbg !11989
  br i1 %cmp49, label %land.lhs.true51, label %if.end55, !dbg !11990

land.lhs.true51:                                  ; preds = %sw.bb46
  %47 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11991
  %call52 = call i32 @mv_pci_cut_through_okay(%struct.ata_host* %47) #9, !dbg !11992
  %tobool = icmp ne i32 %call52, 0, !dbg !11992
  br i1 %tobool, label %if.then53, label %if.end55, !dbg !11993

if.then53:                                        ; preds = %land.lhs.true51
  %48 = load i32, i32* %hp_flags, align 4, !dbg !11994
  %or54 = or i32 %48, 1024, !dbg !11994
  store i32 %or54, i32* %hp_flags, align 4, !dbg !11994
  br label %if.end55, !dbg !11995

if.end55:                                         ; preds = %if.then53, %land.lhs.true51, %sw.bb46
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11996
  %revision56 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 12, !dbg !11997
  %50 = load i8, i8* %revision56, align 8, !dbg !11997
  %conv57 = zext i8 %50 to i32, !dbg !11996
  switch i32 %conv57, label %sw.default60 [
    i32 2, label %sw.bb58
  ], !dbg !11998

sw.bb58:                                          ; preds = %if.end55
  %51 = load i32, i32* %hp_flags, align 4, !dbg !11999
  %or59 = or i32 %51, 16, !dbg !11999
  store i32 %or59, i32* %hp_flags, align 4, !dbg !11999
  br label %sw.epilog63, !dbg !12001

sw.default60:                                     ; preds = %if.end55
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12002
  %dev61 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 41, !dbg !12002
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev61, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !12002
  %53 = load i32, i32* %hp_flags, align 4, !dbg !12003
  %or62 = or i32 %53, 16, !dbg !12003
  store i32 %or62, i32* %hp_flags, align 4, !dbg !12003
  br label %sw.epilog63, !dbg !12004

sw.epilog63:                                      ; preds = %sw.default60, %sw.bb58
  br label %sw.epilog73, !dbg !12005

sw.bb64:                                          ; preds = %do.end
  %54 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12006
  %call65 = call zeroext i1 @soc_is_65n(%struct.mv_host_priv* %54) #9, !dbg !12008
  br i1 %call65, label %if.then66, label %if.else, !dbg !12009

if.then66:                                        ; preds = %sw.bb64
  %55 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12010
  %ops67 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %55, i32 0, i32 4, !dbg !12011
  store %struct.mv_hw_ops* @mv_soc_65n_ops, %struct.mv_hw_ops** %ops67, align 8, !dbg !12012
  br label %if.end69, !dbg !12010

if.else:                                          ; preds = %sw.bb64
  %56 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12013
  %ops68 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %56, i32 0, i32 4, !dbg !12014
  store %struct.mv_hw_ops* @mv_soc_ops, %struct.mv_hw_ops** %ops68, align 8, !dbg !12015
  br label %if.end69

if.end69:                                         ; preds = %if.else, %if.then66
  %57 = load i32, i32* %hp_flags, align 4, !dbg !12016
  %or70 = or i32 %57, 2320, !dbg !12016
  store i32 %or70, i32* %hp_flags, align 4, !dbg !12016
  br label %sw.epilog73, !dbg !12017

sw.default71:                                     ; preds = %do.end
  %58 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12018
  %dev72 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %58, i32 0, i32 1, !dbg !12018
  %59 = load %struct.device*, %struct.device** %dev72, align 8, !dbg !12018
  %60 = load i32, i32* %board_idx.addr, align 4, !dbg !12018
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %59, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0), i32 %60) #10, !dbg !12018
  store i32 1, i32* %retval, align 4, !dbg !12019
  br label %return, !dbg !12019

sw.epilog73:                                      ; preds = %if.end69, %sw.epilog63, %sw.epilog33, %sw.epilog20, %sw.epilog
  %61 = load i32, i32* %hp_flags, align 4, !dbg !12020
  %62 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12021
  %hp_flags74 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %62, i32 0, i32 0, !dbg !12022
  store i32 %61, i32* %hp_flags74, align 8, !dbg !12023
  %63 = load i32, i32* %hp_flags, align 4, !dbg !12024
  %and = and i32 %63, 512, !dbg !12026
  %tobool75 = icmp ne i32 %and, 0, !dbg !12026
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !12027

if.then76:                                        ; preds = %sw.epilog73
  %64 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12028
  %irq_cause_offset = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %64, i32 0, i32 9, !dbg !12030
  store i32 6400, i32* %irq_cause_offset, align 8, !dbg !12031
  %65 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12032
  %irq_mask_offset = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %65, i32 0, i32 10, !dbg !12033
  store i32 6416, i32* %irq_mask_offset, align 4, !dbg !12034
  %66 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12035
  %unmask_all_irqs = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %66, i32 0, i32 11, !dbg !12036
  store i32 1034, i32* %unmask_all_irqs, align 8, !dbg !12037
  br label %if.end81, !dbg !12038

if.else77:                                        ; preds = %sw.epilog73
  %67 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12039
  %irq_cause_offset78 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %67, i32 0, i32 9, !dbg !12041
  store i32 7512, i32* %irq_cause_offset78, align 8, !dbg !12042
  %68 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12043
  %irq_mask_offset79 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %68, i32 0, i32 10, !dbg !12044
  store i32 7516, i32* %irq_mask_offset79, align 4, !dbg !12045
  %69 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12046
  %unmask_all_irqs80 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %69, i32 0, i32 11, !dbg !12047
  store i32 8388607, i32* %unmask_all_irqs80, align 8, !dbg !12048
  br label %if.end81

if.end81:                                         ; preds = %if.else77, %if.then76
  store i32 0, i32* %retval, align 4, !dbg !12049
  br label %return, !dbg !12049

return:                                           ; preds = %if.end81, %sw.default71
  %70 = load i32, i32* %retval, align 4, !dbg !12050
  ret i32 %70, !dbg !12050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_port_init(%struct.ata_ioports* %port, i8* %port_mmio) #2 !dbg !12051 {
entry:
  %port.addr = alloca %struct.ata_ioports*, align 8
  %port_mmio.addr = alloca i8*, align 8
  %serr = alloca i8*, align 8
  %shd_base = alloca i8*, align 8
  store %struct.ata_ioports* %port, %struct.ata_ioports** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %port.addr, metadata !12055, metadata !DIExpression()), !dbg !12056
  store i8* %port_mmio, i8** %port_mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_mmio.addr, metadata !12057, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.declare(metadata i8** %serr, metadata !12059, metadata !DIExpression()), !dbg !12060
  call void @llvm.dbg.declare(metadata i8** %shd_base, metadata !12061, metadata !DIExpression()), !dbg !12062
  %0 = load i8*, i8** %port_mmio.addr, align 8, !dbg !12063
  %add.ptr = getelementptr i8, i8* %0, i64 256, !dbg !12064
  store i8* %add.ptr, i8** %shd_base, align 8, !dbg !12062
  %1 = load i8*, i8** %shd_base, align 8, !dbg !12065
  %add.ptr1 = getelementptr i8, i8* %1, i64 0, !dbg !12066
  %2 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12067
  %data_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %2, i32 0, i32 1, !dbg !12068
  store i8* %add.ptr1, i8** %data_addr, align 8, !dbg !12069
  %3 = load i8*, i8** %shd_base, align 8, !dbg !12070
  %add.ptr2 = getelementptr i8, i8* %3, i64 4, !dbg !12071
  %4 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12072
  %feature_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %4, i32 0, i32 3, !dbg !12073
  store i8* %add.ptr2, i8** %feature_addr, align 8, !dbg !12074
  %5 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12075
  %error_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %5, i32 0, i32 2, !dbg !12076
  store i8* %add.ptr2, i8** %error_addr, align 8, !dbg !12077
  %6 = load i8*, i8** %shd_base, align 8, !dbg !12078
  %add.ptr3 = getelementptr i8, i8* %6, i64 8, !dbg !12079
  %7 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12080
  %nsect_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %7, i32 0, i32 4, !dbg !12081
  store i8* %add.ptr3, i8** %nsect_addr, align 8, !dbg !12082
  %8 = load i8*, i8** %shd_base, align 8, !dbg !12083
  %add.ptr4 = getelementptr i8, i8* %8, i64 12, !dbg !12084
  %9 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12085
  %lbal_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %9, i32 0, i32 5, !dbg !12086
  store i8* %add.ptr4, i8** %lbal_addr, align 8, !dbg !12087
  %10 = load i8*, i8** %shd_base, align 8, !dbg !12088
  %add.ptr5 = getelementptr i8, i8* %10, i64 16, !dbg !12089
  %11 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12090
  %lbam_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %11, i32 0, i32 6, !dbg !12091
  store i8* %add.ptr5, i8** %lbam_addr, align 8, !dbg !12092
  %12 = load i8*, i8** %shd_base, align 8, !dbg !12093
  %add.ptr6 = getelementptr i8, i8* %12, i64 20, !dbg !12094
  %13 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12095
  %lbah_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %13, i32 0, i32 7, !dbg !12096
  store i8* %add.ptr6, i8** %lbah_addr, align 8, !dbg !12097
  %14 = load i8*, i8** %shd_base, align 8, !dbg !12098
  %add.ptr7 = getelementptr i8, i8* %14, i64 24, !dbg !12099
  %15 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12100
  %device_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %15, i32 0, i32 8, !dbg !12101
  store i8* %add.ptr7, i8** %device_addr, align 8, !dbg !12102
  %16 = load i8*, i8** %shd_base, align 8, !dbg !12103
  %add.ptr8 = getelementptr i8, i8* %16, i64 28, !dbg !12104
  %17 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12105
  %command_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %17, i32 0, i32 10, !dbg !12106
  store i8* %add.ptr8, i8** %command_addr, align 8, !dbg !12107
  %18 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12108
  %status_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %18, i32 0, i32 9, !dbg !12109
  store i8* %add.ptr8, i8** %status_addr, align 8, !dbg !12110
  %19 = load i8*, i8** %shd_base, align 8, !dbg !12111
  %add.ptr9 = getelementptr i8, i8* %19, i64 32, !dbg !12112
  %20 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12113
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %20, i32 0, i32 12, !dbg !12114
  store i8* %add.ptr9, i8** %ctl_addr, align 8, !dbg !12115
  %21 = load %struct.ata_ioports*, %struct.ata_ioports** %port.addr, align 8, !dbg !12116
  %altstatus_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %21, i32 0, i32 11, !dbg !12117
  store i8* %add.ptr9, i8** %altstatus_addr, align 8, !dbg !12118
  %22 = load i8*, i8** %port_mmio.addr, align 8, !dbg !12119
  %call = call i32 @mv_scr_offset(i32 1) #9, !dbg !12120
  %idx.ext = zext i32 %call to i64, !dbg !12121
  %add.ptr10 = getelementptr i8, i8* %22, i64 %idx.ext, !dbg !12121
  store i8* %add.ptr10, i8** %serr, align 8, !dbg !12122
  %23 = load i8*, i8** %serr, align 8, !dbg !12123
  %call11 = call i32 @readl(i8* %23) #9, !dbg !12124
  %conv = zext i32 %call11 to i64, !dbg !12124
  %24 = load i8*, i8** %serr, align 8, !dbg !12125
  call void @writelfl(i64 %conv, i8* %24) #9, !dbg !12126
  %25 = load i8*, i8** %port_mmio.addr, align 8, !dbg !12127
  %add.ptr12 = getelementptr i8, i8* %25, i64 8, !dbg !12128
  call void @writelfl(i64 0, i8* %add.ptr12) #9, !dbg !12129
  %26 = load i8*, i8** %port_mmio.addr, align 8, !dbg !12130
  %add.ptr13 = getelementptr i8, i8* %26, i64 12, !dbg !12131
  call void @writelfl(i64 -65101825, i8* %add.ptr13) #9, !dbg !12132
  ret void, !dbg !12133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_set_irq_coalescing(%struct.ata_host* %host, i32 %count, i32 %usecs) #2 !dbg !12134 {
entry:
  %lock.addr.i58 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i58, metadata !9341, metadata !DIExpression()), !dbg !12137
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9347, metadata !DIExpression()), !dbg !12139
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9349, metadata !DIExpression()), !dbg !12140
  %host.addr = alloca %struct.ata_host*, align 8
  %count.addr = alloca i32, align 4
  %usecs.addr = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %hc_mmio = alloca i8*, align 8
  %coal_enable = alloca i32, align 4
  %flags = alloca i64, align 8
  %clks = alloca i32, align 4
  %is_dual_hc = alloca i32, align 4
  %coal_disable = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy16 = alloca i64, align 8
  %__dummy217 = alloca i64, align 8
  %tmp20 = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !12147, metadata !DIExpression()), !dbg !12148
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !12149, metadata !DIExpression()), !dbg !12150
  store i32 %usecs, i32* %usecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usecs.addr, metadata !12151, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !12153, metadata !DIExpression()), !dbg !12154
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12155
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !12156
  %1 = load i8*, i8** %private_data, align 8, !dbg !12156
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !12155
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !12154
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !12157, metadata !DIExpression()), !dbg !12158
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12159
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 6, !dbg !12160
  %4 = load i8*, i8** %base, align 8, !dbg !12160
  store i8* %4, i8** %mmio, align 8, !dbg !12158
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !12161, metadata !DIExpression()), !dbg !12162
  call void @llvm.dbg.declare(metadata i32* %coal_enable, metadata !12163, metadata !DIExpression()), !dbg !12164
  store i32 0, i32* %coal_enable, align 4, !dbg !12164
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12165, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.declare(metadata i32* %clks, metadata !12167, metadata !DIExpression()), !dbg !12168
  call void @llvm.dbg.declare(metadata i32* %is_dual_hc, metadata !12169, metadata !DIExpression()), !dbg !12170
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12171
  %n_ports = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 5, !dbg !12172
  %6 = load i32, i32* %n_ports, align 8, !dbg !12172
  %cmp = icmp sgt i32 %6, 4, !dbg !12173
  %conv = zext i1 %cmp to i32, !dbg !12173
  store i32 %conv, i32* %is_dual_hc, align 4, !dbg !12170
  call void @llvm.dbg.declare(metadata i32* %coal_disable, metadata !12174, metadata !DIExpression()), !dbg !12175
  store i32 2228480, i32* %coal_disable, align 4, !dbg !12175
  %7 = load i32, i32* %usecs.addr, align 4, !dbg !12176
  %tobool = icmp ne i32 %7, 0, !dbg !12176
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12178

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %count.addr, align 4, !dbg !12179
  %tobool1 = icmp ne i32 %8, 0, !dbg !12179
  br i1 %tobool1, label %if.else, label %if.then, !dbg !12180

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %count.addr, align 4, !dbg !12181
  store i32 0, i32* %clks, align 4, !dbg !12183
  br label %if.end9, !dbg !12184

if.else:                                          ; preds = %lor.lhs.false
  %9 = load i32, i32* %usecs.addr, align 4, !dbg !12185
  %mul = mul i32 %9, 150, !dbg !12187
  store i32 %mul, i32* %clks, align 4, !dbg !12188
  %10 = load i32, i32* %clks, align 4, !dbg !12189
  %cmp2 = icmp ugt i32 %10, 16777215, !dbg !12191
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !12192

if.then4:                                         ; preds = %if.else
  store i32 16777215, i32* %clks, align 4, !dbg !12193
  br label %if.end, !dbg !12194

if.end:                                           ; preds = %if.then4, %if.else
  %11 = load i32, i32* %count.addr, align 4, !dbg !12195
  %cmp5 = icmp ugt i32 %11, 255, !dbg !12197
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12198

if.then7:                                         ; preds = %if.end
  store i32 255, i32* %count.addr, align 4, !dbg !12199
  br label %if.end8, !dbg !12200

if.end8:                                          ; preds = %if.then7, %if.end
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then
  br label %do.body, !dbg !12201

do.body:                                          ; preds = %if.end9
  br label %do.body10, !dbg !12202

do.body10:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12203, metadata !DIExpression()), !dbg !12205
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12206, metadata !DIExpression()), !dbg !12205
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !12205
  %conv12 = zext i1 %cmp11 to i32, !dbg !12205
  store i32 1, i32* %tmp, align 4, !dbg !12205
  %12 = load i32, i32* %tmp, align 4, !dbg !12205
  br label %do.body13, !dbg !12207

do.body13:                                        ; preds = %do.body10
  br label %do.body14, !dbg !12208

do.body14:                                        ; preds = %do.body13
  br label %do.body15, !dbg !12209

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy16, metadata !12211, metadata !DIExpression()), !dbg !12214
  call void @llvm.dbg.declare(metadata i64* %__dummy217, metadata !12215, metadata !DIExpression()), !dbg !12214
  %cmp18 = icmp eq i64* %__dummy16, %__dummy217, !dbg !12214
  %conv19 = zext i1 %cmp18 to i32, !dbg !12214
  store i32 1, i32* %tmp20, align 4, !dbg !12214
  %13 = load i32, i32* %tmp20, align 4, !dbg !12214
  %call = call i64 @arch_local_irq_save() #9, !dbg !12216
  store i64 %call, i64* %flags, align 8, !dbg !12216
  br label %do.end, !dbg !12216

do.end:                                           ; preds = %do.body15
  br label %do.end21, !dbg !12209

do.end21:                                         ; preds = %do.end
  br label %do.body22, !dbg !12208

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12217, !srcloc !12218
  br label %do.body23, !dbg !12217

do.body23:                                        ; preds = %do.body22
  %14 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12219
  %lock = getelementptr inbounds %struct.ata_host, %struct.ata_host* %14, i32 0, i32 0, !dbg !12219
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12220
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !12221
  %rlock.i = bitcast %union.anon.2* %16 to %struct.raw_spinlock*, !dbg !12221
  br label %do.end25, !dbg !12219

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !12217

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !12208

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !12207

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !12202

do.end29:                                         ; preds = %do.end28
  %17 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12222
  call void @mv_set_main_irq_mask(%struct.ata_host* %17, i32 2228480, i32 0) #9, !dbg !12223
  %18 = load i32, i32* %is_dual_hc, align 4, !dbg !12224
  %tobool30 = icmp ne i32 %18, 0, !dbg !12224
  br i1 %tobool30, label %land.lhs.true, label %if.end38, !dbg !12226

land.lhs.true:                                    ; preds = %do.end29
  %19 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12227
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %19, i32 0, i32 0, !dbg !12227
  %20 = load i32, i32* %hp_flags, align 8, !dbg !12227
  %and = and i32 %20, 64, !dbg !12227
  %tobool31 = icmp ne i32 %and, 0, !dbg !12227
  br i1 %tobool31, label %if.end38, label %if.then32, !dbg !12228

if.then32:                                        ; preds = %land.lhs.true
  %21 = load i32, i32* %clks, align 4, !dbg !12229
  %22 = load i8*, i8** %mmio, align 8, !dbg !12231
  %add.ptr = getelementptr i8, i8* %22, i64 98512, !dbg !12232
  call void @writel(i32 %21, i8* %add.ptr) #9, !dbg !12233
  %23 = load i32, i32* %count.addr, align 4, !dbg !12234
  %24 = load i8*, i8** %mmio, align 8, !dbg !12235
  %add.ptr33 = getelementptr i8, i8* %24, i64 98508, !dbg !12236
  call void @writel(i32 %23, i8* %add.ptr33) #9, !dbg !12237
  %25 = load i8*, i8** %mmio, align 8, !dbg !12238
  %add.ptr34 = getelementptr i8, i8* %25, i64 98312, !dbg !12239
  call void @writel(i32 -17, i8* %add.ptr34) #9, !dbg !12240
  %26 = load i32, i32* %count.addr, align 4, !dbg !12241
  %tobool35 = icmp ne i32 %26, 0, !dbg !12241
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !12243

if.then36:                                        ; preds = %if.then32
  store i32 2097152, i32* %coal_enable, align 4, !dbg !12244
  br label %if.end37, !dbg !12245

if.end37:                                         ; preds = %if.then36, %if.then32
  store i32 0, i32* %count.addr, align 4, !dbg !12246
  store i32 0, i32* %clks, align 4, !dbg !12247
  br label %if.end38, !dbg !12248

if.end38:                                         ; preds = %if.end37, %land.lhs.true, %do.end29
  %27 = load i8*, i8** %mmio, align 8, !dbg !12249
  %call39 = call i8* @mv_hc_base_from_port(i8* %27, i32 0) #9, !dbg !12250
  store i8* %call39, i8** %hc_mmio, align 8, !dbg !12251
  %28 = load i32, i32* %clks, align 4, !dbg !12252
  %29 = load i8*, i8** %hc_mmio, align 8, !dbg !12253
  %add.ptr40 = getelementptr i8, i8* %29, i64 16, !dbg !12254
  call void @writel(i32 %28, i8* %add.ptr40) #9, !dbg !12255
  %30 = load i32, i32* %count.addr, align 4, !dbg !12256
  %31 = load i8*, i8** %hc_mmio, align 8, !dbg !12257
  %add.ptr41 = getelementptr i8, i8* %31, i64 12, !dbg !12258
  call void @writel(i32 %30, i8* %add.ptr41) #9, !dbg !12259
  %32 = load i8*, i8** %hc_mmio, align 8, !dbg !12260
  %add.ptr42 = getelementptr i8, i8* %32, i64 20, !dbg !12261
  call void @writel(i32 -17, i8* %add.ptr42) #9, !dbg !12262
  %33 = load i32, i32* %count.addr, align 4, !dbg !12263
  %tobool43 = icmp ne i32 %33, 0, !dbg !12263
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !12265

if.then44:                                        ; preds = %if.end38
  %34 = load i32, i32* %coal_enable, align 4, !dbg !12266
  %or = or i32 %34, 256, !dbg !12266
  store i32 %or, i32* %coal_enable, align 4, !dbg !12266
  br label %if.end45, !dbg !12267

if.end45:                                         ; preds = %if.then44, %if.end38
  %35 = load i32, i32* %is_dual_hc, align 4, !dbg !12268
  %tobool46 = icmp ne i32 %35, 0, !dbg !12268
  br i1 %tobool46, label %if.then47, label %if.end56, !dbg !12270

if.then47:                                        ; preds = %if.end45
  %36 = load i8*, i8** %mmio, align 8, !dbg !12271
  %call48 = call i8* @mv_hc_base_from_port(i8* %36, i32 4) #9, !dbg !12273
  store i8* %call48, i8** %hc_mmio, align 8, !dbg !12274
  %37 = load i32, i32* %clks, align 4, !dbg !12275
  %38 = load i8*, i8** %hc_mmio, align 8, !dbg !12276
  %add.ptr49 = getelementptr i8, i8* %38, i64 16, !dbg !12277
  call void @writel(i32 %37, i8* %add.ptr49) #9, !dbg !12278
  %39 = load i32, i32* %count.addr, align 4, !dbg !12279
  %40 = load i8*, i8** %hc_mmio, align 8, !dbg !12280
  %add.ptr50 = getelementptr i8, i8* %40, i64 12, !dbg !12281
  call void @writel(i32 %39, i8* %add.ptr50) #9, !dbg !12282
  %41 = load i8*, i8** %hc_mmio, align 8, !dbg !12283
  %add.ptr51 = getelementptr i8, i8* %41, i64 20, !dbg !12284
  call void @writel(i32 -17, i8* %add.ptr51) #9, !dbg !12285
  %42 = load i32, i32* %count.addr, align 4, !dbg !12286
  %tobool52 = icmp ne i32 %42, 0, !dbg !12286
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !12288

if.then53:                                        ; preds = %if.then47
  %43 = load i32, i32* %coal_enable, align 4, !dbg !12289
  %or54 = or i32 %43, 131072, !dbg !12289
  store i32 %or54, i32* %coal_enable, align 4, !dbg !12289
  br label %if.end55, !dbg !12290

if.end55:                                         ; preds = %if.then53, %if.then47
  br label %if.end56, !dbg !12291

if.end56:                                         ; preds = %if.end55, %if.end45
  %44 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12292
  %45 = load i32, i32* %coal_enable, align 4, !dbg !12293
  call void @mv_set_main_irq_mask(%struct.ata_host* %44, i32 0, i32 %45) #9, !dbg !12294
  %46 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12295
  %lock57 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %46, i32 0, i32 0, !dbg !12296
  %47 = load i64, i64* %flags, align 8, !dbg !12297
  store %struct.spinlock* %lock57, %struct.spinlock** %lock.addr.i58, align 8
  store i64 %47, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1322, metadata !9502, metadata !DIExpression()) #6, !dbg !12298
  call void @llvm.dbg.declare(metadata !1322, metadata !9506, metadata !DIExpression()) #6, !dbg !12298
  store i32 1, i32* %tmp.i, align 4, !dbg !12298
  %48 = load i32, i32* %tmp.i, align 4, !dbg !12298
  call void @llvm.dbg.declare(metadata !1322, metadata !9507, metadata !DIExpression()) #6, !dbg !12299
  call void @llvm.dbg.declare(metadata !1322, metadata !9513, metadata !DIExpression()) #6, !dbg !12299
  store i32 1, i32* %tmp8.i, align 4, !dbg !12299
  %49 = load i32, i32* %tmp8.i, align 4, !dbg !12299
  %50 = load i64, i64* %flags.addr.i, align 8, !dbg !12300
  call void @arch_local_irq_restore(i64 %50) #11, !dbg !12300
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12301, !srcloc !9517
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i58, align 8, !dbg !12302
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !12302
  %rlock.i59 = bitcast %union.anon.2* %52 to %struct.raw_spinlock*, !dbg !12302
  ret void, !dbg !12303
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_60x1b2_errata_pci7(%struct.ata_host* %host) #2 !dbg !12304 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %reg = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !12305, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !12307, metadata !DIExpression()), !dbg !12308
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12309
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !12310
  %1 = load i8*, i8** %private_data, align 8, !dbg !12310
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !12309
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !12308
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !12311, metadata !DIExpression()), !dbg !12312
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12313
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 6, !dbg !12314
  %4 = load i8*, i8** %base, align 8, !dbg !12314
  store i8* %4, i8** %mmio, align 8, !dbg !12312
  %5 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12315
  %call = call i32 @mv_in_pcix_mode(%struct.ata_host* %5) #9, !dbg !12317
  %tobool = icmp ne i32 %call, 0, !dbg !12317
  br i1 %tobool, label %if.then, label %if.end, !dbg !12318

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12319, metadata !DIExpression()), !dbg !12321
  %6 = load i8*, i8** %mmio, align 8, !dbg !12322
  %add.ptr = getelementptr i8, i8* %6, i64 3072, !dbg !12323
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !12324
  store i32 %call1, i32* %reg, align 4, !dbg !12321
  %7 = load i32, i32* %reg, align 4, !dbg !12325
  %and = and i32 %7, -17, !dbg !12326
  %conv = zext i32 %and to i64, !dbg !12325
  %8 = load i8*, i8** %mmio, align 8, !dbg !12327
  %add.ptr2 = getelementptr i8, i8* %8, i64 3072, !dbg !12328
  call void @writelfl(i64 %conv, i8* %add.ptr2) #9, !dbg !12329
  br label %if.end, !dbg !12330

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12331
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_pci_cut_through_okay(%struct.ata_host* %host) #2 !dbg !12332 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %reg = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !12335, metadata !DIExpression()), !dbg !12336
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12337
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !12338
  %1 = load i8*, i8** %private_data, align 8, !dbg !12338
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !12337
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !12336
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !12339, metadata !DIExpression()), !dbg !12340
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12341
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 6, !dbg !12342
  %4 = load i8*, i8** %base, align 8, !dbg !12342
  store i8* %4, i8** %mmio, align 8, !dbg !12340
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12343, metadata !DIExpression()), !dbg !12344
  %5 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12345
  %call = call i32 @mv_in_pcix_mode(%struct.ata_host* %5) #9, !dbg !12347
  %tobool = icmp ne i32 %call, 0, !dbg !12347
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12348

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %mmio, align 8, !dbg !12349
  %add.ptr = getelementptr i8, i8* %6, i64 3072, !dbg !12351
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !12352
  store i32 %call1, i32* %reg, align 4, !dbg !12353
  %7 = load i32, i32* %reg, align 4, !dbg !12354
  %and = and i32 %7, 128, !dbg !12356
  %tobool2 = icmp ne i32 %and, 0, !dbg !12356
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !12357

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !12358
  br label %return, !dbg !12358

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !12359

if.end4:                                          ; preds = %if.end, %entry
  store i32 1, i32* %retval, align 4, !dbg !12360
  br label %return, !dbg !12360

return:                                           ; preds = %if.end4, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !12361
  ret i32 %8, !dbg !12361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @soc_is_65n(%struct.mv_host_priv* %hpriv) #2 !dbg !12362 {
entry:
  %retval = alloca i1, align 1
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %port0_mmio = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12365, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.declare(metadata i8** %port0_mmio, metadata !12367, metadata !DIExpression()), !dbg !12368
  %0 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12369
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %0, i32 0, i32 6, !dbg !12370
  %1 = load i8*, i8** %base, align 8, !dbg !12370
  %call = call i8* @mv_port_base(i8* %1, i32 0) #9, !dbg !12371
  store i8* %call, i8** %port0_mmio, align 8, !dbg !12368
  %2 = load i8*, i8** %port0_mmio, align 8, !dbg !12372
  %add.ptr = getelementptr i8, i8* %2, i64 928, !dbg !12374
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !12375
  %tobool = icmp ne i32 %call1, 0, !dbg !12375
  br i1 %tobool, label %if.then, label %if.end, !dbg !12376

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12377
  br label %return, !dbg !12377

if.end:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12378
  br label %return, !dbg !12378

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !12379
  ret i1 %3, !dbg !12379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv5_phy_errata(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %port) #2 !dbg !12380 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %phy_mmio = alloca i8*, align 8
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  %fix_apm_sq = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12381, metadata !DIExpression()), !dbg !12382
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12383, metadata !DIExpression()), !dbg !12384
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12385, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.declare(metadata i8** %phy_mmio, metadata !12387, metadata !DIExpression()), !dbg !12388
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12389
  %1 = load i32, i32* %port.addr, align 4, !dbg !12390
  %call = call i8* @mv5_phy_base(i8* %0, i32 %1) #9, !dbg !12391
  store i8* %call, i8** %phy_mmio, align 8, !dbg !12388
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !12392, metadata !DIExpression()), !dbg !12393
  store i32 6368, i32* %mask, align 4, !dbg !12393
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !12394, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.declare(metadata i32* %fix_apm_sq, metadata !12396, metadata !DIExpression()), !dbg !12397
  %2 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12398
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %2, i32 0, i32 0, !dbg !12399
  %3 = load i32, i32* %hp_flags, align 8, !dbg !12399
  %and = and i32 %3, 2, !dbg !12400
  store i32 %and, i32* %fix_apm_sq, align 4, !dbg !12397
  %4 = load i32, i32* %fix_apm_sq, align 4, !dbg !12401
  %tobool = icmp ne i32 %4, 0, !dbg !12401
  br i1 %tobool, label %if.then, label %if.end, !dbg !12403

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %phy_mmio, align 8, !dbg !12404
  %add.ptr = getelementptr i8, i8* %5, i64 48, !dbg !12406
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !12407
  store i32 %call1, i32* %tmp, align 4, !dbg !12408
  %6 = load i32, i32* %tmp, align 4, !dbg !12409
  %or = or i32 %6, 524288, !dbg !12409
  store i32 %or, i32* %tmp, align 4, !dbg !12409
  %7 = load i32, i32* %tmp, align 4, !dbg !12410
  %8 = load i8*, i8** %phy_mmio, align 8, !dbg !12411
  %add.ptr2 = getelementptr i8, i8* %8, i64 48, !dbg !12412
  call void @writel(i32 %7, i8* %add.ptr2) #9, !dbg !12413
  %9 = load i8*, i8** %phy_mmio, align 8, !dbg !12414
  %add.ptr3 = getelementptr i8, i8* %9, i64 12, !dbg !12415
  %call4 = call i32 @readl(i8* %add.ptr3) #9, !dbg !12416
  store i32 %call4, i32* %tmp, align 4, !dbg !12417
  %10 = load i32, i32* %tmp, align 4, !dbg !12418
  %and5 = and i32 %10, -4, !dbg !12418
  store i32 %and5, i32* %tmp, align 4, !dbg !12418
  %11 = load i32, i32* %tmp, align 4, !dbg !12419
  %or6 = or i32 %11, 1, !dbg !12419
  store i32 %or6, i32* %tmp, align 4, !dbg !12419
  %12 = load i32, i32* %tmp, align 4, !dbg !12420
  %13 = load i8*, i8** %phy_mmio, align 8, !dbg !12421
  %add.ptr7 = getelementptr i8, i8* %13, i64 12, !dbg !12422
  call void @writel(i32 %12, i8* %add.ptr7) #9, !dbg !12423
  br label %if.end, !dbg !12424

if.end:                                           ; preds = %if.then, %entry
  %14 = load i8*, i8** %phy_mmio, align 8, !dbg !12425
  %add.ptr8 = getelementptr i8, i8* %14, i64 116, !dbg !12426
  %call9 = call i32 @readl(i8* %add.ptr8) #9, !dbg !12427
  store i32 %call9, i32* %tmp, align 4, !dbg !12428
  %15 = load i32, i32* %tmp, align 4, !dbg !12429
  %and10 = and i32 %15, -6369, !dbg !12429
  store i32 %and10, i32* %tmp, align 4, !dbg !12429
  %16 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12430
  %signal = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %16, i32 0, i32 3, !dbg !12431
  %17 = load i32, i32* %port.addr, align 4, !dbg !12432
  %idxprom = zext i32 %17 to i64, !dbg !12430
  %arrayidx = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal, i64 0, i64 %idxprom, !dbg !12430
  %pre = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx, i32 0, i32 1, !dbg !12433
  %18 = load i32, i32* %pre, align 4, !dbg !12433
  %19 = load i32, i32* %tmp, align 4, !dbg !12434
  %or11 = or i32 %19, %18, !dbg !12434
  store i32 %or11, i32* %tmp, align 4, !dbg !12434
  %20 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12435
  %signal12 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %20, i32 0, i32 3, !dbg !12436
  %21 = load i32, i32* %port.addr, align 4, !dbg !12437
  %idxprom13 = zext i32 %21 to i64, !dbg !12435
  %arrayidx14 = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal12, i64 0, i64 %idxprom13, !dbg !12435
  %amps = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx14, i32 0, i32 0, !dbg !12438
  %22 = load i32, i32* %amps, align 4, !dbg !12438
  %23 = load i32, i32* %tmp, align 4, !dbg !12439
  %or15 = or i32 %23, %22, !dbg !12439
  store i32 %or15, i32* %tmp, align 4, !dbg !12439
  %24 = load i32, i32* %tmp, align 4, !dbg !12440
  %25 = load i8*, i8** %phy_mmio, align 8, !dbg !12441
  %add.ptr16 = getelementptr i8, i8* %25, i64 116, !dbg !12442
  call void @writel(i32 %24, i8* %add.ptr16) #9, !dbg !12443
  ret void, !dbg !12444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv5_enable_leds(%struct.mv_host_priv* %hpriv, i8* %mmio) #2 !dbg !12445 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12446, metadata !DIExpression()), !dbg !12447
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12448, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !12450, metadata !DIExpression()), !dbg !12451
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12452
  %add.ptr = getelementptr i8, i8* %0, i64 66800, !dbg !12453
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !12454
  %1 = load i8*, i8** %mmio.addr, align 8, !dbg !12455
  %add.ptr1 = getelementptr i8, i8* %1, i64 3372, !dbg !12456
  %call = call i32 @readl(i8* %add.ptr1) #9, !dbg !12457
  store i32 %call, i32* %tmp, align 4, !dbg !12458
  %2 = load i32, i32* %tmp, align 4, !dbg !12459
  %or = or i32 %2, -2, !dbg !12459
  store i32 %or, i32* %tmp, align 4, !dbg !12459
  %3 = load i32, i32* %tmp, align 4, !dbg !12460
  %4 = load i8*, i8** %mmio.addr, align 8, !dbg !12461
  %add.ptr2 = getelementptr i8, i8* %4, i64 3372, !dbg !12462
  call void @writel(i32 %3, i8* %add.ptr2) #9, !dbg !12463
  ret void, !dbg !12464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv5_read_preamp(%struct.mv_host_priv* %hpriv, i32 %idx, i8* %mmio) #2 !dbg !12465 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %idx.addr = alloca i32, align 4
  %mmio.addr = alloca i8*, align 8
  %phy_mmio = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12466, metadata !DIExpression()), !dbg !12467
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !12468, metadata !DIExpression()), !dbg !12469
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.declare(metadata i8** %phy_mmio, metadata !12472, metadata !DIExpression()), !dbg !12473
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12474
  %1 = load i32, i32* %idx.addr, align 4, !dbg !12475
  %call = call i8* @mv5_phy_base(i8* %0, i32 %1) #9, !dbg !12476
  store i8* %call, i8** %phy_mmio, align 8, !dbg !12473
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !12477, metadata !DIExpression()), !dbg !12478
  %2 = load i8*, i8** %phy_mmio, align 8, !dbg !12479
  %add.ptr = getelementptr i8, i8* %2, i64 116, !dbg !12480
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !12481
  store i32 %call1, i32* %tmp, align 4, !dbg !12482
  %3 = load i32, i32* %tmp, align 4, !dbg !12483
  %and = and i32 %3, 6144, !dbg !12484
  %4 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12485
  %signal = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %4, i32 0, i32 3, !dbg !12486
  %5 = load i32, i32* %idx.addr, align 4, !dbg !12487
  %idxprom = sext i32 %5 to i64, !dbg !12485
  %arrayidx = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal, i64 0, i64 %idxprom, !dbg !12485
  %pre = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx, i32 0, i32 1, !dbg !12488
  store i32 %and, i32* %pre, align 4, !dbg !12489
  %6 = load i32, i32* %tmp, align 4, !dbg !12490
  %and2 = and i32 %6, 224, !dbg !12491
  %7 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12492
  %signal3 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %7, i32 0, i32 3, !dbg !12493
  %8 = load i32, i32* %idx.addr, align 4, !dbg !12494
  %idxprom4 = sext i32 %8 to i64, !dbg !12492
  %arrayidx5 = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal3, i64 0, i64 %idxprom4, !dbg !12492
  %amps = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx5, i32 0, i32 0, !dbg !12495
  store i32 %and2, i32* %amps, align 4, !dbg !12496
  ret void, !dbg !12497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv5_reset_hc(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %n_hc) #2 !dbg !12498 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %n_hc.addr = alloca i32, align 4
  %hc = alloca i32, align 4
  %port = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12499, metadata !DIExpression()), !dbg !12500
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12501, metadata !DIExpression()), !dbg !12502
  store i32 %n_hc, i32* %n_hc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_hc.addr, metadata !12503, metadata !DIExpression()), !dbg !12504
  call void @llvm.dbg.declare(metadata i32* %hc, metadata !12505, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.declare(metadata i32* %port, metadata !12507, metadata !DIExpression()), !dbg !12508
  store i32 0, i32* %hc, align 4, !dbg !12509
  br label %for.cond, !dbg !12511

for.cond:                                         ; preds = %for.inc4, %entry
  %0 = load i32, i32* %hc, align 4, !dbg !12512
  %1 = load i32, i32* %n_hc.addr, align 4, !dbg !12514
  %cmp = icmp ult i32 %0, %1, !dbg !12515
  br i1 %cmp, label %for.body, label %for.end6, !dbg !12516

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %port, align 4, !dbg !12517
  br label %for.cond1, !dbg !12520

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %port, align 4, !dbg !12521
  %cmp2 = icmp ult i32 %2, 4, !dbg !12523
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !12524

for.body3:                                        ; preds = %for.cond1
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12525
  %4 = load i8*, i8** %mmio.addr, align 8, !dbg !12526
  %5 = load i32, i32* %hc, align 4, !dbg !12527
  %mul = mul i32 %5, 4, !dbg !12528
  %6 = load i32, i32* %port, align 4, !dbg !12529
  %add = add i32 %mul, %6, !dbg !12530
  call void @mv5_reset_hc_port(%struct.mv_host_priv* %3, i8* %4, i32 %add) #9, !dbg !12531
  br label %for.inc, !dbg !12531

for.inc:                                          ; preds = %for.body3
  %7 = load i32, i32* %port, align 4, !dbg !12532
  %inc = add i32 %7, 1, !dbg !12532
  store i32 %inc, i32* %port, align 4, !dbg !12532
  br label %for.cond1, !dbg !12533, !llvm.loop !12534

for.end:                                          ; preds = %for.cond1
  %8 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12536
  %9 = load i8*, i8** %mmio.addr, align 8, !dbg !12537
  %10 = load i32, i32* %hc, align 4, !dbg !12538
  call void @mv5_reset_one_hc(%struct.mv_host_priv* %8, i8* %9, i32 %10) #9, !dbg !12539
  br label %for.inc4, !dbg !12540

for.inc4:                                         ; preds = %for.end
  %11 = load i32, i32* %hc, align 4, !dbg !12541
  %inc5 = add i32 %11, 1, !dbg !12541
  store i32 %inc5, i32* %hc, align 4, !dbg !12541
  br label %for.cond, !dbg !12542, !llvm.loop !12543

for.end6:                                         ; preds = %for.cond
  ret i32 0, !dbg !12545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv5_reset_flash(%struct.mv_host_priv* %hpriv, i8* %mmio) #2 !dbg !12546 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12547, metadata !DIExpression()), !dbg !12548
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12549, metadata !DIExpression()), !dbg !12550
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12551
  %add.ptr = getelementptr i8, i8* %0, i64 66668, !dbg !12552
  call void @writel(i32 265289727, i8* %add.ptr) #9, !dbg !12553
  ret void, !dbg !12554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv5_reset_bus(%struct.ata_host* %host, i8* %mmio) #2 !dbg !12555 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %mmio.addr = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %early_5080 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !12556, metadata !DIExpression()), !dbg !12557
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12558, metadata !DIExpression()), !dbg !12559
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12560, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12562, metadata !DIExpression()), !dbg !12564
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12564
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !12564
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12564
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12564
  store i8* %2, i8** %__mptr, align 8, !dbg !12564
  br label %do.body, !dbg !12564

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12565

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12564
  %add.ptr = getelementptr i8, i8* %3, i64 -176, !dbg !12564
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !12564
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !12565
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !12564
  store %struct.pci_dev* %5, %struct.pci_dev** %pdev, align 8, !dbg !12561
  call void @llvm.dbg.declare(metadata i32* %early_5080, metadata !12567, metadata !DIExpression()), !dbg !12568
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12569
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 8, !dbg !12570
  %7 = load i16, i16* %device, align 2, !dbg !12570
  %conv = zext i16 %7 to i32, !dbg !12569
  %cmp = icmp eq i32 %conv, 20608, !dbg !12571
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12572

land.rhs:                                         ; preds = %do.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12573
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 12, !dbg !12574
  %9 = load i8, i8* %revision, align 8, !dbg !12574
  %conv2 = zext i8 %9 to i32, !dbg !12573
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !12575
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end
  %10 = phi i1 [ false, %do.end ], [ %cmp3, %land.rhs ], !dbg !12576
  %land.ext = zext i1 %10 to i32, !dbg !12572
  store i32 %land.ext, i32* %early_5080, align 4, !dbg !12577
  %11 = load i32, i32* %early_5080, align 4, !dbg !12578
  %tobool = icmp ne i32 %11, 0, !dbg !12578
  br i1 %tobool, label %if.end, label %if.then, !dbg !12580

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %tmp5, metadata !12581, metadata !DIExpression()), !dbg !12583
  %12 = load i8*, i8** %mmio.addr, align 8, !dbg !12584
  %add.ptr6 = getelementptr i8, i8* %12, i64 3372, !dbg !12585
  %call = call i32 @readl(i8* %add.ptr6) #9, !dbg !12586
  store i32 %call, i32* %tmp5, align 4, !dbg !12583
  %13 = load i32, i32* %tmp5, align 4, !dbg !12587
  %or = or i32 %13, 1, !dbg !12587
  store i32 %or, i32* %tmp5, align 4, !dbg !12587
  %14 = load i32, i32* %tmp5, align 4, !dbg !12588
  %15 = load i8*, i8** %mmio.addr, align 8, !dbg !12589
  %add.ptr7 = getelementptr i8, i8* %15, i64 3372, !dbg !12590
  call void @writel(i32 %14, i8* %add.ptr7) #9, !dbg !12591
  br label %if.end, !dbg !12592

if.end:                                           ; preds = %if.then, %land.end
  %16 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12593
  %17 = load i8*, i8** %mmio.addr, align 8, !dbg !12594
  call void @mv_reset_pci_bus(%struct.ata_host* %16, i8* %17) #9, !dbg !12595
  ret void, !dbg !12596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv5_reset_hc_port(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %port) #2 !dbg !12597 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %port_mmio = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12598, metadata !DIExpression()), !dbg !12599
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12600, metadata !DIExpression()), !dbg !12601
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12602, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !12604, metadata !DIExpression()), !dbg !12605
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12606
  %1 = load i32, i32* %port.addr, align 4, !dbg !12607
  %call = call i8* @mv_port_base(i8* %0, i32 %1) #9, !dbg !12608
  store i8* %call, i8** %port_mmio, align 8, !dbg !12605
  %2 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12609
  %3 = load i8*, i8** %mmio.addr, align 8, !dbg !12610
  %4 = load i32, i32* %port.addr, align 4, !dbg !12611
  call void @mv_reset_channel(%struct.mv_host_priv* %2, i8* %3, i32 %4) #9, !dbg !12612
  %5 = load i8*, i8** %port_mmio, align 8, !dbg !12613
  %add.ptr = getelementptr i8, i8* %5, i64 40, !dbg !12613
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !12613
  %6 = load i8*, i8** %port_mmio, align 8, !dbg !12614
  %add.ptr1 = getelementptr i8, i8* %6, i64 0, !dbg !12615
  call void @writel(i32 287, i8* %add.ptr1) #9, !dbg !12616
  %7 = load i8*, i8** %port_mmio, align 8, !dbg !12617
  %add.ptr2 = getelementptr i8, i8* %7, i64 4, !dbg !12617
  call void @writel(i32 0, i8* %add.ptr2) #9, !dbg !12617
  %8 = load i8*, i8** %port_mmio, align 8, !dbg !12618
  %add.ptr3 = getelementptr i8, i8* %8, i64 8, !dbg !12618
  call void @writel(i32 0, i8* %add.ptr3) #9, !dbg !12618
  %9 = load i8*, i8** %port_mmio, align 8, !dbg !12619
  %add.ptr4 = getelementptr i8, i8* %9, i64 12, !dbg !12619
  call void @writel(i32 0, i8* %add.ptr4) #9, !dbg !12619
  %10 = load i8*, i8** %port_mmio, align 8, !dbg !12620
  %add.ptr5 = getelementptr i8, i8* %10, i64 16, !dbg !12620
  call void @writel(i32 0, i8* %add.ptr5) #9, !dbg !12620
  %11 = load i8*, i8** %port_mmio, align 8, !dbg !12621
  %add.ptr6 = getelementptr i8, i8* %11, i64 20, !dbg !12621
  call void @writel(i32 0, i8* %add.ptr6) #9, !dbg !12621
  %12 = load i8*, i8** %port_mmio, align 8, !dbg !12622
  %add.ptr7 = getelementptr i8, i8* %12, i64 24, !dbg !12622
  call void @writel(i32 0, i8* %add.ptr7) #9, !dbg !12622
  %13 = load i8*, i8** %port_mmio, align 8, !dbg !12623
  %add.ptr8 = getelementptr i8, i8* %13, i64 28, !dbg !12623
  call void @writel(i32 0, i8* %add.ptr8) #9, !dbg !12623
  %14 = load i8*, i8** %port_mmio, align 8, !dbg !12624
  %add.ptr9 = getelementptr i8, i8* %14, i64 36, !dbg !12624
  call void @writel(i32 0, i8* %add.ptr9) #9, !dbg !12624
  %15 = load i8*, i8** %port_mmio, align 8, !dbg !12625
  %add.ptr10 = getelementptr i8, i8* %15, i64 32, !dbg !12625
  call void @writel(i32 0, i8* %add.ptr10) #9, !dbg !12625
  %16 = load i8*, i8** %port_mmio, align 8, !dbg !12626
  %add.ptr11 = getelementptr i8, i8* %16, i64 44, !dbg !12626
  call void @writel(i32 0, i8* %add.ptr11) #9, !dbg !12626
  %17 = load i8*, i8** %port_mmio, align 8, !dbg !12627
  %add.ptr12 = getelementptr i8, i8* %17, i64 52, !dbg !12628
  call void @writel(i32 188, i8* %add.ptr12) #9, !dbg !12629
  ret void, !dbg !12630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv5_reset_one_hc(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %hc) #2 !dbg !12631 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %hc.addr = alloca i32, align 4
  %hc_mmio = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12632, metadata !DIExpression()), !dbg !12633
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12634, metadata !DIExpression()), !dbg !12635
  store i32 %hc, i32* %hc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hc.addr, metadata !12636, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !12638, metadata !DIExpression()), !dbg !12639
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12640
  %1 = load i32, i32* %hc.addr, align 4, !dbg !12641
  %call = call i8* @mv_hc_base(i8* %0, i32 %1) #9, !dbg !12642
  store i8* %call, i8** %hc_mmio, align 8, !dbg !12639
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !12643, metadata !DIExpression()), !dbg !12644
  %2 = load i8*, i8** %hc_mmio, align 8, !dbg !12645
  %add.ptr = getelementptr i8, i8* %2, i64 12, !dbg !12645
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !12645
  %3 = load i8*, i8** %hc_mmio, align 8, !dbg !12646
  %add.ptr1 = getelementptr i8, i8* %3, i64 16, !dbg !12646
  call void @writel(i32 0, i8* %add.ptr1) #9, !dbg !12646
  %4 = load i8*, i8** %hc_mmio, align 8, !dbg !12647
  %add.ptr2 = getelementptr i8, i8* %4, i64 20, !dbg !12647
  call void @writel(i32 0, i8* %add.ptr2) #9, !dbg !12647
  %5 = load i8*, i8** %hc_mmio, align 8, !dbg !12648
  %add.ptr3 = getelementptr i8, i8* %5, i64 24, !dbg !12648
  call void @writel(i32 0, i8* %add.ptr3) #9, !dbg !12648
  %6 = load i8*, i8** %hc_mmio, align 8, !dbg !12649
  %add.ptr4 = getelementptr i8, i8* %6, i64 32, !dbg !12650
  %call5 = call i32 @readl(i8* %add.ptr4) #9, !dbg !12651
  store i32 %call5, i32* %tmp, align 4, !dbg !12652
  %7 = load i32, i32* %tmp, align 4, !dbg !12653
  %and = and i32 %7, 471604252, !dbg !12653
  store i32 %and, i32* %tmp, align 4, !dbg !12653
  %8 = load i32, i32* %tmp, align 4, !dbg !12654
  %or = or i32 %8, 50529027, !dbg !12654
  store i32 %or, i32* %tmp, align 4, !dbg !12654
  %9 = load i32, i32* %tmp, align 4, !dbg !12655
  %10 = load i8*, i8** %hc_mmio, align 8, !dbg !12656
  %add.ptr6 = getelementptr i8, i8* %10, i64 32, !dbg !12657
  call void @writel(i32 %9, i8* %add.ptr6) #9, !dbg !12658
  ret void, !dbg !12659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_reset_pci_bus(%struct.ata_host* %host, i8* %mmio) #2 !dbg !12660 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %mmio.addr = alloca i8*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %tmp = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !12661, metadata !DIExpression()), !dbg !12662
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12663, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !12665, metadata !DIExpression()), !dbg !12666
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !12667
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !12668
  %1 = load i8*, i8** %private_data, align 8, !dbg !12668
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !12667
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !12666
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !12669, metadata !DIExpression()), !dbg !12670
  %3 = load i8*, i8** %mmio.addr, align 8, !dbg !12671
  %add.ptr = getelementptr i8, i8* %3, i64 3328, !dbg !12672
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !12673
  store i32 %call, i32* %tmp, align 4, !dbg !12674
  %4 = load i32, i32* %tmp, align 4, !dbg !12675
  %and = and i32 %4, -16711681, !dbg !12675
  store i32 %and, i32* %tmp, align 4, !dbg !12675
  %5 = load i32, i32* %tmp, align 4, !dbg !12676
  %6 = load i8*, i8** %mmio.addr, align 8, !dbg !12677
  %add.ptr1 = getelementptr i8, i8* %6, i64 3328, !dbg !12678
  call void @writel(i32 %5, i8* %add.ptr1) #9, !dbg !12679
  %7 = load i8*, i8** %mmio.addr, align 8, !dbg !12680
  %add.ptr2 = getelementptr i8, i8* %7, i64 3332, !dbg !12680
  call void @writel(i32 0, i8* %add.ptr2) #9, !dbg !12680
  %8 = load i8*, i8** %mmio.addr, align 8, !dbg !12681
  %add.ptr3 = getelementptr i8, i8* %8, i64 3128, !dbg !12681
  call void @writel(i32 0, i8* %add.ptr3) #9, !dbg !12681
  %9 = load i8*, i8** %mmio.addr, align 8, !dbg !12682
  %add.ptr4 = getelementptr i8, i8* %9, i64 7428, !dbg !12683
  call void @writel(i32 65791, i8* %add.ptr4) #9, !dbg !12684
  %10 = load i8*, i8** %mmio.addr, align 8, !dbg !12685
  %add.ptr5 = getelementptr i8, i8* %10, i64 3112, !dbg !12685
  call void @writel(i32 0, i8* %add.ptr5) #9, !dbg !12685
  %11 = load i8*, i8** %mmio.addr, align 8, !dbg !12686
  %12 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12686
  %irq_cause_offset = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %12, i32 0, i32 9, !dbg !12686
  %13 = load i32, i32* %irq_cause_offset, align 8, !dbg !12686
  %idx.ext = zext i32 %13 to i64, !dbg !12686
  %add.ptr6 = getelementptr i8, i8* %11, i64 %idx.ext, !dbg !12686
  call void @writel(i32 0, i8* %add.ptr6) #9, !dbg !12686
  %14 = load i8*, i8** %mmio.addr, align 8, !dbg !12687
  %15 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !12687
  %irq_mask_offset = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %15, i32 0, i32 10, !dbg !12687
  %16 = load i32, i32* %irq_mask_offset, align 4, !dbg !12687
  %idx.ext7 = zext i32 %16 to i64, !dbg !12687
  %add.ptr8 = getelementptr i8, i8* %14, i64 %idx.ext7, !dbg !12687
  call void @writel(i32 0, i8* %add.ptr8) #9, !dbg !12687
  %17 = load i8*, i8** %mmio.addr, align 8, !dbg !12688
  %add.ptr9 = getelementptr i8, i8* %17, i64 7488, !dbg !12688
  call void @writel(i32 0, i8* %add.ptr9) #9, !dbg !12688
  %18 = load i8*, i8** %mmio.addr, align 8, !dbg !12689
  %add.ptr10 = getelementptr i8, i8* %18, i64 7492, !dbg !12689
  call void @writel(i32 0, i8* %add.ptr10) #9, !dbg !12689
  %19 = load i8*, i8** %mmio.addr, align 8, !dbg !12690
  %add.ptr11 = getelementptr i8, i8* %19, i64 7496, !dbg !12690
  call void @writel(i32 0, i8* %add.ptr11) #9, !dbg !12690
  %20 = load i8*, i8** %mmio.addr, align 8, !dbg !12691
  %add.ptr12 = getelementptr i8, i8* %20, i64 7504, !dbg !12691
  call void @writel(i32 0, i8* %add.ptr12) #9, !dbg !12691
  ret void, !dbg !12692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv6_phy_errata(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %port) #2 !dbg !12693 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %port_mmio = alloca i8*, align 8
  %hp_flags = alloca i32, align 4
  %fix_phy_mode2 = alloca i32, align 4
  %fix_phy_mode4 = alloca i32, align 4
  %m2 = alloca i32, align 4
  %m3 = alloca i32, align 4
  %m4 = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12694, metadata !DIExpression()), !dbg !12695
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12696, metadata !DIExpression()), !dbg !12697
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12698, metadata !DIExpression()), !dbg !12699
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !12700, metadata !DIExpression()), !dbg !12701
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12702
  %1 = load i32, i32* %port.addr, align 4, !dbg !12703
  %call = call i8* @mv_port_base(i8* %0, i32 %1) #9, !dbg !12704
  store i8* %call, i8** %port_mmio, align 8, !dbg !12701
  call void @llvm.dbg.declare(metadata i32* %hp_flags, metadata !12705, metadata !DIExpression()), !dbg !12706
  %2 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12707
  %hp_flags1 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %2, i32 0, i32 0, !dbg !12708
  %3 = load i32, i32* %hp_flags1, align 8, !dbg !12708
  store i32 %3, i32* %hp_flags, align 4, !dbg !12706
  call void @llvm.dbg.declare(metadata i32* %fix_phy_mode2, metadata !12709, metadata !DIExpression()), !dbg !12710
  %4 = load i32, i32* %hp_flags, align 4, !dbg !12711
  %and = and i32 %4, 24, !dbg !12712
  store i32 %and, i32* %fix_phy_mode2, align 4, !dbg !12710
  call void @llvm.dbg.declare(metadata i32* %fix_phy_mode4, metadata !12713, metadata !DIExpression()), !dbg !12714
  %5 = load i32, i32* %hp_flags, align 4, !dbg !12715
  %and2 = and i32 %5, 24, !dbg !12716
  store i32 %and2, i32* %fix_phy_mode4, align 4, !dbg !12714
  call void @llvm.dbg.declare(metadata i32* %m2, metadata !12717, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.declare(metadata i32* %m3, metadata !12719, metadata !DIExpression()), !dbg !12720
  %6 = load i32, i32* %fix_phy_mode2, align 4, !dbg !12721
  %tobool = icmp ne i32 %6, 0, !dbg !12721
  br i1 %tobool, label %if.then, label %if.end, !dbg !12723

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %port_mmio, align 8, !dbg !12724
  %add.ptr = getelementptr i8, i8* %7, i64 816, !dbg !12726
  %call3 = call i32 @readl(i8* %add.ptr) #9, !dbg !12727
  store i32 %call3, i32* %m2, align 4, !dbg !12728
  %8 = load i32, i32* %m2, align 4, !dbg !12729
  %and4 = and i32 %8, -65537, !dbg !12729
  store i32 %and4, i32* %m2, align 4, !dbg !12729
  %9 = load i32, i32* %m2, align 4, !dbg !12730
  %or = or i32 %9, -2147483648, !dbg !12730
  store i32 %or, i32* %m2, align 4, !dbg !12730
  %10 = load i32, i32* %m2, align 4, !dbg !12731
  %11 = load i8*, i8** %port_mmio, align 8, !dbg !12732
  %add.ptr5 = getelementptr i8, i8* %11, i64 816, !dbg !12733
  call void @writel(i32 %10, i8* %add.ptr5) #9, !dbg !12734
  call void @__const_udelay(i64 859000) #9, !dbg !12735
  %12 = load i8*, i8** %port_mmio, align 8, !dbg !12740
  %add.ptr6 = getelementptr i8, i8* %12, i64 816, !dbg !12741
  %call7 = call i32 @readl(i8* %add.ptr6) #9, !dbg !12742
  store i32 %call7, i32* %m2, align 4, !dbg !12743
  %13 = load i32, i32* %m2, align 4, !dbg !12744
  %and8 = and i32 %13, 2147418111, !dbg !12744
  store i32 %and8, i32* %m2, align 4, !dbg !12744
  %14 = load i32, i32* %m2, align 4, !dbg !12745
  %15 = load i8*, i8** %port_mmio, align 8, !dbg !12746
  %add.ptr9 = getelementptr i8, i8* %15, i64 816, !dbg !12747
  call void @writel(i32 %14, i8* %add.ptr9) #9, !dbg !12748
  call void @__const_udelay(i64 859000) #9, !dbg !12749
  br label %if.end, !dbg !12754

if.end:                                           ; preds = %if.then, %entry
  %16 = load i8*, i8** %port_mmio, align 8, !dbg !12755
  %add.ptr10 = getelementptr i8, i8* %16, i64 784, !dbg !12756
  %call11 = call i32 @readl(i8* %add.ptr10) #9, !dbg !12757
  store i32 %call11, i32* %m3, align 4, !dbg !12758
  %17 = load i32, i32* %m3, align 4, !dbg !12759
  %and12 = and i32 %17, 31, !dbg !12760
  %or13 = or i32 %and12, -1431650272, !dbg !12761
  store i32 %or13, i32* %m3, align 4, !dbg !12762
  %18 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12763
  %hp_flags14 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %18, i32 0, i32 0, !dbg !12763
  %19 = load i32, i32* %hp_flags14, align 8, !dbg !12763
  %and15 = and i32 %19, 2048, !dbg !12763
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12763
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !12765

if.then17:                                        ; preds = %if.end
  %20 = load i32, i32* %m3, align 4, !dbg !12766
  %and18 = and i32 %20, -29, !dbg !12766
  store i32 %and18, i32* %m3, align 4, !dbg !12766
  br label %if.end19, !dbg !12767

if.end19:                                         ; preds = %if.then17, %if.end
  %21 = load i32, i32* %fix_phy_mode4, align 4, !dbg !12768
  %tobool20 = icmp ne i32 %21, 0, !dbg !12768
  br i1 %tobool20, label %if.then21, label %if.end34, !dbg !12770

if.then21:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %m4, metadata !12771, metadata !DIExpression()), !dbg !12773
  %22 = load i8*, i8** %port_mmio, align 8, !dbg !12774
  %add.ptr22 = getelementptr i8, i8* %22, i64 788, !dbg !12775
  %call23 = call i32 @readl(i8* %add.ptr22) #9, !dbg !12776
  store i32 %call23, i32* %m4, align 4, !dbg !12773
  %23 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12777
  %hp_flags24 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %23, i32 0, i32 0, !dbg !12777
  %24 = load i32, i32* %hp_flags24, align 8, !dbg !12777
  %and25 = and i32 %24, 256, !dbg !12777
  %tobool26 = icmp ne i32 %and25, 0, !dbg !12777
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !12779

if.then27:                                        ; preds = %if.then21
  %25 = load i32, i32* %m4, align 4, !dbg !12780
  %and28 = and i32 %25, -1575223291, !dbg !12781
  %or29 = or i32 %and28, 5, !dbg !12782
  store i32 %or29, i32* %m4, align 4, !dbg !12783
  br label %if.end32, !dbg !12784

if.else:                                          ; preds = %if.then21
  %26 = load i32, i32* %m4, align 4, !dbg !12785
  %and30 = and i32 %26, -4, !dbg !12786
  %or31 = or i32 %and30, 1, !dbg !12787
  store i32 %or31, i32* %m4, align 4, !dbg !12788
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then27
  %27 = load i32, i32* %m4, align 4, !dbg !12789
  %28 = load i8*, i8** %port_mmio, align 8, !dbg !12790
  %add.ptr33 = getelementptr i8, i8* %28, i64 788, !dbg !12791
  call void @writel(i32 %27, i8* %add.ptr33) #9, !dbg !12792
  br label %if.end34, !dbg !12793

if.end34:                                         ; preds = %if.end32, %if.end19
  %29 = load i32, i32* %m3, align 4, !dbg !12794
  %30 = load i8*, i8** %port_mmio, align 8, !dbg !12795
  %add.ptr35 = getelementptr i8, i8* %30, i64 784, !dbg !12796
  call void @writel(i32 %29, i8* %add.ptr35) #9, !dbg !12797
  %31 = load i8*, i8** %port_mmio, align 8, !dbg !12798
  %add.ptr36 = getelementptr i8, i8* %31, i64 816, !dbg !12799
  %call37 = call i32 @readl(i8* %add.ptr36) #9, !dbg !12800
  store i32 %call37, i32* %m2, align 4, !dbg !12801
  %32 = load i32, i32* %m2, align 4, !dbg !12802
  %and38 = and i32 %32, -2017, !dbg !12802
  store i32 %and38, i32* %m2, align 4, !dbg !12802
  %33 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12803
  %signal = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %33, i32 0, i32 3, !dbg !12804
  %34 = load i32, i32* %port.addr, align 4, !dbg !12805
  %idxprom = zext i32 %34 to i64, !dbg !12803
  %arrayidx = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal, i64 0, i64 %idxprom, !dbg !12803
  %amps = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx, i32 0, i32 0, !dbg !12806
  %35 = load i32, i32* %amps, align 4, !dbg !12806
  %36 = load i32, i32* %m2, align 4, !dbg !12807
  %or39 = or i32 %36, %35, !dbg !12807
  store i32 %or39, i32* %m2, align 4, !dbg !12807
  %37 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12808
  %signal40 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %37, i32 0, i32 3, !dbg !12809
  %38 = load i32, i32* %port.addr, align 4, !dbg !12810
  %idxprom41 = zext i32 %38 to i64, !dbg !12808
  %arrayidx42 = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal40, i64 0, i64 %idxprom41, !dbg !12808
  %pre = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx42, i32 0, i32 1, !dbg !12811
  %39 = load i32, i32* %pre, align 4, !dbg !12811
  %40 = load i32, i32* %m2, align 4, !dbg !12812
  %or43 = or i32 %40, %39, !dbg !12812
  store i32 %or43, i32* %m2, align 4, !dbg !12812
  %41 = load i32, i32* %m2, align 4, !dbg !12813
  %and44 = and i32 %41, -65537, !dbg !12813
  store i32 %and44, i32* %m2, align 4, !dbg !12813
  %42 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12814
  %hp_flags45 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %42, i32 0, i32 0, !dbg !12814
  %43 = load i32, i32* %hp_flags45, align 8, !dbg !12814
  %and46 = and i32 %43, 256, !dbg !12814
  %tobool47 = icmp ne i32 %and46, 0, !dbg !12814
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !12816

if.then48:                                        ; preds = %if.end34
  %44 = load i32, i32* %m2, align 4, !dbg !12817
  %and49 = and i32 %44, 1022365664, !dbg !12817
  store i32 %and49, i32* %m2, align 4, !dbg !12817
  %45 = load i32, i32* %m2, align 4, !dbg !12819
  %or50 = or i32 %45, 36879, !dbg !12819
  store i32 %or50, i32* %m2, align 4, !dbg !12819
  br label %if.end51, !dbg !12820

if.end51:                                         ; preds = %if.then48, %if.end34
  %46 = load i32, i32* %m2, align 4, !dbg !12821
  %47 = load i8*, i8** %port_mmio, align 8, !dbg !12822
  %add.ptr52 = getelementptr i8, i8* %47, i64 816, !dbg !12823
  call void @writel(i32 %46, i8* %add.ptr52) #9, !dbg !12824
  ret void, !dbg !12825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv6_enable_leds(%struct.mv_host_priv* %hpriv, i8* %mmio) #2 !dbg !12826 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12827, metadata !DIExpression()), !dbg !12828
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12829, metadata !DIExpression()), !dbg !12830
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12831
  %add.ptr = getelementptr i8, i8* %0, i64 66800, !dbg !12832
  call void @writel(i32 96, i8* %add.ptr) #9, !dbg !12833
  ret void, !dbg !12834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv6_read_preamp(%struct.mv_host_priv* %hpriv, i32 %idx, i8* %mmio) #2 !dbg !12835 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %idx.addr = alloca i32, align 4
  %mmio.addr = alloca i8*, align 8
  %port_mmio = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12836, metadata !DIExpression()), !dbg !12837
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !12838, metadata !DIExpression()), !dbg !12839
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !12842, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !12844, metadata !DIExpression()), !dbg !12845
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12846
  %add.ptr = getelementptr i8, i8* %0, i64 98520, !dbg !12847
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !12848
  store i32 %call, i32* %tmp, align 4, !dbg !12849
  %1 = load i32, i32* %tmp, align 4, !dbg !12850
  %and = and i32 %1, 1, !dbg !12852
  %cmp = icmp eq i32 %and, 0, !dbg !12853
  br i1 %cmp, label %if.then, label %if.end, !dbg !12854

if.then:                                          ; preds = %entry
  %2 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12855
  %signal = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %2, i32 0, i32 3, !dbg !12857
  %3 = load i32, i32* %idx.addr, align 4, !dbg !12858
  %idxprom = sext i32 %3 to i64, !dbg !12855
  %arrayidx = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal, i64 0, i64 %idxprom, !dbg !12855
  %amps = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx, i32 0, i32 0, !dbg !12859
  store i32 1792, i32* %amps, align 4, !dbg !12860
  %4 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12861
  %signal1 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %4, i32 0, i32 3, !dbg !12862
  %5 = load i32, i32* %idx.addr, align 4, !dbg !12863
  %idxprom2 = sext i32 %5 to i64, !dbg !12861
  %arrayidx3 = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal1, i64 0, i64 %idxprom2, !dbg !12861
  %pre = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx3, i32 0, i32 1, !dbg !12864
  store i32 32, i32* %pre, align 4, !dbg !12865
  br label %return, !dbg !12866

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %mmio.addr, align 8, !dbg !12867
  %7 = load i32, i32* %idx.addr, align 4, !dbg !12868
  %call4 = call i8* @mv_port_base(i8* %6, i32 %7) #9, !dbg !12869
  store i8* %call4, i8** %port_mmio, align 8, !dbg !12870
  %8 = load i8*, i8** %port_mmio, align 8, !dbg !12871
  %add.ptr5 = getelementptr i8, i8* %8, i64 816, !dbg !12872
  %call6 = call i32 @readl(i8* %add.ptr5) #9, !dbg !12873
  store i32 %call6, i32* %tmp, align 4, !dbg !12874
  %9 = load i32, i32* %tmp, align 4, !dbg !12875
  %and7 = and i32 %9, 1792, !dbg !12876
  %10 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12877
  %signal8 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %10, i32 0, i32 3, !dbg !12878
  %11 = load i32, i32* %idx.addr, align 4, !dbg !12879
  %idxprom9 = sext i32 %11 to i64, !dbg !12877
  %arrayidx10 = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal8, i64 0, i64 %idxprom9, !dbg !12877
  %amps11 = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx10, i32 0, i32 0, !dbg !12880
  store i32 %and7, i32* %amps11, align 4, !dbg !12881
  %12 = load i32, i32* %tmp, align 4, !dbg !12882
  %and12 = and i32 %12, 224, !dbg !12883
  %13 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !12884
  %signal13 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %13, i32 0, i32 3, !dbg !12885
  %14 = load i32, i32* %idx.addr, align 4, !dbg !12886
  %idxprom14 = sext i32 %14 to i64, !dbg !12884
  %arrayidx15 = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal13, i64 0, i64 %idxprom14, !dbg !12884
  %pre16 = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx15, i32 0, i32 1, !dbg !12887
  store i32 %and12, i32* %pre16, align 4, !dbg !12888
  br label %return, !dbg !12889

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv6_reset_hc(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %n_hc) #2 !dbg !12890 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %n_hc.addr = alloca i32, align 4
  %reg = alloca i8*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %t = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !12891, metadata !DIExpression()), !dbg !12892
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !12893, metadata !DIExpression()), !dbg !12894
  store i32 %n_hc, i32* %n_hc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_hc.addr, metadata !12895, metadata !DIExpression()), !dbg !12896
  call void @llvm.dbg.declare(metadata i8** %reg, metadata !12897, metadata !DIExpression()), !dbg !12898
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !12899
  %add.ptr = getelementptr i8, i8* %0, i64 3376, !dbg !12900
  store i8* %add.ptr, i8** %reg, align 8, !dbg !12898
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12901, metadata !DIExpression()), !dbg !12902
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12903, metadata !DIExpression()), !dbg !12904
  store i32 0, i32* %rc, align 4, !dbg !12904
  call void @llvm.dbg.declare(metadata i32* %t, metadata !12905, metadata !DIExpression()), !dbg !12906
  %1 = load i8*, i8** %reg, align 8, !dbg !12907
  %call = call i32 @readl(i8* %1) #9, !dbg !12908
  store i32 %call, i32* %t, align 4, !dbg !12909
  %2 = load i32, i32* %t, align 4, !dbg !12910
  %or = or i32 %2, 4, !dbg !12911
  %3 = load i8*, i8** %reg, align 8, !dbg !12912
  call void @writel(i32 %or, i8* %3) #9, !dbg !12913
  store i32 0, i32* %i, align 4, !dbg !12914
  br label %for.cond, !dbg !12916

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !12917
  %cmp = icmp slt i32 %4, 1000, !dbg !12919
  br i1 %cmp, label %for.body, label %for.end, !dbg !12920

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 4295) #9, !dbg !12921
  %5 = load i8*, i8** %reg, align 8, !dbg !12927
  %call1 = call i32 @readl(i8* %5) #9, !dbg !12928
  store i32 %call1, i32* %t, align 4, !dbg !12929
  %6 = load i32, i32* %t, align 4, !dbg !12930
  %and = and i32 8, %6, !dbg !12932
  %tobool = icmp ne i32 %and, 0, !dbg !12932
  br i1 %tobool, label %if.then, label %if.end, !dbg !12933

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12934

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12935

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !12936
  %inc = add i32 %7, 1, !dbg !12936
  store i32 %inc, i32* %i, align 4, !dbg !12936
  br label %for.cond, !dbg !12937, !llvm.loop !12938

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load i32, i32* %t, align 4, !dbg !12940
  %and2 = and i32 8, %8, !dbg !12942
  %tobool3 = icmp ne i32 %and2, 0, !dbg !12942
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !12943

if.then4:                                         ; preds = %for.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !12944
  store i32 1, i32* %rc, align 4, !dbg !12946
  br label %done, !dbg !12947

if.end6:                                          ; preds = %for.end
  store i32 5, i32* %i, align 4, !dbg !12948
  br label %do.body, !dbg !12949

do.body:                                          ; preds = %land.end, %if.end6
  %9 = load i32, i32* %t, align 4, !dbg !12950
  %or7 = or i32 %9, 16, !dbg !12952
  %10 = load i8*, i8** %reg, align 8, !dbg !12953
  call void @writel(i32 %or7, i8* %10) #9, !dbg !12954
  %11 = load i8*, i8** %reg, align 8, !dbg !12955
  %call8 = call i32 @readl(i8* %11) #9, !dbg !12956
  store i32 %call8, i32* %t, align 4, !dbg !12957
  call void @__const_udelay(i64 4295) #9, !dbg !12958
  br label %do.cond, !dbg !12963

do.cond:                                          ; preds = %do.body
  %12 = load i32, i32* %t, align 4, !dbg !12964
  %and9 = and i32 16, %12, !dbg !12965
  %tobool10 = icmp ne i32 %and9, 0, !dbg !12965
  br i1 %tobool10, label %land.end, label %land.rhs, !dbg !12966

land.rhs:                                         ; preds = %do.cond
  %13 = load i32, i32* %i, align 4, !dbg !12967
  %dec = add i32 %13, -1, !dbg !12967
  store i32 %dec, i32* %i, align 4, !dbg !12967
  %cmp11 = icmp sgt i32 %13, 0, !dbg !12968
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %14 = phi i1 [ false, %do.cond ], [ %cmp11, %land.rhs ], !dbg !12969
  br i1 %14, label %do.body, label %do.end, !dbg !12963, !llvm.loop !12970

do.end:                                           ; preds = %land.end
  %15 = load i32, i32* %t, align 4, !dbg !12972
  %and12 = and i32 16, %15, !dbg !12974
  %tobool13 = icmp ne i32 %and12, 0, !dbg !12974
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !12975

if.then14:                                        ; preds = %do.end
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !12976
  store i32 1, i32* %rc, align 4, !dbg !12978
  br label %done, !dbg !12979

if.end16:                                         ; preds = %do.end
  store i32 5, i32* %i, align 4, !dbg !12980
  br label %do.body17, !dbg !12981

do.body17:                                        ; preds = %land.end26, %if.end16
  %16 = load i32, i32* %t, align 4, !dbg !12982
  %and18 = and i32 %16, -21, !dbg !12984
  %17 = load i8*, i8** %reg, align 8, !dbg !12985
  call void @writel(i32 %and18, i8* %17) #9, !dbg !12986
  %18 = load i8*, i8** %reg, align 8, !dbg !12987
  %call19 = call i32 @readl(i8* %18) #9, !dbg !12988
  store i32 %call19, i32* %t, align 4, !dbg !12989
  call void @__const_udelay(i64 4295) #9, !dbg !12990
  br label %do.cond20, !dbg !12995

do.cond20:                                        ; preds = %do.body17
  %19 = load i32, i32* %t, align 4, !dbg !12996
  %and21 = and i32 16, %19, !dbg !12997
  %tobool22 = icmp ne i32 %and21, 0, !dbg !12997
  br i1 %tobool22, label %land.rhs23, label %land.end26, !dbg !12998

land.rhs23:                                       ; preds = %do.cond20
  %20 = load i32, i32* %i, align 4, !dbg !12999
  %dec24 = add i32 %20, -1, !dbg !12999
  store i32 %dec24, i32* %i, align 4, !dbg !12999
  %cmp25 = icmp sgt i32 %20, 0, !dbg !13000
  br label %land.end26

land.end26:                                       ; preds = %land.rhs23, %do.cond20
  %21 = phi i1 [ false, %do.cond20 ], [ %cmp25, %land.rhs23 ], !dbg !12969
  br i1 %21, label %do.body17, label %do.end27, !dbg !12995, !llvm.loop !13001

do.end27:                                         ; preds = %land.end26
  %22 = load i32, i32* %t, align 4, !dbg !13003
  %and28 = and i32 16, %22, !dbg !13005
  %tobool29 = icmp ne i32 %and28, 0, !dbg !13005
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !13006

if.then30:                                        ; preds = %do.end27
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !13007
  store i32 1, i32* %rc, align 4, !dbg !13009
  br label %if.end32, !dbg !13010

if.end32:                                         ; preds = %if.then30, %do.end27
  br label %done, !dbg !13003

done:                                             ; preds = %if.end32, %if.then14, %if.then4
  call void @llvm.dbg.label(metadata !13011), !dbg !13012
  %23 = load i32, i32* %rc, align 4, !dbg !13013
  ret i32 %23, !dbg !13014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv6_reset_flash(%struct.mv_host_priv* %hpriv, i8* %mmio) #2 !dbg !13015 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13016, metadata !DIExpression()), !dbg !13017
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13020, metadata !DIExpression()), !dbg !13021
  %0 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !13022
  %1 = load i8*, i8** %mmio.addr, align 8, !dbg !13023
  call void @mv5_reset_flash(%struct.mv_host_priv* %0, i8* %1) #9, !dbg !13024
  %2 = load i8*, i8** %mmio.addr, align 8, !dbg !13025
  %add.ptr = getelementptr i8, i8* %2, i64 66800, !dbg !13026
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !13027
  store i32 %call, i32* %tmp, align 4, !dbg !13028
  %3 = load i32, i32* %tmp, align 4, !dbg !13029
  %and = and i32 %3, 3, !dbg !13029
  store i32 %and, i32* %tmp, align 4, !dbg !13029
  %4 = load i32, i32* %tmp, align 4, !dbg !13030
  %or = or i32 %4, 96, !dbg !13030
  store i32 %or, i32* %tmp, align 4, !dbg !13030
  %5 = load i32, i32* %tmp, align 4, !dbg !13031
  %6 = load i8*, i8** %mmio.addr, align 8, !dbg !13032
  %add.ptr1 = getelementptr i8, i8* %6, i64 66800, !dbg !13033
  call void @writel(i32 %5, i8* %add.ptr1) #9, !dbg !13034
  ret void, !dbg !13035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_in_pcix_mode(%struct.ata_host* %host) #2 !dbg !13036 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %reg = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !13039, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !13041, metadata !DIExpression()), !dbg !13042
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13043
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !13044
  %1 = load i8*, i8** %private_data, align 8, !dbg !13044
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !13043
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !13042
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !13045, metadata !DIExpression()), !dbg !13046
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13047
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 6, !dbg !13048
  %4 = load i8*, i8** %base, align 8, !dbg !13048
  store i8* %4, i8** %mmio, align 8, !dbg !13046
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !13049, metadata !DIExpression()), !dbg !13050
  %5 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13051
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %5, i32 0, i32 0, !dbg !13051
  %6 = load i32, i32* %hp_flags, align 8, !dbg !13051
  %and = and i32 %6, 2048, !dbg !13051
  %tobool = icmp ne i32 %and, 0, !dbg !13051
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13053

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13054
  %hp_flags1 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %7, i32 0, i32 0, !dbg !13054
  %8 = load i32, i32* %hp_flags1, align 8, !dbg !13054
  %and2 = and i32 %8, 512, !dbg !13054
  %tobool3 = icmp ne i32 %and2, 0, !dbg !13054
  br i1 %tobool3, label %if.end, label %if.then, !dbg !13055

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !13056
  br label %return, !dbg !13056

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i8*, i8** %mmio, align 8, !dbg !13057
  %add.ptr = getelementptr i8, i8* %9, i64 3328, !dbg !13058
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !13059
  store i32 %call, i32* %reg, align 4, !dbg !13060
  %10 = load i32, i32* %reg, align 4, !dbg !13061
  %and4 = and i32 %10, 48, !dbg !13063
  %cmp = icmp eq i32 %and4, 0, !dbg !13064
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !13065

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13066
  br label %return, !dbg !13066

if.end6:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !13067
  br label %return, !dbg !13067

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !13068
  ret i32 %11, !dbg !13068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_65n_phy_errata(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %port) #2 !dbg !13069 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %port_mmio = alloca i8*, align 8
  %reg = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13070, metadata !DIExpression()), !dbg !13071
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13072, metadata !DIExpression()), !dbg !13073
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13074, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !13076, metadata !DIExpression()), !dbg !13077
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !13078
  %1 = load i32, i32* %port.addr, align 4, !dbg !13079
  %call = call i8* @mv_port_base(i8* %0, i32 %1) #9, !dbg !13080
  store i8* %call, i8** %port_mmio, align 8, !dbg !13077
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !13081, metadata !DIExpression()), !dbg !13082
  %2 = load i8*, i8** %port_mmio, align 8, !dbg !13083
  %add.ptr = getelementptr i8, i8* %2, i64 784, !dbg !13084
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !13085
  store i32 %call1, i32* %reg, align 4, !dbg !13086
  %3 = load i32, i32* %reg, align 4, !dbg !13087
  %and = and i32 %3, -402653185, !dbg !13087
  store i32 %and, i32* %reg, align 4, !dbg !13087
  %4 = load i32, i32* %reg, align 4, !dbg !13088
  %or = or i32 %4, 134217728, !dbg !13088
  store i32 %or, i32* %reg, align 4, !dbg !13088
  %5 = load i32, i32* %reg, align 4, !dbg !13089
  %and2 = and i32 %5, -1610612737, !dbg !13089
  store i32 %and2, i32* %reg, align 4, !dbg !13089
  %6 = load i32, i32* %reg, align 4, !dbg !13090
  %or3 = or i32 %6, 536870912, !dbg !13090
  store i32 %or3, i32* %reg, align 4, !dbg !13090
  %7 = load i32, i32* %reg, align 4, !dbg !13091
  %8 = load i8*, i8** %port_mmio, align 8, !dbg !13092
  %add.ptr4 = getelementptr i8, i8* %8, i64 784, !dbg !13093
  call void @writel(i32 %7, i8* %add.ptr4) #9, !dbg !13094
  %9 = load i8*, i8** %port_mmio, align 8, !dbg !13095
  %add.ptr5 = getelementptr i8, i8* %9, i64 788, !dbg !13096
  %call6 = call i32 @readl(i8* %add.ptr5) #9, !dbg !13097
  store i32 %call6, i32* %reg, align 4, !dbg !13098
  %10 = load i32, i32* %reg, align 4, !dbg !13099
  %and7 = and i32 %10, -2, !dbg !13099
  store i32 %and7, i32* %reg, align 4, !dbg !13099
  %11 = load i32, i32* %reg, align 4, !dbg !13100
  %or8 = or i32 %11, 65536, !dbg !13100
  store i32 %or8, i32* %reg, align 4, !dbg !13100
  %12 = load i32, i32* %reg, align 4, !dbg !13101
  %13 = load i8*, i8** %port_mmio, align 8, !dbg !13102
  %add.ptr9 = getelementptr i8, i8* %13, i64 788, !dbg !13103
  call void @writel(i32 %12, i8* %add.ptr9) #9, !dbg !13104
  %14 = load i8*, i8** %port_mmio, align 8, !dbg !13105
  %add.ptr10 = getelementptr i8, i8* %14, i64 920, !dbg !13106
  %call11 = call i32 @readl(i8* %add.ptr10) #9, !dbg !13107
  store i32 %call11, i32* %reg, align 4, !dbg !13108
  %15 = load i32, i32* %reg, align 4, !dbg !13109
  %and12 = and i32 %15, -16, !dbg !13109
  store i32 %and12, i32* %reg, align 4, !dbg !13109
  %16 = load i32, i32* %reg, align 4, !dbg !13110
  %or13 = or i32 %16, 8, !dbg !13110
  store i32 %or13, i32* %reg, align 4, !dbg !13110
  %17 = load i32, i32* %reg, align 4, !dbg !13111
  %and14 = and i32 %17, -16385, !dbg !13111
  store i32 %and14, i32* %reg, align 4, !dbg !13111
  %18 = load i32, i32* %reg, align 4, !dbg !13112
  %19 = load i8*, i8** %port_mmio, align 8, !dbg !13113
  %add.ptr15 = getelementptr i8, i8* %19, i64 920, !dbg !13114
  call void @writel(i32 %18, i8* %add.ptr15) #9, !dbg !13115
  %20 = load i8*, i8** %port_mmio, align 8, !dbg !13116
  %add.ptr16 = getelementptr i8, i8* %20, i64 924, !dbg !13117
  %call17 = call i32 @readl(i8* %add.ptr16) #9, !dbg !13118
  store i32 %call17, i32* %reg, align 4, !dbg !13119
  %21 = load i32, i32* %reg, align 4, !dbg !13120
  %and18 = and i32 %21, -16, !dbg !13120
  store i32 %and18, i32* %reg, align 4, !dbg !13120
  %22 = load i32, i32* %reg, align 4, !dbg !13121
  %or19 = or i32 %22, 8, !dbg !13121
  store i32 %or19, i32* %reg, align 4, !dbg !13121
  %23 = load i32, i32* %reg, align 4, !dbg !13122
  %and20 = and i32 %23, -16385, !dbg !13122
  store i32 %and20, i32* %reg, align 4, !dbg !13122
  %24 = load i32, i32* %reg, align 4, !dbg !13123
  %25 = load i8*, i8** %port_mmio, align 8, !dbg !13124
  %add.ptr21 = getelementptr i8, i8* %25, i64 924, !dbg !13125
  call void @writel(i32 %24, i8* %add.ptr21) #9, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_enable_leds(%struct.mv_host_priv* %hpriv, i8* %mmio) #2 !dbg !13128 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13129, metadata !DIExpression()), !dbg !13130
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13131, metadata !DIExpression()), !dbg !13132
  ret void, !dbg !13133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_soc_reset_hc(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %n_hc) #2 !dbg !13134 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %n_hc.addr = alloca i32, align 4
  %port = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13135, metadata !DIExpression()), !dbg !13136
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13137, metadata !DIExpression()), !dbg !13138
  store i32 %n_hc, i32* %n_hc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_hc.addr, metadata !13139, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.declare(metadata i32* %port, metadata !13141, metadata !DIExpression()), !dbg !13142
  store i32 0, i32* %port, align 4, !dbg !13143
  br label %for.cond, !dbg !13145

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %port, align 4, !dbg !13146
  %1 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !13148
  %n_ports = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %1, i32 0, i32 5, !dbg !13149
  %2 = load i32, i32* %n_ports, align 8, !dbg !13149
  %cmp = icmp ult i32 %0, %2, !dbg !13150
  br i1 %cmp, label %for.body, label %for.end, !dbg !13151

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !13152
  %4 = load i8*, i8** %mmio.addr, align 8, !dbg !13153
  %5 = load i32, i32* %port, align 4, !dbg !13154
  call void @mv_soc_reset_hc_port(%struct.mv_host_priv* %3, i8* %4, i32 %5) #9, !dbg !13155
  br label %for.inc, !dbg !13155

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %port, align 4, !dbg !13156
  %inc = add i32 %6, 1, !dbg !13156
  store i32 %inc, i32* %port, align 4, !dbg !13156
  br label %for.cond, !dbg !13157, !llvm.loop !13158

for.end:                                          ; preds = %for.cond
  %7 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !13160
  %8 = load i8*, i8** %mmio.addr, align 8, !dbg !13161
  call void @mv_soc_reset_one_hc(%struct.mv_host_priv* %7, i8* %8) #9, !dbg !13162
  ret i32 0, !dbg !13163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_reset_flash(%struct.mv_host_priv* %hpriv, i8* %mmio) #2 !dbg !13164 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13167, metadata !DIExpression()), !dbg !13168
  ret void, !dbg !13169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_reset_bus(%struct.ata_host* %host, i8* %mmio) #2 !dbg !13170 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %mmio.addr = alloca i8*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !13171, metadata !DIExpression()), !dbg !13172
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13173, metadata !DIExpression()), !dbg !13174
  ret void, !dbg !13175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_reset_hc_port(%struct.mv_host_priv* %hpriv, i8* %mmio, i32 %port) #2 !dbg !13176 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %port_mmio = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13177, metadata !DIExpression()), !dbg !13178
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13179, metadata !DIExpression()), !dbg !13180
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13181, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !13183, metadata !DIExpression()), !dbg !13184
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !13185
  %1 = load i32, i32* %port.addr, align 4, !dbg !13186
  %call = call i8* @mv_port_base(i8* %0, i32 %1) #9, !dbg !13187
  store i8* %call, i8** %port_mmio, align 8, !dbg !13184
  %2 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !13188
  %3 = load i8*, i8** %mmio.addr, align 8, !dbg !13189
  %4 = load i32, i32* %port.addr, align 4, !dbg !13190
  call void @mv_reset_channel(%struct.mv_host_priv* %2, i8* %3, i32 %4) #9, !dbg !13191
  %5 = load i8*, i8** %port_mmio, align 8, !dbg !13192
  %add.ptr = getelementptr i8, i8* %5, i64 40, !dbg !13192
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !13192
  %6 = load i8*, i8** %port_mmio, align 8, !dbg !13193
  %add.ptr1 = getelementptr i8, i8* %6, i64 0, !dbg !13194
  call void @writel(i32 4127, i8* %add.ptr1) #9, !dbg !13195
  %7 = load i8*, i8** %port_mmio, align 8, !dbg !13196
  %add.ptr2 = getelementptr i8, i8* %7, i64 4, !dbg !13196
  call void @writel(i32 0, i8* %add.ptr2) #9, !dbg !13196
  %8 = load i8*, i8** %port_mmio, align 8, !dbg !13197
  %add.ptr3 = getelementptr i8, i8* %8, i64 8, !dbg !13197
  call void @writel(i32 0, i8* %add.ptr3) #9, !dbg !13197
  %9 = load i8*, i8** %port_mmio, align 8, !dbg !13198
  %add.ptr4 = getelementptr i8, i8* %9, i64 12, !dbg !13198
  call void @writel(i32 0, i8* %add.ptr4) #9, !dbg !13198
  %10 = load i8*, i8** %port_mmio, align 8, !dbg !13199
  %add.ptr5 = getelementptr i8, i8* %10, i64 16, !dbg !13199
  call void @writel(i32 0, i8* %add.ptr5) #9, !dbg !13199
  %11 = load i8*, i8** %port_mmio, align 8, !dbg !13200
  %add.ptr6 = getelementptr i8, i8* %11, i64 20, !dbg !13200
  call void @writel(i32 0, i8* %add.ptr6) #9, !dbg !13200
  %12 = load i8*, i8** %port_mmio, align 8, !dbg !13201
  %add.ptr7 = getelementptr i8, i8* %12, i64 24, !dbg !13201
  call void @writel(i32 0, i8* %add.ptr7) #9, !dbg !13201
  %13 = load i8*, i8** %port_mmio, align 8, !dbg !13202
  %add.ptr8 = getelementptr i8, i8* %13, i64 28, !dbg !13202
  call void @writel(i32 0, i8* %add.ptr8) #9, !dbg !13202
  %14 = load i8*, i8** %port_mmio, align 8, !dbg !13203
  %add.ptr9 = getelementptr i8, i8* %14, i64 36, !dbg !13203
  call void @writel(i32 0, i8* %add.ptr9) #9, !dbg !13203
  %15 = load i8*, i8** %port_mmio, align 8, !dbg !13204
  %add.ptr10 = getelementptr i8, i8* %15, i64 32, !dbg !13204
  call void @writel(i32 0, i8* %add.ptr10) #9, !dbg !13204
  %16 = load i8*, i8** %port_mmio, align 8, !dbg !13205
  %add.ptr11 = getelementptr i8, i8* %16, i64 44, !dbg !13205
  call void @writel(i32 0, i8* %add.ptr11) #9, !dbg !13205
  %17 = load i8*, i8** %port_mmio, align 8, !dbg !13206
  %add.ptr12 = getelementptr i8, i8* %17, i64 52, !dbg !13207
  call void @writel(i32 2048, i8* %add.ptr12) #9, !dbg !13208
  ret void, !dbg !13209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_reset_one_hc(%struct.mv_host_priv* %hpriv, i8* %mmio) #2 !dbg !13210 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %mmio.addr = alloca i8*, align 8
  %hc_mmio = alloca i8*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13211, metadata !DIExpression()), !dbg !13212
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13213, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !13215, metadata !DIExpression()), !dbg !13216
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !13217
  %call = call i8* @mv_hc_base(i8* %0, i32 0) #9, !dbg !13218
  store i8* %call, i8** %hc_mmio, align 8, !dbg !13216
  %1 = load i8*, i8** %hc_mmio, align 8, !dbg !13219
  %add.ptr = getelementptr i8, i8* %1, i64 12, !dbg !13219
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !13219
  %2 = load i8*, i8** %hc_mmio, align 8, !dbg !13220
  %add.ptr1 = getelementptr i8, i8* %2, i64 16, !dbg !13220
  call void @writel(i32 0, i8* %add.ptr1) #9, !dbg !13220
  %3 = load i8*, i8** %hc_mmio, align 8, !dbg !13221
  %add.ptr2 = getelementptr i8, i8* %3, i64 20, !dbg !13221
  call void @writel(i32 0, i8* %add.ptr2) #9, !dbg !13221
  ret void, !dbg !13222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_soc_read_preamp(%struct.mv_host_priv* %hpriv, i32 %idx, i8* %mmio) #2 !dbg !13223 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %idx.addr = alloca i32, align 4
  %mmio.addr = alloca i8*, align 8
  %port_mmio = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !13224, metadata !DIExpression()), !dbg !13225
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !13226, metadata !DIExpression()), !dbg !13227
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13228, metadata !DIExpression()), !dbg !13229
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !13230, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13232, metadata !DIExpression()), !dbg !13233
  %0 = load i8*, i8** %mmio.addr, align 8, !dbg !13234
  %1 = load i32, i32* %idx.addr, align 4, !dbg !13235
  %call = call i8* @mv_port_base(i8* %0, i32 %1) #9, !dbg !13236
  store i8* %call, i8** %port_mmio, align 8, !dbg !13237
  %2 = load i8*, i8** %port_mmio, align 8, !dbg !13238
  %add.ptr = getelementptr i8, i8* %2, i64 816, !dbg !13239
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !13240
  store i32 %call1, i32* %tmp, align 4, !dbg !13241
  %3 = load i32, i32* %tmp, align 4, !dbg !13242
  %and = and i32 %3, 1792, !dbg !13243
  %4 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !13244
  %signal = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %4, i32 0, i32 3, !dbg !13245
  %5 = load i32, i32* %idx.addr, align 4, !dbg !13246
  %idxprom = sext i32 %5 to i64, !dbg !13244
  %arrayidx = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal, i64 0, i64 %idxprom, !dbg !13244
  %amps = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx, i32 0, i32 0, !dbg !13247
  store i32 %and, i32* %amps, align 4, !dbg !13248
  %6 = load i32, i32* %tmp, align 4, !dbg !13249
  %and2 = and i32 %6, 224, !dbg !13250
  %7 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !13251
  %signal3 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %7, i32 0, i32 3, !dbg !13252
  %8 = load i32, i32* %idx.addr, align 4, !dbg !13253
  %idxprom4 = sext i32 %8 to i64, !dbg !13251
  %arrayidx5 = getelementptr [8 x %struct.mv_port_signal], [8 x %struct.mv_port_signal]* %signal3, i64 0, i64 %idxprom4, !dbg !13251
  %pre = getelementptr inbounds %struct.mv_port_signal, %struct.mv_port_signal* %arrayidx5, i32 0, i32 1, !dbg !13254
  store i32 %and2, i32* %pre, align 4, !dbg !13255
  ret void, !dbg !13256
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_pci_error(%struct.ata_host* %host, i8* %mmio) #2 !dbg !13257 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %mmio.addr = alloca i8*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %i = alloca i32, align 4
  %err_mask = alloca i32, align 4
  %printed = alloca i32, align 4
  %err_cause = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !13260, metadata !DIExpression()), !dbg !13261
  store i8* %mmio, i8** %mmio.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio.addr, metadata !13262, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !13264, metadata !DIExpression()), !dbg !13265
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13266
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !13267
  %1 = load i8*, i8** %private_data, align 8, !dbg !13267
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !13266
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !13265
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !13268, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !13270, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !13272, metadata !DIExpression()), !dbg !13274
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13275, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !13277, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.declare(metadata i32* %printed, metadata !13279, metadata !DIExpression()), !dbg !13280
  store i32 0, i32* %printed, align 4, !dbg !13280
  call void @llvm.dbg.declare(metadata i32* %err_cause, metadata !13281, metadata !DIExpression()), !dbg !13282
  %3 = load i8*, i8** %mmio.addr, align 8, !dbg !13283
  %4 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13284
  %irq_cause_offset = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %4, i32 0, i32 9, !dbg !13285
  %5 = load i32, i32* %irq_cause_offset, align 8, !dbg !13285
  %idx.ext = zext i32 %5 to i64, !dbg !13286
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !13286
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !13287
  store i32 %call, i32* %err_cause, align 4, !dbg !13288
  %6 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13289
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %6, i32 0, i32 1, !dbg !13289
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13289
  %8 = load i32, i32* %err_cause, align 4, !dbg !13289
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0), i32 %8) #10, !dbg !13289
  %9 = load i8*, i8** %mmio.addr, align 8, !dbg !13290
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13291, metadata !DIExpression()), !dbg !13293
  %10 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13293
  %dev1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 1, !dbg !13293
  %11 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !13293
  %12 = bitcast %struct.device* %11 to i8*, !dbg !13293
  store i8* %12, i8** %__mptr, align 8, !dbg !13293
  br label %do.body, !dbg !13293

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13294

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !13293
  %add.ptr2 = getelementptr i8, i8* %13, i64 -176, !dbg !13293
  %14 = bitcast i8* %add.ptr2 to %struct.pci_dev*, !dbg !13293
  store %struct.pci_dev* %14, %struct.pci_dev** %tmp, align 8, !dbg !13294
  %15 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !13293
  call void @mv_dump_all_regs(i8* %9, i32 -1, %struct.pci_dev* %15) #9, !dbg !13296
  %16 = load i8*, i8** %mmio.addr, align 8, !dbg !13297
  %17 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13298
  %irq_cause_offset3 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %17, i32 0, i32 9, !dbg !13299
  %18 = load i32, i32* %irq_cause_offset3, align 8, !dbg !13299
  %idx.ext4 = zext i32 %18 to i64, !dbg !13300
  %add.ptr5 = getelementptr i8, i8* %16, i64 %idx.ext4, !dbg !13300
  call void @writelfl(i64 0, i8* %add.ptr5) #9, !dbg !13301
  store i32 0, i32* %i, align 4, !dbg !13302
  br label %for.cond, !dbg !13304

for.cond:                                         ; preds = %for.inc, %do.end
  %19 = load i32, i32* %i, align 4, !dbg !13305
  %20 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13307
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %20, i32 0, i32 3, !dbg !13308
  %21 = load i32, i32* %n_ports, align 8, !dbg !13308
  %cmp = icmp ult i32 %19, %21, !dbg !13309
  br i1 %cmp, label %for.body, label %for.end, !dbg !13310

for.body:                                         ; preds = %for.cond
  %22 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13311
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %22, i32 0, i32 12, !dbg !13313
  %23 = load i32, i32* %i, align 4, !dbg !13314
  %idxprom = zext i32 %23 to i64, !dbg !13311
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !13311
  %24 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !13311
  store %struct.ata_port* %24, %struct.ata_port** %ap, align 8, !dbg !13315
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13316
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 25, !dbg !13318
  %call6 = call zeroext i1 @ata_link_offline(%struct.ata_link* %link) #9, !dbg !13319
  br i1 %call6, label %if.end18, label %if.then, !dbg !13320

if.then:                                          ; preds = %for.body
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13321
  %link7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 25, !dbg !13323
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link7, i32 0, i32 11, !dbg !13324
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !13325
  %27 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13326
  call void @ata_ehi_clear_desc(%struct.ata_eh_info* %27) #9, !dbg !13327
  %28 = load i32, i32* %printed, align 4, !dbg !13328
  %inc = add i32 %28, 1, !dbg !13328
  store i32 %inc, i32* %printed, align 4, !dbg !13328
  %tobool = icmp ne i32 %28, 0, !dbg !13328
  br i1 %tobool, label %if.end, label %if.then8, !dbg !13330

if.then8:                                         ; preds = %if.then
  %29 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13331
  %30 = load i32, i32* %err_cause, align 4, !dbg !13332
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %29, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0), i32 %30) #9, !dbg !13333
  br label %if.end, !dbg !13333

if.end:                                           ; preds = %if.then8, %if.then
  store i32 32, i32* %err_mask, align 4, !dbg !13334
  %31 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13335
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %31, i32 0, i32 3, !dbg !13336
  store i32 6, i32* %action, align 8, !dbg !13337
  %32 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13338
  %33 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13339
  %link9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %33, i32 0, i32 25, !dbg !13340
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link9, i32 0, i32 3, !dbg !13341
  %34 = load i32, i32* %active_tag, align 8, !dbg !13341
  %call10 = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %32, i32 %34) #9, !dbg !13342
  store %struct.ata_queued_cmd* %call10, %struct.ata_queued_cmd** %qc, align 8, !dbg !13343
  %35 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13344
  %tobool11 = icmp ne %struct.ata_queued_cmd* %35, null, !dbg !13344
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !13346

if.then12:                                        ; preds = %if.end
  %36 = load i32, i32* %err_mask, align 4, !dbg !13347
  %37 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13348
  %err_mask13 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %37, i32 0, i32 20, !dbg !13349
  %38 = load i32, i32* %err_mask13, align 4, !dbg !13350
  %or = or i32 %38, %36, !dbg !13350
  store i32 %or, i32* %err_mask13, align 4, !dbg !13350
  br label %if.end16, !dbg !13348

if.else:                                          ; preds = %if.end
  %39 = load i32, i32* %err_mask, align 4, !dbg !13351
  %40 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13352
  %err_mask14 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %40, i32 0, i32 2, !dbg !13353
  %41 = load i32, i32* %err_mask14, align 4, !dbg !13354
  %or15 = or i32 %41, %39, !dbg !13354
  store i32 %or15, i32* %err_mask14, align 4, !dbg !13354
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then12
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13355
  %call17 = call i32 @ata_port_freeze(%struct.ata_port* %42) #9, !dbg !13356
  br label %if.end18, !dbg !13357

if.end18:                                         ; preds = %if.end16, %for.body
  br label %for.inc, !dbg !13358

for.inc:                                          ; preds = %if.end18
  %43 = load i32, i32* %i, align 4, !dbg !13359
  %inc19 = add i32 %43, 1, !dbg !13359
  store i32 %inc19, i32* %i, align 4, !dbg !13359
  br label %for.cond, !dbg !13360, !llvm.loop !13361

for.end:                                          ; preds = %for.cond
  ret i32 1, !dbg !13363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_host_intr(%struct.ata_host* %host, i32 %main_irq_cause) #2 !dbg !13364 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %main_irq_cause.addr = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %mmio = alloca i8*, align 8
  %hc_mmio = alloca i8*, align 8
  %handled = alloca i32, align 4
  %port = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %p = alloca i32, align 4
  %shift = alloca i32, align 4
  %hardport = alloca i32, align 4
  %port_cause = alloca i32, align 4
  %hc_cause = alloca i32, align 4
  %port_mask = alloca i32, align 4
  %ack_irqs = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !13367, metadata !DIExpression()), !dbg !13368
  store i32 %main_irq_cause, i32* %main_irq_cause.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %main_irq_cause.addr, metadata !13369, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !13371, metadata !DIExpression()), !dbg !13372
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13373
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 5, !dbg !13374
  %1 = load i8*, i8** %private_data, align 8, !dbg !13374
  %2 = bitcast i8* %1 to %struct.mv_host_priv*, !dbg !13373
  store %struct.mv_host_priv* %2, %struct.mv_host_priv** %hpriv, align 8, !dbg !13372
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !13375, metadata !DIExpression()), !dbg !13376
  %3 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13377
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %3, i32 0, i32 6, !dbg !13378
  %4 = load i8*, i8** %base, align 8, !dbg !13378
  store i8* %4, i8** %mmio, align 8, !dbg !13376
  call void @llvm.dbg.declare(metadata i8** %hc_mmio, metadata !13379, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !13381, metadata !DIExpression()), !dbg !13382
  store i32 0, i32* %handled, align 4, !dbg !13382
  call void @llvm.dbg.declare(metadata i32* %port, metadata !13383, metadata !DIExpression()), !dbg !13384
  %5 = load i32, i32* %main_irq_cause.addr, align 4, !dbg !13385
  %and = and i32 %5, 2097152, !dbg !13387
  %tobool = icmp ne i32 %and, 0, !dbg !13387
  br i1 %tobool, label %if.then, label %if.end, !dbg !13388

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %mmio, align 8, !dbg !13389
  %add.ptr = getelementptr i8, i8* %6, i64 98312, !dbg !13390
  call void @writel(i32 -17, i8* %add.ptr) #9, !dbg !13391
  br label %if.end, !dbg !13391

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %port, align 4, !dbg !13392
  br label %for.cond, !dbg !13394

for.cond:                                         ; preds = %for.inc36, %if.end
  %7 = load i32, i32* %port, align 4, !dbg !13395
  %8 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13397
  %n_ports = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %8, i32 0, i32 5, !dbg !13398
  %9 = load i32, i32* %n_ports, align 8, !dbg !13398
  %cmp = icmp ult i32 %7, %9, !dbg !13399
  br i1 %cmp, label %for.body, label %for.end38, !dbg !13400

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !13401, metadata !DIExpression()), !dbg !13403
  %10 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !13404
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 12, !dbg !13405
  %11 = load i32, i32* %port, align 4, !dbg !13406
  %idxprom = zext i32 %11 to i64, !dbg !13404
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !13404
  %12 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !13404
  store %struct.ata_port* %12, %struct.ata_port** %ap, align 8, !dbg !13403
  call void @llvm.dbg.declare(metadata i32* %p, metadata !13407, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13409, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.declare(metadata i32* %hardport, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.declare(metadata i32* %port_cause, metadata !13413, metadata !DIExpression()), !dbg !13414
  %13 = load i32, i32* %port, align 4, !dbg !13415
  %call = call i32 @mv_hc_from_port(i32 %13) #9, !dbg !13415
  %mul = mul i32 %call, 9, !dbg !13415
  store i32 %mul, i32* %shift, align 4, !dbg !13415
  %14 = load i32, i32* %port, align 4, !dbg !13415
  %call1 = call i32 @mv_hardport_from_port(i32 %14) #9, !dbg !13415
  store i32 %call1, i32* %hardport, align 4, !dbg !13415
  %15 = load i32, i32* %hardport, align 4, !dbg !13415
  %mul2 = mul i32 %15, 2, !dbg !13415
  %16 = load i32, i32* %shift, align 4, !dbg !13415
  %add = add i32 %16, %mul2, !dbg !13415
  store i32 %add, i32* %shift, align 4, !dbg !13415
  %17 = load i32, i32* %hardport, align 4, !dbg !13417
  %cmp3 = icmp eq i32 %17, 0, !dbg !13419
  br i1 %cmp3, label %if.then4, label %if.end30, !dbg !13420

if.then4:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %hc_cause, metadata !13421, metadata !DIExpression()), !dbg !13423
  %18 = load i32, i32* %main_irq_cause.addr, align 4, !dbg !13424
  %19 = load i32, i32* %shift, align 4, !dbg !13425
  %shr = lshr i32 %18, %19, !dbg !13426
  %and5 = and i32 %shr, 511, !dbg !13427
  store i32 %and5, i32* %hc_cause, align 4, !dbg !13423
  call void @llvm.dbg.declare(metadata i32* %port_mask, metadata !13428, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.declare(metadata i32* %ack_irqs, metadata !13430, metadata !DIExpression()), !dbg !13431
  %20 = load i32, i32* %hc_cause, align 4, !dbg !13432
  %tobool6 = icmp ne i32 %20, 0, !dbg !13432
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !13434

if.then7:                                         ; preds = %if.then4
  %21 = load i32, i32* %port, align 4, !dbg !13435
  %add8 = add i32 %21, 3, !dbg !13435
  store i32 %add8, i32* %port, align 4, !dbg !13435
  br label %for.inc36, !dbg !13437

if.end9:                                          ; preds = %if.then4
  store i32 0, i32* %ack_irqs, align 4, !dbg !13438
  %22 = load i32, i32* %hc_cause, align 4, !dbg !13439
  %and10 = and i32 %22, 256, !dbg !13441
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13441
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !13442

if.then12:                                        ; preds = %if.end9
  store i32 16, i32* %ack_irqs, align 4, !dbg !13443
  br label %if.end13, !dbg !13444

if.end13:                                         ; preds = %if.then12, %if.end9
  store i32 0, i32* %p, align 4, !dbg !13445
  br label %for.cond14, !dbg !13447

for.cond14:                                       ; preds = %for.inc, %if.end13
  %23 = load i32, i32* %p, align 4, !dbg !13448
  %cmp15 = icmp ult i32 %23, 4, !dbg !13450
  br i1 %cmp15, label %for.body16, label %for.end, !dbg !13451

for.body16:                                       ; preds = %for.cond14
  %24 = load i32, i32* %port, align 4, !dbg !13452
  %25 = load i32, i32* %p, align 4, !dbg !13455
  %add17 = add i32 %24, %25, !dbg !13456
  %26 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13457
  %n_ports18 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %26, i32 0, i32 5, !dbg !13458
  %27 = load i32, i32* %n_ports18, align 8, !dbg !13458
  %cmp19 = icmp uge i32 %add17, %27, !dbg !13459
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !13460

if.then20:                                        ; preds = %for.body16
  br label %for.end, !dbg !13461

if.end21:                                         ; preds = %for.body16
  %28 = load i32, i32* %p, align 4, !dbg !13462
  %mul22 = mul i32 %28, 2, !dbg !13463
  %shl = shl i32 3, %mul22, !dbg !13464
  store i32 %shl, i32* %port_mask, align 4, !dbg !13465
  %29 = load i32, i32* %hc_cause, align 4, !dbg !13466
  %30 = load i32, i32* %port_mask, align 4, !dbg !13468
  %and23 = and i32 %29, %30, !dbg !13469
  %tobool24 = icmp ne i32 %and23, 0, !dbg !13469
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !13470

if.then25:                                        ; preds = %if.end21
  %31 = load i32, i32* %p, align 4, !dbg !13471
  %shl26 = shl i32 257, %31, !dbg !13472
  %32 = load i32, i32* %ack_irqs, align 4, !dbg !13473
  %or = or i32 %32, %shl26, !dbg !13473
  store i32 %or, i32* %ack_irqs, align 4, !dbg !13473
  br label %if.end27, !dbg !13474

if.end27:                                         ; preds = %if.then25, %if.end21
  br label %for.inc, !dbg !13475

for.inc:                                          ; preds = %if.end27
  %33 = load i32, i32* %p, align 4, !dbg !13476
  %inc = add i32 %33, 1, !dbg !13476
  store i32 %inc, i32* %p, align 4, !dbg !13476
  br label %for.cond14, !dbg !13477, !llvm.loop !13478

for.end:                                          ; preds = %if.then20, %for.cond14
  %34 = load i8*, i8** %mmio, align 8, !dbg !13480
  %35 = load i32, i32* %port, align 4, !dbg !13481
  %call28 = call i8* @mv_hc_base_from_port(i8* %34, i32 %35) #9, !dbg !13482
  store i8* %call28, i8** %hc_mmio, align 8, !dbg !13483
  %36 = load i32, i32* %ack_irqs, align 4, !dbg !13484
  %neg = xor i32 %36, -1, !dbg !13485
  %conv = zext i32 %neg to i64, !dbg !13485
  %37 = load i8*, i8** %hc_mmio, align 8, !dbg !13486
  %add.ptr29 = getelementptr i8, i8* %37, i64 20, !dbg !13487
  call void @writelfl(i64 %conv, i8* %add.ptr29) #9, !dbg !13488
  store i32 1, i32* %handled, align 4, !dbg !13489
  br label %if.end30, !dbg !13490

if.end30:                                         ; preds = %for.end, %for.body
  %38 = load i32, i32* %main_irq_cause.addr, align 4, !dbg !13491
  %39 = load i32, i32* %shift, align 4, !dbg !13492
  %shr31 = lshr i32 %38, %39, !dbg !13493
  %and32 = and i32 %shr31, 3, !dbg !13494
  store i32 %and32, i32* %port_cause, align 4, !dbg !13495
  %40 = load i32, i32* %port_cause, align 4, !dbg !13496
  %tobool33 = icmp ne i32 %40, 0, !dbg !13496
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !13498

if.then34:                                        ; preds = %if.end30
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13499
  %42 = load i32, i32* %port_cause, align 4, !dbg !13500
  call void @mv_port_intr(%struct.ata_port* %41, i32 %42) #9, !dbg !13501
  br label %if.end35, !dbg !13501

if.end35:                                         ; preds = %if.then34, %if.end30
  br label %for.inc36, !dbg !13502

for.inc36:                                        ; preds = %if.end35, %if.then7
  %43 = load i32, i32* %port, align 4, !dbg !13503
  %inc37 = add i32 %43, 1, !dbg !13503
  store i32 %inc37, i32* %port, align 4, !dbg !13503
  br label %for.cond, !dbg !13504, !llvm.loop !13505

for.end38:                                        ; preds = %for.cond
  %44 = load i32, i32* %handled, align 4, !dbg !13507
  ret i32 %44, !dbg !13508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_dump_all_regs(i8* %mmio_base, i32 %port, %struct.pci_dev* %pdev) #2 !dbg !13509 {
entry:
  %mmio_base.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store i8* %mmio_base, i8** %mmio_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mmio_base.addr, metadata !13512, metadata !DIExpression()), !dbg !13513
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13514, metadata !DIExpression()), !dbg !13515
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13516, metadata !DIExpression()), !dbg !13517
  ret void, !dbg !13518
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @ata_link_offline(%struct.ata_link*) #1

; Function Attrs: noredzone
declare dso_local void @ata_ehi_clear_desc(%struct.ata_eh_info*) #1

; Function Attrs: noredzone
declare dso_local void @ata_ehi_push_desc(%struct.ata_eh_info*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %ap, i32 %tag) #2 !dbg !13519 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %tag.addr = alloca i32, align 4
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13522, metadata !DIExpression()), !dbg !13523
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !13524, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !13526, metadata !DIExpression()), !dbg !13527
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13528
  %1 = load i32, i32* %tag.addr, align 4, !dbg !13529
  %call = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %0, i32 %1) #9, !dbg !13530
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !13527
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13531
  %tobool = icmp ne %struct.ata_queued_cmd* %2, null, !dbg !13531
  %lnot = xor i1 %tobool, true, !dbg !13531
  %lnot1 = xor i1 %lnot, true, !dbg !13531
  %lnot2 = xor i1 %lnot1, true, !dbg !13531
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13531
  %conv = sext i32 %lnot.ext to i64, !dbg !13531
  %tobool3 = icmp ne i64 %conv, 0, !dbg !13531
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !13533

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13534
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !13535
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13535
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 22, !dbg !13536
  %5 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !13536
  %tobool4 = icmp ne void (%struct.ata_port*)* %5, null, !dbg !13534
  br i1 %tobool4, label %if.end, label %if.then, !dbg !13537

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13538
  store %struct.ata_queued_cmd* %6, %struct.ata_queued_cmd** %retval, align 8, !dbg !13539
  br label %return, !dbg !13539

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13540
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 6, !dbg !13542
  %8 = load i64, i64* %flags, align 8, !dbg !13542
  %and = and i64 %8, 65537, !dbg !13543
  %cmp = icmp eq i64 %and, 1, !dbg !13544
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !13545

if.then6:                                         ; preds = %if.end
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13546
  store %struct.ata_queued_cmd* %9, %struct.ata_queued_cmd** %retval, align 8, !dbg !13547
  br label %return, !dbg !13547

if.end7:                                          ; preds = %if.end
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !13548
  br label %return, !dbg !13548

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !13549
  ret %struct.ata_queued_cmd* %10, !dbg !13549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %ap, i32 %tag) #2 !dbg !13550 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %tag.addr = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13551, metadata !DIExpression()), !dbg !13552
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !13553, metadata !DIExpression()), !dbg !13554
  %0 = load i32, i32* %tag.addr, align 4, !dbg !13555
  %call = call zeroext i1 @ata_tag_valid(i32 %0) #9, !dbg !13557
  br i1 %call, label %if.then, label %if.end, !dbg !13558

if.then:                                          ; preds = %entry
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13559
  %qcmd = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 19, !dbg !13560
  %2 = load i32, i32* %tag.addr, align 4, !dbg !13561
  %idxprom = zext i32 %2 to i64, !dbg !13559
  %arrayidx = getelementptr [33 x %struct.ata_queued_cmd], [33 x %struct.ata_queued_cmd]* %qcmd, i64 0, i64 %idxprom, !dbg !13559
  store %struct.ata_queued_cmd* %arrayidx, %struct.ata_queued_cmd** %retval, align 8, !dbg !13562
  br label %return, !dbg !13562

if.end:                                           ; preds = %entry
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !13563
  br label %return, !dbg !13563

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !13564
  ret %struct.ata_queued_cmd* %3, !dbg !13564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_valid(i32 %tag) #2 !dbg !13565 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !13568, metadata !DIExpression()), !dbg !13569
  %0 = load i32, i32* %tag.addr, align 4, !dbg !13570
  %cmp = icmp ult i32 %0, 32, !dbg !13571
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13572

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %tag.addr, align 4, !dbg !13573
  %call = call zeroext i1 @ata_tag_internal(i32 %1) #9, !dbg !13574
  br label %lor.end, !dbg !13572

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %2, !dbg !13575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_internal(i32 %tag) #2 !dbg !13576 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !13577, metadata !DIExpression()), !dbg !13578
  %0 = load i32, i32* %tag.addr, align 4, !dbg !13579
  %cmp = icmp eq i32 %0, 32, !dbg !13580
  ret i1 %cmp, !dbg !13581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_port_intr(%struct.ata_port* %ap, i32 %port_cause) #2 !dbg !13582 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_cause.addr = alloca i32, align 4
  %pp = alloca %struct.mv_port_priv*, align 8
  %edma_was_enabled = alloca i32, align 4
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13585, metadata !DIExpression()), !dbg !13586
  store i32 %port_cause, i32* %port_cause.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_cause.addr, metadata !13587, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !13589, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.declare(metadata i32* %edma_was_enabled, metadata !13591, metadata !DIExpression()), !dbg !13592
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13593
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !13594
  %1 = load i8*, i8** %private_data, align 32, !dbg !13594
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !13593
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !13595
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13596
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 8, !dbg !13597
  %4 = load i32, i32* %pp_flags, align 8, !dbg !13597
  %and = and i32 %4, 1, !dbg !13598
  store i32 %and, i32* %edma_was_enabled, align 4, !dbg !13599
  %5 = load i32, i32* %edma_was_enabled, align 4, !dbg !13600
  %tobool = icmp ne i32 %5, 0, !dbg !13600
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !13602

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %port_cause.addr, align 4, !dbg !13603
  %and1 = and i32 %6, 2, !dbg !13604
  %tobool2 = icmp ne i32 %and1, 0, !dbg !13604
  br i1 %tobool2, label %if.then, label %if.end7, !dbg !13605

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13606
  %8 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13608
  call void @mv_process_crpb_entries(%struct.ata_port* %7, %struct.mv_port_priv* %8) #9, !dbg !13609
  %9 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13610
  %pp_flags3 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %9, i32 0, i32 8, !dbg !13612
  %10 = load i32, i32* %pp_flags3, align 8, !dbg !13612
  %and4 = and i32 %10, 8, !dbg !13613
  %tobool5 = icmp ne i32 %and4, 0, !dbg !13613
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !13614

if.then6:                                         ; preds = %if.then
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13615
  %call = call i32 @mv_handle_fbs_ncq_dev_err(%struct.ata_port* %11) #9, !dbg !13616
  br label %if.end, !dbg !13616

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end7, !dbg !13617

if.end7:                                          ; preds = %if.end, %land.lhs.true, %entry
  %12 = load i32, i32* %port_cause.addr, align 4, !dbg !13618
  %and8 = and i32 %12, 1, !dbg !13618
  %tobool9 = icmp ne i32 %and8, 0, !dbg !13618
  %lnot = xor i1 %tobool9, true, !dbg !13618
  %lnot10 = xor i1 %lnot, true, !dbg !13618
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !13618
  %conv = sext i32 %lnot.ext to i64, !dbg !13618
  %tobool11 = icmp ne i64 %conv, 0, !dbg !13618
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !13620

if.then12:                                        ; preds = %if.end7
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13621
  call void @mv_err_intr(%struct.ata_port* %13) #9, !dbg !13623
  br label %if.end22, !dbg !13624

if.else:                                          ; preds = %if.end7
  %14 = load i32, i32* %edma_was_enabled, align 4, !dbg !13625
  %tobool13 = icmp ne i32 %14, 0, !dbg !13625
  br i1 %tobool13, label %if.end21, label %if.then14, !dbg !13627

if.then14:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !13628, metadata !DIExpression()), !dbg !13630
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13631
  %call15 = call %struct.ata_queued_cmd* @mv_get_active_qc(%struct.ata_port* %15) #9, !dbg !13632
  store %struct.ata_queued_cmd* %call15, %struct.ata_queued_cmd** %qc, align 8, !dbg !13630
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13633
  %tobool16 = icmp ne %struct.ata_queued_cmd* %16, null, !dbg !13633
  br i1 %tobool16, label %if.then17, label %if.else19, !dbg !13635

if.then17:                                        ; preds = %if.then14
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13636
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13637
  %call18 = call i32 @ata_bmdma_port_intr(%struct.ata_port* %17, %struct.ata_queued_cmd* %18) #9, !dbg !13638
  br label %if.end20, !dbg !13638

if.else19:                                        ; preds = %if.then14
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13639
  %20 = load i32, i32* %edma_was_enabled, align 4, !dbg !13640
  call void @mv_unexpected_intr(%struct.ata_port* %19, i32 %20) #9, !dbg !13641
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then17
  br label %if.end21, !dbg !13642

if.end21:                                         ; preds = %if.end20, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then12
  ret void, !dbg !13643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_process_crpb_entries(%struct.ata_port* %ap, %struct.mv_port_priv* %pp) #2 !dbg !13644 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %pp.addr = alloca %struct.mv_port_priv*, align 8
  %port_mmio = alloca i8*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %in_index = alloca i32, align 4
  %work_done = alloca i8, align 1
  %done_mask = alloca i32, align 4
  %ncq_enabled = alloca i32, align 4
  %tag = alloca i32, align 4
  %response = alloca %struct.mv_crpb*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13647, metadata !DIExpression()), !dbg !13648
  store %struct.mv_port_priv* %pp, %struct.mv_port_priv** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp.addr, metadata !13649, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !13651, metadata !DIExpression()), !dbg !13652
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13653
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !13654
  store i8* %call, i8** %port_mmio, align 8, !dbg !13652
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !13655, metadata !DIExpression()), !dbg !13656
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13657
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 31, !dbg !13658
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13658
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 5, !dbg !13659
  %3 = load i8*, i8** %private_data, align 8, !dbg !13659
  %4 = bitcast i8* %3 to %struct.mv_host_priv*, !dbg !13657
  store %struct.mv_host_priv* %4, %struct.mv_host_priv** %hpriv, align 8, !dbg !13656
  call void @llvm.dbg.declare(metadata i32* %in_index, metadata !13660, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.declare(metadata i8* %work_done, metadata !13662, metadata !DIExpression()), !dbg !13663
  store i8 0, i8* %work_done, align 1, !dbg !13663
  call void @llvm.dbg.declare(metadata i32* %done_mask, metadata !13664, metadata !DIExpression()), !dbg !13665
  store i32 0, i32* %done_mask, align 4, !dbg !13665
  call void @llvm.dbg.declare(metadata i32* %ncq_enabled, metadata !13666, metadata !DIExpression()), !dbg !13667
  %5 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13668
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %5, i32 0, i32 8, !dbg !13669
  %6 = load i32, i32* %pp_flags, align 8, !dbg !13669
  %and = and i32 %6, 2, !dbg !13670
  store i32 %and, i32* %ncq_enabled, align 4, !dbg !13667
  %7 = load i8*, i8** %port_mmio, align 8, !dbg !13671
  %add.ptr = getelementptr i8, i8* %7, i64 32, !dbg !13672
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !13673
  %shr = lshr i32 %call1, 3, !dbg !13674
  %and2 = and i32 %shr, 31, !dbg !13675
  store i32 %and2, i32* %in_index, align 4, !dbg !13676
  br label %while.cond, !dbg !13677

while.cond:                                       ; preds = %if.end11, %entry
  %8 = load i32, i32* %in_index, align 4, !dbg !13678
  %9 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13679
  %resp_idx = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %9, i32 0, i32 7, !dbg !13680
  %10 = load i32, i32* %resp_idx, align 4, !dbg !13680
  %cmp = icmp ne i32 %8, %10, !dbg !13681
  br i1 %cmp, label %while.body, label %while.end, !dbg !13677

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !13682, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.declare(metadata %struct.mv_crpb** %response, metadata !13685, metadata !DIExpression()), !dbg !13686
  %11 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13687
  %crpb = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %11, i32 0, i32 2, !dbg !13688
  %12 = load %struct.mv_crpb*, %struct.mv_crpb** %crpb, align 8, !dbg !13688
  %13 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13689
  %resp_idx3 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %13, i32 0, i32 7, !dbg !13690
  %14 = load i32, i32* %resp_idx3, align 4, !dbg !13690
  %idxprom = zext i32 %14 to i64, !dbg !13687
  %arrayidx = getelementptr %struct.mv_crpb, %struct.mv_crpb* %12, i64 %idxprom, !dbg !13687
  store %struct.mv_crpb* %arrayidx, %struct.mv_crpb** %response, align 8, !dbg !13686
  %15 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13691
  %resp_idx4 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %15, i32 0, i32 7, !dbg !13692
  %16 = load i32, i32* %resp_idx4, align 4, !dbg !13692
  %add = add i32 %16, 1, !dbg !13693
  %and5 = and i32 %add, 31, !dbg !13694
  %17 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13695
  %resp_idx6 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %17, i32 0, i32 7, !dbg !13696
  store i32 %and5, i32* %resp_idx6, align 4, !dbg !13697
  %18 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13698
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %18, i32 0, i32 0, !dbg !13698
  %19 = load i32, i32* %hp_flags, align 8, !dbg !13698
  %and7 = and i32 %19, 64, !dbg !13698
  %tobool = icmp ne i32 %and7, 0, !dbg !13698
  br i1 %tobool, label %if.then, label %if.else, !dbg !13700

if.then:                                          ; preds = %while.body
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13701
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 25, !dbg !13703
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 3, !dbg !13704
  %21 = load i32, i32* %active_tag, align 8, !dbg !13704
  store i32 %21, i32* %tag, align 4, !dbg !13705
  br label %if.end, !dbg !13706

if.else:                                          ; preds = %while.body
  %22 = load %struct.mv_crpb*, %struct.mv_crpb** %response, align 8, !dbg !13707
  %id = getelementptr inbounds %struct.mv_crpb, %struct.mv_crpb* %22, i32 0, i32 0, !dbg !13707
  %23 = load i16, i16* %id, align 4, !dbg !13707
  %conv = zext i16 %23 to i32, !dbg !13707
  %and8 = and i32 %conv, 31, !dbg !13709
  store i32 %and8, i32* %tag, align 4, !dbg !13710
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13711
  %25 = load %struct.mv_crpb*, %struct.mv_crpb** %response, align 8, !dbg !13713
  %26 = load i32, i32* %tag, align 4, !dbg !13714
  %27 = load i32, i32* %ncq_enabled, align 4, !dbg !13715
  %call9 = call zeroext i1 @mv_process_crpb_response(%struct.ata_port* %24, %struct.mv_crpb* %25, i32 %26, i32 %27) #9, !dbg !13716
  br i1 %call9, label %if.then10, label %if.end11, !dbg !13717

if.then10:                                        ; preds = %if.end
  %28 = load i32, i32* %tag, align 4, !dbg !13718
  %shl = shl i32 1, %28, !dbg !13719
  %29 = load i32, i32* %done_mask, align 4, !dbg !13720
  %or = or i32 %29, %shl, !dbg !13720
  store i32 %or, i32* %done_mask, align 4, !dbg !13720
  br label %if.end11, !dbg !13721

if.end11:                                         ; preds = %if.then10, %if.end
  store i8 1, i8* %work_done, align 1, !dbg !13722
  br label %while.cond, !dbg !13677, !llvm.loop !13723

while.end:                                        ; preds = %while.cond
  %30 = load i8, i8* %work_done, align 1, !dbg !13725
  %tobool12 = trunc i8 %30 to i1, !dbg !13725
  br i1 %tobool12, label %if.then13, label %if.end23, !dbg !13727

if.then13:                                        ; preds = %while.end
  %31 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13728
  %32 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13730
  %call14 = call i64 @ata_qc_get_active(%struct.ata_port* %32) #9, !dbg !13731
  %33 = load i32, i32* %done_mask, align 4, !dbg !13732
  %conv15 = zext i32 %33 to i64, !dbg !13732
  %xor = xor i64 %call14, %conv15, !dbg !13733
  %call16 = call i32 @ata_qc_complete_multiple(%struct.ata_port* %31, i64 %xor) #9, !dbg !13734
  %34 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13735
  %crpb_dma = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %34, i32 0, i32 3, !dbg !13736
  %35 = load i64, i64* %crpb_dma, align 8, !dbg !13736
  %and17 = and i64 %35, 4294967040, !dbg !13737
  %36 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp.addr, align 8, !dbg !13738
  %resp_idx18 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %36, i32 0, i32 7, !dbg !13739
  %37 = load i32, i32* %resp_idx18, align 4, !dbg !13739
  %shl19 = shl i32 %37, 3, !dbg !13740
  %conv20 = zext i32 %shl19 to i64, !dbg !13741
  %or21 = or i64 %and17, %conv20, !dbg !13742
  %38 = load i8*, i8** %port_mmio, align 8, !dbg !13743
  %add.ptr22 = getelementptr i8, i8* %38, i64 36, !dbg !13744
  call void @writelfl(i64 %or21, i8* %add.ptr22) #9, !dbg !13745
  br label %if.end23, !dbg !13746

if.end23:                                         ; preds = %if.then13, %while.end
  ret void, !dbg !13747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_handle_fbs_ncq_dev_err(%struct.ata_port* %ap) #2 !dbg !13748 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %failed_links = alloca i32, align 4
  %old_map = alloca i32, align 4
  %new_map = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13749, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !13751, metadata !DIExpression()), !dbg !13752
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13753
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !13754
  %1 = load i8*, i8** %private_data, align 32, !dbg !13754
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !13753
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !13752
  call void @llvm.dbg.declare(metadata i32* %failed_links, metadata !13755, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.declare(metadata i32* %old_map, metadata !13757, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.declare(metadata i32* %new_map, metadata !13759, metadata !DIExpression()), !dbg !13760
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13761
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 8, !dbg !13763
  %4 = load i32, i32* %pp_flags, align 8, !dbg !13763
  %and = and i32 %4, 8, !dbg !13764
  %tobool = icmp ne i32 %and, 0, !dbg !13764
  br i1 %tobool, label %if.end, label %if.then, !dbg !13765

if.then:                                          ; preds = %entry
  %5 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13766
  %pp_flags1 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %5, i32 0, i32 8, !dbg !13768
  %6 = load i32, i32* %pp_flags1, align 8, !dbg !13769
  %or = or i32 %6, 8, !dbg !13769
  store i32 %or, i32* %pp_flags1, align 8, !dbg !13769
  %7 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13770
  %delayed_eh_pmp_map = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %7, i32 0, i32 10, !dbg !13771
  store i32 0, i32* %delayed_eh_pmp_map, align 4, !dbg !13772
  br label %if.end, !dbg !13773

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13774
  %delayed_eh_pmp_map2 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %8, i32 0, i32 10, !dbg !13775
  %9 = load i32, i32* %delayed_eh_pmp_map2, align 4, !dbg !13775
  store i32 %9, i32* %old_map, align 4, !dbg !13776
  %10 = load i32, i32* %old_map, align 4, !dbg !13777
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13778
  %call = call i32 @mv_get_err_pmp_map(%struct.ata_port* %11) #9, !dbg !13779
  %or3 = or i32 %10, %call, !dbg !13780
  store i32 %or3, i32* %new_map, align 4, !dbg !13781
  %12 = load i32, i32* %old_map, align 4, !dbg !13782
  %13 = load i32, i32* %new_map, align 4, !dbg !13784
  %cmp = icmp ne i32 %12, %13, !dbg !13785
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !13786

if.then4:                                         ; preds = %if.end
  %14 = load i32, i32* %new_map, align 4, !dbg !13787
  %15 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13789
  %delayed_eh_pmp_map5 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %15, i32 0, i32 10, !dbg !13790
  store i32 %14, i32* %delayed_eh_pmp_map5, align 4, !dbg !13791
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13792
  %17 = load i32, i32* %new_map, align 4, !dbg !13793
  %18 = load i32, i32* %old_map, align 4, !dbg !13794
  %neg = xor i32 %18, -1, !dbg !13795
  %and6 = and i32 %17, %neg, !dbg !13796
  call void @mv_pmp_eh_prep(%struct.ata_port* %16, i32 %and6) #9, !dbg !13797
  br label %if.end7, !dbg !13798

if.end7:                                          ; preds = %if.then4, %if.end
  %19 = load i32, i32* %new_map, align 4, !dbg !13799
  %20 = call i1 @llvm.is.constant.i32(i32 %19), !dbg !13799
  br i1 %20, label %cond.true, label %cond.false, !dbg !13799

cond.true:                                        ; preds = %if.end7
  %21 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv = zext i32 %21 to i64, !dbg !13799
  %and8 = and i64 %conv, 1, !dbg !13799
  %tobool9 = icmp ne i64 %and8, 0, !dbg !13799
  %lnot = xor i1 %tobool9, true, !dbg !13799
  %lnot10 = xor i1 %lnot, true, !dbg !13799
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !13799
  %22 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv11 = zext i32 %22 to i64, !dbg !13799
  %and12 = and i64 %conv11, 2, !dbg !13799
  %tobool13 = icmp ne i64 %and12, 0, !dbg !13799
  %lnot14 = xor i1 %tobool13, true, !dbg !13799
  %lnot16 = xor i1 %lnot14, true, !dbg !13799
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13799
  %add = add i32 %lnot.ext, %lnot.ext17, !dbg !13799
  %23 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv18 = zext i32 %23 to i64, !dbg !13799
  %and19 = and i64 %conv18, 4, !dbg !13799
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13799
  %lnot21 = xor i1 %tobool20, true, !dbg !13799
  %lnot23 = xor i1 %lnot21, true, !dbg !13799
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !13799
  %add25 = add i32 %add, %lnot.ext24, !dbg !13799
  %24 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv26 = zext i32 %24 to i64, !dbg !13799
  %and27 = and i64 %conv26, 8, !dbg !13799
  %tobool28 = icmp ne i64 %and27, 0, !dbg !13799
  %lnot29 = xor i1 %tobool28, true, !dbg !13799
  %lnot31 = xor i1 %lnot29, true, !dbg !13799
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !13799
  %add33 = add i32 %add25, %lnot.ext32, !dbg !13799
  %25 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv34 = zext i32 %25 to i64, !dbg !13799
  %and35 = and i64 %conv34, 16, !dbg !13799
  %tobool36 = icmp ne i64 %and35, 0, !dbg !13799
  %lnot37 = xor i1 %tobool36, true, !dbg !13799
  %lnot39 = xor i1 %lnot37, true, !dbg !13799
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !13799
  %add41 = add i32 %add33, %lnot.ext40, !dbg !13799
  %26 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv42 = zext i32 %26 to i64, !dbg !13799
  %and43 = and i64 %conv42, 32, !dbg !13799
  %tobool44 = icmp ne i64 %and43, 0, !dbg !13799
  %lnot45 = xor i1 %tobool44, true, !dbg !13799
  %lnot47 = xor i1 %lnot45, true, !dbg !13799
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !13799
  %add49 = add i32 %add41, %lnot.ext48, !dbg !13799
  %27 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv50 = zext i32 %27 to i64, !dbg !13799
  %and51 = and i64 %conv50, 64, !dbg !13799
  %tobool52 = icmp ne i64 %and51, 0, !dbg !13799
  %lnot53 = xor i1 %tobool52, true, !dbg !13799
  %lnot55 = xor i1 %lnot53, true, !dbg !13799
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !13799
  %add57 = add i32 %add49, %lnot.ext56, !dbg !13799
  %28 = load i32, i32* %new_map, align 4, !dbg !13799
  %conv58 = zext i32 %28 to i64, !dbg !13799
  %and59 = and i64 %conv58, 128, !dbg !13799
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13799
  %lnot61 = xor i1 %tobool60, true, !dbg !13799
  %lnot63 = xor i1 %lnot61, true, !dbg !13799
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !13799
  %add65 = add i32 %add57, %lnot.ext64, !dbg !13799
  %29 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr = lshr i32 %29, 8, !dbg !13799
  %conv66 = zext i32 %shr to i64, !dbg !13799
  %and67 = and i64 %conv66, 1, !dbg !13799
  %tobool68 = icmp ne i64 %and67, 0, !dbg !13799
  %lnot69 = xor i1 %tobool68, true, !dbg !13799
  %lnot71 = xor i1 %lnot69, true, !dbg !13799
  %lnot.ext72 = zext i1 %lnot71 to i32, !dbg !13799
  %30 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr73 = lshr i32 %30, 8, !dbg !13799
  %conv74 = zext i32 %shr73 to i64, !dbg !13799
  %and75 = and i64 %conv74, 2, !dbg !13799
  %tobool76 = icmp ne i64 %and75, 0, !dbg !13799
  %lnot77 = xor i1 %tobool76, true, !dbg !13799
  %lnot79 = xor i1 %lnot77, true, !dbg !13799
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !13799
  %add81 = add i32 %lnot.ext72, %lnot.ext80, !dbg !13799
  %31 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr82 = lshr i32 %31, 8, !dbg !13799
  %conv83 = zext i32 %shr82 to i64, !dbg !13799
  %and84 = and i64 %conv83, 4, !dbg !13799
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13799
  %lnot86 = xor i1 %tobool85, true, !dbg !13799
  %lnot88 = xor i1 %lnot86, true, !dbg !13799
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !13799
  %add90 = add i32 %add81, %lnot.ext89, !dbg !13799
  %32 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr91 = lshr i32 %32, 8, !dbg !13799
  %conv92 = zext i32 %shr91 to i64, !dbg !13799
  %and93 = and i64 %conv92, 8, !dbg !13799
  %tobool94 = icmp ne i64 %and93, 0, !dbg !13799
  %lnot95 = xor i1 %tobool94, true, !dbg !13799
  %lnot97 = xor i1 %lnot95, true, !dbg !13799
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !13799
  %add99 = add i32 %add90, %lnot.ext98, !dbg !13799
  %33 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr100 = lshr i32 %33, 8, !dbg !13799
  %conv101 = zext i32 %shr100 to i64, !dbg !13799
  %and102 = and i64 %conv101, 16, !dbg !13799
  %tobool103 = icmp ne i64 %and102, 0, !dbg !13799
  %lnot104 = xor i1 %tobool103, true, !dbg !13799
  %lnot106 = xor i1 %lnot104, true, !dbg !13799
  %lnot.ext107 = zext i1 %lnot106 to i32, !dbg !13799
  %add108 = add i32 %add99, %lnot.ext107, !dbg !13799
  %34 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr109 = lshr i32 %34, 8, !dbg !13799
  %conv110 = zext i32 %shr109 to i64, !dbg !13799
  %and111 = and i64 %conv110, 32, !dbg !13799
  %tobool112 = icmp ne i64 %and111, 0, !dbg !13799
  %lnot113 = xor i1 %tobool112, true, !dbg !13799
  %lnot115 = xor i1 %lnot113, true, !dbg !13799
  %lnot.ext116 = zext i1 %lnot115 to i32, !dbg !13799
  %add117 = add i32 %add108, %lnot.ext116, !dbg !13799
  %35 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr118 = lshr i32 %35, 8, !dbg !13799
  %conv119 = zext i32 %shr118 to i64, !dbg !13799
  %and120 = and i64 %conv119, 64, !dbg !13799
  %tobool121 = icmp ne i64 %and120, 0, !dbg !13799
  %lnot122 = xor i1 %tobool121, true, !dbg !13799
  %lnot124 = xor i1 %lnot122, true, !dbg !13799
  %lnot.ext125 = zext i1 %lnot124 to i32, !dbg !13799
  %add126 = add i32 %add117, %lnot.ext125, !dbg !13799
  %36 = load i32, i32* %new_map, align 4, !dbg !13799
  %shr127 = lshr i32 %36, 8, !dbg !13799
  %conv128 = zext i32 %shr127 to i64, !dbg !13799
  %and129 = and i64 %conv128, 128, !dbg !13799
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13799
  %lnot131 = xor i1 %tobool130, true, !dbg !13799
  %lnot133 = xor i1 %lnot131, true, !dbg !13799
  %lnot.ext134 = zext i1 %lnot133 to i32, !dbg !13799
  %add135 = add i32 %add126, %lnot.ext134, !dbg !13799
  %add136 = add i32 %add65, %add135, !dbg !13799
  br label %cond.end, !dbg !13799

cond.false:                                       ; preds = %if.end7
  %37 = load i32, i32* %new_map, align 4, !dbg !13799
  %call137 = call i32 @__arch_hweight16(i32 %37) #9, !dbg !13799
  br label %cond.end, !dbg !13799

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add136, %cond.true ], [ %call137, %cond.false ], !dbg !13799
  store i32 %cond, i32* %failed_links, align 4, !dbg !13800
  %38 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13801
  %39 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13801
  %delayed_eh_pmp_map138 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %39, i32 0, i32 10, !dbg !13801
  %40 = load i32, i32* %delayed_eh_pmp_map138, align 4, !dbg !13801
  %41 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13801
  %qc_active = getelementptr inbounds %struct.ata_port, %struct.ata_port* %41, i32 0, i32 21, !dbg !13801
  %42 = load i64, i64* %qc_active, align 8, !dbg !13801
  %43 = load i32, i32* %failed_links, align 4, !dbg !13801
  %44 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13801
  %nr_active_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %44, i32 0, i32 22, !dbg !13801
  %45 = load i32, i32* %nr_active_links, align 16, !dbg !13801
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.mv_handle_fbs_ncq_dev_err, i64 0, i64 0), i32 %40, i64 %42, i32 %43, i32 %45) #9, !dbg !13801
  %46 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13802
  %nr_active_links139 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %46, i32 0, i32 22, !dbg !13804
  %47 = load i32, i32* %nr_active_links139, align 16, !dbg !13804
  %48 = load i32, i32* %failed_links, align 4, !dbg !13805
  %cmp140 = icmp sle i32 %47, %48, !dbg !13806
  br i1 %cmp140, label %land.lhs.true, label %if.end146, !dbg !13807

land.lhs.true:                                    ; preds = %cond.end
  %49 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13808
  %call142 = call i32 @mv_req_q_empty(%struct.ata_port* %49) #9, !dbg !13809
  %tobool143 = icmp ne i32 %call142, 0, !dbg !13809
  br i1 %tobool143, label %if.then144, label %if.end146, !dbg !13810

if.then144:                                       ; preds = %land.lhs.true
  %50 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13811
  %51 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13813
  call void @mv_process_crpb_entries(%struct.ata_port* %50, %struct.mv_port_priv* %51) #9, !dbg !13814
  %52 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13815
  %call145 = call i32 @mv_stop_edma(%struct.ata_port* %52) #9, !dbg !13816
  %53 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13817
  call void @mv_eh_freeze(%struct.ata_port* %53) #9, !dbg !13818
  %54 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13819
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.mv_handle_fbs_ncq_dev_err, i64 0, i64 0)) #9, !dbg !13819
  store i32 1, i32* %retval, align 4, !dbg !13820
  br label %return, !dbg !13820

if.end146:                                        ; preds = %land.lhs.true, %cond.end
  %55 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13821
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.mv_handle_fbs_ncq_dev_err, i64 0, i64 0)) #9, !dbg !13821
  store i32 1, i32* %retval, align 4, !dbg !13822
  br label %return, !dbg !13822

return:                                           ; preds = %if.end146, %if.then144
  %56 = load i32, i32* %retval, align 4, !dbg !13823
  ret i32 %56, !dbg !13823
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_err_intr(%struct.ata_port* %ap) #2 !dbg !13824 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %edma_err_cause = alloca i32, align 4
  %eh_freeze_mask = alloca i32, align 4
  %serr = alloca i32, align 4
  %fis_cause = alloca i32, align 4
  %pp = alloca %struct.mv_port_priv*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %action = alloca i32, align 4
  %err_mask = alloca i32, align 4
  %ehi = alloca %struct.ata_eh_info*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %abort = alloca i32, align 4
  %ec = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13825, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !13827, metadata !DIExpression()), !dbg !13828
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13829
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !13830
  store i8* %call, i8** %port_mmio, align 8, !dbg !13828
  call void @llvm.dbg.declare(metadata i32* %edma_err_cause, metadata !13831, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.declare(metadata i32* %eh_freeze_mask, metadata !13833, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.declare(metadata i32* %serr, metadata !13835, metadata !DIExpression()), !dbg !13836
  store i32 0, i32* %serr, align 4, !dbg !13836
  call void @llvm.dbg.declare(metadata i32* %fis_cause, metadata !13837, metadata !DIExpression()), !dbg !13838
  store i32 0, i32* %fis_cause, align 4, !dbg !13838
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !13839, metadata !DIExpression()), !dbg !13840
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13841
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 49, !dbg !13842
  %2 = load i8*, i8** %private_data, align 32, !dbg !13842
  %3 = bitcast i8* %2 to %struct.mv_port_priv*, !dbg !13841
  store %struct.mv_port_priv* %3, %struct.mv_port_priv** %pp, align 8, !dbg !13840
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !13843, metadata !DIExpression()), !dbg !13844
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13845
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 31, !dbg !13846
  %5 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !13846
  %private_data1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %5, i32 0, i32 5, !dbg !13847
  %6 = load i8*, i8** %private_data1, align 8, !dbg !13847
  %7 = bitcast i8* %6 to %struct.mv_host_priv*, !dbg !13845
  store %struct.mv_host_priv* %7, %struct.mv_host_priv** %hpriv, align 8, !dbg !13844
  call void @llvm.dbg.declare(metadata i32* %action, metadata !13848, metadata !DIExpression()), !dbg !13849
  store i32 0, i32* %action, align 4, !dbg !13849
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !13850, metadata !DIExpression()), !dbg !13851
  store i32 0, i32* %err_mask, align 4, !dbg !13851
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !13852, metadata !DIExpression()), !dbg !13853
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13854
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 25, !dbg !13855
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 11, !dbg !13856
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !13853
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !13857, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.declare(metadata i32* %abort, metadata !13859, metadata !DIExpression()), !dbg !13860
  store i32 0, i32* %abort, align 4, !dbg !13860
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13861
  %link2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 25, !dbg !13862
  %call3 = call i32 @sata_scr_read(%struct.ata_link* %link2, i32 1, i32* %serr) #9, !dbg !13863
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13864
  %link4 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 25, !dbg !13865
  %11 = load i32, i32* %serr, align 4, !dbg !13866
  %call5 = call i32 @sata_scr_write_flush(%struct.ata_link* %link4, i32 1, i32 %11) #9, !dbg !13867
  %12 = load i8*, i8** %port_mmio, align 8, !dbg !13868
  %add.ptr = getelementptr i8, i8* %12, i64 8, !dbg !13869
  %call6 = call i32 @readl(i8* %add.ptr) #9, !dbg !13870
  store i32 %call6, i32* %edma_err_cause, align 4, !dbg !13871
  %13 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13872
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %13, i32 0, i32 0, !dbg !13872
  %14 = load i32, i32* %hp_flags, align 8, !dbg !13872
  %and = and i32 %14, 256, !dbg !13872
  %tobool = icmp ne i32 %and, 0, !dbg !13872
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13874

land.lhs.true:                                    ; preds = %entry
  %15 = load i32, i32* %edma_err_cause, align 4, !dbg !13875
  %and7 = and i32 %15, 256, !dbg !13876
  %tobool8 = icmp ne i32 %and7, 0, !dbg !13876
  br i1 %tobool8, label %if.then, label %if.end, !dbg !13877

if.then:                                          ; preds = %land.lhs.true
  %16 = load i8*, i8** %port_mmio, align 8, !dbg !13878
  %add.ptr9 = getelementptr i8, i8* %16, i64 868, !dbg !13880
  %call10 = call i32 @readl(i8* %add.ptr9) #9, !dbg !13881
  store i32 %call10, i32* %fis_cause, align 4, !dbg !13882
  %17 = load i32, i32* %fis_cause, align 4, !dbg !13883
  %neg = xor i32 %17, -1, !dbg !13884
  %conv = zext i32 %neg to i64, !dbg !13884
  %18 = load i8*, i8** %port_mmio, align 8, !dbg !13885
  %add.ptr11 = getelementptr i8, i8* %18, i64 868, !dbg !13886
  call void @writelfl(i64 %conv, i8* %add.ptr11) #9, !dbg !13887
  br label %if.end, !dbg !13888

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load i32, i32* %edma_err_cause, align 4, !dbg !13889
  %neg12 = xor i32 %19, -1, !dbg !13890
  %conv13 = zext i32 %neg12 to i64, !dbg !13890
  %20 = load i8*, i8** %port_mmio, align 8, !dbg !13891
  %add.ptr14 = getelementptr i8, i8* %20, i64 8, !dbg !13892
  call void @writelfl(i64 %conv13, i8* %add.ptr14) #9, !dbg !13893
  %21 = load i32, i32* %edma_err_cause, align 4, !dbg !13894
  %and15 = and i32 %21, 4, !dbg !13896
  %tobool16 = icmp ne i32 %and15, 0, !dbg !13896
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !13897

if.then17:                                        ; preds = %if.end
  %22 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13898
  %23 = load i32, i32* %edma_err_cause, align 4, !dbg !13901
  %call18 = call i32 @mv_handle_dev_err(%struct.ata_port* %22, i32 %23) #9, !dbg !13902
  %tobool19 = icmp ne i32 %call18, 0, !dbg !13902
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !13903

if.then20:                                        ; preds = %if.then17
  br label %if.end116, !dbg !13904

if.end21:                                         ; preds = %if.then17
  br label %if.end22, !dbg !13905

if.end22:                                         ; preds = %if.end21, %if.end
  %24 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13906
  %call23 = call %struct.ata_queued_cmd* @mv_get_active_qc(%struct.ata_port* %24) #9, !dbg !13907
  store %struct.ata_queued_cmd* %call23, %struct.ata_queued_cmd** %qc, align 8, !dbg !13908
  %25 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13909
  call void @ata_ehi_clear_desc(%struct.ata_eh_info* %25) #9, !dbg !13910
  %26 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13911
  %27 = load i32, i32* %edma_err_cause, align 4, !dbg !13912
  %28 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13913
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %28, i32 0, i32 8, !dbg !13914
  %29 = load i32, i32* %pp_flags, align 8, !dbg !13914
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %26, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 %27, i32 %29) #9, !dbg !13915
  %30 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13916
  %hp_flags24 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %30, i32 0, i32 0, !dbg !13916
  %31 = load i32, i32* %hp_flags24, align 8, !dbg !13916
  %and25 = and i32 %31, 256, !dbg !13916
  %tobool26 = icmp ne i32 %and25, 0, !dbg !13916
  br i1 %tobool26, label %land.lhs.true27, label %if.end40, !dbg !13918

land.lhs.true27:                                  ; preds = %if.end22
  %32 = load i32, i32* %edma_err_cause, align 4, !dbg !13919
  %and28 = and i32 %32, 256, !dbg !13920
  %tobool29 = icmp ne i32 %and28, 0, !dbg !13920
  br i1 %tobool29, label %if.then30, label %if.end40, !dbg !13921

if.then30:                                        ; preds = %land.lhs.true27
  %33 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13922
  %34 = load i32, i32* %fis_cause, align 4, !dbg !13924
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %33, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i32 %34) #9, !dbg !13925
  %35 = load i32, i32* %fis_cause, align 4, !dbg !13926
  %and31 = and i32 %35, 512, !dbg !13928
  %tobool32 = icmp ne i32 %and31, 0, !dbg !13928
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !13929

if.then33:                                        ; preds = %if.then30
  call void @llvm.dbg.declare(metadata i32* %ec, metadata !13930, metadata !DIExpression()), !dbg !13932
  %36 = load i32, i32* %edma_err_cause, align 4, !dbg !13933
  %and34 = and i32 %36, -65102081, !dbg !13934
  store i32 %and34, i32* %ec, align 4, !dbg !13932
  %37 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13935
  %call35 = call i32 @sata_async_notification(%struct.ata_port* %37) #9, !dbg !13936
  %38 = load i32, i32* %ec, align 4, !dbg !13937
  %tobool36 = icmp ne i32 %38, 0, !dbg !13937
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !13939

if.then37:                                        ; preds = %if.then33
  br label %if.end116, !dbg !13940

if.end38:                                         ; preds = %if.then33
  %39 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13941
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0)) #9, !dbg !13942
  br label %if.end39, !dbg !13943

if.end39:                                         ; preds = %if.end38, %if.then30
  br label %if.end40, !dbg !13944

if.end40:                                         ; preds = %if.end39, %land.lhs.true27, %if.end22
  %40 = load i32, i32* %edma_err_cause, align 4, !dbg !13945
  %and41 = and i32 %40, 4, !dbg !13947
  %tobool42 = icmp ne i32 %and41, 0, !dbg !13947
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !13948

if.then43:                                        ; preds = %if.end40
  %41 = load i32, i32* %err_mask, align 4, !dbg !13949
  %or = or i32 %41, 1, !dbg !13949
  store i32 %or, i32* %err_mask, align 4, !dbg !13949
  %42 = load i32, i32* %action, align 4, !dbg !13951
  %or44 = or i32 %42, 6, !dbg !13951
  store i32 %or44, i32* %action, align 4, !dbg !13951
  %43 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13952
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0)) #9, !dbg !13953
  br label %if.end45, !dbg !13954

if.end45:                                         ; preds = %if.then43, %if.end40
  %44 = load i32, i32* %edma_err_cause, align 4, !dbg !13955
  %and46 = and i32 %44, 3587, !dbg !13957
  %tobool47 = icmp ne i32 %and46, 0, !dbg !13957
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !13958

if.then48:                                        ; preds = %if.end45
  %45 = load i32, i32* %err_mask, align 4, !dbg !13959
  %or49 = or i32 %45, 16, !dbg !13959
  store i32 %or49, i32* %err_mask, align 4, !dbg !13959
  %46 = load i32, i32* %action, align 4, !dbg !13961
  %or50 = or i32 %46, 6, !dbg !13961
  store i32 %or50, i32* %action, align 4, !dbg !13961
  %47 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13962
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0)) #9, !dbg !13963
  br label %if.end51, !dbg !13964

if.end51:                                         ; preds = %if.then48, %if.end45
  %48 = load i32, i32* %edma_err_cause, align 4, !dbg !13965
  %and52 = and i32 %48, 24, !dbg !13967
  %tobool53 = icmp ne i32 %and52, 0, !dbg !13967
  br i1 %tobool53, label %if.then54, label %if.end58, !dbg !13968

if.then54:                                        ; preds = %if.end51
  %49 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13969
  call void @ata_ehi_hotplugged(%struct.ata_eh_info* %49) #9, !dbg !13971
  %50 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13972
  %51 = load i32, i32* %edma_err_cause, align 4, !dbg !13973
  %and55 = and i32 %51, 8, !dbg !13974
  %tobool56 = icmp ne i32 %and55, 0, !dbg !13973
  %52 = zext i1 %tobool56 to i64, !dbg !13973
  %cond = select i1 %tobool56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), !dbg !13973
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %50, i8* %cond) #9, !dbg !13975
  %53 = load i32, i32* %action, align 4, !dbg !13976
  %or57 = or i32 %53, 6, !dbg !13976
  store i32 %or57, i32* %action, align 4, !dbg !13976
  br label %if.end58, !dbg !13977

if.end58:                                         ; preds = %if.then54, %if.end51
  %54 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !13978
  %hp_flags59 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %54, i32 0, i32 0, !dbg !13978
  %55 = load i32, i32* %hp_flags59, align 8, !dbg !13978
  %and60 = and i32 %55, 64, !dbg !13978
  %tobool61 = icmp ne i32 %and60, 0, !dbg !13978
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !13980

if.then62:                                        ; preds = %if.end58
  store i32 8059, i32* %eh_freeze_mask, align 4, !dbg !13981
  %56 = load i32, i32* %edma_err_cause, align 4, !dbg !13983
  %and63 = and i32 %56, 256, !dbg !13985
  %tobool64 = icmp ne i32 %and63, 0, !dbg !13985
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !13986

if.then65:                                        ; preds = %if.then62
  %57 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !13987
  %pp_flags66 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %57, i32 0, i32 8, !dbg !13989
  %58 = load i32, i32* %pp_flags66, align 8, !dbg !13990
  %and67 = and i32 %58, -2, !dbg !13990
  store i32 %and67, i32* %pp_flags66, align 8, !dbg !13990
  %59 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !13991
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %59, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #9, !dbg !13992
  br label %if.end68, !dbg !13993

if.end68:                                         ; preds = %if.then65, %if.then62
  br label %if.end81, !dbg !13994

if.else:                                          ; preds = %if.end58
  store i32 -65102149, i32* %eh_freeze_mask, align 4, !dbg !13995
  %60 = load i32, i32* %edma_err_cause, align 4, !dbg !13997
  %and69 = and i32 %60, 128, !dbg !13999
  %tobool70 = icmp ne i32 %and69, 0, !dbg !13999
  br i1 %tobool70, label %if.then71, label %if.end74, !dbg !14000

if.then71:                                        ; preds = %if.else
  %61 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !14001
  %pp_flags72 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %61, i32 0, i32 8, !dbg !14003
  %62 = load i32, i32* %pp_flags72, align 8, !dbg !14004
  %and73 = and i32 %62, -2, !dbg !14004
  store i32 %and73, i32* %pp_flags72, align 8, !dbg !14004
  %63 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14005
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %63, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #9, !dbg !14006
  br label %if.end74, !dbg !14007

if.end74:                                         ; preds = %if.then71, %if.else
  %64 = load i32, i32* %edma_err_cause, align 4, !dbg !14008
  %and75 = and i32 %64, 32, !dbg !14010
  %tobool76 = icmp ne i32 %and75, 0, !dbg !14010
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !14011

if.then77:                                        ; preds = %if.end74
  %65 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14012
  %66 = load i32, i32* %serr, align 4, !dbg !14014
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %65, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i64 0, i64 0), i32 %66) #9, !dbg !14015
  %67 = load i32, i32* %err_mask, align 4, !dbg !14016
  %or78 = or i32 %67, 16, !dbg !14016
  store i32 %or78, i32* %err_mask, align 4, !dbg !14016
  %68 = load i32, i32* %action, align 4, !dbg !14017
  %or79 = or i32 %68, 6, !dbg !14017
  store i32 %or79, i32* %action, align 4, !dbg !14017
  br label %if.end80, !dbg !14018

if.end80:                                         ; preds = %if.then77, %if.end74
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end68
  %69 = load i32, i32* %err_mask, align 4, !dbg !14019
  %tobool82 = icmp ne i32 %69, 0, !dbg !14019
  br i1 %tobool82, label %if.end85, label %if.then83, !dbg !14021

if.then83:                                        ; preds = %if.end81
  store i32 256, i32* %err_mask, align 4, !dbg !14022
  %70 = load i32, i32* %action, align 4, !dbg !14024
  %or84 = or i32 %70, 6, !dbg !14024
  store i32 %or84, i32* %action, align 4, !dbg !14024
  br label %if.end85, !dbg !14025

if.end85:                                         ; preds = %if.then83, %if.end81
  %71 = load i32, i32* %serr, align 4, !dbg !14026
  %72 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14027
  %serror = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %72, i32 0, i32 1, !dbg !14028
  %73 = load i32, i32* %serror, align 8, !dbg !14029
  %or86 = or i32 %73, %71, !dbg !14029
  store i32 %or86, i32* %serror, align 8, !dbg !14029
  %74 = load i32, i32* %action, align 4, !dbg !14030
  %75 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14031
  %action87 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %75, i32 0, i32 3, !dbg !14032
  %76 = load i32, i32* %action87, align 8, !dbg !14033
  %or88 = or i32 %76, %74, !dbg !14033
  store i32 %or88, i32* %action87, align 8, !dbg !14033
  %77 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14034
  %tobool89 = icmp ne %struct.ata_queued_cmd* %77, null, !dbg !14034
  br i1 %tobool89, label %if.then90, label %if.else93, !dbg !14036

if.then90:                                        ; preds = %if.end85
  %78 = load i32, i32* %err_mask, align 4, !dbg !14037
  %79 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14038
  %err_mask91 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %79, i32 0, i32 20, !dbg !14039
  %80 = load i32, i32* %err_mask91, align 4, !dbg !14040
  %or92 = or i32 %80, %78, !dbg !14040
  store i32 %or92, i32* %err_mask91, align 4, !dbg !14040
  br label %if.end96, !dbg !14038

if.else93:                                        ; preds = %if.end85
  %81 = load i32, i32* %err_mask, align 4, !dbg !14041
  %82 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14042
  %err_mask94 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %82, i32 0, i32 2, !dbg !14043
  %83 = load i32, i32* %err_mask94, align 4, !dbg !14044
  %or95 = or i32 %83, %81, !dbg !14044
  store i32 %or95, i32* %err_mask94, align 4, !dbg !14044
  br label %if.end96

if.end96:                                         ; preds = %if.else93, %if.then90
  %84 = load i32, i32* %err_mask, align 4, !dbg !14045
  %cmp = icmp eq i32 %84, 1, !dbg !14047
  br i1 %cmp, label %if.then98, label %if.else99, !dbg !14048

if.then98:                                        ; preds = %if.end96
  %85 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14049
  call void @mv_eh_freeze(%struct.ata_port* %85) #9, !dbg !14051
  store i32 1, i32* %abort, align 4, !dbg !14052
  br label %if.end106, !dbg !14053

if.else99:                                        ; preds = %if.end96
  %86 = load i32, i32* %edma_err_cause, align 4, !dbg !14054
  %87 = load i32, i32* %eh_freeze_mask, align 4, !dbg !14056
  %and100 = and i32 %86, %87, !dbg !14057
  %tobool101 = icmp ne i32 %and100, 0, !dbg !14057
  br i1 %tobool101, label %if.then102, label %if.else104, !dbg !14058

if.then102:                                       ; preds = %if.else99
  %88 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14059
  %call103 = call i32 @ata_port_freeze(%struct.ata_port* %88) #9, !dbg !14061
  br label %if.end105, !dbg !14062

if.else104:                                       ; preds = %if.else99
  store i32 1, i32* %abort, align 4, !dbg !14063
  br label %if.end105

if.end105:                                        ; preds = %if.else104, %if.then102
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then98
  %89 = load i32, i32* %abort, align 4, !dbg !14065
  %tobool107 = icmp ne i32 %89, 0, !dbg !14065
  br i1 %tobool107, label %if.then108, label %if.end116, !dbg !14067

if.then108:                                       ; preds = %if.end106
  %90 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14068
  %tobool109 = icmp ne %struct.ata_queued_cmd* %90, null, !dbg !14068
  br i1 %tobool109, label %if.then110, label %if.else113, !dbg !14071

if.then110:                                       ; preds = %if.then108
  %91 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14072
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %91, i32 0, i32 1, !dbg !14073
  %92 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14073
  %link111 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %92, i32 0, i32 0, !dbg !14074
  %93 = load %struct.ata_link*, %struct.ata_link** %link111, align 64, !dbg !14074
  %call112 = call i32 @ata_link_abort(%struct.ata_link* %93) #9, !dbg !14075
  br label %if.end115, !dbg !14075

if.else113:                                       ; preds = %if.then108
  %94 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14076
  %call114 = call i32 @ata_port_abort(%struct.ata_port* %94) #9, !dbg !14077
  br label %if.end115

if.end115:                                        ; preds = %if.else113, %if.then110
  br label %if.end116, !dbg !14078

if.end116:                                        ; preds = %if.then20, %if.then37, %if.end115, %if.end106
  ret void, !dbg !14079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @mv_get_active_qc(%struct.ata_port* %ap) #2 !dbg !14080 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %pp = alloca %struct.mv_port_priv*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14083, metadata !DIExpression()), !dbg !14084
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !14085, metadata !DIExpression()), !dbg !14086
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14087
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !14088
  %1 = load i8*, i8** %private_data, align 32, !dbg !14088
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !14087
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !14086
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !14089, metadata !DIExpression()), !dbg !14090
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !14091
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 8, !dbg !14093
  %4 = load i32, i32* %pp_flags, align 8, !dbg !14093
  %and = and i32 %4, 2, !dbg !14094
  %tobool = icmp ne i32 %and, 0, !dbg !14094
  br i1 %tobool, label %if.then, label %if.end, !dbg !14095

if.then:                                          ; preds = %entry
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !14096
  br label %return, !dbg !14096

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14097
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14098
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 25, !dbg !14099
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 3, !dbg !14100
  %7 = load i32, i32* %active_tag, align 8, !dbg !14100
  %call = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %5, i32 %7) #9, !dbg !14101
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !14102
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14103
  %tobool1 = icmp ne %struct.ata_queued_cmd* %8, null, !dbg !14103
  br i1 %tobool1, label %land.lhs.true, label %if.end5, !dbg !14105

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14106
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 4, !dbg !14107
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !14108
  %10 = load i64, i64* %flags, align 8, !dbg !14108
  %and2 = and i64 %10, 64, !dbg !14109
  %tobool3 = icmp ne i64 %and2, 0, !dbg !14109
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !14110

if.then4:                                         ; preds = %land.lhs.true
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14111
  store %struct.ata_queued_cmd* %11, %struct.ata_queued_cmd** %retval, align 8, !dbg !14112
  br label %return, !dbg !14112

if.end5:                                          ; preds = %land.lhs.true, %if.end
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !14113
  br label %return, !dbg !14113

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !14114
  ret %struct.ata_queued_cmd* %12, !dbg !14114
}

; Function Attrs: noredzone
declare dso_local i32 @ata_bmdma_port_intr(%struct.ata_port*, %struct.ata_queued_cmd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_unexpected_intr(%struct.ata_port* %ap, i32 %edma_was_enabled) #2 !dbg !14115 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %edma_was_enabled.addr = alloca i32, align 4
  %ehi = alloca %struct.ata_eh_info*, align 8
  %when = alloca i8*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14116, metadata !DIExpression()), !dbg !14117
  store i32 %edma_was_enabled, i32* %edma_was_enabled.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edma_was_enabled.addr, metadata !14118, metadata !DIExpression()), !dbg !14119
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !14120, metadata !DIExpression()), !dbg !14121
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14122
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 25, !dbg !14123
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 11, !dbg !14124
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !14121
  call void @llvm.dbg.declare(metadata i8** %when, metadata !14125, metadata !DIExpression()), !dbg !14126
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i8** %when, align 8, !dbg !14126
  %1 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14127
  call void @ata_ehi_clear_desc(%struct.ata_eh_info* %1) #9, !dbg !14128
  %2 = load i32, i32* %edma_was_enabled.addr, align 4, !dbg !14129
  %tobool = icmp ne i32 %2, 0, !dbg !14129
  br i1 %tobool, label %if.then, label %if.else, !dbg !14131

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i8** %when, align 8, !dbg !14132
  br label %if.end5, !dbg !14134

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !14135, metadata !DIExpression()), !dbg !14137
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14138
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14139
  %link1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 25, !dbg !14140
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link1, i32 0, i32 3, !dbg !14141
  %5 = load i32, i32* %active_tag, align 8, !dbg !14141
  %call = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %3, i32 %5) #9, !dbg !14142
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !14137
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14143
  %tobool2 = icmp ne %struct.ata_queued_cmd* %6, null, !dbg !14143
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !14145

land.lhs.true:                                    ; preds = %if.else
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !14146
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 4, !dbg !14147
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !14148
  %8 = load i64, i64* %flags, align 8, !dbg !14148
  %and = and i64 %8, 64, !dbg !14149
  %tobool3 = icmp ne i64 %and, 0, !dbg !14149
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !14150

if.then4:                                         ; preds = %land.lhs.true
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i64 0, i64 0), i8** %when, align 8, !dbg !14151
  br label %if.end, !dbg !14152

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %9 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14153
  %10 = load i8*, i8** %when, align 8, !dbg !14154
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %9, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.54, i64 0, i64 0), i8* %10) #9, !dbg !14155
  %11 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14156
  %err_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %11, i32 0, i32 2, !dbg !14157
  %12 = load i32, i32* %err_mask, align 4, !dbg !14158
  %or = or i32 %12, 256, !dbg !14158
  store i32 %or, i32* %err_mask, align 4, !dbg !14158
  %13 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14159
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %13, i32 0, i32 3, !dbg !14160
  %14 = load i32, i32* %action, align 8, !dbg !14161
  %or6 = or i32 %14, 6, !dbg !14161
  store i32 %or6, i32* %action, align 8, !dbg !14161
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14162
  %call7 = call i32 @ata_port_freeze(%struct.ata_port* %15) #9, !dbg !14163
  ret void, !dbg !14164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mv_process_crpb_response(%struct.ata_port* %ap, %struct.mv_crpb* %response, i32 %tag, i32 %ncq_enabled) #2 !dbg !14165 {
entry:
  %retval = alloca i1, align 1
  %ap.addr = alloca %struct.ata_port*, align 8
  %response.addr = alloca %struct.mv_crpb*, align 8
  %tag.addr = alloca i32, align 4
  %ncq_enabled.addr = alloca i32, align 4
  %ata_status = alloca i8, align 1
  %edma_status = alloca i16, align 2
  %err_cause = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14168, metadata !DIExpression()), !dbg !14169
  store %struct.mv_crpb* %response, %struct.mv_crpb** %response.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_crpb** %response.addr, metadata !14170, metadata !DIExpression()), !dbg !14171
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !14172, metadata !DIExpression()), !dbg !14173
  store i32 %ncq_enabled, i32* %ncq_enabled.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ncq_enabled.addr, metadata !14174, metadata !DIExpression()), !dbg !14175
  call void @llvm.dbg.declare(metadata i8* %ata_status, metadata !14176, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.declare(metadata i16* %edma_status, metadata !14178, metadata !DIExpression()), !dbg !14179
  %0 = load %struct.mv_crpb*, %struct.mv_crpb** %response.addr, align 8, !dbg !14180
  %flags = getelementptr inbounds %struct.mv_crpb, %struct.mv_crpb* %0, i32 0, i32 1, !dbg !14180
  %1 = load i16, i16* %flags, align 2, !dbg !14180
  store i16 %1, i16* %edma_status, align 2, !dbg !14179
  %2 = load i32, i32* %ncq_enabled.addr, align 4, !dbg !14181
  %tobool = icmp ne i32 %2, 0, !dbg !14181
  br i1 %tobool, label %if.end5, label %if.then, !dbg !14183

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %err_cause, metadata !14184, metadata !DIExpression()), !dbg !14186
  %3 = load i16, i16* %edma_status, align 2, !dbg !14187
  %conv = zext i16 %3 to i32, !dbg !14187
  %and = and i32 %conv, 255, !dbg !14188
  %and1 = and i32 %and, -5, !dbg !14189
  %conv2 = trunc i32 %and1 to i8, !dbg !14187
  store i8 %conv2, i8* %err_cause, align 1, !dbg !14186
  %4 = load i8, i8* %err_cause, align 1, !dbg !14190
  %tobool3 = icmp ne i8 %4, 0, !dbg !14190
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !14192

if.then4:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !14193
  br label %return, !dbg !14193

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !14195

if.end5:                                          ; preds = %if.end, %entry
  %5 = load i16, i16* %edma_status, align 2, !dbg !14196
  %conv6 = zext i16 %5 to i32, !dbg !14196
  %shr = ashr i32 %conv6, 8, !dbg !14197
  %conv7 = trunc i32 %shr to i8, !dbg !14196
  store i8 %conv7, i8* %ata_status, align 1, !dbg !14198
  %6 = load i8, i8* %ata_status, align 1, !dbg !14199
  %call = call i32 @ac_err_mask(i8 zeroext %6) #9, !dbg !14201
  %tobool8 = icmp ne i32 %call, 0, !dbg !14201
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !14202

if.then9:                                         ; preds = %if.end5
  store i1 true, i1* %retval, align 1, !dbg !14203
  br label %return, !dbg !14203

if.end10:                                         ; preds = %if.end5
  store i1 false, i1* %retval, align 1, !dbg !14204
  br label %return, !dbg !14204

return:                                           ; preds = %if.end10, %if.then9, %if.then4
  %7 = load i1, i1* %retval, align 1, !dbg !14205
  ret i1 %7, !dbg !14205
}

; Function Attrs: noredzone
declare dso_local i32 @ata_qc_complete_multiple(%struct.ata_port*, i64) #1

; Function Attrs: noredzone
declare dso_local i64 @ata_qc_get_active(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ac_err_mask(i8 zeroext %status) #2 !dbg !14206 {
entry:
  %retval = alloca i32, align 4
  %status.addr = alloca i8, align 1
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !14209, metadata !DIExpression()), !dbg !14210
  %0 = load i8, i8* %status.addr, align 1, !dbg !14211
  %conv = zext i8 %0 to i32, !dbg !14211
  %and = and i32 %conv, 136, !dbg !14213
  %tobool = icmp ne i32 %and, 0, !dbg !14213
  br i1 %tobool, label %if.then, label %if.end, !dbg !14214

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !14215
  br label %return, !dbg !14215

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %status.addr, align 1, !dbg !14216
  %conv1 = zext i8 %1 to i32, !dbg !14216
  %and2 = and i32 %conv1, 33, !dbg !14218
  %tobool3 = icmp ne i32 %and2, 0, !dbg !14218
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !14219

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !14220
  br label %return, !dbg !14220

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14221
  br label %return, !dbg !14221

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !14222
  ret i32 %2, !dbg !14222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_get_err_pmp_map(%struct.ata_port* %ap) #2 !dbg !14223 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14226, metadata !DIExpression()), !dbg !14227
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !14228, metadata !DIExpression()), !dbg !14229
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14230
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !14231
  store i8* %call, i8** %port_mmio, align 8, !dbg !14229
  %1 = load i8*, i8** %port_mmio, align 8, !dbg !14232
  %add.ptr = getelementptr i8, i8* %1, i64 840, !dbg !14233
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !14234
  %shr = lshr i32 %call1, 16, !dbg !14235
  ret i32 %shr, !dbg !14236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_pmp_eh_prep(%struct.ata_port* %ap, i32 %pmp_map) #2 !dbg !14237 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %pmp_map.addr = alloca i32, align 4
  %pmp = alloca i32, align 4
  %this_pmp = alloca i32, align 4
  %link = alloca %struct.ata_link*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14238, metadata !DIExpression()), !dbg !14239
  store i32 %pmp_map, i32* %pmp_map.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pmp_map.addr, metadata !14240, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.declare(metadata i32* %pmp, metadata !14242, metadata !DIExpression()), !dbg !14243
  store i32 0, i32* %pmp, align 4, !dbg !14244
  br label %for.cond, !dbg !14246

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %pmp_map.addr, align 4, !dbg !14247
  %cmp = icmp ne i32 %0, 0, !dbg !14249
  br i1 %cmp, label %for.body, label %for.end, !dbg !14250

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %this_pmp, metadata !14251, metadata !DIExpression()), !dbg !14253
  %1 = load i32, i32* %pmp, align 4, !dbg !14254
  %shl = shl i32 1, %1, !dbg !14255
  store i32 %shl, i32* %this_pmp, align 4, !dbg !14253
  %2 = load i32, i32* %pmp_map.addr, align 4, !dbg !14256
  %3 = load i32, i32* %this_pmp, align 4, !dbg !14258
  %and = and i32 %2, %3, !dbg !14259
  %tobool = icmp ne i32 %and, 0, !dbg !14259
  br i1 %tobool, label %if.then, label %if.end, !dbg !14260

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !14261, metadata !DIExpression()), !dbg !14263
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14264
  %pmp_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 28, !dbg !14265
  %5 = load %struct.ata_link*, %struct.ata_link** %pmp_link, align 16, !dbg !14265
  %6 = load i32, i32* %pmp, align 4, !dbg !14266
  %idxprom = zext i32 %6 to i64, !dbg !14264
  %arrayidx = getelementptr %struct.ata_link, %struct.ata_link* %5, i64 %idxprom, !dbg !14264
  store %struct.ata_link* %arrayidx, %struct.ata_link** %link, align 8, !dbg !14263
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !14267, metadata !DIExpression()), !dbg !14268
  %7 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14269
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 11, !dbg !14270
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !14268
  %8 = load i32, i32* %this_pmp, align 4, !dbg !14271
  %neg = xor i32 %8, -1, !dbg !14272
  %9 = load i32, i32* %pmp_map.addr, align 4, !dbg !14273
  %and1 = and i32 %9, %neg, !dbg !14273
  store i32 %and1, i32* %pmp_map.addr, align 4, !dbg !14273
  %10 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14274
  call void @ata_ehi_clear_desc(%struct.ata_eh_info* %10) #9, !dbg !14275
  %11 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14276
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)) #9, !dbg !14277
  %12 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14278
  %err_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %12, i32 0, i32 2, !dbg !14279
  %13 = load i32, i32* %err_mask, align 4, !dbg !14280
  %or = or i32 %13, 1, !dbg !14280
  store i32 %or, i32* %err_mask, align 4, !dbg !14280
  %14 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !14281
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %14, i32 0, i32 3, !dbg !14282
  %15 = load i32, i32* %action, align 8, !dbg !14283
  %or2 = or i32 %15, 6, !dbg !14283
  store i32 %or2, i32* %action, align 8, !dbg !14283
  %16 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14284
  %call = call i32 @ata_link_abort(%struct.ata_link* %16) #9, !dbg !14285
  br label %if.end, !dbg !14286

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !14287

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %pmp, align 4, !dbg !14288
  %inc = add i32 %17, 1, !dbg !14288
  store i32 %inc, i32* %pmp, align 4, !dbg !14288
  br label %for.cond, !dbg !14289, !llvm.loop !14290

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14292
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__arch_hweight16(i32 %w) #2 !dbg !14293 {
entry:
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !14295, metadata !DIExpression()), !dbg !14297
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !14299, metadata !DIExpression()), !dbg !14300
  %w.addr = alloca i32, align 4
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !14301, metadata !DIExpression()), !dbg !14302
  %0 = load i32, i32* %w.addr, align 4, !dbg !14303
  %and = and i32 %0, 65535, !dbg !14304
  store i32 %and, i32* %w.addr.i, align 4
  %1 = load i32, i32* %w.addr.i, align 4, !dbg !14305
  %2 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %1) #12, !dbg !14306, !srcloc !14307
  store i32 %2, i32* %res.i, align 4, !dbg !14306
  %3 = load i32, i32* %res.i, align 4, !dbg !14308
  ret i32 %3, !dbg !14309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_req_q_empty(%struct.ata_port* %ap) #2 !dbg !14310 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %port_mmio = alloca i8*, align 8
  %in_ptr = alloca i32, align 4
  %out_ptr = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14311, metadata !DIExpression()), !dbg !14312
  call void @llvm.dbg.declare(metadata i8** %port_mmio, metadata !14313, metadata !DIExpression()), !dbg !14314
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14315
  %call = call i8* @mv_ap_base(%struct.ata_port* %0) #9, !dbg !14316
  store i8* %call, i8** %port_mmio, align 8, !dbg !14314
  call void @llvm.dbg.declare(metadata i32* %in_ptr, metadata !14317, metadata !DIExpression()), !dbg !14318
  call void @llvm.dbg.declare(metadata i32* %out_ptr, metadata !14319, metadata !DIExpression()), !dbg !14320
  %1 = load i8*, i8** %port_mmio, align 8, !dbg !14321
  %add.ptr = getelementptr i8, i8* %1, i64 20, !dbg !14322
  %call1 = call i32 @readl(i8* %add.ptr) #9, !dbg !14323
  %shr = lshr i32 %call1, 5, !dbg !14324
  %and = and i32 %shr, 31, !dbg !14325
  store i32 %and, i32* %in_ptr, align 4, !dbg !14326
  %2 = load i8*, i8** %port_mmio, align 8, !dbg !14327
  %add.ptr2 = getelementptr i8, i8* %2, i64 24, !dbg !14328
  %call3 = call i32 @readl(i8* %add.ptr2) #9, !dbg !14329
  %shr4 = lshr i32 %call3, 5, !dbg !14330
  %and5 = and i32 %shr4, 31, !dbg !14331
  store i32 %and5, i32* %out_ptr, align 4, !dbg !14332
  %3 = load i32, i32* %in_ptr, align 4, !dbg !14333
  %4 = load i32, i32* %out_ptr, align 4, !dbg !14334
  %cmp = icmp eq i32 %3, %4, !dbg !14335
  %conv = zext i1 %cmp to i32, !dbg !14335
  ret i32 %conv, !dbg !14336
}

; Function Attrs: noredzone
declare dso_local i32 @ata_link_abort(%struct.ata_link*) #1

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_write_flush(%struct.ata_link*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_handle_dev_err(%struct.ata_port* %ap, i32 %edma_err_cause) #2 !dbg !14337 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %edma_err_cause.addr = alloca i32, align 4
  %pp = alloca %struct.mv_port_priv*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14340, metadata !DIExpression()), !dbg !14341
  store i32 %edma_err_cause, i32* %edma_err_cause.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edma_err_cause.addr, metadata !14342, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.declare(metadata %struct.mv_port_priv** %pp, metadata !14344, metadata !DIExpression()), !dbg !14345
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14346
  %private_data = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 49, !dbg !14347
  %1 = load i8*, i8** %private_data, align 32, !dbg !14347
  %2 = bitcast i8* %1 to %struct.mv_port_priv*, !dbg !14346
  store %struct.mv_port_priv* %2, %struct.mv_port_priv** %pp, align 8, !dbg !14345
  %3 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !14348
  %pp_flags = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %3, i32 0, i32 8, !dbg !14350
  %4 = load i32, i32* %pp_flags, align 8, !dbg !14350
  %and = and i32 %4, 1, !dbg !14351
  %tobool = icmp ne i32 %and, 0, !dbg !14351
  br i1 %tobool, label %if.end, label %if.then, !dbg !14352

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14353
  br label %return, !dbg !14353

if.end:                                           ; preds = %entry
  %5 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !14354
  %pp_flags1 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %5, i32 0, i32 8, !dbg !14356
  %6 = load i32, i32* %pp_flags1, align 8, !dbg !14356
  %and2 = and i32 %6, 4, !dbg !14357
  %tobool3 = icmp ne i32 %and2, 0, !dbg !14357
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !14358

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14359
  br label %return, !dbg !14359

if.end5:                                          ; preds = %if.end
  %7 = load i32, i32* %edma_err_cause.addr, align 4, !dbg !14360
  %and6 = and i32 %7, 4, !dbg !14362
  %tobool7 = icmp ne i32 %and6, 0, !dbg !14362
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !14363

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !14364
  br label %return, !dbg !14364

if.end9:                                          ; preds = %if.end5
  %8 = load i32, i32* %edma_err_cause.addr, align 4, !dbg !14365
  %and10 = and i32 %8, -65101825, !dbg !14365
  store i32 %and10, i32* %edma_err_cause.addr, align 4, !dbg !14365
  %9 = load i32, i32* %edma_err_cause.addr, align 4, !dbg !14366
  %and11 = and i32 %9, -133, !dbg !14368
  %tobool12 = icmp ne i32 %and11, 0, !dbg !14368
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !14369

if.then13:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !14370
  br label %return, !dbg !14370

if.end14:                                         ; preds = %if.end9
  %10 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !14371
  %pp_flags15 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %10, i32 0, i32 8, !dbg !14373
  %11 = load i32, i32* %pp_flags15, align 8, !dbg !14373
  %and16 = and i32 %11, 2, !dbg !14374
  %tobool17 = icmp ne i32 %and16, 0, !dbg !14374
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !14375

if.then18:                                        ; preds = %if.end14
  %12 = load i32, i32* %edma_err_cause.addr, align 4, !dbg !14376
  %and19 = and i32 %12, 128, !dbg !14379
  %tobool20 = icmp ne i32 %and19, 0, !dbg !14379
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !14380

if.then21:                                        ; preds = %if.then18
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14381
  %14 = load i32, i32* %edma_err_cause.addr, align 4, !dbg !14381
  %15 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !14381
  %pp_flags22 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %15, i32 0, i32 8, !dbg !14381
  %16 = load i32, i32* %pp_flags22, align 8, !dbg !14381
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.mv_handle_dev_err, i64 0, i64 0), i32 %14, i32 %16) #9, !dbg !14381
  store i32 0, i32* %retval, align 4, !dbg !14383
  br label %return, !dbg !14383

if.end23:                                         ; preds = %if.then18
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14384
  %call = call i32 @mv_handle_fbs_ncq_dev_err(%struct.ata_port* %17) #9, !dbg !14385
  store i32 %call, i32* %retval, align 4, !dbg !14386
  br label %return, !dbg !14386

if.else:                                          ; preds = %if.end14
  %18 = load i32, i32* %edma_err_cause.addr, align 4, !dbg !14387
  %and24 = and i32 %18, 128, !dbg !14390
  %tobool25 = icmp ne i32 %and24, 0, !dbg !14390
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !14391

if.then26:                                        ; preds = %if.else
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14392
  %20 = load i32, i32* %edma_err_cause.addr, align 4, !dbg !14392
  %21 = load %struct.mv_port_priv*, %struct.mv_port_priv** %pp, align 8, !dbg !14392
  %pp_flags27 = getelementptr inbounds %struct.mv_port_priv, %struct.mv_port_priv* %21, i32 0, i32 8, !dbg !14392
  %22 = load i32, i32* %pp_flags27, align 8, !dbg !14392
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.mv_handle_dev_err, i64 0, i64 0), i32 %20, i32 %22) #9, !dbg !14392
  store i32 0, i32* %retval, align 4, !dbg !14394
  br label %return, !dbg !14394

if.end28:                                         ; preds = %if.else
  %23 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14395
  %call29 = call i32 @mv_handle_fbs_non_ncq_dev_err(%struct.ata_port* %23) #9, !dbg !14396
  store i32 %call29, i32* %retval, align 4, !dbg !14397
  br label %return, !dbg !14397

return:                                           ; preds = %if.end28, %if.then26, %if.end23, %if.then21, %if.then13, %if.then8, %if.then4, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !14398
  ret i32 %24, !dbg !14398
}

; Function Attrs: noredzone
declare dso_local i32 @sata_async_notification(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_ehi_hotplugged(%struct.ata_eh_info* %ehi) #2 !dbg !14399 {
entry:
  %ehi.addr = alloca %struct.ata_eh_info*, align 8
  store %struct.ata_eh_info* %ehi, %struct.ata_eh_info** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi.addr, metadata !14402, metadata !DIExpression()), !dbg !14403
  %0 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14404
  %probe_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %0, i32 0, i32 6, !dbg !14405
  %1 = load i32, i32* %probe_mask, align 8, !dbg !14406
  %or = or i32 %1, 3, !dbg !14406
  store i32 %or, i32* %probe_mask, align 8, !dbg !14406
  %2 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14407
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %2, i32 0, i32 5, !dbg !14408
  %3 = load i32, i32* %flags, align 4, !dbg !14409
  %or1 = or i32 %3, 1, !dbg !14409
  store i32 %or1, i32* %flags, align 4, !dbg !14409
  %4 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14410
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %4, i32 0, i32 3, !dbg !14411
  %5 = load i32, i32* %action, align 8, !dbg !14412
  %or2 = or i32 %5, 14, !dbg !14412
  store i32 %or2, i32* %action, align 8, !dbg !14412
  %6 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14413
  %err_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %6, i32 0, i32 2, !dbg !14414
  %7 = load i32, i32* %err_mask, align 4, !dbg !14415
  %or3 = or i32 %7, 16, !dbg !14415
  store i32 %or3, i32* %err_mask, align 4, !dbg !14415
  ret void, !dbg !14416
}

; Function Attrs: noredzone
declare dso_local i32 @ata_port_abort(%struct.ata_port*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_handle_fbs_non_ncq_dev_err(%struct.ata_port* %ap) #2 !dbg !14417 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14418, metadata !DIExpression()), !dbg !14419
  ret i32 0, !dbg !14420
}

; Function Attrs: noredzone
declare dso_local i32 @ata_scsi_ioctl(%struct.scsi_device*, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_scsi_queuecmd(%struct.Scsi_Host*, %struct.scsi_cmnd*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_scsi_slave_config(%struct.scsi_device*) #1

; Function Attrs: noredzone
declare dso_local void @ata_scsi_slave_destroy(%struct.scsi_device*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @ata_scsi_dma_need_drain(%struct.request*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_std_bios_param(%struct.scsi_device*, %struct.block_device*, i64, i32*) #1

; Function Attrs: noredzone
declare dso_local void @ata_scsi_unlock_native_capacity(%struct.scsi_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_scsi_change_queue_depth(%struct.scsi_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !14421 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14424, metadata !DIExpression()), !dbg !14425
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14426
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !14427
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #9, !dbg !14428
  ret i8* %call, !dbg !14429
}

; Function Attrs: noredzone
declare dso_local i32 @ata_pci_device_do_resume(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @ata_host_resume(%struct.ata_host*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !14430 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14433, metadata !DIExpression()), !dbg !14434
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14435
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !14436
  %1 = load i8*, i8** %driver_data, align 8, !dbg !14436
  ret i8* %1, !dbg !14437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_platform_probe(%struct.platform_device* %pdev) #2 !dbg !7967 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %mv_platform_data = alloca %struct.mv_sata_platform_data*, align 8
  %dram = alloca %struct.mbus_dram_target_info*, align 8
  %ppi = alloca [2 x %struct.ata_port_info*], align 16
  %host = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %res = alloca %struct.resource*, align 8
  %n_ports = alloca i32, align 4
  %irq = alloca i32, align 4
  %rc = alloca i32, align 4
  %port = alloca i32, align 4
  %port_number = alloca [16 x i8], align 16
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !14438, metadata !DIExpression()), !dbg !14439
  call void @llvm.dbg.declare(metadata %struct.mv_sata_platform_data** %mv_platform_data, metadata !14440, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.declare(metadata %struct.mbus_dram_target_info** %dram, metadata !14448, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.declare(metadata [2 x %struct.ata_port_info*]* %ppi, metadata !14465, metadata !DIExpression()), !dbg !14466
  %0 = bitcast [2 x %struct.ata_port_info*]* %ppi to i8*, !dbg !14466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([2 x %struct.ata_port_info*]* @__const.mv_platform_probe.ppi to i8*), i64 16, i1 false), !dbg !14466
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !14467, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !14469, metadata !DIExpression()), !dbg !14470
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !14471, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.declare(metadata i32* %n_ports, metadata !14473, metadata !DIExpression()), !dbg !14474
  store i32 0, i32* %n_ports, align 4, !dbg !14474
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !14475, metadata !DIExpression()), !dbg !14476
  store i32 0, i32* %irq, align 4, !dbg !14476
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !14477, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.declare(metadata i32* %port, metadata !14479, metadata !DIExpression()), !dbg !14480
  %1 = load i8, i8* @mv_platform_probe.__print_once, align 1, !dbg !14481
  %tobool = trunc i8 %1 to i1, !dbg !14481
  br i1 %tobool, label %if.end, label %if.then, !dbg !14484

if.then:                                          ; preds = %entry
  store i8 1, i8* @mv_platform_probe.__print_once, align 1, !dbg !14485
  %2 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14485
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %2, i32 0, i32 3, !dbg !14485
  call void @ata_print_version(%struct.device* %dev, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !14485
  br label %if.end, !dbg !14485

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14487
  %num_resources = getelementptr inbounds %struct.platform_device, %struct.platform_device* %3, i32 0, i32 6, !dbg !14487
  %4 = load i32, i32* %num_resources, align 8, !dbg !14487
  %cmp = icmp ne i32 %4, 2, !dbg !14487
  %lnot = xor i1 %cmp, true, !dbg !14487
  %lnot1 = xor i1 %lnot, true, !dbg !14487
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14487
  %conv = sext i32 %lnot.ext to i64, !dbg !14487
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14487
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !14489

if.then3:                                         ; preds = %if.end
  %5 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14490
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !14490
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !14490
  store i32 -22, i32* %retval, align 4, !dbg !14492
  br label %return, !dbg !14492

if.end5:                                          ; preds = %if.end
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14493
  %call = call %struct.resource* @platform_get_resource(%struct.platform_device* %6, i32 512, i32 0) #9, !dbg !14494
  store %struct.resource* %call, %struct.resource** %res, align 8, !dbg !14495
  %7 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !14496
  %cmp6 = icmp eq %struct.resource* %7, null, !dbg !14498
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !14499

if.then8:                                         ; preds = %if.end5
  store i32 -22, i32* %retval, align 4, !dbg !14500
  br label %return, !dbg !14500

if.end9:                                          ; preds = %if.end5
  %8 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14501
  %dev10 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 3, !dbg !14503
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 23, !dbg !14504
  %9 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !14504
  %tobool11 = icmp ne %struct.device_node* %9, null, !dbg !14501
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !14505

if.then12:                                        ; preds = %if.end9
  %10 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14506
  %dev13 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %10, i32 0, i32 3, !dbg !14508
  %of_node14 = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 23, !dbg !14509
  %11 = load %struct.device_node*, %struct.device_node** %of_node14, align 8, !dbg !14509
  %call15 = call i32 @of_property_read_u32(%struct.device_node* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i32* %n_ports) #9, !dbg !14510
  store i32 %call15, i32* %rc, align 4, !dbg !14511
  %12 = load i32, i32* %rc, align 4, !dbg !14512
  %tobool16 = icmp ne i32 %12, 0, !dbg !14512
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !14514

if.then17:                                        ; preds = %if.then12
  %13 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14515
  %dev18 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %13, i32 0, i32 3, !dbg !14515
  %14 = load i32, i32* %rc, align 4, !dbg !14515
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev18, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.57, i64 0, i64 0), i32 %14) #10, !dbg !14515
  %15 = load i32, i32* %rc, align 4, !dbg !14517
  store i32 %15, i32* %retval, align 4, !dbg !14518
  br label %return, !dbg !14518

if.end19:                                         ; preds = %if.then12
  %16 = load i32, i32* %n_ports, align 4, !dbg !14519
  %cmp20 = icmp sle i32 %16, 0, !dbg !14521
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !14522

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14523
  %dev23 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %17, i32 0, i32 3, !dbg !14523
  %18 = load i32, i32* %n_ports, align 4, !dbg !14523
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.58, i64 0, i64 0), i32 %18) #10, !dbg !14523
  store i32 -22, i32* %retval, align 4, !dbg !14525
  br label %return, !dbg !14525

if.end24:                                         ; preds = %if.end19
  %19 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14526
  %dev25 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %19, i32 0, i32 3, !dbg !14527
  %of_node26 = getelementptr inbounds %struct.device, %struct.device* %dev25, i32 0, i32 23, !dbg !14528
  %20 = load %struct.device_node*, %struct.device_node** %of_node26, align 8, !dbg !14528
  %call27 = call i32 @irq_of_parse_and_map(%struct.device_node* %20, i32 0) #9, !dbg !14529
  store i32 %call27, i32* %irq, align 4, !dbg !14530
  br label %if.end32, !dbg !14531

if.else:                                          ; preds = %if.end9
  %21 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14532
  %dev28 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %21, i32 0, i32 3, !dbg !14534
  %call29 = call i8* @dev_get_platdata(%struct.device* %dev28) #9, !dbg !14535
  %22 = bitcast i8* %call29 to %struct.mv_sata_platform_data*, !dbg !14535
  store %struct.mv_sata_platform_data* %22, %struct.mv_sata_platform_data** %mv_platform_data, align 8, !dbg !14536
  %23 = load %struct.mv_sata_platform_data*, %struct.mv_sata_platform_data** %mv_platform_data, align 8, !dbg !14537
  %n_ports30 = getelementptr inbounds %struct.mv_sata_platform_data, %struct.mv_sata_platform_data* %23, i32 0, i32 0, !dbg !14538
  %24 = load i32, i32* %n_ports30, align 4, !dbg !14538
  store i32 %24, i32* %n_ports, align 4, !dbg !14539
  %25 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14540
  %call31 = call i32 @platform_get_irq(%struct.platform_device* %25, i32 0) #9, !dbg !14541
  store i32 %call31, i32* %irq, align 4, !dbg !14542
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.end24
  %26 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14543
  %dev33 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %26, i32 0, i32 3, !dbg !14544
  %arraydecay = getelementptr inbounds [2 x %struct.ata_port_info*], [2 x %struct.ata_port_info*]* %ppi, i64 0, i64 0, !dbg !14545
  %27 = load i32, i32* %n_ports, align 4, !dbg !14546
  %call34 = call %struct.ata_host* @ata_host_alloc_pinfo(%struct.device* %dev33, %struct.ata_port_info** %arraydecay, i32 %27) #9, !dbg !14547
  store %struct.ata_host* %call34, %struct.ata_host** %host, align 8, !dbg !14548
  %28 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14549
  %dev35 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %28, i32 0, i32 3, !dbg !14550
  %call36 = call i8* @devm_kzalloc(%struct.device* %dev35, i64 184, i32 3264) #9, !dbg !14551
  %29 = bitcast i8* %call36 to %struct.mv_host_priv*, !dbg !14551
  store %struct.mv_host_priv* %29, %struct.mv_host_priv** %hpriv, align 8, !dbg !14552
  %30 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14553
  %tobool37 = icmp ne %struct.ata_host* %30, null, !dbg !14553
  br i1 %tobool37, label %lor.lhs.false, label %if.then39, !dbg !14555

lor.lhs.false:                                    ; preds = %if.end32
  %31 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14556
  %tobool38 = icmp ne %struct.mv_host_priv* %31, null, !dbg !14556
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !14557

if.then39:                                        ; preds = %lor.lhs.false, %if.end32
  store i32 -12, i32* %retval, align 4, !dbg !14558
  br label %return, !dbg !14558

if.end40:                                         ; preds = %lor.lhs.false
  %32 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14559
  %dev41 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %32, i32 0, i32 3, !dbg !14560
  %33 = load i32, i32* %n_ports, align 4, !dbg !14561
  %conv42 = sext i32 %33 to i64, !dbg !14561
  %call43 = call i8* @devm_kcalloc(%struct.device* %dev41, i64 %conv42, i64 8, i32 3264) #9, !dbg !14562
  %34 = bitcast i8* %call43 to %struct.clk**, !dbg !14562
  %35 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14563
  %port_clks = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %35, i32 0, i32 13, !dbg !14564
  store %struct.clk** %34, %struct.clk*** %port_clks, align 8, !dbg !14565
  %36 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14566
  %port_clks44 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %36, i32 0, i32 13, !dbg !14568
  %37 = load %struct.clk**, %struct.clk*** %port_clks44, align 8, !dbg !14568
  %tobool45 = icmp ne %struct.clk** %37, null, !dbg !14566
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !14569

if.then46:                                        ; preds = %if.end40
  store i32 -12, i32* %retval, align 4, !dbg !14570
  br label %return, !dbg !14570

if.end47:                                         ; preds = %if.end40
  %38 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14571
  %dev48 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %38, i32 0, i32 3, !dbg !14572
  %39 = load i32, i32* %n_ports, align 4, !dbg !14573
  %conv49 = sext i32 %39 to i64, !dbg !14573
  %call50 = call i8* @devm_kcalloc(%struct.device* %dev48, i64 %conv49, i64 8, i32 3264) #9, !dbg !14574
  %40 = bitcast i8* %call50 to %struct.phy**, !dbg !14574
  %41 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14575
  %port_phys = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %41, i32 0, i32 14, !dbg !14576
  store %struct.phy** %40, %struct.phy*** %port_phys, align 8, !dbg !14577
  %42 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14578
  %port_phys51 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %42, i32 0, i32 14, !dbg !14580
  %43 = load %struct.phy**, %struct.phy*** %port_phys51, align 8, !dbg !14580
  %tobool52 = icmp ne %struct.phy** %43, null, !dbg !14578
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !14581

if.then53:                                        ; preds = %if.end47
  store i32 -12, i32* %retval, align 4, !dbg !14582
  br label %return, !dbg !14582

if.end54:                                         ; preds = %if.end47
  %44 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14583
  %45 = bitcast %struct.mv_host_priv* %44 to i8*, !dbg !14583
  %46 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14584
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %46, i32 0, i32 5, !dbg !14585
  store i8* %45, i8** %private_data, align 8, !dbg !14586
  %47 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14587
  %board_idx = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %47, i32 0, i32 1, !dbg !14588
  store i32 7, i32* %board_idx, align 4, !dbg !14589
  %48 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14590
  %iomap = getelementptr inbounds %struct.ata_host, %struct.ata_host* %48, i32 0, i32 2, !dbg !14591
  store i8** null, i8*** %iomap, align 8, !dbg !14592
  %49 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14593
  %dev55 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %49, i32 0, i32 3, !dbg !14594
  %50 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !14595
  %start = getelementptr inbounds %struct.resource, %struct.resource* %50, i32 0, i32 0, !dbg !14596
  %51 = load i64, i64* %start, align 8, !dbg !14596
  %52 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !14597
  %call56 = call i64 @resource_size(%struct.resource* %52) #9, !dbg !14598
  %call57 = call i8* @devm_ioremap(%struct.device* %dev55, i64 %51, i64 %call56) #9, !dbg !14599
  %53 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14600
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %53, i32 0, i32 6, !dbg !14601
  store i8* %call57, i8** %base, align 8, !dbg !14602
  %54 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14603
  %base58 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %54, i32 0, i32 6, !dbg !14605
  %55 = load i8*, i8** %base58, align 8, !dbg !14605
  %tobool59 = icmp ne i8* %55, null, !dbg !14603
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !14606

if.then60:                                        ; preds = %if.end54
  store i32 -12, i32* %retval, align 4, !dbg !14607
  br label %return, !dbg !14607

if.end61:                                         ; preds = %if.end54
  %56 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14608
  %base62 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %56, i32 0, i32 6, !dbg !14609
  %57 = load i8*, i8** %base62, align 8, !dbg !14610
  %add.ptr = getelementptr i8, i8* %57, i64 -131072, !dbg !14610
  store i8* %add.ptr, i8** %base62, align 8, !dbg !14610
  %58 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14611
  %dev63 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %58, i32 0, i32 3, !dbg !14612
  %call64 = call %struct.clk* @clk_get(%struct.device* %dev63, i8* null) #9, !dbg !14613
  %59 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14614
  %clk = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %59, i32 0, i32 12, !dbg !14615
  store %struct.clk* %call64, %struct.clk** %clk, align 8, !dbg !14616
  %60 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14617
  %clk65 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %60, i32 0, i32 12, !dbg !14619
  %61 = load %struct.clk*, %struct.clk** %clk65, align 8, !dbg !14619
  %62 = bitcast %struct.clk* %61 to i8*, !dbg !14617
  %call66 = call zeroext i1 @IS_ERR(i8* %62) #9, !dbg !14620
  br i1 %call66, label %if.then67, label %if.else69, !dbg !14621

if.then67:                                        ; preds = %if.end61
  %63 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14622
  %dev68 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %63, i32 0, i32 3, !dbg !14622
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev68, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !14622
  br label %if.end72, !dbg !14622

if.else69:                                        ; preds = %if.end61
  %64 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14623
  %clk70 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %64, i32 0, i32 12, !dbg !14624
  %65 = load %struct.clk*, %struct.clk** %clk70, align 8, !dbg !14624
  %call71 = call i32 @clk_prepare_enable(%struct.clk* %65) #9, !dbg !14625
  br label %if.end72

if.end72:                                         ; preds = %if.else69, %if.then67
  store i32 0, i32* %port, align 4, !dbg !14626
  br label %for.cond, !dbg !14628

for.cond:                                         ; preds = %for.inc, %if.end72
  %66 = load i32, i32* %port, align 4, !dbg !14629
  %67 = load i32, i32* %n_ports, align 4, !dbg !14631
  %cmp73 = icmp slt i32 %66, %67, !dbg !14632
  br i1 %cmp73, label %for.body, label %for.end, !dbg !14633

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [16 x i8]* %port_number, metadata !14634, metadata !DIExpression()), !dbg !14636
  %arraydecay75 = getelementptr inbounds [16 x i8], [16 x i8]* %port_number, i64 0, i64 0, !dbg !14637
  %68 = load i32, i32* %port, align 4, !dbg !14638
  %call76 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay75, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0), i32 %68) #9, !dbg !14639
  %69 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14640
  %dev77 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %69, i32 0, i32 3, !dbg !14641
  %arraydecay78 = getelementptr inbounds [16 x i8], [16 x i8]* %port_number, i64 0, i64 0, !dbg !14642
  %call79 = call %struct.clk* @clk_get(%struct.device* %dev77, i8* %arraydecay78) #9, !dbg !14643
  %70 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14644
  %port_clks80 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %70, i32 0, i32 13, !dbg !14645
  %71 = load %struct.clk**, %struct.clk*** %port_clks80, align 8, !dbg !14645
  %72 = load i32, i32* %port, align 4, !dbg !14646
  %idxprom = sext i32 %72 to i64, !dbg !14644
  %arrayidx = getelementptr %struct.clk*, %struct.clk** %71, i64 %idxprom, !dbg !14644
  store %struct.clk* %call79, %struct.clk** %arrayidx, align 8, !dbg !14647
  %73 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14648
  %port_clks81 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %73, i32 0, i32 13, !dbg !14650
  %74 = load %struct.clk**, %struct.clk*** %port_clks81, align 8, !dbg !14650
  %75 = load i32, i32* %port, align 4, !dbg !14651
  %idxprom82 = sext i32 %75 to i64, !dbg !14648
  %arrayidx83 = getelementptr %struct.clk*, %struct.clk** %74, i64 %idxprom82, !dbg !14648
  %76 = load %struct.clk*, %struct.clk** %arrayidx83, align 8, !dbg !14648
  %77 = bitcast %struct.clk* %76 to i8*, !dbg !14648
  %call84 = call zeroext i1 @IS_ERR(i8* %77) #9, !dbg !14652
  br i1 %call84, label %if.end90, label %if.then85, !dbg !14653

if.then85:                                        ; preds = %for.body
  %78 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14654
  %port_clks86 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %78, i32 0, i32 13, !dbg !14655
  %79 = load %struct.clk**, %struct.clk*** %port_clks86, align 8, !dbg !14655
  %80 = load i32, i32* %port, align 4, !dbg !14656
  %idxprom87 = sext i32 %80 to i64, !dbg !14654
  %arrayidx88 = getelementptr %struct.clk*, %struct.clk** %79, i64 %idxprom87, !dbg !14654
  %81 = load %struct.clk*, %struct.clk** %arrayidx88, align 8, !dbg !14654
  %call89 = call i32 @clk_prepare_enable(%struct.clk* %81) #9, !dbg !14657
  br label %if.end90, !dbg !14657

if.end90:                                         ; preds = %if.then85, %for.body
  %arraydecay91 = getelementptr inbounds [16 x i8], [16 x i8]* %port_number, i64 0, i64 0, !dbg !14658
  %82 = load i32, i32* %port, align 4, !dbg !14659
  %call92 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay91, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), i32 %82) #9, !dbg !14660
  %83 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14661
  %dev93 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %83, i32 0, i32 3, !dbg !14662
  %arraydecay94 = getelementptr inbounds [16 x i8], [16 x i8]* %port_number, i64 0, i64 0, !dbg !14663
  %call95 = call %struct.phy* @devm_phy_optional_get(%struct.device* %dev93, i8* %arraydecay94) #9, !dbg !14664
  %84 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14665
  %port_phys96 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %84, i32 0, i32 14, !dbg !14666
  %85 = load %struct.phy**, %struct.phy*** %port_phys96, align 8, !dbg !14666
  %86 = load i32, i32* %port, align 4, !dbg !14667
  %idxprom97 = sext i32 %86 to i64, !dbg !14665
  %arrayidx98 = getelementptr %struct.phy*, %struct.phy** %85, i64 %idxprom97, !dbg !14665
  store %struct.phy* %call95, %struct.phy** %arrayidx98, align 8, !dbg !14668
  %87 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14669
  %port_phys99 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %87, i32 0, i32 14, !dbg !14671
  %88 = load %struct.phy**, %struct.phy*** %port_phys99, align 8, !dbg !14671
  %89 = load i32, i32* %port, align 4, !dbg !14672
  %idxprom100 = sext i32 %89 to i64, !dbg !14669
  %arrayidx101 = getelementptr %struct.phy*, %struct.phy** %88, i64 %idxprom100, !dbg !14669
  %90 = load %struct.phy*, %struct.phy** %arrayidx101, align 8, !dbg !14669
  %91 = bitcast %struct.phy* %90 to i8*, !dbg !14669
  %call102 = call zeroext i1 @IS_ERR(i8* %91) #9, !dbg !14673
  br i1 %call102, label %if.then103, label %if.else118, !dbg !14674

if.then103:                                       ; preds = %if.end90
  %92 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14675
  %port_phys104 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %92, i32 0, i32 14, !dbg !14677
  %93 = load %struct.phy**, %struct.phy*** %port_phys104, align 8, !dbg !14677
  %94 = load i32, i32* %port, align 4, !dbg !14678
  %idxprom105 = sext i32 %94 to i64, !dbg !14675
  %arrayidx106 = getelementptr %struct.phy*, %struct.phy** %93, i64 %idxprom105, !dbg !14675
  %95 = load %struct.phy*, %struct.phy** %arrayidx106, align 8, !dbg !14675
  %96 = bitcast %struct.phy* %95 to i8*, !dbg !14675
  %call107 = call i64 @PTR_ERR(i8* %96) #9, !dbg !14679
  %conv108 = trunc i64 %call107 to i32, !dbg !14679
  store i32 %conv108, i32* %rc, align 4, !dbg !14680
  %97 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14681
  %port_phys109 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %97, i32 0, i32 14, !dbg !14682
  %98 = load %struct.phy**, %struct.phy*** %port_phys109, align 8, !dbg !14682
  %99 = load i32, i32* %port, align 4, !dbg !14683
  %idxprom110 = sext i32 %99 to i64, !dbg !14681
  %arrayidx111 = getelementptr %struct.phy*, %struct.phy** %98, i64 %idxprom110, !dbg !14681
  store %struct.phy* null, %struct.phy** %arrayidx111, align 8, !dbg !14684
  %100 = load i32, i32* %rc, align 4, !dbg !14685
  %cmp112 = icmp ne i32 %100, -517, !dbg !14687
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !14688

if.then114:                                       ; preds = %if.then103
  %101 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14689
  %dev115 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %101, i32 0, i32 3, !dbg !14689
  %102 = load i32, i32* %rc, align 4, !dbg !14689
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev115, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i64 0, i64 0), i32 %102) #10, !dbg !14689
  br label %if.end116, !dbg !14689

if.end116:                                        ; preds = %if.then114, %if.then103
  %103 = load i32, i32* %port, align 4, !dbg !14690
  %104 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14691
  %n_ports117 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %104, i32 0, i32 5, !dbg !14692
  store i32 %103, i32* %n_ports117, align 8, !dbg !14693
  br label %err, !dbg !14694

if.else118:                                       ; preds = %if.end90
  %105 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14695
  %port_phys119 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %105, i32 0, i32 14, !dbg !14696
  %106 = load %struct.phy**, %struct.phy*** %port_phys119, align 8, !dbg !14696
  %107 = load i32, i32* %port, align 4, !dbg !14697
  %idxprom120 = sext i32 %107 to i64, !dbg !14695
  %arrayidx121 = getelementptr %struct.phy*, %struct.phy** %106, i64 %idxprom120, !dbg !14695
  %108 = load %struct.phy*, %struct.phy** %arrayidx121, align 8, !dbg !14695
  %call122 = call i32 @phy_power_on(%struct.phy* %108) #9, !dbg !14698
  br label %if.end123

if.end123:                                        ; preds = %if.else118
  br label %for.inc, !dbg !14699

for.inc:                                          ; preds = %if.end123
  %109 = load i32, i32* %port, align 4, !dbg !14700
  %inc = add i32 %109, 1, !dbg !14700
  store i32 %inc, i32* %port, align 4, !dbg !14700
  br label %for.cond, !dbg !14701, !llvm.loop !14702

for.end:                                          ; preds = %for.cond
  %110 = load i32, i32* %n_ports, align 4, !dbg !14704
  %111 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14705
  %n_ports124 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %111, i32 0, i32 5, !dbg !14706
  store i32 %110, i32* %n_ports124, align 8, !dbg !14707
  %call125 = call %struct.mbus_dram_target_info* @mv_mbus_dram_info() #9, !dbg !14708
  store %struct.mbus_dram_target_info* %call125, %struct.mbus_dram_target_info** %dram, align 8, !dbg !14709
  %112 = load %struct.mbus_dram_target_info*, %struct.mbus_dram_target_info** %dram, align 8, !dbg !14710
  %tobool126 = icmp ne %struct.mbus_dram_target_info* %112, null, !dbg !14710
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !14712

if.then127:                                       ; preds = %for.end
  %113 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14713
  %114 = load %struct.mbus_dram_target_info*, %struct.mbus_dram_target_info** %dram, align 8, !dbg !14714
  call void @mv_conf_mbus_windows(%struct.mv_host_priv* %113, %struct.mbus_dram_target_info* %114) #9, !dbg !14715
  br label %if.end128, !dbg !14715

if.end128:                                        ; preds = %if.then127, %for.end
  %115 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14716
  %116 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14717
  %dev129 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %116, i32 0, i32 3, !dbg !14718
  %call130 = call i32 @mv_create_dma_pools(%struct.mv_host_priv* %115, %struct.device* %dev129) #9, !dbg !14719
  store i32 %call130, i32* %rc, align 4, !dbg !14720
  %117 = load i32, i32* %rc, align 4, !dbg !14721
  %tobool131 = icmp ne i32 %117, 0, !dbg !14721
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !14723

if.then132:                                       ; preds = %if.end128
  br label %err, !dbg !14724

if.end133:                                        ; preds = %if.end128
  %118 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14725
  %dev134 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %118, i32 0, i32 3, !dbg !14727
  %of_node135 = getelementptr inbounds %struct.device, %struct.device* %dev134, i32 0, i32 23, !dbg !14728
  %119 = load %struct.device_node*, %struct.device_node** %of_node135, align 8, !dbg !14728
  %tobool136 = icmp ne %struct.device_node* %119, null, !dbg !14725
  br i1 %tobool136, label %land.lhs.true, label %if.end142, !dbg !14729

land.lhs.true:                                    ; preds = %if.end133
  %120 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14730
  %dev137 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %120, i32 0, i32 3, !dbg !14731
  %of_node138 = getelementptr inbounds %struct.device, %struct.device* %dev137, i32 0, i32 23, !dbg !14732
  %121 = load %struct.device_node*, %struct.device_node** %of_node138, align 8, !dbg !14732
  %call139 = call i32 @of_device_is_compatible(%struct.device_node* %121, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i64 0, i64 0)) #9, !dbg !14733
  %tobool140 = icmp ne i32 %call139, 0, !dbg !14733
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !14734

if.then141:                                       ; preds = %land.lhs.true
  %122 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14735
  %hp_flags = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %122, i32 0, i32 0, !dbg !14736
  %123 = load i32, i32* %hp_flags, align 8, !dbg !14737
  %or = or i32 %123, 8192, !dbg !14737
  store i32 %or, i32* %hp_flags, align 8, !dbg !14737
  br label %if.end142, !dbg !14735

if.end142:                                        ; preds = %if.then141, %land.lhs.true, %if.end133
  %124 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14738
  %call143 = call i32 @mv_init_host(%struct.ata_host* %124) #9, !dbg !14739
  store i32 %call143, i32* %rc, align 4, !dbg !14740
  %125 = load i32, i32* %rc, align 4, !dbg !14741
  %tobool144 = icmp ne i32 %125, 0, !dbg !14741
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !14743

if.then145:                                       ; preds = %if.end142
  br label %err, !dbg !14744

if.end146:                                        ; preds = %if.end142
  %126 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14745
  %dev147 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %126, i32 0, i32 3, !dbg !14745
  %127 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14745
  %n_ports148 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %127, i32 0, i32 3, !dbg !14745
  %128 = load i32, i32* %n_ports148, align 8, !dbg !14745
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev147, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i64 0, i64 0), i32 32, i32 %128) #10, !dbg !14745
  %129 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14746
  %130 = load i32, i32* %irq, align 4, !dbg !14747
  %call149 = call i32 @ata_host_activate(%struct.ata_host* %129, i32 %130, i32 (i32, i8*)* @mv_interrupt, i64 128, %struct.scsi_host_template* @mv6_sht) #9, !dbg !14748
  store i32 %call149, i32* %rc, align 4, !dbg !14749
  %131 = load i32, i32* %rc, align 4, !dbg !14750
  %tobool150 = icmp ne i32 %131, 0, !dbg !14750
  br i1 %tobool150, label %if.end152, label %if.then151, !dbg !14752

if.then151:                                       ; preds = %if.end146
  store i32 0, i32* %retval, align 4, !dbg !14753
  br label %return, !dbg !14753

if.end152:                                        ; preds = %if.end146
  br label %err, !dbg !14750

err:                                              ; preds = %if.end152, %if.then145, %if.then132, %if.end116
  call void @llvm.dbg.label(metadata !14754), !dbg !14755
  %132 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14756
  %clk153 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %132, i32 0, i32 12, !dbg !14758
  %133 = load %struct.clk*, %struct.clk** %clk153, align 8, !dbg !14758
  %134 = bitcast %struct.clk* %133 to i8*, !dbg !14756
  %call154 = call zeroext i1 @IS_ERR(i8* %134) #9, !dbg !14759
  br i1 %call154, label %if.end158, label %if.then155, !dbg !14760

if.then155:                                       ; preds = %err
  %135 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14761
  %clk156 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %135, i32 0, i32 12, !dbg !14763
  %136 = load %struct.clk*, %struct.clk** %clk156, align 8, !dbg !14763
  call void @clk_disable_unprepare(%struct.clk* %136) #9, !dbg !14764
  %137 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14765
  %clk157 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %137, i32 0, i32 12, !dbg !14766
  %138 = load %struct.clk*, %struct.clk** %clk157, align 8, !dbg !14766
  call void @clk_put(%struct.clk* %138) #9, !dbg !14767
  br label %if.end158, !dbg !14768

if.end158:                                        ; preds = %if.then155, %err
  store i32 0, i32* %port, align 4, !dbg !14769
  br label %for.cond159, !dbg !14771

for.cond159:                                      ; preds = %for.inc180, %if.end158
  %139 = load i32, i32* %port, align 4, !dbg !14772
  %140 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14774
  %n_ports160 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %140, i32 0, i32 5, !dbg !14775
  %141 = load i32, i32* %n_ports160, align 8, !dbg !14775
  %cmp161 = icmp slt i32 %139, %141, !dbg !14776
  br i1 %cmp161, label %for.body163, label %for.end182, !dbg !14777

for.body163:                                      ; preds = %for.cond159
  %142 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14778
  %port_clks164 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %142, i32 0, i32 13, !dbg !14781
  %143 = load %struct.clk**, %struct.clk*** %port_clks164, align 8, !dbg !14781
  %144 = load i32, i32* %port, align 4, !dbg !14782
  %idxprom165 = sext i32 %144 to i64, !dbg !14778
  %arrayidx166 = getelementptr %struct.clk*, %struct.clk** %143, i64 %idxprom165, !dbg !14778
  %145 = load %struct.clk*, %struct.clk** %arrayidx166, align 8, !dbg !14778
  %146 = bitcast %struct.clk* %145 to i8*, !dbg !14778
  %call167 = call zeroext i1 @IS_ERR(i8* %146) #9, !dbg !14783
  br i1 %call167, label %if.end175, label %if.then168, !dbg !14784

if.then168:                                       ; preds = %for.body163
  %147 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14785
  %port_clks169 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %147, i32 0, i32 13, !dbg !14787
  %148 = load %struct.clk**, %struct.clk*** %port_clks169, align 8, !dbg !14787
  %149 = load i32, i32* %port, align 4, !dbg !14788
  %idxprom170 = sext i32 %149 to i64, !dbg !14785
  %arrayidx171 = getelementptr %struct.clk*, %struct.clk** %148, i64 %idxprom170, !dbg !14785
  %150 = load %struct.clk*, %struct.clk** %arrayidx171, align 8, !dbg !14785
  call void @clk_disable_unprepare(%struct.clk* %150) #9, !dbg !14789
  %151 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14790
  %port_clks172 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %151, i32 0, i32 13, !dbg !14791
  %152 = load %struct.clk**, %struct.clk*** %port_clks172, align 8, !dbg !14791
  %153 = load i32, i32* %port, align 4, !dbg !14792
  %idxprom173 = sext i32 %153 to i64, !dbg !14790
  %arrayidx174 = getelementptr %struct.clk*, %struct.clk** %152, i64 %idxprom173, !dbg !14790
  %154 = load %struct.clk*, %struct.clk** %arrayidx174, align 8, !dbg !14790
  call void @clk_put(%struct.clk* %154) #9, !dbg !14793
  br label %if.end175, !dbg !14794

if.end175:                                        ; preds = %if.then168, %for.body163
  %155 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14795
  %port_phys176 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %155, i32 0, i32 14, !dbg !14796
  %156 = load %struct.phy**, %struct.phy*** %port_phys176, align 8, !dbg !14796
  %157 = load i32, i32* %port, align 4, !dbg !14797
  %idxprom177 = sext i32 %157 to i64, !dbg !14795
  %arrayidx178 = getelementptr %struct.phy*, %struct.phy** %156, i64 %idxprom177, !dbg !14795
  %158 = load %struct.phy*, %struct.phy** %arrayidx178, align 8, !dbg !14795
  %call179 = call i32 @phy_power_off(%struct.phy* %158) #9, !dbg !14798
  br label %for.inc180, !dbg !14799

for.inc180:                                       ; preds = %if.end175
  %159 = load i32, i32* %port, align 4, !dbg !14800
  %inc181 = add i32 %159, 1, !dbg !14800
  store i32 %inc181, i32* %port, align 4, !dbg !14800
  br label %for.cond159, !dbg !14801, !llvm.loop !14802

for.end182:                                       ; preds = %for.cond159
  %160 = load i32, i32* %rc, align 4, !dbg !14804
  store i32 %160, i32* %retval, align 4, !dbg !14805
  br label %return, !dbg !14805

return:                                           ; preds = %for.end182, %if.then151, %if.then60, %if.then53, %if.then46, %if.then39, %if.then22, %if.then17, %if.then8, %if.then3
  %161 = load i32, i32* %retval, align 4, !dbg !14806
  ret i32 %161, !dbg !14806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_platform_remove(%struct.platform_device* %pdev) #2 !dbg !14807 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %host = alloca %struct.ata_host*, align 8
  %hpriv = alloca %struct.mv_host_priv*, align 8
  %port = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !14810, metadata !DIExpression()), !dbg !14811
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14812
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #9, !dbg !14813
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !14813
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !14811
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !14814, metadata !DIExpression()), !dbg !14815
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14816
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %2, i32 0, i32 5, !dbg !14817
  %3 = load i8*, i8** %private_data, align 8, !dbg !14817
  %4 = bitcast i8* %3 to %struct.mv_host_priv*, !dbg !14816
  store %struct.mv_host_priv* %4, %struct.mv_host_priv** %hpriv, align 8, !dbg !14815
  call void @llvm.dbg.declare(metadata i32* %port, metadata !14818, metadata !DIExpression()), !dbg !14819
  %5 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14820
  call void @ata_host_detach(%struct.ata_host* %5) #9, !dbg !14821
  %6 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14822
  %clk = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %6, i32 0, i32 12, !dbg !14824
  %7 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !14824
  %8 = bitcast %struct.clk* %7 to i8*, !dbg !14822
  %call1 = call zeroext i1 @IS_ERR(i8* %8) #9, !dbg !14825
  br i1 %call1, label %if.end, label %if.then, !dbg !14826

if.then:                                          ; preds = %entry
  %9 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14827
  %clk2 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %9, i32 0, i32 12, !dbg !14829
  %10 = load %struct.clk*, %struct.clk** %clk2, align 8, !dbg !14829
  call void @clk_disable_unprepare(%struct.clk* %10) #9, !dbg !14830
  %11 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14831
  %clk3 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %11, i32 0, i32 12, !dbg !14832
  %12 = load %struct.clk*, %struct.clk** %clk3, align 8, !dbg !14832
  call void @clk_put(%struct.clk* %12) #9, !dbg !14833
  br label %if.end, !dbg !14834

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %port, align 4, !dbg !14835
  br label %for.cond, !dbg !14837

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %port, align 4, !dbg !14838
  %14 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14840
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %14, i32 0, i32 3, !dbg !14841
  %15 = load i32, i32* %n_ports, align 8, !dbg !14841
  %cmp = icmp ult i32 %13, %15, !dbg !14842
  br i1 %cmp, label %for.body, label %for.end, !dbg !14843

for.body:                                         ; preds = %for.cond
  %16 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14844
  %port_clks = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %16, i32 0, i32 13, !dbg !14847
  %17 = load %struct.clk**, %struct.clk*** %port_clks, align 8, !dbg !14847
  %18 = load i32, i32* %port, align 4, !dbg !14848
  %idxprom = sext i32 %18 to i64, !dbg !14844
  %arrayidx = getelementptr %struct.clk*, %struct.clk** %17, i64 %idxprom, !dbg !14844
  %19 = load %struct.clk*, %struct.clk** %arrayidx, align 8, !dbg !14844
  %20 = bitcast %struct.clk* %19 to i8*, !dbg !14844
  %call4 = call zeroext i1 @IS_ERR(i8* %20) #9, !dbg !14849
  br i1 %call4, label %if.end12, label %if.then5, !dbg !14850

if.then5:                                         ; preds = %for.body
  %21 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14851
  %port_clks6 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %21, i32 0, i32 13, !dbg !14853
  %22 = load %struct.clk**, %struct.clk*** %port_clks6, align 8, !dbg !14853
  %23 = load i32, i32* %port, align 4, !dbg !14854
  %idxprom7 = sext i32 %23 to i64, !dbg !14851
  %arrayidx8 = getelementptr %struct.clk*, %struct.clk** %22, i64 %idxprom7, !dbg !14851
  %24 = load %struct.clk*, %struct.clk** %arrayidx8, align 8, !dbg !14851
  call void @clk_disable_unprepare(%struct.clk* %24) #9, !dbg !14855
  %25 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14856
  %port_clks9 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %25, i32 0, i32 13, !dbg !14857
  %26 = load %struct.clk**, %struct.clk*** %port_clks9, align 8, !dbg !14857
  %27 = load i32, i32* %port, align 4, !dbg !14858
  %idxprom10 = sext i32 %27 to i64, !dbg !14856
  %arrayidx11 = getelementptr %struct.clk*, %struct.clk** %26, i64 %idxprom10, !dbg !14856
  %28 = load %struct.clk*, %struct.clk** %arrayidx11, align 8, !dbg !14856
  call void @clk_put(%struct.clk* %28) #9, !dbg !14859
  br label %if.end12, !dbg !14860

if.end12:                                         ; preds = %if.then5, %for.body
  %29 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14861
  %port_phys = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %29, i32 0, i32 14, !dbg !14862
  %30 = load %struct.phy**, %struct.phy*** %port_phys, align 8, !dbg !14862
  %31 = load i32, i32* %port, align 4, !dbg !14863
  %idxprom13 = sext i32 %31 to i64, !dbg !14861
  %arrayidx14 = getelementptr %struct.phy*, %struct.phy** %30, i64 %idxprom13, !dbg !14861
  %32 = load %struct.phy*, %struct.phy** %arrayidx14, align 8, !dbg !14861
  %call15 = call i32 @phy_power_off(%struct.phy* %32) #9, !dbg !14864
  br label %for.inc, !dbg !14865

for.inc:                                          ; preds = %if.end12
  %33 = load i32, i32* %port, align 4, !dbg !14866
  %inc = add i32 %33, 1, !dbg !14866
  store i32 %inc, i32* %port, align 4, !dbg !14866
  br label %for.cond, !dbg !14867, !llvm.loop !14868

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !14870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_platform_suspend(%struct.platform_device* %pdev, i32 %state.coerce) #2 !dbg !14871 {
entry:
  %retval = alloca i32, align 4
  %state = alloca %struct.pm_message, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %host = alloca %struct.ata_host*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %state, i32 0, i32 0
  store i32 %state.coerce, i32* %coerce.dive, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !14872, metadata !DIExpression()), !dbg !14873
  call void @llvm.dbg.declare(metadata %struct.pm_message* %state, metadata !14874, metadata !DIExpression()), !dbg !14875
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !14876, metadata !DIExpression()), !dbg !14877
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14878
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #9, !dbg !14879
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !14879
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !14877
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14880
  %tobool = icmp ne %struct.ata_host* %2, null, !dbg !14880
  br i1 %tobool, label %if.then, label %if.else, !dbg !14882

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14883
  %coerce.dive1 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %state, i32 0, i32 0, !dbg !14884
  %4 = load i32, i32* %coerce.dive1, align 4, !dbg !14884
  %call2 = call i32 @ata_host_suspend(%struct.ata_host* %3, i32 %4) #9, !dbg !14884
  store i32 %call2, i32* %retval, align 4, !dbg !14885
  br label %return, !dbg !14885

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14886
  br label %return, !dbg !14886

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !14887
  ret i32 %5, !dbg !14887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mv_platform_resume(%struct.platform_device* %pdev) #2 !dbg !14888 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %host = alloca %struct.ata_host*, align 8
  %dram = alloca %struct.mbus_dram_target_info*, align 8
  %ret = alloca i32, align 4
  %hpriv = alloca %struct.mv_host_priv*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !14889, metadata !DIExpression()), !dbg !14890
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !14891, metadata !DIExpression()), !dbg !14892
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !14893
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #9, !dbg !14894
  %1 = bitcast i8* %call to %struct.ata_host*, !dbg !14894
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !14892
  call void @llvm.dbg.declare(metadata %struct.mbus_dram_target_info** %dram, metadata !14895, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14897, metadata !DIExpression()), !dbg !14898
  %2 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14899
  %tobool = icmp ne %struct.ata_host* %2, null, !dbg !14899
  br i1 %tobool, label %if.then, label %if.end9, !dbg !14901

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv, metadata !14902, metadata !DIExpression()), !dbg !14904
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14905
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 5, !dbg !14906
  %4 = load i8*, i8** %private_data, align 8, !dbg !14906
  %5 = bitcast i8* %4 to %struct.mv_host_priv*, !dbg !14905
  store %struct.mv_host_priv* %5, %struct.mv_host_priv** %hpriv, align 8, !dbg !14904
  %call1 = call %struct.mbus_dram_target_info* @mv_mbus_dram_info() #9, !dbg !14907
  store %struct.mbus_dram_target_info* %call1, %struct.mbus_dram_target_info** %dram, align 8, !dbg !14908
  %6 = load %struct.mbus_dram_target_info*, %struct.mbus_dram_target_info** %dram, align 8, !dbg !14909
  %tobool2 = icmp ne %struct.mbus_dram_target_info* %6, null, !dbg !14909
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !14911

if.then3:                                         ; preds = %if.then
  %7 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv, align 8, !dbg !14912
  %8 = load %struct.mbus_dram_target_info*, %struct.mbus_dram_target_info** %dram, align 8, !dbg !14913
  call void @mv_conf_mbus_windows(%struct.mv_host_priv* %7, %struct.mbus_dram_target_info* %8) #9, !dbg !14914
  br label %if.end, !dbg !14914

if.end:                                           ; preds = %if.then3, %if.then
  %9 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14915
  %call4 = call i32 @mv_init_host(%struct.ata_host* %9) #9, !dbg !14916
  store i32 %call4, i32* %ret, align 4, !dbg !14917
  %10 = load i32, i32* %ret, align 4, !dbg !14918
  %tobool5 = icmp ne i32 %10, 0, !dbg !14918
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !14920

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !14921
  %11 = load i32, i32* %ret, align 4, !dbg !14923
  store i32 %11, i32* %retval, align 4, !dbg !14924
  br label %return, !dbg !14924

if.end8:                                          ; preds = %if.end
  %12 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !14925
  call void @ata_host_resume(%struct.ata_host* %12) #9, !dbg !14926
  br label %if.end9, !dbg !14927

if.end9:                                          ; preds = %if.end8, %entry
  store i32 0, i32* %retval, align 4, !dbg !14928
  br label %return, !dbg !14928

return:                                           ; preds = %if.end9, %if.then6
  %13 = load i32, i32* %retval, align 4, !dbg !14929
  ret i32 %13, !dbg !14929
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noredzone
declare dso_local %struct.resource* @platform_get_resource(%struct.platform_device*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32(%struct.device_node* %np, i8* %propname, i32* %out_value) #2 !dbg !14930 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_value.addr = alloca i32*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !14935, metadata !DIExpression()), !dbg !14936
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !14937, metadata !DIExpression()), !dbg !14938
  store i32* %out_value, i32** %out_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_value.addr, metadata !14939, metadata !DIExpression()), !dbg !14940
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !14941
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !14942
  %2 = load i32*, i32** %out_value.addr, align 8, !dbg !14943
  %call = call i32 @of_property_read_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 1) #9, !dbg !14944
  ret i32 %call, !dbg !14945
}

; Function Attrs: noredzone
declare dso_local i32 @irq_of_parse_and_map(%struct.device_node*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_platdata(%struct.device* %dev) #2 !dbg !14946 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14947, metadata !DIExpression()), !dbg !14948
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14949
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 7, !dbg !14950
  %1 = load i8*, i8** %platform_data, align 8, !dbg !14950
  ret i8* %1, !dbg !14951
}

; Function Attrs: noredzone
declare dso_local i32 @platform_get_irq(%struct.platform_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #2 !dbg !14952 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14955, metadata !DIExpression()), !dbg !14956
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14957, metadata !DIExpression()), !dbg !14958
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14959, metadata !DIExpression()), !dbg !14960
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14961, metadata !DIExpression()), !dbg !14962
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14963
  %1 = load i64, i64* %n.addr, align 8, !dbg !14964
  %2 = load i64, i64* %size.addr, align 8, !dbg !14965
  %3 = load i32, i32* %flags.addr, align 4, !dbg !14966
  %or = or i32 %3, 256, !dbg !14967
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #9, !dbg !14968
  ret i8* %call, !dbg !14969
}

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap(%struct.device*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_size(%struct.resource* %res) #2 !dbg !14970 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !14975, metadata !DIExpression()), !dbg !14976
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !14977
  %end = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 1, !dbg !14978
  %1 = load i64, i64* %end, align 8, !dbg !14978
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !14979
  %start = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 0, !dbg !14980
  %3 = load i64, i64* %start, align 8, !dbg !14980
  %sub = sub i64 %1, %3, !dbg !14981
  %add = add i64 %sub, 1, !dbg !14982
  ret i64 %add, !dbg !14983
}

; Function Attrs: noredzone
declare dso_local %struct.clk* @clk_get(%struct.device*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #2 !dbg !14984 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14988, metadata !DIExpression()), !dbg !14989
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14990
  %1 = ptrtoint i8* %0 to i64, !dbg !14990
  %2 = inttoptr i64 %1 to i8*, !dbg !14990
  %3 = ptrtoint i8* %2 to i64, !dbg !14990
  %cmp = icmp uge i64 %3, -4095, !dbg !14990
  %lnot = xor i1 %cmp, true, !dbg !14990
  %lnot1 = xor i1 %lnot, true, !dbg !14990
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14990
  %conv = sext i32 %lnot.ext to i64, !dbg !14990
  %tobool = icmp ne i64 %conv, 0, !dbg !14990
  ret i1 %tobool, !dbg !14991
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_notice(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_prepare_enable(%struct.clk* %clk) #2 !dbg !14992 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !14995, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14997, metadata !DIExpression()), !dbg !14998
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !14999
  %call = call i32 @clk_prepare(%struct.clk* %0) #9, !dbg !15000
  store i32 %call, i32* %ret, align 4, !dbg !15001
  %1 = load i32, i32* %ret, align 4, !dbg !15002
  %tobool = icmp ne i32 %1, 0, !dbg !15002
  br i1 %tobool, label %if.then, label %if.end, !dbg !15004

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !15005
  store i32 %2, i32* %retval, align 4, !dbg !15006
  br label %return, !dbg !15006

if.end:                                           ; preds = %entry
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !15007
  %call1 = call i32 @clk_enable(%struct.clk* %3) #9, !dbg !15008
  store i32 %call1, i32* %ret, align 4, !dbg !15009
  %4 = load i32, i32* %ret, align 4, !dbg !15010
  %tobool2 = icmp ne i32 %4, 0, !dbg !15010
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !15012

if.then3:                                         ; preds = %if.end
  %5 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !15013
  call void @clk_unprepare(%struct.clk* %5) #9, !dbg !15014
  br label %if.end4, !dbg !15014

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !15015
  store i32 %6, i32* %retval, align 4, !dbg !15016
  br label %return, !dbg !15016

return:                                           ; preds = %if.end4, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !15017
  ret i32 %7, !dbg !15017
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local %struct.phy* @devm_phy_optional_get(%struct.device*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #2 !dbg !15018 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !15021, metadata !DIExpression()), !dbg !15022
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !15023
  %1 = ptrtoint i8* %0 to i64, !dbg !15024
  ret i64 %1, !dbg !15025
}

; Function Attrs: noredzone
declare dso_local i32 @phy_power_on(%struct.phy*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mbus_dram_target_info* @mv_mbus_dram_info() #2 !dbg !15026 {
entry:
  ret %struct.mbus_dram_target_info* null, !dbg !15029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mv_conf_mbus_windows(%struct.mv_host_priv* %hpriv, %struct.mbus_dram_target_info* %dram) #2 !dbg !15030 {
entry:
  %hpriv.addr = alloca %struct.mv_host_priv*, align 8
  %dram.addr = alloca %struct.mbus_dram_target_info*, align 8
  %i = alloca i32, align 4
  %cs = alloca %struct.mbus_dram_window*, align 8
  store %struct.mv_host_priv* %hpriv, %struct.mv_host_priv** %hpriv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mv_host_priv** %hpriv.addr, metadata !15033, metadata !DIExpression()), !dbg !15034
  store %struct.mbus_dram_target_info* %dram, %struct.mbus_dram_target_info** %dram.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mbus_dram_target_info** %dram.addr, metadata !15035, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15037, metadata !DIExpression()), !dbg !15038
  store i32 0, i32* %i, align 4, !dbg !15039
  br label %for.cond, !dbg !15041

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15042
  %cmp = icmp slt i32 %0, 4, !dbg !15044
  br i1 %cmp, label %for.body, label %for.end, !dbg !15045

for.body:                                         ; preds = %for.cond
  %1 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !15046
  %base = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %1, i32 0, i32 6, !dbg !15048
  %2 = load i8*, i8** %base, align 8, !dbg !15048
  %3 = load i32, i32* %i, align 4, !dbg !15049
  %shl = shl i32 %3, 4, !dbg !15049
  %add = add i32 131120, %shl, !dbg !15049
  %idx.ext = sext i32 %add to i64, !dbg !15050
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !15050
  call void @writel(i32 0, i8* %add.ptr) #9, !dbg !15051
  %4 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !15052
  %base1 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %4, i32 0, i32 6, !dbg !15053
  %5 = load i8*, i8** %base1, align 8, !dbg !15053
  %6 = load i32, i32* %i, align 4, !dbg !15054
  %shl2 = shl i32 %6, 4, !dbg !15054
  %add3 = add i32 131124, %shl2, !dbg !15054
  %idx.ext4 = sext i32 %add3 to i64, !dbg !15055
  %add.ptr5 = getelementptr i8, i8* %5, i64 %idx.ext4, !dbg !15055
  call void @writel(i32 0, i8* %add.ptr5) #9, !dbg !15056
  br label %for.inc, !dbg !15057

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !15058
  %inc = add i32 %7, 1, !dbg !15058
  store i32 %inc, i32* %i, align 4, !dbg !15058
  br label %for.cond, !dbg !15059, !llvm.loop !15060

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !15062
  br label %for.cond6, !dbg !15064

for.cond6:                                        ; preds = %for.inc32, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !15065
  %9 = load %struct.mbus_dram_target_info*, %struct.mbus_dram_target_info** %dram.addr, align 8, !dbg !15067
  %num_cs = getelementptr inbounds %struct.mbus_dram_target_info, %struct.mbus_dram_target_info* %9, i32 0, i32 1, !dbg !15068
  %10 = load i32, i32* %num_cs, align 4, !dbg !15068
  %cmp7 = icmp slt i32 %8, %10, !dbg !15069
  br i1 %cmp7, label %for.body8, label %for.end34, !dbg !15070

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.mbus_dram_window** %cs, metadata !15071, metadata !DIExpression()), !dbg !15075
  %11 = load %struct.mbus_dram_target_info*, %struct.mbus_dram_target_info** %dram.addr, align 8, !dbg !15076
  %cs9 = getelementptr inbounds %struct.mbus_dram_target_info, %struct.mbus_dram_target_info* %11, i32 0, i32 2, !dbg !15077
  %arraydecay = getelementptr inbounds [4 x %struct.mbus_dram_window], [4 x %struct.mbus_dram_window]* %cs9, i64 0, i64 0, !dbg !15076
  %12 = load i32, i32* %i, align 4, !dbg !15078
  %idx.ext10 = sext i32 %12 to i64, !dbg !15079
  %add.ptr11 = getelementptr %struct.mbus_dram_window, %struct.mbus_dram_window* %arraydecay, i64 %idx.ext10, !dbg !15079
  store %struct.mbus_dram_window* %add.ptr11, %struct.mbus_dram_window** %cs, align 8, !dbg !15075
  %13 = load %struct.mbus_dram_window*, %struct.mbus_dram_window** %cs, align 8, !dbg !15080
  %size = getelementptr inbounds %struct.mbus_dram_window, %struct.mbus_dram_window* %13, i32 0, i32 3, !dbg !15081
  %14 = load i64, i64* %size, align 8, !dbg !15081
  %sub = sub i64 %14, 1, !dbg !15082
  %and = and i64 %sub, 4294901760, !dbg !15083
  %15 = load %struct.mbus_dram_window*, %struct.mbus_dram_window** %cs, align 8, !dbg !15084
  %mbus_attr = getelementptr inbounds %struct.mbus_dram_window, %struct.mbus_dram_window* %15, i32 0, i32 1, !dbg !15085
  %16 = load i8, i8* %mbus_attr, align 1, !dbg !15085
  %conv = zext i8 %16 to i32, !dbg !15084
  %shl12 = shl i32 %conv, 8, !dbg !15086
  %conv13 = sext i32 %shl12 to i64, !dbg !15087
  %or = or i64 %and, %conv13, !dbg !15088
  %17 = load %struct.mbus_dram_target_info*, %struct.mbus_dram_target_info** %dram.addr, align 8, !dbg !15089
  %mbus_dram_target_id = getelementptr inbounds %struct.mbus_dram_target_info, %struct.mbus_dram_target_info* %17, i32 0, i32 0, !dbg !15090
  %18 = load i8, i8* %mbus_dram_target_id, align 8, !dbg !15090
  %conv14 = zext i8 %18 to i32, !dbg !15089
  %shl15 = shl i32 %conv14, 4, !dbg !15091
  %conv16 = sext i32 %shl15 to i64, !dbg !15092
  %or17 = or i64 %or, %conv16, !dbg !15093
  %or18 = or i64 %or17, 1, !dbg !15094
  %conv19 = trunc i64 %or18 to i32, !dbg !15095
  %19 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !15096
  %base20 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %19, i32 0, i32 6, !dbg !15097
  %20 = load i8*, i8** %base20, align 8, !dbg !15097
  %21 = load i32, i32* %i, align 4, !dbg !15098
  %shl21 = shl i32 %21, 4, !dbg !15098
  %add22 = add i32 131120, %shl21, !dbg !15098
  %idx.ext23 = sext i32 %add22 to i64, !dbg !15099
  %add.ptr24 = getelementptr i8, i8* %20, i64 %idx.ext23, !dbg !15099
  call void @writel(i32 %conv19, i8* %add.ptr24) #9, !dbg !15100
  %22 = load %struct.mbus_dram_window*, %struct.mbus_dram_window** %cs, align 8, !dbg !15101
  %base25 = getelementptr inbounds %struct.mbus_dram_window, %struct.mbus_dram_window* %22, i32 0, i32 2, !dbg !15102
  %23 = load i64, i64* %base25, align 8, !dbg !15102
  %conv26 = trunc i64 %23 to i32, !dbg !15101
  %24 = load %struct.mv_host_priv*, %struct.mv_host_priv** %hpriv.addr, align 8, !dbg !15103
  %base27 = getelementptr inbounds %struct.mv_host_priv, %struct.mv_host_priv* %24, i32 0, i32 6, !dbg !15104
  %25 = load i8*, i8** %base27, align 8, !dbg !15104
  %26 = load i32, i32* %i, align 4, !dbg !15105
  %shl28 = shl i32 %26, 4, !dbg !15105
  %add29 = add i32 131124, %shl28, !dbg !15105
  %idx.ext30 = sext i32 %add29 to i64, !dbg !15106
  %add.ptr31 = getelementptr i8, i8* %25, i64 %idx.ext30, !dbg !15106
  call void @writel(i32 %conv26, i8* %add.ptr31) #9, !dbg !15107
  br label %for.inc32, !dbg !15108

for.inc32:                                        ; preds = %for.body8
  %27 = load i32, i32* %i, align 4, !dbg !15109
  %inc33 = add i32 %27, 1, !dbg !15109
  store i32 %inc33, i32* %i, align 4, !dbg !15109
  br label %for.cond6, !dbg !15110, !llvm.loop !15111

for.end34:                                        ; preds = %for.cond6
  ret void, !dbg !15113
}

; Function Attrs: noredzone
declare dso_local i32 @of_device_is_compatible(%struct.device_node*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_disable_unprepare(%struct.clk* %clk) #2 !dbg !15114 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !15117, metadata !DIExpression()), !dbg !15118
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !15119
  call void @clk_disable(%struct.clk* %0) #9, !dbg !15120
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !15121
  call void @clk_unprepare(%struct.clk* %1) #9, !dbg !15122
  ret void, !dbg !15123
}

; Function Attrs: noredzone
declare dso_local void @clk_put(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local i32 @phy_power_off(%struct.phy*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #2 !dbg !15124 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !15127, metadata !DIExpression()), !dbg !15128
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !15129, metadata !DIExpression()), !dbg !15130
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !15131, metadata !DIExpression()), !dbg !15132
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !15133, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15135, metadata !DIExpression()), !dbg !15136
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !15137
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !15138
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !15139
  %3 = load i64, i64* %sz.addr, align 8, !dbg !15140
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #9, !dbg !15141
  store i32 %call, i32* %ret, align 4, !dbg !15136
  %4 = load i32, i32* %ret, align 4, !dbg !15142
  %cmp = icmp sge i32 %4, 0, !dbg !15144
  br i1 %cmp, label %if.then, label %if.else, !dbg !15145

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15146
  br label %return, !dbg !15146

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !15147
  store i32 %5, i32* %retval, align 4, !dbg !15148
  br label %return, !dbg !15148

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !15149
  ret i32 %6, !dbg !15149
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #2 !dbg !15150 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15151, metadata !DIExpression()), !dbg !15152
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15153, metadata !DIExpression()), !dbg !15154
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15155, metadata !DIExpression()), !dbg !15156
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15157, metadata !DIExpression()), !dbg !15158
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15159, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !15161, metadata !DIExpression()), !dbg !15164
  %0 = load i64, i64* %n.addr, align 8, !dbg !15164
  store i64 %0, i64* %__a, align 8, !dbg !15164
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !15165, metadata !DIExpression()), !dbg !15164
  %1 = load i64, i64* %size.addr, align 8, !dbg !15164
  store i64 %1, i64* %__b, align 8, !dbg !15164
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !15166, metadata !DIExpression()), !dbg !15164
  store i64* %bytes, i64** %__d, align 8, !dbg !15164
  %cmp = icmp eq i64* %__a, %__b, !dbg !15164
  %conv = zext i1 %cmp to i32, !dbg !15164
  %2 = load i64*, i64** %__d, align 8, !dbg !15164
  %cmp1 = icmp eq i64* %__a, %2, !dbg !15164
  %conv2 = zext i1 %cmp1 to i32, !dbg !15164
  %3 = load i64, i64* %__a, align 8, !dbg !15164
  %4 = load i64, i64* %__b, align 8, !dbg !15164
  %5 = load i64*, i64** %__d, align 8, !dbg !15164
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !15164
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !15164
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !15164
  store i64 %8, i64* %5, align 8, !dbg !15164
  %frombool = zext i1 %7 to i8, !dbg !15164
  store i8 %frombool, i8* %tmp, align 1, !dbg !15164
  %9 = load i8, i8* %tmp, align 1, !dbg !15164
  %tobool = trunc i8 %9 to i1, !dbg !15164
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !15167
  %lnot = xor i1 %call, true, !dbg !15167
  %lnot3 = xor i1 %lnot, true, !dbg !15167
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15167
  %conv4 = sext i32 %lnot.ext to i64, !dbg !15167
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !15167
  br i1 %tobool5, label %if.then, label %if.end, !dbg !15168

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15169
  br label %return, !dbg !15169

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15170
  %11 = load i64, i64* %bytes, align 8, !dbg !15171
  %12 = load i32, i32* %flags.addr, align 4, !dbg !15172
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #9, !dbg !15173
  store i8* %call6, i8** %retval, align 8, !dbg !15174
  br label %return, !dbg !15174

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !15175
  ret i8* %13, !dbg !15175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !15176 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !15180, metadata !DIExpression()), !dbg !15181
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !15182
  %tobool = trunc i8 %0 to i1, !dbg !15182
  %lnot = xor i1 %tobool, true, !dbg !15182
  %lnot1 = xor i1 %lnot, true, !dbg !15182
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15182
  %conv = sext i32 %lnot.ext to i64, !dbg !15182
  %tobool2 = icmp ne i64 %conv, 0, !dbg !15182
  ret i1 %tobool2, !dbg !15183
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @clk_prepare(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local i32 @clk_enable(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local void @clk_unprepare(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local void @clk_disable(%struct.clk*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @platform_get_drvdata(%struct.platform_device* %pdev) #2 !dbg !15184 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !15189, metadata !DIExpression()), !dbg !15190
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !15191
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !15192
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #9, !dbg !15193
  ret i8* %call, !dbg !15194
}

; Function Attrs: noredzone
declare dso_local void @ata_host_detach(%struct.ata_host*) #1

; Function Attrs: noredzone
declare dso_local i32 @ata_host_suspend(%struct.ata_host*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @__platform_driver_register(%struct.platform_driver*, %struct.module*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { noredzone nounwind }
attributes #12 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!7974}
!llvm.module.flags = !{!7975, !7976, !7977, !7978}
!llvm.ident = !{!7979}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_msi", scope: !2, file: !3, line: 72, type: !7973, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1174, globals: !6620, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/ata/sata_mv.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !31, !36, !44, !50, !64, !71, !79, !85, !91, !97, !103, !110, !114, !126, !131, !137, !144, !150, !159, !167, !175, !186, !193, !203, !212, !226, !231, !254, !259, !488, !725, !741, !1152, !1157, !1164}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !19, line: 44, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !25, line: 343, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !32, line: 65, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35}
!34 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !37, line: 524, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !37, line: 502, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !51, line: 76, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63}
!53 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!59 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!60 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!61 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!62 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!63 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !65, line: 478, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70}
!67 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !72, line: 1084, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76, !77, !78}
!74 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!78 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !80, line: 11, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84}
!82 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !86, line: 546, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!87 = !{!88, !89, !90}
!88 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !92, line: 16, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !98, line: 118, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !104, line: 19, baseType: !7, size: 32, elements: !105)
!104 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!105 = !{!106, !107, !108, !109}
!106 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !98, line: 293, baseType: !7, size: 32, elements: !111)
!111 = !{!112, !113}
!112 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !115, line: 49, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125}
!117 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!121 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!122 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!123 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!124 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!125 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !98, line: 315, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130}
!128 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !132, line: 26, baseType: !7, size: 32, elements: !133)
!132 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!133 = !{!134, !135, !136}
!134 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !138, line: 59, baseType: !7, size: 32, elements: !139)
!138 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!139 = !{!140, !141, !142, !143}
!140 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!141 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!142 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!143 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !145, line: 54, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149}
!147 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !151, line: 296, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!152 = !{!153, !154, !155, !156, !157, !158}
!153 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !160, line: 9, baseType: !7, size: 32, elements: !161)
!160 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!161 = !{!162, !163, !164, !165, !166}
!162 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!166 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !168, line: 276, baseType: !7, size: 32, elements: !169)
!168 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!169 = !{!170, !171, !172, !173, !174}
!170 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!171 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!172 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!173 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!174 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !168, line: 36, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181, !182, !183, !184, !185}
!177 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!180 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!181 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!182 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!183 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!184 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!185 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !187, line: 5, baseType: !7, size: 32, elements: !188)
!187 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!188 = !{!189, !190, !191, !192}
!189 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!190 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!191 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!192 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !194, line: 514, baseType: !7, size: 32, elements: !195)
!194 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!195 = !{!196, !197, !198, !199, !200, !201, !202}
!196 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!197 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!198 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!199 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!200 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!201 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!202 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_lpm_policy", file: !204, line: 506, baseType: !7, size: 32, elements: !205)
!204 = !DIFile(filename: "./include/linux/libata.h", directory: "/home/lizy2001/genbc/linux")
!205 = !{!206, !207, !208, !209, !210, !211}
!206 = !DIEnumerator(name: "ATA_LPM_UNKNOWN", value: 0, isUnsigned: true)
!207 = !DIEnumerator(name: "ATA_LPM_MAX_POWER", value: 1, isUnsigned: true)
!208 = !DIEnumerator(name: "ATA_LPM_MED_POWER", value: 2, isUnsigned: true)
!209 = !DIEnumerator(name: "ATA_LPM_MED_POWER_WITH_DIPM", value: 3, isUnsigned: true)
!210 = !DIEnumerator(name: "ATA_LPM_MIN_POWER_WITH_PARTIAL", value: 4, isUnsigned: true)
!211 = !DIEnumerator(name: "ATA_LPM_MIN_POWER", value: 5, isUnsigned: true)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_completion_errors", file: !204, line: 487, baseType: !7, size: 32, elements: !213)
!213 = !{!214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!214 = !DIEnumerator(name: "AC_ERR_OK", value: 0, isUnsigned: true)
!215 = !DIEnumerator(name: "AC_ERR_DEV", value: 1, isUnsigned: true)
!216 = !DIEnumerator(name: "AC_ERR_HSM", value: 2, isUnsigned: true)
!217 = !DIEnumerator(name: "AC_ERR_TIMEOUT", value: 4, isUnsigned: true)
!218 = !DIEnumerator(name: "AC_ERR_MEDIA", value: 8, isUnsigned: true)
!219 = !DIEnumerator(name: "AC_ERR_ATA_BUS", value: 16, isUnsigned: true)
!220 = !DIEnumerator(name: "AC_ERR_HOST_BUS", value: 32, isUnsigned: true)
!221 = !DIEnumerator(name: "AC_ERR_SYSTEM", value: 64, isUnsigned: true)
!222 = !DIEnumerator(name: "AC_ERR_INVALID", value: 128, isUnsigned: true)
!223 = !DIEnumerator(name: "AC_ERR_OTHER", value: 256, isUnsigned: true)
!224 = !DIEnumerator(name: "AC_ERR_NODEV_HINT", value: 512, isUnsigned: true)
!225 = !DIEnumerator(name: "AC_ERR_NCQ", value: 1024, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sw_activity", file: !204, line: 544, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230}
!228 = !DIEnumerator(name: "OFF", value: 0, isUnsigned: true)
!229 = !DIEnumerator(name: "BLINK_ON", value: 1, isUnsigned: true)
!230 = !DIEnumerator(name: "BLINK_OFF", value: 2, isUnsigned: true)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phy_mode", file: !232, line: 24, baseType: !7, size: 32, elements: !233)
!232 = !DIFile(filename: "./include/linux/phy/phy.h", directory: "/home/lizy2001/genbc/linux")
!233 = !{!234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253}
!234 = !DIEnumerator(name: "PHY_MODE_INVALID", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "PHY_MODE_USB_HOST", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "PHY_MODE_USB_HOST_LS", value: 2, isUnsigned: true)
!237 = !DIEnumerator(name: "PHY_MODE_USB_HOST_FS", value: 3, isUnsigned: true)
!238 = !DIEnumerator(name: "PHY_MODE_USB_HOST_HS", value: 4, isUnsigned: true)
!239 = !DIEnumerator(name: "PHY_MODE_USB_HOST_SS", value: 5, isUnsigned: true)
!240 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE", value: 6, isUnsigned: true)
!241 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_LS", value: 7, isUnsigned: true)
!242 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_FS", value: 8, isUnsigned: true)
!243 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_HS", value: 9, isUnsigned: true)
!244 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_SS", value: 10, isUnsigned: true)
!245 = !DIEnumerator(name: "PHY_MODE_USB_OTG", value: 11, isUnsigned: true)
!246 = !DIEnumerator(name: "PHY_MODE_UFS_HS_A", value: 12, isUnsigned: true)
!247 = !DIEnumerator(name: "PHY_MODE_UFS_HS_B", value: 13, isUnsigned: true)
!248 = !DIEnumerator(name: "PHY_MODE_PCIE", value: 14, isUnsigned: true)
!249 = !DIEnumerator(name: "PHY_MODE_ETHERNET", value: 15, isUnsigned: true)
!250 = !DIEnumerator(name: "PHY_MODE_MIPI_DPHY", value: 16, isUnsigned: true)
!251 = !DIEnumerator(name: "PHY_MODE_SATA", value: 17, isUnsigned: true)
!252 = !DIEnumerator(name: "PHY_MODE_LVDS", value: 18, isUnsigned: true)
!253 = !DIEnumerator(name: "PHY_MODE_DP", value: 19, isUnsigned: true)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 10, baseType: !7, size: 32, elements: !256)
!255 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!258 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 86, baseType: !260, size: 32, elements: !261)
!260 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!261 = !{!262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487}
!262 = !DIEnumerator(name: "MV_PRIMARY_BAR", value: 0)
!263 = !DIEnumerator(name: "MV_IO_BAR", value: 2)
!264 = !DIEnumerator(name: "MV_MISC_BAR", value: 3)
!265 = !DIEnumerator(name: "MV_MAJOR_REG_AREA_SZ", value: 65536)
!266 = !DIEnumerator(name: "MV_MINOR_REG_AREA_SZ", value: 8192)
!267 = !DIEnumerator(name: "COAL_CLOCKS_PER_USEC", value: 150)
!268 = !DIEnumerator(name: "MAX_COAL_TIME_THRESHOLD", value: 16777215)
!269 = !DIEnumerator(name: "MAX_COAL_IO_COUNT", value: 255)
!270 = !DIEnumerator(name: "MV_PCI_REG_BASE", value: 0)
!271 = !DIEnumerator(name: "COAL_REG_BASE", value: 98304)
!272 = !DIEnumerator(name: "IRQ_COAL_CAUSE", value: 98312)
!273 = !DIEnumerator(name: "ALL_PORTS_COAL_IRQ", value: 16)
!274 = !DIEnumerator(name: "IRQ_COAL_IO_THRESHOLD", value: 98508)
!275 = !DIEnumerator(name: "IRQ_COAL_TIME_THRESHOLD", value: 98512)
!276 = !DIEnumerator(name: "TRAN_COAL_CAUSE_LO", value: 98440)
!277 = !DIEnumerator(name: "TRAN_COAL_CAUSE_HI", value: 98444)
!278 = !DIEnumerator(name: "SATAHC0_REG_BASE", value: 131072)
!279 = !DIEnumerator(name: "FLASH_CTL", value: 66668)
!280 = !DIEnumerator(name: "GPIO_PORT_CTL", value: 66800)
!281 = !DIEnumerator(name: "RESET_CFG", value: 98520)
!282 = !DIEnumerator(name: "MV_PCI_REG_SZ", value: 65536)
!283 = !DIEnumerator(name: "MV_SATAHC_REG_SZ", value: 65536)
!284 = !DIEnumerator(name: "MV_SATAHC_ARBTR_REG_SZ", value: 8192)
!285 = !DIEnumerator(name: "MV_PORT_REG_SZ", value: 8192)
!286 = !DIEnumerator(name: "MV_MAX_Q_DEPTH", value: 32)
!287 = !DIEnumerator(name: "MV_MAX_Q_DEPTH_MASK", value: 31)
!288 = !DIEnumerator(name: "MV_CRQB_Q_SZ", value: 1024)
!289 = !DIEnumerator(name: "MV_CRPB_Q_SZ", value: 256)
!290 = !DIEnumerator(name: "MV_MAX_SG_CT", value: 256)
!291 = !DIEnumerator(name: "MV_SG_TBL_SZ", value: 4096)
!292 = !DIEnumerator(name: "MV_PORT_HC_SHIFT", value: 2)
!293 = !DIEnumerator(name: "MV_PORTS_PER_HC", value: 4)
!294 = !DIEnumerator(name: "MV_PORT_MASK", value: 3)
!295 = !DIEnumerator(name: "MV_FLAG_DUAL_HC", value: 1073741824)
!296 = !DIEnumerator(name: "MV_COMMON_FLAGS", value: 514)
!297 = !DIEnumerator(name: "MV_GEN_I_FLAGS", value: 578)
!298 = !DIEnumerator(name: "MV_GEN_II_FLAGS", value: 656898)
!299 = !DIEnumerator(name: "MV_GEN_IIE_FLAGS", value: 919042)
!300 = !DIEnumerator(name: "CRQB_FLAG_READ", value: 1)
!301 = !DIEnumerator(name: "CRQB_TAG_SHIFT", value: 1)
!302 = !DIEnumerator(name: "CRQB_IOID_SHIFT", value: 6)
!303 = !DIEnumerator(name: "CRQB_PMP_SHIFT", value: 12)
!304 = !DIEnumerator(name: "CRQB_HOSTQ_SHIFT", value: 17)
!305 = !DIEnumerator(name: "CRQB_CMD_ADDR_SHIFT", value: 8)
!306 = !DIEnumerator(name: "CRQB_CMD_CS", value: 4096)
!307 = !DIEnumerator(name: "CRQB_CMD_LAST", value: 32768)
!308 = !DIEnumerator(name: "CRPB_FLAG_STATUS_SHIFT", value: 8)
!309 = !DIEnumerator(name: "CRPB_IOID_SHIFT_6", value: 5)
!310 = !DIEnumerator(name: "CRPB_IOID_SHIFT_7", value: 7)
!311 = !DIEnumerator(name: "EPRD_FLAG_END_OF_TBL", value: -2147483648)
!312 = !DIEnumerator(name: "MV_PCI_COMMAND", value: 3072)
!313 = !DIEnumerator(name: "MV_PCI_COMMAND_MWRCOM", value: 16)
!314 = !DIEnumerator(name: "MV_PCI_COMMAND_MRDTRIG", value: 128)
!315 = !DIEnumerator(name: "PCI_MAIN_CMD_STS", value: 3376)
!316 = !DIEnumerator(name: "STOP_PCI_MASTER", value: 4)
!317 = !DIEnumerator(name: "PCI_MASTER_EMPTY", value: 8)
!318 = !DIEnumerator(name: "GLOB_SFT_RST", value: 16)
!319 = !DIEnumerator(name: "MV_PCI_MODE", value: 3328)
!320 = !DIEnumerator(name: "MV_PCI_MODE_MASK", value: 48)
!321 = !DIEnumerator(name: "MV_PCI_EXP_ROM_BAR_CTL", value: 3372)
!322 = !DIEnumerator(name: "MV_PCI_DISC_TIMER", value: 3332)
!323 = !DIEnumerator(name: "MV_PCI_MSI_TRIGGER", value: 3128)
!324 = !DIEnumerator(name: "MV_PCI_SERR_MASK", value: 3112)
!325 = !DIEnumerator(name: "MV_PCI_XBAR_TMOUT", value: 7428)
!326 = !DIEnumerator(name: "MV_PCI_ERR_LOW_ADDRESS", value: 7488)
!327 = !DIEnumerator(name: "MV_PCI_ERR_HIGH_ADDRESS", value: 7492)
!328 = !DIEnumerator(name: "MV_PCI_ERR_ATTRIBUTE", value: 7496)
!329 = !DIEnumerator(name: "MV_PCI_ERR_COMMAND", value: 7504)
!330 = !DIEnumerator(name: "PCI_IRQ_CAUSE", value: 7512)
!331 = !DIEnumerator(name: "PCI_IRQ_MASK", value: 7516)
!332 = !DIEnumerator(name: "PCI_UNMASK_ALL_IRQS", value: 8388607)
!333 = !DIEnumerator(name: "PCIE_IRQ_CAUSE", value: 6400)
!334 = !DIEnumerator(name: "PCIE_IRQ_MASK", value: 6416)
!335 = !DIEnumerator(name: "PCIE_UNMASK_ALL_IRQS", value: 1034)
!336 = !DIEnumerator(name: "PCI_HC_MAIN_IRQ_CAUSE", value: 7520)
!337 = !DIEnumerator(name: "PCI_HC_MAIN_IRQ_MASK", value: 7524)
!338 = !DIEnumerator(name: "SOC_HC_MAIN_IRQ_CAUSE", value: 131104)
!339 = !DIEnumerator(name: "SOC_HC_MAIN_IRQ_MASK", value: 131108)
!340 = !DIEnumerator(name: "ERR_IRQ", value: 1)
!341 = !DIEnumerator(name: "DONE_IRQ", value: 2)
!342 = !DIEnumerator(name: "HC0_IRQ_PEND", value: 511)
!343 = !DIEnumerator(name: "HC_SHIFT", value: 9)
!344 = !DIEnumerator(name: "DONE_IRQ_0_3", value: 170)
!345 = !DIEnumerator(name: "DONE_IRQ_4_7", value: 87040)
!346 = !DIEnumerator(name: "PCI_ERR", value: 262144)
!347 = !DIEnumerator(name: "TRAN_COAL_LO_DONE", value: 524288)
!348 = !DIEnumerator(name: "TRAN_COAL_HI_DONE", value: 1048576)
!349 = !DIEnumerator(name: "PORTS_0_3_COAL_DONE", value: 256)
!350 = !DIEnumerator(name: "PORTS_4_7_COAL_DONE", value: 131072)
!351 = !DIEnumerator(name: "ALL_PORTS_COAL_DONE", value: 2097152)
!352 = !DIEnumerator(name: "GPIO_INT", value: 4194304)
!353 = !DIEnumerator(name: "SELF_INT", value: 8388608)
!354 = !DIEnumerator(name: "TWSI_INT", value: 16777216)
!355 = !DIEnumerator(name: "HC_MAIN_RSVD", value: -33554432)
!356 = !DIEnumerator(name: "HC_MAIN_RSVD_5", value: -524288)
!357 = !DIEnumerator(name: "HC_MAIN_RSVD_SOC", value: -320)
!358 = !DIEnumerator(name: "HC_CFG", value: 0)
!359 = !DIEnumerator(name: "HC_IRQ_CAUSE", value: 20)
!360 = !DIEnumerator(name: "DMA_IRQ", value: 1)
!361 = !DIEnumerator(name: "HC_COAL_IRQ", value: 16)
!362 = !DIEnumerator(name: "DEV_IRQ", value: 256)
!363 = !DIEnumerator(name: "HC_IRQ_COAL_IO_THRESHOLD", value: 12)
!364 = !DIEnumerator(name: "HC_IRQ_COAL_TIME_THRESHOLD", value: 16)
!365 = !DIEnumerator(name: "SOC_LED_CTRL", value: 44)
!366 = !DIEnumerator(name: "SOC_LED_CTRL_BLINK", value: 1)
!367 = !DIEnumerator(name: "SOC_LED_CTRL_ACT_PRESENCE", value: 4)
!368 = !DIEnumerator(name: "SHD_BLK", value: 256)
!369 = !DIEnumerator(name: "SHD_CTL_AST", value: 32)
!370 = !DIEnumerator(name: "SATA_STATUS", value: 768)
!371 = !DIEnumerator(name: "SATA_ACTIVE", value: 848)
!372 = !DIEnumerator(name: "FIS_IRQ_CAUSE", value: 868)
!373 = !DIEnumerator(name: "FIS_IRQ_CAUSE_AN", value: 512)
!374 = !DIEnumerator(name: "LTMODE", value: 780)
!375 = !DIEnumerator(name: "LTMODE_BIT8", value: 256)
!376 = !DIEnumerator(name: "PHY_MODE2", value: 816)
!377 = !DIEnumerator(name: "PHY_MODE3", value: 784)
!378 = !DIEnumerator(name: "PHY_MODE4", value: 788)
!379 = !DIEnumerator(name: "PHY_MODE4_CFG_MASK", value: 3)
!380 = !DIEnumerator(name: "PHY_MODE4_CFG_VALUE", value: 1)
!381 = !DIEnumerator(name: "PHY_MODE4_RSVD_ZEROS", value: 1575223290)
!382 = !DIEnumerator(name: "PHY_MODE4_RSVD_ONES", value: 5)
!383 = !DIEnumerator(name: "SATA_IFCTL", value: 836)
!384 = !DIEnumerator(name: "SATA_TESTCTL", value: 840)
!385 = !DIEnumerator(name: "SATA_IFSTAT", value: 844)
!386 = !DIEnumerator(name: "VENDOR_UNIQUE_FIS", value: 860)
!387 = !DIEnumerator(name: "FISCFG", value: 864)
!388 = !DIEnumerator(name: "FISCFG_WAIT_DEV_ERR", value: 256)
!389 = !DIEnumerator(name: "FISCFG_SINGLE_SYNC", value: 65536)
!390 = !DIEnumerator(name: "PHY_MODE9_GEN2", value: 920)
!391 = !DIEnumerator(name: "PHY_MODE9_GEN1", value: 924)
!392 = !DIEnumerator(name: "PHYCFG_OFS", value: 928)
!393 = !DIEnumerator(name: "MV5_PHY_MODE", value: 116)
!394 = !DIEnumerator(name: "MV5_LTMODE", value: 48)
!395 = !DIEnumerator(name: "MV5_PHY_CTL", value: 12)
!396 = !DIEnumerator(name: "SATA_IFCFG", value: 80)
!397 = !DIEnumerator(name: "LP_PHY_CTL", value: 88)
!398 = !DIEnumerator(name: "LP_PHY_CTL_PIN_PU_PLL", value: 1)
!399 = !DIEnumerator(name: "LP_PHY_CTL_PIN_PU_RX", value: 2)
!400 = !DIEnumerator(name: "LP_PHY_CTL_PIN_PU_TX", value: 4)
!401 = !DIEnumerator(name: "LP_PHY_CTL_GEN_TX_3G", value: 32)
!402 = !DIEnumerator(name: "LP_PHY_CTL_GEN_RX_3G", value: 512)
!403 = !DIEnumerator(name: "MV_M2_PREAMP_MASK", value: 2016)
!404 = !DIEnumerator(name: "EDMA_CFG", value: 0)
!405 = !DIEnumerator(name: "EDMA_CFG_Q_DEPTH", value: 31)
!406 = !DIEnumerator(name: "EDMA_CFG_NCQ", value: 32)
!407 = !DIEnumerator(name: "EDMA_CFG_NCQ_GO_ON_ERR", value: 16384)
!408 = !DIEnumerator(name: "EDMA_CFG_RD_BRST_EXT", value: 2048)
!409 = !DIEnumerator(name: "EDMA_CFG_WR_BUFF_LEN", value: 8192)
!410 = !DIEnumerator(name: "EDMA_CFG_EDMA_FBS", value: 65536)
!411 = !DIEnumerator(name: "EDMA_CFG_FBS", value: 67108864)
!412 = !DIEnumerator(name: "EDMA_ERR_IRQ_CAUSE", value: 8)
!413 = !DIEnumerator(name: "EDMA_ERR_IRQ_MASK", value: 12)
!414 = !DIEnumerator(name: "EDMA_ERR_D_PAR", value: 1)
!415 = !DIEnumerator(name: "EDMA_ERR_PRD_PAR", value: 2)
!416 = !DIEnumerator(name: "EDMA_ERR_DEV", value: 4)
!417 = !DIEnumerator(name: "EDMA_ERR_DEV_DCON", value: 8)
!418 = !DIEnumerator(name: "EDMA_ERR_DEV_CON", value: 16)
!419 = !DIEnumerator(name: "EDMA_ERR_SERR", value: 32)
!420 = !DIEnumerator(name: "EDMA_ERR_SELF_DIS", value: 128)
!421 = !DIEnumerator(name: "EDMA_ERR_SELF_DIS_5", value: 256)
!422 = !DIEnumerator(name: "EDMA_ERR_BIST_ASYNC", value: 256)
!423 = !DIEnumerator(name: "EDMA_ERR_TRANS_IRQ_7", value: 256)
!424 = !DIEnumerator(name: "EDMA_ERR_CRQB_PAR", value: 512)
!425 = !DIEnumerator(name: "EDMA_ERR_CRPB_PAR", value: 1024)
!426 = !DIEnumerator(name: "EDMA_ERR_INTRL_PAR", value: 2048)
!427 = !DIEnumerator(name: "EDMA_ERR_IORDY", value: 4096)
!428 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_RX", value: 122880)
!429 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_RX_0", value: 8192)
!430 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_RX_1", value: 16384)
!431 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_RX_2", value: 32768)
!432 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_RX_3", value: 65536)
!433 = !DIEnumerator(name: "EDMA_ERR_LNK_DATA_RX", value: 1966080)
!434 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_TX", value: 65011712)
!435 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_TX_0", value: 2097152)
!436 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_TX_1", value: 4194304)
!437 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_TX_2", value: 8388608)
!438 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_TX_3", value: 16777216)
!439 = !DIEnumerator(name: "EDMA_ERR_LNK_CTRL_TX_4", value: 33554432)
!440 = !DIEnumerator(name: "EDMA_ERR_LNK_DATA_TX", value: 2080374784)
!441 = !DIEnumerator(name: "EDMA_ERR_TRANS_PROTO", value: -2147483648)
!442 = !DIEnumerator(name: "EDMA_ERR_OVERRUN_5", value: 32)
!443 = !DIEnumerator(name: "EDMA_ERR_UNDERRUN_5", value: 64)
!444 = !DIEnumerator(name: "EDMA_ERR_IRQ_TRANSIENT", value: 65101824)
!445 = !DIEnumerator(name: "EDMA_EH_FREEZE", value: -65102149)
!446 = !DIEnumerator(name: "EDMA_EH_FREEZE_5", value: 8059)
!447 = !DIEnumerator(name: "EDMA_REQ_Q_BASE_HI", value: 16)
!448 = !DIEnumerator(name: "EDMA_REQ_Q_IN_PTR", value: 20)
!449 = !DIEnumerator(name: "EDMA_REQ_Q_OUT_PTR", value: 24)
!450 = !DIEnumerator(name: "EDMA_REQ_Q_PTR_SHIFT", value: 5)
!451 = !DIEnumerator(name: "EDMA_RSP_Q_BASE_HI", value: 28)
!452 = !DIEnumerator(name: "EDMA_RSP_Q_IN_PTR", value: 32)
!453 = !DIEnumerator(name: "EDMA_RSP_Q_OUT_PTR", value: 36)
!454 = !DIEnumerator(name: "EDMA_RSP_Q_PTR_SHIFT", value: 3)
!455 = !DIEnumerator(name: "EDMA_CMD", value: 40)
!456 = !DIEnumerator(name: "EDMA_EN", value: 1)
!457 = !DIEnumerator(name: "EDMA_DS", value: 2)
!458 = !DIEnumerator(name: "EDMA_RESET", value: 4)
!459 = !DIEnumerator(name: "EDMA_STATUS", value: 48)
!460 = !DIEnumerator(name: "EDMA_STATUS_CACHE_EMPTY", value: 64)
!461 = !DIEnumerator(name: "EDMA_STATUS_IDLE", value: 128)
!462 = !DIEnumerator(name: "EDMA_IORDY_TMOUT", value: 52)
!463 = !DIEnumerator(name: "EDMA_ARB_CFG", value: 56)
!464 = !DIEnumerator(name: "EDMA_HALTCOND", value: 96)
!465 = !DIEnumerator(name: "EDMA_UNKNOWN_RSVD", value: 108)
!466 = !DIEnumerator(name: "BMDMA_CMD", value: 548)
!467 = !DIEnumerator(name: "BMDMA_STATUS", value: 552)
!468 = !DIEnumerator(name: "BMDMA_PRD_LOW", value: 556)
!469 = !DIEnumerator(name: "BMDMA_PRD_HIGH", value: 560)
!470 = !DIEnumerator(name: "MV_HP_FLAG_MSI", value: 1)
!471 = !DIEnumerator(name: "MV_HP_ERRATA_50XXB0", value: 2)
!472 = !DIEnumerator(name: "MV_HP_ERRATA_50XXB2", value: 4)
!473 = !DIEnumerator(name: "MV_HP_ERRATA_60X1B2", value: 8)
!474 = !DIEnumerator(name: "MV_HP_ERRATA_60X1C0", value: 16)
!475 = !DIEnumerator(name: "MV_HP_GEN_I", value: 64)
!476 = !DIEnumerator(name: "MV_HP_GEN_II", value: 128)
!477 = !DIEnumerator(name: "MV_HP_GEN_IIE", value: 256)
!478 = !DIEnumerator(name: "MV_HP_PCIE", value: 512)
!479 = !DIEnumerator(name: "MV_HP_CUT_THROUGH", value: 1024)
!480 = !DIEnumerator(name: "MV_HP_FLAG_SOC", value: 2048)
!481 = !DIEnumerator(name: "MV_HP_QUIRK_LED_BLINK_EN", value: 4096)
!482 = !DIEnumerator(name: "MV_HP_FIX_LP_PHY_CTL", value: 8192)
!483 = !DIEnumerator(name: "MV_PP_FLAG_EDMA_EN", value: 1)
!484 = !DIEnumerator(name: "MV_PP_FLAG_NCQ_EN", value: 2)
!485 = !DIEnumerator(name: "MV_PP_FLAG_FBS_EN", value: 4)
!486 = !DIEnumerator(name: "MV_PP_FLAG_DELAYED_EH", value: 8)
!487 = !DIEnumerator(name: "MV_PP_FLAG_FAKE_ATA_BUSY", value: 16)
!488 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !204, line: 106, baseType: !260, size: 32, elements: !489)
!489 = !{!490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724}
!490 = !DIEnumerator(name: "LIBATA_MAX_PRD", value: 128)
!491 = !DIEnumerator(name: "LIBATA_DUMB_MAX_PRD", value: 64)
!492 = !DIEnumerator(name: "ATA_DEF_QUEUE", value: 1)
!493 = !DIEnumerator(name: "ATA_MAX_QUEUE", value: 32)
!494 = !DIEnumerator(name: "ATA_TAG_INTERNAL", value: 32)
!495 = !DIEnumerator(name: "ATA_SHORT_PAUSE", value: 16)
!496 = !DIEnumerator(name: "ATAPI_MAX_DRAIN", value: 16384)
!497 = !DIEnumerator(name: "ATA_ALL_DEVICES", value: 3)
!498 = !DIEnumerator(name: "ATA_SHT_EMULATED", value: 1)
!499 = !DIEnumerator(name: "ATA_SHT_THIS_ID", value: -1)
!500 = !DIEnumerator(name: "ATA_TFLAG_LBA48", value: 1)
!501 = !DIEnumerator(name: "ATA_TFLAG_ISADDR", value: 2)
!502 = !DIEnumerator(name: "ATA_TFLAG_DEVICE", value: 4)
!503 = !DIEnumerator(name: "ATA_TFLAG_WRITE", value: 8)
!504 = !DIEnumerator(name: "ATA_TFLAG_LBA", value: 16)
!505 = !DIEnumerator(name: "ATA_TFLAG_FUA", value: 32)
!506 = !DIEnumerator(name: "ATA_TFLAG_POLLING", value: 64)
!507 = !DIEnumerator(name: "ATA_DFLAG_LBA", value: 1)
!508 = !DIEnumerator(name: "ATA_DFLAG_LBA48", value: 2)
!509 = !DIEnumerator(name: "ATA_DFLAG_CDB_INTR", value: 4)
!510 = !DIEnumerator(name: "ATA_DFLAG_NCQ", value: 8)
!511 = !DIEnumerator(name: "ATA_DFLAG_FLUSH_EXT", value: 16)
!512 = !DIEnumerator(name: "ATA_DFLAG_ACPI_PENDING", value: 32)
!513 = !DIEnumerator(name: "ATA_DFLAG_ACPI_FAILED", value: 64)
!514 = !DIEnumerator(name: "ATA_DFLAG_AN", value: 128)
!515 = !DIEnumerator(name: "ATA_DFLAG_TRUSTED", value: 256)
!516 = !DIEnumerator(name: "ATA_DFLAG_DMADIR", value: 1024)
!517 = !DIEnumerator(name: "ATA_DFLAG_CFG_MASK", value: 4095)
!518 = !DIEnumerator(name: "ATA_DFLAG_PIO", value: 4096)
!519 = !DIEnumerator(name: "ATA_DFLAG_NCQ_OFF", value: 8192)
!520 = !DIEnumerator(name: "ATA_DFLAG_SLEEPING", value: 32768)
!521 = !DIEnumerator(name: "ATA_DFLAG_DUBIOUS_XFER", value: 65536)
!522 = !DIEnumerator(name: "ATA_DFLAG_NO_UNLOAD", value: 131072)
!523 = !DIEnumerator(name: "ATA_DFLAG_UNLOCK_HPA", value: 262144)
!524 = !DIEnumerator(name: "ATA_DFLAG_NCQ_SEND_RECV", value: 524288)
!525 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO", value: 1048576)
!526 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO_ENABLE", value: 2097152)
!527 = !DIEnumerator(name: "ATA_DFLAG_INIT_MASK", value: 16777215)
!528 = !DIEnumerator(name: "ATA_DFLAG_DETACH", value: 16777216)
!529 = !DIEnumerator(name: "ATA_DFLAG_DETACHED", value: 33554432)
!530 = !DIEnumerator(name: "ATA_DFLAG_DA", value: 67108864)
!531 = !DIEnumerator(name: "ATA_DFLAG_DEVSLP", value: 134217728)
!532 = !DIEnumerator(name: "ATA_DFLAG_ACPI_DISABLED", value: 268435456)
!533 = !DIEnumerator(name: "ATA_DFLAG_D_SENSE", value: 536870912)
!534 = !DIEnumerator(name: "ATA_DFLAG_ZAC", value: 1073741824)
!535 = !DIEnumerator(name: "ATA_DEV_UNKNOWN", value: 0)
!536 = !DIEnumerator(name: "ATA_DEV_ATA", value: 1)
!537 = !DIEnumerator(name: "ATA_DEV_ATA_UNSUP", value: 2)
!538 = !DIEnumerator(name: "ATA_DEV_ATAPI", value: 3)
!539 = !DIEnumerator(name: "ATA_DEV_ATAPI_UNSUP", value: 4)
!540 = !DIEnumerator(name: "ATA_DEV_PMP", value: 5)
!541 = !DIEnumerator(name: "ATA_DEV_PMP_UNSUP", value: 6)
!542 = !DIEnumerator(name: "ATA_DEV_SEMB", value: 7)
!543 = !DIEnumerator(name: "ATA_DEV_SEMB_UNSUP", value: 8)
!544 = !DIEnumerator(name: "ATA_DEV_ZAC", value: 9)
!545 = !DIEnumerator(name: "ATA_DEV_ZAC_UNSUP", value: 10)
!546 = !DIEnumerator(name: "ATA_DEV_NONE", value: 11)
!547 = !DIEnumerator(name: "ATA_LFLAG_NO_HRST", value: 2)
!548 = !DIEnumerator(name: "ATA_LFLAG_NO_SRST", value: 4)
!549 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_ATA", value: 8)
!550 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_SEMB", value: 16)
!551 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_CLASS", value: 24)
!552 = !DIEnumerator(name: "ATA_LFLAG_NO_RETRY", value: 32)
!553 = !DIEnumerator(name: "ATA_LFLAG_DISABLED", value: 64)
!554 = !DIEnumerator(name: "ATA_LFLAG_SW_ACTIVITY", value: 128)
!555 = !DIEnumerator(name: "ATA_LFLAG_NO_LPM", value: 256)
!556 = !DIEnumerator(name: "ATA_LFLAG_RST_ONCE", value: 512)
!557 = !DIEnumerator(name: "ATA_LFLAG_CHANGED", value: 1024)
!558 = !DIEnumerator(name: "ATA_LFLAG_NO_DB_DELAY", value: 2048)
!559 = !DIEnumerator(name: "ATA_FLAG_SLAVE_POSS", value: 1)
!560 = !DIEnumerator(name: "ATA_FLAG_SATA", value: 2)
!561 = !DIEnumerator(name: "ATA_FLAG_NO_LPM", value: 4)
!562 = !DIEnumerator(name: "ATA_FLAG_NO_LOG_PAGE", value: 32)
!563 = !DIEnumerator(name: "ATA_FLAG_NO_ATAPI", value: 64)
!564 = !DIEnumerator(name: "ATA_FLAG_PIO_DMA", value: 128)
!565 = !DIEnumerator(name: "ATA_FLAG_PIO_LBA48", value: 256)
!566 = !DIEnumerator(name: "ATA_FLAG_PIO_POLLING", value: 512)
!567 = !DIEnumerator(name: "ATA_FLAG_NCQ", value: 1024)
!568 = !DIEnumerator(name: "ATA_FLAG_NO_POWEROFF_SPINDOWN", value: 2048)
!569 = !DIEnumerator(name: "ATA_FLAG_NO_HIBERNATE_SPINDOWN", value: 4096)
!570 = !DIEnumerator(name: "ATA_FLAG_DEBUGMSG", value: 8192)
!571 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AA", value: 16384)
!572 = !DIEnumerator(name: "ATA_FLAG_IGN_SIMPLEX", value: 32768)
!573 = !DIEnumerator(name: "ATA_FLAG_NO_IORDY", value: 65536)
!574 = !DIEnumerator(name: "ATA_FLAG_ACPI_SATA", value: 131072)
!575 = !DIEnumerator(name: "ATA_FLAG_AN", value: 262144)
!576 = !DIEnumerator(name: "ATA_FLAG_PMP", value: 524288)
!577 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AUX", value: 1048576)
!578 = !DIEnumerator(name: "ATA_FLAG_EM", value: 2097152)
!579 = !DIEnumerator(name: "ATA_FLAG_SW_ACTIVITY", value: 4194304)
!580 = !DIEnumerator(name: "ATA_FLAG_NO_DIPM", value: 8388608)
!581 = !DIEnumerator(name: "ATA_FLAG_SAS_HOST", value: 16777216)
!582 = !DIEnumerator(name: "ATA_PFLAG_EH_PENDING", value: 1)
!583 = !DIEnumerator(name: "ATA_PFLAG_EH_IN_PROGRESS", value: 2)
!584 = !DIEnumerator(name: "ATA_PFLAG_FROZEN", value: 4)
!585 = !DIEnumerator(name: "ATA_PFLAG_RECOVERED", value: 8)
!586 = !DIEnumerator(name: "ATA_PFLAG_LOADING", value: 16)
!587 = !DIEnumerator(name: "ATA_PFLAG_SCSI_HOTPLUG", value: 64)
!588 = !DIEnumerator(name: "ATA_PFLAG_INITIALIZING", value: 128)
!589 = !DIEnumerator(name: "ATA_PFLAG_RESETTING", value: 256)
!590 = !DIEnumerator(name: "ATA_PFLAG_UNLOADING", value: 512)
!591 = !DIEnumerator(name: "ATA_PFLAG_UNLOADED", value: 1024)
!592 = !DIEnumerator(name: "ATA_PFLAG_SUSPENDED", value: 131072)
!593 = !DIEnumerator(name: "ATA_PFLAG_PM_PENDING", value: 262144)
!594 = !DIEnumerator(name: "ATA_PFLAG_INIT_GTM_VALID", value: 524288)
!595 = !DIEnumerator(name: "ATA_PFLAG_PIO32", value: 1048576)
!596 = !DIEnumerator(name: "ATA_PFLAG_PIO32CHANGE", value: 2097152)
!597 = !DIEnumerator(name: "ATA_PFLAG_EXTERNAL", value: 4194304)
!598 = !DIEnumerator(name: "ATA_QCFLAG_ACTIVE", value: 1)
!599 = !DIEnumerator(name: "ATA_QCFLAG_DMAMAP", value: 2)
!600 = !DIEnumerator(name: "ATA_QCFLAG_IO", value: 8)
!601 = !DIEnumerator(name: "ATA_QCFLAG_RESULT_TF", value: 16)
!602 = !DIEnumerator(name: "ATA_QCFLAG_CLEAR_EXCL", value: 32)
!603 = !DIEnumerator(name: "ATA_QCFLAG_QUIET", value: 64)
!604 = !DIEnumerator(name: "ATA_QCFLAG_RETRY", value: 128)
!605 = !DIEnumerator(name: "ATA_QCFLAG_FAILED", value: 65536)
!606 = !DIEnumerator(name: "ATA_QCFLAG_SENSE_VALID", value: 131072)
!607 = !DIEnumerator(name: "ATA_QCFLAG_EH_SCHEDULED", value: 262144)
!608 = !DIEnumerator(name: "ATA_HOST_SIMPLEX", value: 1)
!609 = !DIEnumerator(name: "ATA_HOST_STARTED", value: 2)
!610 = !DIEnumerator(name: "ATA_HOST_PARALLEL_SCAN", value: 4)
!611 = !DIEnumerator(name: "ATA_HOST_IGNORE_ATA", value: 8)
!612 = !DIEnumerator(name: "ATA_TMOUT_BOOT", value: 30000)
!613 = !DIEnumerator(name: "ATA_TMOUT_BOOT_QUICK", value: 7000)
!614 = !DIEnumerator(name: "ATA_TMOUT_INTERNAL_QUICK", value: 5000)
!615 = !DIEnumerator(name: "ATA_TMOUT_MAX_PARK", value: 30000)
!616 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT_LONG", value: 2000)
!617 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT", value: 800)
!618 = !DIEnumerator(name: "ATA_WAIT_AFTER_RESET", value: 150)
!619 = !DIEnumerator(name: "ATA_TMOUT_PMP_SRST_WAIT", value: 5000)
!620 = !DIEnumerator(name: "ATA_TMOUT_SPURIOUS_PHY", value: 10000)
!621 = !DIEnumerator(name: "BUS_UNKNOWN", value: 0)
!622 = !DIEnumerator(name: "BUS_DMA", value: 1)
!623 = !DIEnumerator(name: "BUS_IDLE", value: 2)
!624 = !DIEnumerator(name: "BUS_NOINTR", value: 3)
!625 = !DIEnumerator(name: "BUS_NODATA", value: 4)
!626 = !DIEnumerator(name: "BUS_TIMER", value: 5)
!627 = !DIEnumerator(name: "BUS_PIO", value: 6)
!628 = !DIEnumerator(name: "BUS_EDD", value: 7)
!629 = !DIEnumerator(name: "BUS_IDENTIFY", value: 8)
!630 = !DIEnumerator(name: "BUS_PACKET", value: 9)
!631 = !DIEnumerator(name: "PORT_UNKNOWN", value: 0)
!632 = !DIEnumerator(name: "PORT_ENABLED", value: 1)
!633 = !DIEnumerator(name: "PORT_DISABLED", value: 2)
!634 = !DIEnumerator(name: "ATA_NR_PIO_MODES", value: 7)
!635 = !DIEnumerator(name: "ATA_NR_MWDMA_MODES", value: 5)
!636 = !DIEnumerator(name: "ATA_NR_UDMA_MODES", value: 8)
!637 = !DIEnumerator(name: "ATA_SHIFT_PIO", value: 0)
!638 = !DIEnumerator(name: "ATA_SHIFT_MWDMA", value: 7)
!639 = !DIEnumerator(name: "ATA_SHIFT_UDMA", value: 12)
!640 = !DIEnumerator(name: "ATA_SHIFT_PRIO", value: 6)
!641 = !DIEnumerator(name: "ATA_PRIO_HIGH", value: 2)
!642 = !DIEnumerator(name: "ATA_DMA_PAD_SZ", value: 4)
!643 = !DIEnumerator(name: "ATA_ERING_SIZE", value: 32)
!644 = !DIEnumerator(name: "ATA_DEFER_LINK", value: 1)
!645 = !DIEnumerator(name: "ATA_DEFER_PORT", value: 2)
!646 = !DIEnumerator(name: "ATA_EH_DESC_LEN", value: 80)
!647 = !DIEnumerator(name: "ATA_EH_REVALIDATE", value: 1)
!648 = !DIEnumerator(name: "ATA_EH_SOFTRESET", value: 2)
!649 = !DIEnumerator(name: "ATA_EH_HARDRESET", value: 4)
!650 = !DIEnumerator(name: "ATA_EH_RESET", value: 6)
!651 = !DIEnumerator(name: "ATA_EH_ENABLE_LINK", value: 8)
!652 = !DIEnumerator(name: "ATA_EH_PARK", value: 32)
!653 = !DIEnumerator(name: "ATA_EH_PERDEV_MASK", value: 33)
!654 = !DIEnumerator(name: "ATA_EH_ALL_ACTIONS", value: 15)
!655 = !DIEnumerator(name: "ATA_EHI_HOTPLUGGED", value: 1)
!656 = !DIEnumerator(name: "ATA_EHI_NO_AUTOPSY", value: 4)
!657 = !DIEnumerator(name: "ATA_EHI_QUIET", value: 8)
!658 = !DIEnumerator(name: "ATA_EHI_NO_RECOVERY", value: 16)
!659 = !DIEnumerator(name: "ATA_EHI_DID_SOFTRESET", value: 65536)
!660 = !DIEnumerator(name: "ATA_EHI_DID_HARDRESET", value: 131072)
!661 = !DIEnumerator(name: "ATA_EHI_PRINTINFO", value: 262144)
!662 = !DIEnumerator(name: "ATA_EHI_SETMODE", value: 524288)
!663 = !DIEnumerator(name: "ATA_EHI_POST_SETMODE", value: 1048576)
!664 = !DIEnumerator(name: "ATA_EHI_DID_RESET", value: 196608)
!665 = !DIEnumerator(name: "ATA_EHI_TO_SLAVE_MASK", value: 12)
!666 = !DIEnumerator(name: "ATA_EH_MAX_TRIES", value: 5)
!667 = !DIEnumerator(name: "ATA_LINK_RESUME_TRIES", value: 5)
!668 = !DIEnumerator(name: "ATA_PROBE_MAX_TRIES", value: 3)
!669 = !DIEnumerator(name: "ATA_EH_DEV_TRIES", value: 3)
!670 = !DIEnumerator(name: "ATA_EH_PMP_TRIES", value: 5)
!671 = !DIEnumerator(name: "ATA_EH_PMP_LINK_TRIES", value: 3)
!672 = !DIEnumerator(name: "SATA_PMP_RW_TIMEOUT", value: 3000)
!673 = !DIEnumerator(name: "ATA_EH_CMD_TIMEOUT_TABLE_SIZE", value: 6)
!674 = !DIEnumerator(name: "ATA_HORKAGE_DIAGNOSTIC", value: 1)
!675 = !DIEnumerator(name: "ATA_HORKAGE_NODMA", value: 2)
!676 = !DIEnumerator(name: "ATA_HORKAGE_NONCQ", value: 4)
!677 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_128", value: 8)
!678 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_HPA", value: 16)
!679 = !DIEnumerator(name: "ATA_HORKAGE_DISABLE", value: 32)
!680 = !DIEnumerator(name: "ATA_HORKAGE_HPA_SIZE", value: 64)
!681 = !DIEnumerator(name: "ATA_HORKAGE_IVB", value: 256)
!682 = !DIEnumerator(name: "ATA_HORKAGE_STUCK_ERR", value: 512)
!683 = !DIEnumerator(name: "ATA_HORKAGE_BRIDGE_OK", value: 1024)
!684 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_MOD16_DMA", value: 2048)
!685 = !DIEnumerator(name: "ATA_HORKAGE_FIRMWARE_WARN", value: 4096)
!686 = !DIEnumerator(name: "ATA_HORKAGE_1_5_GBPS", value: 8192)
!687 = !DIEnumerator(name: "ATA_HORKAGE_NOSETXFER", value: 16384)
!688 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_FPDMA_AA", value: 32768)
!689 = !DIEnumerator(name: "ATA_HORKAGE_DUMP_ID", value: 65536)
!690 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_LBA48", value: 131072)
!691 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_DMADIR", value: 262144)
!692 = !DIEnumerator(name: "ATA_HORKAGE_NO_NCQ_TRIM", value: 524288)
!693 = !DIEnumerator(name: "ATA_HORKAGE_NOLPM", value: 1048576)
!694 = !DIEnumerator(name: "ATA_HORKAGE_WD_BROKEN_LPM", value: 2097152)
!695 = !DIEnumerator(name: "ATA_HORKAGE_ZERO_AFTER_TRIM", value: 4194304)
!696 = !DIEnumerator(name: "ATA_HORKAGE_NO_DMA_LOG", value: 8388608)
!697 = !DIEnumerator(name: "ATA_HORKAGE_NOTRIM", value: 16777216)
!698 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_1024", value: 33554432)
!699 = !DIEnumerator(name: "ATA_HORKAGE_MAX_TRIM_128M", value: 67108864)
!700 = !DIEnumerator(name: "ATA_DMA_MASK_ATA", value: 1)
!701 = !DIEnumerator(name: "ATA_DMA_MASK_ATAPI", value: 2)
!702 = !DIEnumerator(name: "ATA_DMA_MASK_CFA", value: 4)
!703 = !DIEnumerator(name: "ATAPI_READ", value: 0)
!704 = !DIEnumerator(name: "ATAPI_WRITE", value: 1)
!705 = !DIEnumerator(name: "ATAPI_READ_CD", value: 2)
!706 = !DIEnumerator(name: "ATAPI_PASS_THRU", value: 3)
!707 = !DIEnumerator(name: "ATAPI_MISC", value: 4)
!708 = !DIEnumerator(name: "ATA_TIMING_SETUP", value: 1)
!709 = !DIEnumerator(name: "ATA_TIMING_ACT8B", value: 2)
!710 = !DIEnumerator(name: "ATA_TIMING_REC8B", value: 4)
!711 = !DIEnumerator(name: "ATA_TIMING_CYC8B", value: 8)
!712 = !DIEnumerator(name: "ATA_TIMING_8BIT", value: 14)
!713 = !DIEnumerator(name: "ATA_TIMING_ACTIVE", value: 16)
!714 = !DIEnumerator(name: "ATA_TIMING_RECOVER", value: 32)
!715 = !DIEnumerator(name: "ATA_TIMING_DMACK_HOLD", value: 64)
!716 = !DIEnumerator(name: "ATA_TIMING_CYCLE", value: 128)
!717 = !DIEnumerator(name: "ATA_TIMING_UDMA", value: 256)
!718 = !DIEnumerator(name: "ATA_TIMING_ALL", value: 511)
!719 = !DIEnumerator(name: "ATA_ACPI_FILTER_SETXFER", value: 1)
!720 = !DIEnumerator(name: "ATA_ACPI_FILTER_LOCK", value: 2)
!721 = !DIEnumerator(name: "ATA_ACPI_FILTER_DIPM", value: 4)
!722 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_OFFSET", value: 8)
!723 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_AA", value: 16)
!724 = !DIEnumerator(name: "ATA_ACPI_FILTER_DEFAULT", value: 7)
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_prot_flags", file: !726, line: 520, baseType: !7, size: 32, elements: !727)
!726 = !DIFile(filename: "./include/linux/ata.h", directory: "/home/lizy2001/genbc/linux")
!727 = !{!728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740}
!728 = !DIEnumerator(name: "ATA_PROT_FLAG_PIO", value: 1, isUnsigned: true)
!729 = !DIEnumerator(name: "ATA_PROT_FLAG_DMA", value: 2, isUnsigned: true)
!730 = !DIEnumerator(name: "ATA_PROT_FLAG_NCQ", value: 4, isUnsigned: true)
!731 = !DIEnumerator(name: "ATA_PROT_FLAG_ATAPI", value: 8, isUnsigned: true)
!732 = !DIEnumerator(name: "ATA_PROT_UNKNOWN", value: 255, isUnsigned: true)
!733 = !DIEnumerator(name: "ATA_PROT_NODATA", value: 0, isUnsigned: true)
!734 = !DIEnumerator(name: "ATA_PROT_PIO", value: 1, isUnsigned: true)
!735 = !DIEnumerator(name: "ATA_PROT_DMA", value: 2, isUnsigned: true)
!736 = !DIEnumerator(name: "ATA_PROT_NCQ_NODATA", value: 4, isUnsigned: true)
!737 = !DIEnumerator(name: "ATA_PROT_NCQ", value: 6, isUnsigned: true)
!738 = !DIEnumerator(name: "ATAPI_PROT_NODATA", value: 8, isUnsigned: true)
!739 = !DIEnumerator(name: "ATAPI_PROT_PIO", value: 9, isUnsigned: true)
!740 = !DIEnumerator(name: "ATAPI_PROT_DMA", value: 10, isUnsigned: true)
!741 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !726, line: 25, baseType: !260, size: 32, elements: !742)
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!743 = !DIEnumerator(name: "ATA_MAX_DEVICES", value: 2)
!744 = !DIEnumerator(name: "ATA_MAX_PRD", value: 256)
!745 = !DIEnumerator(name: "ATA_SECT_SIZE", value: 512)
!746 = !DIEnumerator(name: "ATA_MAX_SECTORS_128", value: 128)
!747 = !DIEnumerator(name: "ATA_MAX_SECTORS", value: 256)
!748 = !DIEnumerator(name: "ATA_MAX_SECTORS_1024", value: 1024)
!749 = !DIEnumerator(name: "ATA_MAX_SECTORS_LBA48", value: 65535)
!750 = !DIEnumerator(name: "ATA_MAX_SECTORS_TAPE", value: 65535)
!751 = !DIEnumerator(name: "ATA_MAX_TRIM_RNUM", value: 64)
!752 = !DIEnumerator(name: "ATA_ID_WORDS", value: 256)
!753 = !DIEnumerator(name: "ATA_ID_CONFIG", value: 0)
!754 = !DIEnumerator(name: "ATA_ID_CYLS", value: 1)
!755 = !DIEnumerator(name: "ATA_ID_HEADS", value: 3)
!756 = !DIEnumerator(name: "ATA_ID_SECTORS", value: 6)
!757 = !DIEnumerator(name: "ATA_ID_SERNO", value: 10)
!758 = !DIEnumerator(name: "ATA_ID_BUF_SIZE", value: 21)
!759 = !DIEnumerator(name: "ATA_ID_FW_REV", value: 23)
!760 = !DIEnumerator(name: "ATA_ID_PROD", value: 27)
!761 = !DIEnumerator(name: "ATA_ID_MAX_MULTSECT", value: 47)
!762 = !DIEnumerator(name: "ATA_ID_DWORD_IO", value: 48)
!763 = !DIEnumerator(name: "ATA_ID_TRUSTED", value: 48)
!764 = !DIEnumerator(name: "ATA_ID_CAPABILITY", value: 49)
!765 = !DIEnumerator(name: "ATA_ID_OLD_PIO_MODES", value: 51)
!766 = !DIEnumerator(name: "ATA_ID_OLD_DMA_MODES", value: 52)
!767 = !DIEnumerator(name: "ATA_ID_FIELD_VALID", value: 53)
!768 = !DIEnumerator(name: "ATA_ID_CUR_CYLS", value: 54)
!769 = !DIEnumerator(name: "ATA_ID_CUR_HEADS", value: 55)
!770 = !DIEnumerator(name: "ATA_ID_CUR_SECTORS", value: 56)
!771 = !DIEnumerator(name: "ATA_ID_MULTSECT", value: 59)
!772 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY", value: 60)
!773 = !DIEnumerator(name: "ATA_ID_SWDMA_MODES", value: 62)
!774 = !DIEnumerator(name: "ATA_ID_MWDMA_MODES", value: 63)
!775 = !DIEnumerator(name: "ATA_ID_PIO_MODES", value: 64)
!776 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_MIN", value: 65)
!777 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_TIME", value: 66)
!778 = !DIEnumerator(name: "ATA_ID_EIDE_PIO", value: 67)
!779 = !DIEnumerator(name: "ATA_ID_EIDE_PIO_IORDY", value: 68)
!780 = !DIEnumerator(name: "ATA_ID_ADDITIONAL_SUPP", value: 69)
!781 = !DIEnumerator(name: "ATA_ID_QUEUE_DEPTH", value: 75)
!782 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY", value: 76)
!783 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY_2", value: 77)
!784 = !DIEnumerator(name: "ATA_ID_FEATURE_SUPP", value: 78)
!785 = !DIEnumerator(name: "ATA_ID_MAJOR_VER", value: 80)
!786 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_1", value: 82)
!787 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_2", value: 83)
!788 = !DIEnumerator(name: "ATA_ID_CFSSE", value: 84)
!789 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_1", value: 85)
!790 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_2", value: 86)
!791 = !DIEnumerator(name: "ATA_ID_CSF_DEFAULT", value: 87)
!792 = !DIEnumerator(name: "ATA_ID_UDMA_MODES", value: 88)
!793 = !DIEnumerator(name: "ATA_ID_HW_CONFIG", value: 93)
!794 = !DIEnumerator(name: "ATA_ID_SPG", value: 98)
!795 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY_2", value: 100)
!796 = !DIEnumerator(name: "ATA_ID_SECTOR_SIZE", value: 106)
!797 = !DIEnumerator(name: "ATA_ID_WWN", value: 108)
!798 = !DIEnumerator(name: "ATA_ID_LOGICAL_SECTOR_SIZE", value: 117)
!799 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_3", value: 119)
!800 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_4", value: 120)
!801 = !DIEnumerator(name: "ATA_ID_LAST_LUN", value: 126)
!802 = !DIEnumerator(name: "ATA_ID_DLF", value: 128)
!803 = !DIEnumerator(name: "ATA_ID_CSFO", value: 129)
!804 = !DIEnumerator(name: "ATA_ID_CFA_POWER", value: 160)
!805 = !DIEnumerator(name: "ATA_ID_CFA_KEY_MGMT", value: 162)
!806 = !DIEnumerator(name: "ATA_ID_CFA_MODES", value: 163)
!807 = !DIEnumerator(name: "ATA_ID_DATA_SET_MGMT", value: 169)
!808 = !DIEnumerator(name: "ATA_ID_SCT_CMD_XPORT", value: 206)
!809 = !DIEnumerator(name: "ATA_ID_ROT_SPEED", value: 217)
!810 = !DIEnumerator(name: "ATA_ID_PIO4", value: 2)
!811 = !DIEnumerator(name: "ATA_ID_SERNO_LEN", value: 20)
!812 = !DIEnumerator(name: "ATA_ID_FW_REV_LEN", value: 8)
!813 = !DIEnumerator(name: "ATA_ID_PROD_LEN", value: 40)
!814 = !DIEnumerator(name: "ATA_ID_WWN_LEN", value: 8)
!815 = !DIEnumerator(name: "ATA_PCI_CTL_OFS", value: 2)
!816 = !DIEnumerator(name: "ATA_PIO0", value: 1)
!817 = !DIEnumerator(name: "ATA_PIO1", value: 3)
!818 = !DIEnumerator(name: "ATA_PIO2", value: 7)
!819 = !DIEnumerator(name: "ATA_PIO3", value: 15)
!820 = !DIEnumerator(name: "ATA_PIO4", value: 31)
!821 = !DIEnumerator(name: "ATA_PIO5", value: 63)
!822 = !DIEnumerator(name: "ATA_PIO6", value: 127)
!823 = !DIEnumerator(name: "ATA_PIO4_ONLY", value: 16)
!824 = !DIEnumerator(name: "ATA_SWDMA0", value: 1)
!825 = !DIEnumerator(name: "ATA_SWDMA1", value: 3)
!826 = !DIEnumerator(name: "ATA_SWDMA2", value: 7)
!827 = !DIEnumerator(name: "ATA_SWDMA2_ONLY", value: 4)
!828 = !DIEnumerator(name: "ATA_MWDMA0", value: 1)
!829 = !DIEnumerator(name: "ATA_MWDMA1", value: 3)
!830 = !DIEnumerator(name: "ATA_MWDMA2", value: 7)
!831 = !DIEnumerator(name: "ATA_MWDMA3", value: 15)
!832 = !DIEnumerator(name: "ATA_MWDMA4", value: 31)
!833 = !DIEnumerator(name: "ATA_MWDMA12_ONLY", value: 6)
!834 = !DIEnumerator(name: "ATA_MWDMA2_ONLY", value: 4)
!835 = !DIEnumerator(name: "ATA_UDMA0", value: 1)
!836 = !DIEnumerator(name: "ATA_UDMA1", value: 3)
!837 = !DIEnumerator(name: "ATA_UDMA2", value: 7)
!838 = !DIEnumerator(name: "ATA_UDMA3", value: 15)
!839 = !DIEnumerator(name: "ATA_UDMA4", value: 31)
!840 = !DIEnumerator(name: "ATA_UDMA5", value: 63)
!841 = !DIEnumerator(name: "ATA_UDMA6", value: 127)
!842 = !DIEnumerator(name: "ATA_UDMA7", value: 255)
!843 = !DIEnumerator(name: "ATA_UDMA24_ONLY", value: 20)
!844 = !DIEnumerator(name: "ATA_UDMA_MASK_40C", value: 7)
!845 = !DIEnumerator(name: "ATA_PRD_SZ", value: 8)
!846 = !DIEnumerator(name: "ATA_PRD_TBL_SZ", value: 2048)
!847 = !DIEnumerator(name: "ATA_PRD_EOT", value: -2147483648)
!848 = !DIEnumerator(name: "ATA_DMA_TABLE_OFS", value: 4)
!849 = !DIEnumerator(name: "ATA_DMA_STATUS", value: 2)
!850 = !DIEnumerator(name: "ATA_DMA_CMD", value: 0)
!851 = !DIEnumerator(name: "ATA_DMA_WR", value: 8)
!852 = !DIEnumerator(name: "ATA_DMA_START", value: 1)
!853 = !DIEnumerator(name: "ATA_DMA_INTR", value: 4)
!854 = !DIEnumerator(name: "ATA_DMA_ERR", value: 2)
!855 = !DIEnumerator(name: "ATA_DMA_ACTIVE", value: 1)
!856 = !DIEnumerator(name: "ATA_HOB", value: 128)
!857 = !DIEnumerator(name: "ATA_NIEN", value: 2)
!858 = !DIEnumerator(name: "ATA_LBA", value: 64)
!859 = !DIEnumerator(name: "ATA_DEV1", value: 16)
!860 = !DIEnumerator(name: "ATA_DEVICE_OBS", value: 160)
!861 = !DIEnumerator(name: "ATA_DEVCTL_OBS", value: 8)
!862 = !DIEnumerator(name: "ATA_BUSY", value: 128)
!863 = !DIEnumerator(name: "ATA_DRDY", value: 64)
!864 = !DIEnumerator(name: "ATA_DF", value: 32)
!865 = !DIEnumerator(name: "ATA_DSC", value: 16)
!866 = !DIEnumerator(name: "ATA_DRQ", value: 8)
!867 = !DIEnumerator(name: "ATA_CORR", value: 4)
!868 = !DIEnumerator(name: "ATA_SENSE", value: 2)
!869 = !DIEnumerator(name: "ATA_ERR", value: 1)
!870 = !DIEnumerator(name: "ATA_SRST", value: 4)
!871 = !DIEnumerator(name: "ATA_ICRC", value: 128)
!872 = !DIEnumerator(name: "ATA_BBK", value: 128)
!873 = !DIEnumerator(name: "ATA_UNC", value: 64)
!874 = !DIEnumerator(name: "ATA_MC", value: 32)
!875 = !DIEnumerator(name: "ATA_IDNF", value: 16)
!876 = !DIEnumerator(name: "ATA_MCR", value: 8)
!877 = !DIEnumerator(name: "ATA_ABORTED", value: 4)
!878 = !DIEnumerator(name: "ATA_TRK0NF", value: 2)
!879 = !DIEnumerator(name: "ATA_AMNF", value: 1)
!880 = !DIEnumerator(name: "ATAPI_LFS", value: 240)
!881 = !DIEnumerator(name: "ATAPI_EOM", value: 2)
!882 = !DIEnumerator(name: "ATAPI_ILI", value: 1)
!883 = !DIEnumerator(name: "ATAPI_IO", value: 2)
!884 = !DIEnumerator(name: "ATAPI_COD", value: 1)
!885 = !DIEnumerator(name: "ATA_REG_DATA", value: 0)
!886 = !DIEnumerator(name: "ATA_REG_ERR", value: 1)
!887 = !DIEnumerator(name: "ATA_REG_NSECT", value: 2)
!888 = !DIEnumerator(name: "ATA_REG_LBAL", value: 3)
!889 = !DIEnumerator(name: "ATA_REG_LBAM", value: 4)
!890 = !DIEnumerator(name: "ATA_REG_LBAH", value: 5)
!891 = !DIEnumerator(name: "ATA_REG_DEVICE", value: 6)
!892 = !DIEnumerator(name: "ATA_REG_STATUS", value: 7)
!893 = !DIEnumerator(name: "ATA_REG_FEATURE", value: 1)
!894 = !DIEnumerator(name: "ATA_REG_CMD", value: 7)
!895 = !DIEnumerator(name: "ATA_REG_BYTEL", value: 4)
!896 = !DIEnumerator(name: "ATA_REG_BYTEH", value: 5)
!897 = !DIEnumerator(name: "ATA_REG_DEVSEL", value: 6)
!898 = !DIEnumerator(name: "ATA_REG_IRQ", value: 2)
!899 = !DIEnumerator(name: "ATA_CMD_DEV_RESET", value: 8)
!900 = !DIEnumerator(name: "ATA_CMD_CHK_POWER", value: 229)
!901 = !DIEnumerator(name: "ATA_CMD_STANDBY", value: 226)
!902 = !DIEnumerator(name: "ATA_CMD_IDLE", value: 227)
!903 = !DIEnumerator(name: "ATA_CMD_EDD", value: 144)
!904 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO", value: 146)
!905 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO_DMA", value: 147)
!906 = !DIEnumerator(name: "ATA_CMD_NOP", value: 0)
!907 = !DIEnumerator(name: "ATA_CMD_FLUSH", value: 231)
!908 = !DIEnumerator(name: "ATA_CMD_FLUSH_EXT", value: 234)
!909 = !DIEnumerator(name: "ATA_CMD_ID_ATA", value: 236)
!910 = !DIEnumerator(name: "ATA_CMD_ID_ATAPI", value: 161)
!911 = !DIEnumerator(name: "ATA_CMD_SERVICE", value: 162)
!912 = !DIEnumerator(name: "ATA_CMD_READ", value: 200)
!913 = !DIEnumerator(name: "ATA_CMD_READ_EXT", value: 37)
!914 = !DIEnumerator(name: "ATA_CMD_READ_QUEUED", value: 38)
!915 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_EXT", value: 43)
!916 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_DMA_EXT", value: 42)
!917 = !DIEnumerator(name: "ATA_CMD_WRITE", value: 202)
!918 = !DIEnumerator(name: "ATA_CMD_WRITE_EXT", value: 53)
!919 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED", value: 54)
!920 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_EXT", value: 59)
!921 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_DMA_EXT", value: 58)
!922 = !DIEnumerator(name: "ATA_CMD_WRITE_FUA_EXT", value: 61)
!923 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED_FUA_EXT", value: 62)
!924 = !DIEnumerator(name: "ATA_CMD_FPDMA_READ", value: 96)
!925 = !DIEnumerator(name: "ATA_CMD_FPDMA_WRITE", value: 97)
!926 = !DIEnumerator(name: "ATA_CMD_NCQ_NON_DATA", value: 99)
!927 = !DIEnumerator(name: "ATA_CMD_FPDMA_SEND", value: 100)
!928 = !DIEnumerator(name: "ATA_CMD_FPDMA_RECV", value: 101)
!929 = !DIEnumerator(name: "ATA_CMD_PIO_READ", value: 32)
!930 = !DIEnumerator(name: "ATA_CMD_PIO_READ_EXT", value: 36)
!931 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE", value: 48)
!932 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE_EXT", value: 52)
!933 = !DIEnumerator(name: "ATA_CMD_READ_MULTI", value: 196)
!934 = !DIEnumerator(name: "ATA_CMD_READ_MULTI_EXT", value: 41)
!935 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI", value: 197)
!936 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_EXT", value: 57)
!937 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_FUA_EXT", value: 206)
!938 = !DIEnumerator(name: "ATA_CMD_SET_FEATURES", value: 239)
!939 = !DIEnumerator(name: "ATA_CMD_SET_MULTI", value: 198)
!940 = !DIEnumerator(name: "ATA_CMD_PACKET", value: 160)
!941 = !DIEnumerator(name: "ATA_CMD_VERIFY", value: 64)
!942 = !DIEnumerator(name: "ATA_CMD_VERIFY_EXT", value: 66)
!943 = !DIEnumerator(name: "ATA_CMD_WRITE_UNCORR_EXT", value: 69)
!944 = !DIEnumerator(name: "ATA_CMD_STANDBYNOW1", value: 224)
!945 = !DIEnumerator(name: "ATA_CMD_IDLEIMMEDIATE", value: 225)
!946 = !DIEnumerator(name: "ATA_CMD_SLEEP", value: 230)
!947 = !DIEnumerator(name: "ATA_CMD_INIT_DEV_PARAMS", value: 145)
!948 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX", value: 248)
!949 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX_EXT", value: 39)
!950 = !DIEnumerator(name: "ATA_CMD_SET_MAX", value: 249)
!951 = !DIEnumerator(name: "ATA_CMD_SET_MAX_EXT", value: 55)
!952 = !DIEnumerator(name: "ATA_CMD_READ_LOG_EXT", value: 47)
!953 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_EXT", value: 63)
!954 = !DIEnumerator(name: "ATA_CMD_READ_LOG_DMA_EXT", value: 71)
!955 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_DMA_EXT", value: 87)
!956 = !DIEnumerator(name: "ATA_CMD_TRUSTED_NONDATA", value: 91)
!957 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV", value: 92)
!958 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV_DMA", value: 93)
!959 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND", value: 94)
!960 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND_DMA", value: 95)
!961 = !DIEnumerator(name: "ATA_CMD_PMP_READ", value: 228)
!962 = !DIEnumerator(name: "ATA_CMD_PMP_READ_DMA", value: 233)
!963 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE", value: 232)
!964 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE_DMA", value: 235)
!965 = !DIEnumerator(name: "ATA_CMD_CONF_OVERLAY", value: 177)
!966 = !DIEnumerator(name: "ATA_CMD_SEC_SET_PASS", value: 241)
!967 = !DIEnumerator(name: "ATA_CMD_SEC_UNLOCK", value: 242)
!968 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_PREP", value: 243)
!969 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_UNIT", value: 244)
!970 = !DIEnumerator(name: "ATA_CMD_SEC_FREEZE_LOCK", value: 245)
!971 = !DIEnumerator(name: "ATA_CMD_SEC_DISABLE_PASS", value: 246)
!972 = !DIEnumerator(name: "ATA_CMD_CONFIG_STREAM", value: 81)
!973 = !DIEnumerator(name: "ATA_CMD_SMART", value: 176)
!974 = !DIEnumerator(name: "ATA_CMD_MEDIA_LOCK", value: 222)
!975 = !DIEnumerator(name: "ATA_CMD_MEDIA_UNLOCK", value: 223)
!976 = !DIEnumerator(name: "ATA_CMD_DSM", value: 6)
!977 = !DIEnumerator(name: "ATA_CMD_CHK_MED_CRD_TYP", value: 209)
!978 = !DIEnumerator(name: "ATA_CMD_CFA_REQ_EXT_ERR", value: 3)
!979 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_NE", value: 56)
!980 = !DIEnumerator(name: "ATA_CMD_CFA_TRANS_SECT", value: 135)
!981 = !DIEnumerator(name: "ATA_CMD_CFA_ERASE", value: 192)
!982 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_MULT_NE", value: 205)
!983 = !DIEnumerator(name: "ATA_CMD_REQ_SENSE_DATA", value: 11)
!984 = !DIEnumerator(name: "ATA_CMD_SANITIZE_DEVICE", value: 180)
!985 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_IN", value: 74)
!986 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_OUT", value: 159)
!987 = !DIEnumerator(name: "ATA_CMD_RESTORE", value: 16)
!988 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_RD_LOG_DMA_EXT", value: 1)
!989 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_ZAC_MGMT_IN", value: 2)
!990 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_DSM", value: 0)
!991 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_WR_LOG_DMA_EXT", value: 2)
!992 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ABORT_QUEUE", value: 0)
!993 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_SET_FEATURES", value: 5)
!994 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZERO_EXT", value: 6)
!995 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 7)
!996 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_IN_REPORT_ZONES", value: 0)
!997 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_CLOSE_ZONE", value: 1)
!998 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_FINISH_ZONE", value: 2)
!999 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_OPEN_ZONE", value: 3)
!1000 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_RESET_WRITE_POINTER", value: 4)
!1001 = !DIEnumerator(name: "ATA_LOG_DIRECTORY", value: 0)
!1002 = !DIEnumerator(name: "ATA_LOG_SATA_NCQ", value: 16)
!1003 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA", value: 18)
!1004 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV", value: 19)
!1005 = !DIEnumerator(name: "ATA_LOG_IDENTIFY_DEVICE", value: 48)
!1006 = !DIEnumerator(name: "ATA_LOG_SECURITY", value: 6)
!1007 = !DIEnumerator(name: "ATA_LOG_SATA_SETTINGS", value: 8)
!1008 = !DIEnumerator(name: "ATA_LOG_ZONED_INFORMATION", value: 9)
!1009 = !DIEnumerator(name: "ATA_LOG_DEVSLP_OFFSET", value: 48)
!1010 = !DIEnumerator(name: "ATA_LOG_DEVSLP_SIZE", value: 8)
!1011 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT", value: 0)
!1012 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT_MASK", value: 31)
!1013 = !DIEnumerator(name: "ATA_LOG_DEVSLP_DETO", value: 1)
!1014 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID", value: 7)
!1015 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID_MASK", value: 128)
!1016 = !DIEnumerator(name: "ATA_LOG_NCQ_PRIO_OFFSET", value: 9)
!1017 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_OFFSET", value: 0)
!1018 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_DSM", value: 1)
!1019 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_OFFSET", value: 4)
!1020 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_TRIM", value: 1)
!1021 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_OFFSET", value: 8)
!1022 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_SUPPORTED", value: 1)
!1023 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_OFFSET", value: 12)
!1024 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_SUPPORTED", value: 1)
!1025 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OFFSET", value: 16)
!1026 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OUT_SUPPORTED", value: 1)
!1027 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_IN_SUPPORTED", value: 2)
!1028 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SIZE", value: 20)
!1029 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SUBCMDS_OFFSET", value: 0)
!1030 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_OFFSET", value: 0)
!1031 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NCQ", value: 1)
!1032 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_ALL", value: 2)
!1033 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_STREAMING", value: 4)
!1034 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NON_STREAMING", value: 8)
!1035 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_SELECTED", value: 16)
!1036 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OFFSET", value: 28)
!1037 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 1)
!1038 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SIZE", value: 64)
!1039 = !DIEnumerator(name: "ATA_CMD_READ_LONG", value: 34)
!1040 = !DIEnumerator(name: "ATA_CMD_READ_LONG_ONCE", value: 35)
!1041 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG", value: 50)
!1042 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG_ONCE", value: 51)
!1043 = !DIEnumerator(name: "SETFEATURES_XFER", value: 3)
!1044 = !DIEnumerator(name: "XFER_UDMA_7", value: 71)
!1045 = !DIEnumerator(name: "XFER_UDMA_6", value: 70)
!1046 = !DIEnumerator(name: "XFER_UDMA_5", value: 69)
!1047 = !DIEnumerator(name: "XFER_UDMA_4", value: 68)
!1048 = !DIEnumerator(name: "XFER_UDMA_3", value: 67)
!1049 = !DIEnumerator(name: "XFER_UDMA_2", value: 66)
!1050 = !DIEnumerator(name: "XFER_UDMA_1", value: 65)
!1051 = !DIEnumerator(name: "XFER_UDMA_0", value: 64)
!1052 = !DIEnumerator(name: "XFER_MW_DMA_4", value: 36)
!1053 = !DIEnumerator(name: "XFER_MW_DMA_3", value: 35)
!1054 = !DIEnumerator(name: "XFER_MW_DMA_2", value: 34)
!1055 = !DIEnumerator(name: "XFER_MW_DMA_1", value: 33)
!1056 = !DIEnumerator(name: "XFER_MW_DMA_0", value: 32)
!1057 = !DIEnumerator(name: "XFER_SW_DMA_2", value: 18)
!1058 = !DIEnumerator(name: "XFER_SW_DMA_1", value: 17)
!1059 = !DIEnumerator(name: "XFER_SW_DMA_0", value: 16)
!1060 = !DIEnumerator(name: "XFER_PIO_6", value: 14)
!1061 = !DIEnumerator(name: "XFER_PIO_5", value: 13)
!1062 = !DIEnumerator(name: "XFER_PIO_4", value: 12)
!1063 = !DIEnumerator(name: "XFER_PIO_3", value: 11)
!1064 = !DIEnumerator(name: "XFER_PIO_2", value: 10)
!1065 = !DIEnumerator(name: "XFER_PIO_1", value: 9)
!1066 = !DIEnumerator(name: "XFER_PIO_0", value: 8)
!1067 = !DIEnumerator(name: "XFER_PIO_SLOW", value: 0)
!1068 = !DIEnumerator(name: "SETFEATURES_WC_ON", value: 2)
!1069 = !DIEnumerator(name: "SETFEATURES_WC_OFF", value: 130)
!1070 = !DIEnumerator(name: "SETFEATURES_RA_ON", value: 170)
!1071 = !DIEnumerator(name: "SETFEATURES_RA_OFF", value: 85)
!1072 = !DIEnumerator(name: "SETFEATURES_AAM_ON", value: 66)
!1073 = !DIEnumerator(name: "SETFEATURES_AAM_OFF", value: 194)
!1074 = !DIEnumerator(name: "SETFEATURES_SPINUP", value: 7)
!1075 = !DIEnumerator(name: "SETFEATURES_SPINUP_TIMEOUT", value: 30000)
!1076 = !DIEnumerator(name: "SETFEATURES_SATA_ENABLE", value: 16)
!1077 = !DIEnumerator(name: "SETFEATURES_SATA_DISABLE", value: 144)
!1078 = !DIEnumerator(name: "SATA_FPDMA_OFFSET", value: 1)
!1079 = !DIEnumerator(name: "SATA_FPDMA_AA", value: 2)
!1080 = !DIEnumerator(name: "SATA_DIPM", value: 3)
!1081 = !DIEnumerator(name: "SATA_FPDMA_IN_ORDER", value: 4)
!1082 = !DIEnumerator(name: "SATA_AN", value: 5)
!1083 = !DIEnumerator(name: "SATA_SSP", value: 6)
!1084 = !DIEnumerator(name: "SATA_DEVSLP", value: 9)
!1085 = !DIEnumerator(name: "SETFEATURE_SENSE_DATA", value: 195)
!1086 = !DIEnumerator(name: "ATA_SET_MAX_ADDR", value: 0)
!1087 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD", value: 1)
!1088 = !DIEnumerator(name: "ATA_SET_MAX_LOCK", value: 2)
!1089 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK", value: 3)
!1090 = !DIEnumerator(name: "ATA_SET_MAX_FREEZE_LOCK", value: 4)
!1091 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD_DMA", value: 5)
!1092 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK_DMA", value: 6)
!1093 = !DIEnumerator(name: "ATA_DCO_RESTORE", value: 192)
!1094 = !DIEnumerator(name: "ATA_DCO_FREEZE_LOCK", value: 193)
!1095 = !DIEnumerator(name: "ATA_DCO_IDENTIFY", value: 194)
!1096 = !DIEnumerator(name: "ATA_DCO_SET", value: 195)
!1097 = !DIEnumerator(name: "ATA_SMART_ENABLE", value: 216)
!1098 = !DIEnumerator(name: "ATA_SMART_READ_VALUES", value: 208)
!1099 = !DIEnumerator(name: "ATA_SMART_READ_THRESHOLDS", value: 209)
!1100 = !DIEnumerator(name: "ATA_DSM_TRIM", value: 1)
!1101 = !DIEnumerator(name: "ATA_SMART_LBAM_PASS", value: 79)
!1102 = !DIEnumerator(name: "ATA_SMART_LBAH_PASS", value: 194)
!1103 = !DIEnumerator(name: "ATAPI_PKT_DMA", value: 1)
!1104 = !DIEnumerator(name: "ATAPI_DMADIR", value: 4)
!1105 = !DIEnumerator(name: "ATAPI_CDB_LEN", value: 16)
!1106 = !DIEnumerator(name: "SATA_PMP_MAX_PORTS", value: 15)
!1107 = !DIEnumerator(name: "SATA_PMP_CTRL_PORT", value: 15)
!1108 = !DIEnumerator(name: "SATA_PMP_GSCR_DWORDS", value: 128)
!1109 = !DIEnumerator(name: "SATA_PMP_GSCR_PROD_ID", value: 0)
!1110 = !DIEnumerator(name: "SATA_PMP_GSCR_REV", value: 1)
!1111 = !DIEnumerator(name: "SATA_PMP_GSCR_PORT_INFO", value: 2)
!1112 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR", value: 32)
!1113 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR_EN", value: 33)
!1114 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT", value: 64)
!1115 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT_EN", value: 96)
!1116 = !DIEnumerator(name: "SATA_PMP_PSCR_STATUS", value: 0)
!1117 = !DIEnumerator(name: "SATA_PMP_PSCR_ERROR", value: 1)
!1118 = !DIEnumerator(name: "SATA_PMP_PSCR_CONTROL", value: 2)
!1119 = !DIEnumerator(name: "SATA_PMP_FEAT_BIST", value: 1)
!1120 = !DIEnumerator(name: "SATA_PMP_FEAT_PMREQ", value: 2)
!1121 = !DIEnumerator(name: "SATA_PMP_FEAT_DYNSSC", value: 4)
!1122 = !DIEnumerator(name: "SATA_PMP_FEAT_NOTIFY", value: 8)
!1123 = !DIEnumerator(name: "ATA_CBL_NONE", value: 0)
!1124 = !DIEnumerator(name: "ATA_CBL_PATA40", value: 1)
!1125 = !DIEnumerator(name: "ATA_CBL_PATA80", value: 2)
!1126 = !DIEnumerator(name: "ATA_CBL_PATA40_SHORT", value: 3)
!1127 = !DIEnumerator(name: "ATA_CBL_PATA_UNK", value: 4)
!1128 = !DIEnumerator(name: "ATA_CBL_PATA_IGN", value: 5)
!1129 = !DIEnumerator(name: "ATA_CBL_SATA", value: 6)
!1130 = !DIEnumerator(name: "SCR_STATUS", value: 0)
!1131 = !DIEnumerator(name: "SCR_ERROR", value: 1)
!1132 = !DIEnumerator(name: "SCR_CONTROL", value: 2)
!1133 = !DIEnumerator(name: "SCR_ACTIVE", value: 3)
!1134 = !DIEnumerator(name: "SCR_NOTIFICATION", value: 4)
!1135 = !DIEnumerator(name: "SERR_DATA_RECOVERED", value: 1)
!1136 = !DIEnumerator(name: "SERR_COMM_RECOVERED", value: 2)
!1137 = !DIEnumerator(name: "SERR_DATA", value: 256)
!1138 = !DIEnumerator(name: "SERR_PERSISTENT", value: 512)
!1139 = !DIEnumerator(name: "SERR_PROTOCOL", value: 1024)
!1140 = !DIEnumerator(name: "SERR_INTERNAL", value: 2048)
!1141 = !DIEnumerator(name: "SERR_PHYRDY_CHG", value: 65536)
!1142 = !DIEnumerator(name: "SERR_PHY_INT_ERR", value: 131072)
!1143 = !DIEnumerator(name: "SERR_COMM_WAKE", value: 262144)
!1144 = !DIEnumerator(name: "SERR_10B_8B_ERR", value: 524288)
!1145 = !DIEnumerator(name: "SERR_DISPARITY", value: 1048576)
!1146 = !DIEnumerator(name: "SERR_CRC", value: 2097152)
!1147 = !DIEnumerator(name: "SERR_HANDSHAKE", value: 4194304)
!1148 = !DIEnumerator(name: "SERR_LINK_SEQ_ERR", value: 8388608)
!1149 = !DIEnumerator(name: "SERR_TRANS_ST_ERROR", value: 16777216)
!1150 = !DIEnumerator(name: "SERR_UNRECOG_FIS", value: 33554432)
!1151 = !DIEnumerator(name: "SERR_DEV_XCHG", value: 67108864)
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 447, baseType: !7, size: 32, elements: !1153)
!1153 = !{!1154, !1155, !1156}
!1154 = !DIEnumerator(name: "MV_DMA_BOUNDARY", value: 65535, isUnsigned: true)
!1155 = !DIEnumerator(name: "EDMA_REQ_Q_BASE_LO_MASK", value: 4294966272, isUnsigned: true)
!1156 = !DIEnumerator(name: "EDMA_RSP_Q_BASE_LO_MASK", value: 4294967040, isUnsigned: true)
!1157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hsm_task_states", file: !204, line: 478, baseType: !7, size: 32, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163}
!1159 = !DIEnumerator(name: "HSM_ST_IDLE", value: 0, isUnsigned: true)
!1160 = !DIEnumerator(name: "HSM_ST_FIRST", value: 1, isUnsigned: true)
!1161 = !DIEnumerator(name: "HSM_ST", value: 2, isUnsigned: true)
!1162 = !DIEnumerator(name: "HSM_ST_LAST", value: 3, isUnsigned: true)
!1163 = !DIEnumerator(name: "HSM_ST_ERR", value: 4, isUnsigned: true)
!1164 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chip_type", file: !3, line: 462, baseType: !7, size: 32, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173}
!1166 = !DIEnumerator(name: "chip_504x", value: 0, isUnsigned: true)
!1167 = !DIEnumerator(name: "chip_508x", value: 1, isUnsigned: true)
!1168 = !DIEnumerator(name: "chip_5080", value: 2, isUnsigned: true)
!1169 = !DIEnumerator(name: "chip_604x", value: 3, isUnsigned: true)
!1170 = !DIEnumerator(name: "chip_608x", value: 4, isUnsigned: true)
!1171 = !DIEnumerator(name: "chip_6042", value: 5, isUnsigned: true)
!1172 = !DIEnumerator(name: "chip_7042", value: 6, isUnsigned: true)
!1173 = !DIEnumerator(name: "chip_soc", value: 7, isUnsigned: true)
!1174 = !{!7, !1175, !1177, !1179, !1181, !1182, !1184, !1186, !1187, !260, !1188, !1189, !1200, !1697}
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !1176, line: 148, baseType: !7)
!1176 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !1178, line: 31, baseType: !1179)
!1178 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !1180, line: 27, baseType: !7)
!1180 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !1178, line: 29, baseType: !1182)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !1180, line: 24, baseType: !1183)
!1183 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!1186 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1188 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_crqb_iie", file: !3, line: 481, size: 256, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1190, file: !3, line: 482, baseType: !1177, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "addr_hi", scope: !1190, file: !3, line: 483, baseType: !1177, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1190, file: !3, line: 484, baseType: !1177, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1190, file: !3, line: 485, baseType: !1177, size: 32, offset: 96)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ata_cmd", scope: !1190, file: !3, line: 486, baseType: !1197, size: 128, offset: 128)
!1197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 128, elements: !1198)
!1198 = !{!1199}
!1199 = !DISubrange(count: 4)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !1202, line: 309, size: 19264, elements: !1203)
!1202 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!1203 = !{!1204, !1210, !6423, !6424, !6425, !6426, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453, !6518, !6519, !6520, !6522, !6523, !6524, !6525, !6526, !6527, !6528, !6529, !6530, !6531, !6532, !6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540, !6541, !6544, !6545, !6546, !6547, !6548, !6549, !6550, !6551, !6555, !6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570, !6571, !6572, !6573, !6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6594, !6595, !6596, !6597, !6598, !6599, !6601, !6602, !6603, !6606, !6613, !6614, !6615, !6616, !6617, !6618, !6619}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !1201, file: !1202, line: 310, baseType: !1205, size: 128)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !1176, line: 178, size: 128, elements: !1206)
!1206 = !{!1207, !1209}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1205, file: !1176, line: 179, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1205, file: !1176, line: 179, baseType: !1208, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1201, file: !1202, line: 311, baseType: !1211, size: 64, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !1202, line: 605, size: 8064, elements: !1213)
!1213 = !{!1214, !1215, !1216, !1217, !1218, !1219, !1220, !1243, !1244, !1245, !1271, !1274, !1275, !1278, !1280, !1281, !1282, !1283, !1287, !1288, !1290, !6419, !6420, !6421, !6422}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1212, file: !1202, line: 606, baseType: !1205, size: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1212, file: !1202, line: 607, baseType: !1211, size: 64, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1212, file: !1202, line: 608, baseType: !1205, size: 128, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !1212, file: !1202, line: 609, baseType: !1205, size: 128, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1212, file: !1202, line: 610, baseType: !1200, size: 64, offset: 448)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !1212, file: !1202, line: 611, baseType: !1205, size: 128, offset: 512)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !1212, file: !1202, line: 613, baseType: !1221, size: 256, offset: 640)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 256, elements: !1198)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !1224, line: 20, size: 512, elements: !1225)
!1224 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!1225 = !{!1226, !1233, !1234, !1238, !1239, !1240, !1241, !1242}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1223, file: !1224, line: 21, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !1176, line: 158, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !1176, line: 153, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !1230, line: 23, baseType: !1231)
!1230 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !1180, line: 31, baseType: !1232)
!1232 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1223, file: !1224, line: 22, baseType: !1227, size: 64, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1223, file: !1224, line: 23, baseType: !1235, size: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1237)
!1237 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1223, file: !1224, line: 24, baseType: !1186, size: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1223, file: !1224, line: 25, baseType: !1186, size: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1223, file: !1224, line: 26, baseType: !1222, size: 64, offset: 320)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1223, file: !1224, line: 26, baseType: !1222, size: 64, offset: 384)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1223, file: !1224, line: 26, baseType: !1222, size: 64, offset: 448)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !1212, file: !1202, line: 614, baseType: !1205, size: 128, offset: 896)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !1212, file: !1202, line: 615, baseType: !1223, size: 512, offset: 1024)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1212, file: !1202, line: 617, baseType: !1246, size: 64, offset: 1536)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !1202, line: 731, size: 320, elements: !1248)
!1248 = !{!1249, !1253, !1257, !1261, !1267}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !1247, file: !1202, line: 732, baseType: !1250, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!260, !1211}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !1247, file: !1202, line: 733, baseType: !1254, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{null, !1211}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !1247, file: !1202, line: 734, baseType: !1258, size: 64, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!1187, !1211, !7, !260}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1247, file: !1202, line: 735, baseType: !1262, size: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!260, !1211, !7, !260, !260, !1265}
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !1230, line: 21, baseType: !1179)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1247, file: !1202, line: 736, baseType: !1268, size: 64, offset: 256)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!260, !1211, !7, !260, !260, !1266}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !1212, file: !1202, line: 618, baseType: !1272, size: 64, offset: 1600)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !1202, line: 537, flags: DIFlagFwdDecl)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !1212, file: !1202, line: 619, baseType: !1187, size: 64, offset: 1664)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !1212, file: !1202, line: 620, baseType: !1276, size: 64, offset: 1728)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !65, line: 123, flags: DIFlagFwdDecl)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !1212, file: !1202, line: 622, baseType: !1279, size: 8, offset: 1792)
!1279 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !1212, file: !1202, line: 623, baseType: !1279, size: 8, offset: 1800)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !1212, file: !1202, line: 624, baseType: !1279, size: 8, offset: 1808)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !1212, file: !1202, line: 625, baseType: !1279, size: 8, offset: 1816)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1212, file: !1202, line: 630, baseType: !1284, size: 384, offset: 1824)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 384, elements: !1285)
!1285 = !{!1286}
!1286 = !DISubrange(count: 48)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !1212, file: !1202, line: 632, baseType: !1183, size: 16, offset: 2208)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !1212, file: !1202, line: 633, baseType: !1289, size: 16, offset: 2224)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !1202, line: 237, baseType: !1183)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !1212, file: !1202, line: 634, baseType: !1291, size: 64, offset: 2240)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !25, line: 461, size: 5568, elements: !1293)
!1293 = !{!1294, !5668, !5669, !5672, !5673, !5723, !5814, !5815, !5816, !5817, !5818, !5827, !5921, !5934, !6346, !6347, !6351, !6353, !6354, !6355, !6359, !6365, !6366, !6369, !6370, !6371, !6372, !6373, !6374, !6375, !6407, !6408, !6409, !6412, !6415, !6416, !6417, !6418}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1292, file: !25, line: 462, baseType: !1295, size: 512)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1296, line: 64, size: 512, elements: !1297)
!1296 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1297 = !{!1298, !1299, !1300, !1302, !1362, !5535, !5662, !5663, !5664, !5665, !5666, !5667}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1295, file: !1296, line: 65, baseType: !1235, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1295, file: !1296, line: 66, baseType: !1205, size: 128, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1295, file: !1296, line: 67, baseType: !1301, size: 64, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1295, file: !1296, line: 68, baseType: !1303, size: 64, offset: 256)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1296, line: 192, size: 704, elements: !1305)
!1305 = !{!1306, !1307, !1323, !1324}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1304, file: !1296, line: 193, baseType: !1205, size: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1304, file: !1296, line: 194, baseType: !1308, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1309, line: 83, baseType: !1310)
!1309 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1309, line: 71, elements: !1311)
!1311 = !{!1312}
!1312 = !DIDerivedType(tag: DW_TAG_member, scope: !1310, file: !1309, line: 72, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1310, file: !1309, line: 72, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1313, file: !1309, line: 73, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1309, line: 20, elements: !1317)
!1317 = !{!1318}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1316, file: !1309, line: 21, baseType: !1319)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1320, line: 25, baseType: !1321)
!1320 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1320, line: 25, elements: !1322)
!1322 = !{}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1304, file: !1296, line: 195, baseType: !1295, size: 512, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1304, file: !1296, line: 196, baseType: !1325, size: 64, offset: 640)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1296, line: 156, size: 192, elements: !1328)
!1328 = !{!1329, !1334, !1339}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1327, file: !1296, line: 157, baseType: !1330, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!260, !1303, !1301}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1327, file: !1296, line: 158, baseType: !1335, size: 64, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!1235, !1303, !1301}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1327, file: !1296, line: 159, baseType: !1340, size: 64, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!260, !1303, !1301, !1344}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1296, line: 148, size: 20736, elements: !1346)
!1346 = !{!1347, !1352, !1356, !1357, !1361}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1345, file: !1296, line: 149, baseType: !1348, size: 192)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 192, elements: !1350)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1350 = !{!1351}
!1351 = !DISubrange(count: 3)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1345, file: !1296, line: 150, baseType: !1353, size: 4096, offset: 192)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 4096, elements: !1354)
!1354 = !{!1355}
!1355 = !DISubrange(count: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1345, file: !1296, line: 151, baseType: !260, size: 32, offset: 4288)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1345, file: !1296, line: 152, baseType: !1358, size: 16384, offset: 4320)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 16384, elements: !1359)
!1359 = !{!1360}
!1360 = !DISubrange(count: 2048)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1345, file: !1296, line: 153, baseType: !260, size: 32, offset: 20704)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1295, file: !1296, line: 69, baseType: !1363, size: 64, offset: 320)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1296, line: 138, size: 448, elements: !1365)
!1365 = !{!1366, !1370, !1397, !1399, !5499, !5527, !5531}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1364, file: !1296, line: 139, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !1301}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1364, file: !1296, line: 140, baseType: !1371, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1374, line: 230, size: 128, elements: !1375)
!1374 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1375 = !{!1376, !1390}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1373, file: !1374, line: 231, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!1380, !1301, !1384, !1349}
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !1176, line: 60, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1382, line: 73, baseType: !1383)
!1382 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1382, line: 15, baseType: !1188)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1374, line: 30, size: 128, elements: !1386)
!1386 = !{!1387, !1388}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1385, file: !1374, line: 31, baseType: !1235, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1385, file: !1374, line: 32, baseType: !1389, size: 16, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !1176, line: 19, baseType: !1183)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1373, file: !1374, line: 232, baseType: !1391, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!1380, !1301, !1384, !1235, !1394}
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1176, line: 55, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1382, line: 72, baseType: !1396)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1382, line: 16, baseType: !1186)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1364, file: !1296, line: 141, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1364, file: !1296, line: 142, baseType: !1400, size: 64, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1374, line: 84, size: 320, elements: !1404)
!1404 = !{!1405, !1406, !1410, !5496, !5497}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1403, file: !1374, line: 85, baseType: !1235, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1403, file: !1374, line: 86, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!1389, !1301, !1384, !260}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1403, file: !1374, line: 88, baseType: !1411, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!1389, !1301, !1414, !260}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1374, line: 168, size: 448, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420, !5491, !5492}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1415, file: !1374, line: 169, baseType: !1385, size: 128)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1415, file: !1374, line: 170, baseType: !1394, size: 64, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1415, file: !1374, line: 171, baseType: !1187, size: 64, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1415, file: !1374, line: 172, baseType: !1421, size: 64, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!1380, !1424, !1301, !1414, !1349, !1595, !1394}
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !151, line: 916, size: 1856, align: 32, elements: !1426)
!1426 = !{!1427, !1445, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5474, !5475, !5484, !5485, !5486, !5487, !5488, !5489, !5490}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1425, file: !151, line: 920, baseType: !1428, size: 128)
!1428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1425, file: !151, line: 917, size: 128, elements: !1429)
!1429 = !{!1430, !1436}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1428, file: !151, line: 918, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1432, line: 58, size: 64, elements: !1433)
!1432 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1433 = !{!1434}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1431, file: !1432, line: 59, baseType: !1435, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1428, file: !151, line: 919, baseType: !1437, size: 128, align: 64)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !1176, line: 216, size: 128, align: 64, elements: !1438)
!1438 = !{!1439, !1441}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1437, file: !1176, line: 217, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1437, file: !1176, line: 218, baseType: !1442, size: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{null, !1440}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1425, file: !151, line: 921, baseType: !1446, size: 128, offset: 128)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1447, line: 8, size: 128, elements: !1448)
!1447 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1448 = !{!1449, !1453}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1446, file: !1447, line: 9, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1452, line: 18, flags: DIFlagFwdDecl)
!1452 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1446, file: !1447, line: 10, baseType: !1454, size: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1452, line: 89, size: 1536, elements: !1456)
!1456 = !{!1457, !1458, !1468, !1476, !1477, !1492, !5424, !5426, !5438, !5439, !5440, !5441, !5442, !5448, !5449, !5450}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1455, file: !1452, line: 91, baseType: !7, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1455, file: !1452, line: 92, baseType: !1459, size: 32, offset: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1460, line: 277, baseType: !1461)
!1460 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1460, line: 277, size: 32, elements: !1462)
!1462 = !{!1463}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1461, file: !1460, line: 277, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1460, line: 70, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1460, line: 65, size: 32, elements: !1466)
!1466 = !{!1467}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1465, file: !1460, line: 66, baseType: !7, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1455, file: !1452, line: 93, baseType: !1469, size: 128, offset: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1470, line: 38, size: 128, elements: !1471)
!1470 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1474}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1469, file: !1470, line: 39, baseType: !1473, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1469, file: !1470, line: 39, baseType: !1475, size: 64, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1455, file: !1452, line: 94, baseType: !1454, size: 64, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1455, file: !1452, line: 95, baseType: !1478, size: 128, offset: 256)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1452, line: 47, size: 128, elements: !1479)
!1479 = !{!1480, !1489}
!1480 = !DIDerivedType(tag: DW_TAG_member, scope: !1478, file: !1452, line: 48, baseType: !1481, size: 64)
!1481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1478, file: !1452, line: 48, size: 64, elements: !1482)
!1482 = !{!1483, !1488}
!1483 = !DIDerivedType(tag: DW_TAG_member, scope: !1481, file: !1452, line: 49, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1481, file: !1452, line: 49, size: 64, elements: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1484, file: !1452, line: 50, baseType: !1266, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1484, file: !1452, line: 50, baseType: !1266, size: 32, offset: 32)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1481, file: !1452, line: 52, baseType: !1229, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1478, file: !1452, line: 54, baseType: !1490, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1279)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1455, file: !1452, line: 96, baseType: !1493, size: 64, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !151, line: 610, size: 4224, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1506, !1513, !1514, !1662, !5138, !5139, !5140, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5400, !5408, !5409, !5410, !5420, !5421, !5422, !5423}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1494, file: !151, line: 611, baseType: !1389, size: 16)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1494, file: !151, line: 612, baseType: !1183, size: 16, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1494, file: !151, line: 613, baseType: !1499, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1500, line: 23, baseType: !1501)
!1500 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1500, line: 21, size: 32, elements: !1502)
!1502 = !{!1503}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1501, file: !1500, line: 22, baseType: !1504, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !1176, line: 32, baseType: !1505)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1382, line: 49, baseType: !7)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1494, file: !151, line: 614, baseType: !1507, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1500, line: 28, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1500, line: 26, size: 32, elements: !1509)
!1509 = !{!1510}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1508, file: !1500, line: 27, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !1176, line: 33, baseType: !1512)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1382, line: 50, baseType: !7)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1494, file: !151, line: 615, baseType: !7, size: 32, offset: 96)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1494, file: !151, line: 622, baseType: !1515, size: 64, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !151, line: 1864, size: 1536, align: 512, elements: !1518)
!1518 = !{!1519, !1523, !1536, !1540, !1546, !1550, !1556, !1560, !1564, !1568, !1572, !1573, !1579, !1583, !1609, !1638, !1642, !1648, !1653, !1657, !1658}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1517, file: !151, line: 1865, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!1454, !1493, !1454, !7}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1517, file: !151, line: 1866, baseType: !1524, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!1235, !1454, !1493, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1529, line: 10, size: 128, elements: !1530)
!1529 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1530 = !{!1531, !1535}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1528, file: !1529, line: 11, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{null, !1187}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1528, file: !1529, line: 12, baseType: !1187, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1517, file: !151, line: 1867, baseType: !1537, size: 64, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!260, !1493, !260}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1517, file: !151, line: 1868, baseType: !1541, size: 64, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!1544, !1493, !260}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !151, line: 581, flags: DIFlagFwdDecl)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1517, file: !151, line: 1870, baseType: !1547, size: 64, offset: 256)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!260, !1454, !1349, !260}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1517, file: !151, line: 1872, baseType: !1551, size: 64, offset: 320)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!260, !1493, !1454, !1389, !1554}
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !1176, line: 30, baseType: !1555)
!1555 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1517, file: !151, line: 1873, baseType: !1557, size: 64, offset: 384)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!260, !1454, !1493, !1454}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1517, file: !151, line: 1874, baseType: !1561, size: 64, offset: 448)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!260, !1493, !1454}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1517, file: !151, line: 1875, baseType: !1565, size: 64, offset: 512)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!260, !1493, !1454, !1235}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1517, file: !151, line: 1876, baseType: !1569, size: 64, offset: 576)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!260, !1493, !1454, !1389}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1517, file: !151, line: 1877, baseType: !1561, size: 64, offset: 640)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1517, file: !151, line: 1878, baseType: !1574, size: 64, offset: 704)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!260, !1493, !1454, !1389, !1577}
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !1176, line: 16, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !1176, line: 13, baseType: !1266)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1517, file: !151, line: 1879, baseType: !1580, size: 64, offset: 768)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!260, !1493, !1454, !1493, !1454, !7}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1517, file: !151, line: 1881, baseType: !1584, size: 64, offset: 832)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!260, !1454, !1587}
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !151, line: 219, size: 640, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593, !1594, !1598, !1606, !1607, !1608}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1588, file: !151, line: 220, baseType: !7, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1588, file: !151, line: 221, baseType: !1389, size: 16, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1588, file: !151, line: 222, baseType: !1499, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1588, file: !151, line: 223, baseType: !1507, size: 32, offset: 96)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1588, file: !151, line: 224, baseType: !1595, size: 64, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !1176, line: 46, baseType: !1596)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1382, line: 88, baseType: !1597)
!1597 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1588, file: !151, line: 225, baseType: !1599, size: 128, offset: 192)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1600, line: 13, size: 128, elements: !1601)
!1600 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1601 = !{!1602, !1605}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1599, file: !1600, line: 14, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1600, line: 8, baseType: !1604)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !1180, line: 30, baseType: !1597)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1599, file: !1600, line: 15, baseType: !1188, size: 64, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1588, file: !151, line: 226, baseType: !1599, size: 128, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1588, file: !151, line: 227, baseType: !1599, size: 128, offset: 448)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1588, file: !151, line: 234, baseType: !1424, size: 64, offset: 576)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1517, file: !151, line: 1882, baseType: !1610, size: 64, offset: 896)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!260, !1613, !1615, !1266, !7}
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1617, line: 22, size: 1152, elements: !1618)
!1617 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1618 = !{!1619, !1620, !1621, !1622, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1616, file: !1617, line: 23, baseType: !1266, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1616, file: !1617, line: 24, baseType: !1389, size: 16, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1616, file: !1617, line: 25, baseType: !7, size: 32, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1616, file: !1617, line: 26, baseType: !1623, size: 32, offset: 96)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1176, line: 104, baseType: !1266)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1616, file: !1617, line: 27, baseType: !1229, size: 64, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1616, file: !1617, line: 28, baseType: !1229, size: 64, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1616, file: !1617, line: 37, baseType: !1229, size: 64, offset: 256)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1616, file: !1617, line: 38, baseType: !1577, size: 32, offset: 320)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1616, file: !1617, line: 39, baseType: !1577, size: 32, offset: 352)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1616, file: !1617, line: 40, baseType: !1499, size: 32, offset: 384)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1616, file: !1617, line: 41, baseType: !1507, size: 32, offset: 416)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1616, file: !1617, line: 42, baseType: !1595, size: 64, offset: 448)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1616, file: !1617, line: 43, baseType: !1599, size: 128, offset: 512)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1616, file: !1617, line: 44, baseType: !1599, size: 128, offset: 640)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1616, file: !1617, line: 45, baseType: !1599, size: 128, offset: 768)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1616, file: !1617, line: 46, baseType: !1599, size: 128, offset: 896)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1616, file: !1617, line: 47, baseType: !1229, size: 64, offset: 1024)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1616, file: !1617, line: 48, baseType: !1229, size: 64, offset: 1088)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1517, file: !151, line: 1883, baseType: !1639, size: 64, offset: 960)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!1380, !1454, !1349, !1394}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1517, file: !151, line: 1884, baseType: !1643, size: 64, offset: 1024)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!260, !1493, !1646, !1229, !1229}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !151, line: 50, flags: DIFlagFwdDecl)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1517, file: !151, line: 1886, baseType: !1649, size: 64, offset: 1088)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!260, !1493, !1652, !260}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1517, file: !151, line: 1887, baseType: !1654, size: 64, offset: 1152)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!260, !1493, !1454, !1424, !7, !1389}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1517, file: !151, line: 1890, baseType: !1569, size: 64, offset: 1216)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1517, file: !151, line: 1891, baseType: !1659, size: 64, offset: 1280)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!260, !1493, !1544, !260}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1494, file: !151, line: 623, baseType: !1663, size: 64, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !151, line: 1416, size: 9472, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669, !1670, !1671, !1721, !4752, !4834, !4917, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928, !4933, !4937, !4938, !4939, !4940, !4943, !4944, !4945, !4986, !5012, !5013, !5014, !5015, !5016, !5017, !5020, !5021, !5028, !5029, !5030, !5031, !5032, !5091, !5092, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1664, file: !151, line: 1417, baseType: !1205, size: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1664, file: !151, line: 1418, baseType: !1577, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1664, file: !151, line: 1419, baseType: !1279, size: 8, offset: 160)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1664, file: !151, line: 1420, baseType: !1186, size: 64, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1664, file: !151, line: 1421, baseType: !1595, size: 64, offset: 256)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1664, file: !151, line: 1422, baseType: !1672, size: 64, offset: 320)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !151, line: 2228, size: 576, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1684, !1688, !1692, !1696, !1700, !1701, !1711, !1714, !1715, !1716, !1718, !1719, !1720}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1673, file: !151, line: 2229, baseType: !1235, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1673, file: !151, line: 2230, baseType: !260, size: 32, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1673, file: !151, line: 2238, baseType: !1678, size: 64, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!260, !1681}
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1683, line: 28, flags: DIFlagFwdDecl)
!1683 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1673, file: !151, line: 2239, baseType: !1685, size: 64, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1687)
!1687 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !151, line: 70, flags: DIFlagFwdDecl)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1673, file: !151, line: 2240, baseType: !1689, size: 64, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!1454, !1672, !260, !1235, !1187}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1673, file: !151, line: 2242, baseType: !1693, size: 64, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{null, !1663}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1673, file: !151, line: 2243, baseType: !1697, size: 64, offset: 384)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1699, line: 76, flags: DIFlagFwdDecl)
!1699 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1673, file: !151, line: 2244, baseType: !1672, size: 64, offset: 448)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1673, file: !151, line: 2245, baseType: !1702, size: 64, offset: 512)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !1176, line: 182, size: 64, elements: !1703)
!1703 = !{!1704}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1702, file: !1176, line: 183, baseType: !1705, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !1176, line: 186, size: 128, elements: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1706, file: !1176, line: 187, baseType: !1705, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1706, file: !1176, line: 187, baseType: !1710, size: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1673, file: !151, line: 2247, baseType: !1712, offset: 576)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1713, line: 187, elements: !1322)
!1713 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1673, file: !151, line: 2248, baseType: !1712, offset: 576)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1673, file: !151, line: 2249, baseType: !1712, offset: 576)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1673, file: !151, line: 2250, baseType: !1717, offset: 576)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1712, elements: !1350)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1673, file: !151, line: 2252, baseType: !1712, offset: 576)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1673, file: !151, line: 2253, baseType: !1712, offset: 576)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1673, file: !151, line: 2254, baseType: !1712, offset: 576)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1664, file: !151, line: 1423, baseType: !1722, size: 64, offset: 384)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !151, line: 1935, size: 1472, elements: !1725)
!1725 = !{!1726, !1730, !1734, !1735, !1739, !1759, !1763, !1764, !1765, !1769, !1773, !1774, !1775, !1776, !1782, !1787, !1788, !1844, !1845, !1846, !1847, !4736, !4751}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1724, file: !151, line: 1936, baseType: !1727, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!1493, !1663}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1724, file: !151, line: 1937, baseType: !1731, size: 64, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{null, !1493}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1724, file: !151, line: 1938, baseType: !1731, size: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1724, file: !151, line: 1940, baseType: !1736, size: 64, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{null, !1493, !260}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1724, file: !151, line: 1941, baseType: !1740, size: 64, offset: 256)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!260, !1493, !1743}
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1744, file: !6, line: 52, baseType: !1188, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1744, file: !6, line: 54, baseType: !1188, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1744, file: !6, line: 61, baseType: !1595, size: 64, offset: 128)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1744, file: !6, line: 62, baseType: !1595, size: 64, offset: 192)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1744, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1744, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1744, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1744, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1744, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1744, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1744, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1744, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1744, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1724, file: !151, line: 1942, baseType: !1760, size: 64, offset: 320)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!260, !1493}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1724, file: !151, line: 1943, baseType: !1731, size: 64, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1724, file: !151, line: 1944, baseType: !1693, size: 64, offset: 448)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1724, file: !151, line: 1945, baseType: !1766, size: 64, offset: 512)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!260, !1663, !260}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1724, file: !151, line: 1946, baseType: !1770, size: 64, offset: 576)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!260, !1663}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1724, file: !151, line: 1947, baseType: !1770, size: 64, offset: 640)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1724, file: !151, line: 1948, baseType: !1770, size: 64, offset: 704)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1724, file: !151, line: 1949, baseType: !1770, size: 64, offset: 768)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1724, file: !151, line: 1950, baseType: !1777, size: 64, offset: 832)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!260, !1454, !1780}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !151, line: 57, flags: DIFlagFwdDecl)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1724, file: !151, line: 1951, baseType: !1783, size: 64, offset: 896)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!260, !1663, !1786, !1349}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1724, file: !151, line: 1952, baseType: !1693, size: 64, offset: 960)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1724, file: !151, line: 1954, baseType: !1789, size: 64, offset: 1024)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!260, !1792, !1454}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1794, line: 16, size: 896, elements: !1795)
!1794 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !{!1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1817, !1839, !1840, !1843}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1793, file: !1794, line: 17, baseType: !1349, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1793, file: !1794, line: 18, baseType: !1394, size: 64, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1793, file: !1794, line: 19, baseType: !1394, size: 64, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1793, file: !1794, line: 20, baseType: !1394, size: 64, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1793, file: !1794, line: 21, baseType: !1394, size: 64, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1793, file: !1794, line: 22, baseType: !1595, size: 64, offset: 320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1793, file: !1794, line: 23, baseType: !1595, size: 64, offset: 384)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1793, file: !1794, line: 24, baseType: !1804, size: 192, offset: 448)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1805, line: 53, size: 192, elements: !1806)
!1805 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1806 = !{!1807, !1815, !1816}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1804, file: !1805, line: 54, baseType: !1808, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1809, line: 13, baseType: !1810)
!1809 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !1176, line: 175, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1176, line: 173, size: 64, elements: !1812)
!1812 = !{!1813}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1811, file: !1176, line: 174, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !1230, line: 22, baseType: !1604)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1804, file: !1805, line: 55, baseType: !1308, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1804, file: !1805, line: 59, baseType: !1205, size: 128, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1793, file: !1794, line: 25, baseType: !1818, size: 64, offset: 640)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1794, line: 31, size: 256, elements: !1821)
!1821 = !{!1822, !1827, !1831, !1835}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1820, file: !1794, line: 32, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!1187, !1792, !1826}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1820, file: !1794, line: 33, baseType: !1828, size: 64, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{null, !1792, !1187}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1820, file: !1794, line: 34, baseType: !1832, size: 64, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!1187, !1792, !1187, !1826}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1820, file: !1794, line: 35, baseType: !1836, size: 64, offset: 192)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!260, !1792, !1187}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1793, file: !1794, line: 26, baseType: !260, size: 32, offset: 704)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1793, file: !1794, line: 27, baseType: !1841, size: 64, offset: 768)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1425)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1793, file: !1794, line: 28, baseType: !1187, size: 64, offset: 832)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1724, file: !151, line: 1955, baseType: !1789, size: 64, offset: 1088)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1724, file: !151, line: 1956, baseType: !1789, size: 64, offset: 1152)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1724, file: !151, line: 1957, baseType: !1789, size: 64, offset: 1216)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1724, file: !151, line: 1963, baseType: !1848, size: 64, offset: 1280)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!260, !1663, !1851, !1175}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1853, line: 68, size: 512, align: 128, elements: !1854)
!1853 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1854 = !{!1855, !1856, !4728, !4735}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1852, file: !1853, line: 69, baseType: !1186, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, scope: !1852, file: !1853, line: 77, baseType: !1857, size: 320, offset: 64)
!1857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1852, file: !1853, line: 77, size: 320, elements: !1858)
!1858 = !{!1859, !3169, !3174, !3200, !3208, !3214, !4679, !4727}
!1859 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !1853, line: 78, baseType: !1860, size: 320)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !1853, line: 78, size: 320, elements: !1861)
!1861 = !{!1862, !1863, !3167, !3168}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1860, file: !1853, line: 84, baseType: !1205, size: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1860, file: !1853, line: 86, baseType: !1864, size: 64, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !151, line: 451, size: 1216, align: 64, elements: !1866)
!1866 = !{!1867, !1868, !1875, !1876, !1881, !1896, !1905, !1906, !1907, !1908, !3160, !3161, !3164, !3165, !3166}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1865, file: !151, line: 452, baseType: !1493, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1865, file: !151, line: 453, baseType: !1869, size: 128, offset: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1870, line: 292, size: 128, elements: !1871)
!1870 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1871 = !{!1872, !1873, !1874}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1869, file: !1870, line: 293, baseType: !1308)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1869, file: !1870, line: 295, baseType: !1175, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1869, file: !1870, line: 296, baseType: !1187, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1865, file: !151, line: 454, baseType: !1175, size: 32, offset: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1865, file: !151, line: 455, baseType: !1877, size: 32, offset: 224)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1176, line: 168, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1176, line: 166, size: 32, elements: !1879)
!1879 = !{!1880}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1878, file: !1176, line: 167, baseType: !260, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1865, file: !151, line: 460, baseType: !1882, size: 128, offset: 256)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1883, line: 125, size: 128, elements: !1884)
!1883 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1884 = !{!1885, !1895}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1882, file: !1883, line: 126, baseType: !1886, size: 64)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1883, line: 31, size: 64, elements: !1887)
!1887 = !{!1888}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1886, file: !1883, line: 32, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1883, line: 24, size: 192, align: 64, elements: !1891)
!1891 = !{!1892, !1893, !1894}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1890, file: !1883, line: 25, baseType: !1186, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1890, file: !1883, line: 26, baseType: !1889, size: 64, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1890, file: !1883, line: 27, baseType: !1889, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1882, file: !1883, line: 127, baseType: !1889, size: 64, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1865, file: !151, line: 461, baseType: !1897, size: 256, offset: 384)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1898, line: 35, size: 256, elements: !1899)
!1898 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1899 = !{!1900, !1901, !1902, !1904}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1897, file: !1898, line: 36, baseType: !1808, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1897, file: !1898, line: 42, baseType: !1808, size: 64, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1897, file: !1898, line: 46, baseType: !1903, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1309, line: 29, baseType: !1316)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1897, file: !1898, line: 47, baseType: !1205, size: 128, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1865, file: !151, line: 462, baseType: !1186, size: 64, offset: 640)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1865, file: !151, line: 463, baseType: !1186, size: 64, offset: 704)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1865, file: !151, line: 464, baseType: !1186, size: 64, offset: 768)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1865, file: !151, line: 465, baseType: !1909, size: 64, offset: 832)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !151, line: 367, size: 1408, elements: !1912)
!1912 = !{!1913, !1917, !1921, !1925, !1929, !1933, !1946, !1952, !1956, !1961, !1965, !1969, !1973, !2017, !2021, !2027, !2028, !2029, !2033, !2038, !2042, !3156}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1911, file: !151, line: 368, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!260, !1851, !1743}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1911, file: !151, line: 369, baseType: !1918, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DISubroutineType(types: !1920)
!1920 = !{!260, !1424, !1851}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1911, file: !151, line: 372, baseType: !1922, size: 64, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!260, !1864, !1743}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1911, file: !151, line: 375, baseType: !1926, size: 64, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!260, !1851}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1911, file: !151, line: 381, baseType: !1930, size: 64, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!260, !1424, !1864, !1208, !7}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1911, file: !151, line: 383, baseType: !1934, size: 64, offset: 320)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{null, !1937}
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1939, line: 795, size: 256, elements: !1940)
!1939 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1940 = !{!1941, !1942, !1943, !1944, !1945}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1938, file: !1939, line: 796, baseType: !1424, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1938, file: !1939, line: 797, baseType: !1864, size: 64, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1938, file: !1939, line: 799, baseType: !1186, size: 64, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1938, file: !1939, line: 800, baseType: !7, size: 32, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1938, file: !1939, line: 801, baseType: !7, size: 32, offset: 224)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1911, file: !151, line: 385, baseType: !1947, size: 64, offset: 384)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!260, !1424, !1864, !1595, !7, !7, !1950, !1951}
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1911, file: !151, line: 388, baseType: !1953, size: 64, offset: 448)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!260, !1424, !1864, !1595, !7, !7, !1851, !1187}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1911, file: !151, line: 393, baseType: !1957, size: 64, offset: 512)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!1960, !1864, !1960}
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !1176, line: 125, baseType: !1229)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1911, file: !151, line: 394, baseType: !1962, size: 64, offset: 576)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{null, !1851, !7, !7}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1911, file: !151, line: 395, baseType: !1966, size: 64, offset: 640)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DISubroutineType(types: !1968)
!1968 = !{!260, !1851, !1175}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1911, file: !151, line: 396, baseType: !1970, size: 64, offset: 704)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !1851}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1911, file: !151, line: 397, baseType: !1974, size: 64, offset: 768)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!1380, !1977, !2015}
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !151, line: 320, size: 384, elements: !1979)
!1979 = !{!1980, !1981, !1982, !1986, !1987, !1988, !1990, !1991}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1978, file: !151, line: 321, baseType: !1424, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1978, file: !151, line: 326, baseType: !1595, size: 64, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1978, file: !151, line: 327, baseType: !1983, size: 64, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1977, !1188, !1188}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1978, file: !151, line: 328, baseType: !1187, size: 64, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1978, file: !151, line: 329, baseType: !260, size: 32, offset: 256)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1978, file: !151, line: 330, baseType: !1989, size: 16, offset: 288)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !1230, line: 19, baseType: !1182)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1978, file: !151, line: 331, baseType: !1989, size: 16, offset: 304)
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1978, file: !151, line: 332, baseType: !1992, size: 64, offset: 320)
!1992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1978, file: !151, line: 332, size: 64, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1992, file: !151, line: 333, baseType: !7, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1992, file: !151, line: 334, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1939, line: 569, size: 448, elements: !1998)
!1998 = !{!1999, !2000, !2001}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1997, file: !1939, line: 570, baseType: !1851, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1997, file: !1939, line: 571, baseType: !260, size: 32, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1997, file: !1939, line: 572, baseType: !2002, size: 320, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !2003, line: 14, baseType: !2004)
!2003 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !2003, line: 29, size: 320, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2014}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2004, file: !2003, line: 30, baseType: !7, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2004, file: !2003, line: 31, baseType: !1187, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2004, file: !2003, line: 32, baseType: !2009, size: 64, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !2003, line: 16, baseType: !2010)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!260, !2013, !7, !260, !1187}
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2004, file: !2003, line: 33, baseType: !1205, size: 128, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !151, line: 64, flags: DIFlagFwdDecl)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1911, file: !151, line: 402, baseType: !2018, size: 64, offset: 832)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DISubroutineType(types: !2020)
!2020 = !{!260, !1864, !1851, !1851, !11}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1911, file: !151, line: 404, baseType: !2022, size: 64, offset: 896)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!1554, !1851, !2025}
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2026, line: 305, baseType: !7)
!2026 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1911, file: !151, line: 405, baseType: !1970, size: 64, offset: 960)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1911, file: !151, line: 406, baseType: !1926, size: 64, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1911, file: !151, line: 407, baseType: !2030, size: 64, offset: 1088)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!260, !1851, !1186, !1186}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1911, file: !151, line: 409, baseType: !2034, size: 64, offset: 1152)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{null, !1851, !2037, !2037}
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1911, file: !151, line: 410, baseType: !2039, size: 64, offset: 1216)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{!260, !1864, !1851}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1911, file: !151, line: 413, baseType: !2043, size: 64, offset: 1280)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!260, !2046, !1424, !3155}
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !2048, line: 240, size: 1600, elements: !2049)
!2048 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!2049 = !{!2050, !2051, !2053, !2060, !2062, !2063, !2065, !2072, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2085, !2091, !2092, !3147, !3148, !3149, !3150, !3151, !3152, !3153}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2047, file: !2048, line: 241, baseType: !1186, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2047, file: !2048, line: 242, baseType: !2052, size: 16, offset: 64)
!2052 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2047, file: !2048, line: 243, baseType: !2054, size: 320, offset: 128)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !2055, line: 83, size: 320, elements: !2056)
!2055 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2054, file: !2055, line: 84, baseType: !260, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !2054, file: !2055, line: 85, baseType: !1205, size: 128, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !2054, file: !2055, line: 86, baseType: !1205, size: 128, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2047, file: !2048, line: 244, baseType: !2061, size: 8, offset: 448)
!2061 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2047, file: !2048, line: 245, baseType: !7, size: 32, offset: 480)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !2047, file: !2048, line: 246, baseType: !2064, size: 64, offset: 512)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !2047, file: !2048, line: 247, baseType: !2066, size: 64, offset: 576)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !2048, line: 208, size: 32, elements: !2068)
!2068 = !{!2069, !2070, !2071}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2067, file: !2048, line: 209, baseType: !1308)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2067, file: !2048, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2067, file: !2048, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !2047, file: !2048, line: 248, baseType: !2073, size: 64, offset: 640)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !2048, line: 232, size: 64, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2073, file: !2048, line: 233, baseType: !2067, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2073, file: !2048, line: 234, baseType: !2067, size: 32, offset: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !2047, file: !2048, line: 249, baseType: !7, size: 32, offset: 704)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !2047, file: !2048, line: 250, baseType: !7, size: 32, offset: 736)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2047, file: !2048, line: 251, baseType: !7, size: 32, offset: 768)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !2047, file: !2048, line: 252, baseType: !7, size: 32, offset: 800)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !2047, file: !2048, line: 253, baseType: !7, size: 32, offset: 832)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !2047, file: !2048, line: 254, baseType: !7, size: 32, offset: 864)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !2047, file: !2048, line: 255, baseType: !2084, size: 64, offset: 896)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !2047, file: !2048, line: 256, baseType: !2086, size: 64, offset: 960)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !2048, line: 227, size: 64, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2087, file: !2048, line: 228, baseType: !2067, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2087, file: !2048, line: 229, baseType: !7, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !2047, file: !2048, line: 257, baseType: !1886, size: 64, offset: 1024)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !2047, file: !2048, line: 258, baseType: !2093, size: 64, offset: 1088)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2095, line: 22, size: 1344, elements: !2096)
!2095 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2096 = !{!2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2111, !2176, !2177, !2178, !3144, !3145, !3146}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2094, file: !2095, line: 23, baseType: !1577, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2094, file: !2095, line: 24, baseType: !260, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2094, file: !2095, line: 25, baseType: !1493, size: 64, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2094, file: !2095, line: 26, baseType: !1663, size: 64, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2094, file: !2095, line: 27, baseType: !1804, size: 192, offset: 192)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2094, file: !2095, line: 28, baseType: !1187, size: 64, offset: 384)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2094, file: !2095, line: 29, baseType: !1187, size: 64, offset: 448)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2094, file: !2095, line: 30, baseType: !260, size: 32, offset: 512)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2094, file: !2095, line: 31, baseType: !1554, size: 8, offset: 544)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2094, file: !2095, line: 33, baseType: !1205, size: 128, offset: 576)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2094, file: !2095, line: 35, baseType: !2093, size: 64, offset: 704)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2094, file: !2095, line: 36, baseType: !2109, size: 8, offset: 768)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !1230, line: 17, baseType: !2110)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !1180, line: 21, baseType: !1279)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2094, file: !2095, line: 37, baseType: !2112, size: 64, offset: 832)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2114, line: 53, size: 6592, elements: !2115)
!2114 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !{!2116, !2117, !2118, !2119, !2122, !2143, !2144, !2145, !2146, !2147, !2157}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2113, file: !2114, line: 54, baseType: !1960, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2113, file: !2114, line: 60, baseType: !1960, size: 64, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2113, file: !2114, line: 64, baseType: !1186, size: 64, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2113, file: !2114, line: 65, baseType: !2120, size: 64, offset: 192)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2114, line: 65, flags: DIFlagFwdDecl)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2113, file: !2114, line: 66, baseType: !2123, size: 128, offset: 256)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2124, line: 105, size: 128, elements: !2125)
!2124 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2125 = !{!2126, !2127}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2123, file: !2124, line: 110, baseType: !1186, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2123, file: !2124, line: 118, baseType: !2128, size: 64, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2124, line: 95, size: 448, elements: !2130)
!2130 = !{!2131, !2132, !2138, !2139, !2140, !2141, !2142}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2129, file: !2124, line: 96, baseType: !1808, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2129, file: !2124, line: 97, baseType: !2133, size: 64, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2124, line: 60, baseType: !2135)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{null, !2137}
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2129, file: !2124, line: 98, baseType: !2133, size: 64, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2129, file: !2124, line: 99, baseType: !1554, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2129, file: !2124, line: 100, baseType: !1554, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2129, file: !2124, line: 101, baseType: !1437, size: 128, align: 64, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2129, file: !2124, line: 102, baseType: !2137, size: 64, offset: 384)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2113, file: !2114, line: 68, baseType: !1292, size: 5568, offset: 384)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2113, file: !2114, line: 69, baseType: !1301, size: 64, offset: 5952)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2113, file: !2114, line: 70, baseType: !260, size: 32, offset: 6016)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2113, file: !2114, line: 70, baseType: !260, size: 32, offset: 6048)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2113, file: !2114, line: 71, baseType: !2148, size: 64, offset: 6080)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2114, line: 48, size: 808, elements: !2150)
!2150 = !{!2151, !2155}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2149, file: !2114, line: 49, baseType: !2152, size: 296)
!2152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 296, elements: !2153)
!2153 = !{!2154}
!2154 = !DISubrange(count: 37)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2149, file: !2114, line: 50, baseType: !2156, size: 512, offset: 296)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 512, elements: !1354)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2113, file: !2114, line: 75, baseType: !2158, size: 448, offset: 6144)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !2159, line: 124, size: 448, elements: !2160)
!2159 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2160 = !{!2161, !2172, !2173}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2158, file: !2159, line: 125, baseType: !2162, size: 256)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2159, line: 102, size: 256, elements: !2163)
!2163 = !{!2164, !2165, !2166}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2162, file: !2159, line: 103, baseType: !1808, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2162, file: !2159, line: 104, baseType: !1205, size: 128, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2162, file: !2159, line: 105, baseType: !2167, size: 64, offset: 192)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2159, line: 21, baseType: !2168)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{null, !2171}
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2158, file: !2159, line: 126, baseType: !1437, size: 128, align: 64, offset: 256)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2158, file: !2159, line: 129, baseType: !2174, size: 64, offset: 384)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2159, line: 18, flags: DIFlagFwdDecl)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2094, file: !2095, line: 39, baseType: !7, size: 32, offset: 896)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2094, file: !2095, line: 41, baseType: !1308, offset: 928)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2094, file: !2095, line: 42, baseType: !2179, size: 64, offset: 960)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2114, line: 167, size: 8512, elements: !2181)
!2181 = !{!2182, !2183, !2184, !2185, !2189, !2190, !2191, !2202, !2203, !2391, !3125, !3126, !3127, !3128, !3129, !3130, !3133, !3134, !3137, !3138, !3139, !3142}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2180, file: !2114, line: 171, baseType: !260, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2180, file: !2114, line: 172, baseType: !260, size: 32, offset: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2180, file: !2114, line: 173, baseType: !260, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2180, file: !2114, line: 176, baseType: !2186, size: 256, offset: 96)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 256, elements: !2187)
!2187 = !{!2188}
!2188 = !DISubrange(count: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2180, file: !2114, line: 178, baseType: !1183, size: 16, offset: 352)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2180, file: !2114, line: 179, baseType: !1183, size: 16, offset: 368)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2180, file: !2114, line: 186, baseType: !2192, size: 64, offset: 384)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2114, line: 149, size: 256, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2193, file: !2114, line: 150, baseType: !1437, size: 128, align: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2193, file: !2114, line: 151, baseType: !260, size: 32, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2193, file: !2114, line: 152, baseType: !2112, size: 64, offset: 192)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2193, file: !2114, line: 153, baseType: !2199, offset: 256)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2112, elements: !2200)
!2200 = !{!2201}
!2201 = !DISubrange(count: -1)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2180, file: !2114, line: 187, baseType: !2113, size: 6592, offset: 448)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2180, file: !2114, line: 189, baseType: !2204, size: 64, offset: 7040)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !98, line: 1844, size: 960, elements: !2207)
!2207 = !{!2208, !2315, !2320, !2324, !2328, !2332, !2333, !2337, !2341, !2345, !2351, !2355, !2381, !2386, !2387}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2206, file: !98, line: 1845, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!2212, !2213}
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2095, line: 515, baseType: !7)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2095, line: 203, size: 832, elements: !2215)
!2215 = !{!2216, !2217, !2218, !2219, !2220, !2221, !2222, !2224, !2225, !2226, !2234, !2239, !2240, !2265, !2266, !2267, !2268, !2269, !2314}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2214, file: !2095, line: 204, baseType: !2213, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2214, file: !2095, line: 205, baseType: !2179, size: 64, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2214, file: !2095, line: 206, baseType: !7, size: 32, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2214, file: !2095, line: 210, baseType: !1183, size: 16, offset: 160)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2214, file: !2095, line: 211, baseType: !1183, size: 16, offset: 176)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2214, file: !2095, line: 212, baseType: !1183, size: 16, offset: 192)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2214, file: !2095, line: 213, baseType: !2223, size: 8, offset: 208)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2095, line: 58, baseType: !2109)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2214, file: !2095, line: 214, baseType: !2109, size: 8, offset: 216)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2214, file: !2095, line: 215, baseType: !1877, size: 32, offset: 224)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2214, file: !2095, line: 217, baseType: !2227, size: 192, offset: 256)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !2228, line: 37, size: 192, elements: !2229)
!2228 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2229 = !{!2230, !2231, !2232, !2233}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !2227, file: !2228, line: 38, baseType: !1960, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !2227, file: !2228, line: 40, baseType: !7, size: 32, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !2227, file: !2228, line: 42, baseType: !7, size: 32, offset: 96)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !2227, file: !2228, line: 44, baseType: !7, size: 32, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2214, file: !2095, line: 219, baseType: !2235, size: 64, offset: 448)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2095, line: 19, baseType: !2237)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{null, !2213}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2214, file: !2095, line: 221, baseType: !1187, size: 64, offset: 512)
!2240 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !2095, line: 240, baseType: !2241, size: 64, offset: 576)
!2241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !2095, line: 240, size: 64, elements: !2242)
!2242 = !{!2243}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !2241, file: !2095, line: 242, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2246, line: 313, size: 832, elements: !2247)
!2246 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2247 = !{!2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2263}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !2245, file: !2246, line: 314, baseType: !2213, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !2245, file: !2246, line: 316, baseType: !2227, size: 192, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !2245, file: !2246, line: 318, baseType: !1183, size: 16, offset: 256)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !2245, file: !2246, line: 319, baseType: !1183, size: 16, offset: 272)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !2245, file: !2246, line: 320, baseType: !1183, size: 16, offset: 288)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !2245, file: !2246, line: 321, baseType: !1183, size: 16, offset: 304)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !2245, file: !2246, line: 323, baseType: !2227, size: 192, offset: 320)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !2245, file: !2246, line: 325, baseType: !2162, size: 256, offset: 512)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !2245, file: !2246, line: 327, baseType: !2257, size: 64, offset: 768)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2228, line: 31, size: 128, elements: !2259)
!2259 = !{!2260, !2261, !2262}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2258, file: !2228, line: 32, baseType: !1851, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2258, file: !2228, line: 33, baseType: !7, size: 32, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2258, file: !2228, line: 34, baseType: !7, size: 32, offset: 96)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !2245, file: !2246, line: 328, baseType: !2264, offset: 832)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, elements: !2200)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2214, file: !2095, line: 246, baseType: !1183, size: 16, offset: 640)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2214, file: !2095, line: 252, baseType: !1183, size: 16, offset: 656)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2214, file: !2095, line: 254, baseType: !1877, size: 32, offset: 672)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2214, file: !2095, line: 256, baseType: !2257, size: 64, offset: 704)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2214, file: !2095, line: 258, baseType: !2270, size: 64, offset: 768)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2246, line: 682, size: 2368, elements: !2272)
!2272 = !{!2273, !2276, !2277, !2303, !2304, !2305, !2306, !2307, !2312, !2313}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !2271, file: !2246, line: 683, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1853, line: 117, flags: DIFlagFwdDecl)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !2271, file: !2246, line: 684, baseType: !7, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !2271, file: !2246, line: 686, baseType: !2278, size: 448, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !2279, line: 26, baseType: !2280)
!2279 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !2279, line: 16, size: 448, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2292, !2297}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 17, baseType: !1308)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !2280, file: !2279, line: 18, baseType: !260, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !2280, file: !2279, line: 19, baseType: !260, size: 32, offset: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2280, file: !2279, line: 20, baseType: !1951, size: 64, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !2280, file: !2279, line: 22, baseType: !1187, size: 64, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2280, file: !2279, line: 23, baseType: !2288, size: 64, offset: 192)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !2279, line: 13, baseType: !2290)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!1187, !1175, !1187}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2280, file: !2279, line: 24, baseType: !2293, size: 64, offset: 256)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !2279, line: 14, baseType: !2295)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{null, !1187, !1187}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2280, file: !2279, line: 25, baseType: !2298, size: 128, offset: 320)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !2003, line: 40, baseType: !2299)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !2003, line: 36, size: 128, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2299, file: !2003, line: 37, baseType: !1308)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2299, file: !2003, line: 38, baseType: !1205, size: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !2271, file: !2246, line: 687, baseType: !2278, size: 448, offset: 576)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !2271, file: !2246, line: 689, baseType: !2278, size: 448, offset: 1024)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !2271, file: !2246, line: 690, baseType: !2278, size: 448, offset: 1472)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !2271, file: !2246, line: 697, baseType: !1308, offset: 1920)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !2271, file: !2246, line: 698, baseType: !2308, size: 128, offset: 1920)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2246, line: 554, size: 128, elements: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2308, file: !2246, line: 555, baseType: !2213, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2308, file: !2246, line: 556, baseType: !2213, size: 64, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !2271, file: !2246, line: 699, baseType: !2162, size: 256, offset: 2048)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !2271, file: !2246, line: 700, baseType: !2174, size: 64, offset: 2304)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2214, file: !2095, line: 265, baseType: !2264, offset: 832)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2206, file: !98, line: 1846, baseType: !2316, size: 64, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!260, !2093, !2319}
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !1176, line: 150, baseType: !7)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2206, file: !98, line: 1847, baseType: !2321, size: 64, offset: 128)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{null, !2179, !2319}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2206, file: !98, line: 1848, baseType: !2325, size: 64, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!260, !2093, !1960, !1851, !7}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2206, file: !98, line: 1849, baseType: !2329, size: 64, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DISubroutineType(types: !2331)
!2331 = !{!260, !2093, !2319, !7, !1186}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2206, file: !98, line: 1850, baseType: !2329, size: 64, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2206, file: !98, line: 1851, baseType: !2334, size: 64, offset: 384)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!7, !2179, !7}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2206, file: !98, line: 1853, baseType: !2338, size: 64, offset: 448)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{null, !2179}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2206, file: !98, line: 1854, baseType: !2342, size: 64, offset: 512)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{!260, !2179}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2206, file: !98, line: 1855, baseType: !2346, size: 64, offset: 576)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!260, !2093, !2349}
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !151, line: 51, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2206, file: !98, line: 1857, baseType: !2352, size: 64, offset: 640)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !2093, !1186}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2206, file: !98, line: 1858, baseType: !2356, size: 64, offset: 704)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!260, !2179, !1960, !7, !2359, !1187}
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !98, line: 354, baseType: !2360)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{!260, !2363, !7, !1187}
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2365, line: 106, size: 512, elements: !2366)
!2365 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2376, !2377}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2364, file: !2365, line: 107, baseType: !1231, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2364, file: !2365, line: 108, baseType: !1231, size: 64, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2364, file: !2365, line: 109, baseType: !1231, size: 64, offset: 128)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2364, file: !2365, line: 110, baseType: !2110, size: 8, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2364, file: !2365, line: 111, baseType: !2110, size: 8, offset: 200)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2364, file: !2365, line: 112, baseType: !2110, size: 8, offset: 208)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2364, file: !2365, line: 113, baseType: !2110, size: 8, offset: 216)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2364, file: !2365, line: 114, baseType: !2375, size: 32, offset: 224)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 32, elements: !1198)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2364, file: !2365, line: 115, baseType: !1231, size: 64, offset: 256)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2364, file: !2365, line: 116, baseType: !2378, size: 192, offset: 320)
!2378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 192, elements: !2379)
!2379 = !{!2380}
!2380 = !DISubrange(count: 24)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2206, file: !98, line: 1860, baseType: !2382, size: 64, offset: 768)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!1349, !2179, !2385}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2206, file: !98, line: 1861, baseType: !1697, size: 64, offset: 832)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2206, file: !98, line: 1862, baseType: !2388, size: 64, offset: 896)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2390)
!2390 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !98, line: 41, flags: DIFlagFwdDecl)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2180, file: !2114, line: 190, baseType: !2392, size: 64, offset: 7104)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !98, line: 399, size: 14464, elements: !2394)
!2394 = !{!2395, !2641, !2763, !2764, !2767, !2770, !2865, !2866, !2867, !2869, !2870, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2990, !3001, !3002, !3003, !3004, !3005, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2393, file: !98, line: 400, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !98, line: 130, size: 2176, elements: !2398)
!2398 = !{!2399, !2400, !2403, !2518, !2519, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2533, !2540, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2604, !2605, !2606, !2639, !2640}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2397, file: !98, line: 131, baseType: !2392, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2397, file: !98, line: 132, baseType: !2401, size: 64, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !98, line: 132, flags: DIFlagFwdDecl)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2397, file: !98, line: 133, baseType: !2404, size: 64, offset: 128)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !2406, line: 16, size: 4032, elements: !2407)
!2406 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !{!2408, !2414, !2432, !2442, !2443, !2444, !2445, !2446, !2447, !2450, !2451, !2466, !2467, !2468, !2469, !2470, !2472, !2473, !2474, !2475, !2478, !2479, !2480, !2481, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496}
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2405, file: !2406, line: 17, baseType: !2409, size: 192)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2405, file: !2406, line: 17, size: 192, elements: !2410)
!2410 = !{!2411, !2412, !2413}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2409, file: !2406, line: 19, baseType: !1308)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2409, file: !2406, line: 27, baseType: !1205, size: 128)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2409, file: !2406, line: 32, baseType: !1186, size: 64, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2405, file: !2406, line: 38, baseType: !2415, size: 704, offset: 192)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2159, line: 115, size: 704, elements: !2416)
!2416 = !{!2417, !2418, !2430, !2431}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2415, file: !2159, line: 116, baseType: !2162, size: 256)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2415, file: !2159, line: 117, baseType: !2419, size: 320, offset: 256)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2420, line: 11, size: 320, elements: !2421)
!2420 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2421 = !{!2422, !2423, !2424, !2429}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2419, file: !2420, line: 16, baseType: !1706, size: 128)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2419, file: !2420, line: 17, baseType: !1186, size: 64, offset: 128)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2419, file: !2420, line: 18, baseType: !2425, size: 64, offset: 192)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{null, !2428}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2419, file: !2420, line: 19, baseType: !1266, size: 32, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2415, file: !2159, line: 120, baseType: !2174, size: 64, offset: 576)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2415, file: !2159, line: 121, baseType: !260, size: 32, offset: 640)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2405, file: !2406, line: 40, baseType: !2433, size: 64, offset: 896)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !2434, line: 756, baseType: !2435)
!2434 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2436, size: 64, elements: !2440)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2434, line: 17, size: 64, elements: !2437)
!2437 = !{!2438}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2436, file: !2434, line: 17, baseType: !2439, size: 64)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1186, size: 64, elements: !2440)
!2440 = !{!2441}
!2441 = !DISubrange(count: 1)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2405, file: !2406, line: 45, baseType: !260, size: 32, offset: 960)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2405, file: !2406, line: 50, baseType: !260, size: 32, offset: 992)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2405, file: !2406, line: 53, baseType: !1186, size: 64, offset: 1024)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2405, file: !2406, line: 59, baseType: !1187, size: 64, offset: 1088)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2405, file: !2406, line: 63, baseType: !2392, size: 64, offset: 1152)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2405, file: !2406, line: 65, baseType: !2448, size: 64, offset: 1216)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !98, line: 40, flags: DIFlagFwdDecl)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2405, file: !2406, line: 71, baseType: !1187, size: 64, offset: 1280)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2405, file: !2406, line: 77, baseType: !2452, size: 192, offset: 1344)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2453, line: 48, size: 192, elements: !2454)
!2453 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2454 = !{!2455, !2456, !2457, !2458}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2452, file: !2453, line: 52, baseType: !7, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2452, file: !2453, line: 57, baseType: !7, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2452, file: !2453, line: 62, baseType: !7, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2452, file: !2453, line: 67, baseType: !2459, size: 64, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2453, line: 20, size: 192, elements: !2461)
!2461 = !{!2462, !2463, !2464, !2465}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2460, file: !2453, line: 24, baseType: !1186, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2460, file: !2453, line: 29, baseType: !1186, size: 64, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2460, file: !2453, line: 34, baseType: !1186, size: 64, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2460, file: !2453, line: 39, baseType: !1308, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2405, file: !2406, line: 83, baseType: !2401, size: 64, offset: 1536)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2405, file: !2406, line: 89, baseType: !7, size: 32, offset: 1600)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2405, file: !2406, line: 92, baseType: !1183, size: 16, offset: 1632)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2405, file: !2406, line: 94, baseType: !1183, size: 16, offset: 1648)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2405, file: !2406, line: 96, baseType: !2471, size: 64, offset: 1664)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2405, file: !2406, line: 99, baseType: !1308, offset: 1728)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2405, file: !2406, line: 104, baseType: !2002, size: 320, offset: 1728)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2405, file: !2406, line: 110, baseType: !1877, size: 32, offset: 2048)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2405, file: !2406, line: 116, baseType: !2476, size: 64, offset: 2112)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !2406, line: 9, flags: DIFlagFwdDecl)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2405, file: !2406, line: 122, baseType: !2476, size: 64, offset: 2176)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2405, file: !2406, line: 125, baseType: !1186, size: 64, offset: 2240)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2405, file: !2406, line: 127, baseType: !1186, size: 64, offset: 2304)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2405, file: !2406, line: 130, baseType: !2482, size: 448, offset: 2368)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1186, size: 448, elements: !2483)
!2483 = !{!2484}
!2484 = !DISubrange(count: 7)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2405, file: !2406, line: 133, baseType: !7, size: 32, offset: 2816)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2405, file: !2406, line: 135, baseType: !7, size: 32, offset: 2848)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2405, file: !2406, line: 141, baseType: !1877, size: 32, offset: 2880)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2405, file: !2406, line: 145, baseType: !1877, size: 32, offset: 2912)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2405, file: !2406, line: 148, baseType: !1706, size: 128, offset: 2944)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2405, file: !2406, line: 150, baseType: !1706, size: 128, offset: 3072)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2405, file: !2406, line: 152, baseType: !1295, size: 512, offset: 3200)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2405, file: !2406, line: 155, baseType: !1186, size: 64, offset: 3712)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2405, file: !2406, line: 157, baseType: !1186, size: 64, offset: 3776)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2405, file: !2406, line: 159, baseType: !1186, size: 64, offset: 3840)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2405, file: !2406, line: 175, baseType: !1205, size: 128, offset: 3904)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2405, file: !2406, line: 182, baseType: !2497, offset: 4032)
!2497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2498, elements: !2200)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2499, line: 16, size: 576, elements: !2500)
!2499 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2500 = !{!2501, !2505, !2506, !2507, !2508, !2514, !2515, !2517}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2498, file: !2499, line: 17, baseType: !2502, size: 32)
!2502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 32, elements: !2503)
!2503 = !{!2504}
!2504 = !DISubrange(count: 2)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2498, file: !2499, line: 18, baseType: !2052, size: 16, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2498, file: !2499, line: 19, baseType: !2109, size: 8, offset: 48)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2498, file: !2499, line: 20, baseType: !2109, size: 8, offset: 56)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2498, file: !2499, line: 21, baseType: !2509, size: 128, offset: 64)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2510, line: 43, size: 128, elements: !2511)
!2510 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2511 = !{!2512, !2513}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2509, file: !2510, line: 44, baseType: !1903)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2509, file: !2510, line: 45, baseType: !1205, size: 128)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2498, file: !2499, line: 23, baseType: !1440, size: 64, offset: 192)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2498, file: !2499, line: 24, baseType: !2516, size: 64, offset: 256)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2498, file: !2499, line: 25, baseType: !2162, size: 256, offset: 320)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2397, file: !98, line: 135, baseType: !7, size: 32, offset: 192)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2397, file: !98, line: 136, baseType: !2520, size: 32, offset: 224)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !98, line: 66, baseType: !1179)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2397, file: !98, line: 138, baseType: !260, size: 32, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2397, file: !98, line: 139, baseType: !260, size: 32, offset: 288)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2397, file: !98, line: 142, baseType: !7, size: 32, offset: 320)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2397, file: !98, line: 143, baseType: !1960, size: 64, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2397, file: !98, line: 145, baseType: !2213, size: 64, offset: 448)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2397, file: !98, line: 146, baseType: !2213, size: 64, offset: 512)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2397, file: !98, line: 148, baseType: !1205, size: 128, offset: 576)
!2528 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !98, line: 157, baseType: !2529, size: 128, offset: 704)
!2529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !98, line: 157, size: 128, elements: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2529, file: !98, line: 158, baseType: !1706, size: 128)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2529, file: !98, line: 159, baseType: !1205, size: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !98, line: 167, baseType: !2534, size: 192, offset: 832)
!2534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !98, line: 167, size: 192, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2534, file: !98, line: 168, baseType: !1890, size: 192, align: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2534, file: !98, line: 169, baseType: !2258, size: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2534, file: !98, line: 170, baseType: !1187, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2534, file: !98, line: 171, baseType: !260, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !98, line: 180, baseType: !2541, size: 256, offset: 1024)
!2541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !98, line: 180, size: 256, elements: !2542)
!2542 = !{!2543, !2578}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2541, file: !98, line: 184, baseType: !2544, size: 192)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2541, file: !98, line: 181, size: 192, elements: !2545)
!2545 = !{!2546, !2576}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2544, file: !98, line: 182, baseType: !2547, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2549, line: 73, size: 448, elements: !2550)
!2549 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2550 = !{!2551, !2552, !2565, !2570, !2575}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2548, file: !2549, line: 74, baseType: !2392, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2548, file: !2549, line: 75, baseType: !2553, size: 64, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2549, line: 99, size: 704, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2554, file: !2549, line: 100, baseType: !1808, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2554, file: !2549, line: 101, baseType: !1877, size: 32, offset: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2554, file: !2549, line: 102, baseType: !1877, size: 32, offset: 96)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2554, file: !2549, line: 105, baseType: !1308, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2554, file: !2549, line: 107, baseType: !1183, size: 16, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2554, file: !2549, line: 109, baseType: !1869, size: 128, offset: 192)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2554, file: !2549, line: 110, baseType: !2547, size: 64, offset: 320)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2554, file: !2549, line: 111, baseType: !1702, size: 64, offset: 384)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2554, file: !2549, line: 113, baseType: !2162, size: 256, offset: 448)
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2548, file: !2549, line: 83, baseType: !2566, size: 128, offset: 128)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2548, file: !2549, line: 83, size: 128, elements: !2567)
!2567 = !{!2568, !2569}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2566, file: !2549, line: 84, baseType: !1205, size: 128)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2566, file: !2549, line: 85, baseType: !2274, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, scope: !2548, file: !2549, line: 87, baseType: !2571, size: 128, offset: 256)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2548, file: !2549, line: 87, size: 128, elements: !2572)
!2572 = !{!2573, !2574}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2571, file: !2549, line: 88, baseType: !1706, size: 128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2571, file: !2549, line: 89, baseType: !1437, size: 128, align: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2548, file: !2549, line: 92, baseType: !7, size: 32, offset: 384)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2544, file: !98, line: 183, baseType: !2577, size: 128, offset: 64)
!2577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 128, elements: !2503)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2541, file: !98, line: 190, baseType: !2579, size: 256)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2541, file: !98, line: 186, size: 256, elements: !2580)
!2580 = !{!2581, !2582, !2583}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2579, file: !98, line: 187, baseType: !7, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2579, file: !98, line: 188, baseType: !1205, size: 128, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2579, file: !98, line: 189, baseType: !2584, size: 64, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !98, line: 62, baseType: !2586)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{null, !2396, !2223}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2397, file: !98, line: 193, baseType: !2179, size: 64, offset: 1280)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2397, file: !98, line: 194, baseType: !2112, size: 64, offset: 1344)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2397, file: !98, line: 200, baseType: !1229, size: 64, offset: 1408)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2397, file: !98, line: 202, baseType: !1229, size: 64, offset: 1472)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2397, file: !98, line: 212, baseType: !1183, size: 16, offset: 1536)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2397, file: !98, line: 218, baseType: !1183, size: 16, offset: 1552)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2397, file: !98, line: 221, baseType: !1183, size: 16, offset: 1568)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2397, file: !98, line: 229, baseType: !1183, size: 16, offset: 1584)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2397, file: !98, line: 230, baseType: !1183, size: 16, offset: 1600)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !98, line: 232, baseType: !97, size: 32, offset: 1632)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2397, file: !98, line: 233, baseType: !2599, size: 32, offset: 1664)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !2600, line: 113, baseType: !2601)
!2600 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !2600, line: 111, size: 32, elements: !2602)
!2602 = !{!2603}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2601, file: !2600, line: 112, baseType: !1877, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2397, file: !98, line: 235, baseType: !7, size: 32, offset: 1696)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2397, file: !98, line: 236, baseType: !1186, size: 64, offset: 1728)
!2606 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !98, line: 238, baseType: !2607, size: 256, offset: 1792)
!2607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !98, line: 238, size: 256, elements: !2608)
!2608 = !{!2609, !2638}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2607, file: !98, line: 239, baseType: !2610, size: 256)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2611, line: 23, size: 256, elements: !2612)
!2611 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2612 = !{!2613, !2635, !2637}
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2610, file: !2611, line: 24, baseType: !2614, size: 128)
!2614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2610, file: !2611, line: 24, size: 128, elements: !2615)
!2615 = !{!2616, !2628}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2614, file: !2611, line: 25, baseType: !2617, size: 128)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2618, line: 58, size: 128, elements: !2619)
!2618 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2619 = !{!2620, !2621, !2626, !2627}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2617, file: !2618, line: 59, baseType: !1431, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2618, line: 60, baseType: !2622, size: 32, offset: 64)
!2622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2618, line: 60, size: 32, elements: !2623)
!2623 = !{!2624, !2625}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2622, file: !2618, line: 61, baseType: !7, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2622, file: !2618, line: 62, baseType: !1877, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2617, file: !2618, line: 65, baseType: !1989, size: 16, offset: 96)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2617, file: !2618, line: 65, baseType: !1989, size: 16, offset: 112)
!2628 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2611, line: 26, baseType: !2629, size: 128)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2614, file: !2611, line: 26, size: 128, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2629, file: !2611, line: 27, baseType: !1431, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2629, file: !2611, line: 28, baseType: !7, size: 32, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2629, file: !2611, line: 30, baseType: !1989, size: 16, offset: 96)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2629, file: !2611, line: 30, baseType: !1989, size: 16, offset: 112)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2610, file: !2611, line: 34, baseType: !2636, size: 64, offset: 128)
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2611, line: 17, baseType: !1532)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2610, file: !2611, line: 35, baseType: !1187, size: 64, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2607, file: !98, line: 240, baseType: !1229, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2397, file: !98, line: 246, baseType: !2584, size: 64, offset: 2048)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2397, file: !98, line: 247, baseType: !1187, size: 64, offset: 2112)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2393, file: !98, line: 401, baseType: !2642, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !104, line: 101, size: 4992, elements: !2644)
!2644 = !{!2645, !2757, !2758, !2759, !2760, !2761}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2643, file: !104, line: 103, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !104, line: 66, size: 2240, elements: !2648)
!2648 = !{!2649, !2650, !2732, !2733, !2734, !2747, !2748, !2749, !2751, !2752, !2756}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2647, file: !104, line: 69, baseType: !2274, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2647, file: !104, line: 72, baseType: !2651, size: 1408, offset: 64)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !104, line: 29, size: 1408, elements: !2652)
!2652 = !{!2653, !2657, !2661, !2665, !2669, !2673, !2677, !2681, !2686, !2690, !2694, !2700, !2704, !2705, !2709, !2713, !2717, !2721, !2722, !2726, !2727, !2731}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2651, file: !104, line: 30, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{!260, !2392, !2646}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2651, file: !104, line: 31, baseType: !2658, size: 64, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !2642}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2651, file: !104, line: 32, baseType: !2662, size: 64, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!260, !2404, !7}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2651, file: !104, line: 33, baseType: !2666, size: 64, offset: 192)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{null, !2404, !7}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2651, file: !104, line: 34, baseType: !2670, size: 64, offset: 256)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{null, !2404}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2651, file: !104, line: 36, baseType: !2674, size: 64, offset: 320)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 64)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{!1554, !2392, !2396, !2213}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2651, file: !104, line: 37, baseType: !2678, size: 64, offset: 384)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 64)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!1554, !2404, !2213, !7}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2651, file: !104, line: 38, baseType: !2682, size: 64, offset: 448)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!260, !2392, !2685, !2213}
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2651, file: !104, line: 39, baseType: !2687, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{null, !2392, !2396, !103}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2651, file: !104, line: 40, baseType: !2691, size: 64, offset: 576)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{null, !2392, !2396, !2396}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2651, file: !104, line: 41, baseType: !2695, size: 64, offset: 640)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !7, !2698}
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !104, line: 26, flags: DIFlagFwdDecl)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2651, file: !104, line: 42, baseType: !2701, size: 64, offset: 704)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = !DISubroutineType(types: !2703)
!2703 = !{null, !2396}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2651, file: !104, line: 43, baseType: !2701, size: 64, offset: 768)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2651, file: !104, line: 44, baseType: !2706, size: 64, offset: 832)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{null, !2404, !1208, !1554}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2651, file: !104, line: 45, baseType: !2710, size: 64, offset: 896)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!2396, !2404}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2651, file: !104, line: 46, baseType: !2714, size: 64, offset: 960)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!1554, !2404}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2651, file: !104, line: 47, baseType: !2718, size: 64, offset: 1024)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !2396, !1229}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2651, file: !104, line: 48, baseType: !2701, size: 64, offset: 1088)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2651, file: !104, line: 49, baseType: !2723, size: 64, offset: 1152)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!2396, !2392, !2396}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2651, file: !104, line: 50, baseType: !2723, size: 64, offset: 1216)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2651, file: !104, line: 51, baseType: !2728, size: 64, offset: 1280)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{null, !2547}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2651, file: !104, line: 52, baseType: !2728, size: 64, offset: 1344)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2647, file: !104, line: 74, baseType: !1394, size: 64, offset: 1472)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2647, file: !104, line: 75, baseType: !1394, size: 64, offset: 1536)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2647, file: !104, line: 76, baseType: !2735, size: 64, offset: 1600)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !104, line: 57, size: 256, elements: !2737)
!2737 = !{!2738, !2739, !2743}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2736, file: !104, line: 58, baseType: !1385, size: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2736, file: !104, line: 59, baseType: !2740, size: 64, offset: 128)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{!1380, !2642, !1349}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2736, file: !104, line: 60, baseType: !2744, size: 64, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{!1380, !2642, !1235, !1394}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2647, file: !104, line: 77, baseType: !1235, size: 64, offset: 1664)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2647, file: !104, line: 78, baseType: !1235, size: 64, offset: 1728)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2647, file: !104, line: 79, baseType: !2750, size: 32, offset: 1792)
!2750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2647, file: !104, line: 80, baseType: !1697, size: 64, offset: 1856)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2647, file: !104, line: 87, baseType: !2753, size: 176, offset: 1920)
!2753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 176, elements: !2754)
!2754 = !{!2755}
!2755 = !DISubrange(count: 22)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2647, file: !104, line: 88, baseType: !1205, size: 128, offset: 2112)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2643, file: !104, line: 104, baseType: !1187, size: 64, offset: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2643, file: !104, line: 105, baseType: !1295, size: 512, offset: 128)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2643, file: !104, line: 106, baseType: !1804, size: 192, offset: 640)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2643, file: !104, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2643, file: !104, line: 108, baseType: !2762, size: 4096, offset: 896)
!2762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 4096, elements: !1354)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2393, file: !98, line: 403, baseType: !2123, size: 128, offset: 128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2393, file: !98, line: 405, baseType: !2765, size: 64, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !98, line: 43, flags: DIFlagFwdDecl)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2393, file: !98, line: 406, baseType: !2768, size: 64, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !98, line: 42, flags: DIFlagFwdDecl)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2393, file: !98, line: 408, baseType: !2771, size: 64, offset: 384)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !2406, line: 290, size: 960, elements: !2774)
!2774 = !{!2775, !2785, !2786, !2790, !2794, !2798, !2802, !2803, !2807, !2808, !2854, !2858, !2859, !2860, !2861}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !2773, file: !2406, line: 294, baseType: !2776, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!2223, !2404, !2779}
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2781)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !2406, line: 277, size: 128, elements: !2782)
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !2781, file: !2406, line: 278, baseType: !2396, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2781, file: !2406, line: 279, baseType: !1554, size: 8, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !2773, file: !2406, line: 304, baseType: !2670, size: 64, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !2773, file: !2406, line: 312, baseType: !2787, size: 64, offset: 128)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{!1554, !2392}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !2773, file: !2406, line: 317, baseType: !2791, size: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{null, !2392}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2773, file: !2406, line: 322, baseType: !2795, size: 64, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!110, !2396, !1554}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2773, file: !2406, line: 327, baseType: !2799, size: 64, offset: 320)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!260, !2404}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2773, file: !2406, line: 332, baseType: !2701, size: 64, offset: 384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2773, file: !2406, line: 339, baseType: !2804, size: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!260, !2404, !1187, !7}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2773, file: !2406, line: 343, baseType: !2666, size: 64, offset: 512)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !2773, file: !2406, line: 352, baseType: !2809, size: 64, offset: 576)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{!260, !2812, !2396, !7, !7}
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !2406, line: 249, size: 2304, elements: !2814)
!2814 = !{!2815, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2849, !2850, !2852, !2853}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2813, file: !2406, line: 250, baseType: !2816, size: 384)
!2816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2817, size: 384, elements: !1350)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !2406, line: 195, size: 128, elements: !2818)
!2818 = !{!2819, !2820, !2821}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !2817, file: !2406, line: 196, baseType: !2084, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !2817, file: !2406, line: 197, baseType: !7, size: 32, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !2817, file: !2406, line: 198, baseType: !7, size: 32, offset: 96)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !2813, file: !2406, line: 251, baseType: !7, size: 32, offset: 384)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2813, file: !2406, line: 252, baseType: !2771, size: 64, offset: 448)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2813, file: !2406, line: 253, baseType: !7, size: 32, offset: 512)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2813, file: !2406, line: 254, baseType: !7, size: 32, offset: 544)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !2813, file: !2406, line: 255, baseType: !7, size: 32, offset: 576)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2813, file: !2406, line: 256, baseType: !7, size: 32, offset: 608)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2813, file: !2406, line: 257, baseType: !260, size: 32, offset: 640)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2813, file: !2406, line: 258, baseType: !7, size: 32, offset: 672)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2813, file: !2406, line: 259, baseType: !7, size: 32, offset: 704)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2813, file: !2406, line: 260, baseType: !1187, size: 64, offset: 768)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !2813, file: !2406, line: 261, baseType: !1877, size: 32, offset: 832)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !2813, file: !2406, line: 263, baseType: !2834, size: 512, offset: 896)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2453, line: 97, size: 512, elements: !2835)
!2835 = !{!2836, !2837, !2838, !2839, !2840, !2846, !2847, !2848}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !2834, file: !2453, line: 101, baseType: !2452, size: 192)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !2834, file: !2453, line: 109, baseType: !2084, size: 64, offset: 192)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !2834, file: !2453, line: 115, baseType: !7, size: 32, offset: 256)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !2834, file: !2453, line: 120, baseType: !1877, size: 32, offset: 288)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !2834, file: !2453, line: 125, baseType: !2841, size: 64, offset: 320)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2453, line: 76, size: 192, elements: !2843)
!2843 = !{!2844, !2845}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !2842, file: !2453, line: 80, baseType: !1877, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2842, file: !2453, line: 85, baseType: !2298, size: 128, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !2834, file: !2453, line: 130, baseType: !1877, size: 32, offset: 384)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !2834, file: !2453, line: 135, baseType: !1554, size: 8, offset: 416)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !2834, file: !2453, line: 141, baseType: !7, size: 32, offset: 448)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !2813, file: !2406, line: 264, baseType: !2834, size: 512, offset: 1408)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2813, file: !2406, line: 265, baseType: !2851, size: 64, offset: 1920)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !2813, file: !2406, line: 267, baseType: !1804, size: 192, offset: 1984)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !2813, file: !2406, line: 268, baseType: !1205, size: 128, offset: 2176)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !2773, file: !2406, line: 357, baseType: !2855, size: 64, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{null, !2812, !2396, !7}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !2773, file: !2406, line: 363, baseType: !2701, size: 64, offset: 704)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !2773, file: !2406, line: 369, baseType: !2701, size: 64, offset: 768)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !2773, file: !2406, line: 374, baseType: !2787, size: 64, offset: 832)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !2773, file: !2406, line: 380, baseType: !2862, size: 64, offset: 896)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!260, !2812}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2393, file: !98, line: 411, baseType: !2401, size: 64, offset: 448)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2393, file: !98, line: 413, baseType: !7, size: 32, offset: 512)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2393, file: !98, line: 416, baseType: !2868, size: 64, offset: 576)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2393, file: !98, line: 417, baseType: !7, size: 32, offset: 640)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2393, file: !98, line: 419, baseType: !2871, size: 64, offset: 704)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !115, line: 165, size: 4672, elements: !2873)
!2873 = !{!2874, !2875, !2876, !2877, !2878, !2879, !2884, !2885, !2886, !2887, !2888, !2889, !2928, !2929, !2930, !2931, !2933, !2934}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2872, file: !115, line: 166, baseType: !1229, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2872, file: !115, line: 167, baseType: !1890, size: 192, align: 64, offset: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2872, file: !115, line: 168, baseType: !1205, size: 128, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2872, file: !115, line: 169, baseType: !1186, size: 64, offset: 384)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2872, file: !115, line: 170, baseType: !1186, size: 64, offset: 448)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2872, file: !115, line: 172, baseType: !2880, size: 32, offset: 512)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2881, line: 19, size: 32, elements: !2882)
!2881 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2882 = !{!2883}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2880, file: !2881, line: 20, baseType: !2599, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2872, file: !115, line: 173, baseType: !7, size: 32, offset: 544)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2872, file: !115, line: 174, baseType: !7, size: 32, offset: 576)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2872, file: !115, line: 175, baseType: !7, size: 32, offset: 608)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2872, file: !115, line: 175, baseType: !7, size: 32, offset: 640)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2872, file: !115, line: 181, baseType: !1808, size: 64, offset: 704)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2872, file: !115, line: 183, baseType: !2890, size: 2688, offset: 768)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !115, line: 107, size: 2688, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2921, !2922, !2923, !2924, !2925, !2926, !2927}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2890, file: !115, line: 108, baseType: !2871, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2890, file: !115, line: 110, baseType: !1186, size: 64, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2890, file: !115, line: 111, baseType: !1186, size: 64, offset: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2890, file: !115, line: 113, baseType: !1205, size: 128, offset: 192)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2890, file: !115, line: 114, baseType: !1205, size: 128, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2890, file: !115, line: 115, baseType: !1205, size: 128, offset: 448)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2890, file: !115, line: 116, baseType: !1205, size: 128, offset: 576)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2890, file: !115, line: 117, baseType: !1308, offset: 704)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2890, file: !115, line: 119, baseType: !2901, size: 256, offset: 704)
!2901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2902, size: 256, elements: !1198)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2903, line: 97, size: 64, elements: !2904)
!2903 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2904 = !{!2905}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2902, file: !2903, line: 98, baseType: !1814, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2890, file: !115, line: 121, baseType: !1186, size: 64, offset: 960)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2890, file: !115, line: 123, baseType: !1186, size: 64, offset: 1024)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2890, file: !115, line: 124, baseType: !1186, size: 64, offset: 1088)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2890, file: !115, line: 125, baseType: !1186, size: 64, offset: 1152)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2890, file: !115, line: 126, baseType: !1186, size: 64, offset: 1216)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2890, file: !115, line: 127, baseType: !1186, size: 64, offset: 1280)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2890, file: !115, line: 135, baseType: !1186, size: 64, offset: 1344)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2890, file: !115, line: 136, baseType: !1186, size: 64, offset: 1408)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2890, file: !115, line: 138, baseType: !2915, size: 128, offset: 1472)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2916, line: 76, size: 128, elements: !2917)
!2916 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2917 = !{!2918, !2919, !2920}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2915, file: !2916, line: 78, baseType: !2902, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2915, file: !2916, line: 80, baseType: !7, size: 32, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2915, file: !2916, line: 81, baseType: !1903, offset: 96)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2890, file: !115, line: 139, baseType: !260, size: 32, offset: 1600)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2890, file: !115, line: 140, baseType: !114, size: 32, offset: 1632)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2890, file: !115, line: 142, baseType: !1308, offset: 1664)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2890, file: !115, line: 143, baseType: !1205, size: 128, offset: 1664)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2890, file: !115, line: 144, baseType: !2415, size: 704, offset: 1792)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2890, file: !115, line: 146, baseType: !1186, size: 64, offset: 2496)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2890, file: !115, line: 148, baseType: !1205, size: 128, offset: 2560)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2872, file: !115, line: 184, baseType: !1205, size: 128, offset: 3456)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2872, file: !115, line: 190, baseType: !2298, size: 128, offset: 3584)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2872, file: !115, line: 192, baseType: !1291, size: 64, offset: 3712)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2872, file: !115, line: 193, baseType: !2932, size: 512, offset: 3776)
!2932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 512, elements: !1354)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2872, file: !115, line: 194, baseType: !1291, size: 64, offset: 4288)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2872, file: !115, line: 196, baseType: !2419, size: 320, offset: 4352)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2393, file: !98, line: 425, baseType: !1187, size: 64, offset: 768)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2393, file: !98, line: 430, baseType: !1186, size: 64, offset: 832)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2393, file: !98, line: 436, baseType: !1877, size: 32, offset: 896)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2393, file: !98, line: 442, baseType: !260, size: 32, offset: 928)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2393, file: !98, line: 447, baseType: !1175, size: 32, offset: 960)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2393, file: !98, line: 449, baseType: !1308, offset: 992)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2393, file: !98, line: 454, baseType: !1295, size: 512, offset: 1024)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2393, file: !98, line: 459, baseType: !1301, size: 64, offset: 1536)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2393, file: !98, line: 462, baseType: !2944, size: 128, offset: 1600)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2114, line: 159, size: 128, elements: !2945)
!2945 = !{!2946, !2975, !2976, !2977, !2978}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2944, file: !2114, line: 160, baseType: !2947, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !98, line: 1664, size: 320, elements: !2950)
!2950 = !{!2951, !2965, !2966, !2969, !2974}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !2949, file: !98, line: 1665, baseType: !2952, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !98, line: 1660, baseType: !2954)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!2223, !2956}
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !98, line: 1651, size: 320, elements: !2958)
!2958 = !{!2959, !2960, !2961, !2962, !2963, !2964}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !2957, file: !98, line: 1652, baseType: !1187, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !2957, file: !98, line: 1653, baseType: !1187, size: 64, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2957, file: !98, line: 1654, baseType: !1960, size: 64, offset: 128)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2957, file: !98, line: 1655, baseType: !7, size: 32, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2957, file: !98, line: 1656, baseType: !1183, size: 16, offset: 224)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2957, file: !98, line: 1657, baseType: !1235, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !2949, file: !98, line: 1666, baseType: !2952, size: 64, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !2949, file: !98, line: 1667, baseType: !2967, size: 64, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !98, line: 1661, baseType: !2702)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !2949, file: !98, line: 1668, baseType: !2970, size: 64, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !98, line: 1662, baseType: !2972)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{null, !2396, !7}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2949, file: !98, line: 1669, baseType: !1235, size: 64, offset: 256)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2944, file: !2114, line: 161, baseType: !1279, size: 8, offset: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !2944, file: !2114, line: 162, baseType: !1279, size: 8, offset: 72)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !2944, file: !2114, line: 163, baseType: !1279, size: 8, offset: 80)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !2944, file: !2114, line: 164, baseType: !1279, size: 8, offset: 88)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2393, file: !98, line: 466, baseType: !1291, size: 64, offset: 1728)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2393, file: !98, line: 467, baseType: !44, size: 32, offset: 1792)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2393, file: !98, line: 468, baseType: !7, size: 32, offset: 1824)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2393, file: !98, line: 474, baseType: !1186, size: 64, offset: 1856)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2393, file: !98, line: 476, baseType: !7, size: 32, offset: 1920)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2393, file: !98, line: 477, baseType: !7, size: 32, offset: 1952)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2393, file: !98, line: 484, baseType: !7, size: 32, offset: 1984)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2393, file: !98, line: 485, baseType: !260, size: 32, offset: 2016)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2393, file: !98, line: 487, baseType: !2988, size: 64, offset: 2048)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !98, line: 44, flags: DIFlagFwdDecl)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2393, file: !98, line: 488, baseType: !2991, size: 5120, offset: 2112)
!2991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2992, size: 5120, elements: !2999)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2095, line: 540, size: 320, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !2992, file: !2095, line: 541, baseType: !1229, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2992, file: !2095, line: 542, baseType: !1229, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2992, file: !2095, line: 543, baseType: !1229, size: 64, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !2992, file: !2095, line: 544, baseType: !1266, size: 32, offset: 192)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2992, file: !2095, line: 545, baseType: !1229, size: 64, offset: 256)
!2999 = !{!3000}
!3000 = !DISubrange(count: 16)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2393, file: !98, line: 490, baseType: !2419, size: 320, offset: 7232)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2393, file: !98, line: 491, baseType: !2162, size: 256, offset: 7552)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2393, file: !98, line: 493, baseType: !1877, size: 32, offset: 7808)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2393, file: !98, line: 495, baseType: !1205, size: 128, offset: 7872)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2393, file: !98, line: 502, baseType: !3006, size: 896, offset: 8000)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !98, line: 321, size: 896, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3006, file: !98, line: 322, baseType: !1186, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3006, file: !98, line: 323, baseType: !1186, size: 64, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3006, file: !98, line: 324, baseType: !1186, size: 64, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3006, file: !98, line: 326, baseType: !7, size: 32, offset: 192)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3006, file: !98, line: 327, baseType: !7, size: 32, offset: 224)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3006, file: !98, line: 328, baseType: !7, size: 32, offset: 256)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3006, file: !98, line: 329, baseType: !7, size: 32, offset: 288)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3006, file: !98, line: 330, baseType: !7, size: 32, offset: 320)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3006, file: !98, line: 331, baseType: !7, size: 32, offset: 352)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3006, file: !98, line: 332, baseType: !7, size: 32, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3006, file: !98, line: 333, baseType: !7, size: 32, offset: 416)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3006, file: !98, line: 334, baseType: !7, size: 32, offset: 448)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3006, file: !98, line: 335, baseType: !7, size: 32, offset: 480)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3006, file: !98, line: 336, baseType: !7, size: 32, offset: 512)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3006, file: !98, line: 337, baseType: !7, size: 32, offset: 544)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3006, file: !98, line: 338, baseType: !7, size: 32, offset: 576)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3006, file: !98, line: 339, baseType: !7, size: 32, offset: 608)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3006, file: !98, line: 340, baseType: !7, size: 32, offset: 640)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3006, file: !98, line: 341, baseType: !7, size: 32, offset: 672)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3006, file: !98, line: 342, baseType: !7, size: 32, offset: 704)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3006, file: !98, line: 344, baseType: !1183, size: 16, offset: 736)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3006, file: !98, line: 345, baseType: !1183, size: 16, offset: 752)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3006, file: !98, line: 346, baseType: !1183, size: 16, offset: 768)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3006, file: !98, line: 348, baseType: !1279, size: 8, offset: 784)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3006, file: !98, line: 349, baseType: !1279, size: 8, offset: 792)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3006, file: !98, line: 350, baseType: !1279, size: 8, offset: 800)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3006, file: !98, line: 351, baseType: !126, size: 32, offset: 832)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2393, file: !98, line: 504, baseType: !7, size: 32, offset: 8896)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2393, file: !98, line: 534, baseType: !7, size: 32, offset: 8928)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2393, file: !98, line: 535, baseType: !7, size: 32, offset: 8960)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2393, file: !98, line: 536, baseType: !260, size: 32, offset: 8992)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2393, file: !98, line: 537, baseType: !1804, size: 192, offset: 9024)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2393, file: !98, line: 544, baseType: !2448, size: 64, offset: 9216)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2393, file: !98, line: 546, baseType: !1205, size: 128, offset: 9280)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2393, file: !98, line: 547, baseType: !1308, offset: 9408)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2393, file: !98, line: 548, baseType: !2415, size: 704, offset: 9408)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2393, file: !98, line: 550, baseType: !1804, size: 192, offset: 10112)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2393, file: !98, line: 551, baseType: !1804, size: 192, offset: 10304)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2393, file: !98, line: 557, baseType: !1205, size: 128, offset: 10496)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2393, file: !98, line: 558, baseType: !1308, offset: 10624)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2393, file: !98, line: 560, baseType: !260, size: 32, offset: 10624)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2393, file: !98, line: 563, baseType: !3050, size: 256, offset: 10688)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3051, line: 18, size: 256, elements: !3052)
!3051 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3052 = !{!3053, !3054, !3055, !3056}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3050, file: !3051, line: 19, baseType: !1291, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3050, file: !3051, line: 20, baseType: !260, size: 32, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3050, file: !3051, line: 21, baseType: !2392, size: 64, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3050, file: !3051, line: 22, baseType: !3057, size: 64, offset: 192)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3059)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3051, line: 10, size: 256, elements: !3060)
!3060 = !{!3061, !3103, !3107, !3111}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3059, file: !3051, line: 11, baseType: !3062, size: 64)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!260, !3065}
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3067, line: 22, size: 1280, elements: !3068)
!3067 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3068 = !{!3069, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3066, file: !3067, line: 23, baseType: !3070, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !1180, line: 26, baseType: !260)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3066, file: !3067, line: 24, baseType: !1179, size: 32, offset: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3066, file: !3067, line: 25, baseType: !1179, size: 32, offset: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3066, file: !3067, line: 28, baseType: !1179, size: 32, offset: 96)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3066, file: !3067, line: 29, baseType: !1231, size: 64, offset: 128)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3066, file: !3067, line: 30, baseType: !1231, size: 64, offset: 192)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3066, file: !3067, line: 31, baseType: !1179, size: 32, offset: 256)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3066, file: !3067, line: 32, baseType: !1179, size: 32, offset: 288)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3066, file: !3067, line: 33, baseType: !1179, size: 32, offset: 320)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3066, file: !3067, line: 34, baseType: !1179, size: 32, offset: 352)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3066, file: !3067, line: 35, baseType: !1231, size: 64, offset: 384)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3066, file: !3067, line: 38, baseType: !1179, size: 32, offset: 448)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3066, file: !3067, line: 40, baseType: !1179, size: 32, offset: 480)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3066, file: !3067, line: 41, baseType: !1179, size: 32, offset: 512)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3066, file: !3067, line: 42, baseType: !1179, size: 32, offset: 544)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3066, file: !3067, line: 43, baseType: !1231, size: 64, offset: 576)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3066, file: !3067, line: 44, baseType: !1231, size: 64, offset: 640)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3066, file: !3067, line: 46, baseType: !1179, size: 32, offset: 704)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3066, file: !3067, line: 47, baseType: !1179, size: 32, offset: 736)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3066, file: !3067, line: 48, baseType: !1231, size: 64, offset: 768)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3066, file: !3067, line: 49, baseType: !1179, size: 32, offset: 832)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3066, file: !3067, line: 51, baseType: !1179, size: 32, offset: 864)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3066, file: !3067, line: 52, baseType: !1179, size: 32, offset: 896)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3066, file: !3067, line: 53, baseType: !1179, size: 32, offset: 928)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3066, file: !3067, line: 54, baseType: !1179, size: 32, offset: 960)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3066, file: !3067, line: 55, baseType: !1179, size: 32, offset: 992)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3066, file: !3067, line: 56, baseType: !1179, size: 32, offset: 1024)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3066, file: !3067, line: 57, baseType: !1179, size: 32, offset: 1056)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3066, file: !3067, line: 58, baseType: !3070, size: 32, offset: 1088)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3066, file: !3067, line: 59, baseType: !3070, size: 32, offset: 1120)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3066, file: !3067, line: 60, baseType: !1231, size: 64, offset: 1152)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3066, file: !3067, line: 61, baseType: !1179, size: 32, offset: 1216)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3066, file: !3067, line: 63, baseType: !1179, size: 32, offset: 1248)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3059, file: !3051, line: 12, baseType: !3104, size: 64, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!260, !2396, !3065, !2319}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3059, file: !3051, line: 14, baseType: !3108, size: 64, offset: 128)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!260, !2396, !3065}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3059, file: !3051, line: 15, baseType: !2701, size: 64, offset: 192)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2393, file: !98, line: 570, baseType: !1437, size: 128, align: 64, offset: 10944)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2393, file: !98, line: 571, baseType: !2298, size: 128, offset: 11072)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2393, file: !98, line: 576, baseType: !1804, size: 192, offset: 11200)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2393, file: !98, line: 578, baseType: !2812, size: 64, offset: 11392)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2393, file: !98, line: 579, baseType: !1205, size: 128, offset: 11456)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2393, file: !98, line: 580, baseType: !2271, size: 2368, offset: 11584)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2393, file: !98, line: 582, baseType: !1454, size: 64, offset: 13952)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2393, file: !98, line: 589, baseType: !1554, size: 8, offset: 14016)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2393, file: !98, line: 591, baseType: !1394, size: 64, offset: 14080)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2393, file: !98, line: 594, baseType: !3122, size: 320, offset: 14144)
!3122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1229, size: 320, elements: !3123)
!3123 = !{!3124}
!3124 = !DISubrange(count: 5)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2180, file: !2114, line: 191, baseType: !1187, size: 64, offset: 7168)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2180, file: !2114, line: 193, baseType: !260, size: 32, offset: 7232)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2180, file: !2114, line: 194, baseType: !1186, size: 64, offset: 7296)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2180, file: !2114, line: 196, baseType: !1897, size: 256, offset: 7360)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2180, file: !2114, line: 197, baseType: !1301, size: 64, offset: 7616)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2180, file: !2114, line: 199, baseType: !3131, size: 64, offset: 7680)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2114, line: 199, flags: DIFlagFwdDecl)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2180, file: !2114, line: 200, baseType: !1877, size: 32, offset: 7744)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2180, file: !2114, line: 201, baseType: !3135, size: 64, offset: 7808)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2114, line: 156, flags: DIFlagFwdDecl)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2180, file: !2114, line: 203, baseType: !1295, size: 512, offset: 7872)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2180, file: !2114, line: 208, baseType: !260, size: 32, offset: 8384)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2180, file: !2114, line: 209, baseType: !3140, size: 64, offset: 8448)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2114, line: 157, flags: DIFlagFwdDecl)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2180, file: !2114, line: 210, baseType: !3143, offset: 8512)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1713, line: 192, elements: !1322)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2094, file: !2095, line: 43, baseType: !2871, size: 64, offset: 1024)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2094, file: !2095, line: 46, baseType: !260, size: 32, offset: 1088)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2094, file: !2095, line: 48, baseType: !1804, size: 192, offset: 1152)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !2047, file: !2048, line: 259, baseType: !1424, size: 64, offset: 1152)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !2047, file: !2048, line: 260, baseType: !7, size: 32, offset: 1216)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2047, file: !2048, line: 265, baseType: !1308, offset: 1248)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !2047, file: !2048, line: 278, baseType: !1308, offset: 1248)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !2047, file: !2048, line: 282, baseType: !2162, size: 256, offset: 1280)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !2047, file: !2048, line: 283, baseType: !2073, size: 64, offset: 1536)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !2047, file: !2048, line: 284, baseType: !3154, offset: 1600)
!3154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, elements: !2200)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1911, file: !151, line: 415, baseType: !3157, size: 64, offset: 1344)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{null, !1424}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1865, file: !151, line: 466, baseType: !1186, size: 64, offset: 896)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1865, file: !151, line: 467, baseType: !3162, size: 32, offset: 960)
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !3163, line: 8, baseType: !1266)
!3163 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1865, file: !151, line: 468, baseType: !1308, offset: 992)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1865, file: !151, line: 469, baseType: !1205, size: 128, offset: 1024)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1865, file: !151, line: 470, baseType: !1187, size: 64, offset: 1152)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1860, file: !1853, line: 87, baseType: !1186, size: 64, offset: 192)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1860, file: !1853, line: 94, baseType: !1186, size: 64, offset: 256)
!3169 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !1853, line: 96, baseType: !3170, size: 64)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !1853, line: 96, size: 64, elements: !3171)
!3171 = !{!3172}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3170, file: !1853, line: 101, baseType: !3173, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !1176, line: 143, baseType: !1229)
!3174 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !1853, line: 103, baseType: !3175, size: 320)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !1853, line: 103, size: 320, elements: !3176)
!3176 = !{!3177, !3187, !3188, !3189}
!3177 = !DIDerivedType(tag: DW_TAG_member, scope: !3175, file: !1853, line: 104, baseType: !3178, size: 128)
!3178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3175, file: !1853, line: 104, size: 128, elements: !3179)
!3179 = !{!3180, !3181}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3178, file: !1853, line: 105, baseType: !1205, size: 128)
!3181 = !DIDerivedType(tag: DW_TAG_member, scope: !3178, file: !1853, line: 106, baseType: !3182, size: 128)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3178, file: !1853, line: 106, size: 128, elements: !3183)
!3183 = !{!3184, !3185, !3186}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3182, file: !1853, line: 107, baseType: !1851, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3182, file: !1853, line: 109, baseType: !260, size: 32, offset: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3182, file: !1853, line: 110, baseType: !260, size: 32, offset: 96)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3175, file: !1853, line: 117, baseType: !2274, size: 64, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3175, file: !1853, line: 119, baseType: !1187, size: 64, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, scope: !3175, file: !1853, line: 120, baseType: !3190, size: 64, offset: 256)
!3190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3175, file: !1853, line: 120, size: 64, elements: !3191)
!3191 = !{!3192, !3193, !3194}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3190, file: !1853, line: 121, baseType: !1187, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3190, file: !1853, line: 122, baseType: !1186, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_member, scope: !3190, file: !1853, line: 123, baseType: !3195, size: 32)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3190, file: !1853, line: 123, size: 32, elements: !3196)
!3196 = !{!3197, !3198, !3199}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3195, file: !1853, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3195, file: !1853, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3195, file: !1853, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3200 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !1853, line: 130, baseType: !3201, size: 192)
!3201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !1853, line: 130, size: 192, elements: !3202)
!3202 = !{!3203, !3204, !3205, !3206, !3207}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3201, file: !1853, line: 131, baseType: !1186, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3201, file: !1853, line: 134, baseType: !1279, size: 8, offset: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3201, file: !1853, line: 135, baseType: !1279, size: 8, offset: 72)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3201, file: !1853, line: 136, baseType: !1877, size: 32, offset: 96)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3201, file: !1853, line: 137, baseType: !7, size: 32, offset: 128)
!3208 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !1853, line: 139, baseType: !3209, size: 256)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !1853, line: 139, size: 256, elements: !3210)
!3210 = !{!3211, !3212, !3213}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3209, file: !1853, line: 140, baseType: !1186, size: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3209, file: !1853, line: 141, baseType: !1877, size: 32, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3209, file: !1853, line: 143, baseType: !1205, size: 128, offset: 128)
!3214 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !1853, line: 145, baseType: !3215, size: 256)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !1853, line: 145, size: 256, elements: !3216)
!3216 = !{!3217, !3218, !3221, !3222, !4678}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !3215, file: !1853, line: 146, baseType: !1186, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !3215, file: !1853, line: 147, baseType: !3219, size: 64, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !3220, line: 509, baseType: !1851)
!3220 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !3215, file: !1853, line: 148, baseType: !1186, size: 64, offset: 128)
!3222 = !DIDerivedType(tag: DW_TAG_member, scope: !3215, file: !1853, line: 149, baseType: !3223, size: 64, offset: 192)
!3223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3215, file: !1853, line: 149, size: 64, elements: !3224)
!3224 = !{!3225, !4677}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3223, file: !1853, line: 150, baseType: !3226, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1853, line: 388, size: 7296, elements: !3228)
!3228 = !{!3229, !4675}
!3229 = !DIDerivedType(tag: DW_TAG_member, scope: !3227, file: !1853, line: 389, baseType: !3230, size: 7296)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3227, file: !1853, line: 389, size: 7296, elements: !3231)
!3231 = !{!3232, !3350, !3351, !3352, !3356, !3357, !3358, !3359, !3360, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3401, !3407, !3410, !3449, !3450, !4659, !4660, !4663, !4664, !4665, !4668, !4669, !4670, !4673, !4674}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3230, file: !1853, line: 390, baseType: !3233, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1853, line: 305, size: 1472, elements: !3235)
!3235 = !{!3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3250, !3251, !3256, !3257, !3260, !3344, !3345, !3346, !3347, !3348}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !3234, file: !1853, line: 308, baseType: !1186, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !3234, file: !1853, line: 309, baseType: !1186, size: 64, offset: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !3234, file: !1853, line: 313, baseType: !3233, size: 64, offset: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !3234, file: !1853, line: 313, baseType: !3233, size: 64, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !3234, file: !1853, line: 315, baseType: !1890, size: 192, align: 64, offset: 256)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !3234, file: !1853, line: 323, baseType: !1186, size: 64, offset: 448)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !3234, file: !1853, line: 327, baseType: !3226, size: 64, offset: 512)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !3234, file: !1853, line: 333, baseType: !3244, size: 64, offset: 576)
!3244 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !3220, line: 284, baseType: !3245)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !3220, line: 284, size: 64, elements: !3246)
!3246 = !{!3247}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !3245, file: !3220, line: 284, baseType: !3248, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !3249, line: 19, baseType: !1186)
!3249 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !3234, file: !1853, line: 334, baseType: !1186, size: 64, offset: 640)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !3234, file: !1853, line: 343, baseType: !3252, size: 256, offset: 704)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3234, file: !1853, line: 340, size: 256, elements: !3253)
!3253 = !{!3254, !3255}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3252, file: !1853, line: 341, baseType: !1890, size: 192, align: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !3252, file: !1853, line: 342, baseType: !1186, size: 64, offset: 192)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !3234, file: !1853, line: 351, baseType: !1205, size: 128, offset: 960)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !3234, file: !1853, line: 353, baseType: !3258, size: 64, offset: 1088)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1853, line: 353, flags: DIFlagFwdDecl)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3234, file: !1853, line: 356, baseType: !3261, size: 64, offset: 1152)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3263)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !86, line: 557, size: 832, elements: !3264)
!3264 = !{!3265, !3269, !3270, !3274, !3278, !3318, !3322, !3326, !3330, !3331, !3332, !3336, !3340}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3263, file: !86, line: 558, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{null, !3233}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3263, file: !86, line: 559, baseType: !3266, size: 64, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !3263, file: !86, line: 560, baseType: !3271, size: 64, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!260, !3233, !1186}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !3263, file: !86, line: 561, baseType: !3275, size: 64, offset: 192)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!260, !3233}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !3263, file: !86, line: 562, baseType: !3279, size: 64, offset: 256)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!3282, !3283}
!3282 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1853, line: 682, baseType: !7)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !86, line: 508, size: 768, elements: !3285)
!3285 = !{!3286, !3287, !3288, !3289, !3290, !3291, !3298, !3305, !3311, !3312, !3313, !3315, !3317}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !3284, file: !86, line: 509, baseType: !3233, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3284, file: !86, line: 510, baseType: !7, size: 32, offset: 64)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3284, file: !86, line: 511, baseType: !1175, size: 32, offset: 96)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !3284, file: !86, line: 512, baseType: !1186, size: 64, offset: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !3284, file: !86, line: 513, baseType: !1186, size: 64, offset: 192)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !3284, file: !86, line: 514, baseType: !3292, size: 64, offset: 256)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !3220, line: 385, baseType: !3294)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3220, line: 385, size: 64, elements: !3295)
!3295 = !{!3296}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !3294, file: !3220, line: 385, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !3249, line: 15, baseType: !1186)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !3284, file: !86, line: 516, baseType: !3299, size: 64, offset: 320)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !3220, line: 359, baseType: !3301)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3220, line: 359, size: 64, elements: !3302)
!3302 = !{!3303}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !3301, file: !3220, line: 359, baseType: !3304, size: 64)
!3304 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !3249, line: 16, baseType: !1186)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !3284, file: !86, line: 519, baseType: !3306, size: 64, offset: 384)
!3306 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !3249, line: 21, baseType: !3307)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3249, line: 21, size: 64, elements: !3308)
!3308 = !{!3309}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !3307, file: !3249, line: 21, baseType: !3310, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !3249, line: 14, baseType: !1186)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !3284, file: !86, line: 521, baseType: !1851, size: 64, offset: 448)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3284, file: !86, line: 522, baseType: !1851, size: 64, offset: 512)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !3284, file: !86, line: 528, baseType: !3314, size: 64, offset: 576)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3284, file: !86, line: 532, baseType: !3316, size: 64, offset: 640)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !3284, file: !86, line: 536, baseType: !3219, size: 64, offset: 704)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !3263, file: !86, line: 563, baseType: !3319, size: 64, offset: 320)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!3282, !3283, !85}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !3263, file: !86, line: 565, baseType: !3323, size: 64, offset: 384)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{null, !3283, !1186, !1186}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !3263, file: !86, line: 567, baseType: !3327, size: 64, offset: 448)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!1186, !3233}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !3263, file: !86, line: 571, baseType: !3279, size: 64, offset: 512)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !3263, file: !86, line: 574, baseType: !3279, size: 64, offset: 576)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !3263, file: !86, line: 579, baseType: !3333, size: 64, offset: 640)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{!260, !3233, !1186, !1187, !260, !260}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3263, file: !86, line: 585, baseType: !3337, size: 64, offset: 704)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{!1235, !3233}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !3263, file: !86, line: 615, baseType: !3341, size: 64, offset: 768)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!1851, !3233, !1186}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !3234, file: !1853, line: 359, baseType: !1186, size: 64, offset: 1216)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !3234, file: !1853, line: 361, baseType: !1424, size: 64, offset: 1280)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !3234, file: !1853, line: 362, baseType: !1187, size: 64, offset: 1344)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !3234, file: !1853, line: 365, baseType: !1808, size: 64, offset: 1408)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !3234, file: !1853, line: 373, baseType: !3349, offset: 1472)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1853, line: 296, elements: !1322)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !3230, file: !1853, line: 391, baseType: !1886, size: 64, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !3230, file: !1853, line: 392, baseType: !1229, size: 64, offset: 128)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3230, file: !1853, line: 394, baseType: !3353, size: 64, offset: 192)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!1186, !1424, !1186, !1186, !1186, !1186}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !3230, file: !1853, line: 398, baseType: !1186, size: 64, offset: 256)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !3230, file: !1853, line: 399, baseType: !1186, size: 64, offset: 320)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !3230, file: !1853, line: 405, baseType: !1186, size: 64, offset: 384)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !3230, file: !1853, line: 406, baseType: !1186, size: 64, offset: 448)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !3230, file: !1853, line: 407, baseType: !3361, size: 64, offset: 512)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !3220, line: 286, baseType: !3363)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3220, line: 286, size: 64, elements: !3364)
!3364 = !{!3365}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !3363, file: !3220, line: 286, baseType: !3366, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !3249, line: 18, baseType: !1186)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !3230, file: !1853, line: 416, baseType: !1877, size: 32, offset: 576)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !3230, file: !1853, line: 428, baseType: !1877, size: 32, offset: 608)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !3230, file: !1853, line: 437, baseType: !1877, size: 32, offset: 640)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !3230, file: !1853, line: 447, baseType: !1877, size: 32, offset: 672)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !3230, file: !1853, line: 450, baseType: !1808, size: 64, offset: 704)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !3230, file: !1853, line: 452, baseType: !260, size: 32, offset: 768)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !3230, file: !1853, line: 454, baseType: !1308, offset: 800)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !3230, file: !1853, line: 457, baseType: !1897, size: 256, offset: 832)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !3230, file: !1853, line: 459, baseType: !1205, size: 128, offset: 1088)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !3230, file: !1853, line: 466, baseType: !1186, size: 64, offset: 1216)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !3230, file: !1853, line: 467, baseType: !1186, size: 64, offset: 1280)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !3230, file: !1853, line: 469, baseType: !1186, size: 64, offset: 1344)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !3230, file: !1853, line: 470, baseType: !1186, size: 64, offset: 1408)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !3230, file: !1853, line: 471, baseType: !1810, size: 64, offset: 1472)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !3230, file: !1853, line: 472, baseType: !1186, size: 64, offset: 1536)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !3230, file: !1853, line: 473, baseType: !1186, size: 64, offset: 1600)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !3230, file: !1853, line: 474, baseType: !1186, size: 64, offset: 1664)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !3230, file: !1853, line: 475, baseType: !1186, size: 64, offset: 1728)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !3230, file: !1853, line: 477, baseType: !1308, offset: 1792)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !3230, file: !1853, line: 478, baseType: !1186, size: 64, offset: 1792)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !3230, file: !1853, line: 478, baseType: !1186, size: 64, offset: 1856)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !3230, file: !1853, line: 478, baseType: !1186, size: 64, offset: 1920)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !3230, file: !1853, line: 478, baseType: !1186, size: 64, offset: 1984)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !3230, file: !1853, line: 479, baseType: !1186, size: 64, offset: 2048)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !3230, file: !1853, line: 479, baseType: !1186, size: 64, offset: 2112)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !3230, file: !1853, line: 479, baseType: !1186, size: 64, offset: 2176)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !3230, file: !1853, line: 480, baseType: !1186, size: 64, offset: 2240)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !3230, file: !1853, line: 480, baseType: !1186, size: 64, offset: 2304)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !3230, file: !1853, line: 480, baseType: !1186, size: 64, offset: 2368)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !3230, file: !1853, line: 480, baseType: !1186, size: 64, offset: 2432)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !3230, file: !1853, line: 482, baseType: !3398, size: 2816, offset: 2496)
!3398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1186, size: 2816, elements: !3399)
!3399 = !{!3400}
!3400 = !DISubrange(count: 44)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !3230, file: !1853, line: 488, baseType: !3402, size: 256, offset: 5312)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !3403, line: 60, size: 256, elements: !3404)
!3403 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!3404 = !{!3405}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3402, file: !3403, line: 61, baseType: !3406, size: 256)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 256, elements: !1198)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !3230, file: !1853, line: 490, baseType: !3408, size: 64, offset: 5568)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1853, line: 490, flags: DIFlagFwdDecl)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3230, file: !1853, line: 493, baseType: !3411, size: 896, offset: 5632)
!3411 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !3412, line: 53, baseType: !3413)
!3412 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3412, line: 13, size: 896, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3418, !3421, !3422, !3423, !3424, !3444, !3445, !3446}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !3413, file: !3412, line: 18, baseType: !1229, size: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !3413, file: !3412, line: 28, baseType: !1810, size: 64, offset: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !3413, file: !3412, line: 31, baseType: !1897, size: 256, offset: 128)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !3413, file: !3412, line: 32, baseType: !3419, size: 64, offset: 384)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !3412, line: 32, flags: DIFlagFwdDecl)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !3413, file: !3412, line: 37, baseType: !1183, size: 16, offset: 448)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3413, file: !3412, line: 40, baseType: !1804, size: 192, offset: 512)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !3413, file: !3412, line: 41, baseType: !1187, size: 64, offset: 704)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !3413, file: !3412, line: 42, baseType: !3425, size: 64, offset: 768)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3427)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !3428, line: 13, size: 896, elements: !3429)
!3428 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!3429 = !{!3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3427, file: !3428, line: 14, baseType: !1187, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3427, file: !3428, line: 15, baseType: !1186, size: 64, offset: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3427, file: !3428, line: 17, baseType: !1186, size: 64, offset: 128)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !3427, file: !3428, line: 17, baseType: !1186, size: 64, offset: 192)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !3427, file: !3428, line: 19, baseType: !1188, size: 64, offset: 256)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !3427, file: !3428, line: 21, baseType: !1188, size: 64, offset: 320)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !3427, file: !3428, line: 22, baseType: !1188, size: 64, offset: 384)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !3427, file: !3428, line: 23, baseType: !1188, size: 64, offset: 448)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !3427, file: !3428, line: 24, baseType: !1188, size: 64, offset: 512)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !3427, file: !3428, line: 25, baseType: !1188, size: 64, offset: 576)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !3427, file: !3428, line: 26, baseType: !1188, size: 64, offset: 640)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !3427, file: !3428, line: 27, baseType: !1188, size: 64, offset: 704)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !3427, file: !3428, line: 28, baseType: !1188, size: 64, offset: 768)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !3427, file: !3428, line: 29, baseType: !1188, size: 64, offset: 832)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !3413, file: !3412, line: 44, baseType: !1877, size: 32, offset: 832)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !3413, file: !3412, line: 50, baseType: !1989, size: 16, offset: 864)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !3413, file: !3412, line: 51, baseType: !3447, size: 16, offset: 880)
!3447 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !1230, line: 18, baseType: !3448)
!3448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !1180, line: 23, baseType: !2052)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3230, file: !1853, line: 495, baseType: !1186, size: 64, offset: 6528)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !3230, file: !1853, line: 497, baseType: !3451, size: 64, offset: 6592)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1853, line: 381, size: 384, elements: !3453)
!3453 = !{!3454, !3455, !4658}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3452, file: !1853, line: 382, baseType: !1877, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !3452, file: !1853, line: 383, baseType: !3456, size: 128, offset: 64)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1853, line: 376, size: 128, elements: !3457)
!3457 = !{!3458, !4656}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3456, file: !1853, line: 377, baseType: !3459, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !3461, line: 640, size: 48640, elements: !3462)
!3461 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!3462 = !{!3463, !3469, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3484, !3502, !3513, !3596, !3597, !3598, !3602, !3603, !3605, !3606, !3607, !3608, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3685, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3717, !3719, !3720, !3721, !3728, !3729, !3730, !3731, !3732, !3733, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3757, !3762, !4084, !4085, !4086, !4087, !4089, !4092, !4095, !4098, !4101, !4137, !4238, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4284, !4285, !4286, !4287, !4288, !4293, !4294, !4295, !4298, !4299, !4301, !4310, !4315, !4316, !4317, !4320, !4321, !4400, !4401, !4404, !4405, !4408, !4409, !4410, !4414, !4415, !4416, !4429, !4430, !4431, !4441, !4446, !4449, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !3460, file: !3461, line: 646, baseType: !3464, size: 128)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !3465, line: 56, size: 128, elements: !3466)
!3465 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!3466 = !{!3467, !3468}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3464, file: !3465, line: 57, baseType: !1186, size: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3464, file: !3465, line: 58, baseType: !1266, size: 32, offset: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3460, file: !3461, line: 649, baseType: !3470, size: 64, offset: 128)
!3470 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1188)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !3460, file: !3461, line: 657, baseType: !1187, size: 64, offset: 192)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3460, file: !3461, line: 658, baseType: !2599, size: 32, offset: 256)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3460, file: !3461, line: 660, baseType: !7, size: 32, offset: 288)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !3460, file: !3461, line: 661, baseType: !7, size: 32, offset: 320)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !3460, file: !3461, line: 684, baseType: !260, size: 32, offset: 352)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3460, file: !3461, line: 686, baseType: !260, size: 32, offset: 384)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !3460, file: !3461, line: 687, baseType: !260, size: 32, offset: 416)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !3460, file: !3461, line: 688, baseType: !260, size: 32, offset: 448)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !3460, file: !3461, line: 689, baseType: !7, size: 32, offset: 480)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !3460, file: !3461, line: 691, baseType: !3481, size: 64, offset: 512)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3483)
!3483 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !3461, line: 691, flags: DIFlagFwdDecl)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !3460, file: !3461, line: 692, baseType: !3485, size: 832, offset: 576)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !3461, line: 451, size: 832, elements: !3486)
!3486 = !{!3487, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !3485, file: !3461, line: 453, baseType: !3488, size: 128)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !3461, line: 325, size: 128, elements: !3489)
!3489 = !{!3490, !3491}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3488, file: !3461, line: 326, baseType: !1186, size: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !3488, file: !3461, line: 327, baseType: !1266, size: 32, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !3485, file: !3461, line: 454, baseType: !1890, size: 192, align: 64, offset: 128)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !3485, file: !3461, line: 455, baseType: !1205, size: 128, offset: 320)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !3485, file: !3461, line: 456, baseType: !7, size: 32, offset: 448)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !3485, file: !3461, line: 458, baseType: !1229, size: 64, offset: 512)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3485, file: !3461, line: 459, baseType: !1229, size: 64, offset: 576)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !3485, file: !3461, line: 460, baseType: !1229, size: 64, offset: 640)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !3485, file: !3461, line: 461, baseType: !1229, size: 64, offset: 704)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !3485, file: !3461, line: 463, baseType: !1229, size: 64, offset: 768)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !3485, file: !3461, line: 465, baseType: !3501, offset: 832)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !3461, line: 415, elements: !1322)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3460, file: !3461, line: 693, baseType: !3503, size: 384, offset: 1408)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !3461, line: 489, size: 384, elements: !3504)
!3504 = !{!3505, !3506, !3507, !3508, !3509, !3510, !3511}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !3503, file: !3461, line: 490, baseType: !1205, size: 128)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3503, file: !3461, line: 491, baseType: !1186, size: 64, offset: 128)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !3503, file: !3461, line: 492, baseType: !1186, size: 64, offset: 192)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !3503, file: !3461, line: 493, baseType: !7, size: 32, offset: 256)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !3503, file: !3461, line: 494, baseType: !1183, size: 16, offset: 288)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !3503, file: !3461, line: 495, baseType: !1183, size: 16, offset: 304)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !3503, file: !3461, line: 497, baseType: !3512, size: 64, offset: 320)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !3460, file: !3461, line: 697, baseType: !3514, size: 1792, offset: 1792)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !3461, line: 507, size: 1792, elements: !3515)
!3515 = !{!3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3593, !3594}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3514, file: !3461, line: 508, baseType: !1890, size: 192, align: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !3514, file: !3461, line: 515, baseType: !1229, size: 64, offset: 192)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !3514, file: !3461, line: 516, baseType: !1229, size: 64, offset: 256)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !3514, file: !3461, line: 517, baseType: !1229, size: 64, offset: 320)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !3514, file: !3461, line: 518, baseType: !1229, size: 64, offset: 384)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !3514, file: !3461, line: 519, baseType: !1229, size: 64, offset: 448)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !3514, file: !3461, line: 526, baseType: !1814, size: 64, offset: 512)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3514, file: !3461, line: 527, baseType: !1229, size: 64, offset: 576)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3514, file: !3461, line: 528, baseType: !7, size: 32, offset: 640)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !3514, file: !3461, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !3514, file: !3461, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !3514, file: !3461, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !3514, file: !3461, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !3514, file: !3461, line: 563, baseType: !3530, size: 512, offset: 704)
!3530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !32, line: 118, size: 512, elements: !3531)
!3531 = !{!3532, !3540, !3541, !3546, !3589, !3590, !3591, !3592}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3530, file: !32, line: 119, baseType: !3533, size: 256)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !3534, line: 9, size: 256, elements: !3535)
!3534 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!3535 = !{!3536, !3537}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3533, file: !3534, line: 10, baseType: !1890, size: 192, align: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3533, file: !3534, line: 11, baseType: !3538, size: 64, offset: 192)
!3538 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !3539, line: 29, baseType: !1814)
!3539 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !3530, file: !32, line: 120, baseType: !3538, size: 64, offset: 256)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3530, file: !32, line: 121, baseType: !3542, size: 64, offset: 320)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!31, !3545}
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3530, file: !32, line: 122, baseType: !3547, size: 64, offset: 384)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !32, line: 159, size: 512, align: 512, elements: !3549)
!3549 = !{!3550, !3570, !3571, !3574, !3579, !3580, !3584, !3588}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !3548, file: !32, line: 160, baseType: !3551, size: 64)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !32, line: 214, size: 4608, align: 512, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3552, file: !32, line: 215, baseType: !1903)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3552, file: !32, line: 216, baseType: !7, size: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !3552, file: !32, line: 217, baseType: !7, size: 32, offset: 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !3552, file: !32, line: 218, baseType: !7, size: 32, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !3552, file: !32, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !3552, file: !32, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !3552, file: !32, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !3552, file: !32, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !3552, file: !32, line: 233, baseType: !3538, size: 64, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !3552, file: !32, line: 234, baseType: !3545, size: 64, offset: 192)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !3552, file: !32, line: 235, baseType: !3538, size: 64, offset: 256)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !3552, file: !32, line: 236, baseType: !3545, size: 64, offset: 320)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !3552, file: !32, line: 237, baseType: !3567, size: 4096, offset: 512)
!3567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3548, size: 4096, elements: !3568)
!3568 = !{!3569}
!3569 = !DISubrange(count: 8)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3548, file: !32, line: 161, baseType: !7, size: 32, offset: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !3548, file: !32, line: 162, baseType: !3572, size: 32, offset: 96)
!3572 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !1176, line: 27, baseType: !3573)
!3573 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1382, line: 96, baseType: !260)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3548, file: !32, line: 163, baseType: !3575, size: 32, offset: 128)
!3575 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1460, line: 276, baseType: !3576)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1460, line: 276, size: 32, elements: !3577)
!3577 = !{!3578}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3576, file: !1460, line: 276, baseType: !1464, size: 32)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !3548, file: !32, line: 164, baseType: !3545, size: 64, offset: 192)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3548, file: !32, line: 165, baseType: !3581, size: 128, offset: 256)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !3534, line: 14, size: 128, elements: !3582)
!3582 = !{!3583}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3581, file: !3534, line: 15, baseType: !1882, size: 128)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !3548, file: !32, line: 166, baseType: !3585, size: 64, offset: 384)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!3538}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3548, file: !32, line: 167, baseType: !3538, size: 64, offset: 448)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3530, file: !32, line: 123, baseType: !2109, size: 8, offset: 448)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !3530, file: !32, line: 124, baseType: !2109, size: 8, offset: 456)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !3530, file: !32, line: 125, baseType: !2109, size: 8, offset: 464)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !3530, file: !32, line: 126, baseType: !2109, size: 8, offset: 472)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !3514, file: !3461, line: 572, baseType: !3530, size: 512, offset: 1216)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !3514, file: !3461, line: 580, baseType: !3595, size: 64, offset: 1728)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3460, file: !3461, line: 721, baseType: !7, size: 32, offset: 3584)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !3460, file: !3461, line: 722, baseType: !260, size: 32, offset: 3616)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !3460, file: !3461, line: 723, baseType: !3599, size: 64, offset: 3648)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3601)
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2434, line: 17, baseType: !2436)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !3460, file: !3461, line: 724, baseType: !3601, size: 64, offset: 3712)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !3460, file: !3461, line: 749, baseType: !3604, offset: 3776)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !3461, line: 290, elements: !1322)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !3460, file: !3461, line: 751, baseType: !1205, size: 128, offset: 3776)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !3460, file: !3461, line: 757, baseType: !3226, size: 64, offset: 3904)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !3460, file: !3461, line: 758, baseType: !3226, size: 64, offset: 3968)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !3460, file: !3461, line: 761, baseType: !3609, size: 320, offset: 4032)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !3403, line: 34, size: 320, elements: !3610)
!3610 = !{!3611, !3612}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !3609, file: !3403, line: 35, baseType: !1229, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !3609, file: !3403, line: 36, baseType: !3613, size: 256, offset: 64)
!3613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3233, size: 256, elements: !1198)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !3460, file: !3461, line: 766, baseType: !260, size: 32, offset: 4352)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !3460, file: !3461, line: 767, baseType: !260, size: 32, offset: 4384)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !3460, file: !3461, line: 768, baseType: !260, size: 32, offset: 4416)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !3460, file: !3461, line: 770, baseType: !260, size: 32, offset: 4448)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !3460, file: !3461, line: 772, baseType: !1186, size: 64, offset: 4480)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !3460, file: !3461, line: 775, baseType: !7, size: 32, offset: 4544)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !3460, file: !3461, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !3460, file: !3461, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !3460, file: !3461, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !3460, file: !3461, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !3460, file: !3461, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !3460, file: !3461, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !3460, file: !3461, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !3460, file: !3461, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !3460, file: !3461, line: 831, baseType: !1186, size: 64, offset: 4672)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !3460, file: !3461, line: 833, baseType: !3630, size: 384, offset: 4736)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !92, line: 25, size: 384, elements: !3631)
!3631 = !{!3632, !3637}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3630, file: !92, line: 26, baseType: !3633, size: 64)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!1188, !3636}
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3637 = !DIDerivedType(tag: DW_TAG_member, scope: !3630, file: !92, line: 27, baseType: !3638, size: 320, offset: 64)
!3638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3630, file: !92, line: 27, size: 320, elements: !3639)
!3639 = !{!3640, !3649, !3675}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !3638, file: !92, line: 36, baseType: !3641, size: 320)
!3641 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3638, file: !92, line: 29, size: 320, elements: !3642)
!3642 = !{!3643, !3644, !3645, !3646, !3647, !3648}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !3641, file: !92, line: 30, baseType: !1265, size: 64)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3641, file: !92, line: 31, baseType: !1266, size: 32, offset: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3641, file: !92, line: 32, baseType: !1266, size: 32, offset: 96)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !3641, file: !92, line: 33, baseType: !1266, size: 32, offset: 128)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3641, file: !92, line: 34, baseType: !1229, size: 64, offset: 192)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !3641, file: !92, line: 35, baseType: !1265, size: 64, offset: 256)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !3638, file: !92, line: 46, baseType: !3650, size: 192)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3638, file: !92, line: 38, size: 192, elements: !3651)
!3651 = !{!3652, !3653, !3654, !3674}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !3650, file: !92, line: 39, baseType: !3572, size: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3650, file: !92, line: 40, baseType: !91, size: 32, offset: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, scope: !3650, file: !92, line: 41, baseType: !3655, size: 64, offset: 64)
!3655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3650, file: !92, line: 41, size: 64, elements: !3656)
!3656 = !{!3657, !3665}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !3655, file: !92, line: 42, baseType: !3658, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !3660, line: 7, size: 128, elements: !3661)
!3660 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!3661 = !{!3662, !3664}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3659, file: !3660, line: 8, baseType: !3663, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1382, line: 93, baseType: !1597)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3659, file: !3660, line: 9, baseType: !1597, size: 64, offset: 64)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !3655, file: !92, line: 43, baseType: !3666, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !3668, line: 7, size: 64, elements: !3669)
!3668 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!3669 = !{!3670, !3673}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3667, file: !3668, line: 8, baseType: !3671, size: 32)
!3671 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !3668, line: 5, baseType: !3672)
!3672 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !1230, line: 20, baseType: !3070)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3667, file: !3668, line: 9, baseType: !3672, size: 32, offset: 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3650, file: !92, line: 45, baseType: !1229, size: 64, offset: 128)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3638, file: !92, line: 54, baseType: !3676, size: 256)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3638, file: !92, line: 48, size: 256, elements: !3677)
!3677 = !{!3678, !3681, !3682, !3683, !3684}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !3676, file: !92, line: 49, baseType: !3679, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !92, line: 14, flags: DIFlagFwdDecl)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !3676, file: !92, line: 50, baseType: !260, size: 32, offset: 64)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !3676, file: !92, line: 51, baseType: !260, size: 32, offset: 96)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3676, file: !92, line: 52, baseType: !1186, size: 64, offset: 128)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3676, file: !92, line: 53, baseType: !1186, size: 64, offset: 192)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3460, file: !3461, line: 835, baseType: !3686, size: 32, offset: 5120)
!3686 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !1176, line: 22, baseType: !3687)
!3687 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1382, line: 28, baseType: !260)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !3460, file: !3461, line: 836, baseType: !3686, size: 32, offset: 5152)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !3460, file: !3461, line: 840, baseType: !1186, size: 64, offset: 5184)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !3460, file: !3461, line: 849, baseType: !3459, size: 64, offset: 5248)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3460, file: !3461, line: 852, baseType: !3459, size: 64, offset: 5312)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3460, file: !3461, line: 857, baseType: !1205, size: 128, offset: 5376)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3460, file: !3461, line: 858, baseType: !1205, size: 128, offset: 5504)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !3460, file: !3461, line: 859, baseType: !3459, size: 64, offset: 5632)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !3460, file: !3461, line: 867, baseType: !1205, size: 128, offset: 5696)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !3460, file: !3461, line: 868, baseType: !1205, size: 128, offset: 5824)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !3460, file: !3461, line: 871, baseType: !3698, size: 64, offset: 5952)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !160, line: 59, size: 768, elements: !3700)
!3700 = !{!3701, !3702, !3703, !3704, !3706, !3707, !3708, !3709}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3699, file: !160, line: 61, baseType: !2599, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3699, file: !160, line: 62, baseType: !7, size: 32, offset: 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3699, file: !160, line: 63, baseType: !1308, offset: 64)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !3699, file: !160, line: 65, baseType: !3705, size: 256, offset: 64)
!3705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 256, elements: !1198)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !3699, file: !160, line: 66, baseType: !1702, size: 64, offset: 320)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !3699, file: !160, line: 68, baseType: !2298, size: 128, offset: 384)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3699, file: !160, line: 69, baseType: !1437, size: 128, align: 64, offset: 512)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !3699, file: !160, line: 70, baseType: !3710, size: 128, offset: 640)
!3710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3711, size: 128, elements: !2440)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !160, line: 54, size: 128, elements: !3712)
!3712 = !{!3713, !3714}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !3711, file: !160, line: 55, baseType: !260, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3711, file: !160, line: 56, baseType: !3715, size: 64, offset: 64)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !160, line: 56, flags: DIFlagFwdDecl)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !3460, file: !3461, line: 872, baseType: !3718, size: 512, offset: 6016)
!3718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1706, size: 512, elements: !1198)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !3460, file: !3461, line: 873, baseType: !1205, size: 128, offset: 6528)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !3460, file: !3461, line: 874, baseType: !1205, size: 128, offset: 6656)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !3460, file: !3461, line: 876, baseType: !3722, size: 64, offset: 6784)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !3724, line: 26, size: 192, elements: !3725)
!3724 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!3725 = !{!3726, !3727}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3723, file: !3724, line: 27, baseType: !7, size: 32)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3723, file: !3724, line: 28, baseType: !2509, size: 128, offset: 64)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !3460, file: !3461, line: 879, baseType: !1786, size: 64, offset: 6848)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !3460, file: !3461, line: 882, baseType: !1786, size: 64, offset: 6912)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3460, file: !3461, line: 884, baseType: !1229, size: 64, offset: 6976)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3460, file: !3461, line: 885, baseType: !1229, size: 64, offset: 7040)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3460, file: !3461, line: 890, baseType: !1229, size: 64, offset: 7104)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3460, file: !3461, line: 891, baseType: !3734, size: 128, offset: 7168)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !3461, line: 242, size: 128, elements: !3735)
!3735 = !{!3736, !3737, !3738}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3734, file: !3461, line: 244, baseType: !1229, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3734, file: !3461, line: 245, baseType: !1229, size: 64, offset: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3734, file: !3461, line: 246, baseType: !1903, offset: 128)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3460, file: !3461, line: 900, baseType: !1186, size: 64, offset: 7296)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3460, file: !3461, line: 901, baseType: !1186, size: 64, offset: 7360)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !3460, file: !3461, line: 904, baseType: !1229, size: 64, offset: 7424)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !3460, file: !3461, line: 907, baseType: !1229, size: 64, offset: 7488)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3460, file: !3461, line: 910, baseType: !1186, size: 64, offset: 7552)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3460, file: !3461, line: 911, baseType: !1186, size: 64, offset: 7616)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3460, file: !3461, line: 914, baseType: !3746, size: 640, offset: 7680)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !3747, line: 123, size: 640, elements: !3748)
!3747 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!3748 = !{!3749, !3755, !3756}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !3746, file: !3747, line: 124, baseType: !3750, size: 576)
!3750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3751, size: 576, elements: !1350)
!3751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !3747, line: 108, size: 192, elements: !3752)
!3752 = !{!3753, !3754}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !3751, file: !3747, line: 109, baseType: !1229, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !3751, file: !3747, line: 110, baseType: !3581, size: 128, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !3746, file: !3747, line: 125, baseType: !7, size: 32, offset: 576)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !3746, file: !3747, line: 126, baseType: !7, size: 32, offset: 608)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !3460, file: !3461, line: 917, baseType: !3758, size: 192, offset: 8320)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !3747, line: 134, size: 192, elements: !3759)
!3759 = !{!3760, !3761}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3758, file: !3747, line: 135, baseType: !1437, size: 128, align: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !3758, file: !3747, line: 136, baseType: !7, size: 32, offset: 128)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !3460, file: !3461, line: 923, baseType: !3763, size: 64, offset: 8512)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3765)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !3766, line: 111, size: 1280, elements: !3767)
!3766 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!3767 = !{!3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3785, !3786, !3787, !3788, !3789, !3790, !3897, !3898, !3899, !3900, !3926, !4069, !4079}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3765, file: !3766, line: 112, baseType: !1877, size: 32)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3765, file: !3766, line: 120, baseType: !1499, size: 32, offset: 32)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3765, file: !3766, line: 121, baseType: !1507, size: 32, offset: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !3765, file: !3766, line: 122, baseType: !1499, size: 32, offset: 96)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !3765, file: !3766, line: 123, baseType: !1507, size: 32, offset: 128)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3765, file: !3766, line: 124, baseType: !1499, size: 32, offset: 160)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !3765, file: !3766, line: 125, baseType: !1507, size: 32, offset: 192)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !3765, file: !3766, line: 126, baseType: !1499, size: 32, offset: 224)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !3765, file: !3766, line: 127, baseType: !1507, size: 32, offset: 256)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !3765, file: !3766, line: 128, baseType: !7, size: 32, offset: 288)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !3765, file: !3766, line: 129, baseType: !3779, size: 64, offset: 320)
!3779 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !3780, line: 26, baseType: !3781)
!3780 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !3780, line: 24, size: 64, elements: !3782)
!3782 = !{!3783}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !3781, file: !3780, line: 25, baseType: !3784, size: 64)
!3784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 64, elements: !2503)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !3765, file: !3766, line: 130, baseType: !3779, size: 64, offset: 384)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !3765, file: !3766, line: 131, baseType: !3779, size: 64, offset: 448)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !3765, file: !3766, line: 132, baseType: !3779, size: 64, offset: 512)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !3765, file: !3766, line: 133, baseType: !3779, size: 64, offset: 576)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !3765, file: !3766, line: 135, baseType: !1279, size: 8, offset: 640)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !3765, file: !3766, line: 137, baseType: !3791, size: 64, offset: 704)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !3793, line: 189, size: 1664, elements: !3794)
!3793 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!3794 = !{!3795, !3796, !3799, !3804, !3805, !3808, !3809, !3814, !3815, !3816, !3817, !3819, !3820, !3821, !3822, !3823, !3861, !3882}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3792, file: !3793, line: 190, baseType: !2599, size: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !3792, file: !3793, line: 191, baseType: !3797, size: 32, offset: 32)
!3797 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !3793, line: 28, baseType: !3798)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1176, line: 98, baseType: !3672)
!3799 = !DIDerivedType(tag: DW_TAG_member, scope: !3792, file: !3793, line: 192, baseType: !3800, size: 192, offset: 64)
!3800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3792, file: !3793, line: 192, size: 192, elements: !3801)
!3801 = !{!3802, !3803}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !3800, file: !3793, line: 193, baseType: !1205, size: 128)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !3800, file: !3793, line: 194, baseType: !1890, size: 192, align: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !3792, file: !3793, line: 199, baseType: !1897, size: 256, offset: 256)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3792, file: !3793, line: 200, baseType: !3806, size: 64, offset: 512)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !3793, line: 200, flags: DIFlagFwdDecl)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !3792, file: !3793, line: 201, baseType: !1187, size: 64, offset: 576)
!3809 = !DIDerivedType(tag: DW_TAG_member, scope: !3792, file: !3793, line: 202, baseType: !3810, size: 64, offset: 640)
!3810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3792, file: !3793, line: 202, size: 64, elements: !3811)
!3811 = !{!3812, !3813}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !3810, file: !3793, line: 203, baseType: !1603, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !3810, file: !3793, line: 204, baseType: !1603, size: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !3792, file: !3793, line: 206, baseType: !1603, size: 64, offset: 704)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3792, file: !3793, line: 207, baseType: !1499, size: 32, offset: 768)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3792, file: !3793, line: 208, baseType: !1507, size: 32, offset: 800)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !3792, file: !3793, line: 209, baseType: !3818, size: 32, offset: 832)
!3818 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !3793, line: 31, baseType: !1623)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !3792, file: !3793, line: 210, baseType: !1183, size: 16, offset: 864)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !3792, file: !3793, line: 211, baseType: !1183, size: 16, offset: 880)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3792, file: !3793, line: 215, baseType: !2052, size: 16, offset: 896)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3792, file: !3793, line: 222, baseType: !1186, size: 64, offset: 960)
!3823 = !DIDerivedType(tag: DW_TAG_member, scope: !3792, file: !3793, line: 239, baseType: !3824, size: 320, offset: 1024)
!3824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3792, file: !3793, line: 239, size: 320, elements: !3825)
!3825 = !{!3826, !3853}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !3824, file: !3793, line: 240, baseType: !3827, size: 320)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !3793, line: 108, size: 320, elements: !3828)
!3828 = !{!3829, !3830, !3842, !3845, !3852}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3827, file: !3793, line: 110, baseType: !1186, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_member, scope: !3827, file: !3793, line: 111, baseType: !3831, size: 64, offset: 64)
!3831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3827, file: !3793, line: 111, size: 64, elements: !3832)
!3832 = !{!3833, !3841}
!3833 = !DIDerivedType(tag: DW_TAG_member, scope: !3831, file: !3793, line: 112, baseType: !3834, size: 64)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3831, file: !3793, line: 112, size: 64, elements: !3835)
!3835 = !{!3836, !3837}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !3834, file: !3793, line: 114, baseType: !1989, size: 16)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3834, file: !3793, line: 115, baseType: !3838, size: 48, offset: 16)
!3838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 48, elements: !3839)
!3839 = !{!3840}
!3840 = !DISubrange(count: 6)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3831, file: !3793, line: 121, baseType: !1186, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3827, file: !3793, line: 123, baseType: !3843, size: 64, offset: 128)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !3793, line: 96, flags: DIFlagFwdDecl)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !3827, file: !3793, line: 124, baseType: !3846, size: 64, offset: 192)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !3793, line: 102, size: 192, elements: !3848)
!3848 = !{!3849, !3850, !3851}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3847, file: !3793, line: 103, baseType: !1437, size: 128, align: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3847, file: !3793, line: 104, baseType: !2599, size: 32, offset: 128)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !3847, file: !3793, line: 105, baseType: !1554, size: 8, offset: 160)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3827, file: !3793, line: 125, baseType: !1235, size: 64, offset: 256)
!3853 = !DIDerivedType(tag: DW_TAG_member, scope: !3824, file: !3793, line: 241, baseType: !3854, size: 320)
!3854 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3824, file: !3793, line: 241, size: 320, elements: !3855)
!3855 = !{!3856, !3857, !3858, !3859, !3860}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3854, file: !3793, line: 242, baseType: !1186, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !3854, file: !3793, line: 243, baseType: !1186, size: 64, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3854, file: !3793, line: 244, baseType: !3843, size: 64, offset: 128)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !3854, file: !3793, line: 245, baseType: !3846, size: 64, offset: 192)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3854, file: !3793, line: 246, baseType: !1349, size: 64, offset: 256)
!3861 = !DIDerivedType(tag: DW_TAG_member, scope: !3792, file: !3793, line: 254, baseType: !3862, size: 256, offset: 1344)
!3862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3792, file: !3793, line: 254, size: 256, elements: !3863)
!3863 = !{!3864, !3870}
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !3862, file: !3793, line: 255, baseType: !3865, size: 256)
!3865 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !3793, line: 128, size: 256, elements: !3866)
!3866 = !{!3867, !3868}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !3865, file: !3793, line: 129, baseType: !1187, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3865, file: !3793, line: 130, baseType: !3869, size: 256)
!3869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 256, elements: !1198)
!3870 = !DIDerivedType(tag: DW_TAG_member, scope: !3862, file: !3793, line: 256, baseType: !3871, size: 256)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3862, file: !3793, line: 256, size: 256, elements: !3872)
!3872 = !{!3873, !3874}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !3871, file: !3793, line: 258, baseType: !1205, size: 128)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3871, file: !3793, line: 259, baseType: !3875, size: 128, offset: 128)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !3876, line: 22, size: 128, elements: !3877)
!3876 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!3877 = !{!3878, !3881}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3875, file: !3876, line: 23, baseType: !3879, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !3876, line: 23, flags: DIFlagFwdDecl)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !3875, file: !3876, line: 24, baseType: !1186, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !3792, file: !3793, line: 274, baseType: !3883, size: 64, offset: 1600)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !3793, line: 170, size: 192, elements: !3885)
!3885 = !{!3886, !3895, !3896}
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3884, file: !3793, line: 171, baseType: !3887, size: 64)
!3887 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !3793, line: 165, baseType: !3888)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!260, !3791, !3891, !3893, !3791}
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3844)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3865)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3884, file: !3793, line: 172, baseType: !3791, size: 64, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !3884, file: !3793, line: 173, baseType: !3843, size: 64, offset: 128)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !3765, file: !3766, line: 138, baseType: !3791, size: 64, offset: 768)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !3765, file: !3766, line: 139, baseType: !3791, size: 64, offset: 832)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !3765, file: !3766, line: 140, baseType: !3791, size: 64, offset: 896)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3765, file: !3766, line: 145, baseType: !3901, size: 64, offset: 960)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !3903, line: 13, size: 896, elements: !3904)
!3903 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!3904 = !{!3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3902, file: !3903, line: 14, baseType: !2599, size: 32)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !3902, file: !3903, line: 15, baseType: !1877, size: 32, offset: 32)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !3902, file: !3903, line: 16, baseType: !1877, size: 32, offset: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !3902, file: !3903, line: 21, baseType: !1808, size: 64, offset: 128)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !3902, file: !3903, line: 27, baseType: !1186, size: 64, offset: 192)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !3902, file: !3903, line: 28, baseType: !1186, size: 64, offset: 256)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !3902, file: !3903, line: 29, baseType: !1808, size: 64, offset: 320)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !3902, file: !3903, line: 32, baseType: !1706, size: 128, offset: 384)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3902, file: !3903, line: 33, baseType: !1499, size: 32, offset: 512)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !3902, file: !3903, line: 37, baseType: !1808, size: 64, offset: 576)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !3902, file: !3903, line: 44, baseType: !3916, size: 256, offset: 640)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !3917, line: 15, size: 256, elements: !3918)
!3917 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!3918 = !{!3919, !3920, !3921, !3922, !3923, !3924, !3925}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3916, file: !3917, line: 16, baseType: !1903)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3916, file: !3917, line: 18, baseType: !260, size: 32)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !3916, file: !3917, line: 19, baseType: !260, size: 32, offset: 32)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !3916, file: !3917, line: 20, baseType: !260, size: 32, offset: 64)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !3916, file: !3917, line: 21, baseType: !260, size: 32, offset: 96)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3916, file: !3917, line: 22, baseType: !1186, size: 64, offset: 128)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3916, file: !3917, line: 23, baseType: !1186, size: 64, offset: 192)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3765, file: !3766, line: 146, baseType: !3927, size: 64, offset: 1024)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !3929, line: 56, size: 4160, elements: !3930)
!3929 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3930 = !{!3931, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3968, !3969, !3970, !3971, !3972, !3973, !4054, !4055, !4067}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !3928, file: !3929, line: 57, baseType: !3932, size: 576)
!3932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !3929, line: 23, size: 576, elements: !3933)
!3933 = !{!3934, !3935}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !3932, file: !3929, line: 24, baseType: !1266, size: 32)
!3935 = !DIDerivedType(tag: DW_TAG_member, scope: !3932, file: !3929, line: 25, baseType: !3936, size: 512, offset: 64)
!3936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3932, file: !3929, line: 25, size: 512, elements: !3937)
!3937 = !{!3938, !3945}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !3936, file: !3929, line: 26, baseType: !3939, size: 480)
!3939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3940, size: 480, elements: !3123)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !3929, line: 17, size: 96, elements: !3941)
!3941 = !{!3942, !3943, !3944}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3940, file: !3929, line: 18, baseType: !1266, size: 32)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !3940, file: !3929, line: 19, baseType: !1266, size: 32, offset: 32)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3940, file: !3929, line: 20, baseType: !1266, size: 32, offset: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, scope: !3936, file: !3929, line: 27, baseType: !3946, size: 128)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3929, line: 27, size: 128, elements: !3947)
!3947 = !{!3948, !3950}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !3946, file: !3929, line: 28, baseType: !3949, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !3946, file: !3929, line: 29, baseType: !3949, size: 64, offset: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !3928, file: !3929, line: 58, baseType: !3932, size: 576, offset: 576)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !3928, file: !3929, line: 59, baseType: !3932, size: 576, offset: 1152)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3928, file: !3929, line: 60, baseType: !1877, size: 32, offset: 1728)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3928, file: !3929, line: 61, baseType: !3927, size: 64, offset: 1792)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3928, file: !3929, line: 62, baseType: !260, size: 32, offset: 1856)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3928, file: !3929, line: 63, baseType: !1499, size: 32, offset: 1888)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3928, file: !3929, line: 64, baseType: !1507, size: 32, offset: 1920)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3928, file: !3929, line: 65, baseType: !3959, size: 192, offset: 1984)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !3960, line: 7, size: 192, elements: !3961)
!3960 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!3961 = !{!3962, !3963, !3967}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !3959, file: !3960, line: 8, baseType: !1808, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3959, file: !3960, line: 9, baseType: !3964, size: 64, offset: 64)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3966)
!3966 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !3960, line: 5, flags: DIFlagFwdDecl)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !3959, file: !3960, line: 10, baseType: !7, size: 32, offset: 128)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3928, file: !3929, line: 66, baseType: !1186, size: 64, offset: 2176)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !3928, file: !3929, line: 74, baseType: !1205, size: 128, offset: 2240)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !3928, file: !3929, line: 75, baseType: !3791, size: 64, offset: 2368)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !3928, file: !3929, line: 76, baseType: !1897, size: 256, offset: 2432)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3928, file: !3929, line: 83, baseType: !2162, size: 256, offset: 2688)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !3928, file: !3929, line: 85, baseType: !3974, size: 768, offset: 2944)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !3975, line: 156, size: 768, elements: !3976)
!3975 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!3976 = !{!3977, !3982}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !3974, file: !3975, line: 157, baseType: !3978, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!260, !3981}
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3974, file: !3975, line: 158, baseType: !3983, size: 704, offset: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !3975, line: 150, size: 704, elements: !3984)
!3984 = !{!3985, !4053}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3983, file: !3975, line: 152, baseType: !3986, size: 640)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !3975, line: 131, size: 640, elements: !3987)
!3987 = !{!3988, !4021, !4022, !4023, !4043, !4044, !4046, !4052}
!3988 = !DIDerivedType(tag: DW_TAG_member, scope: !3986, file: !3975, line: 132, baseType: !3989, size: 192)
!3989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3986, file: !3975, line: 132, size: 192, elements: !3990)
!3990 = !{!3991, !4020}
!3991 = !DIDerivedType(tag: DW_TAG_member, scope: !3989, file: !3975, line: 133, baseType: !3992, size: 192)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3989, file: !3975, line: 133, size: 192, elements: !3993)
!3993 = !{!3994, !4017, !4018, !4019}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !3992, file: !3975, line: 134, baseType: !3995, size: 64)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !3975, line: 112, size: 512, elements: !3997)
!3997 = !{!3998, !3999, !4000, !4001, !4002, !4003, !4009, !4015, !4016}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !3996, file: !3975, line: 113, baseType: !1235, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3996, file: !3975, line: 114, baseType: !1187, size: 64, offset: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !3996, file: !3975, line: 115, baseType: !260, size: 32, offset: 128)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3996, file: !3975, line: 116, baseType: !1389, size: 16, offset: 160)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3996, file: !3975, line: 117, baseType: !3995, size: 64, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !3996, file: !3975, line: 118, baseType: !4004, size: 64, offset: 256)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !3975, line: 47, baseType: !4006)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!260, !3995, !260, !1187, !4008, !1826}
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3996, file: !3975, line: 119, baseType: !4010, size: 64, offset: 320)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !3975, line: 94, size: 192, elements: !4012)
!4012 = !{!4013, !4014}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4011, file: !3975, line: 95, baseType: !1877, size: 32)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4011, file: !3975, line: 96, baseType: !2298, size: 128, offset: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !3996, file: !3975, line: 120, baseType: !1187, size: 64, offset: 384)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !3996, file: !3975, line: 121, baseType: !1187, size: 64, offset: 448)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3992, file: !3975, line: 135, baseType: !260, size: 32, offset: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3992, file: !3975, line: 136, baseType: !260, size: 32, offset: 96)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !3992, file: !3975, line: 137, baseType: !260, size: 32, offset: 128)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3989, file: !3975, line: 139, baseType: !1437, size: 128, align: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !3986, file: !3975, line: 141, baseType: !3722, size: 64, offset: 192)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !3986, file: !3975, line: 142, baseType: !3995, size: 64, offset: 256)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3986, file: !3975, line: 143, baseType: !4024, size: 64, offset: 320)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !3975, line: 161, size: 960, elements: !4026)
!4026 = !{!4027, !4028, !4032, !4039}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !4025, file: !3975, line: 162, baseType: !3974, size: 768)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !4025, file: !3975, line: 163, baseType: !4029, size: 64, offset: 768)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!3981, !4024}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !4025, file: !3975, line: 164, baseType: !4033, size: 64, offset: 832)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{null, !4036, !3995, !4037, !4038}
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !4025, file: !3975, line: 167, baseType: !4040, size: 64, offset: 896)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!260, !4036, !3995}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !3986, file: !3975, line: 144, baseType: !3981, size: 64, offset: 384)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3986, file: !3975, line: 145, baseType: !4045, size: 64, offset: 448)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3986, file: !3975, line: 146, baseType: !4047, size: 64, offset: 512)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !3975, line: 124, size: 256, elements: !4049)
!4049 = !{!4050, !4051}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4048, file: !3975, line: 125, baseType: !1890, size: 192, align: 64)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4048, file: !3975, line: 126, baseType: !4036, size: 64, offset: 192)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !3986, file: !3975, line: 147, baseType: !1702, size: 64, offset: 576)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3983, file: !3975, line: 153, baseType: !1886, size: 64, offset: 640)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3928, file: !3929, line: 86, baseType: !4036, size: 64, offset: 3712)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3928, file: !3929, line: 88, baseType: !4056, size: 64, offset: 3776)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !3929, line: 92, size: 576, elements: !4058)
!4058 = !{!4059, !4060, !4061, !4062, !4063}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4057, file: !3929, line: 93, baseType: !1706, size: 128)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4057, file: !3929, line: 94, baseType: !3927, size: 64, offset: 128)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4057, file: !3929, line: 95, baseType: !1499, size: 32, offset: 192)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4057, file: !3929, line: 96, baseType: !260, size: 32, offset: 224)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !4057, file: !3929, line: 97, baseType: !4064, size: 320, offset: 256)
!4064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 320, elements: !4065)
!4065 = !{!4066}
!4066 = !DISubrange(count: 10)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !3928, file: !3929, line: 89, baseType: !4068, size: 320, offset: 3840)
!4068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 320, elements: !4065)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !3765, file: !3766, line: 147, baseType: !4070, size: 64, offset: 1088)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !3766, line: 25, size: 64, elements: !4072)
!4072 = !{!4073, !4074, !4075}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !4071, file: !3766, line: 26, baseType: !1877, size: 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !4071, file: !3766, line: 27, baseType: !260, size: 32, offset: 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4071, file: !3766, line: 28, baseType: !4076, offset: 64)
!4076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1507, elements: !4077)
!4077 = !{!4078}
!4078 = !DISubrange(count: 0)
!4079 = !DIDerivedType(tag: DW_TAG_member, scope: !3765, file: !3766, line: 149, baseType: !4080, size: 128, offset: 1152)
!4080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3765, file: !3766, line: 149, size: 128, elements: !4081)
!4081 = !{!4082, !4083}
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !4080, file: !3766, line: 150, baseType: !260, size: 32)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4080, file: !3766, line: 151, baseType: !1437, size: 128, align: 64)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !3460, file: !3461, line: 926, baseType: !3763, size: 64, offset: 8576)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !3460, file: !3461, line: 929, baseType: !3763, size: 64, offset: 8640)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !3460, file: !3461, line: 933, baseType: !3791, size: 64, offset: 8704)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !3460, file: !3461, line: 943, baseType: !4088, size: 128, offset: 8768)
!4088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 128, elements: !2999)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !3460, file: !3461, line: 945, baseType: !4090, size: 64, offset: 8896)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !3461, line: 49, flags: DIFlagFwdDecl)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !3460, file: !3461, line: 956, baseType: !4093, size: 64, offset: 8960)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !3461, line: 45, flags: DIFlagFwdDecl)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3460, file: !3461, line: 959, baseType: !4096, size: 64, offset: 9024)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !3461, line: 959, flags: DIFlagFwdDecl)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !3460, file: !3461, line: 962, baseType: !4099, size: 64, offset: 9088)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !3461, line: 66, flags: DIFlagFwdDecl)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !3460, file: !3461, line: 966, baseType: !4102, size: 64, offset: 9152)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !4104, line: 31, size: 576, elements: !4105)
!4104 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!4105 = !{!4106, !4107, !4110, !4113, !4116, !4117, !4120, !4123, !4124}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4103, file: !4104, line: 32, baseType: !1877, size: 32)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !4103, file: !4104, line: 33, baseType: !4108, size: 64, offset: 64)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !4104, line: 9, flags: DIFlagFwdDecl)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !4103, file: !4104, line: 34, baseType: !4111, size: 64, offset: 128)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !4104, line: 10, flags: DIFlagFwdDecl)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !4103, file: !4104, line: 35, baseType: !4114, size: 64, offset: 192)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !4104, line: 8, flags: DIFlagFwdDecl)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !4103, file: !4104, line: 36, baseType: !3715, size: 64, offset: 256)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !4103, file: !4104, line: 37, baseType: !4118, size: 64, offset: 320)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3793, line: 34, flags: DIFlagFwdDecl)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !4103, file: !4104, line: 38, baseType: !4121, size: 64, offset: 384)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !4104, line: 38, flags: DIFlagFwdDecl)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !4103, file: !4104, line: 39, baseType: !4121, size: 64, offset: 448)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !4103, file: !4104, line: 40, baseType: !4125, size: 64, offset: 512)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !4127, line: 856, size: 448, elements: !4128)
!4127 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!4128 = !{!4129, !4130, !4131, !4132, !4133}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4126, file: !4127, line: 857, baseType: !2599, size: 32)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4126, file: !4127, line: 858, baseType: !3959, size: 192, offset: 64)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !4126, file: !4127, line: 859, baseType: !3927, size: 64, offset: 256)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !4126, file: !4127, line: 860, baseType: !4056, size: 64, offset: 320)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !4126, file: !4127, line: 861, baseType: !4134, size: 64, offset: 384)
!4134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!4135 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !4136, line: 16, flags: DIFlagFwdDecl)
!4136 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3460, file: !3461, line: 969, baseType: !4138, size: 64, offset: 9216)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 64)
!4139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4140, line: 82, size: 7296, elements: !4141)
!4140 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4141 = !{!4142, !4143, !4144, !4145, !4146, !4147, !4148, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4177, !4186, !4187, !4189, !4190, !4191, !4194, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4224, !4225, !4232, !4233, !4234, !4235, !4236, !4237}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4139, file: !4140, line: 83, baseType: !2599, size: 32)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4139, file: !4140, line: 84, baseType: !1877, size: 32, offset: 32)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4139, file: !4140, line: 85, baseType: !260, size: 32, offset: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4139, file: !4140, line: 86, baseType: !1205, size: 128, offset: 128)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4139, file: !4140, line: 88, baseType: !2298, size: 128, offset: 256)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4139, file: !4140, line: 91, baseType: !3459, size: 64, offset: 384)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4139, file: !4140, line: 94, baseType: !4149, size: 192, offset: 448)
!4149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4150, line: 30, size: 192, elements: !4151)
!4150 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4151 = !{!4152, !4153}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4149, file: !4150, line: 31, baseType: !1205, size: 128)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4149, file: !4150, line: 32, baseType: !4154, size: 64, offset: 128)
!4154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4155, line: 25, baseType: !4156)
!4155 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4155, line: 23, size: 64, elements: !4157)
!4157 = !{!4158}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4156, file: !4155, line: 24, baseType: !2439, size: 64)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4139, file: !4140, line: 97, baseType: !1702, size: 64, offset: 640)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4139, file: !4140, line: 100, baseType: !260, size: 32, offset: 704)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4139, file: !4140, line: 106, baseType: !260, size: 32, offset: 736)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4139, file: !4140, line: 107, baseType: !3459, size: 64, offset: 768)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4139, file: !4140, line: 110, baseType: !260, size: 32, offset: 832)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4139, file: !4140, line: 111, baseType: !7, size: 32, offset: 864)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4139, file: !4140, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4139, file: !4140, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4139, file: !4140, line: 128, baseType: !260, size: 32, offset: 928)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4139, file: !4140, line: 129, baseType: !1205, size: 128, offset: 960)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4139, file: !4140, line: 132, baseType: !3530, size: 512, offset: 1088)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4139, file: !4140, line: 133, baseType: !3538, size: 64, offset: 1600)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4139, file: !4140, line: 140, baseType: !4172, size: 256, offset: 1664)
!4172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4173, size: 256, elements: !2503)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4140, line: 38, size: 128, elements: !4174)
!4174 = !{!4175, !4176}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4173, file: !4140, line: 39, baseType: !1229, size: 64)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4173, file: !4140, line: 40, baseType: !1229, size: 64, offset: 64)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4139, file: !4140, line: 146, baseType: !4178, size: 192, offset: 1920)
!4178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4140, line: 66, size: 192, elements: !4179)
!4179 = !{!4180}
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4178, file: !4140, line: 67, baseType: !4181, size: 192)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4140, line: 47, size: 192, elements: !4182)
!4182 = !{!4183, !4184, !4185}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4181, file: !4140, line: 48, baseType: !1810, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4181, file: !4140, line: 49, baseType: !1810, size: 64, offset: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4181, file: !4140, line: 50, baseType: !1810, size: 64, offset: 128)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4139, file: !4140, line: 150, baseType: !3746, size: 640, offset: 2112)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4139, file: !4140, line: 153, baseType: !4188, size: 256, offset: 2752)
!4188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3698, size: 256, elements: !1198)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4139, file: !4140, line: 159, baseType: !3698, size: 64, offset: 3008)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4139, file: !4140, line: 162, baseType: !260, size: 32, offset: 3072)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4139, file: !4140, line: 164, baseType: !4192, size: 64, offset: 3136)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4140, line: 164, flags: DIFlagFwdDecl)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4139, file: !4140, line: 175, baseType: !4195, size: 32, offset: 3200)
!4195 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1460, line: 805, baseType: !4196)
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 798, size: 32, elements: !4197)
!4197 = !{!4198, !4199}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !4196, file: !1460, line: 803, baseType: !1459, size: 32)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4196, file: !1460, line: 804, baseType: !1308, offset: 32)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4139, file: !4140, line: 176, baseType: !1229, size: 64, offset: 3264)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4139, file: !4140, line: 176, baseType: !1229, size: 64, offset: 3328)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4139, file: !4140, line: 176, baseType: !1229, size: 64, offset: 3392)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4139, file: !4140, line: 176, baseType: !1229, size: 64, offset: 3456)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4139, file: !4140, line: 177, baseType: !1229, size: 64, offset: 3520)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4139, file: !4140, line: 178, baseType: !1229, size: 64, offset: 3584)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4139, file: !4140, line: 179, baseType: !3734, size: 128, offset: 3648)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4139, file: !4140, line: 180, baseType: !1186, size: 64, offset: 3776)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4139, file: !4140, line: 180, baseType: !1186, size: 64, offset: 3840)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4139, file: !4140, line: 180, baseType: !1186, size: 64, offset: 3904)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4139, file: !4140, line: 180, baseType: !1186, size: 64, offset: 3968)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4139, file: !4140, line: 181, baseType: !1186, size: 64, offset: 4032)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4139, file: !4140, line: 181, baseType: !1186, size: 64, offset: 4096)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4139, file: !4140, line: 181, baseType: !1186, size: 64, offset: 4160)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4139, file: !4140, line: 181, baseType: !1186, size: 64, offset: 4224)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4139, file: !4140, line: 182, baseType: !1186, size: 64, offset: 4288)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4139, file: !4140, line: 182, baseType: !1186, size: 64, offset: 4352)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4139, file: !4140, line: 182, baseType: !1186, size: 64, offset: 4416)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4139, file: !4140, line: 182, baseType: !1186, size: 64, offset: 4480)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4139, file: !4140, line: 183, baseType: !1186, size: 64, offset: 4544)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4139, file: !4140, line: 183, baseType: !1186, size: 64, offset: 4608)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4139, file: !4140, line: 184, baseType: !4222, offset: 4672)
!4222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4223, line: 12, elements: !1322)
!4223 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4139, file: !4140, line: 192, baseType: !1232, size: 64, offset: 4672)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4139, file: !4140, line: 203, baseType: !4226, size: 2048, offset: 4736)
!4226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4227, size: 2048, elements: !2999)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4228, line: 43, size: 128, elements: !4229)
!4228 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4229 = !{!4230, !4231}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4227, file: !4228, line: 44, baseType: !1396, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4227, file: !4228, line: 45, baseType: !1396, size: 64, offset: 64)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4139, file: !4140, line: 220, baseType: !1554, size: 8, offset: 6784)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4139, file: !4140, line: 221, baseType: !2052, size: 16, offset: 6800)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4139, file: !4140, line: 222, baseType: !2052, size: 16, offset: 6816)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4139, file: !4140, line: 224, baseType: !3226, size: 64, offset: 6848)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4139, file: !4140, line: 227, baseType: !1804, size: 192, offset: 6912)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4139, file: !4140, line: 233, baseType: !1804, size: 192, offset: 7104)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !3460, file: !3461, line: 970, baseType: !4239, size: 64, offset: 9280)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4140, line: 20, size: 16576, elements: !4241)
!4241 = !{!4242, !4243, !4244, !4245}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4240, file: !4140, line: 21, baseType: !1308)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4240, file: !4140, line: 22, baseType: !2599, size: 32)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4240, file: !4140, line: 23, baseType: !2298, size: 128, offset: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4240, file: !4140, line: 24, baseType: !4246, size: 16384, offset: 192)
!4246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4247, size: 16384, elements: !1354)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4150, line: 49, size: 256, elements: !4248)
!4248 = !{!4249}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4247, file: !4150, line: 50, baseType: !4250, size: 256)
!4250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4150, line: 35, size: 256, elements: !4251)
!4251 = !{!4252, !4259, !4260, !4266}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4250, file: !4150, line: 37, baseType: !4253, size: 64)
!4253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4254, line: 19, baseType: !4255)
!4254 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4254, line: 18, baseType: !4257)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{null, !260}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4250, file: !4150, line: 38, baseType: !1186, size: 64, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4250, file: !4150, line: 44, baseType: !4261, size: 64, offset: 128)
!4261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4254, line: 22, baseType: !4262)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4254, line: 21, baseType: !4264)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{null}
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4250, file: !4150, line: 46, baseType: !4154, size: 64, offset: 192)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !3460, file: !3461, line: 971, baseType: !4154, size: 64, offset: 9344)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !3460, file: !3461, line: 972, baseType: !4154, size: 64, offset: 9408)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !3460, file: !3461, line: 974, baseType: !4154, size: 64, offset: 9472)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !3460, file: !3461, line: 975, baseType: !4149, size: 192, offset: 9536)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !3460, file: !3461, line: 976, baseType: !1186, size: 64, offset: 9728)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !3460, file: !3461, line: 977, baseType: !1394, size: 64, offset: 9792)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !3460, file: !3461, line: 978, baseType: !7, size: 32, offset: 9856)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !3460, file: !3461, line: 980, baseType: !1440, size: 64, offset: 9920)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !3460, file: !3461, line: 989, baseType: !4276, size: 128, offset: 9984)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4277, line: 35, size: 128, elements: !4278)
!4277 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4278 = !{!4279, !4280, !4281}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4276, file: !4277, line: 36, baseType: !260, size: 32)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4276, file: !4277, line: 37, baseType: !1877, size: 32, offset: 32)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4276, file: !4277, line: 38, baseType: !4282, size: 64, offset: 64)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4277, line: 23, flags: DIFlagFwdDecl)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !3460, file: !3461, line: 992, baseType: !1229, size: 64, offset: 10112)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !3460, file: !3461, line: 993, baseType: !1229, size: 64, offset: 10176)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !3460, file: !3461, line: 996, baseType: !1308, offset: 10240)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !3460, file: !3461, line: 999, baseType: !1903, offset: 10240)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !3460, file: !3461, line: 1001, baseType: !4289, size: 64, offset: 10240)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !3461, line: 636, size: 64, elements: !4290)
!4290 = !{!4291}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4289, file: !3461, line: 637, baseType: !4292, size: 64)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4289, size: 64)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !3460, file: !3461, line: 1005, baseType: !1882, size: 128, offset: 10304)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !3460, file: !3461, line: 1007, baseType: !3459, size: 64, offset: 10432)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !3460, file: !3461, line: 1009, baseType: !4296, size: 64, offset: 10496)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !3461, line: 1009, flags: DIFlagFwdDecl)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !3460, file: !3461, line: 1043, baseType: !1187, size: 64, offset: 10560)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !3460, file: !3461, line: 1046, baseType: !4300, size: 64, offset: 10624)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !3460, file: !3461, line: 1050, baseType: !4302, size: 64, offset: 10688)
!4302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4303, size: 64)
!4303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !98, line: 1236, size: 320, elements: !4304)
!4304 = !{!4305, !4306, !4307, !4308, !4309}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !4303, file: !98, line: 1237, baseType: !1205, size: 128)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4303, file: !98, line: 1238, baseType: !1205, size: 128, offset: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !4303, file: !98, line: 1239, baseType: !1183, size: 16, offset: 256)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !4303, file: !98, line: 1240, baseType: !1554, size: 8, offset: 272)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !4303, file: !98, line: 1241, baseType: !1554, size: 8, offset: 280)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !3460, file: !3461, line: 1054, baseType: !4311, size: 64, offset: 10752)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2048, line: 131, size: 64, elements: !4313)
!4313 = !{!4314}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !4312, file: !2048, line: 132, baseType: !1186, size: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3460, file: !3461, line: 1056, baseType: !2871, size: 64, offset: 10816)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !3460, file: !3461, line: 1058, baseType: !2553, size: 64, offset: 10880)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !3460, file: !3461, line: 1061, baseType: !4318, size: 64, offset: 10944)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !3461, line: 43, flags: DIFlagFwdDecl)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !3460, file: !3461, line: 1064, baseType: !1186, size: 64, offset: 11008)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !3460, file: !3461, line: 1065, baseType: !4322, size: 64, offset: 11072)
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4150, line: 14, baseType: !4324)
!4324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4150, line: 12, size: 384, elements: !4325)
!4325 = !{!4326}
!4326 = !DIDerivedType(tag: DW_TAG_member, scope: !4324, file: !4150, line: 13, baseType: !4327, size: 384)
!4327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4324, file: !4150, line: 13, size: 384, elements: !4328)
!4328 = !{!4329, !4330, !4331, !4332}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4327, file: !4150, line: 13, baseType: !260, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4327, file: !4150, line: 13, baseType: !260, size: 32, offset: 32)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4327, file: !4150, line: 13, baseType: !260, size: 32, offset: 64)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4327, file: !4150, line: 13, baseType: !4333, size: 256, offset: 128)
!4333 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !4334, line: 32, size: 256, elements: !4335)
!4334 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!4335 = !{!4336, !4341, !4354, !4360, !4369, !4389, !4394}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4333, file: !4334, line: 37, baseType: !4337, size: 64)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4333, file: !4334, line: 34, size: 64, elements: !4338)
!4338 = !{!4339, !4340}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4337, file: !4334, line: 35, baseType: !3687, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4337, file: !4334, line: 36, baseType: !1505, size: 32, offset: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4333, file: !4334, line: 45, baseType: !4342, size: 192)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4333, file: !4334, line: 40, size: 192, elements: !4343)
!4343 = !{!4344, !4346, !4347, !4353}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !4342, file: !4334, line: 41, baseType: !4345, size: 32)
!4345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1382, line: 95, baseType: !260)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !4342, file: !4334, line: 42, baseType: !260, size: 32, offset: 32)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4342, file: !4334, line: 43, baseType: !4348, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !4334, line: 11, baseType: !4349)
!4349 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4334, line: 8, size: 64, elements: !4350)
!4350 = !{!4351, !4352}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4349, file: !4334, line: 9, baseType: !260, size: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4349, file: !4334, line: 10, baseType: !1187, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !4342, file: !4334, line: 44, baseType: !260, size: 32, offset: 128)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4333, file: !4334, line: 52, baseType: !4355, size: 128)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4333, file: !4334, line: 48, size: 128, elements: !4356)
!4356 = !{!4357, !4358, !4359}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4355, file: !4334, line: 49, baseType: !3687, size: 32)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4355, file: !4334, line: 50, baseType: !1505, size: 32, offset: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4355, file: !4334, line: 51, baseType: !4348, size: 64, offset: 64)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4333, file: !4334, line: 61, baseType: !4361, size: 256)
!4361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4333, file: !4334, line: 55, size: 256, elements: !4362)
!4362 = !{!4363, !4364, !4365, !4366, !4368}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4361, file: !4334, line: 56, baseType: !3687, size: 32)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4361, file: !4334, line: 57, baseType: !1505, size: 32, offset: 32)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !4361, file: !4334, line: 58, baseType: !260, size: 32, offset: 64)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !4361, file: !4334, line: 59, baseType: !4367, size: 64, offset: 128)
!4367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1382, line: 94, baseType: !1383)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !4361, file: !4334, line: 60, baseType: !4367, size: 64, offset: 192)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4333, file: !4334, line: 95, baseType: !4370, size: 256)
!4370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4333, file: !4334, line: 64, size: 256, elements: !4371)
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !4370, file: !4334, line: 65, baseType: !1187, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, scope: !4370, file: !4334, line: 77, baseType: !4374, size: 192, offset: 64)
!4374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4370, file: !4334, line: 77, size: 192, elements: !4375)
!4375 = !{!4376, !4377, !4384}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4374, file: !4334, line: 82, baseType: !2052, size: 16)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4374, file: !4334, line: 88, baseType: !4378, size: 192)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4374, file: !4334, line: 84, size: 192, elements: !4379)
!4379 = !{!4380, !4382, !4383}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4378, file: !4334, line: 85, baseType: !4381, size: 64)
!4381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 64, elements: !3568)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4378, file: !4334, line: 86, baseType: !1187, size: 64, offset: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4378, file: !4334, line: 87, baseType: !1187, size: 64, offset: 128)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4374, file: !4334, line: 93, baseType: !4385, size: 96)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4374, file: !4334, line: 90, size: 96, elements: !4386)
!4386 = !{!4387, !4388}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4385, file: !4334, line: 91, baseType: !4381, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4385, file: !4334, line: 92, baseType: !1179, size: 32, offset: 64)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4333, file: !4334, line: 101, baseType: !4390, size: 128)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4333, file: !4334, line: 98, size: 128, elements: !4391)
!4391 = !{!4392, !4393}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4390, file: !4334, line: 99, baseType: !1188, size: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4390, file: !4334, line: 100, baseType: !260, size: 32, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4333, file: !4334, line: 108, baseType: !4395, size: 128)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4333, file: !4334, line: 104, size: 128, elements: !4396)
!4396 = !{!4397, !4398, !4399}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4395, file: !4334, line: 105, baseType: !1187, size: 64)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4395, file: !4334, line: 106, baseType: !260, size: 32, offset: 64)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4395, file: !4334, line: 107, baseType: !7, size: 32, offset: 96)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3460, file: !3461, line: 1067, baseType: !4222, offset: 11136)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !3460, file: !3461, line: 1099, baseType: !4402, size: 64, offset: 11136)
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 64)
!4403 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !3461, line: 56, flags: DIFlagFwdDecl)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !3460, file: !3461, line: 1103, baseType: !1205, size: 128, offset: 11200)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !3460, file: !3461, line: 1104, baseType: !4406, size: 64, offset: 11328)
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4407, size: 64)
!4407 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !3461, line: 46, flags: DIFlagFwdDecl)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !3460, file: !3461, line: 1105, baseType: !1804, size: 192, offset: 11392)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !3460, file: !3461, line: 1106, baseType: !7, size: 32, offset: 11584)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !3460, file: !3461, line: 1109, baseType: !4411, size: 128, offset: 11648)
!4411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4412, size: 128, elements: !2503)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !3461, line: 51, flags: DIFlagFwdDecl)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !3460, file: !3461, line: 1110, baseType: !1804, size: 192, offset: 11776)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !3460, file: !3461, line: 1111, baseType: !1205, size: 128, offset: 11968)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !3460, file: !3461, line: 1173, baseType: !4417, size: 64, offset: 12096)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4419, line: 62, size: 256, align: 256, elements: !4420)
!4419 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4420 = !{!4421, !4422, !4423, !4428}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4418, file: !4419, line: 75, baseType: !1179, size: 32)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4418, file: !4419, line: 90, baseType: !1179, size: 32, offset: 32)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4418, file: !4419, line: 124, baseType: !4424, size: 64, offset: 64)
!4424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4418, file: !4419, line: 109, size: 64, elements: !4425)
!4425 = !{!4426, !4427}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4424, file: !4419, line: 110, baseType: !1231, size: 64)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4424, file: !4419, line: 112, baseType: !1231, size: 64)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4418, file: !4419, line: 144, baseType: !1179, size: 32, offset: 128)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !3460, file: !3461, line: 1174, baseType: !1266, size: 32, offset: 12160)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !3460, file: !3461, line: 1179, baseType: !1186, size: 64, offset: 12224)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !3460, file: !3461, line: 1182, baseType: !4432, size: 128, offset: 12288)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !3403, line: 76, size: 128, elements: !4433)
!4433 = !{!4434, !4439, !4440}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4432, file: !3403, line: 85, baseType: !4435, size: 64)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4436, line: 7, size: 64, elements: !4437)
!4436 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4437 = !{!4438}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4435, file: !4436, line: 12, baseType: !2436, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4432, file: !3403, line: 88, baseType: !1554, size: 8, offset: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4432, file: !3403, line: 95, baseType: !1554, size: 8, offset: 72)
!4441 = !DIDerivedType(tag: DW_TAG_member, scope: !3460, file: !3461, line: 1184, baseType: !4442, size: 128, offset: 12416)
!4442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3460, file: !3461, line: 1184, size: 128, elements: !4443)
!4443 = !{!4444, !4445}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4442, file: !3461, line: 1185, baseType: !2599, size: 32)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4442, file: !3461, line: 1186, baseType: !1437, size: 128, align: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !3460, file: !3461, line: 1190, baseType: !4447, size: 64, offset: 12544)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !3461, line: 53, flags: DIFlagFwdDecl)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !3460, file: !3461, line: 1192, baseType: !4450, size: 128, offset: 12608)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !3403, line: 64, size: 128, elements: !4451)
!4451 = !{!4452, !4453, !4454}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4450, file: !3403, line: 65, baseType: !1851, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4450, file: !3403, line: 67, baseType: !1179, size: 32, offset: 64)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4450, file: !3403, line: 68, baseType: !1179, size: 32, offset: 96)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !3460, file: !3461, line: 1206, baseType: !260, size: 32, offset: 12736)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !3460, file: !3461, line: 1207, baseType: !260, size: 32, offset: 12768)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !3460, file: !3461, line: 1209, baseType: !1186, size: 64, offset: 12800)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !3460, file: !3461, line: 1219, baseType: !1229, size: 64, offset: 12864)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !3460, file: !3461, line: 1220, baseType: !1229, size: 64, offset: 12928)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !3460, file: !3461, line: 1317, baseType: !260, size: 32, offset: 12992)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !3460, file: !3461, line: 1319, baseType: !3459, size: 64, offset: 13056)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !3460, file: !3461, line: 1322, baseType: !4463, size: 64, offset: 13120)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4465, line: 56, size: 512, elements: !4466)
!4465 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4466 = !{!4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4464, file: !4465, line: 57, baseType: !4463, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4464, file: !4465, line: 58, baseType: !1187, size: 64, offset: 64)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4464, file: !4465, line: 59, baseType: !1186, size: 64, offset: 128)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4464, file: !4465, line: 60, baseType: !1186, size: 64, offset: 192)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4464, file: !4465, line: 61, baseType: !1950, size: 64, offset: 256)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4464, file: !4465, line: 62, baseType: !7, size: 32, offset: 320)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4464, file: !4465, line: 63, baseType: !1228, size: 64, offset: 384)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4464, file: !4465, line: 64, baseType: !4475, size: 64, offset: 448)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !3460, file: !3461, line: 1326, baseType: !2599, size: 32, offset: 13184)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !3460, file: !3461, line: 1342, baseType: !1187, size: 64, offset: 13248)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !3460, file: !3461, line: 1343, baseType: !1231, size: 64, offset: 13312)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !3460, file: !3461, line: 1344, baseType: !1229, size: 64, offset: 13376)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !3460, file: !3461, line: 1345, baseType: !1231, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !3460, file: !3461, line: 1346, baseType: !1231, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !3460, file: !3461, line: 1347, baseType: !1231, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !3460, file: !3461, line: 1348, baseType: !1437, size: 128, align: 64, offset: 13504)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !3460, file: !3461, line: 1358, baseType: !4486, size: 34816, offset: 13824)
!4486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4487, line: 485, size: 34816, elements: !4488)
!4487 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4488 = !{!4489, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4518, !4519, !4520, !4521, !4522, !4523, !4526, !4527, !4528}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4486, file: !4487, line: 487, baseType: !4490, size: 192)
!4490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4491, size: 192, elements: !1350)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4492, line: 16, size: 64, elements: !4493)
!4492 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4493 = !{!4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4491, file: !4492, line: 17, baseType: !1989, size: 16)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4491, file: !4492, line: 18, baseType: !1989, size: 16, offset: 16)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4491, file: !4492, line: 19, baseType: !1989, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4491, file: !4492, line: 19, baseType: !1989, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4491, file: !4492, line: 19, baseType: !1989, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4491, file: !4492, line: 19, baseType: !1989, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4491, file: !4492, line: 19, baseType: !1989, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4491, file: !4492, line: 20, baseType: !1989, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4491, file: !4492, line: 20, baseType: !1989, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4491, file: !4492, line: 20, baseType: !1989, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4491, file: !4492, line: 20, baseType: !1989, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4491, file: !4492, line: 20, baseType: !1989, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4491, file: !4492, line: 20, baseType: !1989, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4486, file: !4487, line: 491, baseType: !1186, size: 64, offset: 192)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4486, file: !4487, line: 495, baseType: !1183, size: 16, offset: 256)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4486, file: !4487, line: 496, baseType: !1183, size: 16, offset: 272)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4486, file: !4487, line: 497, baseType: !1183, size: 16, offset: 288)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4486, file: !4487, line: 498, baseType: !1183, size: 16, offset: 304)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4486, file: !4487, line: 502, baseType: !1186, size: 64, offset: 320)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4486, file: !4487, line: 503, baseType: !1186, size: 64, offset: 384)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4486, file: !4487, line: 514, baseType: !4515, size: 256, offset: 448)
!4515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4516, size: 256, elements: !1198)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4487, line: 483, flags: DIFlagFwdDecl)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4486, file: !4487, line: 516, baseType: !1186, size: 64, offset: 704)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4486, file: !4487, line: 518, baseType: !1186, size: 64, offset: 768)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4486, file: !4487, line: 520, baseType: !1186, size: 64, offset: 832)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4486, file: !4487, line: 521, baseType: !1186, size: 64, offset: 896)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4486, file: !4487, line: 522, baseType: !1186, size: 64, offset: 960)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4486, file: !4487, line: 528, baseType: !4524, size: 64, offset: 1024)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 64)
!4525 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4487, line: 10, flags: DIFlagFwdDecl)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4486, file: !4487, line: 535, baseType: !1186, size: 64, offset: 1088)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4486, file: !4487, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4486, file: !4487, line: 540, baseType: !4529, size: 33280, offset: 1536)
!4529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4530, line: 317, size: 33280, elements: !4531)
!4530 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4531 = !{!4532, !4533, !4534}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4529, file: !4530, line: 330, baseType: !7, size: 32)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4529, file: !4530, line: 337, baseType: !1186, size: 64, offset: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4529, file: !4530, line: 348, baseType: !4535, size: 32768, offset: 512)
!4535 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4530, line: 304, size: 32768, elements: !4536)
!4536 = !{!4537, !4552, !4589, !4639, !4652}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4535, file: !4530, line: 305, baseType: !4538, size: 896)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4530, line: 12, size: 896, elements: !4539)
!4539 = !{!4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4551}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4538, file: !4530, line: 13, baseType: !1266, size: 32)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4538, file: !4530, line: 14, baseType: !1266, size: 32, offset: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4538, file: !4530, line: 15, baseType: !1266, size: 32, offset: 64)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4538, file: !4530, line: 16, baseType: !1266, size: 32, offset: 96)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4538, file: !4530, line: 17, baseType: !1266, size: 32, offset: 128)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4538, file: !4530, line: 18, baseType: !1266, size: 32, offset: 160)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4538, file: !4530, line: 19, baseType: !1266, size: 32, offset: 192)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4538, file: !4530, line: 22, baseType: !4548, size: 640, offset: 224)
!4548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 640, elements: !4549)
!4549 = !{!4550}
!4550 = !DISubrange(count: 20)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4538, file: !4530, line: 25, baseType: !1266, size: 32, offset: 864)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4535, file: !4530, line: 306, baseType: !4553, size: 4096, align: 128)
!4553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4530, line: 34, size: 4096, align: 128, elements: !4554)
!4554 = !{!4555, !4556, !4557, !4558, !4559, !4574, !4575, !4576, !4578, !4580, !4584}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4553, file: !4530, line: 35, baseType: !1989, size: 16)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4553, file: !4530, line: 36, baseType: !1989, size: 16, offset: 16)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4553, file: !4530, line: 37, baseType: !1989, size: 16, offset: 32)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4553, file: !4530, line: 38, baseType: !1989, size: 16, offset: 48)
!4559 = !DIDerivedType(tag: DW_TAG_member, scope: !4553, file: !4530, line: 39, baseType: !4560, size: 128, offset: 64)
!4560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4553, file: !4530, line: 39, size: 128, elements: !4561)
!4561 = !{!4562, !4567}
!4562 = !DIDerivedType(tag: DW_TAG_member, scope: !4560, file: !4530, line: 40, baseType: !4563, size: 128)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4560, file: !4530, line: 40, size: 128, elements: !4564)
!4564 = !{!4565, !4566}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4563, file: !4530, line: 41, baseType: !1229, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4563, file: !4530, line: 42, baseType: !1229, size: 64, offset: 64)
!4567 = !DIDerivedType(tag: DW_TAG_member, scope: !4560, file: !4530, line: 44, baseType: !4568, size: 128)
!4568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4560, file: !4530, line: 44, size: 128, elements: !4569)
!4569 = !{!4570, !4571, !4572, !4573}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4568, file: !4530, line: 45, baseType: !1266, size: 32)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4568, file: !4530, line: 46, baseType: !1266, size: 32, offset: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4568, file: !4530, line: 47, baseType: !1266, size: 32, offset: 64)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4568, file: !4530, line: 48, baseType: !1266, size: 32, offset: 96)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4553, file: !4530, line: 51, baseType: !1266, size: 32, offset: 192)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4553, file: !4530, line: 52, baseType: !1266, size: 32, offset: 224)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4553, file: !4530, line: 55, baseType: !4577, size: 1024, offset: 256)
!4577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 1024, elements: !2187)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4553, file: !4530, line: 58, baseType: !4579, size: 2048, offset: 1280)
!4579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 2048, elements: !1354)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4553, file: !4530, line: 60, baseType: !4581, size: 384, offset: 3328)
!4581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 384, elements: !4582)
!4582 = !{!4583}
!4583 = !DISubrange(count: 12)
!4584 = !DIDerivedType(tag: DW_TAG_member, scope: !4553, file: !4530, line: 62, baseType: !4585, size: 384, offset: 3712)
!4585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4553, file: !4530, line: 62, size: 384, elements: !4586)
!4586 = !{!4587, !4588}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4585, file: !4530, line: 63, baseType: !4581, size: 384)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4585, file: !4530, line: 64, baseType: !4581, size: 384)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4535, file: !4530, line: 307, baseType: !4590, size: 1088)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4530, line: 79, size: 1088, elements: !4591)
!4591 = !{!4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4638}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4590, file: !4530, line: 80, baseType: !1266, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4590, file: !4530, line: 81, baseType: !1266, size: 32, offset: 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4590, file: !4530, line: 82, baseType: !1266, size: 32, offset: 64)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4590, file: !4530, line: 83, baseType: !1266, size: 32, offset: 96)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4590, file: !4530, line: 84, baseType: !1266, size: 32, offset: 128)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4590, file: !4530, line: 85, baseType: !1266, size: 32, offset: 160)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4590, file: !4530, line: 86, baseType: !1266, size: 32, offset: 192)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4590, file: !4530, line: 88, baseType: !4548, size: 640, offset: 224)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4590, file: !4530, line: 89, baseType: !2109, size: 8, offset: 864)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4590, file: !4530, line: 90, baseType: !2109, size: 8, offset: 872)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4590, file: !4530, line: 91, baseType: !2109, size: 8, offset: 880)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4590, file: !4530, line: 92, baseType: !2109, size: 8, offset: 888)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4590, file: !4530, line: 93, baseType: !2109, size: 8, offset: 896)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4590, file: !4530, line: 94, baseType: !2109, size: 8, offset: 904)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4590, file: !4530, line: 95, baseType: !4607, size: 64, offset: 960)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4609, line: 11, size: 128, elements: !4610)
!4609 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4610 = !{!4611, !4612}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4608, file: !4609, line: 12, baseType: !1188, size: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4608, file: !4609, line: 13, baseType: !4613, size: 64, offset: 64)
!4613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4614, size: 64)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4615, line: 56, size: 1344, elements: !4616)
!4615 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4616 = !{!4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4614, file: !4615, line: 61, baseType: !1186, size: 64)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4614, file: !4615, line: 62, baseType: !1186, size: 64, offset: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4614, file: !4615, line: 63, baseType: !1186, size: 64, offset: 128)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4614, file: !4615, line: 64, baseType: !1186, size: 64, offset: 192)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4614, file: !4615, line: 65, baseType: !1186, size: 64, offset: 256)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4614, file: !4615, line: 66, baseType: !1186, size: 64, offset: 320)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4614, file: !4615, line: 68, baseType: !1186, size: 64, offset: 384)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4614, file: !4615, line: 69, baseType: !1186, size: 64, offset: 448)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4614, file: !4615, line: 70, baseType: !1186, size: 64, offset: 512)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4614, file: !4615, line: 71, baseType: !1186, size: 64, offset: 576)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4614, file: !4615, line: 72, baseType: !1186, size: 64, offset: 640)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4614, file: !4615, line: 73, baseType: !1186, size: 64, offset: 704)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4614, file: !4615, line: 74, baseType: !1186, size: 64, offset: 768)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4614, file: !4615, line: 75, baseType: !1186, size: 64, offset: 832)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4614, file: !4615, line: 76, baseType: !1186, size: 64, offset: 896)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4614, file: !4615, line: 81, baseType: !1186, size: 64, offset: 960)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4614, file: !4615, line: 83, baseType: !1186, size: 64, offset: 1024)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4614, file: !4615, line: 84, baseType: !1186, size: 64, offset: 1088)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4614, file: !4615, line: 85, baseType: !1186, size: 64, offset: 1152)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4614, file: !4615, line: 86, baseType: !1186, size: 64, offset: 1216)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4614, file: !4615, line: 87, baseType: !1186, size: 64, offset: 1280)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4590, file: !4530, line: 96, baseType: !1266, size: 32, offset: 1024)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4535, file: !4530, line: 308, baseType: !4640, size: 4608, align: 512)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4530, line: 289, size: 4608, align: 512, elements: !4641)
!4641 = !{!4642, !4643, !4650}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4640, file: !4530, line: 290, baseType: !4553, size: 4096, align: 128)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4640, file: !4530, line: 291, baseType: !4644, size: 512, offset: 4096)
!4644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4530, line: 268, size: 512, elements: !4645)
!4645 = !{!4646, !4647, !4648}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4644, file: !4530, line: 269, baseType: !1229, size: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4644, file: !4530, line: 270, baseType: !1229, size: 64, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4644, file: !4530, line: 271, baseType: !4649, size: 384, offset: 128)
!4649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1229, size: 384, elements: !3839)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4640, file: !4530, line: 292, baseType: !4651, offset: 4608)
!4651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, elements: !4077)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4535, file: !4530, line: 309, baseType: !4653, size: 32768)
!4653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 32768, elements: !4654)
!4654 = !{!4655}
!4655 = !DISubrange(count: 4096)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3456, file: !1853, line: 378, baseType: !4657, size: 64, offset: 64)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !3452, file: !1853, line: 384, baseType: !3723, size: 192, offset: 192)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !3230, file: !1853, line: 500, baseType: !1308, offset: 6656)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !3230, file: !1853, line: 501, baseType: !4661, size: 64, offset: 6656)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1853, line: 387, flags: DIFlagFwdDecl)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3230, file: !1853, line: 516, baseType: !3927, size: 64, offset: 6720)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !3230, file: !1853, line: 519, baseType: !1424, size: 64, offset: 6784)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !3230, file: !1853, line: 521, baseType: !4666, size: 64, offset: 6848)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1853, line: 521, flags: DIFlagFwdDecl)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !3230, file: !1853, line: 545, baseType: !1877, size: 32, offset: 6912)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !3230, file: !1853, line: 548, baseType: !1554, size: 8, offset: 6944)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !3230, file: !1853, line: 550, baseType: !4671, offset: 6952)
!4671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4672, line: 142, elements: !1322)
!4672 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !3230, file: !1853, line: 554, baseType: !2162, size: 256, offset: 6976)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !3230, file: !1853, line: 557, baseType: !1266, size: 32, offset: 7232)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !3227, file: !1853, line: 565, baseType: !4676, offset: 7296)
!4676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1186, elements: !2200)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3223, file: !1853, line: 151, baseType: !1877, size: 32)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3215, file: !1853, line: 156, baseType: !1308, offset: 256)
!4679 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !1853, line: 159, baseType: !4680, size: 128)
!4680 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1857, file: !1853, line: 159, size: 128, elements: !4681)
!4681 = !{!4682, !4726}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4680, file: !1853, line: 161, baseType: !4683, size: 64)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !138, line: 110, size: 1152, elements: !4685)
!4685 = !{!4686, !4696, !4697, !4698, !4699, !4700, !4701, !4713, !4714, !4715}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4684, file: !138, line: 111, baseType: !4687, size: 384)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !138, line: 19, size: 384, elements: !4688)
!4688 = !{!4689, !4691, !4692, !4693, !4694, !4695}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4687, file: !138, line: 20, baseType: !4690, size: 64)
!4690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4687, file: !138, line: 21, baseType: !4690, size: 64, offset: 64)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4687, file: !138, line: 22, baseType: !4690, size: 64, offset: 128)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4687, file: !138, line: 23, baseType: !1186, size: 64, offset: 192)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4687, file: !138, line: 24, baseType: !1186, size: 64, offset: 256)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4687, file: !138, line: 25, baseType: !1186, size: 64, offset: 320)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4684, file: !138, line: 112, baseType: !2137, size: 64, offset: 384)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4684, file: !138, line: 113, baseType: !2123, size: 128, offset: 448)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4684, file: !138, line: 114, baseType: !3723, size: 192, offset: 576)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4684, file: !138, line: 115, baseType: !137, size: 32, offset: 768)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4684, file: !138, line: 116, baseType: !7, size: 32, offset: 800)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4684, file: !138, line: 117, baseType: !4702, size: 64, offset: 832)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4704)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !138, line: 67, size: 256, elements: !4705)
!4705 = !{!4706, !4707, !4711, !4712}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4704, file: !138, line: 73, baseType: !1970, size: 64)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4704, file: !138, line: 78, baseType: !4708, size: 64, offset: 64)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{null, !4683}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4704, file: !138, line: 83, baseType: !4708, size: 64, offset: 128)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4704, file: !138, line: 89, baseType: !3279, size: 64, offset: 192)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4684, file: !138, line: 118, baseType: !1187, size: 64, offset: 896)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4684, file: !138, line: 119, baseType: !260, size: 32, offset: 960)
!4715 = !DIDerivedType(tag: DW_TAG_member, scope: !4684, file: !138, line: 120, baseType: !4716, size: 128, offset: 1024)
!4716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4684, file: !138, line: 120, size: 128, elements: !4717)
!4717 = !{!4718, !4724}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4716, file: !138, line: 121, baseType: !4719, size: 128)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4720, line: 6, size: 128, elements: !4721)
!4720 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4721 = !{!4722, !4723}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4719, file: !4720, line: 7, baseType: !1229, size: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4719, file: !4720, line: 8, baseType: !1229, size: 64, offset: 64)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4716, file: !138, line: 122, baseType: !4725)
!4725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4719, elements: !4077)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4680, file: !1853, line: 162, baseType: !1187, size: 64, offset: 64)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1857, file: !1853, line: 176, baseType: !1437, size: 128, align: 64)
!4728 = !DIDerivedType(tag: DW_TAG_member, scope: !1852, file: !1853, line: 179, baseType: !4729, size: 32, offset: 384)
!4729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1852, file: !1853, line: 179, size: 32, elements: !4730)
!4730 = !{!4731, !4732, !4733, !4734}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4729, file: !1853, line: 184, baseType: !1877, size: 32)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4729, file: !1853, line: 192, baseType: !7, size: 32)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4729, file: !1853, line: 194, baseType: !7, size: 32)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4729, file: !1853, line: 195, baseType: !260, size: 32)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1852, file: !1853, line: 199, baseType: !1877, size: 32, offset: 416)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1724, file: !151, line: 1964, baseType: !4737, size: 64, offset: 1344)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!1188, !1663, !4740}
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4741, size: 64)
!4741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4742, line: 12, size: 256, elements: !4743)
!4742 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4743 = !{!4744, !4745, !4746, !4747, !4748}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4741, file: !4742, line: 13, baseType: !1175, size: 32)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4741, file: !4742, line: 16, baseType: !260, size: 32, offset: 32)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4741, file: !4742, line: 23, baseType: !1186, size: 64, offset: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4741, file: !4742, line: 30, baseType: !1186, size: 64, offset: 128)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4741, file: !4742, line: 33, baseType: !4749, size: 64, offset: 192)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1853, line: 27, flags: DIFlagFwdDecl)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1724, file: !151, line: 1966, baseType: !4737, size: 64, offset: 1408)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1664, file: !151, line: 1424, baseType: !4753, size: 64, offset: 448)
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4755)
!4755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !145, line: 322, size: 704, elements: !4756)
!4756 = !{!4757, !4803, !4807, !4811, !4812, !4813, !4814, !4815, !4820, !4825, !4829}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4755, file: !145, line: 323, baseType: !4758, size: 64)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!260, !4761}
!4761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4762, size: 64)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !145, line: 294, size: 1600, elements: !4763)
!4763 = !{!4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4788, !4789, !4790}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4762, file: !145, line: 295, baseType: !1706, size: 128)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4762, file: !145, line: 296, baseType: !1205, size: 128, offset: 128)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4762, file: !145, line: 297, baseType: !1205, size: 128, offset: 256)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4762, file: !145, line: 298, baseType: !1205, size: 128, offset: 384)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4762, file: !145, line: 299, baseType: !1804, size: 192, offset: 512)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4762, file: !145, line: 300, baseType: !1308, offset: 704)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4762, file: !145, line: 301, baseType: !1877, size: 32, offset: 704)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4762, file: !145, line: 302, baseType: !1663, size: 64, offset: 768)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4762, file: !145, line: 303, baseType: !4773, size: 64, offset: 832)
!4773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !145, line: 68, size: 64, elements: !4774)
!4774 = !{!4775, !4787}
!4775 = !DIDerivedType(tag: DW_TAG_member, scope: !4773, file: !145, line: 69, baseType: !4776, size: 32)
!4776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4773, file: !145, line: 69, size: 32, elements: !4777)
!4777 = !{!4778, !4779, !4780}
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4776, file: !145, line: 70, baseType: !1499, size: 32)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4776, file: !145, line: 71, baseType: !1507, size: 32)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4776, file: !145, line: 72, baseType: !4781, size: 32)
!4781 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4782, line: 24, baseType: !4783)
!4782 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4782, line: 22, size: 32, elements: !4784)
!4784 = !{!4785}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4783, file: !4782, line: 23, baseType: !4786, size: 32)
!4786 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4782, line: 20, baseType: !1505)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4773, file: !145, line: 74, baseType: !144, size: 32, offset: 32)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4762, file: !145, line: 304, baseType: !1595, size: 64, offset: 896)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4762, file: !145, line: 305, baseType: !1186, size: 64, offset: 960)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4762, file: !145, line: 306, baseType: !4791, size: 576, offset: 1024)
!4791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !145, line: 205, size: 576, elements: !4792)
!4792 = !{!4793, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4791, file: !145, line: 206, baseType: !4794, size: 64)
!4794 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !145, line: 66, baseType: !1597)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4791, file: !145, line: 207, baseType: !4794, size: 64, offset: 64)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4791, file: !145, line: 208, baseType: !4794, size: 64, offset: 128)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4791, file: !145, line: 209, baseType: !4794, size: 64, offset: 192)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4791, file: !145, line: 210, baseType: !4794, size: 64, offset: 256)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4791, file: !145, line: 211, baseType: !4794, size: 64, offset: 320)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4791, file: !145, line: 212, baseType: !4794, size: 64, offset: 384)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4791, file: !145, line: 213, baseType: !1603, size: 64, offset: 448)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4791, file: !145, line: 214, baseType: !1603, size: 64, offset: 512)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4755, file: !145, line: 324, baseType: !4804, size: 64, offset: 64)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!4761, !1663, !260}
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4755, file: !145, line: 325, baseType: !4808, size: 64, offset: 128)
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4809, size: 64)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{null, !4761}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4755, file: !145, line: 326, baseType: !4758, size: 64, offset: 192)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4755, file: !145, line: 327, baseType: !4758, size: 64, offset: 256)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4755, file: !145, line: 328, baseType: !4758, size: 64, offset: 320)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4755, file: !145, line: 329, baseType: !1766, size: 64, offset: 384)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4755, file: !145, line: 332, baseType: !4816, size: 64, offset: 448)
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 64)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!4819, !1493}
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4755, file: !145, line: 333, baseType: !4821, size: 64, offset: 512)
!4821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4822, size: 64)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{!260, !1493, !4824}
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4755, file: !145, line: 335, baseType: !4826, size: 64, offset: 576)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4827, size: 64)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!260, !1493, !4819}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4755, file: !145, line: 337, baseType: !4830, size: 64, offset: 640)
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!260, !1663, !4833}
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4773, size: 64)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1664, file: !151, line: 1425, baseType: !4835, size: 64, offset: 512)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4837)
!4837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !145, line: 428, size: 704, elements: !4838)
!4838 = !{!4839, !4843, !4844, !4848, !4849, !4850, !4865, !4888, !4892, !4893, !4916}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4837, file: !145, line: 429, baseType: !4840, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!260, !1663, !260, !260, !1613}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4837, file: !145, line: 430, baseType: !1766, size: 64, offset: 64)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4837, file: !145, line: 431, baseType: !4845, size: 64, offset: 128)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!260, !1663, !7}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4837, file: !145, line: 432, baseType: !4845, size: 64, offset: 192)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4837, file: !145, line: 433, baseType: !1766, size: 64, offset: 256)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4837, file: !145, line: 434, baseType: !4851, size: 64, offset: 320)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!260, !1663, !260, !4854}
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !145, line: 415, size: 256, elements: !4856)
!4856 = !{!4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4855, file: !145, line: 416, baseType: !260, size: 32)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4855, file: !145, line: 417, baseType: !7, size: 32, offset: 32)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4855, file: !145, line: 418, baseType: !7, size: 32, offset: 64)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4855, file: !145, line: 420, baseType: !7, size: 32, offset: 96)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4855, file: !145, line: 421, baseType: !7, size: 32, offset: 128)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4855, file: !145, line: 422, baseType: !7, size: 32, offset: 160)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4855, file: !145, line: 423, baseType: !7, size: 32, offset: 192)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4855, file: !145, line: 424, baseType: !7, size: 32, offset: 224)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4837, file: !145, line: 435, baseType: !4866, size: 64, offset: 384)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!260, !1663, !4773, !4869}
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !145, line: 343, size: 960, elements: !4871)
!4871 = !{!4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887}
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4870, file: !145, line: 344, baseType: !260, size: 32)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4870, file: !145, line: 345, baseType: !1229, size: 64, offset: 64)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4870, file: !145, line: 346, baseType: !1229, size: 64, offset: 128)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4870, file: !145, line: 347, baseType: !1229, size: 64, offset: 192)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4870, file: !145, line: 348, baseType: !1229, size: 64, offset: 256)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4870, file: !145, line: 349, baseType: !1229, size: 64, offset: 320)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4870, file: !145, line: 350, baseType: !1229, size: 64, offset: 384)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4870, file: !145, line: 351, baseType: !1814, size: 64, offset: 448)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4870, file: !145, line: 353, baseType: !1814, size: 64, offset: 512)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4870, file: !145, line: 354, baseType: !260, size: 32, offset: 576)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4870, file: !145, line: 355, baseType: !260, size: 32, offset: 608)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4870, file: !145, line: 356, baseType: !1229, size: 64, offset: 640)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4870, file: !145, line: 357, baseType: !1229, size: 64, offset: 704)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4870, file: !145, line: 358, baseType: !1229, size: 64, offset: 768)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4870, file: !145, line: 359, baseType: !1814, size: 64, offset: 832)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4870, file: !145, line: 360, baseType: !260, size: 32, offset: 896)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4837, file: !145, line: 436, baseType: !4889, size: 64, offset: 448)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{!260, !1663, !4833, !4869}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4837, file: !145, line: 438, baseType: !4866, size: 64, offset: 512)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4837, file: !145, line: 439, baseType: !4894, size: 64, offset: 576)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!260, !1663, !4897}
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !145, line: 409, size: 1408, elements: !4899)
!4899 = !{!4900, !4901}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4898, file: !145, line: 410, baseType: !7, size: 32)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4898, file: !145, line: 411, baseType: !4902, size: 1344, offset: 64)
!4902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4903, size: 1344, elements: !1350)
!4903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !145, line: 395, size: 448, elements: !4904)
!4904 = !{!4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4915}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4903, file: !145, line: 396, baseType: !7, size: 32)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4903, file: !145, line: 397, baseType: !7, size: 32, offset: 32)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4903, file: !145, line: 399, baseType: !7, size: 32, offset: 64)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4903, file: !145, line: 400, baseType: !7, size: 32, offset: 96)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4903, file: !145, line: 401, baseType: !7, size: 32, offset: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4903, file: !145, line: 402, baseType: !7, size: 32, offset: 160)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4903, file: !145, line: 403, baseType: !7, size: 32, offset: 192)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4903, file: !145, line: 404, baseType: !1232, size: 64, offset: 256)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4903, file: !145, line: 405, baseType: !4914, size: 64, offset: 320)
!4914 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !1176, line: 126, baseType: !1229)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4903, file: !145, line: 406, baseType: !4914, size: 64, offset: 384)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4837, file: !145, line: 440, baseType: !4845, size: 64, offset: 640)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1664, file: !151, line: 1426, baseType: !4918, size: 64, offset: 576)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4920)
!4920 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !151, line: 49, flags: DIFlagFwdDecl)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1664, file: !151, line: 1427, baseType: !1186, size: 64, offset: 640)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1664, file: !151, line: 1428, baseType: !1186, size: 64, offset: 704)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1664, file: !151, line: 1429, baseType: !1186, size: 64, offset: 768)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1664, file: !151, line: 1430, baseType: !1454, size: 64, offset: 832)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1664, file: !151, line: 1431, baseType: !1897, size: 256, offset: 896)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1664, file: !151, line: 1432, baseType: !260, size: 32, offset: 1152)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1664, file: !151, line: 1433, baseType: !1877, size: 32, offset: 1184)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1664, file: !151, line: 1437, baseType: !4929, size: 64, offset: 1216)
!4929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4930, size: 64)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4932)
!4932 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !151, line: 1437, flags: DIFlagFwdDecl)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1664, file: !151, line: 1449, baseType: !4934, size: 64, offset: 1280)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1470, line: 34, size: 64, elements: !4935)
!4935 = !{!4936}
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4934, file: !1470, line: 35, baseType: !1473, size: 64)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1664, file: !151, line: 1450, baseType: !1205, size: 128, offset: 1344)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1664, file: !151, line: 1451, baseType: !2093, size: 64, offset: 1472)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1664, file: !151, line: 1452, baseType: !2871, size: 64, offset: 1536)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1664, file: !151, line: 1453, baseType: !4941, size: 64, offset: 1600)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !151, line: 1453, flags: DIFlagFwdDecl)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1664, file: !151, line: 1454, baseType: !1706, size: 128, offset: 1664)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1664, file: !151, line: 1455, baseType: !7, size: 32, offset: 1792)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1664, file: !151, line: 1456, baseType: !4946, size: 2432, offset: 1856)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !145, line: 518, size: 2432, elements: !4947)
!4947 = !{!4948, !4949, !4950, !4952, !4984}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4946, file: !145, line: 519, baseType: !7, size: 32)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4946, file: !145, line: 520, baseType: !1897, size: 256, offset: 64)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4946, file: !145, line: 521, baseType: !4951, size: 192, offset: 320)
!4951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 192, elements: !1350)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4946, file: !145, line: 522, baseType: !4953, size: 1728, offset: 512)
!4953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4954, size: 1728, elements: !1350)
!4954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !145, line: 222, size: 576, elements: !4955)
!4955 = !{!4956, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983}
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4954, file: !145, line: 223, baseType: !4957, size: 64)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !145, line: 443, size: 256, elements: !4959)
!4959 = !{!4960, !4961, !4974, !4975}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4958, file: !145, line: 444, baseType: !260, size: 32)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4958, file: !145, line: 445, baseType: !4962, size: 64, offset: 64)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4964)
!4964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !145, line: 310, size: 512, elements: !4965)
!4965 = !{!4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973}
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4964, file: !145, line: 311, baseType: !1766, size: 64)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4964, file: !145, line: 312, baseType: !1766, size: 64, offset: 64)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4964, file: !145, line: 313, baseType: !1766, size: 64, offset: 128)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4964, file: !145, line: 314, baseType: !1766, size: 64, offset: 192)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4964, file: !145, line: 315, baseType: !4758, size: 64, offset: 256)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4964, file: !145, line: 316, baseType: !4758, size: 64, offset: 320)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4964, file: !145, line: 317, baseType: !4758, size: 64, offset: 384)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4964, file: !145, line: 318, baseType: !4830, size: 64, offset: 448)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4958, file: !145, line: 446, baseType: !1697, size: 64, offset: 128)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4958, file: !145, line: 447, baseType: !4957, size: 64, offset: 192)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4954, file: !145, line: 224, baseType: !260, size: 32, offset: 64)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4954, file: !145, line: 226, baseType: !1205, size: 128, offset: 128)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4954, file: !145, line: 227, baseType: !1186, size: 64, offset: 256)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4954, file: !145, line: 228, baseType: !7, size: 32, offset: 320)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4954, file: !145, line: 229, baseType: !7, size: 32, offset: 352)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4954, file: !145, line: 230, baseType: !4794, size: 64, offset: 384)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4954, file: !145, line: 231, baseType: !4794, size: 64, offset: 448)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4954, file: !145, line: 232, baseType: !1187, size: 64, offset: 512)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4946, file: !145, line: 523, baseType: !4985, size: 192, offset: 2240)
!4985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4962, size: 192, elements: !1350)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1664, file: !151, line: 1458, baseType: !4987, size: 2112, offset: 4288)
!4987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !151, line: 1410, size: 2112, elements: !4988)
!4988 = !{!4989, !4990, !4991}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4987, file: !151, line: 1411, baseType: !260, size: 32)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4987, file: !151, line: 1412, baseType: !2298, size: 128, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4987, file: !151, line: 1413, baseType: !4992, size: 1920, offset: 192)
!4992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4993, size: 1920, elements: !1350)
!4993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4994, line: 12, size: 640, elements: !4995)
!4994 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4995 = !{!4996, !5004, !5005, !5010, !5011}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4993, file: !4994, line: 13, baseType: !4997, size: 320)
!4997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4998, line: 17, size: 320, elements: !4999)
!4998 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4999 = !{!5000, !5001, !5002, !5003}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4997, file: !4998, line: 18, baseType: !260, size: 32)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4997, file: !4998, line: 19, baseType: !260, size: 32, offset: 32)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4997, file: !4998, line: 20, baseType: !2298, size: 128, offset: 64)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4997, file: !4998, line: 22, baseType: !1437, size: 128, align: 64, offset: 192)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4993, file: !4994, line: 14, baseType: !2084, size: 64, offset: 320)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4993, file: !4994, line: 15, baseType: !5006, size: 64, offset: 384)
!5006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !5007, line: 16, size: 64, elements: !5008)
!5007 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!5008 = !{!5009}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5006, file: !5007, line: 17, baseType: !3459, size: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4993, file: !4994, line: 16, baseType: !2298, size: 128, offset: 448)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4993, file: !4994, line: 17, baseType: !1877, size: 32, offset: 576)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1664, file: !151, line: 1465, baseType: !1187, size: 64, offset: 6400)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1664, file: !151, line: 1468, baseType: !1266, size: 32, offset: 6464)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1664, file: !151, line: 1470, baseType: !1603, size: 64, offset: 6528)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1664, file: !151, line: 1471, baseType: !1603, size: 64, offset: 6592)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1664, file: !151, line: 1473, baseType: !1179, size: 32, offset: 6656)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1664, file: !151, line: 1474, baseType: !5018, size: 64, offset: 6720)
!5018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5019, size: 64)
!5019 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !151, line: 603, flags: DIFlagFwdDecl)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1664, file: !151, line: 1477, baseType: !2186, size: 256, offset: 6784)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1664, file: !151, line: 1478, baseType: !5022, size: 128, offset: 7040)
!5022 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !5023, line: 18, baseType: !5024)
!5023 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!5024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5023, line: 16, size: 128, elements: !5025)
!5025 = !{!5026}
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5024, file: !5023, line: 17, baseType: !5027, size: 128)
!5027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 128, elements: !2999)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1664, file: !151, line: 1480, baseType: !7, size: 32, offset: 7168)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1664, file: !151, line: 1481, baseType: !2319, size: 32, offset: 7200)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1664, file: !151, line: 1487, baseType: !1804, size: 192, offset: 7232)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1664, file: !151, line: 1493, baseType: !1235, size: 64, offset: 7424)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1664, file: !151, line: 1495, baseType: !5033, size: 64, offset: 7488)
!5033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5034, size: 64)
!5034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5035)
!5035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1452, line: 135, size: 1024, align: 512, elements: !5036)
!5036 = !{!5037, !5041, !5042, !5049, !5055, !5059, !5063, !5067, !5068, !5072, !5076, !5081, !5085}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !5035, file: !1452, line: 136, baseType: !5038, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!260, !1454, !7}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !5035, file: !1452, line: 137, baseType: !5038, size: 64, offset: 64)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !5035, file: !1452, line: 138, baseType: !5043, size: 64, offset: 128)
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!260, !5046, !5048}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1455)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !5035, file: !1452, line: 139, baseType: !5050, size: 64, offset: 192)
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5051, size: 64)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!260, !5046, !7, !1235, !5053}
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 64)
!5054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1478)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !5035, file: !1452, line: 141, baseType: !5056, size: 64, offset: 256)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!260, !5046}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !5035, file: !1452, line: 142, baseType: !5060, size: 64, offset: 320)
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 64)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!260, !1454}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !5035, file: !1452, line: 143, baseType: !5064, size: 64, offset: 384)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{null, !1454}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !5035, file: !1452, line: 144, baseType: !5064, size: 64, offset: 448)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !5035, file: !1452, line: 145, baseType: !5069, size: 64, offset: 512)
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 64)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{null, !1454, !1493}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !5035, file: !1452, line: 146, baseType: !5073, size: 64, offset: 576)
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 64)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!1349, !1454, !1349, !260}
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !5035, file: !1452, line: 147, baseType: !5077, size: 64, offset: 640)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!1450, !5080}
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !5035, file: !1452, line: 148, baseType: !5082, size: 64, offset: 704)
!5082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5083, size: 64)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{!260, !1613, !1554}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !5035, file: !1452, line: 149, baseType: !5086, size: 64, offset: 768)
!5086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5087, size: 64)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!1454, !1454, !5089}
!5089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 64)
!5090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1494)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1664, file: !151, line: 1500, baseType: !260, size: 32, offset: 7552)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1664, file: !151, line: 1502, baseType: !5093, size: 448, offset: 7616)
!5093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4742, line: 60, size: 448, elements: !5094)
!5094 = !{!5095, !5100, !5101, !5102, !5103, !5104, !5105}
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !5093, file: !4742, line: 61, baseType: !5096, size: 64)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!1186, !5099, !4740}
!5099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 64)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !5093, file: !4742, line: 63, baseType: !5096, size: 64, offset: 64)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5093, file: !4742, line: 66, baseType: !1188, size: 64, offset: 128)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !5093, file: !4742, line: 67, baseType: !260, size: 32, offset: 192)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5093, file: !4742, line: 68, baseType: !7, size: 32, offset: 224)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5093, file: !4742, line: 71, baseType: !1205, size: 128, offset: 256)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !5093, file: !4742, line: 77, baseType: !5106, size: 64, offset: 384)
!5106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1664, file: !151, line: 1505, baseType: !1808, size: 64, offset: 8064)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1664, file: !151, line: 1508, baseType: !1808, size: 64, offset: 8128)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1664, file: !151, line: 1511, baseType: !260, size: 32, offset: 8192)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1664, file: !151, line: 1514, baseType: !3162, size: 32, offset: 8224)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1664, file: !151, line: 1517, baseType: !2174, size: 64, offset: 8256)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1664, file: !151, line: 1518, baseType: !1702, size: 64, offset: 8320)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1664, file: !151, line: 1525, baseType: !3927, size: 64, offset: 8384)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1664, file: !151, line: 1532, baseType: !5115, size: 64, offset: 8448)
!5115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !5116, line: 52, size: 64, elements: !5117)
!5116 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!5117 = !{!5118}
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5115, file: !5116, line: 53, baseType: !5119, size: 64)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !5116, line: 40, size: 256, elements: !5121)
!5121 = !{!5122, !5123, !5128}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5120, file: !5116, line: 42, baseType: !1308)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !5120, file: !5116, line: 44, baseType: !5124, size: 192)
!5124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !5116, line: 28, size: 192, elements: !5125)
!5125 = !{!5126, !5127}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5124, file: !5116, line: 29, baseType: !1205, size: 128)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !5124, file: !5116, line: 31, baseType: !1188, size: 64, offset: 128)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !5120, file: !5116, line: 49, baseType: !1188, size: 64, offset: 192)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1664, file: !151, line: 1533, baseType: !5115, size: 64, offset: 8512)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1664, file: !151, line: 1534, baseType: !1437, size: 128, align: 64, offset: 8576)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1664, file: !151, line: 1535, baseType: !2162, size: 256, offset: 8704)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1664, file: !151, line: 1537, baseType: !1804, size: 192, offset: 8960)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1664, file: !151, line: 1542, baseType: !260, size: 32, offset: 9152)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1664, file: !151, line: 1545, baseType: !1308, offset: 9184)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1664, file: !151, line: 1546, baseType: !1205, size: 128, offset: 9216)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1664, file: !151, line: 1548, baseType: !1308, offset: 9344)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1664, file: !151, line: 1549, baseType: !1205, size: 128, offset: 9344)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1494, file: !151, line: 624, baseType: !1864, size: 64, offset: 256)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1494, file: !151, line: 631, baseType: !1186, size: 64, offset: 320)
!5140 = !DIDerivedType(tag: DW_TAG_member, scope: !1494, file: !151, line: 639, baseType: !5141, size: 32, offset: 384)
!5141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1494, file: !151, line: 639, size: 32, elements: !5142)
!5142 = !{!5143, !5144}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !5141, file: !151, line: 640, baseType: !2750, size: 32)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !5141, file: !151, line: 641, baseType: !7, size: 32)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1494, file: !151, line: 643, baseType: !1577, size: 32, offset: 416)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1494, file: !151, line: 644, baseType: !1595, size: 64, offset: 448)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1494, file: !151, line: 645, baseType: !1599, size: 128, offset: 512)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1494, file: !151, line: 646, baseType: !1599, size: 128, offset: 640)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1494, file: !151, line: 647, baseType: !1599, size: 128, offset: 768)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1494, file: !151, line: 648, baseType: !1308, offset: 896)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1494, file: !151, line: 649, baseType: !1183, size: 16, offset: 896)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1494, file: !151, line: 650, baseType: !2109, size: 8, offset: 912)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1494, file: !151, line: 651, baseType: !2109, size: 8, offset: 920)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1494, file: !151, line: 652, baseType: !4914, size: 64, offset: 960)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1494, file: !151, line: 659, baseType: !1186, size: 64, offset: 1024)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1494, file: !151, line: 660, baseType: !1897, size: 256, offset: 1088)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1494, file: !151, line: 662, baseType: !1186, size: 64, offset: 1344)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1494, file: !151, line: 663, baseType: !1186, size: 64, offset: 1408)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1494, file: !151, line: 665, baseType: !1706, size: 128, offset: 1472)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1494, file: !151, line: 666, baseType: !1205, size: 128, offset: 1600)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1494, file: !151, line: 675, baseType: !1205, size: 128, offset: 1728)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1494, file: !151, line: 676, baseType: !1205, size: 128, offset: 1856)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1494, file: !151, line: 677, baseType: !1205, size: 128, offset: 1984)
!5164 = !DIDerivedType(tag: DW_TAG_member, scope: !1494, file: !151, line: 678, baseType: !5165, size: 128, offset: 2112)
!5165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1494, file: !151, line: 678, size: 128, elements: !5166)
!5166 = !{!5167, !5168}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !5165, file: !151, line: 679, baseType: !1702, size: 64)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !5165, file: !151, line: 680, baseType: !1437, size: 128, align: 64)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1494, file: !151, line: 682, baseType: !1810, size: 64, offset: 2240)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1494, file: !151, line: 683, baseType: !1810, size: 64, offset: 2304)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1494, file: !151, line: 684, baseType: !1877, size: 32, offset: 2368)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1494, file: !151, line: 685, baseType: !1877, size: 32, offset: 2400)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1494, file: !151, line: 686, baseType: !1877, size: 32, offset: 2432)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1494, file: !151, line: 688, baseType: !1877, size: 32, offset: 2464)
!5175 = !DIDerivedType(tag: DW_TAG_member, scope: !1494, file: !151, line: 690, baseType: !5176, size: 64, offset: 2496)
!5176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1494, file: !151, line: 690, size: 64, elements: !5177)
!5177 = !{!5178, !5399}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !5176, file: !151, line: 691, baseType: !5179, size: 64)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5181)
!5181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !151, line: 1822, size: 2048, elements: !5182)
!5182 = !{!5183, !5184, !5188, !5192, !5196, !5197, !5198, !5202, !5215, !5216, !5223, !5227, !5228, !5232, !5233, !5237, !5242, !5243, !5247, !5251, !5359, !5363, !5364, !5368, !5369, !5373, !5377, !5382, !5386, !5390, !5394, !5398}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5181, file: !151, line: 1823, baseType: !1697, size: 64)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !5181, file: !151, line: 1824, baseType: !5185, size: 64, offset: 64)
!5185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5186, size: 64)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!1595, !1424, !1595, !260}
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5181, file: !151, line: 1825, baseType: !5189, size: 64, offset: 128)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 64)
!5190 = !DISubroutineType(types: !5191)
!5191 = !{!1380, !1424, !1349, !1394, !1826}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5181, file: !151, line: 1826, baseType: !5193, size: 64, offset: 192)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{!1380, !1424, !1235, !1394, !1826}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !5181, file: !151, line: 1827, baseType: !1974, size: 64, offset: 256)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !5181, file: !151, line: 1828, baseType: !1974, size: 64, offset: 320)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !5181, file: !151, line: 1829, baseType: !5199, size: 64, offset: 384)
!5199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5200, size: 64)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{!260, !1977, !1554}
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !5181, file: !151, line: 1830, baseType: !5203, size: 64, offset: 448)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{!260, !1424, !5206}
!5206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5207, size: 64)
!5207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !151, line: 1776, size: 128, elements: !5208)
!5208 = !{!5209, !5214}
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !5207, file: !151, line: 1777, baseType: !5210, size: 64)
!5210 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !151, line: 1773, baseType: !5211)
!5211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5212, size: 64)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!260, !5206, !1235, !260, !1595, !1229, !7}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !5207, file: !151, line: 1778, baseType: !1595, size: 64, offset: 64)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !5181, file: !151, line: 1831, baseType: !5203, size: 64, offset: 512)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5181, file: !151, line: 1832, baseType: !5217, size: 64, offset: 576)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!5220, !1424, !5221}
!5220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1178, line: 52, baseType: !7)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5222 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1683, line: 27, flags: DIFlagFwdDecl)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !5181, file: !151, line: 1833, baseType: !5224, size: 64, offset: 640)
!5224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 64)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{!1188, !1424, !7, !1186}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5181, file: !151, line: 1834, baseType: !5224, size: 64, offset: 704)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5181, file: !151, line: 1835, baseType: !5229, size: 64, offset: 768)
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 64)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!260, !1424, !3233}
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !5181, file: !151, line: 1836, baseType: !1186, size: 64, offset: 832)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5181, file: !151, line: 1837, baseType: !5234, size: 64, offset: 896)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DISubroutineType(types: !5236)
!5236 = !{!260, !1493, !1424}
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5181, file: !151, line: 1838, baseType: !5238, size: 64, offset: 960)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!260, !1424, !5241}
!5241 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !151, line: 1007, baseType: !1187)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5181, file: !151, line: 1839, baseType: !5234, size: 64, offset: 1024)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !5181, file: !151, line: 1840, baseType: !5244, size: 64, offset: 1088)
!5244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5245, size: 64)
!5245 = !DISubroutineType(types: !5246)
!5246 = !{!260, !1424, !1595, !1595, !260}
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !5181, file: !151, line: 1841, baseType: !5248, size: 64, offset: 1152)
!5248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5249, size: 64)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!260, !260, !1424, !260}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5181, file: !151, line: 1842, baseType: !5252, size: 64, offset: 1216)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 64)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{!260, !1424, !260, !5255}
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5256, size: 64)
!5256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !151, line: 1062, size: 1664, elements: !5257)
!5257 = !{!5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5289, !5290, !5291, !5304, !5335}
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !5256, file: !151, line: 1063, baseType: !5255, size: 64)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !5256, file: !151, line: 1064, baseType: !1205, size: 128, offset: 64)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !5256, file: !151, line: 1065, baseType: !1706, size: 128, offset: 192)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !5256, file: !151, line: 1066, baseType: !1205, size: 128, offset: 320)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !5256, file: !151, line: 1069, baseType: !1205, size: 128, offset: 448)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !5256, file: !151, line: 1072, baseType: !5241, size: 64, offset: 576)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !5256, file: !151, line: 1073, baseType: !7, size: 32, offset: 640)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !5256, file: !151, line: 1074, baseType: !1279, size: 8, offset: 672)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !5256, file: !151, line: 1075, baseType: !7, size: 32, offset: 704)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !5256, file: !151, line: 1076, baseType: !260, size: 32, offset: 736)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !5256, file: !151, line: 1077, baseType: !2298, size: 128, offset: 768)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !5256, file: !151, line: 1078, baseType: !1424, size: 64, offset: 896)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !5256, file: !151, line: 1079, baseType: !1595, size: 64, offset: 960)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !5256, file: !151, line: 1080, baseType: !1595, size: 64, offset: 1024)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !5256, file: !151, line: 1082, baseType: !5273, size: 64, offset: 1088)
!5273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5274, size: 64)
!5274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !151, line: 1314, size: 320, elements: !5275)
!5275 = !{!5276, !5284, !5285, !5286, !5287, !5288}
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5274, file: !151, line: 1315, baseType: !5277)
!5277 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !5278, line: 20, baseType: !5279)
!5278 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!5279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5278, line: 11, elements: !5280)
!5280 = !{!5281}
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !5279, file: !5278, line: 12, baseType: !5282)
!5282 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1320, line: 33, baseType: !5283)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1320, line: 31, elements: !1322)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5274, file: !151, line: 1316, baseType: !260, size: 32)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5274, file: !151, line: 1317, baseType: !260, size: 32, offset: 32)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5274, file: !151, line: 1318, baseType: !5273, size: 64, offset: 64)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5274, file: !151, line: 1319, baseType: !1424, size: 64, offset: 128)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5274, file: !151, line: 1320, baseType: !1437, size: 128, align: 64, offset: 192)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !5256, file: !151, line: 1084, baseType: !1186, size: 64, offset: 1152)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !5256, file: !151, line: 1085, baseType: !1186, size: 64, offset: 1216)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !5256, file: !151, line: 1087, baseType: !5292, size: 64, offset: 1280)
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5293, size: 64)
!5293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5294)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !151, line: 1011, size: 128, elements: !5295)
!5295 = !{!5296, !5300}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !5294, file: !151, line: 1012, baseType: !5297, size: 64)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{null, !5255, !5255}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !5294, file: !151, line: 1013, baseType: !5301, size: 64, offset: 64)
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = !DISubroutineType(types: !5303)
!5303 = !{null, !5255}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !5256, file: !151, line: 1088, baseType: !5305, size: 64, offset: 1344)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5307)
!5307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !151, line: 1016, size: 512, elements: !5308)
!5308 = !{!5309, !5313, !5317, !5318, !5322, !5326, !5330, !5334}
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !5307, file: !151, line: 1017, baseType: !5310, size: 64)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!5241, !5241}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !5307, file: !151, line: 1018, baseType: !5314, size: 64, offset: 64)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5315, size: 64)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{null, !5241}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !5307, file: !151, line: 1019, baseType: !5301, size: 64, offset: 128)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !5307, file: !151, line: 1020, baseType: !5319, size: 64, offset: 192)
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 64)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{!260, !5255, !260}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !5307, file: !151, line: 1021, baseType: !5323, size: 64, offset: 256)
!5323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5324, size: 64)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{!1554, !5255}
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !5307, file: !151, line: 1022, baseType: !5327, size: 64, offset: 320)
!5327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!5328 = !DISubroutineType(types: !5329)
!5329 = !{!260, !5255, !260, !1208}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !5307, file: !151, line: 1023, baseType: !5331, size: 64, offset: 384)
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{null, !5255, !1951}
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !5307, file: !151, line: 1024, baseType: !5323, size: 64, offset: 448)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !5256, file: !151, line: 1097, baseType: !5336, size: 256, offset: 1408)
!5336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5256, file: !151, line: 1089, size: 256, elements: !5337)
!5337 = !{!5338, !5347, !5353}
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !5336, file: !151, line: 1090, baseType: !5339, size: 256)
!5339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !5340, line: 10, size: 256, elements: !5341)
!5340 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5341 = !{!5342, !5343, !5346}
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5339, file: !5340, line: 11, baseType: !1266, size: 32)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5339, file: !5340, line: 12, baseType: !5344, size: 64, offset: 64)
!5344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!5345 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !5340, line: 5, flags: DIFlagFwdDecl)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5339, file: !5340, line: 13, baseType: !1205, size: 128, offset: 128)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !5336, file: !151, line: 1091, baseType: !5348, size: 64)
!5348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !5340, line: 17, size: 64, elements: !5349)
!5349 = !{!5350}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5348, file: !5340, line: 18, baseType: !5351, size: 64)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 64)
!5352 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !5340, line: 16, flags: DIFlagFwdDecl)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !5336, file: !151, line: 1096, baseType: !5354, size: 192)
!5354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5336, file: !151, line: 1092, size: 192, elements: !5355)
!5355 = !{!5356, !5357, !5358}
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5354, file: !151, line: 1093, baseType: !1205, size: 128)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5354, file: !151, line: 1094, baseType: !260, size: 32, offset: 128)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !5354, file: !151, line: 1095, baseType: !7, size: 32, offset: 160)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !5181, file: !151, line: 1843, baseType: !5360, size: 64, offset: 1280)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = !DISubroutineType(types: !5362)
!5362 = !{!1380, !1424, !1851, !260, !1394, !1826, !260}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !5181, file: !151, line: 1844, baseType: !3353, size: 64, offset: 1344)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !5181, file: !151, line: 1845, baseType: !5365, size: 64, offset: 1408)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{!260, !260}
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !5181, file: !151, line: 1846, baseType: !5252, size: 64, offset: 1472)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !5181, file: !151, line: 1847, baseType: !5370, size: 64, offset: 1536)
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!1380, !4447, !1424, !1826, !1394, !7}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !5181, file: !151, line: 1848, baseType: !5374, size: 64, offset: 1600)
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!1380, !1424, !1826, !4447, !1394, !7}
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !5181, file: !151, line: 1849, baseType: !5378, size: 64, offset: 1664)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!260, !1424, !1188, !5381, !1951}
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5255, size: 64)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !5181, file: !151, line: 1850, baseType: !5383, size: 64, offset: 1728)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5384, size: 64)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{!1188, !1424, !260, !1595, !1595}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !5181, file: !151, line: 1852, baseType: !5387, size: 64, offset: 1792)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{null, !1792, !1424}
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !5181, file: !151, line: 1856, baseType: !5391, size: 64, offset: 1856)
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 64)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!1380, !1424, !1595, !1424, !1595, !1394, !7}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !5181, file: !151, line: 1858, baseType: !5395, size: 64, offset: 1920)
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5396, size: 64)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{!1595, !1424, !1595, !1424, !1595, !1595, !7}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !5181, file: !151, line: 1861, baseType: !5244, size: 64, offset: 1984)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !5176, file: !151, line: 692, baseType: !1731, size: 64)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1494, file: !151, line: 694, baseType: !5401, size: 64, offset: 2560)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !151, line: 1100, size: 384, elements: !5403)
!5403 = !{!5404, !5405, !5406, !5407}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5402, file: !151, line: 1101, baseType: !1308)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5402, file: !151, line: 1102, baseType: !1205, size: 128)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5402, file: !151, line: 1103, baseType: !1205, size: 128, offset: 128)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5402, file: !151, line: 1104, baseType: !1205, size: 128, offset: 256)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1494, file: !151, line: 695, baseType: !1865, size: 1216, align: 64, offset: 2624)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1494, file: !151, line: 696, baseType: !1205, size: 128, offset: 3840)
!5410 = !DIDerivedType(tag: DW_TAG_member, scope: !1494, file: !151, line: 697, baseType: !5411, size: 64, offset: 3968)
!5411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1494, file: !151, line: 697, size: 64, elements: !5412)
!5412 = !{!5413, !5414, !5415, !5418, !5419}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5411, file: !151, line: 698, baseType: !4447, size: 64)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5411, file: !151, line: 699, baseType: !2093, size: 64)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5411, file: !151, line: 700, baseType: !5416, size: 64)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !151, line: 700, flags: DIFlagFwdDecl)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5411, file: !151, line: 701, baseType: !1349, size: 64)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5411, file: !151, line: 702, baseType: !7, size: 32)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1494, file: !151, line: 705, baseType: !1179, size: 32, offset: 4032)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1494, file: !151, line: 708, baseType: !1179, size: 32, offset: 4064)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1494, file: !151, line: 709, baseType: !5018, size: 64, offset: 4096)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1494, file: !151, line: 720, baseType: !1187, size: 64, offset: 4160)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1455, file: !1452, line: 98, baseType: !5425, size: 256, offset: 448)
!5425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1279, size: 256, elements: !2187)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1455, file: !1452, line: 101, baseType: !5427, size: 32, offset: 704)
!5427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5428, line: 25, size: 32, elements: !5429)
!5428 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5429 = !{!5430}
!5430 = !DIDerivedType(tag: DW_TAG_member, scope: !5427, file: !5428, line: 26, baseType: !5431, size: 32)
!5431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5427, file: !5428, line: 26, size: 32, elements: !5432)
!5432 = !{!5433}
!5433 = !DIDerivedType(tag: DW_TAG_member, scope: !5431, file: !5428, line: 30, baseType: !5434, size: 32)
!5434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5431, file: !5428, line: 30, size: 32, elements: !5435)
!5435 = !{!5436, !5437}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5434, file: !5428, line: 31, baseType: !1308)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5434, file: !5428, line: 32, baseType: !260, size: 32)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1455, file: !1452, line: 102, baseType: !5033, size: 64, offset: 768)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1455, file: !1452, line: 103, baseType: !1663, size: 64, offset: 832)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1455, file: !1452, line: 104, baseType: !1186, size: 64, offset: 896)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1455, file: !1452, line: 105, baseType: !1187, size: 64, offset: 960)
!5442 = !DIDerivedType(tag: DW_TAG_member, scope: !1455, file: !1452, line: 107, baseType: !5443, size: 128, offset: 1024)
!5443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1455, file: !1452, line: 107, size: 128, elements: !5444)
!5444 = !{!5445, !5446}
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5443, file: !1452, line: 108, baseType: !1205, size: 128)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5443, file: !1452, line: 109, baseType: !5447, size: 64)
!5447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1455, file: !1452, line: 111, baseType: !1205, size: 128, offset: 1152)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1455, file: !1452, line: 112, baseType: !1205, size: 128, offset: 1280)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1455, file: !1452, line: 120, baseType: !5451, size: 128, offset: 1408)
!5451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1455, file: !1452, line: 116, size: 128, elements: !5452)
!5452 = !{!5453, !5454, !5455}
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5451, file: !1452, line: 117, baseType: !1706, size: 128)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5451, file: !1452, line: 118, baseType: !1469, size: 128)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5451, file: !1452, line: 119, baseType: !1437, size: 128, align: 64)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1425, file: !151, line: 922, baseType: !1493, size: 64, offset: 256)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1425, file: !151, line: 923, baseType: !5179, size: 64, offset: 320)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1425, file: !151, line: 929, baseType: !1308, offset: 384)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1425, file: !151, line: 930, baseType: !150, size: 32, offset: 384)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1425, file: !151, line: 931, baseType: !1808, size: 64, offset: 448)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1425, file: !151, line: 932, baseType: !7, size: 32, offset: 512)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1425, file: !151, line: 933, baseType: !2319, size: 32, offset: 544)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1425, file: !151, line: 934, baseType: !1804, size: 192, offset: 576)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1425, file: !151, line: 935, baseType: !1595, size: 64, offset: 768)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1425, file: !151, line: 936, baseType: !5466, size: 192, offset: 832)
!5466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !151, line: 885, size: 192, elements: !5467)
!5467 = !{!5468, !5469, !5470, !5471, !5472, !5473}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5466, file: !151, line: 886, baseType: !5277)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5466, file: !151, line: 887, baseType: !3698, size: 64)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5466, file: !151, line: 888, baseType: !159, size: 32, offset: 64)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5466, file: !151, line: 889, baseType: !1499, size: 32, offset: 96)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5466, file: !151, line: 889, baseType: !1499, size: 32, offset: 128)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5466, file: !151, line: 890, baseType: !260, size: 32, offset: 160)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1425, file: !151, line: 937, baseType: !3763, size: 64, offset: 1024)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1425, file: !151, line: 938, baseType: !5476, size: 256, offset: 1088)
!5476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !151, line: 896, size: 256, elements: !5477)
!5477 = !{!5478, !5479, !5480, !5481, !5482, !5483}
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5476, file: !151, line: 897, baseType: !1186, size: 64)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5476, file: !151, line: 898, baseType: !7, size: 32, offset: 64)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5476, file: !151, line: 899, baseType: !7, size: 32, offset: 96)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5476, file: !151, line: 902, baseType: !7, size: 32, offset: 128)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5476, file: !151, line: 903, baseType: !7, size: 32, offset: 160)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5476, file: !151, line: 904, baseType: !1595, size: 64, offset: 192)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1425, file: !151, line: 940, baseType: !1229, size: 64, offset: 1344)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1425, file: !151, line: 945, baseType: !1187, size: 64, offset: 1408)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1425, file: !151, line: 949, baseType: !1205, size: 128, offset: 1472)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1425, file: !151, line: 950, baseType: !1205, size: 128, offset: 1600)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1425, file: !151, line: 952, baseType: !1864, size: 64, offset: 1728)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1425, file: !151, line: 953, baseType: !3162, size: 32, offset: 1792)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1425, file: !151, line: 954, baseType: !3162, size: 32, offset: 1824)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1415, file: !1374, line: 174, baseType: !1421, size: 64, offset: 320)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1415, file: !1374, line: 176, baseType: !5493, size: 64, offset: 384)
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 64)
!5494 = !DISubroutineType(types: !5495)
!5495 = !{!260, !1424, !1301, !1414, !3233}
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1403, file: !1374, line: 90, baseType: !1398, size: 64, offset: 192)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1403, file: !1374, line: 91, baseType: !5498, size: 64, offset: 256)
!5498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1364, file: !1296, line: 143, baseType: !5500, size: 64, offset: 256)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!5503, !1301}
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5505)
!5505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !132, line: 39, size: 384, elements: !5506)
!5506 = !{!5507, !5508, !5512, !5516, !5522, !5526}
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5505, file: !132, line: 40, baseType: !131, size: 32)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !5505, file: !132, line: 41, baseType: !5509, size: 64, offset: 64)
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 64)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{!1554}
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !5505, file: !132, line: 42, baseType: !5513, size: 64, offset: 128)
!5513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5514, size: 64)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!1187}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !5505, file: !132, line: 43, baseType: !5517, size: 64, offset: 192)
!5517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5518, size: 64)
!5518 = !DISubroutineType(types: !5519)
!5519 = !{!4475, !5520}
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 64)
!5521 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !132, line: 19, flags: DIFlagFwdDecl)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !5505, file: !132, line: 44, baseType: !5523, size: 64, offset: 256)
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5524, size: 64)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!4475}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !5505, file: !132, line: 45, baseType: !1532, size: 64, offset: 320)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1364, file: !1296, line: 144, baseType: !5528, size: 64, offset: 320)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DISubroutineType(types: !5530)
!5530 = !{!4475, !1301}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1364, file: !1296, line: 145, baseType: !5532, size: 64, offset: 384)
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5533, size: 64)
!5533 = !DISubroutineType(types: !5534)
!5534 = !{null, !1301, !4037, !4038}
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1295, file: !1296, line: 70, baseType: !5536, size: 64, offset: 384)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64)
!5537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1683, line: 123, size: 1024, elements: !5538)
!5538 = !{!5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5655, !5656, !5657, !5658, !5659}
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5537, file: !1683, line: 124, baseType: !1877, size: 32)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5537, file: !1683, line: 125, baseType: !1877, size: 32, offset: 32)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5537, file: !1683, line: 135, baseType: !5536, size: 64, offset: 64)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5537, file: !1683, line: 136, baseType: !1235, size: 64, offset: 128)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5537, file: !1683, line: 138, baseType: !1890, size: 192, align: 64, offset: 192)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5537, file: !1683, line: 140, baseType: !4475, size: 64, offset: 384)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5537, file: !1683, line: 141, baseType: !7, size: 32, offset: 448)
!5546 = !DIDerivedType(tag: DW_TAG_member, scope: !5537, file: !1683, line: 142, baseType: !5547, size: 256, offset: 512)
!5547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5537, file: !1683, line: 142, size: 256, elements: !5548)
!5548 = !{!5549, !5595, !5599}
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5547, file: !1683, line: 143, baseType: !5550, size: 192)
!5550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1683, line: 91, size: 192, elements: !5551)
!5551 = !{!5552, !5553, !5554}
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5550, file: !1683, line: 92, baseType: !1186, size: 64)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5550, file: !1683, line: 94, baseType: !1886, size: 64, offset: 64)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5550, file: !1683, line: 100, baseType: !5555, size: 64, offset: 128)
!5555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5556, size: 64)
!5556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1683, line: 180, size: 704, elements: !5557)
!5557 = !{!5558, !5559, !5560, !5567, !5568, !5569, !5593, !5594}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5556, file: !1683, line: 182, baseType: !5536, size: 64)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5556, file: !1683, line: 183, baseType: !7, size: 32, offset: 64)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5556, file: !1683, line: 186, baseType: !5561, size: 192, offset: 128)
!5561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !5562, line: 19, size: 192, elements: !5563)
!5562 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!5563 = !{!5564, !5565, !5566}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !5561, file: !5562, line: 20, baseType: !1869, size: 128)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !5561, file: !5562, line: 21, baseType: !7, size: 32, offset: 128)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !5561, file: !5562, line: 22, baseType: !7, size: 32, offset: 160)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5556, file: !1683, line: 187, baseType: !1266, size: 32, offset: 320)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5556, file: !1683, line: 188, baseType: !1266, size: 32, offset: 352)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5556, file: !1683, line: 189, baseType: !5570, size: 64, offset: 384)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1683, line: 168, size: 320, elements: !5572)
!5572 = !{!5573, !5577, !5581, !5585, !5589}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5571, file: !1683, line: 169, baseType: !5574, size: 64)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!260, !1792, !5555}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5571, file: !1683, line: 171, baseType: !5578, size: 64, offset: 64)
!5578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5579, size: 64)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!260, !5536, !1235, !1389}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5571, file: !1683, line: 173, baseType: !5582, size: 64, offset: 128)
!5582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5583, size: 64)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!260, !5536}
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5571, file: !1683, line: 174, baseType: !5586, size: 64, offset: 192)
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!260, !5536, !5536, !1235}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5571, file: !1683, line: 176, baseType: !5590, size: 64, offset: 256)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{!260, !1792, !5536, !5555}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5556, file: !1683, line: 192, baseType: !1205, size: 128, offset: 448)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5556, file: !1683, line: 194, baseType: !2298, size: 128, offset: 576)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5547, file: !1683, line: 144, baseType: !5596, size: 64)
!5596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1683, line: 103, size: 64, elements: !5597)
!5597 = !{!5598}
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !5596, file: !1683, line: 104, baseType: !5536, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5547, file: !1683, line: 145, baseType: !5600, size: 256)
!5600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1683, line: 107, size: 256, elements: !5601)
!5601 = !{!5602, !5650, !5653, !5654}
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5600, file: !1683, line: 108, baseType: !5603, size: 64)
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5604, size: 64)
!5604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5605)
!5605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1683, line: 217, size: 768, elements: !5606)
!5606 = !{!5607, !5627, !5631, !5632, !5633, !5634, !5635, !5639, !5640, !5641, !5642, !5646}
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5605, file: !1683, line: 222, baseType: !5608, size: 64)
!5608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5609, size: 64)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!260, !5611}
!5611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5612, size: 64)
!5612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1683, line: 197, size: 1088, elements: !5613)
!5613 = !{!5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626}
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5612, file: !1683, line: 199, baseType: !5536, size: 64)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5612, file: !1683, line: 200, baseType: !1424, size: 64, offset: 64)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !5612, file: !1683, line: 201, baseType: !1792, size: 64, offset: 128)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5612, file: !1683, line: 202, baseType: !1187, size: 64, offset: 192)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5612, file: !1683, line: 205, baseType: !1804, size: 192, offset: 256)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !5612, file: !1683, line: 206, baseType: !1804, size: 192, offset: 448)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5612, file: !1683, line: 207, baseType: !260, size: 32, offset: 640)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5612, file: !1683, line: 208, baseType: !1205, size: 128, offset: 704)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !5612, file: !1683, line: 209, baseType: !1349, size: 64, offset: 832)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5612, file: !1683, line: 211, baseType: !1394, size: 64, offset: 896)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !5612, file: !1683, line: 212, baseType: !1554, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !5612, file: !1683, line: 213, baseType: !1554, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !5612, file: !1683, line: 214, baseType: !3261, size: 64, offset: 1024)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5605, file: !1683, line: 223, baseType: !5628, size: 64, offset: 64)
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{null, !5611}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !5605, file: !1683, line: 236, baseType: !1836, size: 64, offset: 128)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !5605, file: !1683, line: 238, baseType: !1823, size: 64, offset: 192)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !5605, file: !1683, line: 239, baseType: !1832, size: 64, offset: 256)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !5605, file: !1683, line: 240, baseType: !1828, size: 64, offset: 320)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5605, file: !1683, line: 242, baseType: !5636, size: 64, offset: 384)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!1380, !5611, !1349, !1394, !1595}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5605, file: !1683, line: 252, baseType: !1394, size: 64, offset: 448)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !5605, file: !1683, line: 259, baseType: !1554, size: 8, offset: 512)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5605, file: !1683, line: 260, baseType: !5636, size: 64, offset: 576)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5605, file: !1683, line: 263, baseType: !5643, size: 64, offset: 640)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 64)
!5644 = !DISubroutineType(types: !5645)
!5645 = !{!5220, !5611, !5221}
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5605, file: !1683, line: 266, baseType: !5647, size: 64, offset: 704)
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{!260, !5611, !3233}
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5600, file: !1683, line: 109, baseType: !5651, size: 64, offset: 64)
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 64)
!5652 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1683, line: 31, flags: DIFlagFwdDecl)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5600, file: !1683, line: 110, baseType: !1595, size: 64, offset: 128)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !5600, file: !1683, line: 111, baseType: !5536, size: 64, offset: 192)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5537, file: !1683, line: 148, baseType: !1187, size: 64, offset: 768)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5537, file: !1683, line: 154, baseType: !1229, size: 64, offset: 832)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5537, file: !1683, line: 156, baseType: !1183, size: 16, offset: 896)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5537, file: !1683, line: 157, baseType: !1389, size: 16, offset: 912)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !5537, file: !1683, line: 158, baseType: !5660, size: 64, offset: 960)
!5660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5661, size: 64)
!5661 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1683, line: 32, flags: DIFlagFwdDecl)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1295, file: !1296, line: 71, baseType: !2880, size: 32, offset: 448)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1295, file: !1296, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1295, file: !1296, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1295, file: !1296, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1295, file: !1296, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1295, file: !1296, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1292, file: !25, line: 463, baseType: !1291, size: 64, offset: 512)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1292, file: !25, line: 465, baseType: !5670, size: 64, offset: 576)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !25, line: 36, flags: DIFlagFwdDecl)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1292, file: !25, line: 467, baseType: !1235, size: 64, offset: 640)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !25, line: 468, baseType: !5674, size: 64, offset: 704)
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 64)
!5675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5676)
!5676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !25, line: 87, size: 384, elements: !5677)
!5677 = !{!5678, !5679, !5680, !5684, !5688, !5692}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5676, file: !25, line: 88, baseType: !1235, size: 64)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5676, file: !25, line: 89, baseType: !1400, size: 64, offset: 64)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5676, file: !25, line: 90, baseType: !5681, size: 64, offset: 128)
!5681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5682, size: 64)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{!260, !1291, !1344}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5676, file: !25, line: 91, baseType: !5685, size: 64, offset: 192)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!1349, !1291, !2385, !4037, !4038}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5676, file: !25, line: 93, baseType: !5689, size: 64, offset: 256)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{null, !1291}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5676, file: !25, line: 95, baseType: !5693, size: 64, offset: 320)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5695)
!5695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !37, line: 278, size: 1472, elements: !5696)
!5696 = !{!5697, !5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5695, file: !37, line: 279, baseType: !5698, size: 64)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{!260, !1291}
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5695, file: !37, line: 280, baseType: !5689, size: 64, offset: 64)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5695, file: !37, line: 281, baseType: !5698, size: 64, offset: 128)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5695, file: !37, line: 282, baseType: !5698, size: 64, offset: 192)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !5695, file: !37, line: 283, baseType: !5698, size: 64, offset: 256)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !5695, file: !37, line: 284, baseType: !5698, size: 64, offset: 320)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !5695, file: !37, line: 285, baseType: !5698, size: 64, offset: 384)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !5695, file: !37, line: 286, baseType: !5698, size: 64, offset: 448)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !5695, file: !37, line: 287, baseType: !5698, size: 64, offset: 512)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !5695, file: !37, line: 288, baseType: !5698, size: 64, offset: 576)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !5695, file: !37, line: 289, baseType: !5698, size: 64, offset: 640)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !5695, file: !37, line: 290, baseType: !5698, size: 64, offset: 704)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !5695, file: !37, line: 291, baseType: !5698, size: 64, offset: 768)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !5695, file: !37, line: 292, baseType: !5698, size: 64, offset: 832)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !5695, file: !37, line: 293, baseType: !5698, size: 64, offset: 896)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !5695, file: !37, line: 294, baseType: !5698, size: 64, offset: 960)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !5695, file: !37, line: 295, baseType: !5698, size: 64, offset: 1024)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !5695, file: !37, line: 296, baseType: !5698, size: 64, offset: 1088)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !5695, file: !37, line: 297, baseType: !5698, size: 64, offset: 1152)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !5695, file: !37, line: 298, baseType: !5698, size: 64, offset: 1216)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5695, file: !37, line: 299, baseType: !5698, size: 64, offset: 1280)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5695, file: !37, line: 300, baseType: !5698, size: 64, offset: 1344)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !5695, file: !37, line: 301, baseType: !5698, size: 64, offset: 1408)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1292, file: !25, line: 470, baseType: !5724, size: 64, offset: 768)
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !5726, line: 82, size: 1408, elements: !5727)
!5726 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!5727 = !{!5728, !5729, !5730, !5731, !5732, !5733, !5734, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5809, !5812, !5813}
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5725, file: !5726, line: 83, baseType: !1235, size: 64)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5725, file: !5726, line: 84, baseType: !1235, size: 64, offset: 64)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !5725, file: !5726, line: 85, baseType: !1291, size: 64, offset: 128)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !5725, file: !5726, line: 86, baseType: !1400, size: 64, offset: 192)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5725, file: !5726, line: 87, baseType: !1400, size: 64, offset: 256)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !5725, file: !5726, line: 88, baseType: !1400, size: 64, offset: 320)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5725, file: !5726, line: 90, baseType: !5735, size: 64, offset: 384)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{!260, !1291, !5738}
!5738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5739, size: 64)
!5739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !19, line: 95, size: 1152, elements: !5740)
!5740 = !{!5741, !5742, !5743, !5744, !5745, !5746, !5747, !5760, !5773, !5774, !5775, !5776, !5777, !5785, !5786, !5787, !5788, !5789, !5790}
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5739, file: !19, line: 96, baseType: !1235, size: 64)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5739, file: !19, line: 97, baseType: !5724, size: 64, offset: 64)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5739, file: !19, line: 99, baseType: !1697, size: 64, offset: 128)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !5739, file: !19, line: 100, baseType: !1235, size: 64, offset: 192)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !5739, file: !19, line: 102, baseType: !1554, size: 8, offset: 256)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !5739, file: !19, line: 103, baseType: !18, size: 32, offset: 288)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !5739, file: !19, line: 105, baseType: !5748, size: 64, offset: 320)
!5748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5749, size: 64)
!5749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5750)
!5750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !5751, line: 262, size: 1600, elements: !5752)
!5751 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!5752 = !{!5753, !5754, !5755, !5759}
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5750, file: !5751, line: 263, baseType: !2186, size: 256)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5750, file: !5751, line: 264, baseType: !2186, size: 256, offset: 256)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !5750, file: !5751, line: 265, baseType: !5756, size: 1024, offset: 512)
!5756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 1024, elements: !5757)
!5757 = !{!5758}
!5758 = !DISubrange(count: 128)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5750, file: !5751, line: 266, baseType: !4475, size: 64, offset: 1536)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !5739, file: !19, line: 106, baseType: !5761, size: 64, offset: 384)
!5761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5763)
!5763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !5751, line: 210, size: 256, elements: !5764)
!5764 = !{!5765, !5769, !5771, !5772}
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5763, file: !5751, line: 211, baseType: !5766, size: 72)
!5766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 72, elements: !5767)
!5767 = !{!5768}
!5768 = !DISubrange(count: 9)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5763, file: !5751, line: 212, baseType: !5770, size: 64, offset: 128)
!5770 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !5751, line: 14, baseType: !1186)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !5763, file: !5751, line: 213, baseType: !1179, size: 32, offset: 192)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !5763, file: !5751, line: 214, baseType: !1179, size: 32, offset: 224)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5739, file: !19, line: 108, baseType: !5698, size: 64, offset: 448)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5739, file: !19, line: 109, baseType: !5689, size: 64, offset: 512)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5739, file: !19, line: 110, baseType: !5698, size: 64, offset: 576)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5739, file: !19, line: 111, baseType: !5689, size: 64, offset: 640)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5739, file: !19, line: 112, baseType: !5778, size: 64, offset: 704)
!5778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5779, size: 64)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!260, !1291, !5781}
!5781 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !37, line: 52, baseType: !5782)
!5782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !37, line: 50, size: 32, elements: !5783)
!5783 = !{!5784}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5782, file: !37, line: 51, baseType: !260, size: 32)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5739, file: !19, line: 113, baseType: !5698, size: 64, offset: 768)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5739, file: !19, line: 114, baseType: !1400, size: 64, offset: 832)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5739, file: !19, line: 115, baseType: !1400, size: 64, offset: 896)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5739, file: !19, line: 117, baseType: !5693, size: 64, offset: 960)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !5739, file: !19, line: 118, baseType: !5689, size: 64, offset: 1024)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5739, file: !19, line: 120, baseType: !5791, size: 64, offset: 1088)
!5791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5792, size: 64)
!5792 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !19, line: 120, flags: DIFlagFwdDecl)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5725, file: !5726, line: 91, baseType: !5681, size: 64, offset: 448)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5725, file: !5726, line: 92, baseType: !5698, size: 64, offset: 512)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5725, file: !5726, line: 93, baseType: !5689, size: 64, offset: 576)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5725, file: !5726, line: 94, baseType: !5698, size: 64, offset: 640)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5725, file: !5726, line: 95, baseType: !5689, size: 64, offset: 704)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !5725, file: !5726, line: 97, baseType: !5698, size: 64, offset: 768)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5725, file: !5726, line: 98, baseType: !5698, size: 64, offset: 832)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5725, file: !5726, line: 100, baseType: !5778, size: 64, offset: 896)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5725, file: !5726, line: 101, baseType: !5698, size: 64, offset: 960)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !5725, file: !5726, line: 103, baseType: !5698, size: 64, offset: 1024)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !5725, file: !5726, line: 105, baseType: !5698, size: 64, offset: 1088)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5725, file: !5726, line: 107, baseType: !5693, size: 64, offset: 1152)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !5725, file: !5726, line: 109, baseType: !5806, size: 64, offset: 1216)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5807, size: 64)
!5807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5808)
!5808 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !5726, line: 109, flags: DIFlagFwdDecl)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5725, file: !5726, line: 111, baseType: !5810, size: 64, offset: 1280)
!5810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5811, size: 64)
!5811 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !5726, line: 111, flags: DIFlagFwdDecl)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !5725, file: !5726, line: 112, baseType: !1712, offset: 1344)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !5725, file: !5726, line: 114, baseType: !1554, size: 8, offset: 1344)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1292, file: !25, line: 471, baseType: !5738, size: 64, offset: 832)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1292, file: !25, line: 473, baseType: !1187, size: 64, offset: 896)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1292, file: !25, line: 475, baseType: !1187, size: 64, offset: 960)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1292, file: !25, line: 480, baseType: !1804, size: 192, offset: 1024)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1292, file: !25, line: 484, baseType: !5819, size: 576, offset: 1216)
!5819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !25, line: 361, size: 576, elements: !5820)
!5820 = !{!5821, !5822, !5823, !5824, !5825, !5826}
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !5819, file: !25, line: 362, baseType: !1205, size: 128)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !5819, file: !25, line: 363, baseType: !1205, size: 128, offset: 128)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !5819, file: !25, line: 364, baseType: !1205, size: 128, offset: 256)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !5819, file: !25, line: 365, baseType: !1205, size: 128, offset: 384)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !5819, file: !25, line: 366, baseType: !1554, size: 8, offset: 512)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5819, file: !25, line: 367, baseType: !24, size: 32, offset: 544)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1292, file: !25, line: 485, baseType: !5828, size: 2304, offset: 1792)
!5828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !37, line: 565, size: 2304, elements: !5829)
!5829 = !{!5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839, !5840, !5841, !5842, !5843, !5844, !5845, !5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5914, !5918}
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !5828, file: !37, line: 566, baseType: !5781, size: 32)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !5828, file: !37, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !5828, file: !37, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !5828, file: !37, line: 569, baseType: !1554, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !5828, file: !37, line: 570, baseType: !1554, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !5828, file: !37, line: 571, baseType: !1554, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !5828, file: !37, line: 572, baseType: !1554, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !5828, file: !37, line: 573, baseType: !1554, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !5828, file: !37, line: 574, baseType: !1554, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !5828, file: !37, line: 575, baseType: !1554, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !5828, file: !37, line: 576, baseType: !1554, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !5828, file: !37, line: 577, baseType: !1266, size: 32, offset: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5828, file: !37, line: 578, baseType: !1308, offset: 96)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5828, file: !37, line: 580, baseType: !1205, size: 128, offset: 128)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5828, file: !37, line: 581, baseType: !3723, size: 192, offset: 256)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5828, file: !37, line: 582, baseType: !5846, size: 64, offset: 448)
!5846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5847, size: 64)
!5847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !5848, line: 43, size: 1472, elements: !5849)
!5848 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!5849 = !{!5850, !5851, !5852, !5853, !5854, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5847, file: !5848, line: 44, baseType: !1235, size: 64)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5847, file: !5848, line: 45, baseType: !260, size: 32, offset: 64)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5847, file: !5848, line: 46, baseType: !1205, size: 128, offset: 128)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5847, file: !5848, line: 47, baseType: !1308, offset: 256)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5847, file: !5848, line: 48, baseType: !5855, size: 64, offset: 256)
!5855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5856, size: 64)
!5856 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !37, line: 533, flags: DIFlagFwdDecl)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5847, file: !5848, line: 49, baseType: !2419, size: 320, offset: 320)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5847, file: !5848, line: 50, baseType: !1186, size: 64, offset: 640)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !5847, file: !5848, line: 51, baseType: !3538, size: 64, offset: 704)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !5847, file: !5848, line: 52, baseType: !3538, size: 64, offset: 768)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !5847, file: !5848, line: 53, baseType: !3538, size: 64, offset: 832)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !5847, file: !5848, line: 54, baseType: !3538, size: 64, offset: 896)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !5847, file: !5848, line: 55, baseType: !3538, size: 64, offset: 960)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !5847, file: !5848, line: 56, baseType: !1186, size: 64, offset: 1024)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !5847, file: !5848, line: 57, baseType: !1186, size: 64, offset: 1088)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !5847, file: !5848, line: 58, baseType: !1186, size: 64, offset: 1152)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !5847, file: !5848, line: 59, baseType: !1186, size: 64, offset: 1216)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !5847, file: !5848, line: 60, baseType: !1186, size: 64, offset: 1280)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5847, file: !5848, line: 61, baseType: !1291, size: 64, offset: 1344)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5847, file: !5848, line: 62, baseType: !1554, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !5847, file: !5848, line: 63, baseType: !1554, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !5828, file: !37, line: 583, baseType: !1554, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !5828, file: !37, line: 584, baseType: !1554, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !5828, file: !37, line: 585, baseType: !1554, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !5828, file: !37, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !5828, file: !37, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !5828, file: !37, line: 592, baseType: !3530, size: 512, offset: 576)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5828, file: !37, line: 593, baseType: !1229, size: 64, offset: 1088)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5828, file: !37, line: 594, baseType: !2162, size: 256, offset: 1152)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !5828, file: !37, line: 595, baseType: !2298, size: 128, offset: 1408)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5828, file: !37, line: 596, baseType: !5855, size: 64, offset: 1536)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !5828, file: !37, line: 597, baseType: !1877, size: 32, offset: 1600)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !5828, file: !37, line: 598, baseType: !1877, size: 32, offset: 1632)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !5828, file: !37, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !5828, file: !37, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !5828, file: !37, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !5828, file: !37, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !5828, file: !37, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !5828, file: !37, line: 604, baseType: !1554, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !5828, file: !37, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !5828, file: !37, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !5828, file: !37, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !5828, file: !37, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !5828, file: !37, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !5828, file: !37, line: 610, baseType: !7, size: 32, offset: 1696)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5828, file: !37, line: 611, baseType: !36, size: 32, offset: 1728)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !5828, file: !37, line: 612, baseType: !44, size: 32, offset: 1760)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !5828, file: !37, line: 613, baseType: !260, size: 32, offset: 1792)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !5828, file: !37, line: 614, baseType: !260, size: 32, offset: 1824)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !5828, file: !37, line: 615, baseType: !1229, size: 64, offset: 1856)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !5828, file: !37, line: 616, baseType: !1229, size: 64, offset: 1920)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !5828, file: !37, line: 617, baseType: !1229, size: 64, offset: 1984)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !5828, file: !37, line: 618, baseType: !1229, size: 64, offset: 2048)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !5828, file: !37, line: 620, baseType: !5905, size: 64, offset: 2112)
!5905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5906, size: 64)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !37, line: 536, size: 256, elements: !5907)
!5907 = !{!5908, !5909, !5910, !5911}
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5906, file: !37, line: 537, baseType: !1308)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5906, file: !37, line: 538, baseType: !7, size: 32)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !5906, file: !37, line: 540, baseType: !1205, size: 128, offset: 64)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !5906, file: !37, line: 543, baseType: !5912, size: 64, offset: 192)
!5912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5913, size: 64)
!5913 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !37, line: 534, flags: DIFlagFwdDecl)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !5828, file: !37, line: 621, baseType: !5915, size: 64, offset: 2176)
!5915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5916, size: 64)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{null, !1291, !3672}
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5828, file: !37, line: 622, baseType: !5919, size: 64, offset: 2240)
!5919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5920, size: 64)
!5920 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !37, line: 622, flags: DIFlagFwdDecl)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1292, file: !25, line: 486, baseType: !5922, size: 64, offset: 4096)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !37, line: 642, size: 1792, elements: !5924)
!5924 = !{!5925, !5926, !5927, !5931, !5932, !5933}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5923, file: !37, line: 643, baseType: !5695, size: 1472)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5923, file: !37, line: 644, baseType: !5698, size: 64, offset: 1472)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5923, file: !37, line: 645, baseType: !5928, size: 64, offset: 1536)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 64)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{null, !1291, !1554}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5923, file: !37, line: 646, baseType: !5698, size: 64, offset: 1600)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5923, file: !37, line: 647, baseType: !5689, size: 64, offset: 1664)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5923, file: !37, line: 648, baseType: !5689, size: 64, offset: 1728)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1292, file: !25, line: 493, baseType: !5935, size: 64, offset: 4160)
!5935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5936, size: 64)
!5936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !51, line: 162, size: 1088, elements: !5937)
!5937 = !{!5938, !5939, !5940, !6209, !6210, !6211, !6212, !6213, !6214, !6338, !6339, !6340, !6341, !6342, !6343, !6344}
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5936, file: !51, line: 163, baseType: !1205, size: 128)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5936, file: !51, line: 164, baseType: !1235, size: 64, offset: 128)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5936, file: !51, line: 165, baseType: !5941, size: 64, offset: 192)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5943)
!5943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !51, line: 105, size: 640, elements: !5944)
!5944 = !{!5945, !6063, !6074, !6079, !6083, !6090, !6094, !6098, !6201, !6205}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5943, file: !51, line: 106, baseType: !5946, size: 64)
!5946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5947, size: 64)
!5947 = !DISubroutineType(types: !5948)
!5948 = !{!260, !5935, !5949, !50}
!5949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5950, size: 64)
!5950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5951, line: 51, size: 1344, elements: !5952)
!5951 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!5952 = !{!5953, !5954, !5956, !5957, !6047, !6056, !6057, !6058, !6059, !6060, !6061, !6062}
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5950, file: !5951, line: 52, baseType: !1235, size: 64)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !5950, file: !5951, line: 53, baseType: !5955, size: 32, offset: 64)
!5955 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !5951, line: 28, baseType: !1266)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !5950, file: !5951, line: 54, baseType: !1235, size: 64, offset: 128)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5950, file: !5951, line: 55, baseType: !5958, size: 192, offset: 192)
!5958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5959, line: 17, size: 192, elements: !5960)
!5959 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5960 = !{!5961, !5963, !6046}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5958, file: !5959, line: 18, baseType: !5962, size: 64)
!5962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5958, size: 64)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5958, file: !5959, line: 19, baseType: !5964, size: 64, offset: 64)
!5964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5965, size: 64)
!5965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5966)
!5966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5959, line: 110, size: 1152, elements: !5967)
!5967 = !{!5968, !5972, !5976, !5982, !5988, !5992, !5996, !6001, !6005, !6006, !6010, !6014, !6018, !6029, !6030, !6031, !6032, !6042}
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5966, file: !5959, line: 111, baseType: !5969, size: 64)
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!5962, !5962}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5966, file: !5959, line: 112, baseType: !5973, size: 64, offset: 64)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{null, !5962}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5966, file: !5959, line: 113, baseType: !5977, size: 64, offset: 128)
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 64)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!1554, !5980}
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5958)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5966, file: !5959, line: 114, baseType: !5983, size: 64, offset: 192)
!5983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5984, size: 64)
!5984 = !DISubroutineType(types: !5985)
!5985 = !{!4475, !5980, !5986}
!5986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5987, size: 64)
!5987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1292)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5966, file: !5959, line: 116, baseType: !5989, size: 64, offset: 256)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5990, size: 64)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!1554, !5980, !1235}
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5966, file: !5959, line: 118, baseType: !5993, size: 64, offset: 320)
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 64)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!260, !5980, !1235, !7, !1187, !1394}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5966, file: !5959, line: 123, baseType: !5997, size: 64, offset: 384)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{!260, !5980, !1235, !6000, !1394}
!6000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5966, file: !5959, line: 126, baseType: !6002, size: 64, offset: 448)
!6002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6003, size: 64)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!1235, !5980}
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5966, file: !5959, line: 127, baseType: !6002, size: 64, offset: 512)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5966, file: !5959, line: 128, baseType: !6007, size: 64, offset: 576)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 64)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!5962, !5980}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5966, file: !5959, line: 130, baseType: !6011, size: 64, offset: 640)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!5962, !5980, !5962}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5966, file: !5959, line: 133, baseType: !6015, size: 64, offset: 704)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!5962, !5980, !1235}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5966, file: !5959, line: 135, baseType: !6019, size: 64, offset: 768)
!6019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6020, size: 64)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{!260, !5980, !1235, !1235, !7, !7, !6022}
!6022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6023, size: 64)
!6023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5959, line: 43, size: 640, elements: !6024)
!6024 = !{!6025, !6026, !6027}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6023, file: !5959, line: 44, baseType: !5962, size: 64)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6023, file: !5959, line: 45, baseType: !7, size: 32, offset: 64)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6023, file: !5959, line: 46, baseType: !6028, size: 512, offset: 128)
!6028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1229, size: 512, elements: !3568)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5966, file: !5959, line: 140, baseType: !6011, size: 64, offset: 832)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5966, file: !5959, line: 143, baseType: !6007, size: 64, offset: 896)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5966, file: !5959, line: 145, baseType: !5969, size: 64, offset: 960)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5966, file: !5959, line: 146, baseType: !6033, size: 64, offset: 1024)
!6033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6034, size: 64)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!260, !5980, !6036}
!6036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6037, size: 64)
!6037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5959, line: 29, size: 128, elements: !6038)
!6038 = !{!6039, !6040, !6041}
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6037, file: !5959, line: 30, baseType: !7, size: 32)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6037, file: !5959, line: 31, baseType: !7, size: 32, offset: 32)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6037, file: !5959, line: 32, baseType: !5980, size: 64, offset: 64)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5966, file: !5959, line: 148, baseType: !6043, size: 64, offset: 1088)
!6043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6044, size: 64)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{!260, !5980, !1291}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5958, file: !5959, line: 20, baseType: !1291, size: 64, offset: 128)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5950, file: !5951, line: 57, baseType: !6048, size: 64, offset: 384)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !5951, line: 31, size: 704, elements: !6050)
!6050 = !{!6051, !6052, !6053, !6054, !6055}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6049, file: !5951, line: 32, baseType: !1349, size: 64)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6049, file: !5951, line: 33, baseType: !260, size: 32, offset: 64)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6049, file: !5951, line: 34, baseType: !1187, size: 64, offset: 128)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6049, file: !5951, line: 35, baseType: !6048, size: 64, offset: 192)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6049, file: !5951, line: 43, baseType: !1415, size: 448, offset: 256)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !5950, file: !5951, line: 58, baseType: !6048, size: 64, offset: 448)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5950, file: !5951, line: 59, baseType: !5949, size: 64, offset: 512)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5950, file: !5951, line: 60, baseType: !5949, size: 64, offset: 576)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5950, file: !5951, line: 61, baseType: !5949, size: 64, offset: 640)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5950, file: !5951, line: 63, baseType: !1295, size: 512, offset: 704)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5950, file: !5951, line: 65, baseType: !1186, size: 64, offset: 1216)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5950, file: !5951, line: 66, baseType: !1187, size: 64, offset: 1280)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !5943, file: !51, line: 108, baseType: !6064, size: 64, offset: 64)
!6064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6065, size: 64)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!260, !5935, !6067, !50}
!6067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6068, size: 64)
!6068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !51, line: 63, size: 640, elements: !6069)
!6069 = !{!6070, !6071, !6072}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6068, file: !51, line: 64, baseType: !5962, size: 64)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !6068, file: !51, line: 65, baseType: !260, size: 32, offset: 64)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !6068, file: !51, line: 66, baseType: !6073, size: 512, offset: 96)
!6073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 512, elements: !2999)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5943, file: !51, line: 110, baseType: !6075, size: 64, offset: 128)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6076, size: 64)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!260, !5935, !7, !6078}
!6078 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !1176, line: 164, baseType: !1186)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !5943, file: !51, line: 111, baseType: !6080, size: 64, offset: 192)
!6080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6081, size: 64)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{null, !5935, !7}
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !5943, file: !51, line: 112, baseType: !6084, size: 64, offset: 256)
!6084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6085, size: 64)
!6085 = !DISubroutineType(types: !6086)
!6086 = !{!260, !5935, !5949, !6087, !7, !6089, !2084}
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 64)
!6088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!6089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5943, file: !51, line: 117, baseType: !6091, size: 64, offset: 320)
!6091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6092, size: 64)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!260, !5935, !7, !7, !1187}
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5943, file: !51, line: 119, baseType: !6095, size: 64, offset: 384)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DISubroutineType(types: !6097)
!6097 = !{null, !5935, !7, !7}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5943, file: !51, line: 121, baseType: !6099, size: 64, offset: 448)
!6099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6100, size: 64)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{!260, !5935, !6102, !1554}
!6102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6103, size: 64)
!6103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !72, line: 175, size: 448, elements: !6104)
!6104 = !{!6105, !6106, !6107, !6108, !6118, !6198, !6199, !6200}
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6103, file: !72, line: 176, baseType: !1266, size: 32)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !6103, file: !72, line: 177, baseType: !7, size: 32, offset: 32)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !6103, file: !72, line: 178, baseType: !1186, size: 64, offset: 64)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !6103, file: !72, line: 179, baseType: !6109, size: 64, offset: 128)
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6110, size: 64)
!6110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !72, line: 145, size: 256, elements: !6111)
!6111 = !{!6112, !6113, !6114, !6117}
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !6110, file: !72, line: 146, baseType: !7, size: 32)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !6110, file: !72, line: 150, baseType: !1187, size: 64, offset: 64)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !6110, file: !72, line: 151, baseType: !6115, size: 64, offset: 128)
!6115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6116, size: 64)
!6116 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !72, line: 127, flags: DIFlagFwdDecl)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !6110, file: !72, line: 152, baseType: !2433, size: 64, offset: 192)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !6103, file: !72, line: 180, baseType: !6119, size: 64, offset: 192)
!6119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 64)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !72, line: 503, size: 2304, elements: !6121)
!6121 = !{!6122, !6123, !6124, !6128, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6145, !6149, !6153, !6154, !6155, !6156, !6157, !6158, !6159, !6160, !6161, !6162, !6166, !6167, !6168, !6174, !6175, !6179, !6183, !6187, !6191, !6195, !6196, !6197}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !6120, file: !72, line: 504, baseType: !1291, size: 64)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6120, file: !72, line: 505, baseType: !1235, size: 64, offset: 64)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !6120, file: !72, line: 506, baseType: !6125, size: 64, offset: 128)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{!7, !6102}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !6120, file: !72, line: 507, baseType: !6129, size: 64, offset: 192)
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6130, size: 64)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{null, !6102}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !6120, file: !72, line: 508, baseType: !6129, size: 64, offset: 256)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !6120, file: !72, line: 509, baseType: !6129, size: 64, offset: 320)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !6120, file: !72, line: 511, baseType: !6129, size: 64, offset: 384)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !6120, file: !72, line: 512, baseType: !6129, size: 64, offset: 448)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !6120, file: !72, line: 513, baseType: !6129, size: 64, offset: 512)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !6120, file: !72, line: 514, baseType: !6129, size: 64, offset: 576)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !6120, file: !72, line: 515, baseType: !6129, size: 64, offset: 640)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !6120, file: !72, line: 517, baseType: !6140, size: 64, offset: 704)
!6140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6141, size: 64)
!6141 = !DISubroutineType(types: !6142)
!6142 = !{!260, !6102, !6143, !1554}
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 64)
!6144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2436)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !6120, file: !72, line: 518, baseType: !6146, size: 64, offset: 768)
!6146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6147, size: 64)
!6147 = !DISubroutineType(types: !6148)
!6148 = !{!260, !6102}
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !6120, file: !72, line: 519, baseType: !6150, size: 64, offset: 832)
!6150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6151, size: 64)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!260, !6102, !7}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !6120, file: !72, line: 520, baseType: !6150, size: 64, offset: 896)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !6120, file: !72, line: 522, baseType: !6129, size: 64, offset: 960)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !6120, file: !72, line: 523, baseType: !6129, size: 64, offset: 1024)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !6120, file: !72, line: 525, baseType: !6129, size: 64, offset: 1088)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !6120, file: !72, line: 526, baseType: !6129, size: 64, offset: 1152)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !6120, file: !72, line: 528, baseType: !6129, size: 64, offset: 1216)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !6120, file: !72, line: 529, baseType: !6129, size: 64, offset: 1280)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !6120, file: !72, line: 530, baseType: !6129, size: 64, offset: 1344)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !6120, file: !72, line: 532, baseType: !6129, size: 64, offset: 1408)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !6120, file: !72, line: 534, baseType: !6163, size: 64, offset: 1472)
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6164, size: 64)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{null, !6102, !1792}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !6120, file: !72, line: 535, baseType: !6146, size: 64, offset: 1536)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !6120, file: !72, line: 536, baseType: !6129, size: 64, offset: 1600)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !6120, file: !72, line: 538, baseType: !6169, size: 64, offset: 1664)
!6169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6170, size: 64)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{null, !6102, !6172}
!6172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6173, size: 64)
!6173 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !72, line: 29, flags: DIFlagFwdDecl)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !6120, file: !72, line: 539, baseType: !6169, size: 64, offset: 1728)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !6120, file: !72, line: 541, baseType: !6176, size: 64, offset: 1792)
!6176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6177, size: 64)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!260, !6102, !64, !2037}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !6120, file: !72, line: 542, baseType: !6180, size: 64, offset: 1856)
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 64)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{!260, !6102, !64, !1554}
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !6120, file: !72, line: 544, baseType: !6184, size: 64, offset: 1920)
!6184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6185, size: 64)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{!260, !6102, !1187}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !6120, file: !72, line: 546, baseType: !6188, size: 64, offset: 1984)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6189, size: 64)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{null, !6102, !7}
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !6120, file: !72, line: 547, baseType: !6192, size: 64, offset: 2048)
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 64)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{null, !6102, !6143}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !6120, file: !72, line: 549, baseType: !6146, size: 64, offset: 2112)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !6120, file: !72, line: 550, baseType: !6129, size: 64, offset: 2176)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6120, file: !72, line: 552, baseType: !1186, size: 64, offset: 2240)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !6103, file: !72, line: 181, baseType: !5935, size: 64, offset: 256)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !6103, file: !72, line: 183, baseType: !6102, size: 64, offset: 320)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !6103, file: !72, line: 185, baseType: !1187, size: 64, offset: 384)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !5943, file: !51, line: 122, baseType: !6202, size: 64, offset: 512)
!6202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6203, size: 64)
!6203 = !DISubroutineType(types: !6204)
!6204 = !{null, !5935, !6102}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !5943, file: !51, line: 123, baseType: !6206, size: 64, offset: 576)
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6207, size: 64)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{!260, !5935, !6067, !6089, !2084}
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !5936, file: !51, line: 166, baseType: !1187, size: 64, offset: 256)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5936, file: !51, line: 167, baseType: !7, size: 32, offset: 320)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !5936, file: !51, line: 168, baseType: !7, size: 32, offset: 352)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5936, file: !51, line: 171, baseType: !5962, size: 64, offset: 384)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !5936, file: !51, line: 172, baseType: !50, size: 32, offset: 448)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5936, file: !51, line: 173, baseType: !6215, size: 64, offset: 512)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !72, line: 1101, size: 192, elements: !6217)
!6217 = !{!6218, !6219, !6220, !6221, !6222, !6223}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !6216, file: !72, line: 1102, baseType: !7, size: 32)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !6216, file: !72, line: 1103, baseType: !7, size: 32, offset: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !6216, file: !72, line: 1104, baseType: !7, size: 32, offset: 64)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !6216, file: !72, line: 1105, baseType: !7, size: 32, offset: 96)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !6216, file: !72, line: 1106, baseType: !71, size: 32, offset: 128)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !6216, file: !72, line: 1107, baseType: !6224, offset: 192)
!6224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6225, elements: !2200)
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 64)
!6226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !72, line: 1051, size: 960, elements: !6227)
!6227 = !{!6228, !6229, !6230, !6234, !6238, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6254, !6255, !6256}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6226, file: !72, line: 1052, baseType: !1903)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !6226, file: !72, line: 1053, baseType: !1187, size: 64)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !6226, file: !72, line: 1054, baseType: !6231, size: 64, offset: 64)
!6231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6232, size: 64)
!6232 = !DISubroutineType(types: !6233)
!6233 = !{!1266, !1187}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !6226, file: !72, line: 1055, baseType: !6235, size: 64, offset: 128)
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 64)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{null, !1266, !1187}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6226, file: !72, line: 1056, baseType: !6239, size: 64, offset: 192)
!6239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6240, size: 64)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{null, !6225}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6226, file: !72, line: 1057, baseType: !6239, size: 64, offset: 256)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !6226, file: !72, line: 1058, baseType: !7, size: 32, offset: 320)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !6226, file: !72, line: 1059, baseType: !7, size: 32, offset: 352)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !6226, file: !72, line: 1060, baseType: !1266, size: 32, offset: 384)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !6226, file: !72, line: 1061, baseType: !1266, size: 32, offset: 416)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !6226, file: !72, line: 1062, baseType: !1266, size: 32, offset: 448)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !6226, file: !72, line: 1063, baseType: !1266, size: 32, offset: 480)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !6226, file: !72, line: 1064, baseType: !1266, size: 32, offset: 512)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !6226, file: !72, line: 1065, baseType: !7, size: 32, offset: 544)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6226, file: !72, line: 1066, baseType: !1187, size: 64, offset: 576)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !6226, file: !72, line: 1067, baseType: !1186, size: 64, offset: 640)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6226, file: !72, line: 1068, baseType: !1186, size: 64, offset: 704)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !6226, file: !72, line: 1069, baseType: !5935, size: 64, offset: 768)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6226, file: !72, line: 1070, baseType: !1205, size: 128, offset: 832)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !6226, file: !72, line: 1071, baseType: !6257, offset: 960)
!6257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6258, elements: !2200)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !72, line: 1009, size: 2944, elements: !6259)
!6259 = !{!6260, !6261, !6271, !6335, !6336, !6337}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !6258, file: !72, line: 1010, baseType: !6120, size: 2304)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6258, file: !72, line: 1011, baseType: !6262, size: 448, offset: 2304)
!6262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !72, line: 986, size: 448, elements: !6263)
!6263 = !{!6264, !6265, !6266, !6267, !6268, !6269, !6270}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !6262, file: !72, line: 987, baseType: !1186, size: 64)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !6262, file: !72, line: 988, baseType: !1186, size: 64, offset: 64)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6262, file: !72, line: 989, baseType: !1186, size: 64, offset: 128)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !6262, file: !72, line: 990, baseType: !1186, size: 64, offset: 192)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !6262, file: !72, line: 991, baseType: !1186, size: 64, offset: 256)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6262, file: !72, line: 992, baseType: !1186, size: 64, offset: 320)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6262, file: !72, line: 993, baseType: !1186, size: 64, offset: 384)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6258, file: !72, line: 1012, baseType: !6272, size: 64, offset: 2752)
!6272 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !6273, line: 12, baseType: !6274)
!6273 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!6274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6275, size: 64)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{null, !6277}
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 64)
!6278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !6279, line: 55, size: 2880, elements: !6280)
!6279 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!6280 = !{!6281, !6282, !6283, !6284, !6285, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315, !6316, !6317, !6318, !6320, !6321, !6322, !6323, !6324, !6325, !6326, !6327, !6328, !6329, !6330, !6331, !6332, !6333, !6334}
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !6278, file: !6279, line: 56, baseType: !6110, size: 256)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !6278, file: !6279, line: 57, baseType: !6103, size: 448, offset: 256)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !6278, file: !6279, line: 58, baseType: !2084, size: 64, offset: 704)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !6278, file: !6279, line: 59, baseType: !6272, size: 64, offset: 768)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6278, file: !6279, line: 60, baseType: !6286, size: 64, offset: 832)
!6286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6287, size: 64)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !65, line: 110, size: 768, elements: !6288)
!6288 = !{!6289, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302, !6303, !6304, !6305, !6306}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6287, file: !65, line: 111, baseType: !6290, size: 64)
!6290 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !65, line: 92, baseType: !6291)
!6291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6292, size: 64)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!6294, !260, !1187}
!6294 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !80, line: 17, baseType: !79)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !6287, file: !65, line: 112, baseType: !1187, size: 64, offset: 64)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !6287, file: !65, line: 113, baseType: !1187, size: 64, offset: 128)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6287, file: !65, line: 114, baseType: !6286, size: 64, offset: 192)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !6287, file: !65, line: 115, baseType: !6290, size: 64, offset: 256)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !6287, file: !65, line: 116, baseType: !3459, size: 64, offset: 320)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6287, file: !65, line: 117, baseType: !6286, size: 64, offset: 384)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !6287, file: !65, line: 118, baseType: !7, size: 32, offset: 448)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6287, file: !65, line: 119, baseType: !7, size: 32, offset: 480)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !6287, file: !65, line: 120, baseType: !1186, size: 64, offset: 512)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !6287, file: !65, line: 121, baseType: !1186, size: 64, offset: 576)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6287, file: !65, line: 122, baseType: !1235, size: 64, offset: 640)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6287, file: !65, line: 123, baseType: !1276, size: 64, offset: 704)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !6278, file: !6279, line: 61, baseType: !7, size: 32, offset: 896)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !6278, file: !6279, line: 62, baseType: !7, size: 32, offset: 928)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !6278, file: !6279, line: 63, baseType: !7, size: 32, offset: 960)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !6278, file: !6279, line: 64, baseType: !7, size: 32, offset: 992)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !6278, file: !6279, line: 65, baseType: !7, size: 32, offset: 1024)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !6278, file: !6279, line: 66, baseType: !7, size: 32, offset: 1056)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !6278, file: !6279, line: 67, baseType: !1186, size: 64, offset: 1088)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !6278, file: !6279, line: 68, baseType: !7, size: 32, offset: 1152)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !6278, file: !6279, line: 69, baseType: !1877, size: 32, offset: 1184)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !6278, file: !6279, line: 70, baseType: !260, size: 32, offset: 1216)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6278, file: !6279, line: 71, baseType: !1903, offset: 1248)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !6278, file: !6279, line: 72, baseType: !6319, size: 64, offset: 1280)
!6319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !6278, file: !6279, line: 73, baseType: !6143, size: 64, offset: 1344)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !6278, file: !6279, line: 81, baseType: !1186, size: 64, offset: 1408)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !6278, file: !6279, line: 82, baseType: !1877, size: 32, offset: 1472)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !6278, file: !6279, line: 83, baseType: !2298, size: 128, offset: 1536)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !6278, file: !6279, line: 85, baseType: !7, size: 32, offset: 1664)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !6278, file: !6279, line: 86, baseType: !7, size: 32, offset: 1696)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !6278, file: !6279, line: 87, baseType: !7, size: 32, offset: 1728)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !6278, file: !6279, line: 88, baseType: !7, size: 32, offset: 1760)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6278, file: !6279, line: 91, baseType: !1276, size: 64, offset: 1792)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6278, file: !6279, line: 98, baseType: !1437, size: 128, align: 64, offset: 1856)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6278, file: !6279, line: 99, baseType: !1295, size: 512, offset: 1984)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !6278, file: !6279, line: 101, baseType: !1804, size: 192, offset: 2496)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !6278, file: !6279, line: 102, baseType: !260, size: 32, offset: 2688)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6278, file: !6279, line: 103, baseType: !1697, size: 64, offset: 2752)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6278, file: !6279, line: 104, baseType: !1235, size: 64, offset: 2816)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6258, file: !72, line: 1013, baseType: !1266, size: 32, offset: 2816)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !6258, file: !72, line: 1014, baseType: !1266, size: 32, offset: 2848)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !6258, file: !72, line: 1015, baseType: !1265, size: 64, offset: 2880)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5936, file: !51, line: 175, baseType: !5935, size: 64, offset: 576)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !5936, file: !51, line: 182, baseType: !6078, size: 64, offset: 640)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !5936, file: !51, line: 183, baseType: !7, size: 32, offset: 704)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !5936, file: !51, line: 184, baseType: !7, size: 32, offset: 736)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !5936, file: !51, line: 185, baseType: !1869, size: 128, offset: 768)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !5936, file: !51, line: 186, baseType: !1804, size: 192, offset: 896)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !5936, file: !51, line: 187, baseType: !6345, offset: 1088)
!6345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2200)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1292, file: !25, line: 499, baseType: !1205, size: 128, offset: 4224)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1292, file: !25, line: 502, baseType: !6348, size: 64, offset: 4352)
!6348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6349, size: 64)
!6349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6350)
!6350 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !25, line: 502, flags: DIFlagFwdDecl)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1292, file: !25, line: 504, baseType: !6352, size: 64, offset: 4416)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1292, file: !25, line: 505, baseType: !1229, size: 64, offset: 4480)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1292, file: !25, line: 510, baseType: !1229, size: 64, offset: 4544)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1292, file: !25, line: 511, baseType: !6356, size: 64, offset: 4608)
!6356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6357, size: 64)
!6357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6358)
!6358 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !25, line: 511, flags: DIFlagFwdDecl)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1292, file: !25, line: 513, baseType: !6360, size: 64, offset: 4672)
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !25, line: 288, size: 128, elements: !6362)
!6362 = !{!6363, !6364}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6361, file: !25, line: 293, baseType: !7, size: 32)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6361, file: !25, line: 294, baseType: !1186, size: 64, offset: 64)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1292, file: !25, line: 515, baseType: !1205, size: 128, offset: 4736)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1292, file: !25, line: 526, baseType: !6367, offset: 4864)
!6367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6368, line: 5, elements: !1322)
!6368 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1292, file: !25, line: 528, baseType: !5949, size: 64, offset: 4864)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1292, file: !25, line: 529, baseType: !5962, size: 64, offset: 4928)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1292, file: !25, line: 534, baseType: !1577, size: 32, offset: 4992)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1292, file: !25, line: 535, baseType: !1266, size: 32, offset: 5024)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1292, file: !25, line: 537, baseType: !1308, offset: 5056)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1292, file: !25, line: 538, baseType: !1205, size: 128, offset: 5056)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1292, file: !25, line: 540, baseType: !6376, size: 64, offset: 5184)
!6376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 64)
!6377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6378, line: 54, size: 960, elements: !6379)
!6378 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6379 = !{!6380, !6381, !6382, !6383, !6384, !6385, !6386, !6390, !6394, !6395, !6396, !6397, !6401, !6405, !6406}
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6377, file: !6378, line: 55, baseType: !1235, size: 64)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6377, file: !6378, line: 56, baseType: !1697, size: 64, offset: 64)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6377, file: !6378, line: 58, baseType: !1400, size: 64, offset: 128)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6377, file: !6378, line: 59, baseType: !1400, size: 64, offset: 192)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6377, file: !6378, line: 60, baseType: !1301, size: 64, offset: 256)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6377, file: !6378, line: 62, baseType: !5681, size: 64, offset: 320)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6377, file: !6378, line: 63, baseType: !6387, size: 64, offset: 384)
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6388, size: 64)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{!1349, !1291, !2385}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6377, file: !6378, line: 65, baseType: !6391, size: 64, offset: 448)
!6391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6392, size: 64)
!6392 = !DISubroutineType(types: !6393)
!6393 = !{null, !6376}
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6377, file: !6378, line: 66, baseType: !5689, size: 64, offset: 512)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6377, file: !6378, line: 68, baseType: !5698, size: 64, offset: 576)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6377, file: !6378, line: 70, baseType: !5503, size: 64, offset: 640)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6377, file: !6378, line: 71, baseType: !6398, size: 64, offset: 704)
!6398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6399, size: 64)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{!4475, !1291}
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6377, file: !6378, line: 73, baseType: !6402, size: 64, offset: 768)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{null, !1291, !4037, !4038}
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6377, file: !6378, line: 75, baseType: !5693, size: 64, offset: 832)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6377, file: !6378, line: 77, baseType: !5810, size: 64, offset: 896)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1292, file: !25, line: 541, baseType: !1400, size: 64, offset: 5248)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1292, file: !25, line: 543, baseType: !5689, size: 64, offset: 5312)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1292, file: !25, line: 544, baseType: !6410, size: 64, offset: 5376)
!6410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 64)
!6411 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !25, line: 45, flags: DIFlagFwdDecl)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1292, file: !25, line: 545, baseType: !6413, size: 64, offset: 5440)
!6413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6414, size: 64)
!6414 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !25, line: 47, flags: DIFlagFwdDecl)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1292, file: !25, line: 547, baseType: !1554, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1292, file: !25, line: 548, baseType: !1554, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1292, file: !25, line: 549, baseType: !1554, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1292, file: !25, line: 550, baseType: !1554, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1212, file: !1202, line: 635, baseType: !1292, size: 5568, offset: 2304)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !1212, file: !1202, line: 636, baseType: !1414, size: 64, offset: 7872)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !1212, file: !1202, line: 637, baseType: !1414, size: 64, offset: 7936)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !1212, file: !1202, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !1201, file: !1202, line: 312, baseType: !1211, size: 64, offset: 192)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !1201, file: !1202, line: 314, baseType: !1187, size: 64, offset: 256)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !1201, file: !1202, line: 315, baseType: !1276, size: 64, offset: 320)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !1201, file: !1202, line: 316, baseType: !6427, size: 64, offset: 384)
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6428, size: 64)
!6428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !1202, line: 69, size: 832, elements: !6429)
!6429 = !{!6430, !6431, !6432, !6435, !6436}
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6428, file: !1202, line: 70, baseType: !1211, size: 64)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6428, file: !1202, line: 71, baseType: !1205, size: 128, offset: 64)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !6428, file: !1202, line: 72, baseType: !6433, size: 64, offset: 192)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64)
!6434 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !1202, line: 72, flags: DIFlagFwdDecl)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !6428, file: !1202, line: 73, baseType: !1279, size: 8, offset: 256)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6428, file: !1202, line: 74, baseType: !1295, size: 512, offset: 320)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !1201, file: !1202, line: 318, baseType: !7, size: 32, offset: 448)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !1201, file: !1202, line: 319, baseType: !1183, size: 16, offset: 480)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1201, file: !1202, line: 320, baseType: !1183, size: 16, offset: 496)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !1201, file: !1202, line: 321, baseType: !1183, size: 16, offset: 512)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !1201, file: !1202, line: 322, baseType: !1183, size: 16, offset: 528)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1201, file: !1202, line: 323, baseType: !7, size: 32, offset: 544)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !1201, file: !1202, line: 324, baseType: !2109, size: 8, offset: 576)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !1201, file: !1202, line: 325, baseType: !2109, size: 8, offset: 584)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !1201, file: !1202, line: 330, baseType: !2109, size: 8, offset: 592)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !1201, file: !1202, line: 331, baseType: !2109, size: 8, offset: 600)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !1201, file: !1202, line: 332, baseType: !2109, size: 8, offset: 608)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !1201, file: !1202, line: 333, baseType: !2109, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !1201, file: !1202, line: 334, baseType: !2109, size: 8, offset: 624)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !1201, file: !1202, line: 335, baseType: !2109, size: 8, offset: 632)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !1201, file: !1202, line: 336, baseType: !1989, size: 16, offset: 640)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !1201, file: !1202, line: 337, baseType: !6089, size: 64, offset: 704)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1201, file: !1202, line: 339, baseType: !6454, size: 64, offset: 768)
!6454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 64)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !1202, line: 858, size: 2048, elements: !6456)
!6456 = !{!6457, !6458, !6459, !6471, !6475, !6479, !6483, !6487, !6488, !6492, !6511, !6512, !6513}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6455, file: !1202, line: 859, baseType: !1205, size: 128)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6455, file: !1202, line: 860, baseType: !1235, size: 64, offset: 128)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !6455, file: !1202, line: 861, baseType: !6460, size: 64, offset: 192)
!6460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6461, size: 64)
!6461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6462)
!6462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !5751, line: 38, size: 256, elements: !6463)
!6463 = !{!6464, !6465, !6466, !6467, !6468, !6469, !6470}
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !6462, file: !5751, line: 39, baseType: !1179, size: 32)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6462, file: !5751, line: 39, baseType: !1179, size: 32, offset: 32)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !6462, file: !5751, line: 40, baseType: !1179, size: 32, offset: 64)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !6462, file: !5751, line: 40, baseType: !1179, size: 32, offset: 96)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6462, file: !5751, line: 41, baseType: !1179, size: 32, offset: 128)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !6462, file: !5751, line: 41, baseType: !1179, size: 32, offset: 160)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6462, file: !5751, line: 42, baseType: !5770, size: 64, offset: 192)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6455, file: !1202, line: 862, baseType: !6472, size: 64, offset: 256)
!6472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6473, size: 64)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!260, !1200, !6460}
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6455, file: !1202, line: 863, baseType: !6476, size: 64, offset: 320)
!6476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6477, size: 64)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{null, !1200}
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6455, file: !1202, line: 864, baseType: !6480, size: 64, offset: 384)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!260, !1200, !5781}
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6455, file: !1202, line: 865, baseType: !6484, size: 64, offset: 448)
!6484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6485, size: 64)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{!260, !1200}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6455, file: !1202, line: 866, baseType: !6476, size: 64, offset: 512)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !6455, file: !1202, line: 867, baseType: !6489, size: 64, offset: 576)
!6489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 64)
!6490 = !DISubroutineType(types: !6491)
!6491 = !{!260, !1200, !260}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !6455, file: !1202, line: 868, baseType: !6493, size: 64, offset: 640)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6494, size: 64)
!6494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6495)
!6495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !1202, line: 795, size: 384, elements: !6496)
!6496 = !{!6497, !6503, !6507, !6508, !6509, !6510}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !6495, file: !1202, line: 797, baseType: !6498, size: 64)
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 64)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{!6501, !1200, !6502}
!6501 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !1202, line: 772, baseType: !7)
!6502 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !1202, line: 180, baseType: !7)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !6495, file: !1202, line: 801, baseType: !6504, size: 64, offset: 64)
!6504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6505, size: 64)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!6501, !1200}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !6495, file: !1202, line: 804, baseType: !6504, size: 64, offset: 128)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !6495, file: !1202, line: 807, baseType: !6476, size: 64, offset: 192)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !6495, file: !1202, line: 808, baseType: !6476, size: 64, offset: 256)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6495, file: !1202, line: 811, baseType: !6476, size: 64, offset: 320)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6455, file: !1202, line: 869, baseType: !1400, size: 64, offset: 704)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6455, file: !1202, line: 870, baseType: !5739, size: 1152, offset: 768)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !6455, file: !1202, line: 871, baseType: !6514, size: 128, offset: 1920)
!6514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !1202, line: 759, size: 128, elements: !6515)
!6515 = !{!6516, !6517}
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6514, file: !1202, line: 760, baseType: !1308)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6514, file: !1202, line: 761, baseType: !1205, size: 128)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1201, file: !1202, line: 340, baseType: !1229, size: 64, offset: 832)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1201, file: !1202, line: 346, baseType: !6361, size: 128, offset: 896)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !1201, file: !1202, line: 348, baseType: !6521, size: 32, offset: 1024)
!6521 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !1202, line: 155, baseType: !260)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !1201, file: !1202, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !1201, file: !1202, line: 352, baseType: !2109, size: 8, offset: 1064)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !1201, file: !1202, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !1201, file: !1202, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !1201, file: !1202, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !1201, file: !1202, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !1201, file: !1202, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !1201, file: !1202, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !1201, file: !1202, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !1201, file: !1202, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !1201, file: !1202, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !1201, file: !1202, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !1201, file: !1202, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !1201, file: !1202, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !1201, file: !1202, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !1201, file: !1202, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !1201, file: !1202, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !1201, file: !1202, line: 376, baseType: !7, size: 32, offset: 1120)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !1201, file: !1202, line: 377, baseType: !7, size: 32, offset: 1152)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !1201, file: !1202, line: 380, baseType: !6542, size: 64, offset: 1216)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !1202, line: 303, flags: DIFlagFwdDecl)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !1201, file: !1202, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !1201, file: !1202, line: 383, baseType: !260, size: 32, offset: 1312)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !1201, file: !1202, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !1201, file: !1202, line: 387, baseType: !6502, size: 32, offset: 1376)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1201, file: !1202, line: 388, baseType: !1292, size: 5568, offset: 1408)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !1201, file: !1202, line: 390, baseType: !260, size: 32, offset: 6976)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1201, file: !1202, line: 396, baseType: !7, size: 32, offset: 7008)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !1201, file: !1202, line: 397, baseType: !6552, size: 8704, offset: 7040)
!6552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1223, size: 8704, elements: !6553)
!6553 = !{!6554}
!6554 = !DISubrange(count: 17)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !1201, file: !1202, line: 399, baseType: !1554, size: 8, offset: 15744)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !1201, file: !1202, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !1201, file: !1202, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !1201, file: !1202, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !1201, file: !1202, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !1201, file: !1202, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !1201, file: !1202, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !1201, file: !1202, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !1201, file: !1202, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !1201, file: !1202, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !1201, file: !1202, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !1201, file: !1202, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !1201, file: !1202, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !1201, file: !1202, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !1201, file: !1202, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !1201, file: !1202, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !1201, file: !1202, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !1201, file: !1202, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !1201, file: !1202, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !1201, file: !1202, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !1201, file: !1202, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !1201, file: !1202, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !1201, file: !1202, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !1201, file: !1202, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !1201, file: !1202, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !1201, file: !1202, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !1201, file: !1202, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !1201, file: !1202, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !1201, file: !1202, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !1201, file: !1202, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !1201, file: !1202, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !1201, file: !1202, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !1201, file: !1202, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !1201, file: !1202, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !1201, file: !1202, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !1201, file: !1202, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !1201, file: !1202, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !1201, file: !1202, line: 450, baseType: !6593, size: 16, offset: 15792)
!6593 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !1202, line: 206, baseType: !1183)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !1201, file: !1202, line: 451, baseType: !1877, size: 32, offset: 15808)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !1201, file: !1202, line: 453, baseType: !6073, size: 512, offset: 15840)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !1201, file: !1202, line: 454, baseType: !1702, size: 64, offset: 16384)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !1201, file: !1202, line: 455, baseType: !1414, size: 64, offset: 16448)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !1201, file: !1202, line: 456, baseType: !260, size: 32, offset: 16512)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !1201, file: !1202, line: 457, baseType: !6600, size: 1088, offset: 16576)
!6600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1414, size: 1088, elements: !6553)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !1201, file: !1202, line: 458, baseType: !6600, size: 1088, offset: 17664)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !1201, file: !1202, line: 469, baseType: !1400, size: 64, offset: 18752)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !1201, file: !1202, line: 471, baseType: !6604, size: 64, offset: 18816)
!6604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6605, size: 64)
!6605 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !1202, line: 304, flags: DIFlagFwdDecl)
!6606 = !DIDerivedType(tag: DW_TAG_member, scope: !1201, file: !1202, line: 478, baseType: !6607, size: 64, offset: 18880)
!6607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1201, file: !1202, line: 478, size: 64, elements: !6608)
!6608 = !{!6609, !6612}
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !6607, file: !1202, line: 479, baseType: !6610, size: 64)
!6610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6611, size: 64)
!6611 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !1202, line: 305, flags: DIFlagFwdDecl)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !6607, file: !1202, line: 480, baseType: !1200, size: 64)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !1201, file: !1202, line: 482, baseType: !1989, size: 16, offset: 18944)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !1201, file: !1202, line: 483, baseType: !2109, size: 8, offset: 18960)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !1201, file: !1202, line: 497, baseType: !1989, size: 16, offset: 18976)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !1201, file: !1202, line: 498, baseType: !1228, size: 64, offset: 19008)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !1201, file: !1202, line: 499, baseType: !1394, size: 64, offset: 19072)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !1201, file: !1202, line: 500, baseType: !1349, size: 64, offset: 19136)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !1201, file: !1202, line: 502, baseType: !1186, size: 64, offset: 19200)
!6620 = !{!6621, !6672, !6677, !6682, !6684, !6689, !6694, !6696, !6701, !6706, !6711, !6716, !6721, !6726, !6731, !6776, !6781, !6783, !6788, !6790, !6792, !0, !6794, !6797, !6802, !6804, !6809, !6812, !7745, !7747, !7750, !7752, !7754, !7909, !7911, !7913, !7915, !7917, !7919, !7965, !7968, !7971}
!6621 = !DIGlobalVariableExpression(var: !6622, expr: !DIExpression())
!6622 = distinct !DIGlobalVariable(name: "__param_msi", scope: !2, file: !3, line: 72, type: !6623, isLocal: true, isDefinition: true, align: 64)
!6623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6624)
!6624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !6625, line: 69, size: 320, elements: !6626)
!6625 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!6626 = !{!6627, !6628, !6629, !6645, !6647, !6650, !6651}
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6624, file: !6625, line: 70, baseType: !1235, size: 64)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !6624, file: !6625, line: 71, baseType: !1697, size: 64, offset: 64)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6624, file: !6625, line: 72, baseType: !6630, size: 64, offset: 128)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!6631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6632)
!6632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !6625, line: 47, size: 256, elements: !6633)
!6633 = !{!6634, !6635, !6640, !6644}
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6632, file: !6625, line: 49, baseType: !7, size: 32)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !6632, file: !6625, line: 51, baseType: !6636, size: 64, offset: 64)
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6637, size: 64)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!260, !1235, !6639}
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6623, size: 64)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6632, file: !6625, line: 53, baseType: !6641, size: 64, offset: 128)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 64)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!260, !1349, !6639}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6632, file: !6625, line: 55, baseType: !1532, size: 64, offset: 192)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !6624, file: !6625, line: 73, baseType: !6646, size: 16, offset: 192)
!6646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1989)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !6624, file: !6625, line: 74, baseType: !6648, size: 8, offset: 208)
!6648 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !1230, line: 16, baseType: !6649)
!6649 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !1180, line: 20, baseType: !2061)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6624, file: !6625, line: 75, baseType: !2109, size: 8, offset: 216)
!6651 = !DIDerivedType(tag: DW_TAG_member, scope: !6624, file: !6625, line: 76, baseType: !6652, size: 64, offset: 256)
!6652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6624, file: !6625, line: 76, size: 64, elements: !6653)
!6653 = !{!6654, !6655, !6662}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6652, file: !6625, line: 77, baseType: !1187, size: 64)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6652, file: !6625, line: 78, baseType: !6656, size: 64)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6658)
!6658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !6625, line: 86, size: 128, elements: !6659)
!6659 = !{!6660, !6661}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !6658, file: !6625, line: 87, baseType: !7, size: 32)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6658, file: !6625, line: 88, baseType: !1349, size: 64, offset: 64)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !6652, file: !6625, line: 79, baseType: !6663, size: 64)
!6663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6664, size: 64)
!6664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6665)
!6665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !6625, line: 92, size: 256, elements: !6666)
!6666 = !{!6667, !6668, !6669, !6670, !6671}
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !6665, file: !6625, line: 94, baseType: !7, size: 32)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !6665, file: !6625, line: 95, baseType: !7, size: 32, offset: 32)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6665, file: !6625, line: 96, baseType: !2084, size: 64, offset: 64)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6665, file: !6625, line: 97, baseType: !6630, size: 64, offset: 128)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !6665, file: !6625, line: 98, baseType: !1187, size: 64, offset: 192)
!6672 = !DIGlobalVariableExpression(var: !6673, expr: !DIExpression())
!6673 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_msitype308", scope: !2, file: !3, line: 72, type: !6674, isLocal: true, isDefinition: true, align: 8)
!6674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 200, elements: !6675)
!6675 = !{!6676}
!6676 = !DISubrange(count: 25)
!6677 = !DIGlobalVariableExpression(var: !6678, expr: !DIExpression())
!6678 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_msi309", scope: !2, file: !3, line: 73, type: !6679, isLocal: true, isDefinition: true, align: 8)
!6679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 424, elements: !6680)
!6680 = !{!6681}
!6681 = !DISubrange(count: 53)
!6682 = !DIGlobalVariableExpression(var: !6683, expr: !DIExpression())
!6683 = distinct !DIGlobalVariable(name: "__param_irq_coalescing_io_count", scope: !2, file: !3, line: 77, type: !6623, isLocal: true, isDefinition: true, align: 64)
!6684 = !DIGlobalVariableExpression(var: !6685, expr: !DIExpression())
!6685 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_irq_coalescing_io_counttype310", scope: !2, file: !3, line: 77, type: !6686, isLocal: true, isDefinition: true, align: 8)
!6686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 360, elements: !6687)
!6687 = !{!6688}
!6688 = !DISubrange(count: 45)
!6689 = !DIGlobalVariableExpression(var: !6690, expr: !DIExpression())
!6690 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_irq_coalescing_io_count311", scope: !2, file: !3, line: 78, type: !6691, isLocal: true, isDefinition: true, align: 8)
!6691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 648, elements: !6692)
!6692 = !{!6693}
!6693 = !DISubrange(count: 81)
!6694 = !DIGlobalVariableExpression(var: !6695, expr: !DIExpression())
!6695 = distinct !DIGlobalVariable(name: "__param_irq_coalescing_usecs", scope: !2, file: !3, line: 82, type: !6623, isLocal: true, isDefinition: true, align: 64)
!6696 = !DIGlobalVariableExpression(var: !6697, expr: !DIExpression())
!6697 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_irq_coalescing_usecstype312", scope: !2, file: !3, line: 82, type: !6698, isLocal: true, isDefinition: true, align: 8)
!6698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 336, elements: !6699)
!6699 = !{!6700}
!6700 = !DISubrange(count: 42)
!6701 = !DIGlobalVariableExpression(var: !6702, expr: !DIExpression())
!6702 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_irq_coalescing_usecs313", scope: !2, file: !3, line: 83, type: !6703, isLocal: true, isDefinition: true, align: 8)
!6703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 584, elements: !6704)
!6704 = !{!6705}
!6705 = !DISubrange(count: 73)
!6706 = !DIGlobalVariableExpression(var: !6707, expr: !DIExpression())
!6707 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author322", scope: !2, file: !3, line: 4487, type: !6708, isLocal: true, isDefinition: true, align: 8)
!6708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 208, elements: !6709)
!6709 = !{!6710}
!6710 = !DISubrange(count: 26)
!6711 = !DIGlobalVariableExpression(var: !6712, expr: !DIExpression())
!6712 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description323", scope: !2, file: !3, line: 4488, type: !6713, isLocal: true, isDefinition: true, align: 8)
!6713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 568, elements: !6714)
!6714 = !{!6715}
!6715 = !DISubrange(count: 71)
!6716 = !DIGlobalVariableExpression(var: !6717, expr: !DIExpression())
!6717 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file324", scope: !2, file: !3, line: 4489, type: !6718, isLocal: true, isDefinition: true, align: 8)
!6718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 264, elements: !6719)
!6719 = !{!6720}
!6720 = !DISubrange(count: 33)
!6721 = !DIGlobalVariableExpression(var: !6722, expr: !DIExpression())
!6722 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license325", scope: !2, file: !3, line: 4489, type: !6723, isLocal: true, isDefinition: true, align: 8)
!6723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 184, elements: !6724)
!6724 = !{!6725}
!6725 = !DISubrange(count: 23)
!6726 = !DIGlobalVariableExpression(var: !6727, expr: !DIExpression())
!6727 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version326", scope: !2, file: !3, line: 4491, type: !6728, isLocal: true, isDefinition: true, align: 8)
!6728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 168, elements: !6729)
!6729 = !{!6730}
!6730 = !DISubrange(count: 21)
!6731 = !DIGlobalVariableExpression(var: !6732, expr: !DIExpression())
!6732 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 4491, type: !6733, isLocal: true, isDefinition: true)
!6733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6734)
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 64)
!6735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6736)
!6736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !6737, line: 65, size: 576, align: 64, elements: !6738)
!6737 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!6738 = !{!6739, !6774, !6775}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !6736, file: !6737, line: 66, baseType: !6740, size: 448)
!6740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !6737, line: 54, size: 448, elements: !6741)
!6741 = !{!6742, !6743, !6758, !6762, !6766, !6770}
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6740, file: !6737, line: 55, baseType: !1385, size: 128)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6740, file: !6737, line: 56, baseType: !6744, size: 64, offset: 128)
!6744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6745, size: 64)
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!1380, !6747, !6748, !1349}
!6747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6740, size: 64)
!6748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6749, size: 64)
!6749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !6737, line: 46, size: 768, elements: !6750)
!6750 = !{!6751, !6752, !6753, !6754, !6757}
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6749, file: !6737, line: 47, baseType: !1295, size: 512)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !6749, file: !6737, line: 48, baseType: !1697, size: 64, offset: 512)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !6749, file: !6737, line: 49, baseType: !1301, size: 64, offset: 576)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !6749, file: !6737, line: 50, baseType: !6755, size: 64, offset: 640)
!6755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6756, size: 64)
!6756 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !6737, line: 50, flags: DIFlagFwdDecl)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !6749, file: !6737, line: 51, baseType: !3722, size: 64, offset: 704)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6740, file: !6737, line: 58, baseType: !6759, size: 64, offset: 192)
!6759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6760, size: 64)
!6760 = !DISubroutineType(types: !6761)
!6761 = !{!1380, !6747, !6748, !1235, !1394}
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !6740, file: !6737, line: 60, baseType: !6763, size: 64, offset: 256)
!6763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6764, size: 64)
!6764 = !DISubroutineType(types: !6765)
!6765 = !{null, !1697, !1235}
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !6740, file: !6737, line: 61, baseType: !6767, size: 64, offset: 320)
!6767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6768, size: 64)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{!260, !1697}
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6740, file: !6737, line: 62, baseType: !6771, size: 64, offset: 384)
!6771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 64)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{null, !1697}
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !6736, file: !6737, line: 67, baseType: !1235, size: 64, offset: 448)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6736, file: !6737, line: 68, baseType: !1235, size: 64, offset: 512)
!6776 = !DIGlobalVariableExpression(var: !6777, expr: !DIExpression())
!6777 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alias327", scope: !2, file: !3, line: 4492, type: !6778, isLocal: true, isDefinition: true, align: 8)
!6778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 248, elements: !6779)
!6779 = !{!6780}
!6780 = !DISubrange(count: 31)
!6781 = !DIGlobalVariableExpression(var: !6782, expr: !DIExpression())
!6782 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mv_init328", scope: !2, file: !3, line: 4494, type: !1187, isLocal: true, isDefinition: true)
!6783 = !DIGlobalVariableExpression(var: !6784, expr: !DIExpression())
!6784 = distinct !DIGlobalVariable(name: "__exitcall_mv_exit", scope: !2, file: !3, line: 4495, type: !6785, isLocal: true, isDefinition: true)
!6785 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6786, line: 117, baseType: !6787)
!6786 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!6788 = !DIGlobalVariableExpression(var: !6789, expr: !DIExpression())
!6789 = distinct !DIGlobalVariable(name: "msi", scope: !2, file: !3, line: 71, type: !260, isLocal: true, isDefinition: true)
!6790 = !DIGlobalVariableExpression(var: !6791, expr: !DIExpression())
!6791 = distinct !DIGlobalVariable(name: "irq_coalescing_io_count", scope: !2, file: !3, line: 76, type: !260, isLocal: true, isDefinition: true)
!6792 = !DIGlobalVariableExpression(var: !6793, expr: !DIExpression())
!6793 = distinct !DIGlobalVariable(name: "irq_coalescing_usecs", scope: !2, file: !3, line: 81, type: !260, isLocal: true, isDefinition: true)
!6794 = !DIGlobalVariableExpression(var: !6795, expr: !DIExpression())
!6795 = distinct !DIGlobalVariable(name: "__param_str_irq_coalescing_io_count", scope: !2, file: !3, line: 77, type: !6796, isLocal: true, isDefinition: true)
!6796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 256, elements: !2187)
!6797 = !DIGlobalVariableExpression(var: !6798, expr: !DIExpression())
!6798 = distinct !DIGlobalVariable(name: "__param_str_irq_coalescing_usecs", scope: !2, file: !3, line: 82, type: !6799, isLocal: true, isDefinition: true)
!6799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 232, elements: !6800)
!6800 = !{!6801}
!6801 = !DISubrange(count: 29)
!6802 = !DIGlobalVariableExpression(var: !6803, expr: !DIExpression())
!6803 = distinct !DIGlobalVariable(name: "mv_pci_driver", scope: !2, file: !3, line: 4307, type: !6455, isLocal: true, isDefinition: true)
!6804 = !DIGlobalVariableExpression(var: !6805, expr: !DIExpression())
!6805 = distinct !DIGlobalVariable(name: "mv_pci_tbl", scope: !2, file: !3, line: 786, type: !6806, isLocal: true, isDefinition: true)
!6806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6461, size: 4608, elements: !6807)
!6807 = !{!6808}
!6808 = !DISubrange(count: 18)
!6809 = !DIGlobalVariableExpression(var: !6810, expr: !DIExpression())
!6810 = distinct !DIGlobalVariable(name: "__print_once", scope: !6811, file: !3, line: 4377, type: !1554, isLocal: true, isDefinition: true)
!6811 = distinct !DISubprogram(name: "mv_pci_init_one", scope: !3, file: !3, line: 4368, type: !6473, scopeLine: 4370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!6812 = !DIGlobalVariableExpression(var: !6813, expr: !DIExpression())
!6813 = distinct !DIGlobalVariable(name: "mv_port_info", scope: !2, file: !3, line: 735, type: !6814, isLocal: true, isDefinition: true)
!6814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6815, size: 3584, elements: !3568)
!6815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6816)
!6816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_info", file: !204, line: 1002, size: 448, elements: !6817)
!6817 = !{!6818, !6819, !6820, !6821, !6822, !6823, !7744}
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6816, file: !204, line: 1003, baseType: !1186, size: 64)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "link_flags", scope: !6816, file: !204, line: 1004, baseType: !1186, size: 64, offset: 64)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !6816, file: !204, line: 1005, baseType: !1186, size: 64, offset: 128)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !6816, file: !204, line: 1006, baseType: !1186, size: 64, offset: 192)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !6816, file: !204, line: 1007, baseType: !1186, size: 64, offset: 256)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "port_ops", scope: !6816, file: !204, line: 1008, baseType: !6824, size: 64, offset: 320)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 64)
!6825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_operations", file: !204, line: 896, size: 3904, elements: !6826)
!6826 = !{!6827, !7584, !7585, !7589, !7593, !7597, !7601, !7605, !7609, !7610, !7615, !7621, !7625, !7629, !7630, !7635, !7640, !7641, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7653, !7654, !7655, !7659, !7663, !7664, !7665, !7669, !7673, !7674, !7675, !7676, !7680, !7684, !7688, !7692, !7693, !7699, !7703, !7704, !7708, !7709, !7713, !7714, !7715, !7716, !7717, !7718, !7719, !7723, !7727, !7731, !7735, !7739, !7740, !7741}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "qc_defer", scope: !6825, file: !204, line: 900, baseType: !6828, size: 64)
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6829, size: 64)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{!260, !6831}
!6831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6832, size: 64)
!6832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_queued_cmd", file: !204, line: 617, size: 1920, elements: !6833)
!6833 = !{!6834, !7537, !7538, !7539, !7540, !7559, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7582, !7583}
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6832, file: !204, line: 618, baseType: !6835, size: 64)
!6835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6836, size: 64)
!6836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port", file: !204, line: 811, size: 120832, elements: !6837)
!6837 = !{!6838, !7267, !7268, !7269, !7270, !7271, !7272, !7273, !7274, !7292, !7293, !7294, !7454, !7455, !7461, !7462, !7463, !7464, !7465, !7466, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7483, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7521, !7522, !7523, !7533}
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_host", scope: !6836, file: !204, line: 812, baseType: !6839, size: 64)
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6840, size: 64)
!6840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !194, line: 524, size: 16256, elements: !6841)
!6841 = !{!6842, !6843, !6844, !6845, !6846, !6847, !6848, !6849, !6850, !6851, !6852, !7213, !7216, !7217, !7218, !7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7251, !7252, !7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262, !7263, !7264, !7265, !7266}
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !6840, file: !194, line: 533, baseType: !1205, size: 128)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !6840, file: !194, line: 534, baseType: !1205, size: 128, offset: 128)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !6840, file: !194, line: 536, baseType: !1205, size: 128, offset: 256)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !6840, file: !194, line: 538, baseType: !1308, offset: 384)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !6840, file: !194, line: 539, baseType: !3316, size: 64, offset: 384)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !6840, file: !194, line: 541, baseType: !1804, size: 192, offset: 448)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !6840, file: !194, line: 543, baseType: !1205, size: 128, offset: 640)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !6840, file: !194, line: 544, baseType: !3459, size: 64, offset: 768)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !6840, file: !194, line: 545, baseType: !3722, size: 64, offset: 832)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !6840, file: !194, line: 547, baseType: !2298, size: 128, offset: 896)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !6840, file: !194, line: 548, baseType: !6853, size: 64, offset: 1024)
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6854, size: 64)
!6854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !194, line: 32, size: 2880, elements: !6855)
!6855 = !{!6856, !6857, !6858, !6862, !7014, !7098, !7099, !7100, !7104, !7108, !7109, !7110, !7111, !7112, !7116, !7117, !7121, !7125, !7129, !7133, !7137, !7141, !7145, !7149, !7153, !7154, !7158, !7162, !7166, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7191, !7205, !7206, !7207, !7208, !7209, !7212}
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !6854, file: !194, line: 33, baseType: !1697, size: 64)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6854, file: !194, line: 34, baseType: !1235, size: 64, offset: 64)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6854, file: !194, line: 43, baseType: !6859, size: 64, offset: 128)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{!1235, !6839}
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !6854, file: !194, line: 50, baseType: !6863, size: 64, offset: 192)
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 64)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!260, !6866, !7, !1187}
!6866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6867, size: 64)
!6867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !168, line: 101, size: 15232, align: 64, elements: !6868)
!6868 = !{!6869, !6870, !6871, !6872, !6873, !6874, !6875, !6876, !6877, !6878, !6879, !6880, !6881, !6882, !6883, !6884, !6885, !6886, !6887, !6888, !6889, !6890, !6891, !6892, !6893, !6894, !6895, !6896, !6897, !6898, !6899, !6900, !6908, !6909, !6910, !6911, !6912, !6936, !6938, !6939, !6940, !6941, !6942, !6943, !6944, !6945, !6946, !6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958, !6959, !6960, !6961, !6962, !6963, !6964, !6965, !6966, !6967, !6968, !6969, !6970, !6971, !6972, !6973, !6974, !6975, !6976, !6977, !6978, !6979, !6980, !6981, !6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991, !6992, !6993, !6994, !6995, !6996, !6997, !6998, !7002, !7003, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013}
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !6867, file: !168, line: 102, baseType: !6839, size: 64)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !6867, file: !168, line: 103, baseType: !2392, size: 64, offset: 64)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !6867, file: !168, line: 106, baseType: !1205, size: 128, offset: 128)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !6867, file: !168, line: 107, baseType: !1205, size: 128, offset: 256)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !6867, file: !168, line: 109, baseType: !1877, size: 32, offset: 384)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !6867, file: !168, line: 110, baseType: !1877, size: 32, offset: 416)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !6867, file: !168, line: 112, baseType: !1877, size: 32, offset: 448)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6867, file: !168, line: 113, baseType: !1308, offset: 480)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !6867, file: !168, line: 114, baseType: !1205, size: 128, offset: 512)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !6867, file: !168, line: 115, baseType: !1183, size: 16, offset: 640)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !6867, file: !168, line: 116, baseType: !1183, size: 16, offset: 656)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !6867, file: !168, line: 117, baseType: !1183, size: 16, offset: 672)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !6867, file: !168, line: 118, baseType: !1183, size: 16, offset: 688)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !6867, file: !168, line: 119, baseType: !1186, size: 64, offset: 704)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !6867, file: !168, line: 120, baseType: !1186, size: 64, offset: 768)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !6867, file: !168, line: 123, baseType: !1186, size: 64, offset: 832)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6867, file: !168, line: 125, baseType: !7, size: 32, offset: 896)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !6867, file: !168, line: 125, baseType: !7, size: 32, offset: 928)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !6867, file: !168, line: 126, baseType: !1229, size: 64, offset: 960)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !6867, file: !168, line: 127, baseType: !7, size: 32, offset: 1024)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !6867, file: !168, line: 129, baseType: !7, size: 32, offset: 1056)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !6867, file: !168, line: 131, baseType: !1187, size: 64, offset: 1088)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6867, file: !168, line: 132, baseType: !1279, size: 8, offset: 1152)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !6867, file: !168, line: 133, baseType: !1237, size: 8, offset: 1160)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !6867, file: !168, line: 134, baseType: !1237, size: 8, offset: 1168)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !6867, file: !168, line: 135, baseType: !1804, size: 192, offset: 1216)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !6867, file: !168, line: 136, baseType: !1279, size: 8, offset: 1408)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !6867, file: !168, line: 137, baseType: !2064, size: 64, offset: 1472)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !6867, file: !168, line: 138, baseType: !1235, size: 64, offset: 1536)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !6867, file: !168, line: 139, baseType: !1235, size: 64, offset: 1600)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !6867, file: !168, line: 140, baseType: !1235, size: 64, offset: 1664)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !6867, file: !168, line: 143, baseType: !6901, size: 64, offset: 1728)
!6901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6902, size: 64)
!6902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !168, line: 95, size: 192, elements: !6903)
!6903 = !{!6904, !6905, !6906}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6902, file: !168, line: 96, baseType: !1437, size: 128, align: 64)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6902, file: !168, line: 97, baseType: !260, size: 32, offset: 128)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6902, file: !168, line: 98, baseType: !6907, offset: 160)
!6907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1279, elements: !2200)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !6867, file: !168, line: 144, baseType: !6901, size: 64, offset: 1792)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !6867, file: !168, line: 145, baseType: !6901, size: 64, offset: 1856)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !6867, file: !168, line: 146, baseType: !6901, size: 64, offset: 1920)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !6867, file: !168, line: 147, baseType: !1279, size: 8, offset: 1984)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !6867, file: !168, line: 148, baseType: !6913, size: 64, offset: 2048)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 64)
!6914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !168, line: 289, size: 6272, align: 64, elements: !6915)
!6915 = !{!6916, !6917, !6918, !6919, !6920, !6921, !6922, !6923, !6924, !6925, !6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934, !6935}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !6914, file: !168, line: 290, baseType: !6866, size: 64)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !6914, file: !168, line: 291, baseType: !1205, size: 128, offset: 64)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !6914, file: !168, line: 292, baseType: !1205, size: 128, offset: 192)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6914, file: !168, line: 293, baseType: !1292, size: 5568, offset: 320)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !6914, file: !168, line: 294, baseType: !2880, size: 32, offset: 5888)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !6914, file: !168, line: 295, baseType: !7, size: 32, offset: 5920)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6914, file: !168, line: 296, baseType: !7, size: 32, offset: 5952)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6914, file: !168, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !6914, file: !168, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !6914, file: !168, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !6914, file: !168, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !6914, file: !168, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !6914, file: !168, line: 310, baseType: !1877, size: 32, offset: 6016)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !6914, file: !168, line: 311, baseType: !1877, size: 32, offset: 6048)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !6914, file: !168, line: 317, baseType: !7, size: 32, offset: 6080)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !6914, file: !168, line: 318, baseType: !7, size: 32, offset: 6112)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !6914, file: !168, line: 321, baseType: !1237, size: 8, offset: 6144)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6914, file: !168, line: 322, baseType: !167, size: 32, offset: 6176)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !6914, file: !168, line: 323, baseType: !1187, size: 64, offset: 6208)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !6914, file: !168, line: 324, baseType: !4676, offset: 6272)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !6867, file: !168, line: 150, baseType: !6937, size: 64, offset: 2112)
!6937 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !168, line: 18, baseType: !1231)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !6867, file: !168, line: 154, baseType: !7, size: 32, offset: 2176)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !6867, file: !168, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !6867, file: !168, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !6867, file: !168, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !6867, file: !168, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !6867, file: !168, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !6867, file: !168, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !6867, file: !168, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !6867, file: !168, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !6867, file: !168, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !6867, file: !168, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !6867, file: !168, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !6867, file: !168, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !6867, file: !168, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !6867, file: !168, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !6867, file: !168, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !6867, file: !168, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !6867, file: !168, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !6867, file: !168, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !6867, file: !168, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !6867, file: !168, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !6867, file: !168, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !6867, file: !168, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !6867, file: !168, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !6867, file: !168, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !6867, file: !168, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !6867, file: !168, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !6867, file: !168, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !6867, file: !168, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !6867, file: !168, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !6867, file: !168, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !6867, file: !168, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !6867, file: !168, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !6867, file: !168, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !6867, file: !168, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !6867, file: !168, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !6867, file: !168, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !6867, file: !168, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !6867, file: !168, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !6867, file: !168, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !6867, file: !168, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6867, file: !168, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !6867, file: !168, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !6867, file: !168, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !6867, file: !168, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !6867, file: !168, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !6867, file: !168, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !6867, file: !168, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !6867, file: !168, line: 208, baseType: !1554, size: 8, offset: 2256)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !6867, file: !168, line: 210, baseType: !1877, size: 32, offset: 2272)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !6867, file: !168, line: 212, baseType: !2439, size: 64, offset: 2304)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !6867, file: !168, line: 213, baseType: !2439, size: 64, offset: 2368)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !6867, file: !168, line: 214, baseType: !1205, size: 128, offset: 2432)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !6867, file: !168, line: 215, baseType: !2162, size: 256, offset: 2560)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !6867, file: !168, line: 217, baseType: !7, size: 32, offset: 2816)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !6867, file: !168, line: 220, baseType: !1877, size: 32, offset: 2848)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !6867, file: !168, line: 221, baseType: !1877, size: 32, offset: 2880)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !6867, file: !168, line: 222, baseType: !1877, size: 32, offset: 2912)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !6867, file: !168, line: 224, baseType: !1292, size: 5568, offset: 2944)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !6867, file: !168, line: 225, baseType: !1292, size: 5568, offset: 8512)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !6867, file: !168, line: 227, baseType: !6999, size: 256, offset: 14080)
!6999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !2159, line: 168, size: 256, elements: !7000)
!7000 = !{!7001}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6999, file: !2159, line: 169, baseType: !2162, size: 256)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !6867, file: !168, line: 228, baseType: !2162, size: 256, offset: 14336)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6867, file: !168, line: 230, baseType: !7004, size: 64, offset: 14592)
!7004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7005, size: 64)
!7005 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !168, line: 230, flags: DIFlagFwdDecl)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !6867, file: !168, line: 231, baseType: !1187, size: 64, offset: 14656)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !6867, file: !168, line: 233, baseType: !1394, size: 64, offset: 14720)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !6867, file: !168, line: 234, baseType: !1187, size: 64, offset: 14784)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !6867, file: !168, line: 236, baseType: !1279, size: 8, offset: 14848)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !6867, file: !168, line: 237, baseType: !1804, size: 192, offset: 14912)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !6867, file: !168, line: 238, baseType: !175, size: 32, offset: 15104)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !6867, file: !168, line: 239, baseType: !3459, size: 64, offset: 15168)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !6867, file: !168, line: 240, baseType: !4676, offset: 15232)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !6854, file: !194, line: 65, baseType: !7015, size: 64, offset: 256)
!7015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7016, size: 64)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{!260, !6839, !7018}
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7019, size: 64)
!7019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !7020, line: 68, size: 3136, elements: !7021)
!7020 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!7021 = !{!7022, !7035, !7036, !7037, !7038, !7039, !7040, !7041, !7042, !7043, !7044, !7045, !7046, !7047, !7048, !7049, !7068, !7070, !7071, !7072, !7073, !7074, !7078, !7092, !7093, !7094, !7095, !7096, !7097}
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !7019, file: !7020, line: 69, baseType: !7023, size: 448)
!7023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !7024, line: 9, size: 448, elements: !7025)
!7024 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!7025 = !{!7026, !7028, !7029, !7030, !7031, !7032, !7033, !7034}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !7023, file: !7024, line: 10, baseType: !7027, size: 128)
!7027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1279, size: 128, elements: !2999)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7023, file: !7024, line: 11, baseType: !2064, size: 64, offset: 128)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !7023, file: !7024, line: 12, baseType: !1183, size: 16, offset: 192)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !7023, file: !7024, line: 13, baseType: !260, size: 32, offset: 224)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !7023, file: !7024, line: 14, baseType: !7, size: 32, offset: 256)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !7023, file: !7024, line: 15, baseType: !7, size: 32, offset: 288)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !7023, file: !7024, line: 16, baseType: !260, size: 32, offset: 320)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !7023, file: !7024, line: 17, baseType: !1187, size: 64, offset: 384)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7019, file: !7020, line: 70, baseType: !6866, size: 64, offset: 448)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !7019, file: !7020, line: 71, baseType: !1205, size: 128, offset: 512)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !7019, file: !7020, line: 72, baseType: !2415, size: 704, offset: 640)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7019, file: !7020, line: 74, baseType: !1437, size: 128, align: 64, offset: 1344)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !7019, file: !7020, line: 76, baseType: !260, size: 32, offset: 1472)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !7019, file: !7020, line: 83, baseType: !1186, size: 64, offset: 1536)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !7019, file: !7020, line: 85, baseType: !260, size: 32, offset: 1600)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !7019, file: !7020, line: 86, baseType: !260, size: 32, offset: 1632)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !7019, file: !7020, line: 88, baseType: !1279, size: 8, offset: 1664)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !7019, file: !7020, line: 89, baseType: !1279, size: 8, offset: 1672)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !7019, file: !7020, line: 90, baseType: !1279, size: 8, offset: 1680)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !7019, file: !7020, line: 92, baseType: !1183, size: 16, offset: 1696)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !7019, file: !7020, line: 93, baseType: !186, size: 32, offset: 1728)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !7019, file: !7020, line: 96, baseType: !2064, size: 64, offset: 1792)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !7019, file: !7020, line: 100, baseType: !7050, size: 192, offset: 1856)
!7050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !7020, line: 35, size: 192, elements: !7051)
!7051 = !{!7052, !7067}
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !7050, file: !7020, line: 36, baseType: !7053, size: 128)
!7053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !7054, line: 42, size: 128, elements: !7055)
!7054 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!7055 = !{!7056, !7065, !7066}
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !7053, file: !7054, line: 43, baseType: !7057, size: 64)
!7057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7058, size: 64)
!7058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !7054, line: 11, size: 256, elements: !7059)
!7059 = !{!7060, !7061, !7062, !7063, !7064}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !7058, file: !7054, line: 12, baseType: !1186, size: 64)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7058, file: !7054, line: 13, baseType: !7, size: 32, offset: 64)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7058, file: !7054, line: 14, baseType: !7, size: 32, offset: 96)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !7058, file: !7054, line: 15, baseType: !3173, size: 64, offset: 128)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !7058, file: !7054, line: 17, baseType: !7, size: 32, offset: 192)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !7053, file: !7054, line: 44, baseType: !7, size: 32, offset: 64)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !7053, file: !7054, line: 45, baseType: !7, size: 32, offset: 96)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7050, file: !7020, line: 37, baseType: !7, size: 32, offset: 128)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !7019, file: !7020, line: 101, baseType: !7069, size: 64, offset: 2048)
!7069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7050, size: 64)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !7019, file: !7020, line: 103, baseType: !7, size: 32, offset: 2112)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !7019, file: !7020, line: 106, baseType: !7, size: 32, offset: 2144)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !7019, file: !7020, line: 112, baseType: !2396, size: 64, offset: 2176)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !7019, file: !7020, line: 115, baseType: !2064, size: 64, offset: 2240)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !7019, file: !7020, line: 123, baseType: !7075, size: 64, offset: 2304)
!7075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7076, size: 64)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{null, !7018}
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !7019, file: !7020, line: 129, baseType: !7079, size: 512, offset: 2368)
!7079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !7020, line: 41, size: 512, elements: !7080)
!7080 = !{!7081, !7082, !7083, !7084, !7085, !7086, !7088, !7089, !7090, !7091}
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7079, file: !7020, line: 42, baseType: !1349, size: 64)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !7079, file: !7020, line: 43, baseType: !260, size: 32, offset: 64)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7079, file: !7020, line: 44, baseType: !7057, size: 64, offset: 128)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !7079, file: !7020, line: 45, baseType: !260, size: 32, offset: 192)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !7079, file: !7020, line: 47, baseType: !3173, size: 64, offset: 256)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !7079, file: !7020, line: 49, baseType: !7087, size: 32, offset: 320)
!7087 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !260)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !7079, file: !7020, line: 50, baseType: !7087, size: 32, offset: 352)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !7079, file: !7020, line: 51, baseType: !7087, size: 32, offset: 384)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !7079, file: !7020, line: 52, baseType: !7087, size: 32, offset: 416)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !7079, file: !7020, line: 53, baseType: !7087, size: 32, offset: 448)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !7019, file: !7020, line: 131, baseType: !2064, size: 64, offset: 2880)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !7019, file: !7020, line: 139, baseType: !260, size: 32, offset: 2944)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7019, file: !7020, line: 140, baseType: !260, size: 32, offset: 2976)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7019, file: !7020, line: 141, baseType: !1186, size: 64, offset: 3008)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !7019, file: !7020, line: 143, baseType: !1279, size: 8, offset: 3072)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !7019, file: !7020, line: 144, baseType: !7, size: 32, offset: 3104)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !6854, file: !194, line: 66, baseType: !7015, size: 64, offset: 320)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !6854, file: !194, line: 102, baseType: !7015, size: 64, offset: 384)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !6854, file: !194, line: 112, baseType: !7101, size: 64, offset: 448)
!7101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7102, size: 64)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{null, !6839, !1989}
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !6854, file: !194, line: 132, baseType: !7105, size: 64, offset: 512)
!7105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7106, size: 64)
!7106 = !DISubroutineType(types: !7107)
!7107 = !{!260, !7018}
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !6854, file: !194, line: 133, baseType: !7105, size: 64, offset: 576)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !6854, file: !194, line: 134, baseType: !7105, size: 64, offset: 640)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !6854, file: !194, line: 135, baseType: !7105, size: 64, offset: 704)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !6854, file: !194, line: 136, baseType: !7105, size: 64, offset: 768)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !6854, file: !194, line: 164, baseType: !7113, size: 64, offset: 832)
!7113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7114, size: 64)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{!260, !6866}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !6854, file: !194, line: 195, baseType: !7113, size: 64, offset: 896)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !6854, file: !194, line: 206, baseType: !7118, size: 64, offset: 960)
!7118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7119, size: 64)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{null, !6866}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !6854, file: !194, line: 220, baseType: !7122, size: 64, offset: 1024)
!7122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7123, size: 64)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!260, !6913}
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !6854, file: !194, line: 230, baseType: !7126, size: 64, offset: 1088)
!7126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7127, size: 64)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{null, !6913}
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !6854, file: !194, line: 241, baseType: !7130, size: 64, offset: 1152)
!7130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7131, size: 64)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{!260, !6839, !1186}
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !6854, file: !194, line: 250, baseType: !7134, size: 64, offset: 1216)
!7134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7135, size: 64)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{null, !6839}
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !6854, file: !194, line: 263, baseType: !7138, size: 64, offset: 1280)
!7138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7139, size: 64)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{!260, !6866, !260}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !6854, file: !194, line: 271, baseType: !7142, size: 64, offset: 1344)
!7142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7143, size: 64)
!7143 = !DISubroutineType(types: !7144)
!7144 = !{!260, !6839}
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !6854, file: !194, line: 278, baseType: !7146, size: 64, offset: 1408)
!7146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7147, size: 64)
!7147 = !DISubroutineType(types: !7148)
!7148 = !{!1554, !2396}
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !6854, file: !194, line: 288, baseType: !7150, size: 64, offset: 1472)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7151, size: 64)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!260, !6866, !2093, !1960, !1786}
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !6854, file: !194, line: 297, baseType: !7118, size: 64, offset: 1536)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !6854, file: !194, line: 306, baseType: !7155, size: 64, offset: 1600)
!7155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7156, size: 64)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!260, !1792, !6839}
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6854, file: !194, line: 307, baseType: !7159, size: 64, offset: 1664)
!7159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7160, size: 64)
!7160 = !DISubroutineType(types: !7161)
!7161 = !{!260, !6839, !1349, !260}
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !6854, file: !194, line: 316, baseType: !7163, size: 64, offset: 1728)
!7163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7164, size: 64)
!7164 = !DISubroutineType(types: !7165)
!7165 = !{!110, !7018}
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !6854, file: !194, line: 326, baseType: !7167, size: 64, offset: 1792)
!7167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7168, size: 64)
!7168 = !DISubroutineType(types: !7169)
!7169 = !{!260, !6839, !260}
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !6854, file: !194, line: 334, baseType: !1235, size: 64, offset: 1856)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !6854, file: !194, line: 340, baseType: !1276, size: 64, offset: 1920)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !6854, file: !194, line: 347, baseType: !260, size: 32, offset: 1984)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !6854, file: !194, line: 356, baseType: !260, size: 32, offset: 2016)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !6854, file: !194, line: 362, baseType: !1183, size: 16, offset: 2048)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !6854, file: !194, line: 363, baseType: !1183, size: 16, offset: 2064)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !6854, file: !194, line: 368, baseType: !7, size: 32, offset: 2080)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6854, file: !194, line: 373, baseType: !7, size: 32, offset: 2112)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !6854, file: !194, line: 379, baseType: !1186, size: 64, offset: 2176)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !6854, file: !194, line: 381, baseType: !1186, size: 64, offset: 2240)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !6854, file: !194, line: 400, baseType: !2052, size: 16, offset: 2304)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !6854, file: !194, line: 406, baseType: !1279, size: 8, offset: 2320)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !6854, file: !194, line: 409, baseType: !260, size: 32, offset: 2336)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !6854, file: !194, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !6854, file: !194, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !6854, file: !194, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !6854, file: !194, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !6854, file: !194, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !6854, file: !194, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !6854, file: !194, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !6854, file: !194, line: 445, baseType: !7, size: 32, offset: 2400)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !6854, file: !194, line: 459, baseType: !7192, size: 64, offset: 2432)
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7193, size: 64)
!7193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7194, size: 64)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !25, line: 99, size: 256, elements: !7195)
!7195 = !{!7196, !7197, !7201}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7194, file: !25, line: 100, baseType: !1385, size: 128)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !7194, file: !25, line: 101, baseType: !7198, size: 64, offset: 128)
!7198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7199, size: 64)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{!1380, !1291, !7193, !1349}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !7194, file: !25, line: 103, baseType: !7202, size: 64, offset: 192)
!7202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7203, size: 64)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{!1380, !1291, !7193, !1235, !1394}
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !6854, file: !194, line: 464, baseType: !7192, size: 64, offset: 2496)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !6854, file: !194, line: 470, baseType: !1400, size: 64, offset: 2560)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !6854, file: !194, line: 479, baseType: !1229, size: 64, offset: 2624)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !6854, file: !194, line: 484, baseType: !7, size: 32, offset: 2688)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !6854, file: !194, line: 485, baseType: !7210, size: 64, offset: 2752)
!7210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7211, size: 64)
!7211 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !194, line: 19, flags: DIFlagFwdDecl)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !6854, file: !194, line: 488, baseType: !260, size: 32, offset: 2816)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !6840, file: !194, line: 549, baseType: !7214, size: 64, offset: 1088)
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 64)
!7215 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !194, line: 23, flags: DIFlagFwdDecl)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !6840, file: !194, line: 552, baseType: !2813, size: 2304, offset: 1152)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !6840, file: !194, line: 554, baseType: !1877, size: 32, offset: 3456)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !6840, file: !194, line: 556, baseType: !7, size: 32, offset: 3488)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !6840, file: !194, line: 558, baseType: !7, size: 32, offset: 3520)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !6840, file: !194, line: 560, baseType: !7, size: 32, offset: 3552)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !6840, file: !194, line: 563, baseType: !260, size: 32, offset: 3584)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !6840, file: !194, line: 564, baseType: !1186, size: 64, offset: 3648)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !6840, file: !194, line: 573, baseType: !7, size: 32, offset: 3712)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !6840, file: !194, line: 574, baseType: !7, size: 32, offset: 3744)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !6840, file: !194, line: 575, baseType: !1229, size: 64, offset: 3776)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !6840, file: !194, line: 584, baseType: !7, size: 32, offset: 3840)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !6840, file: !194, line: 593, baseType: !1183, size: 16, offset: 3872)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !6840, file: !194, line: 595, baseType: !260, size: 32, offset: 3904)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !6840, file: !194, line: 596, baseType: !260, size: 32, offset: 3936)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !6840, file: !194, line: 597, baseType: !2052, size: 16, offset: 3968)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !6840, file: !194, line: 598, baseType: !1183, size: 16, offset: 3984)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !6840, file: !194, line: 599, baseType: !1183, size: 16, offset: 4000)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !6840, file: !194, line: 600, baseType: !7, size: 32, offset: 4032)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6840, file: !194, line: 601, baseType: !7, size: 32, offset: 4064)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !6840, file: !194, line: 602, baseType: !1186, size: 64, offset: 4096)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !6840, file: !194, line: 603, baseType: !1186, size: 64, offset: 4160)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !6840, file: !194, line: 612, baseType: !7, size: 32, offset: 4224)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !6840, file: !194, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !6840, file: !194, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !6840, file: !194, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !6840, file: !194, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !6840, file: !194, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !6840, file: !194, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !6840, file: !194, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !6840, file: !194, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !6840, file: !194, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !6840, file: !194, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !6840, file: !194, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !6840, file: !194, line: 653, baseType: !7250, size: 160, offset: 4272)
!7250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 160, elements: !4549)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !6840, file: !194, line: 654, baseType: !2174, size: 64, offset: 4480)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !6840, file: !194, line: 659, baseType: !2174, size: 64, offset: 4544)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !6840, file: !194, line: 664, baseType: !7, size: 32, offset: 4608)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !6840, file: !194, line: 667, baseType: !7, size: 32, offset: 4640)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !6840, file: !194, line: 668, baseType: !1279, size: 8, offset: 4672)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6840, file: !194, line: 671, baseType: !1186, size: 64, offset: 4736)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !6840, file: !194, line: 672, baseType: !1186, size: 64, offset: 4800)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !6840, file: !194, line: 673, baseType: !1279, size: 8, offset: 4864)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !6840, file: !194, line: 674, baseType: !1279, size: 8, offset: 4872)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !6840, file: !194, line: 675, baseType: !7, size: 32, offset: 4896)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !6840, file: !194, line: 678, baseType: !193, size: 32, offset: 4928)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !6840, file: !194, line: 681, baseType: !1292, size: 5568, offset: 4992)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !6840, file: !194, line: 681, baseType: !1292, size: 5568, offset: 10560)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !6840, file: !194, line: 687, baseType: !1187, size: 64, offset: 16128)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !6840, file: !194, line: 693, baseType: !1291, size: 64, offset: 16192)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !6840, file: !194, line: 700, baseType: !4676, align: 64, offset: 16256)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6836, file: !204, line: 813, baseType: !6824, size: 64, offset: 64)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6836, file: !204, line: 814, baseType: !3316, size: 64, offset: 128)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6836, file: !204, line: 817, baseType: !1186, size: 64, offset: 192)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "pflags", scope: !6836, file: !204, line: 819, baseType: !7, size: 32, offset: 256)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "print_id", scope: !6836, file: !204, line: 820, baseType: !7, size: 32, offset: 288)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "local_port_no", scope: !6836, file: !204, line: 821, baseType: !7, size: 32, offset: 320)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "port_no", scope: !6836, file: !204, line: 822, baseType: !7, size: 32, offset: 352)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !6836, file: !204, line: 825, baseType: !7275, size: 960, offset: 384)
!7275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ioports", file: !204, line: 578, size: 960, elements: !7276)
!7276 = !{!7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_addr", scope: !7275, file: !204, line: 579, baseType: !1187, size: 64)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !7275, file: !204, line: 580, baseType: !1187, size: 64, offset: 64)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "error_addr", scope: !7275, file: !204, line: 581, baseType: !1187, size: 64, offset: 128)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "feature_addr", scope: !7275, file: !204, line: 582, baseType: !1187, size: 64, offset: 192)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "nsect_addr", scope: !7275, file: !204, line: 583, baseType: !1187, size: 64, offset: 256)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "lbal_addr", scope: !7275, file: !204, line: 584, baseType: !1187, size: 64, offset: 320)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "lbam_addr", scope: !7275, file: !204, line: 585, baseType: !1187, size: 64, offset: 384)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "lbah_addr", scope: !7275, file: !204, line: 586, baseType: !1187, size: 64, offset: 448)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "device_addr", scope: !7275, file: !204, line: 587, baseType: !1187, size: 64, offset: 512)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "status_addr", scope: !7275, file: !204, line: 588, baseType: !1187, size: 64, offset: 576)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "command_addr", scope: !7275, file: !204, line: 589, baseType: !1187, size: 64, offset: 640)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "altstatus_addr", scope: !7275, file: !204, line: 590, baseType: !1187, size: 64, offset: 704)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_addr", scope: !7275, file: !204, line: 591, baseType: !1187, size: 64, offset: 768)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_addr", scope: !7275, file: !204, line: 593, baseType: !1187, size: 64, offset: 832)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "scr_addr", scope: !7275, file: !204, line: 595, baseType: !1187, size: 64, offset: 896)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6836, file: !204, line: 826, baseType: !2109, size: 8, offset: 1344)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "last_ctl", scope: !6836, file: !204, line: 827, baseType: !2109, size: 8, offset: 1352)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task_link", scope: !6836, file: !204, line: 828, baseType: !7295, size: 64, offset: 1408)
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7296, size: 64)
!7296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_link", file: !204, line: 783, size: 41984, elements: !7297)
!7297 = !{!7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7306, !7307, !7308, !7309, !7435, !7451, !7453}
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !7296, file: !204, line: 784, baseType: !6835, size: 64)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "pmp", scope: !7296, file: !204, line: 785, baseType: !260, size: 32, offset: 64)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !7296, file: !204, line: 787, baseType: !1292, size: 5568, offset: 128)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "active_tag", scope: !7296, file: !204, line: 788, baseType: !7, size: 32, offset: 5696)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "sactive", scope: !7296, file: !204, line: 789, baseType: !1266, size: 32, offset: 5728)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7296, file: !204, line: 791, baseType: !7, size: 32, offset: 5760)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "saved_scontrol", scope: !7296, file: !204, line: 793, baseType: !1266, size: 32, offset: 5792)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "hw_sata_spd_limit", scope: !7296, file: !204, line: 794, baseType: !7, size: 32, offset: 5824)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd_limit", scope: !7296, file: !204, line: 795, baseType: !7, size: 32, offset: 5856)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd", scope: !7296, file: !204, line: 796, baseType: !7, size: 32, offset: 5888)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_policy", scope: !7296, file: !204, line: 797, baseType: !203, size: 32, offset: 5920)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "eh_info", scope: !7296, file: !204, line: 800, baseType: !7310, size: 960, offset: 5952)
!7310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_info", file: !204, line: 744, size: 960, elements: !7311)
!7311 = !{!7312, !7423, !7424, !7425, !7426, !7428, !7429, !7430, !7434}
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7310, file: !204, line: 745, baseType: !7313, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7314, size: 64)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_device", file: !204, line: 673, size: 16384, elements: !7315)
!7315 = !{!7316, !7317, !7318, !7319, !7320, !7321, !7322, !7374, !7375, !7376, !7377, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391, !7392, !7393, !7402, !7404, !7406, !7407, !7408, !7409, !7410, !7411, !7412}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7314, file: !204, line: 674, baseType: !7295, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "devno", scope: !7314, file: !204, line: 675, baseType: !7, size: 32, offset: 64)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "horkage", scope: !7314, file: !204, line: 676, baseType: !7, size: 32, offset: 96)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7314, file: !204, line: 677, baseType: !1186, size: 64, offset: 128)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "sdev", scope: !7314, file: !204, line: 678, baseType: !6866, size: 64, offset: 192)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !7314, file: !204, line: 679, baseType: !1187, size: 64, offset: 256)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_cache", scope: !7314, file: !204, line: 681, baseType: !7323, size: 64, offset: 320)
!7323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7324, size: 64)
!7324 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !7325, line: 899, size: 192, elements: !7326)
!7325 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!7326 = !{!7327, !7329, !7334, !7340, !7347, !7353, !7360, !7368}
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7324, file: !7325, line: 900, baseType: !7328, size: 32)
!7328 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !7325, line: 635, baseType: !1266)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !7324, file: !7325, line: 904, baseType: !7330, size: 128)
!7330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7324, file: !7325, line: 901, size: 128, elements: !7331)
!7331 = !{!7332, !7333}
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7330, file: !7325, line: 902, baseType: !7328, size: 32)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7330, file: !7325, line: 903, baseType: !1229, size: 64, offset: 64)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !7324, file: !7325, line: 910, baseType: !7335, size: 128)
!7335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7324, file: !7325, line: 906, size: 128, elements: !7336)
!7336 = !{!7337, !7338, !7339}
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7335, file: !7325, line: 907, baseType: !7328, size: 32)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7335, file: !7325, line: 908, baseType: !1266, size: 32, offset: 32)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7335, file: !7325, line: 909, baseType: !1349, size: 64, offset: 64)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7324, file: !7325, line: 916, baseType: !7341, size: 128)
!7341 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7324, file: !7325, line: 912, size: 128, elements: !7342)
!7342 = !{!7343, !7344, !7345}
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7341, file: !7325, line: 913, baseType: !7328, size: 32)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7341, file: !7325, line: 914, baseType: !1266, size: 32, offset: 32)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7341, file: !7325, line: 915, baseType: !7346, size: 64, offset: 64)
!7346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !7324, file: !7325, line: 922, baseType: !7348, size: 128)
!7348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7324, file: !7325, line: 918, size: 128, elements: !7349)
!7349 = !{!7350, !7351, !7352}
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7348, file: !7325, line: 919, baseType: !7328, size: 32)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7348, file: !7325, line: 920, baseType: !1266, size: 32, offset: 32)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !7348, file: !7325, line: 921, baseType: !7323, size: 64, offset: 64)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !7324, file: !7325, line: 928, baseType: !7354, size: 128)
!7354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7324, file: !7325, line: 924, size: 128, elements: !7355)
!7355 = !{!7356, !7357, !7358}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7354, file: !7325, line: 925, baseType: !7328, size: 32)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !7354, file: !7325, line: 926, baseType: !7328, size: 32, offset: 32)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !7354, file: !7325, line: 927, baseType: !7359, size: 64, offset: 64)
!7359 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !7325, line: 424, baseType: !1187)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !7324, file: !7325, line: 935, baseType: !7361, size: 192)
!7361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7324, file: !7325, line: 930, size: 192, elements: !7362)
!7362 = !{!7363, !7364, !7365, !7367}
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7361, file: !7325, line: 931, baseType: !7328, size: 32)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !7361, file: !7325, line: 932, baseType: !1266, size: 32, offset: 32)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !7361, file: !7325, line: 933, baseType: !7366, size: 64, offset: 64)
!7366 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !7325, line: 128, baseType: !1229)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !7361, file: !7325, line: 934, baseType: !1266, size: 32, offset: 128)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !7324, file: !7325, line: 941, baseType: !7369, size: 96)
!7369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7324, file: !7325, line: 937, size: 96, elements: !7370)
!7370 = !{!7371, !7372, !7373}
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7369, file: !7325, line: 938, baseType: !7328, size: 32)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !7369, file: !7325, line: 939, baseType: !1266, size: 32, offset: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !7369, file: !7325, line: 940, baseType: !1266, size: 32, offset: 64)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_filter", scope: !7314, file: !204, line: 682, baseType: !7, size: 32, offset: 384)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !7314, file: !204, line: 687, baseType: !1292, size: 5568, offset: 448)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "n_sectors", scope: !7314, file: !204, line: 689, baseType: !1229, size: 64, offset: 6016)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "n_native_sectors", scope: !7314, file: !204, line: 690, baseType: !1229, size: 64, offset: 6080)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7314, file: !204, line: 691, baseType: !7, size: 32, offset: 6144)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "unpark_deadline", scope: !7314, file: !204, line: 692, baseType: !1186, size: 64, offset: 6208)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mode", scope: !7314, file: !204, line: 694, baseType: !2109, size: 8, offset: 6272)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mode", scope: !7314, file: !204, line: 695, baseType: !2109, size: 8, offset: 6280)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_mode", scope: !7314, file: !204, line: 696, baseType: !2109, size: 8, offset: 6288)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_shift", scope: !7314, file: !204, line: 697, baseType: !7, size: 32, offset: 6304)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "multi_count", scope: !7314, file: !204, line: 699, baseType: !7, size: 32, offset: 6336)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !7314, file: !204, line: 701, baseType: !7, size: 32, offset: 6368)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !7314, file: !204, line: 702, baseType: !7, size: 32, offset: 6400)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !7314, file: !204, line: 705, baseType: !1186, size: 64, offset: 6464)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !7314, file: !204, line: 706, baseType: !1186, size: 64, offset: 6528)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !7314, file: !204, line: 707, baseType: !1186, size: 64, offset: 6592)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !7314, file: !204, line: 710, baseType: !1989, size: 16, offset: 6656)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !7314, file: !204, line: 711, baseType: !1989, size: 16, offset: 6672)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !7314, file: !204, line: 712, baseType: !1989, size: 16, offset: 6688)
!7393 = !DIDerivedType(tag: DW_TAG_member, scope: !7314, file: !204, line: 714, baseType: !7394, size: 4096, align: 512, offset: 7168)
!7394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7314, file: !204, line: 714, size: 4096, align: 512, elements: !7395)
!7395 = !{!7396, !7400}
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7394, file: !204, line: 715, baseType: !7397, size: 4096)
!7397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1989, size: 4096, elements: !7398)
!7398 = !{!7399}
!7399 = !DISubrange(count: 256)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "gscr", scope: !7394, file: !204, line: 716, baseType: !7401, size: 4096)
!7401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 4096, elements: !5757)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "devslp_timing", scope: !7314, file: !204, line: 720, baseType: !7403, size: 64, offset: 11264)
!7403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 64, elements: !3568)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_send_recv_cmds", scope: !7314, file: !204, line: 723, baseType: !7405, size: 160, offset: 11328)
!7405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 160, elements: !4549)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_non_data_cmds", scope: !7314, file: !204, line: 724, baseType: !2156, size: 512, offset: 11488)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zoned_cap", scope: !7314, file: !204, line: 727, baseType: !1266, size: 32, offset: 12000)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_open", scope: !7314, file: !204, line: 728, baseType: !1266, size: 32, offset: 12032)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_nonseq", scope: !7314, file: !204, line: 729, baseType: !1266, size: 32, offset: 12064)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_max_open", scope: !7314, file: !204, line: 730, baseType: !1266, size: 32, offset: 12096)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "spdn_cnt", scope: !7314, file: !204, line: 733, baseType: !260, size: 32, offset: 12128)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "ering", scope: !7314, file: !204, line: 735, baseType: !7413, size: 4160, offset: 12160)
!7413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering", file: !204, line: 668, size: 4160, elements: !7414)
!7414 = !{!7415, !7416}
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !7413, file: !204, line: 669, baseType: !260, size: 32)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !7413, file: !204, line: 670, baseType: !7417, size: 4096, offset: 64)
!7417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7418, size: 4096, elements: !2187)
!7418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering_entry", file: !204, line: 662, size: 128, elements: !7419)
!7419 = !{!7420, !7421, !7422}
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "eflags", scope: !7418, file: !204, line: 663, baseType: !7, size: 32)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !7418, file: !204, line: 664, baseType: !7, size: 32, offset: 32)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !7418, file: !204, line: 665, baseType: !1229, size: 64, offset: 64)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "serror", scope: !7310, file: !204, line: 746, baseType: !1266, size: 32, offset: 64)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !7310, file: !204, line: 747, baseType: !7, size: 32, offset: 96)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !7310, file: !204, line: 748, baseType: !7, size: 32, offset: 128)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "dev_action", scope: !7310, file: !204, line: 749, baseType: !7427, size: 64, offset: 160)
!7427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2503)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7310, file: !204, line: 750, baseType: !7, size: 32, offset: 224)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "probe_mask", scope: !7310, file: !204, line: 752, baseType: !7, size: 32, offset: 256)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7310, file: !204, line: 754, baseType: !7431, size: 640, offset: 288)
!7431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 640, elements: !7432)
!7432 = !{!7433}
!7433 = !DISubrange(count: 80)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !7310, file: !204, line: 755, baseType: !260, size: 32, offset: 928)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "eh_context", scope: !7296, file: !204, line: 802, baseType: !7436, size: 1664, offset: 6912)
!7436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_context", file: !204, line: 758, size: 1664, elements: !7437)
!7437 = !{!7438, !7439, !7441, !7444, !7445, !7446, !7447, !7448, !7450}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !7436, file: !204, line: 759, baseType: !7310, size: 960)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "tries", scope: !7436, file: !204, line: 760, baseType: !7440, size: 64, offset: 960)
!7440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 64, elements: !2503)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_timeout_idx", scope: !7436, file: !204, line: 761, baseType: !7442, size: 384, offset: 1024)
!7442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 384, elements: !7443)
!7443 = !{!2504, !3840}
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "classes", scope: !7436, file: !204, line: 763, baseType: !7427, size: 64, offset: 1408)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "did_probe_mask", scope: !7436, file: !204, line: 764, baseType: !7, size: 32, offset: 1472)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "unloaded_mask", scope: !7436, file: !204, line: 765, baseType: !7, size: 32, offset: 1504)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "saved_ncq_enabled", scope: !7436, file: !204, line: 766, baseType: !7, size: 32, offset: 1536)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "saved_xfer_mode", scope: !7436, file: !204, line: 767, baseType: !7449, size: 16, offset: 1568)
!7449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 16, elements: !2503)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !7436, file: !204, line: 769, baseType: !1186, size: 64, offset: 1600)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7296, file: !204, line: 804, baseType: !7452, size: 32768, offset: 8704)
!7452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7314, size: 32768, elements: !2503)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "last_lpm_change", scope: !7296, file: !204, line: 806, baseType: !1186, size: 64, offset: 41472)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task", scope: !6836, file: !204, line: 829, baseType: !2415, size: 704, offset: 1472)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd", scope: !6836, file: !204, line: 831, baseType: !7456, size: 64, offset: 2176)
!7456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7457, size: 64)
!7457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_bmdma_prd", file: !726, line: 546, size: 64, elements: !7458)
!7458 = !{!7459, !7460}
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7457, file: !726, line: 547, baseType: !1177, size: 32)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "flags_len", scope: !7457, file: !726, line: 548, baseType: !1177, size: 32, offset: 32)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd_dma", scope: !6836, file: !204, line: 832, baseType: !3173, size: 64, offset: 2240)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !6836, file: !204, line: 836, baseType: !7, size: 32, offset: 2304)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !6836, file: !204, line: 837, baseType: !7, size: 32, offset: 2336)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !6836, file: !204, line: 838, baseType: !7, size: 32, offset: 2368)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "cbl", scope: !6836, file: !204, line: 839, baseType: !7, size: 32, offset: 2400)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "qcmd", scope: !6836, file: !204, line: 841, baseType: !7467, size: 63360, offset: 2432)
!7467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6832, size: 63360, elements: !6719)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "sas_tag_allocated", scope: !6836, file: !204, line: 842, baseType: !1186, size: 64, offset: 65792)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "qc_active", scope: !6836, file: !204, line: 843, baseType: !1229, size: 64, offset: 65856)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_links", scope: !6836, file: !204, line: 844, baseType: !260, size: 32, offset: 65920)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "sas_last_tag", scope: !6836, file: !204, line: 845, baseType: !7, size: 32, offset: 65952)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6836, file: !204, line: 847, baseType: !7296, size: 41984, offset: 66048)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "slave_link", scope: !6836, file: !204, line: 848, baseType: !7295, size: 64, offset: 108032)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pmp_links", scope: !6836, file: !204, line: 850, baseType: !260, size: 32, offset: 108096)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_link", scope: !6836, file: !204, line: 851, baseType: !7295, size: 64, offset: 108160)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "excl_link", scope: !6836, file: !204, line: 852, baseType: !7295, size: 64, offset: 108224)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !6836, file: !204, line: 854, baseType: !7478, size: 192, offset: 108288)
!7478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_stats", file: !204, line: 656, size: 192, elements: !7479)
!7479 = !{!7480, !7481, !7482}
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "unhandled_irq", scope: !7478, file: !204, line: 657, baseType: !1186, size: 64)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "idle_irq", scope: !7478, file: !204, line: 658, baseType: !1186, size: 64, offset: 64)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "rw_reqbuf", scope: !7478, file: !204, line: 659, baseType: !1186, size: 64, offset: 128)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !6836, file: !204, line: 855, baseType: !7484, size: 64, offset: 108480)
!7484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7485, size: 64)
!7485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_host", file: !204, line: 599, size: 768, elements: !7486)
!7486 = !{!7487, !7488, !7489, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7485, file: !204, line: 600, baseType: !1308)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7485, file: !204, line: 601, baseType: !1291, size: 64)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "iomap", scope: !7485, file: !204, line: 602, baseType: !7490, size: 64, offset: 64)
!7490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7491, size: 64)
!7491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "n_ports", scope: !7485, file: !204, line: 603, baseType: !7, size: 32, offset: 128)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "n_tags", scope: !7485, file: !204, line: 604, baseType: !7, size: 32, offset: 160)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !7485, file: !204, line: 605, baseType: !1187, size: 64, offset: 192)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7485, file: !204, line: 606, baseType: !6824, size: 64, offset: 256)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7485, file: !204, line: 607, baseType: !1186, size: 64, offset: 320)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !7485, file: !204, line: 608, baseType: !2880, size: 32, offset: 384)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "eh_mutex", scope: !7485, file: !204, line: 610, baseType: !1804, size: 192, offset: 448)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "eh_owner", scope: !7485, file: !204, line: 611, baseType: !3459, size: 64, offset: 640)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "simplex_claimed", scope: !7485, file: !204, line: 613, baseType: !6835, size: 64, offset: 704)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !7485, file: !204, line: 614, baseType: !7502, offset: 768)
!7502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6835, elements: !2200)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6836, file: !204, line: 856, baseType: !1291, size: 64, offset: 108544)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6836, file: !204, line: 857, baseType: !1292, size: 5568, offset: 108608)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_scan_mutex", scope: !6836, file: !204, line: 859, baseType: !1804, size: 192, offset: 114176)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_task", scope: !6836, file: !204, line: 860, baseType: !2415, size: 704, offset: 114368)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_rescan_task", scope: !6836, file: !204, line: 861, baseType: !2162, size: 256, offset: 115072)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "hsm_task_state", scope: !6836, file: !204, line: 863, baseType: !7, size: 32, offset: 115328)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !6836, file: !204, line: 865, baseType: !1266, size: 32, offset: 115360)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "eh_done_q", scope: !6836, file: !204, line: 866, baseType: !1205, size: 128, offset: 115392)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "eh_wait_q", scope: !6836, file: !204, line: 867, baseType: !2298, size: 128, offset: 115520)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "eh_tries", scope: !6836, file: !204, line: 868, baseType: !260, size: 32, offset: 115648)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "park_req_pending", scope: !6836, file: !204, line: 869, baseType: !3723, size: 192, offset: 115712)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "pm_mesg", scope: !6836, file: !204, line: 871, baseType: !5781, size: 32, offset: 115904)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "target_lpm_policy", scope: !6836, file: !204, line: 872, baseType: !203, size: 32, offset: 115936)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_timer", scope: !6836, file: !204, line: 874, baseType: !2419, size: 320, offset: 115968)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_cnt", scope: !6836, file: !204, line: 875, baseType: !1186, size: 64, offset: 116288)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !6836, file: !204, line: 877, baseType: !7519, size: 64, offset: 116352)
!7519 = !DIDerivedType(tag: DW_TAG_typedef, name: "async_cookie_t", file: !7520, line: 16, baseType: !1229)
!7520 = !DIFile(filename: "./include/linux/async.h", directory: "/home/lizy2001/genbc/linux")
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "em_message_type", scope: !6836, file: !204, line: 879, baseType: !260, size: 32, offset: 116416)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6836, file: !204, line: 880, baseType: !1187, size: 64, offset: 116480)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "__acpi_init_gtm", scope: !6836, file: !204, line: 883, baseType: !7524, size: 160, offset: 116544)
!7524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_gtm", file: !204, line: 778, size: 160, elements: !7525)
!7525 = !{!7526, !7532}
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "drive", scope: !7524, file: !204, line: 779, baseType: !7527, size: 128)
!7527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7528, size: 128, elements: !2503)
!7528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_drive", file: !204, line: 772, size: 64, elements: !7529)
!7529 = !{!7530, !7531}
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "pio", scope: !7528, file: !204, line: 774, baseType: !1266, size: 32)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7528, file: !204, line: 775, baseType: !1266, size: 32, offset: 32)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7524, file: !204, line: 780, baseType: !1266, size: 32, offset: 128)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "sector_buf", scope: !6836, file: !204, line: 886, baseType: !7534, size: 4096, align: 512, offset: 116736)
!7534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 4096, elements: !7535)
!7535 = !{!7536}
!7536 = !DISubrange(count: 512)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6832, file: !204, line: 619, baseType: !7313, size: 64, offset: 64)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "scsicmd", scope: !6832, file: !204, line: 621, baseType: !7018, size: 64, offset: 128)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "scsidone", scope: !6832, file: !204, line: 622, baseType: !7075, size: 64, offset: 192)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !6832, file: !204, line: 624, baseType: !7541, size: 256, offset: 256)
!7541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_taskfile", file: !204, line: 550, size: 256, elements: !7542)
!7542 = !{!7543, !7544, !7545, !7546, !7547, !7548, !7549, !7550, !7551, !7552, !7553, !7554, !7555, !7556, !7557, !7558}
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7541, file: !204, line: 551, baseType: !1186, size: 64)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !7541, file: !204, line: 552, baseType: !2109, size: 8, offset: 64)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !7541, file: !204, line: 554, baseType: !2109, size: 8, offset: 72)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "hob_feature", scope: !7541, file: !204, line: 556, baseType: !2109, size: 8, offset: 80)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "hob_nsect", scope: !7541, file: !204, line: 557, baseType: !2109, size: 8, offset: 88)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbal", scope: !7541, file: !204, line: 558, baseType: !2109, size: 8, offset: 96)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbam", scope: !7541, file: !204, line: 559, baseType: !2109, size: 8, offset: 104)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbah", scope: !7541, file: !204, line: 560, baseType: !2109, size: 8, offset: 112)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "feature", scope: !7541, file: !204, line: 562, baseType: !2109, size: 8, offset: 120)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "nsect", scope: !7541, file: !204, line: 563, baseType: !2109, size: 8, offset: 128)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "lbal", scope: !7541, file: !204, line: 564, baseType: !2109, size: 8, offset: 136)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "lbam", scope: !7541, file: !204, line: 565, baseType: !2109, size: 8, offset: 144)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "lbah", scope: !7541, file: !204, line: 566, baseType: !2109, size: 8, offset: 152)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7541, file: !204, line: 568, baseType: !2109, size: 8, offset: 160)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !7541, file: !204, line: 570, baseType: !2109, size: 8, offset: 168)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "auxiliary", scope: !7541, file: !204, line: 572, baseType: !1266, size: 32, offset: 192)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !6832, file: !204, line: 625, baseType: !7560, size: 128, offset: 512)
!7560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 128, elements: !2999)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6832, file: !204, line: 627, baseType: !1186, size: 64, offset: 640)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6832, file: !204, line: 628, baseType: !7, size: 32, offset: 704)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "hw_tag", scope: !6832, file: !204, line: 629, baseType: !7, size: 32, offset: 736)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "n_elem", scope: !6832, file: !204, line: 630, baseType: !7, size: 32, offset: 768)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "orig_n_elem", scope: !6832, file: !204, line: 631, baseType: !7, size: 32, offset: 800)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !6832, file: !204, line: 633, baseType: !260, size: 32, offset: 832)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "sect_size", scope: !6832, file: !204, line: 635, baseType: !7, size: 32, offset: 864)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !6832, file: !204, line: 637, baseType: !7, size: 32, offset: 896)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "extrabytes", scope: !6832, file: !204, line: 638, baseType: !7, size: 32, offset: 928)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "curbytes", scope: !6832, file: !204, line: 639, baseType: !7, size: 32, offset: 960)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "sgent", scope: !6832, file: !204, line: 641, baseType: !7058, size: 256, offset: 1024)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !6832, file: !204, line: 643, baseType: !7057, size: 64, offset: 1280)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "cursg", scope: !6832, file: !204, line: 645, baseType: !7057, size: 64, offset: 1344)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "cursg_ofs", scope: !6832, file: !204, line: 646, baseType: !7, size: 32, offset: 1408)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6832, file: !204, line: 648, baseType: !7, size: 32, offset: 1440)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "result_tf", scope: !6832, file: !204, line: 649, baseType: !7541, size: 256, offset: 1472)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !6832, file: !204, line: 650, baseType: !7578, size: 64, offset: 1728)
!7578 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_qc_cb_t", file: !204, line: 529, baseType: !7579)
!7579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7580, size: 64)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{null, !6831}
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6832, file: !204, line: 652, baseType: !1187, size: 64, offset: 1792)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "lldd_task", scope: !6832, file: !204, line: 653, baseType: !1187, size: 64, offset: 1856)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "check_atapi_dma", scope: !6825, file: !204, line: 901, baseType: !6828, size: 64, offset: 64)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "qc_prep", scope: !6825, file: !204, line: 902, baseType: !7586, size: 64, offset: 128)
!7586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7587, size: 64)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{!212, !6831}
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "qc_issue", scope: !6825, file: !204, line: 903, baseType: !7590, size: 64, offset: 192)
!7590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7591, size: 64)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{!7, !6831}
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "qc_fill_rtf", scope: !6825, file: !204, line: 904, baseType: !7594, size: 64, offset: 256)
!7594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7595, size: 64)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!1554, !6831}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "cable_detect", scope: !6825, file: !204, line: 909, baseType: !7598, size: 64, offset: 320)
!7598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7599, size: 64)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!260, !6835}
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "mode_filter", scope: !6825, file: !204, line: 910, baseType: !7602, size: 64, offset: 384)
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7603, size: 64)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{!1186, !7313, !1186}
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "set_piomode", scope: !6825, file: !204, line: 911, baseType: !7606, size: 64, offset: 448)
!7606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7607, size: 64)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{null, !6835, !7313}
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "set_dmamode", scope: !6825, file: !204, line: 912, baseType: !7606, size: 64, offset: 512)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !6825, file: !204, line: 913, baseType: !7611, size: 64, offset: 576)
!7611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7612, size: 64)
!7612 = !DISubroutineType(types: !7613)
!7613 = !{!260, !7295, !7614}
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7313, size: 64)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "read_id", scope: !6825, file: !204, line: 914, baseType: !7616, size: 64, offset: 640)
!7616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 64)
!7617 = !DISubroutineType(types: !7618)
!7618 = !{!7, !7313, !7619, !7620}
!7619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7541, size: 64)
!7620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "dev_config", scope: !6825, file: !204, line: 916, baseType: !7622, size: 64, offset: 704)
!7622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7623, size: 64)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{null, !7313}
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6825, file: !204, line: 918, baseType: !7626, size: 64, offset: 768)
!7626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7627, size: 64)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{null, !6835}
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6825, file: !204, line: 919, baseType: !7626, size: 64, offset: 832)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "prereset", scope: !6825, file: !204, line: 920, baseType: !7631, size: 64, offset: 896)
!7631 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_prereset_fn_t", file: !204, line: 530, baseType: !7632)
!7632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 64)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!260, !7295, !1186}
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "softreset", scope: !6825, file: !204, line: 921, baseType: !7636, size: 64, offset: 960)
!7636 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_reset_fn_t", file: !204, line: 531, baseType: !7637)
!7637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7638, size: 64)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{!260, !7295, !2084, !1186}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "hardreset", scope: !6825, file: !204, line: 922, baseType: !7636, size: 64, offset: 1024)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "postreset", scope: !6825, file: !204, line: 923, baseType: !7642, size: 64, offset: 1088)
!7642 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_postreset_fn_t", file: !204, line: 533, baseType: !7643)
!7643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7644, size: 64)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{null, !7295, !2084}
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_prereset", scope: !6825, file: !204, line: 924, baseType: !7631, size: 64, offset: 1152)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_softreset", scope: !6825, file: !204, line: 925, baseType: !7636, size: 64, offset: 1216)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_hardreset", scope: !6825, file: !204, line: 926, baseType: !7636, size: 64, offset: 1280)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_postreset", scope: !6825, file: !204, line: 927, baseType: !7642, size: 64, offset: 1344)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "error_handler", scope: !6825, file: !204, line: 928, baseType: !7626, size: 64, offset: 1408)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "lost_interrupt", scope: !6825, file: !204, line: 929, baseType: !7626, size: 64, offset: 1472)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "post_internal_cmd", scope: !6825, file: !204, line: 930, baseType: !7579, size: 64, offset: 1536)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "sched_eh", scope: !6825, file: !204, line: 931, baseType: !7626, size: 64, offset: 1600)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "end_eh", scope: !6825, file: !204, line: 932, baseType: !7626, size: 64, offset: 1664)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "scr_read", scope: !6825, file: !204, line: 937, baseType: !7656, size: 64, offset: 1728)
!7656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7657, size: 64)
!7657 = !DISubroutineType(types: !7658)
!7658 = !{!260, !7295, !7, !1265}
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "scr_write", scope: !6825, file: !204, line: 938, baseType: !7660, size: 64, offset: 1792)
!7660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7661, size: 64)
!7661 = !DISubroutineType(types: !7662)
!7662 = !{!260, !7295, !7, !1266}
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_attach", scope: !6825, file: !204, line: 939, baseType: !7626, size: 64, offset: 1856)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_detach", scope: !6825, file: !204, line: 940, baseType: !7626, size: 64, offset: 1920)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "set_lpm", scope: !6825, file: !204, line: 941, baseType: !7666, size: 64, offset: 1984)
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 64)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{!260, !7295, !203, !7}
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "port_suspend", scope: !6825, file: !204, line: 947, baseType: !7670, size: 64, offset: 2048)
!7670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7671, size: 64)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!260, !6835, !5781}
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "port_resume", scope: !6825, file: !204, line: 948, baseType: !7598, size: 64, offset: 2112)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "port_start", scope: !6825, file: !204, line: 949, baseType: !7598, size: 64, offset: 2176)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "port_stop", scope: !6825, file: !204, line: 950, baseType: !7626, size: 64, offset: 2240)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "host_stop", scope: !6825, file: !204, line: 951, baseType: !7677, size: 64, offset: 2304)
!7677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7678, size: 64)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{null, !7484}
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "sff_dev_select", scope: !6825, file: !204, line: 957, baseType: !7681, size: 64, offset: 2368)
!7681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7682, size: 64)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{null, !6835, !7}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "sff_set_devctl", scope: !6825, file: !204, line: 958, baseType: !7685, size: 64, offset: 2432)
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7686, size: 64)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{null, !6835, !2109}
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_status", scope: !6825, file: !204, line: 959, baseType: !7689, size: 64, offset: 2496)
!7689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7690, size: 64)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!2109, !6835}
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_altstatus", scope: !6825, file: !204, line: 960, baseType: !7689, size: 64, offset: 2560)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_load", scope: !6825, file: !204, line: 961, baseType: !7694, size: 64, offset: 2624)
!7694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7695, size: 64)
!7695 = !DISubroutineType(types: !7696)
!7696 = !{null, !6835, !7697}
!7697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7698, size: 64)
!7698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7541)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_read", scope: !6825, file: !204, line: 962, baseType: !7700, size: 64, offset: 2688)
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7701, size: 64)
!7701 = !DISubroutineType(types: !7702)
!7702 = !{null, !6835, !7619}
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "sff_exec_command", scope: !6825, file: !204, line: 963, baseType: !7694, size: 64, offset: 2752)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "sff_data_xfer", scope: !6825, file: !204, line: 965, baseType: !7705, size: 64, offset: 2816)
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7706, size: 64)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!7, !6831, !2064, !7, !260}
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_on", scope: !6825, file: !204, line: 967, baseType: !7626, size: 64, offset: 2880)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_check", scope: !6825, file: !204, line: 968, baseType: !7710, size: 64, offset: 2944)
!7710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7711, size: 64)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!1554, !6835}
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_clear", scope: !6825, file: !204, line: 969, baseType: !7626, size: 64, offset: 3008)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "sff_drain_fifo", scope: !6825, file: !204, line: 970, baseType: !7579, size: 64, offset: 3072)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_setup", scope: !6825, file: !204, line: 973, baseType: !7579, size: 64, offset: 3136)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_start", scope: !6825, file: !204, line: 974, baseType: !7579, size: 64, offset: 3200)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_stop", scope: !6825, file: !204, line: 975, baseType: !7579, size: 64, offset: 3264)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_status", scope: !6825, file: !204, line: 976, baseType: !7689, size: 64, offset: 3328)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "em_show", scope: !6825, file: !204, line: 980, baseType: !7720, size: 64, offset: 3392)
!7720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7721, size: 64)
!7721 = !DISubroutineType(types: !7722)
!7722 = !{!1380, !6835, !1349}
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "em_store", scope: !6825, file: !204, line: 981, baseType: !7724, size: 64, offset: 3456)
!7724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7725, size: 64)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!1380, !6835, !1235, !1394}
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_show", scope: !6825, file: !204, line: 983, baseType: !7728, size: 64, offset: 3520)
!7728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7729, size: 64)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{!1380, !7313, !1349}
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_store", scope: !6825, file: !204, line: 984, baseType: !7732, size: 64, offset: 3584)
!7732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7733, size: 64)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{!1380, !7313, !226}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_led_message", scope: !6825, file: !204, line: 986, baseType: !7736, size: 64, offset: 3648)
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 64)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{!1380, !6835, !1266, !1380}
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "phy_reset", scope: !6825, file: !204, line: 992, baseType: !7626, size: 64, offset: 3712)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "eng_timeout", scope: !6825, file: !204, line: 993, baseType: !7626, size: 64, offset: 3776)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "inherits", scope: !6825, file: !204, line: 999, baseType: !7742, size: 64, offset: 3840)
!7742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7743, size: 64)
!7743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6825)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6816, file: !204, line: 1009, baseType: !1187, size: 64, offset: 384)
!7745 = !DIGlobalVariableExpression(var: !7746, expr: !DIExpression())
!7746 = distinct !DIGlobalVariable(name: "mv5_ops", scope: !2, file: !3, line: 675, type: !6825, isLocal: true, isDefinition: true)
!7747 = !DIGlobalVariableExpression(var: !7748, expr: !DIExpression())
!7748 = distinct !DIGlobalVariable(name: "limit_warnings", scope: !7749, file: !3, line: 2334, type: !260, isLocal: true, isDefinition: true)
!7749 = distinct !DISubprogram(name: "mv_qc_issue", scope: !3, file: !3, line: 2332, type: !7591, scopeLine: 2333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!7750 = !DIGlobalVariableExpression(var: !7751, expr: !DIExpression())
!7751 = distinct !DIGlobalVariable(name: "mv6_ops", scope: !2, file: !3, line: 695, type: !6825, isLocal: true, isDefinition: true)
!7752 = !DIGlobalVariableExpression(var: !7753, expr: !DIExpression())
!7753 = distinct !DIGlobalVariable(name: "mv_iie_ops", scope: !2, file: !3, line: 729, type: !6825, isLocal: true, isDefinition: true)
!7754 = !DIGlobalVariableExpression(var: !7755, expr: !DIExpression())
!7755 = distinct !DIGlobalVariable(name: "mv5xxx_ops", scope: !2, file: !3, line: 817, type: !7756, isLocal: true, isDefinition: true)
!7756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7757)
!7757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_hw_ops", file: !3, line: 576, size: 384, elements: !7758)
!7758 = !{!7759, !7892, !7896, !7900, !7904, !7905}
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "phy_errata", scope: !7757, file: !3, line: 577, baseType: !7760, size: 64)
!7760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7761, size: 64)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{null, !7763, !1187, !7}
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7764, size: 64)
!7764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_host_priv", file: !3, line: 537, size: 1472, elements: !7765)
!7765 = !{!7766, !7767, !7768, !7769, !7775, !7777, !7778, !7779, !7780, !7781, !7782, !7783, !7784, !7788, !7790, !7886, !7890, !7891}
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "hp_flags", scope: !7764, file: !3, line: 538, baseType: !1266, size: 32)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "board_idx", scope: !7764, file: !3, line: 539, baseType: !7, size: 32, offset: 32)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "main_irq_mask", scope: !7764, file: !3, line: 540, baseType: !1266, size: 32, offset: 64)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !7764, file: !3, line: 541, baseType: !7770, size: 512, offset: 96)
!7770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7771, size: 512, elements: !3568)
!7771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_port_signal", file: !3, line: 532, size: 64, elements: !7772)
!7772 = !{!7773, !7774}
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "amps", scope: !7771, file: !3, line: 533, baseType: !1266, size: 32)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "pre", scope: !7771, file: !3, line: 534, baseType: !1266, size: 32, offset: 32)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7764, file: !3, line: 542, baseType: !7776, size: 64, offset: 640)
!7776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7756, size: 64)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "n_ports", scope: !7764, file: !3, line: 543, baseType: !260, size: 32, offset: 704)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7764, file: !3, line: 544, baseType: !1187, size: 64, offset: 768)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "main_irq_cause_addr", scope: !7764, file: !3, line: 545, baseType: !1187, size: 64, offset: 832)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "main_irq_mask_addr", scope: !7764, file: !3, line: 546, baseType: !1187, size: 64, offset: 896)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cause_offset", scope: !7764, file: !3, line: 547, baseType: !1266, size: 32, offset: 960)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_offset", scope: !7764, file: !3, line: 548, baseType: !1266, size: 32, offset: 992)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "unmask_all_irqs", scope: !7764, file: !3, line: 549, baseType: !1266, size: 32, offset: 1024)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !7764, file: !3, line: 558, baseType: !7785, size: 64, offset: 1088)
!7785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7786, size: 64)
!7786 = !DICompositeType(tag: DW_TAG_structure_type, name: "clk", file: !7787, line: 17, flags: DIFlagFwdDecl)
!7787 = !DIFile(filename: "./include/linux/clk.h", directory: "/home/lizy2001/genbc/linux")
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "port_clks", scope: !7764, file: !3, line: 559, baseType: !7789, size: 64, offset: 1152)
!7789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7785, size: 64)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "port_phys", scope: !7764, file: !3, line: 565, baseType: !7791, size: 64, offset: 1216)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7793, size: 64)
!7793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy", file: !232, line: 138, size: 6144, elements: !7794)
!7794 = !{!7795, !7796, !7797, !7873, !7874, !7875, !7876, !7882}
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7793, file: !232, line: 139, baseType: !1292, size: 5568)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7793, file: !232, line: 140, baseType: !260, size: 32, offset: 5568)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7793, file: !232, line: 141, baseType: !7798, size: 64, offset: 5632)
!7798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7799, size: 64)
!7799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7800)
!7800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_ops", file: !232, line: 72, size: 704, elements: !7801)
!7801 = !{!7802, !7806, !7807, !7808, !7809, !7813, !7862, !7866, !7867, !7868, !7872}
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !7800, file: !232, line: 73, baseType: !7803, size: 64)
!7803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7804, size: 64)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{!260, !7792}
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !7800, file: !232, line: 74, baseType: !7803, size: 64, offset: 64)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "power_on", scope: !7800, file: !232, line: 75, baseType: !7803, size: 64, offset: 128)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "power_off", scope: !7800, file: !232, line: 76, baseType: !7803, size: 64, offset: 192)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !7800, file: !232, line: 77, baseType: !7810, size: 64, offset: 256)
!7810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7811, size: 64)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!260, !7792, !231, !260}
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !7800, file: !232, line: 89, baseType: !7814, size: 64, offset: 320)
!7814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7815, size: 64)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{!260, !7792, !7817}
!7817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7818, size: 64)
!7818 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "phy_configure_opts", file: !232, line: 55, size: 896, elements: !7819)
!7819 = !{!7820, !7849}
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "mipi_dphy", scope: !7818, file: !232, line: 56, baseType: !7821, size: 896)
!7821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_configure_opts_mipi_dphy", file: !7822, line: 15, size: 896, elements: !7823)
!7822 = !DIFile(filename: "./include/linux/phy/phy-mipi-dphy.h", directory: "/home/lizy2001/genbc/linux")
!7823 = !{!7824, !7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844, !7845, !7846, !7847, !7848}
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "clk_miss", scope: !7821, file: !7822, line: 24, baseType: !7, size: 32)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "clk_post", scope: !7821, file: !7822, line: 36, baseType: !7, size: 32, offset: 32)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "clk_pre", scope: !7821, file: !7822, line: 47, baseType: !7, size: 32, offset: 64)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "clk_prepare", scope: !7821, file: !7822, line: 59, baseType: !7, size: 32, offset: 96)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "clk_settle", scope: !7821, file: !7822, line: 71, baseType: !7, size: 32, offset: 128)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "clk_term_en", scope: !7821, file: !7822, line: 81, baseType: !7, size: 32, offset: 160)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "clk_trail", scope: !7821, file: !7822, line: 92, baseType: !7, size: 32, offset: 192)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "clk_zero", scope: !7821, file: !7822, line: 100, baseType: !7, size: 32, offset: 224)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "d_term_en", scope: !7821, file: !7822, line: 110, baseType: !7, size: 32, offset: 256)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "eot", scope: !7821, file: !7822, line: 121, baseType: !7, size: 32, offset: 288)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "hs_exit", scope: !7821, file: !7822, line: 131, baseType: !7, size: 32, offset: 320)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "hs_prepare", scope: !7821, file: !7822, line: 143, baseType: !7, size: 32, offset: 352)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "hs_settle", scope: !7821, file: !7822, line: 155, baseType: !7, size: 32, offset: 384)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "hs_skip", scope: !7821, file: !7822, line: 168, baseType: !7, size: 32, offset: 416)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "hs_trail", scope: !7821, file: !7822, line: 180, baseType: !7, size: 32, offset: 448)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "hs_zero", scope: !7821, file: !7822, line: 188, baseType: !7, size: 32, offset: 480)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !7821, file: !7822, line: 198, baseType: !7, size: 32, offset: 512)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "lpx", scope: !7821, file: !7822, line: 208, baseType: !7, size: 32, offset: 544)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "ta_get", scope: !7821, file: !7822, line: 219, baseType: !7, size: 32, offset: 576)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "ta_go", scope: !7821, file: !7822, line: 230, baseType: !7, size: 32, offset: 608)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "ta_sure", scope: !7821, file: !7822, line: 242, baseType: !7, size: 32, offset: 640)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !7821, file: !7822, line: 253, baseType: !7, size: 32, offset: 672)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "hs_clk_rate", scope: !7821, file: !7822, line: 260, baseType: !1186, size: 64, offset: 704)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "lp_clk_rate", scope: !7821, file: !7822, line: 267, baseType: !1186, size: 64, offset: 768)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !7821, file: !7822, line: 275, baseType: !1279, size: 8, offset: 832)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !7818, file: !232, line: 57, baseType: !7850, size: 352)
!7850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_configure_opts_dp", file: !7851, line: 17, size: 352, elements: !7852)
!7851 = !DIFile(filename: "./include/linux/phy/phy-dp.h", directory: "/home/lizy2001/genbc/linux")
!7852 = !{!7853, !7854, !7855, !7857, !7858, !7859, !7860, !7861}
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "link_rate", scope: !7850, file: !7851, line: 25, baseType: !7, size: 32)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !7850, file: !7851, line: 35, baseType: !7, size: 32, offset: 32)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !7850, file: !7851, line: 46, baseType: !7856, size: 128, offset: 64)
!7856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1198)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "pre", scope: !7850, file: !7851, line: 56, baseType: !7856, size: 128, offset: 192)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "ssc", scope: !7850, file: !7851, line: 64, baseType: !2109, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !7850, file: !7851, line: 73, baseType: !2109, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "set_lanes", scope: !7850, file: !7851, line: 82, baseType: !2109, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "set_voltages", scope: !7850, file: !7851, line: 92, baseType: !2109, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !7800, file: !232, line: 107, baseType: !7863, size: 64, offset: 384)
!7863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7864, size: 64)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{!260, !7792, !231, !260, !7817}
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !7800, file: !232, line: 109, baseType: !7803, size: 64, offset: 448)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "calibrate", scope: !7800, file: !232, line: 110, baseType: !7803, size: 64, offset: 512)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7800, file: !232, line: 111, baseType: !7869, size: 64, offset: 576)
!7869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7870, size: 64)
!7870 = !DISubroutineType(types: !7871)
!7871 = !{null, !7792}
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7800, file: !232, line: 112, baseType: !1697, size: 64, offset: 640)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !7793, file: !232, line: 142, baseType: !1804, size: 192, offset: 5696)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "init_count", scope: !7793, file: !232, line: 143, baseType: !260, size: 32, offset: 5888)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "power_count", scope: !7793, file: !232, line: 144, baseType: !260, size: 32, offset: 5920)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !7793, file: !232, line: 145, baseType: !7877, size: 96, offset: 5952)
!7877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_attrs", file: !232, line: 121, size: 96, elements: !7878)
!7878 = !{!7879, !7880, !7881}
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !7877, file: !232, line: 122, baseType: !1266, size: 32)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "max_link_rate", scope: !7877, file: !232, line: 123, baseType: !1266, size: 32, offset: 32)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7877, file: !232, line: 124, baseType: !231, size: 32, offset: 64)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "pwr", scope: !7793, file: !232, line: 146, baseType: !7883, size: 64, offset: 6080)
!7883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7884, size: 64)
!7884 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !7885, line: 155, flags: DIFlagFwdDecl)
!7885 = !DIFile(filename: "./include/linux/regulator/consumer.h", directory: "/home/lizy2001/genbc/linux")
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "crqb_pool", scope: !7764, file: !3, line: 571, baseType: !7887, size: 64, offset: 1280)
!7887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7888, size: 64)
!7888 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !7889, line: 21, flags: DIFlagFwdDecl)
!7889 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "crpb_pool", scope: !7764, file: !3, line: 572, baseType: !7887, size: 64, offset: 1344)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tbl_pool", scope: !7764, file: !3, line: 573, baseType: !7887, size: 64, offset: 1408)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "enable_leds", scope: !7757, file: !3, line: 579, baseType: !7893, size: 64, offset: 64)
!7893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7894, size: 64)
!7894 = !DISubroutineType(types: !7895)
!7895 = !{null, !7763, !1187}
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "read_preamp", scope: !7757, file: !3, line: 580, baseType: !7897, size: 64, offset: 128)
!7897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7898, size: 64)
!7898 = !DISubroutineType(types: !7899)
!7899 = !{null, !7763, !260, !1187}
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "reset_hc", scope: !7757, file: !3, line: 582, baseType: !7901, size: 64, offset: 192)
!7901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7902, size: 64)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!260, !7763, !1187, !7}
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "reset_flash", scope: !7757, file: !3, line: 584, baseType: !7893, size: 64, offset: 256)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "reset_bus", scope: !7757, file: !3, line: 585, baseType: !7906, size: 64, offset: 320)
!7906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7907, size: 64)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{null, !7484, !1187}
!7909 = !DIGlobalVariableExpression(var: !7910, expr: !DIExpression())
!7910 = distinct !DIGlobalVariable(name: "mv6xxx_ops", scope: !2, file: !3, line: 826, type: !7756, isLocal: true, isDefinition: true)
!7911 = !DIGlobalVariableExpression(var: !7912, expr: !DIExpression())
!7912 = distinct !DIGlobalVariable(name: "mv_soc_65n_ops", scope: !2, file: !3, line: 844, type: !7756, isLocal: true, isDefinition: true)
!7913 = !DIGlobalVariableExpression(var: !7914, expr: !DIExpression())
!7914 = distinct !DIGlobalVariable(name: "mv_soc_ops", scope: !2, file: !3, line: 835, type: !7756, isLocal: true, isDefinition: true)
!7915 = !DIGlobalVariableExpression(var: !7916, expr: !DIExpression())
!7916 = distinct !DIGlobalVariable(name: "mv5_sht", scope: !2, file: !3, line: 662, type: !6854, isLocal: true, isDefinition: true)
!7917 = !DIGlobalVariableExpression(var: !7918, expr: !DIExpression())
!7918 = distinct !DIGlobalVariable(name: "mv6_sht", scope: !2, file: !3, line: 668, type: !6854, isLocal: true, isDefinition: true)
!7919 = !DIGlobalVariableExpression(var: !7920, expr: !DIExpression())
!7920 = distinct !DIGlobalVariable(name: "mv_platform_driver", scope: !2, file: !3, line: 4287, type: !7921, isLocal: true, isDefinition: true)
!7921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_driver", file: !7922, line: 200, size: 1600, elements: !7923)
!7922 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!7923 = !{!7924, !7952, !7953, !7957, !7961, !7962, !7963, !7964}
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7921, file: !7922, line: 201, baseType: !7925, size: 64)
!7925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7926, size: 64)
!7926 = !DISubroutineType(types: !7927)
!7927 = !{!260, !7928}
!7928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7929, size: 64)
!7929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !7922, line: 22, size: 6208, elements: !7930)
!7930 = !{!7931, !7932, !7933, !7934, !7935, !7936, !7937, !7938, !7939, !7946, !7947, !7950}
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7929, file: !7922, line: 23, baseType: !1235, size: 64)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7929, file: !7922, line: 24, baseType: !260, size: 32, offset: 64)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !7929, file: !7922, line: 25, baseType: !1554, size: 8, offset: 96)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7929, file: !7922, line: 26, baseType: !1292, size: 5568, offset: 128)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !7929, file: !7922, line: 27, baseType: !1229, size: 64, offset: 5696)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7929, file: !7922, line: 28, baseType: !6361, size: 128, offset: 5760)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !7929, file: !7922, line: 29, baseType: !1266, size: 32, offset: 5888)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7929, file: !7922, line: 30, baseType: !1222, size: 64, offset: 5952)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !7929, file: !7922, line: 32, baseType: !7940, size: 64, offset: 6016)
!7940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7941, size: 64)
!7941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7942)
!7942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !5751, line: 586, size: 256, elements: !7943)
!7943 = !{!7944, !7945}
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7942, file: !5751, line: 587, baseType: !7250, size: 160)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7942, file: !5751, line: 588, baseType: !5770, size: 64, offset: 192)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7929, file: !7922, line: 33, baseType: !1349, size: 64, offset: 6080)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !7929, file: !7922, line: 36, baseType: !7948, size: 64, offset: 6144)
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7949, size: 64)
!7949 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !7922, line: 18, flags: DIFlagFwdDecl)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !7929, file: !7922, line: 39, baseType: !7951, offset: 6208)
!7951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !6368, line: 8, elements: !1322)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7921, file: !7922, line: 202, baseType: !7925, size: 64, offset: 64)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7921, file: !7922, line: 203, baseType: !7954, size: 64, offset: 128)
!7954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7955, size: 64)
!7955 = !DISubroutineType(types: !7956)
!7956 = !{null, !7928}
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7921, file: !7922, line: 204, baseType: !7958, size: 64, offset: 192)
!7958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 64)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{!260, !7928, !5781}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7921, file: !7922, line: 205, baseType: !7925, size: 64, offset: 256)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7921, file: !7922, line: 206, baseType: !5739, size: 1152, offset: 320)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7921, file: !7922, line: 207, baseType: !7940, size: 64, offset: 1472)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_deferred_probe", scope: !7921, file: !7922, line: 208, baseType: !1554, size: 8, offset: 1536)
!7965 = !DIGlobalVariableExpression(var: !7966, expr: !DIExpression())
!7966 = distinct !DIGlobalVariable(name: "__print_once", scope: !7967, file: !3, line: 4061, type: !1554, isLocal: true, isDefinition: true)
!7967 = distinct !DISubprogram(name: "mv_platform_probe", scope: !3, file: !3, line: 4048, type: !7926, scopeLine: 4049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!7968 = !DIGlobalVariableExpression(var: !7969, expr: !DIExpression())
!7969 = distinct !DIGlobalVariable(name: "mv_sata_dt_ids", scope: !2, file: !3, line: 4279, type: !7970, isLocal: true, isDefinition: true)
!7970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5749, size: 4800, elements: !1350)
!7971 = !DIGlobalVariableExpression(var: !7972, expr: !DIExpression())
!7972 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 4491, type: !6736, isLocal: true, isDefinition: true)
!7973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 96, elements: !4582)
!7974 = !{!"rsp"}
!7975 = !{i32 7, !"Dwarf Version", i32 4}
!7976 = !{i32 2, !"Debug Info Version", i32 3}
!7977 = !{i32 1, !"wchar_size", i32 2}
!7978 = !{i32 1, !"Code Model", i32 2}
!7979 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7980 = distinct !DISubprogram(name: "mv_exit", scope: !3, file: !3, line: 4479, type: !4264, scopeLine: 4480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!7981 = !DILocation(line: 4482, column: 2, scope: !7980)
!7982 = !DILocation(line: 4484, column: 2, scope: !7980)
!7983 = !DILocation(line: 4485, column: 1, scope: !7980)
!7984 = distinct !DISubprogram(name: "mv_init", scope: !3, file: !3, line: 4462, type: !7985, scopeLine: 4463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{!260}
!7987 = !DILocalVariable(name: "rc", scope: !7984, file: !3, line: 4464, type: !260)
!7988 = !DILocation(line: 4464, column: 6, scope: !7984)
!7989 = !DILocation(line: 4466, column: 7, scope: !7984)
!7990 = !DILocation(line: 4466, column: 5, scope: !7984)
!7991 = !DILocation(line: 4467, column: 6, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 4467, column: 6)
!7993 = !DILocation(line: 4467, column: 9, scope: !7992)
!7994 = !DILocation(line: 4467, column: 6, scope: !7984)
!7995 = !DILocation(line: 4468, column: 10, scope: !7992)
!7996 = !DILocation(line: 4468, column: 3, scope: !7992)
!7997 = !DILocation(line: 4470, column: 7, scope: !7984)
!7998 = !DILocation(line: 4470, column: 5, scope: !7984)
!7999 = !DILocation(line: 4473, column: 6, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 4473, column: 6)
!8001 = !DILocation(line: 4473, column: 9, scope: !8000)
!8002 = !DILocation(line: 4473, column: 6, scope: !7984)
!8003 = !DILocation(line: 4474, column: 3, scope: !8000)
!8004 = !DILocation(line: 4476, column: 9, scope: !7984)
!8005 = !DILocation(line: 4476, column: 2, scope: !7984)
!8006 = !DILocation(line: 4477, column: 1, scope: !7984)
!8007 = !DILocalVariable(name: "pdev", arg: 1, scope: !6811, file: !3, line: 4368, type: !1200)
!8008 = !DILocation(line: 4368, column: 44, scope: !6811)
!8009 = !DILocalVariable(name: "ent", arg: 2, scope: !6811, file: !3, line: 4369, type: !6460)
!8010 = !DILocation(line: 4369, column: 35, scope: !6811)
!8011 = !DILocalVariable(name: "board_idx", scope: !6811, file: !3, line: 4371, type: !7)
!8012 = !DILocation(line: 4371, column: 15, scope: !6811)
!8013 = !DILocation(line: 4371, column: 41, scope: !6811)
!8014 = !DILocation(line: 4371, column: 46, scope: !6811)
!8015 = !DILocation(line: 4371, column: 27, scope: !6811)
!8016 = !DILocalVariable(name: "ppi", scope: !6811, file: !3, line: 4372, type: !8017)
!8017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8018, size: 128, elements: !2503)
!8018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 64)
!8019 = !DILocation(line: 4372, column: 30, scope: !6811)
!8020 = !DILocation(line: 4372, column: 38, scope: !6811)
!8021 = !DILocation(line: 4372, column: 54, scope: !6811)
!8022 = !DILocation(line: 4372, column: 41, scope: !6811)
!8023 = !DILocalVariable(name: "host", scope: !6811, file: !3, line: 4373, type: !7484)
!8024 = !DILocation(line: 4373, column: 19, scope: !6811)
!8025 = !DILocalVariable(name: "hpriv", scope: !6811, file: !3, line: 4374, type: !7763)
!8026 = !DILocation(line: 4374, column: 23, scope: !6811)
!8027 = !DILocalVariable(name: "n_ports", scope: !6811, file: !3, line: 4375, type: !260)
!8028 = !DILocation(line: 4375, column: 6, scope: !6811)
!8029 = !DILocalVariable(name: "port", scope: !6811, file: !3, line: 4375, type: !260)
!8030 = !DILocation(line: 4375, column: 15, scope: !6811)
!8031 = !DILocalVariable(name: "rc", scope: !6811, file: !3, line: 4375, type: !260)
!8032 = !DILocation(line: 4375, column: 21, scope: !6811)
!8033 = !DILocation(line: 4377, column: 2, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 4377, column: 2)
!8035 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4377, column: 2)
!8036 = !DILocation(line: 4377, column: 2, scope: !8035)
!8037 = !DILocation(line: 4377, column: 2, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 4377, column: 2)
!8039 = !DILocation(line: 4380, column: 28, scope: !6811)
!8040 = !DILocation(line: 4380, column: 36, scope: !6811)
!8041 = !DILocation(line: 4380, column: 12, scope: !6811)
!8042 = !DILocation(line: 4380, column: 43, scope: !6811)
!8043 = !DILocation(line: 4380, column: 10, scope: !6811)
!8044 = !DILocation(line: 4382, column: 31, scope: !6811)
!8045 = !DILocation(line: 4382, column: 37, scope: !6811)
!8046 = !DILocation(line: 4382, column: 42, scope: !6811)
!8047 = !DILocation(line: 4382, column: 47, scope: !6811)
!8048 = !DILocation(line: 4382, column: 9, scope: !6811)
!8049 = !DILocation(line: 4382, column: 7, scope: !6811)
!8050 = !DILocation(line: 4383, column: 24, scope: !6811)
!8051 = !DILocation(line: 4383, column: 30, scope: !6811)
!8052 = !DILocation(line: 4383, column: 10, scope: !6811)
!8053 = !DILocation(line: 4383, column: 8, scope: !6811)
!8054 = !DILocation(line: 4384, column: 7, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4384, column: 6)
!8056 = !DILocation(line: 4384, column: 12, scope: !8055)
!8057 = !DILocation(line: 4384, column: 16, scope: !8055)
!8058 = !DILocation(line: 4384, column: 6, scope: !6811)
!8059 = !DILocation(line: 4385, column: 3, scope: !8055)
!8060 = !DILocation(line: 4386, column: 23, scope: !6811)
!8061 = !DILocation(line: 4386, column: 2, scope: !6811)
!8062 = !DILocation(line: 4386, column: 8, scope: !6811)
!8063 = !DILocation(line: 4386, column: 21, scope: !6811)
!8064 = !DILocation(line: 4387, column: 19, scope: !6811)
!8065 = !DILocation(line: 4387, column: 2, scope: !6811)
!8066 = !DILocation(line: 4387, column: 9, scope: !6811)
!8067 = !DILocation(line: 4387, column: 17, scope: !6811)
!8068 = !DILocation(line: 4388, column: 21, scope: !6811)
!8069 = !DILocation(line: 4388, column: 2, scope: !6811)
!8070 = !DILocation(line: 4388, column: 9, scope: !6811)
!8071 = !DILocation(line: 4388, column: 19, scope: !6811)
!8072 = !DILocation(line: 4391, column: 26, scope: !6811)
!8073 = !DILocation(line: 4391, column: 7, scope: !6811)
!8074 = !DILocation(line: 4391, column: 5, scope: !6811)
!8075 = !DILocation(line: 4392, column: 6, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4392, column: 6)
!8077 = !DILocation(line: 4392, column: 6, scope: !6811)
!8078 = !DILocation(line: 4393, column: 10, scope: !8076)
!8079 = !DILocation(line: 4393, column: 3, scope: !8076)
!8080 = !DILocation(line: 4395, column: 26, scope: !6811)
!8081 = !DILocation(line: 4395, column: 7, scope: !6811)
!8082 = !DILocation(line: 4395, column: 5, scope: !6811)
!8083 = !DILocation(line: 4396, column: 6, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4396, column: 6)
!8085 = !DILocation(line: 4396, column: 9, scope: !8084)
!8086 = !DILocation(line: 4396, column: 6, scope: !6811)
!8087 = !DILocation(line: 4397, column: 19, scope: !8084)
!8088 = !DILocation(line: 4397, column: 3, scope: !8084)
!8089 = !DILocation(line: 4398, column: 6, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4398, column: 6)
!8091 = !DILocation(line: 4398, column: 6, scope: !6811)
!8092 = !DILocation(line: 4399, column: 10, scope: !8090)
!8093 = !DILocation(line: 4399, column: 3, scope: !8090)
!8094 = !DILocation(line: 4400, column: 33, scope: !6811)
!8095 = !DILocation(line: 4400, column: 16, scope: !6811)
!8096 = !DILocation(line: 4400, column: 2, scope: !6811)
!8097 = !DILocation(line: 4400, column: 8, scope: !6811)
!8098 = !DILocation(line: 4400, column: 14, scope: !6811)
!8099 = !DILocation(line: 4401, column: 16, scope: !6811)
!8100 = !DILocation(line: 4401, column: 22, scope: !6811)
!8101 = !DILocation(line: 4401, column: 2, scope: !6811)
!8102 = !DILocation(line: 4401, column: 9, scope: !6811)
!8103 = !DILocation(line: 4401, column: 14, scope: !6811)
!8104 = !DILocation(line: 4403, column: 34, scope: !6811)
!8105 = !DILocation(line: 4403, column: 40, scope: !6811)
!8106 = !DILocation(line: 4403, column: 7, scope: !6811)
!8107 = !DILocation(line: 4403, column: 5, scope: !6811)
!8108 = !DILocation(line: 4404, column: 6, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4404, column: 6)
!8110 = !DILocation(line: 4404, column: 6, scope: !6811)
!8111 = !DILocation(line: 4405, column: 3, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 4404, column: 10)
!8113 = !DILocation(line: 4406, column: 10, scope: !8112)
!8114 = !DILocation(line: 4406, column: 3, scope: !8112)
!8115 = !DILocation(line: 4409, column: 27, scope: !6811)
!8116 = !DILocation(line: 4409, column: 35, scope: !6811)
!8117 = !DILocation(line: 4409, column: 41, scope: !6811)
!8118 = !DILocation(line: 4409, column: 7, scope: !6811)
!8119 = !DILocation(line: 4409, column: 5, scope: !6811)
!8120 = !DILocation(line: 4410, column: 6, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4410, column: 6)
!8122 = !DILocation(line: 4410, column: 6, scope: !6811)
!8123 = !DILocation(line: 4411, column: 10, scope: !8121)
!8124 = !DILocation(line: 4411, column: 3, scope: !8121)
!8125 = !DILocation(line: 4413, column: 12, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4413, column: 2)
!8127 = !DILocation(line: 4413, column: 7, scope: !8126)
!8128 = !DILocation(line: 4413, column: 17, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 4413, column: 2)
!8130 = !DILocation(line: 4413, column: 24, scope: !8129)
!8131 = !DILocation(line: 4413, column: 30, scope: !8129)
!8132 = !DILocation(line: 4413, column: 22, scope: !8129)
!8133 = !DILocation(line: 4413, column: 2, scope: !8126)
!8134 = !DILocalVariable(name: "ap", scope: !8135, file: !3, line: 4414, type: !6835)
!8135 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 4413, column: 47)
!8136 = !DILocation(line: 4414, column: 20, scope: !8135)
!8137 = !DILocation(line: 4414, column: 25, scope: !8135)
!8138 = !DILocation(line: 4414, column: 31, scope: !8135)
!8139 = !DILocation(line: 4414, column: 37, scope: !8135)
!8140 = !DILocalVariable(name: "port_mmio", scope: !8135, file: !3, line: 4415, type: !1187)
!8141 = !DILocation(line: 4415, column: 17, scope: !8135)
!8142 = !DILocation(line: 4415, column: 42, scope: !8135)
!8143 = !DILocation(line: 4415, column: 49, scope: !8135)
!8144 = !DILocation(line: 4415, column: 55, scope: !8135)
!8145 = !DILocation(line: 4415, column: 29, scope: !8135)
!8146 = !DILocalVariable(name: "offset", scope: !8135, file: !3, line: 4416, type: !7)
!8147 = !DILocation(line: 4416, column: 16, scope: !8135)
!8148 = !DILocation(line: 4416, column: 25, scope: !8135)
!8149 = !DILocation(line: 4416, column: 37, scope: !8135)
!8150 = !DILocation(line: 4416, column: 44, scope: !8135)
!8151 = !DILocation(line: 4416, column: 35, scope: !8135)
!8152 = !DILocation(line: 4418, column: 22, scope: !8135)
!8153 = !DILocation(line: 4418, column: 3, scope: !8135)
!8154 = !DILocation(line: 4419, column: 22, scope: !8135)
!8155 = !DILocation(line: 4419, column: 42, scope: !8135)
!8156 = !DILocation(line: 4419, column: 3, scope: !8135)
!8157 = !DILocation(line: 4420, column: 2, scope: !8135)
!8158 = !DILocation(line: 4413, column: 43, scope: !8129)
!8159 = !DILocation(line: 4413, column: 2, scope: !8129)
!8160 = distinct !{!8160, !8133, !8161}
!8161 = !DILocation(line: 4420, column: 2, scope: !8126)
!8162 = !DILocation(line: 4423, column: 20, scope: !6811)
!8163 = !DILocation(line: 4423, column: 7, scope: !6811)
!8164 = !DILocation(line: 4423, column: 5, scope: !6811)
!8165 = !DILocation(line: 4424, column: 6, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4424, column: 6)
!8167 = !DILocation(line: 4424, column: 6, scope: !6811)
!8168 = !DILocation(line: 4425, column: 10, scope: !8166)
!8169 = !DILocation(line: 4425, column: 3, scope: !8166)
!8170 = !DILocation(line: 4428, column: 6, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4428, column: 6)
!8172 = !DILocation(line: 4428, column: 10, scope: !8171)
!8173 = !DILocation(line: 4428, column: 28, scope: !8171)
!8174 = !DILocation(line: 4428, column: 13, scope: !8171)
!8175 = !DILocation(line: 4428, column: 34, scope: !8171)
!8176 = !DILocation(line: 4428, column: 6, scope: !6811)
!8177 = !DILocation(line: 4429, column: 3, scope: !8171)
!8178 = !DILocation(line: 4429, column: 10, scope: !8171)
!8179 = !DILocation(line: 4429, column: 19, scope: !8171)
!8180 = !DILocation(line: 4431, column: 18, scope: !6811)
!8181 = !DILocation(line: 4431, column: 2, scope: !6811)
!8182 = !DILocation(line: 4432, column: 16, scope: !6811)
!8183 = !DILocation(line: 4432, column: 2, scope: !6811)
!8184 = !DILocation(line: 4434, column: 17, scope: !6811)
!8185 = !DILocation(line: 4434, column: 2, scope: !6811)
!8186 = !DILocation(line: 4435, column: 18, scope: !6811)
!8187 = !DILocation(line: 4435, column: 2, scope: !6811)
!8188 = !DILocation(line: 4436, column: 27, scope: !6811)
!8189 = !DILocation(line: 4436, column: 33, scope: !6811)
!8190 = !DILocation(line: 4436, column: 39, scope: !6811)
!8191 = !DILocation(line: 4437, column: 6, scope: !6811)
!8192 = !DILocation(line: 4436, column: 9, scope: !6811)
!8193 = !DILocation(line: 4436, column: 2, scope: !6811)
!8194 = !DILocation(line: 4438, column: 1, scope: !6811)
!8195 = distinct !DISubprogram(name: "mv_pci_device_resume", scope: !3, file: !3, line: 4441, type: !6485, scopeLine: 4442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8196 = !DILocalVariable(name: "pdev", arg: 1, scope: !8195, file: !3, line: 4441, type: !1200)
!8197 = !DILocation(line: 4441, column: 49, scope: !8195)
!8198 = !DILocalVariable(name: "host", scope: !8195, file: !3, line: 4443, type: !7484)
!8199 = !DILocation(line: 4443, column: 19, scope: !8195)
!8200 = !DILocation(line: 4443, column: 42, scope: !8195)
!8201 = !DILocation(line: 4443, column: 26, scope: !8195)
!8202 = !DILocalVariable(name: "rc", scope: !8195, file: !3, line: 4444, type: !260)
!8203 = !DILocation(line: 4444, column: 6, scope: !8195)
!8204 = !DILocation(line: 4446, column: 32, scope: !8195)
!8205 = !DILocation(line: 4446, column: 7, scope: !8195)
!8206 = !DILocation(line: 4446, column: 5, scope: !8195)
!8207 = !DILocation(line: 4447, column: 6, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4447, column: 6)
!8209 = !DILocation(line: 4447, column: 6, scope: !8195)
!8210 = !DILocation(line: 4448, column: 10, scope: !8208)
!8211 = !DILocation(line: 4448, column: 3, scope: !8208)
!8212 = !DILocation(line: 4451, column: 20, scope: !8195)
!8213 = !DILocation(line: 4451, column: 7, scope: !8195)
!8214 = !DILocation(line: 4451, column: 5, scope: !8195)
!8215 = !DILocation(line: 4452, column: 6, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4452, column: 6)
!8217 = !DILocation(line: 4452, column: 6, scope: !8195)
!8218 = !DILocation(line: 4453, column: 10, scope: !8216)
!8219 = !DILocation(line: 4453, column: 3, scope: !8216)
!8220 = !DILocation(line: 4455, column: 18, scope: !8195)
!8221 = !DILocation(line: 4455, column: 2, scope: !8195)
!8222 = !DILocation(line: 4457, column: 2, scope: !8195)
!8223 = !DILocation(line: 4458, column: 1, scope: !8195)
!8224 = distinct !DISubprogram(name: "mv_get_hc_count", scope: !3, file: !3, line: 927, type: !8225, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!260, !1186}
!8227 = !DILocalVariable(name: "port_flags", arg: 1, scope: !8224, file: !3, line: 927, type: !1186)
!8228 = !DILocation(line: 927, column: 49, scope: !8224)
!8229 = !DILocation(line: 929, column: 11, scope: !8224)
!8230 = !DILocation(line: 929, column: 22, scope: !8224)
!8231 = !DILocation(line: 929, column: 10, scope: !8224)
!8232 = !DILocation(line: 929, column: 2, scope: !8224)
!8233 = distinct !DISubprogram(name: "devm_kzalloc", scope: !25, file: !25, line: 215, type: !8234, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8234 = !DISubroutineType(types: !8235)
!8235 = !{!1187, !1291, !1394, !1175}
!8236 = !DILocalVariable(name: "dev", arg: 1, scope: !8233, file: !25, line: 215, type: !1291)
!8237 = !DILocation(line: 215, column: 49, scope: !8233)
!8238 = !DILocalVariable(name: "size", arg: 2, scope: !8233, file: !25, line: 215, type: !1394)
!8239 = !DILocation(line: 215, column: 61, scope: !8233)
!8240 = !DILocalVariable(name: "gfp", arg: 3, scope: !8233, file: !25, line: 215, type: !1175)
!8241 = !DILocation(line: 215, column: 73, scope: !8233)
!8242 = !DILocation(line: 217, column: 22, scope: !8233)
!8243 = !DILocation(line: 217, column: 27, scope: !8233)
!8244 = !DILocation(line: 217, column: 33, scope: !8233)
!8245 = !DILocation(line: 217, column: 37, scope: !8233)
!8246 = !DILocation(line: 217, column: 9, scope: !8233)
!8247 = !DILocation(line: 217, column: 2, scope: !8233)
!8248 = distinct !DISubprogram(name: "dma_set_mask_and_coherent", scope: !8249, file: !8249, line: 420, type: !8250, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8249 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!8250 = !DISubroutineType(types: !8251)
!8251 = !{!260, !1291, !1229}
!8252 = !DILocalVariable(name: "dev", arg: 1, scope: !8248, file: !8249, line: 420, type: !1291)
!8253 = !DILocation(line: 420, column: 60, scope: !8248)
!8254 = !DILocalVariable(name: "mask", arg: 2, scope: !8248, file: !8249, line: 420, type: !1229)
!8255 = !DILocation(line: 420, column: 69, scope: !8248)
!8256 = !DILocalVariable(name: "rc", scope: !8248, file: !8249, line: 422, type: !260)
!8257 = !DILocation(line: 422, column: 6, scope: !8248)
!8258 = !DILocation(line: 422, column: 24, scope: !8248)
!8259 = !DILocation(line: 422, column: 29, scope: !8248)
!8260 = !DILocation(line: 422, column: 11, scope: !8248)
!8261 = !DILocation(line: 423, column: 6, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8248, file: !8249, line: 423, column: 6)
!8263 = !DILocation(line: 423, column: 9, scope: !8262)
!8264 = !DILocation(line: 423, column: 6, scope: !8248)
!8265 = !DILocation(line: 424, column: 25, scope: !8262)
!8266 = !DILocation(line: 424, column: 30, scope: !8262)
!8267 = !DILocation(line: 424, column: 3, scope: !8262)
!8268 = !DILocation(line: 425, column: 9, scope: !8248)
!8269 = !DILocation(line: 425, column: 2, scope: !8248)
!8270 = distinct !DISubprogram(name: "mv_create_dma_pools", scope: !3, file: !3, line: 3999, type: !8271, scopeLine: 4000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{!260, !7763, !1291}
!8273 = !DILocalVariable(name: "hpriv", arg: 1, scope: !8270, file: !3, line: 3999, type: !7763)
!8274 = !DILocation(line: 3999, column: 53, scope: !8270)
!8275 = !DILocalVariable(name: "dev", arg: 2, scope: !8270, file: !3, line: 3999, type: !1291)
!8276 = !DILocation(line: 3999, column: 75, scope: !8270)
!8277 = !DILocation(line: 4001, column: 50, scope: !8270)
!8278 = !DILocation(line: 4001, column: 23, scope: !8270)
!8279 = !DILocation(line: 4001, column: 2, scope: !8270)
!8280 = !DILocation(line: 4001, column: 9, scope: !8270)
!8281 = !DILocation(line: 4001, column: 21, scope: !8270)
!8282 = !DILocation(line: 4003, column: 7, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4003, column: 6)
!8284 = !DILocation(line: 4003, column: 14, scope: !8283)
!8285 = !DILocation(line: 4003, column: 6, scope: !8270)
!8286 = !DILocation(line: 4004, column: 3, scope: !8283)
!8287 = !DILocation(line: 4006, column: 50, scope: !8270)
!8288 = !DILocation(line: 4006, column: 23, scope: !8270)
!8289 = !DILocation(line: 4006, column: 2, scope: !8270)
!8290 = !DILocation(line: 4006, column: 9, scope: !8270)
!8291 = !DILocation(line: 4006, column: 21, scope: !8270)
!8292 = !DILocation(line: 4008, column: 7, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4008, column: 6)
!8294 = !DILocation(line: 4008, column: 14, scope: !8293)
!8295 = !DILocation(line: 4008, column: 6, scope: !8270)
!8296 = !DILocation(line: 4009, column: 3, scope: !8293)
!8297 = !DILocation(line: 4011, column: 50, scope: !8270)
!8298 = !DILocation(line: 4011, column: 23, scope: !8270)
!8299 = !DILocation(line: 4011, column: 2, scope: !8270)
!8300 = !DILocation(line: 4011, column: 9, scope: !8270)
!8301 = !DILocation(line: 4011, column: 21, scope: !8270)
!8302 = !DILocation(line: 4013, column: 7, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4013, column: 6)
!8304 = !DILocation(line: 4013, column: 14, scope: !8303)
!8305 = !DILocation(line: 4013, column: 6, scope: !8270)
!8306 = !DILocation(line: 4014, column: 3, scope: !8303)
!8307 = !DILocation(line: 4016, column: 2, scope: !8270)
!8308 = !DILocation(line: 4017, column: 1, scope: !8270)
!8309 = distinct !DISubprogram(name: "mv_port_base", scope: !3, file: !3, line: 901, type: !8310, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{!1187, !1187, !7}
!8312 = !DILocalVariable(name: "base", arg: 1, scope: !8309, file: !3, line: 901, type: !1187)
!8313 = !DILocation(line: 901, column: 56, scope: !8309)
!8314 = !DILocalVariable(name: "port", arg: 2, scope: !8309, file: !3, line: 901, type: !7)
!8315 = !DILocation(line: 901, column: 75, scope: !8309)
!8316 = !DILocation(line: 903, column: 31, scope: !8309)
!8317 = !DILocation(line: 903, column: 37, scope: !8309)
!8318 = !DILocation(line: 903, column: 10, scope: !8309)
!8319 = !DILocation(line: 903, column: 43, scope: !8309)
!8320 = !DILocation(line: 905, column: 26, scope: !8309)
!8321 = !DILocation(line: 905, column: 4, scope: !8309)
!8322 = !DILocation(line: 905, column: 32, scope: !8309)
!8323 = !DILocation(line: 904, column: 26, scope: !8309)
!8324 = !DILocation(line: 903, column: 2, scope: !8309)
!8325 = distinct !DISubprogram(name: "mv_init_host", scope: !3, file: !3, line: 3923, type: !8326, scopeLine: 3924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!260, !7484}
!8328 = !DILocalVariable(name: "host", arg: 1, scope: !8325, file: !3, line: 3923, type: !7484)
!8329 = !DILocation(line: 3923, column: 42, scope: !8325)
!8330 = !DILocalVariable(name: "rc", scope: !8325, file: !3, line: 3925, type: !260)
!8331 = !DILocation(line: 3925, column: 6, scope: !8325)
!8332 = !DILocalVariable(name: "n_hc", scope: !8325, file: !3, line: 3925, type: !260)
!8333 = !DILocation(line: 3925, column: 14, scope: !8325)
!8334 = !DILocalVariable(name: "port", scope: !8325, file: !3, line: 3925, type: !260)
!8335 = !DILocation(line: 3925, column: 20, scope: !8325)
!8336 = !DILocalVariable(name: "hc", scope: !8325, file: !3, line: 3925, type: !260)
!8337 = !DILocation(line: 3925, column: 26, scope: !8325)
!8338 = !DILocalVariable(name: "hpriv", scope: !8325, file: !3, line: 3926, type: !7763)
!8339 = !DILocation(line: 3926, column: 23, scope: !8325)
!8340 = !DILocation(line: 3926, column: 31, scope: !8325)
!8341 = !DILocation(line: 3926, column: 37, scope: !8325)
!8342 = !DILocalVariable(name: "mmio", scope: !8325, file: !3, line: 3927, type: !1187)
!8343 = !DILocation(line: 3927, column: 16, scope: !8325)
!8344 = !DILocation(line: 3927, column: 23, scope: !8325)
!8345 = !DILocation(line: 3927, column: 30, scope: !8325)
!8346 = !DILocation(line: 3929, column: 18, scope: !8325)
!8347 = !DILocation(line: 3929, column: 24, scope: !8325)
!8348 = !DILocation(line: 3929, column: 31, scope: !8325)
!8349 = !DILocation(line: 3929, column: 7, scope: !8325)
!8350 = !DILocation(line: 3929, column: 5, scope: !8325)
!8351 = !DILocation(line: 3930, column: 6, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3930, column: 6)
!8353 = !DILocation(line: 3930, column: 6, scope: !8325)
!8354 = !DILocation(line: 3931, column: 3, scope: !8352)
!8355 = !DILocation(line: 3933, column: 6, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3933, column: 6)
!8357 = !DILocation(line: 3933, column: 6, scope: !8325)
!8358 = !DILocation(line: 3934, column: 32, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 3933, column: 21)
!8360 = !DILocation(line: 3934, column: 37, scope: !8359)
!8361 = !DILocation(line: 3934, column: 3, scope: !8359)
!8362 = !DILocation(line: 3934, column: 10, scope: !8359)
!8363 = !DILocation(line: 3934, column: 30, scope: !8359)
!8364 = !DILocation(line: 3935, column: 32, scope: !8359)
!8365 = !DILocation(line: 3935, column: 37, scope: !8359)
!8366 = !DILocation(line: 3935, column: 3, scope: !8359)
!8367 = !DILocation(line: 3935, column: 10, scope: !8359)
!8368 = !DILocation(line: 3935, column: 30, scope: !8359)
!8369 = !DILocation(line: 3936, column: 2, scope: !8359)
!8370 = !DILocation(line: 3937, column: 32, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 3936, column: 9)
!8372 = !DILocation(line: 3937, column: 37, scope: !8371)
!8373 = !DILocation(line: 3937, column: 3, scope: !8371)
!8374 = !DILocation(line: 3937, column: 10, scope: !8371)
!8375 = !DILocation(line: 3937, column: 30, scope: !8371)
!8376 = !DILocation(line: 3938, column: 32, scope: !8371)
!8377 = !DILocation(line: 3938, column: 37, scope: !8371)
!8378 = !DILocation(line: 3938, column: 3, scope: !8371)
!8379 = !DILocation(line: 3938, column: 10, scope: !8371)
!8380 = !DILocation(line: 3938, column: 30, scope: !8371)
!8381 = !DILocation(line: 3942, column: 31, scope: !8325)
!8382 = !DILocation(line: 3942, column: 38, scope: !8325)
!8383 = !DILocation(line: 3942, column: 25, scope: !8325)
!8384 = !DILocation(line: 3942, column: 2, scope: !8325)
!8385 = !DILocation(line: 3942, column: 9, scope: !8325)
!8386 = !DILocation(line: 3942, column: 23, scope: !8325)
!8387 = !DILocation(line: 3945, column: 23, scope: !8325)
!8388 = !DILocation(line: 3945, column: 2, scope: !8325)
!8389 = !DILocation(line: 3947, column: 25, scope: !8325)
!8390 = !DILocation(line: 3947, column: 31, scope: !8325)
!8391 = !DILocation(line: 3947, column: 41, scope: !8325)
!8392 = !DILocation(line: 3947, column: 9, scope: !8325)
!8393 = !DILocation(line: 3947, column: 7, scope: !8325)
!8394 = !DILocation(line: 3949, column: 12, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3949, column: 2)
!8396 = !DILocation(line: 3949, column: 7, scope: !8395)
!8397 = !DILocation(line: 3949, column: 17, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 3949, column: 2)
!8399 = !DILocation(line: 3949, column: 24, scope: !8398)
!8400 = !DILocation(line: 3949, column: 30, scope: !8398)
!8401 = !DILocation(line: 3949, column: 22, scope: !8398)
!8402 = !DILocation(line: 3949, column: 2, scope: !8395)
!8403 = !DILocation(line: 3950, column: 7, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3950, column: 7)
!8405 = !DILocation(line: 3950, column: 14, scope: !8404)
!8406 = !DILocation(line: 3950, column: 19, scope: !8404)
!8407 = !DILocation(line: 3950, column: 7, scope: !8398)
!8408 = !DILocation(line: 3951, column: 4, scope: !8404)
!8409 = !DILocation(line: 3951, column: 11, scope: !8404)
!8410 = !DILocation(line: 3951, column: 16, scope: !8404)
!8411 = !DILocation(line: 3951, column: 28, scope: !8404)
!8412 = !DILocation(line: 3951, column: 35, scope: !8404)
!8413 = !DILocation(line: 3951, column: 41, scope: !8404)
!8414 = !DILocation(line: 3949, column: 43, scope: !8398)
!8415 = !DILocation(line: 3949, column: 2, scope: !8398)
!8416 = distinct !{!8416, !8402, !8417}
!8417 = !DILocation(line: 3951, column: 45, scope: !8395)
!8418 = !DILocation(line: 3953, column: 7, scope: !8325)
!8419 = !DILocation(line: 3953, column: 14, scope: !8325)
!8420 = !DILocation(line: 3953, column: 19, scope: !8325)
!8421 = !DILocation(line: 3953, column: 28, scope: !8325)
!8422 = !DILocation(line: 3953, column: 35, scope: !8325)
!8423 = !DILocation(line: 3953, column: 41, scope: !8325)
!8424 = !DILocation(line: 3953, column: 5, scope: !8325)
!8425 = !DILocation(line: 3954, column: 6, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3954, column: 6)
!8427 = !DILocation(line: 3954, column: 6, scope: !8325)
!8428 = !DILocation(line: 3955, column: 3, scope: !8426)
!8429 = !DILocation(line: 3957, column: 2, scope: !8325)
!8430 = !DILocation(line: 3957, column: 9, scope: !8325)
!8431 = !DILocation(line: 3957, column: 14, scope: !8325)
!8432 = !DILocation(line: 3957, column: 26, scope: !8325)
!8433 = !DILocation(line: 3957, column: 33, scope: !8325)
!8434 = !DILocation(line: 3958, column: 2, scope: !8325)
!8435 = !DILocation(line: 3958, column: 9, scope: !8325)
!8436 = !DILocation(line: 3958, column: 14, scope: !8325)
!8437 = !DILocation(line: 3958, column: 24, scope: !8325)
!8438 = !DILocation(line: 3958, column: 30, scope: !8325)
!8439 = !DILocation(line: 3959, column: 2, scope: !8325)
!8440 = !DILocation(line: 3959, column: 9, scope: !8325)
!8441 = !DILocation(line: 3959, column: 14, scope: !8325)
!8442 = !DILocation(line: 3959, column: 26, scope: !8325)
!8443 = !DILocation(line: 3959, column: 33, scope: !8325)
!8444 = !DILocation(line: 3961, column: 12, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3961, column: 2)
!8446 = !DILocation(line: 3961, column: 7, scope: !8445)
!8447 = !DILocation(line: 3961, column: 17, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 3961, column: 2)
!8449 = !DILocation(line: 3961, column: 24, scope: !8448)
!8450 = !DILocation(line: 3961, column: 30, scope: !8448)
!8451 = !DILocation(line: 3961, column: 22, scope: !8448)
!8452 = !DILocation(line: 3961, column: 2, scope: !8445)
!8453 = !DILocalVariable(name: "ap", scope: !8454, file: !3, line: 3962, type: !6835)
!8454 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 3961, column: 47)
!8455 = !DILocation(line: 3962, column: 20, scope: !8454)
!8456 = !DILocation(line: 3962, column: 25, scope: !8454)
!8457 = !DILocation(line: 3962, column: 31, scope: !8454)
!8458 = !DILocation(line: 3962, column: 37, scope: !8454)
!8459 = !DILocalVariable(name: "port_mmio", scope: !8454, file: !3, line: 3963, type: !1187)
!8460 = !DILocation(line: 3963, column: 17, scope: !8454)
!8461 = !DILocation(line: 3963, column: 42, scope: !8454)
!8462 = !DILocation(line: 3963, column: 48, scope: !8454)
!8463 = !DILocation(line: 3963, column: 29, scope: !8454)
!8464 = !DILocation(line: 3965, column: 17, scope: !8454)
!8465 = !DILocation(line: 3965, column: 21, scope: !8454)
!8466 = !DILocation(line: 3965, column: 29, scope: !8454)
!8467 = !DILocation(line: 3965, column: 3, scope: !8454)
!8468 = !DILocation(line: 3966, column: 2, scope: !8454)
!8469 = !DILocation(line: 3961, column: 43, scope: !8448)
!8470 = !DILocation(line: 3961, column: 2, scope: !8448)
!8471 = distinct !{!8471, !8452, !8472}
!8472 = !DILocation(line: 3966, column: 2, scope: !8445)
!8473 = !DILocation(line: 3968, column: 10, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3968, column: 2)
!8475 = !DILocation(line: 3968, column: 7, scope: !8474)
!8476 = !DILocation(line: 3968, column: 15, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 3968, column: 2)
!8478 = !DILocation(line: 3968, column: 20, scope: !8477)
!8479 = !DILocation(line: 3968, column: 18, scope: !8477)
!8480 = !DILocation(line: 3968, column: 2, scope: !8474)
!8481 = !DILocalVariable(name: "hc_mmio", scope: !8482, file: !3, line: 3969, type: !1187)
!8482 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 3968, column: 32)
!8483 = !DILocation(line: 3969, column: 17, scope: !8482)
!8484 = !DILocation(line: 3969, column: 38, scope: !8482)
!8485 = !DILocation(line: 3969, column: 44, scope: !8482)
!8486 = !DILocation(line: 3969, column: 27, scope: !8482)
!8487 = !DILocation(line: 3977, column: 15, scope: !8482)
!8488 = !DILocation(line: 3977, column: 23, scope: !8482)
!8489 = !DILocation(line: 3977, column: 3, scope: !8482)
!8490 = !DILocation(line: 3978, column: 2, scope: !8482)
!8491 = !DILocation(line: 3968, column: 28, scope: !8477)
!8492 = !DILocation(line: 3968, column: 2, scope: !8477)
!8493 = distinct !{!8493, !8480, !8494}
!8494 = !DILocation(line: 3978, column: 2, scope: !8474)
!8495 = !DILocation(line: 3980, column: 7, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3980, column: 6)
!8497 = !DILocation(line: 3980, column: 6, scope: !8325)
!8498 = !DILocation(line: 3982, column: 15, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 3980, column: 22)
!8500 = !DILocation(line: 3982, column: 22, scope: !8499)
!8501 = !DILocation(line: 3982, column: 29, scope: !8499)
!8502 = !DILocation(line: 3982, column: 20, scope: !8499)
!8503 = !DILocation(line: 3982, column: 3, scope: !8499)
!8504 = !DILocation(line: 3985, column: 12, scope: !8499)
!8505 = !DILocation(line: 3985, column: 19, scope: !8499)
!8506 = !DILocation(line: 3985, column: 36, scope: !8499)
!8507 = !DILocation(line: 3985, column: 43, scope: !8499)
!8508 = !DILocation(line: 3985, column: 50, scope: !8499)
!8509 = !DILocation(line: 3985, column: 41, scope: !8499)
!8510 = !DILocation(line: 3985, column: 3, scope: !8499)
!8511 = !DILocation(line: 3986, column: 2, scope: !8499)
!8512 = !DILocation(line: 3992, column: 23, scope: !8325)
!8513 = !DILocation(line: 3992, column: 2, scope: !8325)
!8514 = !DILocation(line: 3993, column: 24, scope: !8325)
!8515 = !DILocation(line: 3993, column: 30, scope: !8325)
!8516 = !DILocation(line: 3994, column: 9, scope: !8325)
!8517 = !DILocation(line: 3993, column: 2, scope: !8325)
!8518 = !DILabel(scope: !8325, name: "done", file: !3, line: 3995)
!8519 = !DILocation(line: 3995, column: 1, scope: !8325)
!8520 = !DILocation(line: 3996, column: 9, scope: !8325)
!8521 = !DILocation(line: 3996, column: 2, scope: !8325)
!8522 = distinct !DISubprogram(name: "mv_dump_pci_cfg", scope: !3, file: !3, line: 1263, type: !8523, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{null, !1200, !7}
!8525 = !DILocalVariable(name: "pdev", arg: 1, scope: !8522, file: !3, line: 1263, type: !1200)
!8526 = !DILocation(line: 1263, column: 45, scope: !8522)
!8527 = !DILocalVariable(name: "bytes", arg: 2, scope: !8522, file: !3, line: 1263, type: !7)
!8528 = !DILocation(line: 1263, column: 60, scope: !8522)
!8529 = !DILocation(line: 1278, column: 1, scope: !8522)
!8530 = distinct !DISubprogram(name: "mv_print_info", scope: !3, file: !3, line: 4328, type: !7678, scopeLine: 4329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8531 = !DILocalVariable(name: "host", arg: 1, scope: !8530, file: !3, line: 4328, type: !7484)
!8532 = !DILocation(line: 4328, column: 44, scope: !8530)
!8533 = !DILocalVariable(name: "pdev", scope: !8530, file: !3, line: 4330, type: !1200)
!8534 = !DILocation(line: 4330, column: 18, scope: !8530)
!8535 = !DILocalVariable(name: "__mptr", scope: !8536, file: !3, line: 4330, type: !1187)
!8536 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4330, column: 25)
!8537 = !DILocation(line: 4330, column: 25, scope: !8536)
!8538 = !DILocation(line: 4330, column: 25, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4330, column: 25)
!8540 = !DILocalVariable(name: "hpriv", scope: !8530, file: !3, line: 4331, type: !7763)
!8541 = !DILocation(line: 4331, column: 23, scope: !8530)
!8542 = !DILocation(line: 4331, column: 31, scope: !8530)
!8543 = !DILocation(line: 4331, column: 37, scope: !8530)
!8544 = !DILocalVariable(name: "scc", scope: !8530, file: !3, line: 4332, type: !2109)
!8545 = !DILocation(line: 4332, column: 5, scope: !8530)
!8546 = !DILocalVariable(name: "scc_s", scope: !8530, file: !3, line: 4333, type: !1235)
!8547 = !DILocation(line: 4333, column: 14, scope: !8530)
!8548 = !DILocalVariable(name: "gen", scope: !8530, file: !3, line: 4333, type: !1235)
!8549 = !DILocation(line: 4333, column: 22, scope: !8530)
!8550 = !DILocation(line: 4338, column: 23, scope: !8530)
!8551 = !DILocation(line: 4338, column: 2, scope: !8530)
!8552 = !DILocation(line: 4339, column: 6, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4339, column: 6)
!8554 = !DILocation(line: 4339, column: 10, scope: !8553)
!8555 = !DILocation(line: 4339, column: 6, scope: !8530)
!8556 = !DILocation(line: 4340, column: 9, scope: !8553)
!8557 = !DILocation(line: 4340, column: 3, scope: !8553)
!8558 = !DILocation(line: 4341, column: 11, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4341, column: 11)
!8560 = !DILocation(line: 4341, column: 15, scope: !8559)
!8561 = !DILocation(line: 4341, column: 11, scope: !8553)
!8562 = !DILocation(line: 4342, column: 9, scope: !8559)
!8563 = !DILocation(line: 4342, column: 3, scope: !8559)
!8564 = !DILocation(line: 4344, column: 9, scope: !8559)
!8565 = !DILocation(line: 4346, column: 6, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4346, column: 6)
!8567 = !DILocation(line: 4346, column: 6, scope: !8530)
!8568 = !DILocation(line: 4347, column: 7, scope: !8566)
!8569 = !DILocation(line: 4347, column: 3, scope: !8566)
!8570 = !DILocation(line: 4348, column: 11, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 4348, column: 11)
!8572 = !DILocation(line: 4348, column: 11, scope: !8566)
!8573 = !DILocation(line: 4349, column: 7, scope: !8571)
!8574 = !DILocation(line: 4349, column: 3, scope: !8571)
!8575 = !DILocation(line: 4350, column: 11, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 4350, column: 11)
!8577 = !DILocation(line: 4350, column: 11, scope: !8571)
!8578 = !DILocation(line: 4351, column: 7, scope: !8576)
!8579 = !DILocation(line: 4351, column: 3, scope: !8576)
!8580 = !DILocation(line: 4353, column: 7, scope: !8576)
!8581 = !DILocation(line: 4355, column: 2, scope: !8530)
!8582 = !DILocation(line: 4358, column: 1, scope: !8530)
!8583 = distinct !DISubprogram(name: "mv_interrupt", scope: !3, file: !3, line: 3002, type: !6292, scopeLine: 3003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8584 = !DILocalVariable(name: "lock", arg: 1, scope: !8585, file: !8586, line: 392, type: !3316)
!8585 = distinct !DISubprogram(name: "spin_unlock", scope: !8586, file: !8586, line: 392, type: !8587, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8586 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8587 = !DISubroutineType(types: !8588)
!8588 = !{null, !3316}
!8589 = !DILocation(line: 392, column: 53, scope: !8585, inlinedAt: !8590)
!8590 = distinct !DILocation(line: 3033, column: 2, scope: !8583)
!8591 = !DILocalVariable(name: "lock", arg: 1, scope: !8592, file: !8586, line: 352, type: !3316)
!8592 = distinct !DISubprogram(name: "spin_lock", scope: !8586, file: !8586, line: 352, type: !8587, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8593 = !DILocation(line: 352, column: 51, scope: !8592, inlinedAt: !8594)
!8594 = distinct !DILocation(line: 3010, column: 2, scope: !8583)
!8595 = !DILocalVariable(name: "irq", arg: 1, scope: !8583, file: !3, line: 3002, type: !260)
!8596 = !DILocation(line: 3002, column: 37, scope: !8583)
!8597 = !DILocalVariable(name: "dev_instance", arg: 2, scope: !8583, file: !3, line: 3002, type: !1187)
!8598 = !DILocation(line: 3002, column: 48, scope: !8583)
!8599 = !DILocalVariable(name: "host", scope: !8583, file: !3, line: 3004, type: !7484)
!8600 = !DILocation(line: 3004, column: 19, scope: !8583)
!8601 = !DILocation(line: 3004, column: 26, scope: !8583)
!8602 = !DILocalVariable(name: "hpriv", scope: !8583, file: !3, line: 3005, type: !7763)
!8603 = !DILocation(line: 3005, column: 23, scope: !8583)
!8604 = !DILocation(line: 3005, column: 31, scope: !8583)
!8605 = !DILocation(line: 3005, column: 37, scope: !8583)
!8606 = !DILocalVariable(name: "handled", scope: !8583, file: !3, line: 3006, type: !7)
!8607 = !DILocation(line: 3006, column: 15, scope: !8583)
!8608 = !DILocalVariable(name: "using_msi", scope: !8583, file: !3, line: 3007, type: !260)
!8609 = !DILocation(line: 3007, column: 6, scope: !8583)
!8610 = !DILocation(line: 3007, column: 18, scope: !8583)
!8611 = !DILocation(line: 3007, column: 25, scope: !8583)
!8612 = !DILocation(line: 3007, column: 34, scope: !8583)
!8613 = !DILocalVariable(name: "main_irq_cause", scope: !8583, file: !3, line: 3008, type: !1266)
!8614 = !DILocation(line: 3008, column: 6, scope: !8583)
!8615 = !DILocalVariable(name: "pending_irqs", scope: !8583, file: !3, line: 3008, type: !1266)
!8616 = !DILocation(line: 3008, column: 22, scope: !8583)
!8617 = !DILocation(line: 3010, column: 13, scope: !8583)
!8618 = !DILocation(line: 3010, column: 19, scope: !8583)
!8619 = !DILocation(line: 354, column: 2, scope: !8620, inlinedAt: !8594)
!8620 = distinct !DILexicalBlock(scope: !8592, file: !8586, line: 354, column: 2)
!8621 = !{i32 -2145357504}
!8622 = !DILocation(line: 354, column: 2, scope: !8623, inlinedAt: !8594)
!8623 = distinct !DILexicalBlock(scope: !8620, file: !8586, line: 354, column: 2)
!8624 = !DILocation(line: 3013, column: 6, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 3013, column: 6)
!8626 = !DILocation(line: 3013, column: 6, scope: !8583)
!8627 = !DILocation(line: 3014, column: 29, scope: !8625)
!8628 = !DILocation(line: 3014, column: 3, scope: !8625)
!8629 = !DILocation(line: 3016, column: 25, scope: !8583)
!8630 = !DILocation(line: 3016, column: 32, scope: !8583)
!8631 = !DILocation(line: 3016, column: 19, scope: !8583)
!8632 = !DILocation(line: 3016, column: 17, scope: !8583)
!8633 = !DILocation(line: 3017, column: 19, scope: !8583)
!8634 = !DILocation(line: 3017, column: 36, scope: !8583)
!8635 = !DILocation(line: 3017, column: 43, scope: !8583)
!8636 = !DILocation(line: 3017, column: 34, scope: !8583)
!8637 = !DILocation(line: 3017, column: 17, scope: !8583)
!8638 = !DILocation(line: 3022, column: 6, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 3022, column: 6)
!8640 = !DILocation(line: 3022, column: 19, scope: !8639)
!8641 = !DILocation(line: 3022, column: 22, scope: !8639)
!8642 = !DILocation(line: 3022, column: 37, scope: !8639)
!8643 = !DILocation(line: 3022, column: 6, scope: !8583)
!8644 = !DILocation(line: 3023, column: 7, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 3023, column: 7)
!8646 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 3022, column: 53)
!8647 = !DILocation(line: 0, scope: !8645)
!8648 = !DILocation(line: 3023, column: 7, scope: !8646)
!8649 = !DILocation(line: 3024, column: 27, scope: !8645)
!8650 = !DILocation(line: 3024, column: 33, scope: !8645)
!8651 = !DILocation(line: 3024, column: 40, scope: !8645)
!8652 = !DILocation(line: 3024, column: 14, scope: !8645)
!8653 = !DILocation(line: 3024, column: 12, scope: !8645)
!8654 = !DILocation(line: 3024, column: 4, scope: !8645)
!8655 = !DILocation(line: 3026, column: 27, scope: !8645)
!8656 = !DILocation(line: 3026, column: 33, scope: !8645)
!8657 = !DILocation(line: 3026, column: 14, scope: !8645)
!8658 = !DILocation(line: 3026, column: 12, scope: !8645)
!8659 = !DILocation(line: 3027, column: 2, scope: !8646)
!8660 = !DILocation(line: 3030, column: 6, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 3030, column: 6)
!8662 = !DILocation(line: 3030, column: 6, scope: !8583)
!8663 = !DILocation(line: 3031, column: 26, scope: !8661)
!8664 = !DILocation(line: 3031, column: 33, scope: !8661)
!8665 = !DILocation(line: 3031, column: 48, scope: !8661)
!8666 = !DILocation(line: 3031, column: 3, scope: !8661)
!8667 = !DILocation(line: 3033, column: 15, scope: !8583)
!8668 = !DILocation(line: 3033, column: 21, scope: !8583)
!8669 = !DILocation(line: 394, column: 2, scope: !8670, inlinedAt: !8590)
!8670 = distinct !DILexicalBlock(scope: !8585, file: !8586, line: 394, column: 2)
!8671 = !{i32 -2145355143}
!8672 = !DILocation(line: 394, column: 2, scope: !8673, inlinedAt: !8590)
!8673 = distinct !DILexicalBlock(scope: !8670, file: !8586, line: 394, column: 2)
!8674 = !DILocation(line: 3035, column: 9, scope: !8583)
!8675 = !DILocation(line: 3035, column: 2, scope: !8583)
!8676 = distinct !DISubprogram(name: "mv_qc_defer", scope: !3, file: !3, line: 1422, type: !6829, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8677 = !DILocalVariable(name: "qc", arg: 1, scope: !8676, file: !3, line: 1422, type: !6831)
!8678 = !DILocation(line: 1422, column: 47, scope: !8676)
!8679 = !DILocalVariable(name: "link", scope: !8676, file: !3, line: 1424, type: !7295)
!8680 = !DILocation(line: 1424, column: 19, scope: !8676)
!8681 = !DILocation(line: 1424, column: 26, scope: !8676)
!8682 = !DILocation(line: 1424, column: 30, scope: !8676)
!8683 = !DILocation(line: 1424, column: 35, scope: !8676)
!8684 = !DILocalVariable(name: "ap", scope: !8676, file: !3, line: 1425, type: !6835)
!8685 = !DILocation(line: 1425, column: 19, scope: !8676)
!8686 = !DILocation(line: 1425, column: 24, scope: !8676)
!8687 = !DILocation(line: 1425, column: 30, scope: !8676)
!8688 = !DILocalVariable(name: "pp", scope: !8676, file: !3, line: 1426, type: !8689)
!8689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8690, size: 64)
!8690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_port_priv", file: !3, line: 516, size: 4608, elements: !8691)
!8691 = !{!8692, !8703, !8704, !8711, !8712, !8721, !8723, !8724, !8725, !8726, !8733}
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "crqb", scope: !8690, file: !3, line: 517, baseType: !8693, size: 64)
!8693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8694, size: 64)
!8694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_crqb", file: !3, line: 474, size: 256, elements: !8695)
!8695 = !{!8696, !8697, !8698, !8699}
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "sg_addr", scope: !8694, file: !3, line: 475, baseType: !1177, size: 32)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "sg_addr_hi", scope: !8694, file: !3, line: 476, baseType: !1177, size: 32, offset: 32)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_flags", scope: !8694, file: !3, line: 477, baseType: !1181, size: 16, offset: 64)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "ata_cmd", scope: !8694, file: !3, line: 478, baseType: !8700, size: 176, offset: 80)
!8700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1181, size: 176, elements: !8701)
!8701 = !{!8702}
!8702 = !DISubrange(count: 11)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "crqb_dma", scope: !8690, file: !3, line: 518, baseType: !3173, size: 64, offset: 64)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "crpb", scope: !8690, file: !3, line: 519, baseType: !8705, size: 64, offset: 128)
!8705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8706, size: 64)
!8706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_crpb", file: !3, line: 490, size: 64, elements: !8707)
!8707 = !{!8708, !8709, !8710}
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8706, file: !3, line: 491, baseType: !1181, size: 16)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8706, file: !3, line: 492, baseType: !1181, size: 16, offset: 16)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "tmstmp", scope: !8706, file: !3, line: 493, baseType: !1177, size: 32, offset: 32)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "crpb_dma", scope: !8690, file: !3, line: 520, baseType: !3173, size: 64, offset: 192)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tbl", scope: !8690, file: !3, line: 521, baseType: !8713, size: 2048, offset: 256)
!8713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8714, size: 2048, elements: !2187)
!8714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8715, size: 64)
!8715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_sg", file: !3, line: 497, size: 128, elements: !8716)
!8716 = !{!8717, !8718, !8719, !8720}
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !8715, file: !3, line: 498, baseType: !1177, size: 32)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "flags_size", scope: !8715, file: !3, line: 499, baseType: !1177, size: 32, offset: 32)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "addr_hi", scope: !8715, file: !3, line: 500, baseType: !1177, size: 32, offset: 64)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8715, file: !3, line: 501, baseType: !1177, size: 32, offset: 96)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tbl_dma", scope: !8690, file: !3, line: 522, baseType: !8722, size: 2048, offset: 2304)
!8722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3173, size: 2048, elements: !2187)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "req_idx", scope: !8690, file: !3, line: 524, baseType: !7, size: 32, offset: 4352)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "resp_idx", scope: !8690, file: !3, line: 525, baseType: !7, size: 32, offset: 4384)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "pp_flags", scope: !8690, file: !3, line: 527, baseType: !1266, size: 32, offset: 4416)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "cached", scope: !8690, file: !3, line: 528, baseType: !8727, size: 128, offset: 4448)
!8727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_cached_regs", file: !3, line: 509, size: 128, elements: !8728)
!8728 = !{!8729, !8730, !8731, !8732}
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "fiscfg", scope: !8727, file: !3, line: 510, baseType: !1266, size: 32)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "ltmode", scope: !8727, file: !3, line: 511, baseType: !1266, size: 32, offset: 32)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "haltcond", scope: !8727, file: !3, line: 512, baseType: !1266, size: 32, offset: 64)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "unknown_rsvd", scope: !8727, file: !3, line: 513, baseType: !1266, size: 32, offset: 96)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_eh_pmp_map", scope: !8690, file: !3, line: 529, baseType: !7, size: 32, offset: 4576)
!8734 = !DILocation(line: 1426, column: 23, scope: !8676)
!8735 = !DILocation(line: 1426, column: 28, scope: !8676)
!8736 = !DILocation(line: 1426, column: 32, scope: !8676)
!8737 = !DILocation(line: 1432, column: 6, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 1432, column: 6)
!8739 = !DILocation(line: 1432, column: 10, scope: !8738)
!8740 = !DILocation(line: 1432, column: 19, scope: !8738)
!8741 = !DILocation(line: 1432, column: 6, scope: !8676)
!8742 = !DILocation(line: 1433, column: 3, scope: !8738)
!8743 = !DILocation(line: 1443, column: 6, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 1443, column: 6)
!8745 = !DILocation(line: 1443, column: 6, scope: !8676)
!8746 = !DILocation(line: 1444, column: 7, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 1444, column: 7)
!8748 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 1443, column: 31)
!8749 = !DILocation(line: 1444, column: 15, scope: !8747)
!8750 = !DILocation(line: 1444, column: 19, scope: !8747)
!8751 = !DILocation(line: 1444, column: 12, scope: !8747)
!8752 = !DILocation(line: 1444, column: 7, scope: !8748)
!8753 = !DILocation(line: 1445, column: 8, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 1445, column: 8)
!8755 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 1444, column: 30)
!8756 = !DILocation(line: 1445, column: 12, scope: !8754)
!8757 = !DILocation(line: 1445, column: 8, scope: !8755)
!8758 = !DILocation(line: 1446, column: 5, scope: !8754)
!8759 = !DILocation(line: 1447, column: 4, scope: !8755)
!8760 = !DILocation(line: 1447, column: 8, scope: !8755)
!8761 = !DILocation(line: 1447, column: 14, scope: !8755)
!8762 = !DILocation(line: 1448, column: 4, scope: !8755)
!8763 = !DILocation(line: 1450, column: 4, scope: !8747)
!8764 = !DILocation(line: 1456, column: 6, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 1456, column: 6)
!8766 = !DILocation(line: 1456, column: 10, scope: !8765)
!8767 = !DILocation(line: 1456, column: 26, scope: !8765)
!8768 = !DILocation(line: 1456, column: 6, scope: !8676)
!8769 = !DILocation(line: 1457, column: 3, scope: !8765)
!8770 = !DILocation(line: 1465, column: 7, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 1465, column: 6)
!8772 = !DILocation(line: 1465, column: 11, scope: !8771)
!8773 = !DILocation(line: 1465, column: 20, scope: !8771)
!8774 = !DILocation(line: 1465, column: 42, scope: !8771)
!8775 = !DILocation(line: 1466, column: 7, scope: !8771)
!8776 = !DILocation(line: 1466, column: 11, scope: !8771)
!8777 = !DILocation(line: 1466, column: 20, scope: !8771)
!8778 = !DILocation(line: 1465, column: 6, scope: !8676)
!8779 = !DILocation(line: 1467, column: 18, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 1467, column: 7)
!8781 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1466, column: 42)
!8782 = !DILocation(line: 1467, column: 22, scope: !8780)
!8783 = !DILocation(line: 1467, column: 25, scope: !8780)
!8784 = !DILocation(line: 1467, column: 7, scope: !8780)
!8785 = !DILocation(line: 1467, column: 7, scope: !8781)
!8786 = !DILocation(line: 1468, column: 4, scope: !8780)
!8787 = !DILocation(line: 1470, column: 20, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 1469, column: 8)
!8789 = !DILocation(line: 1470, column: 4, scope: !8788)
!8790 = !DILocation(line: 1470, column: 8, scope: !8788)
!8791 = !DILocation(line: 1470, column: 18, scope: !8788)
!8792 = !DILocation(line: 1471, column: 4, scope: !8788)
!8793 = !DILocation(line: 1475, column: 2, scope: !8676)
!8794 = !DILocation(line: 1476, column: 1, scope: !8676)
!8795 = distinct !DISubprogram(name: "mv_qc_prep", scope: !3, file: !3, line: 2034, type: !7587, scopeLine: 2035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!8796 = !DILocalVariable(name: "qc", arg: 1, scope: !8795, file: !3, line: 2034, type: !6831)
!8797 = !DILocation(line: 2034, column: 69, scope: !8795)
!8798 = !DILocalVariable(name: "ap", scope: !8795, file: !3, line: 2036, type: !6835)
!8799 = !DILocation(line: 2036, column: 19, scope: !8795)
!8800 = !DILocation(line: 2036, column: 24, scope: !8795)
!8801 = !DILocation(line: 2036, column: 28, scope: !8795)
!8802 = !DILocalVariable(name: "pp", scope: !8795, file: !3, line: 2037, type: !8689)
!8803 = !DILocation(line: 2037, column: 23, scope: !8795)
!8804 = !DILocation(line: 2037, column: 28, scope: !8795)
!8805 = !DILocation(line: 2037, column: 32, scope: !8795)
!8806 = !DILocalVariable(name: "cw", scope: !8795, file: !3, line: 2038, type: !8807)
!8807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!8808 = !DILocation(line: 2038, column: 10, scope: !8795)
!8809 = !DILocalVariable(name: "tf", scope: !8795, file: !3, line: 2039, type: !7619)
!8810 = !DILocation(line: 2039, column: 23, scope: !8795)
!8811 = !DILocation(line: 2039, column: 29, scope: !8795)
!8812 = !DILocation(line: 2039, column: 33, scope: !8795)
!8813 = !DILocalVariable(name: "flags", scope: !8795, file: !3, line: 2040, type: !1989)
!8814 = !DILocation(line: 2040, column: 6, scope: !8795)
!8815 = !DILocalVariable(name: "in_index", scope: !8795, file: !3, line: 2041, type: !7)
!8816 = !DILocation(line: 2041, column: 11, scope: !8795)
!8817 = !DILocation(line: 2043, column: 10, scope: !8795)
!8818 = !DILocation(line: 2043, column: 14, scope: !8795)
!8819 = !DILocation(line: 2043, column: 2, scope: !8795)
!8820 = !DILocation(line: 2045, column: 7, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2045, column: 7)
!8822 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 2043, column: 24)
!8823 = !DILocation(line: 2045, column: 11, scope: !8821)
!8824 = !DILocation(line: 2045, column: 19, scope: !8821)
!8825 = !DILocation(line: 2045, column: 7, scope: !8822)
!8826 = !DILocation(line: 2046, column: 4, scope: !8821)
!8827 = !DILocation(line: 2045, column: 22, scope: !8821)
!8828 = !DILocation(line: 2049, column: 3, scope: !8822)
!8829 = !DILocation(line: 2051, column: 29, scope: !8822)
!8830 = !DILocation(line: 2051, column: 3, scope: !8822)
!8831 = !DILocation(line: 2052, column: 3, scope: !8822)
!8832 = !DILocation(line: 2054, column: 3, scope: !8822)
!8833 = !DILocation(line: 2059, column: 8, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 2059, column: 6)
!8835 = !DILocation(line: 2059, column: 12, scope: !8834)
!8836 = !DILocation(line: 2059, column: 18, scope: !8834)
!8837 = !DILocation(line: 2059, column: 6, scope: !8795)
!8838 = !DILocation(line: 2060, column: 9, scope: !8834)
!8839 = !DILocation(line: 2060, column: 3, scope: !8834)
!8840 = !DILocalVariable(name: "__ret_warn_on", scope: !8841, file: !3, line: 2061, type: !260)
!8841 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 2061, column: 2)
!8842 = !DILocation(line: 2061, column: 2, scope: !8841)
!8843 = !DILocation(line: 2061, column: 2, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 2061, column: 2)
!8845 = !DILocation(line: 2061, column: 2, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 2061, column: 2)
!8847 = !DILocation(line: 2061, column: 2, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 2061, column: 2)
!8849 = !DILocation(line: 2061, column: 2, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 2061, column: 2)
!8851 = !{i32 -2139353742, i32 -2139353713, i32 -2139353667, i32 -2139353609, i32 -2139353555, i32 -2139353501, i32 -2139353446, i32 -2139353415}
!8852 = !DILocation(line: 2061, column: 2, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 2061, column: 2)
!8854 = !{i32 -2139353011, i32 -2139353004, i32 -2139352952, i32 -2139352921, i32 -2139352891}
!8855 = !DILocation(line: 2061, column: 2, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 2061, column: 2)
!8857 = !DILocation(line: 2062, column: 11, scope: !8795)
!8858 = !DILocation(line: 2062, column: 15, scope: !8795)
!8859 = !DILocation(line: 2062, column: 22, scope: !8795)
!8860 = !DILocation(line: 2062, column: 8, scope: !8795)
!8861 = !DILocation(line: 2063, column: 12, scope: !8795)
!8862 = !DILocation(line: 2063, column: 16, scope: !8795)
!8863 = !DILocation(line: 2063, column: 21, scope: !8795)
!8864 = !DILocation(line: 2063, column: 27, scope: !8795)
!8865 = !DILocation(line: 2063, column: 31, scope: !8795)
!8866 = !DILocation(line: 2063, column: 38, scope: !8795)
!8867 = !DILocation(line: 2063, column: 8, scope: !8795)
!8868 = !DILocation(line: 2066, column: 13, scope: !8795)
!8869 = !DILocation(line: 2066, column: 17, scope: !8795)
!8870 = !DILocation(line: 2066, column: 11, scope: !8795)
!8871 = !DILocation(line: 2069, column: 3, scope: !8795)
!8872 = !DILocation(line: 2068, column: 2, scope: !8795)
!8873 = !DILocation(line: 2068, column: 6, scope: !8795)
!8874 = !DILocation(line: 2068, column: 11, scope: !8795)
!8875 = !DILocation(line: 2068, column: 21, scope: !8795)
!8876 = !DILocation(line: 2068, column: 29, scope: !8795)
!8877 = !DILocation(line: 2071, column: 3, scope: !8795)
!8878 = !DILocation(line: 2070, column: 2, scope: !8795)
!8879 = !DILocation(line: 2070, column: 6, scope: !8795)
!8880 = !DILocation(line: 2070, column: 11, scope: !8795)
!8881 = !DILocation(line: 2070, column: 21, scope: !8795)
!8882 = !DILocation(line: 2070, column: 32, scope: !8795)
!8883 = !DILocation(line: 2072, column: 34, scope: !8795)
!8884 = !DILocation(line: 2072, column: 2, scope: !8795)
!8885 = !DILocation(line: 2072, column: 6, scope: !8795)
!8886 = !DILocation(line: 2072, column: 11, scope: !8795)
!8887 = !DILocation(line: 2072, column: 21, scope: !8795)
!8888 = !DILocation(line: 2072, column: 32, scope: !8795)
!8889 = !DILocation(line: 2074, column: 8, scope: !8795)
!8890 = !DILocation(line: 2074, column: 12, scope: !8795)
!8891 = !DILocation(line: 2074, column: 17, scope: !8795)
!8892 = !DILocation(line: 2074, column: 27, scope: !8795)
!8893 = !DILocation(line: 2074, column: 5, scope: !8795)
!8894 = !DILocation(line: 2083, column: 10, scope: !8795)
!8895 = !DILocation(line: 2083, column: 14, scope: !8795)
!8896 = !DILocation(line: 2083, column: 2, scope: !8795)
!8897 = !DILocation(line: 2089, column: 22, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 2083, column: 23)
!8899 = !DILocation(line: 2089, column: 26, scope: !8898)
!8900 = !DILocation(line: 2089, column: 30, scope: !8898)
!8901 = !DILocation(line: 2089, column: 3, scope: !8898)
!8902 = !DILocation(line: 2090, column: 3, scope: !8898)
!8903 = !DILocation(line: 2093, column: 22, scope: !8898)
!8904 = !DILocation(line: 2093, column: 26, scope: !8898)
!8905 = !DILocation(line: 2093, column: 30, scope: !8898)
!8906 = !DILocation(line: 2093, column: 3, scope: !8898)
!8907 = !DILocation(line: 2094, column: 22, scope: !8898)
!8908 = !DILocation(line: 2094, column: 26, scope: !8898)
!8909 = !DILocation(line: 2094, column: 30, scope: !8898)
!8910 = !DILocation(line: 2094, column: 3, scope: !8898)
!8911 = !DILocation(line: 2095, column: 3, scope: !8898)
!8912 = !DILocation(line: 2102, column: 3, scope: !8898)
!8913 = !DILocation(line: 2104, column: 3, scope: !8898)
!8914 = !DILocation(line: 2106, column: 21, scope: !8795)
!8915 = !DILocation(line: 2106, column: 25, scope: !8795)
!8916 = !DILocation(line: 2106, column: 29, scope: !8795)
!8917 = !DILocation(line: 2106, column: 2, scope: !8795)
!8918 = !DILocation(line: 2107, column: 21, scope: !8795)
!8919 = !DILocation(line: 2107, column: 25, scope: !8795)
!8920 = !DILocation(line: 2107, column: 29, scope: !8795)
!8921 = !DILocation(line: 2107, column: 2, scope: !8795)
!8922 = !DILocation(line: 2108, column: 21, scope: !8795)
!8923 = !DILocation(line: 2108, column: 25, scope: !8795)
!8924 = !DILocation(line: 2108, column: 29, scope: !8795)
!8925 = !DILocation(line: 2108, column: 2, scope: !8795)
!8926 = !DILocation(line: 2109, column: 21, scope: !8795)
!8927 = !DILocation(line: 2109, column: 25, scope: !8795)
!8928 = !DILocation(line: 2109, column: 29, scope: !8795)
!8929 = !DILocation(line: 2109, column: 2, scope: !8795)
!8930 = !DILocation(line: 2110, column: 21, scope: !8795)
!8931 = !DILocation(line: 2110, column: 25, scope: !8795)
!8932 = !DILocation(line: 2110, column: 29, scope: !8795)
!8933 = !DILocation(line: 2110, column: 2, scope: !8795)
!8934 = !DILocation(line: 2111, column: 21, scope: !8795)
!8935 = !DILocation(line: 2111, column: 25, scope: !8795)
!8936 = !DILocation(line: 2111, column: 29, scope: !8795)
!8937 = !DILocation(line: 2111, column: 2, scope: !8795)
!8938 = !DILocation(line: 2112, column: 21, scope: !8795)
!8939 = !DILocation(line: 2112, column: 25, scope: !8795)
!8940 = !DILocation(line: 2112, column: 29, scope: !8795)
!8941 = !DILocation(line: 2112, column: 2, scope: !8795)
!8942 = !DILocation(line: 2113, column: 21, scope: !8795)
!8943 = !DILocation(line: 2113, column: 25, scope: !8795)
!8944 = !DILocation(line: 2113, column: 29, scope: !8795)
!8945 = !DILocation(line: 2113, column: 2, scope: !8795)
!8946 = !DILocation(line: 2114, column: 21, scope: !8795)
!8947 = !DILocation(line: 2114, column: 25, scope: !8795)
!8948 = !DILocation(line: 2114, column: 29, scope: !8795)
!8949 = !DILocation(line: 2114, column: 2, scope: !8795)
!8950 = !DILocation(line: 2116, column: 8, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 2116, column: 6)
!8952 = !DILocation(line: 2116, column: 12, scope: !8951)
!8953 = !DILocation(line: 2116, column: 18, scope: !8951)
!8954 = !DILocation(line: 2116, column: 6, scope: !8795)
!8955 = !DILocation(line: 2117, column: 3, scope: !8951)
!8956 = !DILocation(line: 2118, column: 13, scope: !8795)
!8957 = !DILocation(line: 2118, column: 2, scope: !8795)
!8958 = !DILocation(line: 2120, column: 2, scope: !8795)
!8959 = !DILocation(line: 2121, column: 1, scope: !8795)
!8960 = !DILocalVariable(name: "qc", arg: 1, scope: !7749, file: !3, line: 2332, type: !6831)
!8961 = !DILocation(line: 2332, column: 56, scope: !7749)
!8962 = !DILocalVariable(name: "ap", scope: !7749, file: !3, line: 2335, type: !6835)
!8963 = !DILocation(line: 2335, column: 19, scope: !7749)
!8964 = !DILocation(line: 2335, column: 24, scope: !7749)
!8965 = !DILocation(line: 2335, column: 28, scope: !7749)
!8966 = !DILocalVariable(name: "port_mmio", scope: !7749, file: !3, line: 2336, type: !1187)
!8967 = !DILocation(line: 2336, column: 16, scope: !7749)
!8968 = !DILocation(line: 2336, column: 39, scope: !7749)
!8969 = !DILocation(line: 2336, column: 28, scope: !7749)
!8970 = !DILocalVariable(name: "pp", scope: !7749, file: !3, line: 2337, type: !8689)
!8971 = !DILocation(line: 2337, column: 23, scope: !7749)
!8972 = !DILocation(line: 2337, column: 28, scope: !7749)
!8973 = !DILocation(line: 2337, column: 32, scope: !7749)
!8974 = !DILocalVariable(name: "in_index", scope: !7749, file: !3, line: 2338, type: !1266)
!8975 = !DILocation(line: 2338, column: 6, scope: !7749)
!8976 = !DILocalVariable(name: "port_irqs", scope: !7749, file: !3, line: 2339, type: !7)
!8977 = !DILocation(line: 2339, column: 15, scope: !7749)
!8978 = !DILocation(line: 2341, column: 2, scope: !7749)
!8979 = !DILocation(line: 2341, column: 6, scope: !7749)
!8980 = !DILocation(line: 2341, column: 15, scope: !7749)
!8981 = !DILocation(line: 2343, column: 10, scope: !7749)
!8982 = !DILocation(line: 2343, column: 14, scope: !7749)
!8983 = !DILocation(line: 2343, column: 17, scope: !7749)
!8984 = !DILocation(line: 2343, column: 2, scope: !7749)
!8985 = !DILocation(line: 2345, column: 7, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 2345, column: 7)
!8987 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2343, column: 27)
!8988 = !DILocation(line: 2345, column: 11, scope: !8986)
!8989 = !DILocation(line: 2345, column: 14, scope: !8986)
!8990 = !DILocation(line: 2345, column: 22, scope: !8986)
!8991 = !DILocation(line: 2345, column: 7, scope: !8987)
!8992 = !DILocation(line: 2346, column: 9, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 2346, column: 8)
!8994 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 2345, column: 38)
!8995 = !DILocation(line: 2346, column: 13, scope: !8993)
!8996 = !DILocation(line: 2346, column: 18, scope: !8993)
!8997 = !DILocation(line: 2346, column: 8, scope: !8994)
!8998 = !DILocation(line: 2347, column: 5, scope: !8993)
!8999 = !DILocation(line: 2348, column: 4, scope: !8994)
!9000 = !DILocation(line: 2345, column: 25, scope: !8986)
!9001 = !DILocation(line: 2352, column: 17, scope: !8987)
!9002 = !DILocation(line: 2352, column: 21, scope: !8987)
!9003 = !DILocation(line: 2352, column: 32, scope: !8987)
!9004 = !DILocation(line: 2352, column: 36, scope: !8987)
!9005 = !DILocation(line: 2352, column: 40, scope: !8987)
!9006 = !DILocation(line: 2352, column: 43, scope: !8987)
!9007 = !DILocation(line: 2352, column: 3, scope: !8987)
!9008 = !DILocation(line: 2353, column: 18, scope: !8987)
!9009 = !DILocation(line: 2353, column: 22, scope: !8987)
!9010 = !DILocation(line: 2353, column: 30, scope: !8987)
!9011 = !DILocation(line: 2353, column: 35, scope: !8987)
!9012 = !DILocation(line: 2353, column: 3, scope: !8987)
!9013 = !DILocation(line: 2353, column: 7, scope: !8987)
!9014 = !DILocation(line: 2353, column: 15, scope: !8987)
!9015 = !DILocation(line: 2354, column: 14, scope: !8987)
!9016 = !DILocation(line: 2354, column: 18, scope: !8987)
!9017 = !DILocation(line: 2354, column: 26, scope: !8987)
!9018 = !DILocation(line: 2354, column: 12, scope: !8987)
!9019 = !DILocation(line: 2357, column: 13, scope: !8987)
!9020 = !DILocation(line: 2357, column: 17, scope: !8987)
!9021 = !DILocation(line: 2357, column: 26, scope: !8987)
!9022 = !DILocation(line: 2357, column: 55, scope: !8987)
!9023 = !DILocation(line: 2357, column: 53, scope: !8987)
!9024 = !DILocation(line: 2358, column: 6, scope: !8987)
!9025 = !DILocation(line: 2358, column: 16, scope: !8987)
!9026 = !DILocation(line: 2357, column: 3, scope: !8987)
!9027 = !DILocation(line: 2359, column: 3, scope: !8987)
!9028 = !DILocation(line: 2373, column: 7, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 2373, column: 7)
!9030 = !DILocation(line: 2373, column: 22, scope: !9029)
!9031 = !DILocation(line: 2373, column: 26, scope: !9029)
!9032 = !DILocation(line: 2373, column: 30, scope: !9029)
!9033 = !DILocation(line: 2373, column: 34, scope: !9029)
!9034 = !DILocation(line: 2373, column: 43, scope: !9029)
!9035 = !DILocation(line: 2373, column: 47, scope: !9029)
!9036 = !DILocation(line: 2373, column: 41, scope: !9029)
!9037 = !DILocation(line: 2373, column: 58, scope: !9029)
!9038 = !DILocation(line: 2373, column: 7, scope: !8987)
!9039 = !DILocation(line: 2374, column: 4, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 2373, column: 63)
!9041 = !DILocation(line: 2375, column: 4, scope: !9040)
!9042 = !DILocation(line: 2378, column: 3, scope: !9040)
!9043 = !DILocation(line: 2373, column: 60, scope: !9029)
!9044 = !DILocation(line: 2383, column: 7, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 2383, column: 7)
!9046 = !DILocation(line: 2383, column: 11, scope: !9045)
!9047 = !DILocation(line: 2383, column: 17, scope: !9045)
!9048 = !DILocation(line: 2383, column: 7, scope: !8987)
!9049 = !DILocation(line: 2384, column: 4, scope: !9045)
!9050 = !DILocation(line: 2384, column: 8, scope: !9045)
!9051 = !DILocation(line: 2384, column: 11, scope: !9045)
!9052 = !DILocation(line: 2384, column: 17, scope: !9045)
!9053 = !DILocation(line: 2385, column: 3, scope: !8987)
!9054 = !DILocation(line: 2388, column: 6, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2388, column: 6)
!9056 = !DILocation(line: 2388, column: 10, scope: !9055)
!9057 = !DILocation(line: 2388, column: 13, scope: !9055)
!9058 = !DILocation(line: 2388, column: 19, scope: !9055)
!9059 = !DILocation(line: 2388, column: 6, scope: !7749)
!9060 = !DILocation(line: 2389, column: 13, scope: !9055)
!9061 = !DILocation(line: 2389, column: 3, scope: !9055)
!9062 = !DILocation(line: 2391, column: 13, scope: !9055)
!9063 = !DILocation(line: 2398, column: 15, scope: !7749)
!9064 = !DILocation(line: 2398, column: 2, scope: !7749)
!9065 = !DILocation(line: 2399, column: 32, scope: !7749)
!9066 = !DILocation(line: 2399, column: 47, scope: !7749)
!9067 = !DILocation(line: 2399, column: 36, scope: !7749)
!9068 = !DILocation(line: 2399, column: 52, scope: !7749)
!9069 = !DILocation(line: 2399, column: 2, scope: !7749)
!9070 = !DILocation(line: 2400, column: 16, scope: !7749)
!9071 = !DILocation(line: 2400, column: 20, scope: !7749)
!9072 = !DILocation(line: 2400, column: 24, scope: !7749)
!9073 = !DILocation(line: 2400, column: 29, scope: !7749)
!9074 = !DILocation(line: 2400, column: 35, scope: !7749)
!9075 = !DILocation(line: 2400, column: 2, scope: !7749)
!9076 = !DILocation(line: 2402, column: 6, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2402, column: 6)
!9078 = !DILocation(line: 2402, column: 10, scope: !9077)
!9079 = !DILocation(line: 2402, column: 13, scope: !9077)
!9080 = !DILocation(line: 2402, column: 21, scope: !9077)
!9081 = !DILocation(line: 2402, column: 6, scope: !7749)
!9082 = !DILocalVariable(name: "hpriv", scope: !9083, file: !3, line: 2403, type: !7763)
!9083 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 2402, column: 46)
!9084 = !DILocation(line: 2403, column: 24, scope: !9083)
!9085 = !DILocation(line: 2403, column: 32, scope: !9083)
!9086 = !DILocation(line: 2403, column: 36, scope: !9083)
!9087 = !DILocation(line: 2403, column: 42, scope: !9083)
!9088 = !DILocation(line: 2415, column: 7, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 2415, column: 7)
!9090 = !DILocation(line: 2415, column: 7, scope: !9083)
!9091 = !DILocation(line: 2416, column: 27, scope: !9089)
!9092 = !DILocation(line: 2416, column: 11, scope: !9089)
!9093 = !DILocation(line: 2416, column: 4, scope: !9089)
!9094 = !DILocation(line: 2417, column: 2, scope: !9083)
!9095 = !DILocation(line: 2418, column: 28, scope: !7749)
!9096 = !DILocation(line: 2418, column: 9, scope: !7749)
!9097 = !DILocation(line: 2418, column: 2, scope: !7749)
!9098 = !DILocation(line: 2419, column: 1, scope: !7749)
!9099 = distinct !DISubprogram(name: "mv_eh_freeze", scope: !3, file: !3, line: 3659, type: !7627, scopeLine: 3660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9100 = !DILocalVariable(name: "ap", arg: 1, scope: !9099, file: !3, line: 3659, type: !6835)
!9101 = !DILocation(line: 3659, column: 43, scope: !9099)
!9102 = !DILocation(line: 3661, column: 15, scope: !9099)
!9103 = !DILocation(line: 3661, column: 2, scope: !9099)
!9104 = !DILocation(line: 3662, column: 22, scope: !9099)
!9105 = !DILocation(line: 3662, column: 2, scope: !9099)
!9106 = !DILocation(line: 3663, column: 1, scope: !9099)
!9107 = distinct !DISubprogram(name: "mv_eh_thaw", scope: !3, file: !3, line: 3665, type: !7627, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9108 = !DILocalVariable(name: "ap", arg: 1, scope: !9107, file: !3, line: 3665, type: !6835)
!9109 = !DILocation(line: 3665, column: 41, scope: !9107)
!9110 = !DILocalVariable(name: "hpriv", scope: !9107, file: !3, line: 3667, type: !7763)
!9111 = !DILocation(line: 3667, column: 23, scope: !9107)
!9112 = !DILocation(line: 3667, column: 31, scope: !9107)
!9113 = !DILocation(line: 3667, column: 35, scope: !9107)
!9114 = !DILocation(line: 3667, column: 41, scope: !9107)
!9115 = !DILocalVariable(name: "port", scope: !9107, file: !3, line: 3668, type: !7)
!9116 = !DILocation(line: 3668, column: 15, scope: !9107)
!9117 = !DILocation(line: 3668, column: 22, scope: !9107)
!9118 = !DILocation(line: 3668, column: 26, scope: !9107)
!9119 = !DILocalVariable(name: "hardport", scope: !9107, file: !3, line: 3669, type: !7)
!9120 = !DILocation(line: 3669, column: 15, scope: !9107)
!9121 = !DILocation(line: 3669, column: 48, scope: !9107)
!9122 = !DILocation(line: 3669, column: 26, scope: !9107)
!9123 = !DILocalVariable(name: "hc_mmio", scope: !9107, file: !3, line: 3670, type: !1187)
!9124 = !DILocation(line: 3670, column: 16, scope: !9107)
!9125 = !DILocation(line: 3670, column: 47, scope: !9107)
!9126 = !DILocation(line: 3670, column: 54, scope: !9107)
!9127 = !DILocation(line: 3670, column: 60, scope: !9107)
!9128 = !DILocation(line: 3670, column: 26, scope: !9107)
!9129 = !DILocalVariable(name: "port_mmio", scope: !9107, file: !3, line: 3671, type: !1187)
!9130 = !DILocation(line: 3671, column: 16, scope: !9107)
!9131 = !DILocation(line: 3671, column: 39, scope: !9107)
!9132 = !DILocation(line: 3671, column: 28, scope: !9107)
!9133 = !DILocalVariable(name: "hc_irq_cause", scope: !9107, file: !3, line: 3672, type: !1266)
!9134 = !DILocation(line: 3672, column: 6, scope: !9107)
!9135 = !DILocation(line: 3675, column: 12, scope: !9107)
!9136 = !DILocation(line: 3675, column: 22, scope: !9107)
!9137 = !DILocation(line: 3675, column: 2, scope: !9107)
!9138 = !DILocation(line: 3678, column: 42, scope: !9107)
!9139 = !DILocation(line: 3678, column: 39, scope: !9107)
!9140 = !DILocation(line: 3678, column: 17, scope: !9107)
!9141 = !DILocation(line: 3678, column: 15, scope: !9107)
!9142 = !DILocation(line: 3679, column: 11, scope: !9107)
!9143 = !DILocation(line: 3679, column: 25, scope: !9107)
!9144 = !DILocation(line: 3679, column: 33, scope: !9107)
!9145 = !DILocation(line: 3679, column: 2, scope: !9107)
!9146 = !DILocation(line: 3681, column: 22, scope: !9107)
!9147 = !DILocation(line: 3681, column: 2, scope: !9107)
!9148 = !DILocation(line: 3682, column: 1, scope: !9107)
!9149 = distinct !DISubprogram(name: "mv_hardreset", scope: !3, file: !3, line: 3619, type: !7638, scopeLine: 3621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9150 = !DILocalVariable(name: "link", arg: 1, scope: !9149, file: !3, line: 3619, type: !7295)
!9151 = !DILocation(line: 3619, column: 42, scope: !9149)
!9152 = !DILocalVariable(name: "class", arg: 2, scope: !9149, file: !3, line: 3619, type: !2084)
!9153 = !DILocation(line: 3619, column: 62, scope: !9149)
!9154 = !DILocalVariable(name: "deadline", arg: 3, scope: !9149, file: !3, line: 3620, type: !1186)
!9155 = !DILocation(line: 3620, column: 18, scope: !9149)
!9156 = !DILocalVariable(name: "ap", scope: !9149, file: !3, line: 3622, type: !6835)
!9157 = !DILocation(line: 3622, column: 19, scope: !9149)
!9158 = !DILocation(line: 3622, column: 24, scope: !9149)
!9159 = !DILocation(line: 3622, column: 30, scope: !9149)
!9160 = !DILocalVariable(name: "hpriv", scope: !9149, file: !3, line: 3623, type: !7763)
!9161 = !DILocation(line: 3623, column: 23, scope: !9149)
!9162 = !DILocation(line: 3623, column: 31, scope: !9149)
!9163 = !DILocation(line: 3623, column: 35, scope: !9149)
!9164 = !DILocation(line: 3623, column: 41, scope: !9149)
!9165 = !DILocalVariable(name: "pp", scope: !9149, file: !3, line: 3624, type: !8689)
!9166 = !DILocation(line: 3624, column: 23, scope: !9149)
!9167 = !DILocation(line: 3624, column: 28, scope: !9149)
!9168 = !DILocation(line: 3624, column: 32, scope: !9149)
!9169 = !DILocalVariable(name: "mmio", scope: !9149, file: !3, line: 3625, type: !1187)
!9170 = !DILocation(line: 3625, column: 16, scope: !9149)
!9171 = !DILocation(line: 3625, column: 23, scope: !9149)
!9172 = !DILocation(line: 3625, column: 30, scope: !9149)
!9173 = !DILocalVariable(name: "rc", scope: !9149, file: !3, line: 3626, type: !260)
!9174 = !DILocation(line: 3626, column: 6, scope: !9149)
!9175 = !DILocalVariable(name: "attempts", scope: !9149, file: !3, line: 3626, type: !260)
!9176 = !DILocation(line: 3626, column: 10, scope: !9149)
!9177 = !DILocalVariable(name: "extra", scope: !9149, file: !3, line: 3626, type: !260)
!9178 = !DILocation(line: 3626, column: 24, scope: !9149)
!9179 = !DILocalVariable(name: "sstatus", scope: !9149, file: !3, line: 3627, type: !1266)
!9180 = !DILocation(line: 3627, column: 6, scope: !9149)
!9181 = !DILocalVariable(name: "online", scope: !9149, file: !3, line: 3628, type: !1554)
!9182 = !DILocation(line: 3628, column: 7, scope: !9149)
!9183 = !DILocation(line: 3630, column: 19, scope: !9149)
!9184 = !DILocation(line: 3630, column: 26, scope: !9149)
!9185 = !DILocation(line: 3630, column: 32, scope: !9149)
!9186 = !DILocation(line: 3630, column: 36, scope: !9149)
!9187 = !DILocation(line: 3630, column: 2, scope: !9149)
!9188 = !DILocation(line: 3631, column: 2, scope: !9149)
!9189 = !DILocation(line: 3631, column: 6, scope: !9149)
!9190 = !DILocation(line: 3631, column: 15, scope: !9149)
!9191 = !DILocation(line: 3632, column: 2, scope: !9149)
!9192 = !DILocation(line: 3632, column: 6, scope: !9149)
!9193 = !DILocation(line: 3632, column: 15, scope: !9149)
!9194 = !DILocation(line: 3636, column: 2, scope: !9149)
!9195 = !DILocalVariable(name: "timing", scope: !9196, file: !3, line: 3637, type: !9197)
!9196 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 3636, column: 5)
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!9198 = !DILocation(line: 3637, column: 24, scope: !9196)
!9199 = !DILocation(line: 3638, column: 26, scope: !9196)
!9200 = !DILocation(line: 3638, column: 32, scope: !9196)
!9201 = !DILocation(line: 3638, column: 5, scope: !9196)
!9202 = !DILocation(line: 3640, column: 28, scope: !9196)
!9203 = !DILocation(line: 3640, column: 34, scope: !9196)
!9204 = !DILocation(line: 3640, column: 42, scope: !9196)
!9205 = !DILocation(line: 3640, column: 53, scope: !9196)
!9206 = !DILocation(line: 3640, column: 51, scope: !9196)
!9207 = !DILocation(line: 3640, column: 8, scope: !9196)
!9208 = !DILocation(line: 3640, column: 6, scope: !9196)
!9209 = !DILocation(line: 3642, column: 8, scope: !9196)
!9210 = !DILocation(line: 3642, column: 27, scope: !9196)
!9211 = !DILocation(line: 3642, column: 6, scope: !9196)
!9212 = !DILocation(line: 3643, column: 7, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 3643, column: 7)
!9214 = !DILocation(line: 3643, column: 7, scope: !9196)
!9215 = !DILocation(line: 3644, column: 11, scope: !9213)
!9216 = !DILocation(line: 3644, column: 4, scope: !9213)
!9217 = !DILocation(line: 3645, column: 17, scope: !9196)
!9218 = !DILocation(line: 3645, column: 3, scope: !9196)
!9219 = !DILocation(line: 3646, column: 8, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 3646, column: 7)
!9221 = !DILocation(line: 3646, column: 24, scope: !9220)
!9222 = !DILocation(line: 3646, column: 27, scope: !9220)
!9223 = !DILocation(line: 3646, column: 38, scope: !9220)
!9224 = !DILocation(line: 3646, column: 43, scope: !9220)
!9225 = !DILocation(line: 3646, column: 46, scope: !9220)
!9226 = !DILocation(line: 3646, column: 54, scope: !9220)
!9227 = !DILocation(line: 3646, column: 7, scope: !9196)
!9228 = !DILocation(line: 3648, column: 30, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 3646, column: 64)
!9230 = !DILocation(line: 3648, column: 19, scope: !9229)
!9231 = !DILocation(line: 3648, column: 4, scope: !9229)
!9232 = !DILocation(line: 3649, column: 8, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 3649, column: 8)
!9234 = !DILocation(line: 3649, column: 8, scope: !9229)
!9235 = !DILocation(line: 3650, column: 11, scope: !9233)
!9236 = !DILocation(line: 3650, column: 5, scope: !9233)
!9237 = !DILocation(line: 3651, column: 3, scope: !9229)
!9238 = !DILocation(line: 3652, column: 2, scope: !9196)
!9239 = !DILocation(line: 3652, column: 11, scope: !9149)
!9240 = !DILocation(line: 3652, column: 19, scope: !9149)
!9241 = !DILocation(line: 3652, column: 26, scope: !9149)
!9242 = !DILocation(line: 3652, column: 29, scope: !9149)
!9243 = !DILocation(line: 3652, column: 37, scope: !9149)
!9244 = !DILocation(line: 3652, column: 46, scope: !9149)
!9245 = !DILocation(line: 3652, column: 49, scope: !9149)
!9246 = !DILocation(line: 3652, column: 57, scope: !9149)
!9247 = !DILocation(line: 0, scope: !9149)
!9248 = distinct !{!9248, !9194, !9249}
!9249 = !DILocation(line: 3652, column: 65, scope: !9149)
!9250 = !DILocation(line: 3653, column: 22, scope: !9149)
!9251 = !DILocation(line: 3653, column: 2, scope: !9149)
!9252 = !DILocation(line: 3654, column: 14, scope: !9149)
!9253 = !DILocation(line: 3654, column: 2, scope: !9149)
!9254 = !DILocation(line: 3656, column: 9, scope: !9149)
!9255 = !DILocation(line: 3656, column: 2, scope: !9149)
!9256 = !DILocation(line: 3657, column: 1, scope: !9149)
!9257 = distinct !DISubprogram(name: "mv5_scr_read", scope: !3, file: !3, line: 3055, type: !7657, scopeLine: 3056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9258 = !DILocalVariable(name: "link", arg: 1, scope: !9257, file: !3, line: 3055, type: !7295)
!9259 = !DILocation(line: 3055, column: 42, scope: !9257)
!9260 = !DILocalVariable(name: "sc_reg_in", arg: 2, scope: !9257, file: !3, line: 3055, type: !7)
!9261 = !DILocation(line: 3055, column: 61, scope: !9257)
!9262 = !DILocalVariable(name: "val", arg: 3, scope: !9257, file: !3, line: 3055, type: !1265)
!9263 = !DILocation(line: 3055, column: 77, scope: !9257)
!9264 = !DILocalVariable(name: "hpriv", scope: !9257, file: !3, line: 3057, type: !7763)
!9265 = !DILocation(line: 3057, column: 23, scope: !9257)
!9266 = !DILocation(line: 3057, column: 31, scope: !9257)
!9267 = !DILocation(line: 3057, column: 37, scope: !9257)
!9268 = !DILocation(line: 3057, column: 41, scope: !9257)
!9269 = !DILocation(line: 3057, column: 47, scope: !9257)
!9270 = !DILocalVariable(name: "mmio", scope: !9257, file: !3, line: 3058, type: !1187)
!9271 = !DILocation(line: 3058, column: 16, scope: !9257)
!9272 = !DILocation(line: 3058, column: 23, scope: !9257)
!9273 = !DILocation(line: 3058, column: 30, scope: !9257)
!9274 = !DILocalVariable(name: "addr", scope: !9257, file: !3, line: 3059, type: !1187)
!9275 = !DILocation(line: 3059, column: 16, scope: !9257)
!9276 = !DILocation(line: 3059, column: 36, scope: !9257)
!9277 = !DILocation(line: 3059, column: 42, scope: !9257)
!9278 = !DILocation(line: 3059, column: 48, scope: !9257)
!9279 = !DILocation(line: 3059, column: 52, scope: !9257)
!9280 = !DILocation(line: 3059, column: 23, scope: !9257)
!9281 = !DILocalVariable(name: "ofs", scope: !9257, file: !3, line: 3060, type: !7)
!9282 = !DILocation(line: 3060, column: 15, scope: !9257)
!9283 = !DILocation(line: 3060, column: 36, scope: !9257)
!9284 = !DILocation(line: 3060, column: 21, scope: !9257)
!9285 = !DILocation(line: 3062, column: 6, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 3062, column: 6)
!9287 = !DILocation(line: 3062, column: 10, scope: !9286)
!9288 = !DILocation(line: 3062, column: 6, scope: !9257)
!9289 = !DILocation(line: 3063, column: 16, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 3062, column: 26)
!9291 = !DILocation(line: 3063, column: 23, scope: !9290)
!9292 = !DILocation(line: 3063, column: 21, scope: !9290)
!9293 = !DILocation(line: 3063, column: 10, scope: !9290)
!9294 = !DILocation(line: 3063, column: 4, scope: !9290)
!9295 = !DILocation(line: 3063, column: 8, scope: !9290)
!9296 = !DILocation(line: 3064, column: 3, scope: !9290)
!9297 = !DILocation(line: 3066, column: 3, scope: !9286)
!9298 = !DILocation(line: 3067, column: 1, scope: !9257)
!9299 = distinct !DISubprogram(name: "mv5_scr_write", scope: !3, file: !3, line: 3069, type: !7661, scopeLine: 3070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9300 = !DILocalVariable(name: "link", arg: 1, scope: !9299, file: !3, line: 3069, type: !7295)
!9301 = !DILocation(line: 3069, column: 43, scope: !9299)
!9302 = !DILocalVariable(name: "sc_reg_in", arg: 2, scope: !9299, file: !3, line: 3069, type: !7)
!9303 = !DILocation(line: 3069, column: 62, scope: !9299)
!9304 = !DILocalVariable(name: "val", arg: 3, scope: !9299, file: !3, line: 3069, type: !1266)
!9305 = !DILocation(line: 3069, column: 77, scope: !9299)
!9306 = !DILocalVariable(name: "hpriv", scope: !9299, file: !3, line: 3071, type: !7763)
!9307 = !DILocation(line: 3071, column: 23, scope: !9299)
!9308 = !DILocation(line: 3071, column: 31, scope: !9299)
!9309 = !DILocation(line: 3071, column: 37, scope: !9299)
!9310 = !DILocation(line: 3071, column: 41, scope: !9299)
!9311 = !DILocation(line: 3071, column: 47, scope: !9299)
!9312 = !DILocalVariable(name: "mmio", scope: !9299, file: !3, line: 3072, type: !1187)
!9313 = !DILocation(line: 3072, column: 16, scope: !9299)
!9314 = !DILocation(line: 3072, column: 23, scope: !9299)
!9315 = !DILocation(line: 3072, column: 30, scope: !9299)
!9316 = !DILocalVariable(name: "addr", scope: !9299, file: !3, line: 3073, type: !1187)
!9317 = !DILocation(line: 3073, column: 16, scope: !9299)
!9318 = !DILocation(line: 3073, column: 36, scope: !9299)
!9319 = !DILocation(line: 3073, column: 42, scope: !9299)
!9320 = !DILocation(line: 3073, column: 48, scope: !9299)
!9321 = !DILocation(line: 3073, column: 52, scope: !9299)
!9322 = !DILocation(line: 3073, column: 23, scope: !9299)
!9323 = !DILocalVariable(name: "ofs", scope: !9299, file: !3, line: 3074, type: !7)
!9324 = !DILocation(line: 3074, column: 15, scope: !9299)
!9325 = !DILocation(line: 3074, column: 36, scope: !9299)
!9326 = !DILocation(line: 3074, column: 21, scope: !9299)
!9327 = !DILocation(line: 3076, column: 6, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 3076, column: 6)
!9329 = !DILocation(line: 3076, column: 10, scope: !9328)
!9330 = !DILocation(line: 3076, column: 6, scope: !9299)
!9331 = !DILocation(line: 3077, column: 12, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 3076, column: 26)
!9333 = !DILocation(line: 3077, column: 17, scope: !9332)
!9334 = !DILocation(line: 3077, column: 24, scope: !9332)
!9335 = !DILocation(line: 3077, column: 22, scope: !9332)
!9336 = !DILocation(line: 3077, column: 3, scope: !9332)
!9337 = !DILocation(line: 3078, column: 3, scope: !9332)
!9338 = !DILocation(line: 3080, column: 3, scope: !9328)
!9339 = !DILocation(line: 3081, column: 1, scope: !9299)
!9340 = distinct !DISubprogram(name: "mv_port_start", scope: !3, file: !3, line: 1704, type: !7599, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9341 = !DILocalVariable(name: "lock", arg: 1, scope: !9342, file: !8586, line: 407, type: !3316)
!9342 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !8586, file: !8586, line: 407, type: !9343, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{null, !3316, !1186}
!9345 = !DILocation(line: 407, column: 64, scope: !9342, inlinedAt: !9346)
!9346 = distinct !DILocation(line: 1747, column: 2, scope: !9340)
!9347 = !DILocalVariable(name: "flags", arg: 2, scope: !9342, file: !8586, line: 407, type: !1186)
!9348 = !DILocation(line: 407, column: 84, scope: !9342, inlinedAt: !9346)
!9349 = !DILocalVariable(name: "lock", arg: 1, scope: !9350, file: !8586, line: 327, type: !3316)
!9350 = distinct !DISubprogram(name: "spinlock_check", scope: !8586, file: !8586, line: 327, type: !9351, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{!9353, !3316}
!9353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!9354 = !DILocation(line: 327, column: 67, scope: !9350, inlinedAt: !9355)
!9355 = distinct !DILocation(line: 1744, column: 2, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 1744, column: 2)
!9357 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 1744, column: 2)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 1744, column: 2)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1744, column: 2)
!9360 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1744, column: 2)
!9361 = !DILocalVariable(name: "ap", arg: 1, scope: !9340, file: !3, line: 1704, type: !6835)
!9362 = !DILocation(line: 1704, column: 43, scope: !9340)
!9363 = !DILocalVariable(name: "dev", scope: !9340, file: !3, line: 1706, type: !1291)
!9364 = !DILocation(line: 1706, column: 17, scope: !9340)
!9365 = !DILocation(line: 1706, column: 23, scope: !9340)
!9366 = !DILocation(line: 1706, column: 27, scope: !9340)
!9367 = !DILocation(line: 1706, column: 33, scope: !9340)
!9368 = !DILocalVariable(name: "hpriv", scope: !9340, file: !3, line: 1707, type: !7763)
!9369 = !DILocation(line: 1707, column: 23, scope: !9340)
!9370 = !DILocation(line: 1707, column: 31, scope: !9340)
!9371 = !DILocation(line: 1707, column: 35, scope: !9340)
!9372 = !DILocation(line: 1707, column: 41, scope: !9340)
!9373 = !DILocalVariable(name: "pp", scope: !9340, file: !3, line: 1708, type: !8689)
!9374 = !DILocation(line: 1708, column: 23, scope: !9340)
!9375 = !DILocalVariable(name: "flags", scope: !9340, file: !3, line: 1709, type: !1186)
!9376 = !DILocation(line: 1709, column: 16, scope: !9340)
!9377 = !DILocalVariable(name: "tag", scope: !9340, file: !3, line: 1710, type: !260)
!9378 = !DILocation(line: 1710, column: 6, scope: !9340)
!9379 = !DILocation(line: 1712, column: 20, scope: !9340)
!9380 = !DILocation(line: 1712, column: 7, scope: !9340)
!9381 = !DILocation(line: 1712, column: 5, scope: !9340)
!9382 = !DILocation(line: 1713, column: 7, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1713, column: 6)
!9384 = !DILocation(line: 1713, column: 6, scope: !9340)
!9385 = !DILocation(line: 1714, column: 3, scope: !9383)
!9386 = !DILocation(line: 1715, column: 21, scope: !9340)
!9387 = !DILocation(line: 1715, column: 2, scope: !9340)
!9388 = !DILocation(line: 1715, column: 6, scope: !9340)
!9389 = !DILocation(line: 1715, column: 19, scope: !9340)
!9390 = !DILocation(line: 1717, column: 29, scope: !9340)
!9391 = !DILocation(line: 1717, column: 36, scope: !9340)
!9392 = !DILocation(line: 1717, column: 60, scope: !9340)
!9393 = !DILocation(line: 1717, column: 64, scope: !9340)
!9394 = !DILocation(line: 1717, column: 13, scope: !9340)
!9395 = !DILocation(line: 1717, column: 2, scope: !9340)
!9396 = !DILocation(line: 1717, column: 6, scope: !9340)
!9397 = !DILocation(line: 1717, column: 11, scope: !9340)
!9398 = !DILocation(line: 1718, column: 7, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1718, column: 6)
!9400 = !DILocation(line: 1718, column: 11, scope: !9399)
!9401 = !DILocation(line: 1718, column: 6, scope: !9340)
!9402 = !DILocation(line: 1719, column: 3, scope: !9399)
!9403 = !DILocation(line: 1721, column: 29, scope: !9340)
!9404 = !DILocation(line: 1721, column: 36, scope: !9340)
!9405 = !DILocation(line: 1721, column: 60, scope: !9340)
!9406 = !DILocation(line: 1721, column: 64, scope: !9340)
!9407 = !DILocation(line: 1721, column: 13, scope: !9340)
!9408 = !DILocation(line: 1721, column: 2, scope: !9340)
!9409 = !DILocation(line: 1721, column: 6, scope: !9340)
!9410 = !DILocation(line: 1721, column: 11, scope: !9340)
!9411 = !DILocation(line: 1722, column: 7, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1722, column: 6)
!9413 = !DILocation(line: 1722, column: 11, scope: !9412)
!9414 = !DILocation(line: 1722, column: 6, scope: !9340)
!9415 = !DILocation(line: 1723, column: 3, scope: !9412)
!9416 = !DILocation(line: 1726, column: 6, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1726, column: 6)
!9418 = !DILocation(line: 1726, column: 13, scope: !9417)
!9419 = !DILocation(line: 1726, column: 22, scope: !9417)
!9420 = !DILocation(line: 1726, column: 6, scope: !9340)
!9421 = !DILocation(line: 1727, column: 3, scope: !9417)
!9422 = !DILocation(line: 1727, column: 7, scope: !9417)
!9423 = !DILocation(line: 1727, column: 13, scope: !9417)
!9424 = !DILocation(line: 1732, column: 11, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1732, column: 2)
!9426 = !DILocation(line: 1732, column: 7, scope: !9425)
!9427 = !DILocation(line: 1732, column: 16, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 1732, column: 2)
!9429 = !DILocation(line: 1732, column: 20, scope: !9428)
!9430 = !DILocation(line: 1732, column: 2, scope: !9425)
!9431 = !DILocation(line: 1733, column: 7, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1733, column: 7)
!9433 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 1732, column: 45)
!9434 = !DILocation(line: 1733, column: 11, scope: !9432)
!9435 = !DILocation(line: 1733, column: 16, scope: !9432)
!9436 = !DILocation(line: 1733, column: 20, scope: !9432)
!9437 = !DILocation(line: 1733, column: 7, scope: !9433)
!9438 = !DILocation(line: 1734, column: 37, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9432, file: !3, line: 1733, column: 37)
!9440 = !DILocation(line: 1734, column: 44, scope: !9439)
!9441 = !DILocation(line: 1735, column: 25, scope: !9439)
!9442 = !DILocation(line: 1735, column: 29, scope: !9439)
!9443 = !DILocation(line: 1735, column: 40, scope: !9439)
!9444 = !DILocation(line: 1734, column: 22, scope: !9439)
!9445 = !DILocation(line: 1734, column: 4, scope: !9439)
!9446 = !DILocation(line: 1734, column: 8, scope: !9439)
!9447 = !DILocation(line: 1734, column: 15, scope: !9439)
!9448 = !DILocation(line: 1734, column: 20, scope: !9439)
!9449 = !DILocation(line: 1736, column: 9, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 1736, column: 8)
!9451 = !DILocation(line: 1736, column: 13, scope: !9450)
!9452 = !DILocation(line: 1736, column: 20, scope: !9450)
!9453 = !DILocation(line: 1736, column: 8, scope: !9439)
!9454 = !DILocation(line: 1737, column: 5, scope: !9450)
!9455 = !DILocation(line: 1738, column: 3, scope: !9439)
!9456 = !DILocation(line: 1739, column: 26, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9432, file: !3, line: 1738, column: 10)
!9458 = !DILocation(line: 1739, column: 30, scope: !9457)
!9459 = !DILocation(line: 1739, column: 4, scope: !9457)
!9460 = !DILocation(line: 1739, column: 8, scope: !9457)
!9461 = !DILocation(line: 1739, column: 15, scope: !9457)
!9462 = !DILocation(line: 1739, column: 24, scope: !9457)
!9463 = !DILocation(line: 1740, column: 26, scope: !9457)
!9464 = !DILocation(line: 1740, column: 30, scope: !9457)
!9465 = !DILocation(line: 1740, column: 4, scope: !9457)
!9466 = !DILocation(line: 1740, column: 8, scope: !9457)
!9467 = !DILocation(line: 1740, column: 19, scope: !9457)
!9468 = !DILocation(line: 1740, column: 24, scope: !9457)
!9469 = !DILocation(line: 1742, column: 2, scope: !9433)
!9470 = !DILocation(line: 1732, column: 38, scope: !9428)
!9471 = !DILocation(line: 1732, column: 2, scope: !9428)
!9472 = distinct !{!9472, !9430, !9473}
!9473 = !DILocation(line: 1742, column: 2, scope: !9425)
!9474 = !DILocation(line: 1744, column: 2, scope: !9340)
!9475 = !DILocation(line: 1744, column: 2, scope: !9360)
!9476 = !DILocalVariable(name: "__dummy", scope: !9477, file: !3, line: 1744, type: !1186)
!9477 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 1744, column: 2)
!9478 = !DILocation(line: 1744, column: 2, scope: !9477)
!9479 = !DILocalVariable(name: "__dummy2", scope: !9477, file: !3, line: 1744, type: !1186)
!9480 = !DILocation(line: 1744, column: 2, scope: !9359)
!9481 = !DILocation(line: 1744, column: 2, scope: !9358)
!9482 = !DILocation(line: 1744, column: 2, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 1744, column: 2)
!9484 = !DILocalVariable(name: "__dummy", scope: !9485, file: !3, line: 1744, type: !1186)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 1744, column: 2)
!9486 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 1744, column: 2)
!9487 = !DILocation(line: 1744, column: 2, scope: !9485)
!9488 = !DILocalVariable(name: "__dummy2", scope: !9485, file: !3, line: 1744, type: !1186)
!9489 = !DILocation(line: 1744, column: 2, scope: !9486)
!9490 = !DILocation(line: 1744, column: 2, scope: !9357)
!9491 = !{i32 -2139356033}
!9492 = !DILocation(line: 1744, column: 2, scope: !9356)
!9493 = !DILocation(line: 329, column: 10, scope: !9350, inlinedAt: !9355)
!9494 = !DILocation(line: 329, column: 16, scope: !9350, inlinedAt: !9355)
!9495 = !DILocation(line: 1745, column: 22, scope: !9340)
!9496 = !DILocation(line: 1745, column: 2, scope: !9340)
!9497 = !DILocation(line: 1746, column: 14, scope: !9340)
!9498 = !DILocation(line: 1746, column: 2, scope: !9340)
!9499 = !DILocation(line: 1747, column: 25, scope: !9340)
!9500 = !DILocation(line: 1747, column: 29, scope: !9340)
!9501 = !DILocation(line: 1747, column: 35, scope: !9340)
!9502 = !DILocalVariable(name: "__dummy", scope: !9503, file: !8586, line: 409, type: !1186)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !8586, line: 409, column: 2)
!9504 = distinct !DILexicalBlock(scope: !9342, file: !8586, line: 409, column: 2)
!9505 = !DILocation(line: 409, column: 2, scope: !9503, inlinedAt: !9346)
!9506 = !DILocalVariable(name: "__dummy2", scope: !9503, file: !8586, line: 409, type: !1186)
!9507 = !DILocalVariable(name: "__dummy", scope: !9508, file: !8586, line: 409, type: !1186)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !8586, line: 409, column: 2)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !8586, line: 409, column: 2)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !8586, line: 409, column: 2)
!9511 = distinct !DILexicalBlock(scope: !9504, file: !8586, line: 409, column: 2)
!9512 = !DILocation(line: 409, column: 2, scope: !9508, inlinedAt: !9346)
!9513 = !DILocalVariable(name: "__dummy2", scope: !9508, file: !8586, line: 409, type: !1186)
!9514 = !DILocation(line: 409, column: 2, scope: !9509, inlinedAt: !9346)
!9515 = !DILocation(line: 409, column: 2, scope: !9516, inlinedAt: !9346)
!9516 = distinct !DILexicalBlock(scope: !9511, file: !8586, line: 409, column: 2)
!9517 = !{i32 -2145352817}
!9518 = !DILocation(line: 409, column: 2, scope: !9519, inlinedAt: !9346)
!9519 = distinct !DILexicalBlock(scope: !9516, file: !8586, line: 409, column: 2)
!9520 = !DILocation(line: 1749, column: 2, scope: !9340)
!9521 = !DILabel(scope: !9340, name: "out_port_free_dma_mem", file: !3, line: 1751)
!9522 = !DILocation(line: 1751, column: 1, scope: !9340)
!9523 = !DILocation(line: 1752, column: 23, scope: !9340)
!9524 = !DILocation(line: 1752, column: 2, scope: !9340)
!9525 = !DILocation(line: 1753, column: 2, scope: !9340)
!9526 = !DILocation(line: 1754, column: 1, scope: !9340)
!9527 = distinct !DISubprogram(name: "mv_port_stop", scope: !3, file: !3, line: 1765, type: !7627, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9528 = !DILocation(line: 407, column: 64, scope: !9342, inlinedAt: !9529)
!9529 = distinct !DILocation(line: 1772, column: 2, scope: !9527)
!9530 = !DILocation(line: 407, column: 84, scope: !9342, inlinedAt: !9529)
!9531 = !DILocation(line: 327, column: 67, scope: !9350, inlinedAt: !9532)
!9532 = distinct !DILocation(line: 1769, column: 2, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 1769, column: 2)
!9534 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1769, column: 2)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 1769, column: 2)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 1769, column: 2)
!9537 = distinct !DILexicalBlock(scope: !9527, file: !3, line: 1769, column: 2)
!9538 = !DILocalVariable(name: "ap", arg: 1, scope: !9527, file: !3, line: 1765, type: !6835)
!9539 = !DILocation(line: 1765, column: 43, scope: !9527)
!9540 = !DILocalVariable(name: "flags", scope: !9527, file: !3, line: 1767, type: !1186)
!9541 = !DILocation(line: 1767, column: 16, scope: !9527)
!9542 = !DILocation(line: 1769, column: 2, scope: !9527)
!9543 = !DILocation(line: 1769, column: 2, scope: !9537)
!9544 = !DILocalVariable(name: "__dummy", scope: !9545, file: !3, line: 1769, type: !1186)
!9545 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 1769, column: 2)
!9546 = !DILocation(line: 1769, column: 2, scope: !9545)
!9547 = !DILocalVariable(name: "__dummy2", scope: !9545, file: !3, line: 1769, type: !1186)
!9548 = !DILocation(line: 1769, column: 2, scope: !9536)
!9549 = !DILocation(line: 1769, column: 2, scope: !9535)
!9550 = !DILocation(line: 1769, column: 2, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1769, column: 2)
!9552 = !DILocalVariable(name: "__dummy", scope: !9553, file: !3, line: 1769, type: !1186)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 1769, column: 2)
!9554 = distinct !DILexicalBlock(scope: !9551, file: !3, line: 1769, column: 2)
!9555 = !DILocation(line: 1769, column: 2, scope: !9553)
!9556 = !DILocalVariable(name: "__dummy2", scope: !9553, file: !3, line: 1769, type: !1186)
!9557 = !DILocation(line: 1769, column: 2, scope: !9554)
!9558 = !DILocation(line: 1769, column: 2, scope: !9534)
!9559 = !{i32 -2139355032}
!9560 = !DILocation(line: 1769, column: 2, scope: !9533)
!9561 = !DILocation(line: 329, column: 10, scope: !9350, inlinedAt: !9532)
!9562 = !DILocation(line: 329, column: 16, scope: !9350, inlinedAt: !9532)
!9563 = !DILocation(line: 1770, column: 15, scope: !9527)
!9564 = !DILocation(line: 1770, column: 2, scope: !9527)
!9565 = !DILocation(line: 1771, column: 22, scope: !9527)
!9566 = !DILocation(line: 1771, column: 2, scope: !9527)
!9567 = !DILocation(line: 1772, column: 25, scope: !9527)
!9568 = !DILocation(line: 1772, column: 29, scope: !9527)
!9569 = !DILocation(line: 1772, column: 35, scope: !9527)
!9570 = !DILocation(line: 409, column: 2, scope: !9503, inlinedAt: !9529)
!9571 = !DILocation(line: 409, column: 2, scope: !9508, inlinedAt: !9529)
!9572 = !DILocation(line: 409, column: 2, scope: !9509, inlinedAt: !9529)
!9573 = !DILocation(line: 409, column: 2, scope: !9516, inlinedAt: !9529)
!9574 = !DILocation(line: 409, column: 2, scope: !9519, inlinedAt: !9529)
!9575 = !DILocation(line: 1773, column: 23, scope: !9527)
!9576 = !DILocation(line: 1773, column: 2, scope: !9527)
!9577 = !DILocation(line: 1774, column: 1, scope: !9527)
!9578 = distinct !DISubprogram(name: "ata_is_ncq", scope: !204, file: !204, line: 1046, type: !9579, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{!1554, !2109}
!9581 = !DILocalVariable(name: "prot", arg: 1, scope: !9578, file: !204, line: 1046, type: !2109)
!9582 = !DILocation(line: 1046, column: 34, scope: !9578)
!9583 = !DILocation(line: 1048, column: 9, scope: !9578)
!9584 = !DILocation(line: 1048, column: 14, scope: !9578)
!9585 = !DILocation(line: 1048, column: 2, scope: !9578)
!9586 = distinct !DISubprogram(name: "mv_rw_multi_errata_sata24", scope: !3, file: !3, line: 1989, type: !7580, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9587 = !DILocalVariable(name: "qc", arg: 1, scope: !9586, file: !3, line: 1989, type: !6831)
!9588 = !DILocation(line: 1989, column: 62, scope: !9586)
!9589 = !DILocalVariable(name: "tf", scope: !9586, file: !3, line: 1991, type: !7619)
!9590 = !DILocation(line: 1991, column: 23, scope: !9586)
!9591 = !DILocation(line: 1991, column: 29, scope: !9586)
!9592 = !DILocation(line: 1991, column: 33, scope: !9586)
!9593 = !DILocation(line: 2005, column: 7, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 2005, column: 6)
!9595 = !DILocation(line: 2005, column: 11, scope: !9594)
!9596 = !DILocation(line: 2005, column: 17, scope: !9594)
!9597 = !DILocation(line: 2005, column: 36, scope: !9594)
!9598 = !DILocation(line: 2005, column: 57, scope: !9594)
!9599 = !DILocation(line: 2005, column: 39, scope: !9594)
!9600 = !DILocation(line: 2005, column: 6, scope: !9586)
!9601 = !DILocation(line: 2006, column: 7, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 2006, column: 7)
!9603 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 2005, column: 62)
!9604 = !DILocation(line: 2006, column: 11, scope: !9602)
!9605 = !DILocation(line: 2006, column: 16, scope: !9602)
!9606 = !DILocation(line: 2006, column: 28, scope: !9602)
!9607 = !DILocation(line: 2006, column: 7, scope: !9603)
!9608 = !DILocation(line: 2007, column: 12, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 2006, column: 33)
!9610 = !DILocation(line: 2007, column: 16, scope: !9609)
!9611 = !DILocation(line: 2007, column: 4, scope: !9609)
!9612 = !DILocation(line: 2009, column: 5, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 2007, column: 25)
!9614 = !DILocation(line: 2009, column: 9, scope: !9613)
!9615 = !DILocation(line: 2009, column: 17, scope: !9613)
!9616 = !DILocation(line: 2010, column: 5, scope: !9613)
!9617 = !DILocation(line: 2012, column: 5, scope: !9613)
!9618 = !DILocation(line: 2012, column: 9, scope: !9613)
!9619 = !DILocation(line: 2012, column: 15, scope: !9613)
!9620 = !DILocation(line: 2015, column: 5, scope: !9613)
!9621 = !DILocation(line: 2015, column: 9, scope: !9613)
!9622 = !DILocation(line: 2015, column: 17, scope: !9613)
!9623 = !DILocation(line: 2016, column: 5, scope: !9613)
!9624 = !DILocation(line: 2018, column: 3, scope: !9609)
!9625 = !DILocation(line: 2019, column: 2, scope: !9603)
!9626 = !DILocation(line: 2020, column: 1, scope: !9586)
!9627 = distinct !DISubprogram(name: "mv_crqb_pack_cmd", scope: !3, file: !3, line: 1822, type: !9628, scopeLine: 1823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9628 = !DISubroutineType(types: !9629)
!9629 = !{null, !8807, !2109, !2109, !7}
!9630 = !DILocalVariable(name: "cmdw", arg: 1, scope: !9627, file: !3, line: 1822, type: !8807)
!9631 = !DILocation(line: 1822, column: 38, scope: !9627)
!9632 = !DILocalVariable(name: "data", arg: 2, scope: !9627, file: !3, line: 1822, type: !2109)
!9633 = !DILocation(line: 1822, column: 47, scope: !9627)
!9634 = !DILocalVariable(name: "addr", arg: 3, scope: !9627, file: !3, line: 1822, type: !2109)
!9635 = !DILocation(line: 1822, column: 56, scope: !9627)
!9636 = !DILocalVariable(name: "last", arg: 4, scope: !9627, file: !3, line: 1822, type: !7)
!9637 = !DILocation(line: 1822, column: 71, scope: !9627)
!9638 = !DILocalVariable(name: "tmp", scope: !9627, file: !3, line: 1824, type: !1989)
!9639 = !DILocation(line: 1824, column: 6, scope: !9627)
!9640 = !DILocation(line: 1824, column: 12, scope: !9627)
!9641 = !DILocation(line: 1824, column: 20, scope: !9627)
!9642 = !DILocation(line: 1824, column: 25, scope: !9627)
!9643 = !DILocation(line: 1824, column: 17, scope: !9627)
!9644 = !DILocation(line: 1824, column: 49, scope: !9627)
!9645 = !DILocation(line: 1825, column: 4, scope: !9627)
!9646 = !DILocation(line: 1824, column: 63, scope: !9627)
!9647 = !DILocation(line: 1826, column: 10, scope: !9627)
!9648 = !DILocation(line: 1826, column: 3, scope: !9627)
!9649 = !DILocation(line: 1826, column: 8, scope: !9627)
!9650 = !DILocation(line: 1827, column: 1, scope: !9627)
!9651 = distinct !DISubprogram(name: "mv_fill_sg", scope: !3, file: !3, line: 1785, type: !7580, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9652 = !DILocalVariable(name: "qc", arg: 1, scope: !9651, file: !3, line: 1785, type: !6831)
!9653 = !DILocation(line: 1785, column: 47, scope: !9651)
!9654 = !DILocalVariable(name: "pp", scope: !9651, file: !3, line: 1787, type: !8689)
!9655 = !DILocation(line: 1787, column: 23, scope: !9651)
!9656 = !DILocation(line: 1787, column: 28, scope: !9651)
!9657 = !DILocation(line: 1787, column: 32, scope: !9651)
!9658 = !DILocation(line: 1787, column: 36, scope: !9651)
!9659 = !DILocalVariable(name: "sg", scope: !9651, file: !3, line: 1788, type: !7057)
!9660 = !DILocation(line: 1788, column: 22, scope: !9651)
!9661 = !DILocalVariable(name: "mv_sg", scope: !9651, file: !3, line: 1789, type: !8714)
!9662 = !DILocation(line: 1789, column: 16, scope: !9651)
!9663 = !DILocalVariable(name: "last_sg", scope: !9651, file: !3, line: 1789, type: !8714)
!9664 = !DILocation(line: 1789, column: 24, scope: !9651)
!9665 = !DILocalVariable(name: "si", scope: !9651, file: !3, line: 1790, type: !7)
!9666 = !DILocation(line: 1790, column: 15, scope: !9651)
!9667 = !DILocation(line: 1792, column: 10, scope: !9651)
!9668 = !DILocation(line: 1792, column: 14, scope: !9651)
!9669 = !DILocation(line: 1792, column: 21, scope: !9651)
!9670 = !DILocation(line: 1792, column: 25, scope: !9651)
!9671 = !DILocation(line: 1792, column: 8, scope: !9651)
!9672 = !DILocation(line: 1793, column: 2, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 1793, column: 2)
!9674 = !DILocation(line: 1793, column: 2, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 1793, column: 2)
!9676 = !DILocalVariable(name: "addr", scope: !9677, file: !3, line: 1794, type: !3173)
!9677 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1793, column: 42)
!9678 = !DILocation(line: 1794, column: 14, scope: !9677)
!9679 = !DILocation(line: 1794, column: 21, scope: !9677)
!9680 = !DILocalVariable(name: "sg_len", scope: !9677, file: !3, line: 1795, type: !1266)
!9681 = !DILocation(line: 1795, column: 7, scope: !9677)
!9682 = !DILocation(line: 1795, column: 16, scope: !9677)
!9683 = !DILocation(line: 1797, column: 3, scope: !9677)
!9684 = !DILocation(line: 1797, column: 10, scope: !9677)
!9685 = !DILocalVariable(name: "offset", scope: !9686, file: !3, line: 1798, type: !1266)
!9686 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 1797, column: 18)
!9687 = !DILocation(line: 1798, column: 8, scope: !9686)
!9688 = !DILocation(line: 1798, column: 17, scope: !9686)
!9689 = !DILocation(line: 1798, column: 22, scope: !9686)
!9690 = !DILocalVariable(name: "len", scope: !9686, file: !3, line: 1799, type: !1266)
!9691 = !DILocation(line: 1799, column: 8, scope: !9686)
!9692 = !DILocation(line: 1799, column: 14, scope: !9686)
!9693 = !DILocation(line: 1801, column: 8, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 1801, column: 8)
!9695 = !DILocation(line: 1801, column: 17, scope: !9694)
!9696 = !DILocation(line: 1801, column: 15, scope: !9694)
!9697 = !DILocation(line: 1801, column: 21, scope: !9694)
!9698 = !DILocation(line: 1801, column: 8, scope: !9686)
!9699 = !DILocation(line: 1802, column: 21, scope: !9694)
!9700 = !DILocation(line: 1802, column: 19, scope: !9694)
!9701 = !DILocation(line: 1802, column: 9, scope: !9694)
!9702 = !DILocation(line: 1802, column: 5, scope: !9694)
!9703 = !DILocation(line: 1804, column: 18, scope: !9686)
!9704 = !DILocation(line: 1804, column: 4, scope: !9686)
!9705 = !DILocation(line: 1804, column: 11, scope: !9686)
!9706 = !DILocation(line: 1804, column: 16, scope: !9686)
!9707 = !DILocation(line: 1805, column: 21, scope: !9686)
!9708 = !DILocation(line: 1805, column: 4, scope: !9686)
!9709 = !DILocation(line: 1805, column: 11, scope: !9686)
!9710 = !DILocation(line: 1805, column: 19, scope: !9686)
!9711 = !DILocation(line: 1806, column: 24, scope: !9686)
!9712 = !DILocation(line: 1806, column: 4, scope: !9686)
!9713 = !DILocation(line: 1806, column: 11, scope: !9686)
!9714 = !DILocation(line: 1806, column: 22, scope: !9686)
!9715 = !DILocation(line: 1807, column: 4, scope: !9686)
!9716 = !DILocation(line: 1807, column: 11, scope: !9686)
!9717 = !DILocation(line: 1807, column: 20, scope: !9686)
!9718 = !DILocation(line: 1809, column: 14, scope: !9686)
!9719 = !DILocation(line: 1809, column: 11, scope: !9686)
!9720 = !DILocation(line: 1810, column: 12, scope: !9686)
!9721 = !DILocation(line: 1810, column: 9, scope: !9686)
!9722 = !DILocation(line: 1812, column: 14, scope: !9686)
!9723 = !DILocation(line: 1812, column: 12, scope: !9686)
!9724 = !DILocation(line: 1813, column: 9, scope: !9686)
!9725 = distinct !{!9725, !9683, !9726}
!9726 = !DILocation(line: 1814, column: 3, scope: !9677)
!9727 = !DILocation(line: 1815, column: 2, scope: !9677)
!9728 = distinct !{!9728, !9672, !9729}
!9729 = !DILocation(line: 1815, column: 2, scope: !9673)
!9730 = !DILocation(line: 1817, column: 6, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 1817, column: 6)
!9732 = !DILocation(line: 1817, column: 6, scope: !9651)
!9733 = !DILocation(line: 1818, column: 3, scope: !9731)
!9734 = !DILocation(line: 1818, column: 12, scope: !9731)
!9735 = !DILocation(line: 1818, column: 23, scope: !9731)
!9736 = !DILocation(line: 1819, column: 2, scope: !9651)
!9737 = !{i32 -2139354455}
!9738 = !DILocation(line: 1820, column: 1, scope: !9651)
!9739 = distinct !DISubprogram(name: "is_multi_taskfile", scope: !204, file: !204, line: 1056, type: !9740, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9740 = !DISubroutineType(types: !9741)
!9741 = !{!260, !7619}
!9742 = !DILocalVariable(name: "tf", arg: 1, scope: !9739, file: !204, line: 1056, type: !7619)
!9743 = !DILocation(line: 1056, column: 58, scope: !9739)
!9744 = !DILocation(line: 1058, column: 10, scope: !9739)
!9745 = !DILocation(line: 1058, column: 14, scope: !9739)
!9746 = !DILocation(line: 1058, column: 22, scope: !9739)
!9747 = !DILocation(line: 1058, column: 45, scope: !9739)
!9748 = !DILocation(line: 1059, column: 10, scope: !9739)
!9749 = !DILocation(line: 1059, column: 14, scope: !9739)
!9750 = !DILocation(line: 1059, column: 22, scope: !9739)
!9751 = !DILocation(line: 1059, column: 46, scope: !9739)
!9752 = !DILocation(line: 1060, column: 10, scope: !9739)
!9753 = !DILocation(line: 1060, column: 14, scope: !9739)
!9754 = !DILocation(line: 1060, column: 22, scope: !9739)
!9755 = !DILocation(line: 1060, column: 49, scope: !9739)
!9756 = !DILocation(line: 1061, column: 10, scope: !9739)
!9757 = !DILocation(line: 1061, column: 14, scope: !9739)
!9758 = !DILocation(line: 1061, column: 22, scope: !9739)
!9759 = !DILocation(line: 1061, column: 50, scope: !9739)
!9760 = !DILocation(line: 1062, column: 10, scope: !9739)
!9761 = !DILocation(line: 1062, column: 14, scope: !9739)
!9762 = !DILocation(line: 1062, column: 22, scope: !9739)
!9763 = !DILocation(line: 1058, column: 2, scope: !9739)
!9764 = distinct !DISubprogram(name: "mv_ap_base", scope: !3, file: !3, line: 922, type: !9765, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9765 = !DISubroutineType(types: !9766)
!9766 = !{!1187, !6835}
!9767 = !DILocalVariable(name: "ap", arg: 1, scope: !9764, file: !3, line: 922, type: !6835)
!9768 = !DILocation(line: 922, column: 57, scope: !9764)
!9769 = !DILocation(line: 924, column: 35, scope: !9764)
!9770 = !DILocation(line: 924, column: 39, scope: !9764)
!9771 = !DILocation(line: 924, column: 22, scope: !9764)
!9772 = !DILocation(line: 924, column: 46, scope: !9764)
!9773 = !DILocation(line: 924, column: 50, scope: !9764)
!9774 = !DILocation(line: 924, column: 9, scope: !9764)
!9775 = !DILocation(line: 924, column: 2, scope: !9764)
!9776 = distinct !DISubprogram(name: "mv_start_edma", scope: !3, file: !3, line: 1160, type: !9777, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9777 = !DISubroutineType(types: !9778)
!9778 = !{null, !6835, !1187, !8689, !2109}
!9779 = !DILocalVariable(name: "ap", arg: 1, scope: !9776, file: !3, line: 1160, type: !6835)
!9780 = !DILocation(line: 1160, column: 44, scope: !9776)
!9781 = !DILocalVariable(name: "port_mmio", arg: 2, scope: !9776, file: !3, line: 1160, type: !1187)
!9782 = !DILocation(line: 1160, column: 62, scope: !9776)
!9783 = !DILocalVariable(name: "pp", arg: 3, scope: !9776, file: !3, line: 1161, type: !8689)
!9784 = !DILocation(line: 1161, column: 26, scope: !9776)
!9785 = !DILocalVariable(name: "protocol", arg: 4, scope: !9776, file: !3, line: 1161, type: !2109)
!9786 = !DILocation(line: 1161, column: 33, scope: !9776)
!9787 = !DILocalVariable(name: "want_ncq", scope: !9776, file: !3, line: 1163, type: !260)
!9788 = !DILocation(line: 1163, column: 6, scope: !9776)
!9789 = !DILocation(line: 1163, column: 18, scope: !9776)
!9790 = !DILocation(line: 1163, column: 27, scope: !9776)
!9791 = !DILocation(line: 1165, column: 6, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9776, file: !3, line: 1165, column: 6)
!9793 = !DILocation(line: 1165, column: 10, scope: !9792)
!9794 = !DILocation(line: 1165, column: 19, scope: !9792)
!9795 = !DILocation(line: 1165, column: 6, scope: !9776)
!9796 = !DILocalVariable(name: "using_ncq", scope: !9797, file: !3, line: 1166, type: !260)
!9797 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 1165, column: 41)
!9798 = !DILocation(line: 1166, column: 7, scope: !9797)
!9799 = !DILocation(line: 1166, column: 21, scope: !9797)
!9800 = !DILocation(line: 1166, column: 25, scope: !9797)
!9801 = !DILocation(line: 1166, column: 34, scope: !9797)
!9802 = !DILocation(line: 1166, column: 55, scope: !9797)
!9803 = !DILocation(line: 1167, column: 7, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 1167, column: 7)
!9805 = !DILocation(line: 1167, column: 19, scope: !9804)
!9806 = !DILocation(line: 1167, column: 16, scope: !9804)
!9807 = !DILocation(line: 1167, column: 7, scope: !9797)
!9808 = !DILocation(line: 1168, column: 17, scope: !9804)
!9809 = !DILocation(line: 1168, column: 4, scope: !9804)
!9810 = !DILocation(line: 1169, column: 2, scope: !9797)
!9811 = !DILocation(line: 1170, column: 8, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9776, file: !3, line: 1170, column: 6)
!9813 = !DILocation(line: 1170, column: 12, scope: !9812)
!9814 = !DILocation(line: 1170, column: 21, scope: !9812)
!9815 = !DILocation(line: 1170, column: 6, scope: !9776)
!9816 = !DILocalVariable(name: "hpriv", scope: !9817, file: !3, line: 1171, type: !7763)
!9817 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 1170, column: 44)
!9818 = !DILocation(line: 1171, column: 24, scope: !9817)
!9819 = !DILocation(line: 1171, column: 32, scope: !9817)
!9820 = !DILocation(line: 1171, column: 36, scope: !9817)
!9821 = !DILocation(line: 1171, column: 42, scope: !9817)
!9822 = !DILocation(line: 1173, column: 15, scope: !9817)
!9823 = !DILocation(line: 1173, column: 19, scope: !9817)
!9824 = !DILocation(line: 1173, column: 3, scope: !9817)
!9825 = !DILocation(line: 1175, column: 20, scope: !9817)
!9826 = !DILocation(line: 1175, column: 31, scope: !9817)
!9827 = !DILocation(line: 1175, column: 38, scope: !9817)
!9828 = !DILocation(line: 1175, column: 3, scope: !9817)
!9829 = !DILocation(line: 1176, column: 33, scope: !9817)
!9830 = !DILocation(line: 1176, column: 37, scope: !9817)
!9831 = !DILocation(line: 1176, column: 3, scope: !9817)
!9832 = !DILocation(line: 1178, column: 21, scope: !9817)
!9833 = !DILocation(line: 1178, column: 31, scope: !9817)
!9834 = !DILocation(line: 1178, column: 3, scope: !9817)
!9835 = !DILocation(line: 1179, column: 3, scope: !9817)
!9836 = !DILocation(line: 1179, column: 7, scope: !9817)
!9837 = !DILocation(line: 1179, column: 16, scope: !9817)
!9838 = !DILocation(line: 1180, column: 2, scope: !9817)
!9839 = !DILocation(line: 1181, column: 1, scope: !9776)
!9840 = distinct !DISubprogram(name: "writelfl", scope: !3, file: !3, line: 856, type: !9841, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{null, !1186, !1187}
!9843 = !DILocalVariable(name: "data", arg: 1, scope: !9840, file: !3, line: 856, type: !1186)
!9844 = !DILocation(line: 856, column: 43, scope: !9840)
!9845 = !DILocalVariable(name: "addr", arg: 2, scope: !9840, file: !3, line: 856, type: !1187)
!9846 = !DILocation(line: 856, column: 63, scope: !9840)
!9847 = !DILocation(line: 858, column: 9, scope: !9840)
!9848 = !DILocation(line: 858, column: 15, scope: !9840)
!9849 = !DILocation(line: 858, column: 2, scope: !9840)
!9850 = !DILocation(line: 859, column: 15, scope: !9840)
!9851 = !DILocation(line: 859, column: 9, scope: !9840)
!9852 = !DILocation(line: 860, column: 1, scope: !9840)
!9853 = distinct !DISubprogram(name: "mv_stop_edma", scope: !3, file: !3, line: 1230, type: !7599, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9854 = !DILocalVariable(name: "ap", arg: 1, scope: !9853, file: !3, line: 1230, type: !6835)
!9855 = !DILocation(line: 1230, column: 42, scope: !9853)
!9856 = !DILocalVariable(name: "port_mmio", scope: !9853, file: !3, line: 1232, type: !1187)
!9857 = !DILocation(line: 1232, column: 16, scope: !9853)
!9858 = !DILocation(line: 1232, column: 39, scope: !9853)
!9859 = !DILocation(line: 1232, column: 28, scope: !9853)
!9860 = !DILocalVariable(name: "pp", scope: !9853, file: !3, line: 1233, type: !8689)
!9861 = !DILocation(line: 1233, column: 23, scope: !9853)
!9862 = !DILocation(line: 1233, column: 28, scope: !9853)
!9863 = !DILocation(line: 1233, column: 32, scope: !9853)
!9864 = !DILocalVariable(name: "err", scope: !9853, file: !3, line: 1234, type: !260)
!9865 = !DILocation(line: 1234, column: 6, scope: !9853)
!9866 = !DILocation(line: 1236, column: 8, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 1236, column: 6)
!9868 = !DILocation(line: 1236, column: 12, scope: !9867)
!9869 = !DILocation(line: 1236, column: 21, scope: !9867)
!9870 = !DILocation(line: 1236, column: 6, scope: !9853)
!9871 = !DILocation(line: 1237, column: 3, scope: !9867)
!9872 = !DILocation(line: 1238, column: 2, scope: !9853)
!9873 = !DILocation(line: 1238, column: 6, scope: !9853)
!9874 = !DILocation(line: 1238, column: 15, scope: !9853)
!9875 = !DILocation(line: 1239, column: 30, scope: !9853)
!9876 = !DILocation(line: 1239, column: 2, scope: !9853)
!9877 = !DILocation(line: 1240, column: 26, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 1240, column: 6)
!9879 = !DILocation(line: 1240, column: 6, scope: !9878)
!9880 = !DILocation(line: 1240, column: 6, scope: !9853)
!9881 = !DILocation(line: 1241, column: 3, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9878, file: !3, line: 1240, column: 38)
!9883 = !DILocation(line: 1242, column: 7, scope: !9882)
!9884 = !DILocation(line: 1243, column: 2, scope: !9882)
!9885 = !DILocation(line: 1244, column: 14, scope: !9853)
!9886 = !DILocation(line: 1244, column: 2, scope: !9853)
!9887 = !DILocation(line: 1245, column: 9, scope: !9853)
!9888 = !DILocation(line: 1245, column: 2, scope: !9853)
!9889 = !DILocation(line: 1246, column: 1, scope: !9853)
!9890 = distinct !DISubprogram(name: "mv_clear_and_enable_port_irqs", scope: !3, file: !3, line: 1063, type: !9891, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9891 = !DISubroutineType(types: !9892)
!9892 = !{null, !6835, !1187, !7}
!9893 = !DILocalVariable(name: "ap", arg: 1, scope: !9890, file: !3, line: 1063, type: !6835)
!9894 = !DILocation(line: 1063, column: 60, scope: !9890)
!9895 = !DILocalVariable(name: "port_mmio", arg: 2, scope: !9890, file: !3, line: 1064, type: !1187)
!9896 = !DILocation(line: 1064, column: 22, scope: !9890)
!9897 = !DILocalVariable(name: "port_irqs", arg: 3, scope: !9890, file: !3, line: 1065, type: !7)
!9898 = !DILocation(line: 1065, column: 21, scope: !9890)
!9899 = !DILocalVariable(name: "hpriv", scope: !9890, file: !3, line: 1067, type: !7763)
!9900 = !DILocation(line: 1067, column: 23, scope: !9890)
!9901 = !DILocation(line: 1067, column: 31, scope: !9890)
!9902 = !DILocation(line: 1067, column: 35, scope: !9890)
!9903 = !DILocation(line: 1067, column: 41, scope: !9890)
!9904 = !DILocalVariable(name: "hardport", scope: !9890, file: !3, line: 1068, type: !260)
!9905 = !DILocation(line: 1068, column: 6, scope: !9890)
!9906 = !DILocation(line: 1068, column: 39, scope: !9890)
!9907 = !DILocation(line: 1068, column: 43, scope: !9890)
!9908 = !DILocation(line: 1068, column: 17, scope: !9890)
!9909 = !DILocalVariable(name: "hc_mmio", scope: !9890, file: !3, line: 1069, type: !1187)
!9910 = !DILocation(line: 1069, column: 16, scope: !9890)
!9911 = !DILocation(line: 1070, column: 18, scope: !9890)
!9912 = !DILocation(line: 1070, column: 22, scope: !9890)
!9913 = !DILocation(line: 1070, column: 5, scope: !9890)
!9914 = !DILocation(line: 1070, column: 29, scope: !9890)
!9915 = !DILocation(line: 1070, column: 33, scope: !9890)
!9916 = !DILocation(line: 1069, column: 26, scope: !9890)
!9917 = !DILocalVariable(name: "hc_irq_cause", scope: !9890, file: !3, line: 1071, type: !1266)
!9918 = !DILocation(line: 1071, column: 6, scope: !9890)
!9919 = !DILocation(line: 1074, column: 14, scope: !9890)
!9920 = !DILocation(line: 1074, column: 24, scope: !9890)
!9921 = !DILocation(line: 1074, column: 2, scope: !9890)
!9922 = !DILocation(line: 1077, column: 42, scope: !9890)
!9923 = !DILocation(line: 1077, column: 39, scope: !9890)
!9924 = !DILocation(line: 1077, column: 17, scope: !9890)
!9925 = !DILocation(line: 1077, column: 15, scope: !9890)
!9926 = !DILocation(line: 1078, column: 11, scope: !9890)
!9927 = !DILocation(line: 1078, column: 25, scope: !9890)
!9928 = !DILocation(line: 1078, column: 33, scope: !9890)
!9929 = !DILocation(line: 1078, column: 2, scope: !9890)
!9930 = !DILocation(line: 1081, column: 6, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 1081, column: 6)
!9932 = !DILocation(line: 1081, column: 6, scope: !9890)
!9933 = !DILocation(line: 1082, column: 15, scope: !9931)
!9934 = !DILocation(line: 1082, column: 25, scope: !9931)
!9935 = !DILocation(line: 1082, column: 3, scope: !9931)
!9936 = !DILocation(line: 1084, column: 22, scope: !9890)
!9937 = !DILocation(line: 1084, column: 26, scope: !9890)
!9938 = !DILocation(line: 1084, column: 2, scope: !9890)
!9939 = !DILocation(line: 1085, column: 1, scope: !9890)
!9940 = distinct !DISubprogram(name: "mv_pmp_select", scope: !3, file: !3, line: 3591, type: !9941, scopeLine: 3592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{null, !6835, !260}
!9943 = !DILocalVariable(name: "ap", arg: 1, scope: !9940, file: !3, line: 3591, type: !6835)
!9944 = !DILocation(line: 3591, column: 44, scope: !9940)
!9945 = !DILocalVariable(name: "pmp", arg: 2, scope: !9940, file: !3, line: 3591, type: !260)
!9946 = !DILocation(line: 3591, column: 52, scope: !9940)
!9947 = !DILocation(line: 3593, column: 25, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 3593, column: 6)
!9949 = !DILocation(line: 3593, column: 6, scope: !9948)
!9950 = !DILocation(line: 3593, column: 6, scope: !9940)
!9951 = !DILocalVariable(name: "port_mmio", scope: !9952, file: !3, line: 3594, type: !1187)
!9952 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 3593, column: 30)
!9953 = !DILocation(line: 3594, column: 17, scope: !9952)
!9954 = !DILocation(line: 3594, column: 40, scope: !9952)
!9955 = !DILocation(line: 3594, column: 29, scope: !9952)
!9956 = !DILocalVariable(name: "reg", scope: !9952, file: !3, line: 3595, type: !1266)
!9957 = !DILocation(line: 3595, column: 7, scope: !9952)
!9958 = !DILocation(line: 3595, column: 19, scope: !9952)
!9959 = !DILocation(line: 3595, column: 29, scope: !9952)
!9960 = !DILocation(line: 3595, column: 13, scope: !9952)
!9961 = !DILocalVariable(name: "old", scope: !9952, file: !3, line: 3596, type: !260)
!9962 = !DILocation(line: 3596, column: 7, scope: !9952)
!9963 = !DILocation(line: 3596, column: 13, scope: !9952)
!9964 = !DILocation(line: 3596, column: 17, scope: !9952)
!9965 = !DILocation(line: 3598, column: 7, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9952, file: !3, line: 3598, column: 7)
!9967 = !DILocation(line: 3598, column: 14, scope: !9966)
!9968 = !DILocation(line: 3598, column: 11, scope: !9966)
!9969 = !DILocation(line: 3598, column: 7, scope: !9952)
!9970 = !DILocation(line: 3599, column: 11, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 3598, column: 19)
!9972 = !DILocation(line: 3599, column: 15, scope: !9971)
!9973 = !DILocation(line: 3599, column: 25, scope: !9971)
!9974 = !DILocation(line: 3599, column: 23, scope: !9971)
!9975 = !DILocation(line: 3599, column: 8, scope: !9971)
!9976 = !DILocation(line: 3600, column: 13, scope: !9971)
!9977 = !DILocation(line: 3600, column: 18, scope: !9971)
!9978 = !DILocation(line: 3600, column: 28, scope: !9971)
!9979 = !DILocation(line: 3600, column: 4, scope: !9971)
!9980 = !DILocation(line: 3601, column: 3, scope: !9971)
!9981 = !DILocation(line: 3602, column: 2, scope: !9952)
!9982 = !DILocation(line: 3603, column: 1, scope: !9940)
!9983 = distinct !DISubprogram(name: "mv_qc_issue_fis", scope: !3, file: !3, line: 2283, type: !7591, scopeLine: 2284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!9984 = !DILocalVariable(name: "qc", arg: 1, scope: !9983, file: !3, line: 2283, type: !6831)
!9985 = !DILocation(line: 2283, column: 60, scope: !9983)
!9986 = !DILocalVariable(name: "ap", scope: !9983, file: !3, line: 2285, type: !6835)
!9987 = !DILocation(line: 2285, column: 19, scope: !9983)
!9988 = !DILocation(line: 2285, column: 24, scope: !9983)
!9989 = !DILocation(line: 2285, column: 28, scope: !9983)
!9990 = !DILocalVariable(name: "pp", scope: !9983, file: !3, line: 2286, type: !8689)
!9991 = !DILocation(line: 2286, column: 23, scope: !9983)
!9992 = !DILocation(line: 2286, column: 28, scope: !9983)
!9993 = !DILocation(line: 2286, column: 32, scope: !9983)
!9994 = !DILocalVariable(name: "link", scope: !9983, file: !3, line: 2287, type: !7295)
!9995 = !DILocation(line: 2287, column: 19, scope: !9983)
!9996 = !DILocation(line: 2287, column: 26, scope: !9983)
!9997 = !DILocation(line: 2287, column: 30, scope: !9983)
!9998 = !DILocation(line: 2287, column: 35, scope: !9983)
!9999 = !DILocalVariable(name: "fis", scope: !9983, file: !3, line: 2288, type: !10000)
!10000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 160, elements: !3123)
!10001 = !DILocation(line: 2288, column: 6, scope: !9983)
!10002 = !DILocalVariable(name: "err", scope: !9983, file: !3, line: 2289, type: !260)
!10003 = !DILocation(line: 2289, column: 6, scope: !9983)
!10004 = !DILocation(line: 2291, column: 17, scope: !9983)
!10005 = !DILocation(line: 2291, column: 21, scope: !9983)
!10006 = !DILocation(line: 2291, column: 25, scope: !9983)
!10007 = !DILocation(line: 2291, column: 31, scope: !9983)
!10008 = !DILocation(line: 2291, column: 47, scope: !9983)
!10009 = !DILocation(line: 2291, column: 39, scope: !9983)
!10010 = !DILocation(line: 2291, column: 2, scope: !9983)
!10011 = !DILocation(line: 2292, column: 20, scope: !9983)
!10012 = !DILocation(line: 2292, column: 24, scope: !9983)
!10013 = !DILocation(line: 2292, column: 8, scope: !9983)
!10014 = !DILocation(line: 2292, column: 6, scope: !9983)
!10015 = !DILocation(line: 2293, column: 6, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 2293, column: 6)
!10017 = !DILocation(line: 2293, column: 6, scope: !9983)
!10018 = !DILocation(line: 2294, column: 10, scope: !10016)
!10019 = !DILocation(line: 2294, column: 3, scope: !10016)
!10020 = !DILocation(line: 2296, column: 10, scope: !9983)
!10021 = !DILocation(line: 2296, column: 14, scope: !9983)
!10022 = !DILocation(line: 2296, column: 17, scope: !9983)
!10023 = !DILocation(line: 2296, column: 2, scope: !9983)
!10024 = !DILocation(line: 2298, column: 3, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 2296, column: 27)
!10026 = !DILocation(line: 2298, column: 7, scope: !10025)
!10027 = !DILocation(line: 2298, column: 16, scope: !10025)
!10028 = !DILocation(line: 2301, column: 3, scope: !10025)
!10029 = !DILocation(line: 2301, column: 7, scope: !10025)
!10030 = !DILocation(line: 2301, column: 22, scope: !10025)
!10031 = !DILocation(line: 2302, column: 3, scope: !10025)
!10032 = !DILocation(line: 2304, column: 3, scope: !10025)
!10033 = !DILocation(line: 2304, column: 7, scope: !10025)
!10034 = !DILocation(line: 2304, column: 16, scope: !10025)
!10035 = !DILocation(line: 2305, column: 7, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 2305, column: 7)
!10037 = !DILocation(line: 2305, column: 11, scope: !10036)
!10038 = !DILocation(line: 2305, column: 14, scope: !10036)
!10039 = !DILocation(line: 2305, column: 20, scope: !10036)
!10040 = !DILocation(line: 2305, column: 7, scope: !10025)
!10041 = !DILocation(line: 2306, column: 4, scope: !10036)
!10042 = !DILocation(line: 2306, column: 8, scope: !10036)
!10043 = !DILocation(line: 2306, column: 23, scope: !10036)
!10044 = !DILocation(line: 2308, column: 4, scope: !10036)
!10045 = !DILocation(line: 2308, column: 8, scope: !10036)
!10046 = !DILocation(line: 2308, column: 23, scope: !10036)
!10047 = !DILocation(line: 2309, column: 3, scope: !10025)
!10048 = !DILocation(line: 2311, column: 3, scope: !10025)
!10049 = !DILocation(line: 2311, column: 7, scope: !10025)
!10050 = !DILocation(line: 2311, column: 22, scope: !10025)
!10051 = !DILocation(line: 2312, column: 3, scope: !10025)
!10052 = !DILocation(line: 2315, column: 6, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 2315, column: 6)
!10054 = !DILocation(line: 2315, column: 10, scope: !10053)
!10055 = !DILocation(line: 2315, column: 13, scope: !10053)
!10056 = !DILocation(line: 2315, column: 19, scope: !10053)
!10057 = !DILocation(line: 2315, column: 6, scope: !9983)
!10058 = !DILocation(line: 2316, column: 26, scope: !10053)
!10059 = !DILocation(line: 2316, column: 3, scope: !10053)
!10060 = !DILocation(line: 2317, column: 2, scope: !9983)
!10061 = !DILocation(line: 2318, column: 1, scope: !9983)
!10062 = distinct !DISubprogram(name: "mv_host_base", scope: !3, file: !3, line: 916, type: !10063, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10063 = !DISubroutineType(types: !10064)
!10064 = !{!1187, !7484}
!10065 = !DILocalVariable(name: "host", arg: 1, scope: !10062, file: !3, line: 916, type: !7484)
!10066 = !DILocation(line: 916, column: 59, scope: !10062)
!10067 = !DILocalVariable(name: "hpriv", scope: !10062, file: !3, line: 918, type: !7763)
!10068 = !DILocation(line: 918, column: 23, scope: !10062)
!10069 = !DILocation(line: 918, column: 31, scope: !10062)
!10070 = !DILocation(line: 918, column: 37, scope: !10062)
!10071 = !DILocation(line: 919, column: 9, scope: !10062)
!10072 = !DILocation(line: 919, column: 16, scope: !10062)
!10073 = !DILocation(line: 919, column: 2, scope: !10062)
!10074 = distinct !DISubprogram(name: "mv_edma_cfg", scope: !3, file: !3, line: 1601, type: !10075, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{null, !6835, !260, !260}
!10077 = !DILocalVariable(name: "ap", arg: 1, scope: !10074, file: !3, line: 1601, type: !6835)
!10078 = !DILocation(line: 1601, column: 42, scope: !10074)
!10079 = !DILocalVariable(name: "want_ncq", arg: 2, scope: !10074, file: !3, line: 1601, type: !260)
!10080 = !DILocation(line: 1601, column: 50, scope: !10074)
!10081 = !DILocalVariable(name: "want_edma", arg: 3, scope: !10074, file: !3, line: 1601, type: !260)
!10082 = !DILocation(line: 1601, column: 64, scope: !10074)
!10083 = !DILocalVariable(name: "cfg", scope: !10074, file: !3, line: 1603, type: !1266)
!10084 = !DILocation(line: 1603, column: 6, scope: !10074)
!10085 = !DILocalVariable(name: "pp", scope: !10074, file: !3, line: 1604, type: !8689)
!10086 = !DILocation(line: 1604, column: 23, scope: !10074)
!10087 = !DILocation(line: 1604, column: 31, scope: !10074)
!10088 = !DILocation(line: 1604, column: 35, scope: !10074)
!10089 = !DILocalVariable(name: "hpriv", scope: !10074, file: !3, line: 1605, type: !7763)
!10090 = !DILocation(line: 1605, column: 23, scope: !10074)
!10091 = !DILocation(line: 1605, column: 31, scope: !10074)
!10092 = !DILocation(line: 1605, column: 35, scope: !10074)
!10093 = !DILocation(line: 1605, column: 41, scope: !10074)
!10094 = !DILocalVariable(name: "port_mmio", scope: !10074, file: !3, line: 1606, type: !1187)
!10095 = !DILocation(line: 1606, column: 16, scope: !10074)
!10096 = !DILocation(line: 1606, column: 42, scope: !10074)
!10097 = !DILocation(line: 1606, column: 31, scope: !10074)
!10098 = !DILocation(line: 1609, column: 6, scope: !10074)
!10099 = !DILocation(line: 1610, column: 2, scope: !10074)
!10100 = !DILocation(line: 1610, column: 6, scope: !10074)
!10101 = !DILocation(line: 1610, column: 15, scope: !10074)
!10102 = !DILocation(line: 1613, column: 6, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 1613, column: 6)
!10104 = !DILocation(line: 1613, column: 6, scope: !10074)
!10105 = !DILocation(line: 1614, column: 7, scope: !10103)
!10106 = !DILocation(line: 1614, column: 3, scope: !10103)
!10107 = !DILocation(line: 1616, column: 11, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 1616, column: 11)
!10109 = !DILocation(line: 1616, column: 11, scope: !10103)
!10110 = !DILocation(line: 1617, column: 7, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 1616, column: 29)
!10112 = !DILocation(line: 1618, column: 25, scope: !10111)
!10113 = !DILocation(line: 1618, column: 29, scope: !10111)
!10114 = !DILocation(line: 1618, column: 3, scope: !10111)
!10115 = !DILocation(line: 1620, column: 2, scope: !10111)
!10116 = !DILocation(line: 1620, column: 13, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 1620, column: 13)
!10118 = !DILocation(line: 1620, column: 13, scope: !10108)
!10119 = !DILocalVariable(name: "want_fbs", scope: !10120, file: !3, line: 1621, type: !260)
!10120 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 1620, column: 32)
!10121 = !DILocation(line: 1621, column: 7, scope: !10120)
!10122 = !DILocation(line: 1621, column: 36, scope: !10120)
!10123 = !DILocation(line: 1621, column: 18, scope: !10120)
!10124 = !DILocation(line: 1630, column: 15, scope: !10120)
!10125 = !DILocation(line: 1630, column: 12, scope: !10120)
!10126 = !DILocation(line: 1632, column: 17, scope: !10120)
!10127 = !DILocation(line: 1632, column: 21, scope: !10120)
!10128 = !DILocation(line: 1632, column: 31, scope: !10120)
!10129 = !DILocation(line: 1632, column: 3, scope: !10120)
!10130 = !DILocation(line: 1634, column: 7, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1634, column: 7)
!10132 = !DILocation(line: 1634, column: 7, scope: !10120)
!10133 = !DILocation(line: 1635, column: 4, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 1634, column: 17)
!10135 = !DILocation(line: 1635, column: 8, scope: !10134)
!10136 = !DILocation(line: 1635, column: 17, scope: !10134)
!10137 = !DILocation(line: 1636, column: 8, scope: !10134)
!10138 = !DILocation(line: 1637, column: 3, scope: !10134)
!10139 = !DILocation(line: 1639, column: 7, scope: !10120)
!10140 = !DILocation(line: 1640, column: 7, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1640, column: 7)
!10142 = !DILocation(line: 1640, column: 7, scope: !10120)
!10143 = !DILocation(line: 1641, column: 8, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 1640, column: 18)
!10145 = !DILocation(line: 1642, column: 9, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 1642, column: 8)
!10147 = !DILocation(line: 1642, column: 8, scope: !10144)
!10148 = !DILocation(line: 1643, column: 9, scope: !10146)
!10149 = !DILocation(line: 1643, column: 5, scope: !10146)
!10150 = !DILocation(line: 1644, column: 3, scope: !10144)
!10151 = !DILocation(line: 1645, column: 7, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1645, column: 7)
!10153 = !DILocation(line: 1645, column: 14, scope: !10152)
!10154 = !DILocation(line: 1645, column: 23, scope: !10152)
!10155 = !DILocation(line: 1645, column: 7, scope: !10120)
!10156 = !DILocation(line: 1646, column: 8, scope: !10152)
!10157 = !DILocation(line: 1646, column: 4, scope: !10152)
!10158 = !DILocation(line: 1647, column: 23, scope: !10120)
!10159 = !DILocation(line: 1647, column: 28, scope: !10120)
!10160 = !DILocation(line: 1647, column: 27, scope: !10120)
!10161 = !DILocation(line: 1647, column: 3, scope: !10120)
!10162 = !DILocation(line: 1649, column: 7, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1649, column: 7)
!10164 = !DILocation(line: 1649, column: 7, scope: !10120)
!10165 = !DILocation(line: 1650, column: 8, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 1650, column: 8)
!10167 = distinct !DILexicalBlock(scope: !10163, file: !3, line: 1649, column: 22)
!10168 = !DILocation(line: 1650, column: 8, scope: !10167)
!10169 = !DILocation(line: 1651, column: 29, scope: !10166)
!10170 = !DILocation(line: 1651, column: 5, scope: !10166)
!10171 = !DILocation(line: 1653, column: 30, scope: !10166)
!10172 = !DILocation(line: 1653, column: 5, scope: !10166)
!10173 = !DILocation(line: 1654, column: 3, scope: !10167)
!10174 = !DILocation(line: 1655, column: 2, scope: !10120)
!10175 = !DILocation(line: 1657, column: 6, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 1657, column: 6)
!10177 = !DILocation(line: 1657, column: 6, scope: !10074)
!10178 = !DILocation(line: 1658, column: 7, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10176, file: !3, line: 1657, column: 16)
!10180 = !DILocation(line: 1659, column: 3, scope: !10179)
!10181 = !DILocation(line: 1659, column: 7, scope: !10179)
!10182 = !DILocation(line: 1659, column: 16, scope: !10179)
!10183 = !DILocation(line: 1660, column: 2, scope: !10179)
!10184 = !DILocation(line: 1662, column: 11, scope: !10074)
!10185 = !DILocation(line: 1662, column: 16, scope: !10074)
!10186 = !DILocation(line: 1662, column: 26, scope: !10074)
!10187 = !DILocation(line: 1662, column: 2, scope: !10074)
!10188 = !DILocation(line: 1663, column: 1, scope: !10074)
!10189 = distinct !DISubprogram(name: "mv_set_edma_ptrs", scope: !3, file: !3, line: 988, type: !10190, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10190 = !DISubroutineType(types: !10191)
!10191 = !{null, !1187, !7763, !8689}
!10192 = !DILocalVariable(name: "port_mmio", arg: 1, scope: !10189, file: !3, line: 988, type: !1187)
!10193 = !DILocation(line: 988, column: 44, scope: !10189)
!10194 = !DILocalVariable(name: "hpriv", arg: 2, scope: !10189, file: !3, line: 989, type: !7763)
!10195 = !DILocation(line: 989, column: 30, scope: !10189)
!10196 = !DILocalVariable(name: "pp", arg: 3, scope: !10189, file: !3, line: 990, type: !8689)
!10197 = !DILocation(line: 990, column: 30, scope: !10189)
!10198 = !DILocalVariable(name: "index", scope: !10189, file: !3, line: 992, type: !1266)
!10199 = !DILocation(line: 992, column: 6, scope: !10189)
!10200 = !DILocation(line: 997, column: 2, scope: !10189)
!10201 = !DILocation(line: 997, column: 6, scope: !10189)
!10202 = !DILocation(line: 997, column: 14, scope: !10189)
!10203 = !DILocation(line: 998, column: 10, scope: !10189)
!10204 = !DILocation(line: 998, column: 14, scope: !10189)
!10205 = !DILocation(line: 998, column: 22, scope: !10189)
!10206 = !DILocation(line: 998, column: 8, scope: !10189)
!10207 = !DILocalVariable(name: "__ret_warn_on", scope: !10208, file: !3, line: 1000, type: !260)
!10208 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 1000, column: 2)
!10209 = !DILocation(line: 1000, column: 2, scope: !10208)
!10210 = !DILocation(line: 1000, column: 2, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 1000, column: 2)
!10212 = !DILocation(line: 1000, column: 2, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 1000, column: 2)
!10214 = !DILocation(line: 1000, column: 2, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 1000, column: 2)
!10216 = !DILocation(line: 1000, column: 2, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 1000, column: 2)
!10218 = !{i32 -2139362515, i32 -2139362486, i32 -2139362440, i32 -2139362382, i32 -2139362328, i32 -2139362274, i32 -2139362219, i32 -2139362188}
!10219 = !DILocation(line: 1000, column: 2, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 1000, column: 2)
!10221 = !{i32 -2139361784, i32 -2139361777, i32 -2139361725, i32 -2139361694, i32 -2139361664}
!10222 = !DILocation(line: 1000, column: 2, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 1000, column: 2)
!10224 = !DILocation(line: 1001, column: 10, scope: !10189)
!10225 = !DILocation(line: 1001, column: 14, scope: !10189)
!10226 = !DILocation(line: 1001, column: 23, scope: !10189)
!10227 = !DILocation(line: 1001, column: 30, scope: !10189)
!10228 = !DILocation(line: 1001, column: 9, scope: !10189)
!10229 = !DILocation(line: 1001, column: 37, scope: !10189)
!10230 = !DILocation(line: 1001, column: 47, scope: !10189)
!10231 = !DILocation(line: 1001, column: 2, scope: !10189)
!10232 = !DILocation(line: 1002, column: 12, scope: !10189)
!10233 = !DILocation(line: 1002, column: 16, scope: !10189)
!10234 = !DILocation(line: 1002, column: 25, scope: !10189)
!10235 = !DILocation(line: 1002, column: 54, scope: !10189)
!10236 = !DILocation(line: 1002, column: 52, scope: !10189)
!10237 = !DILocation(line: 1003, column: 4, scope: !10189)
!10238 = !DILocation(line: 1003, column: 14, scope: !10189)
!10239 = !DILocation(line: 1002, column: 2, scope: !10189)
!10240 = !DILocation(line: 1004, column: 11, scope: !10189)
!10241 = !DILocation(line: 1004, column: 18, scope: !10189)
!10242 = !DILocation(line: 1004, column: 28, scope: !10189)
!10243 = !DILocation(line: 1004, column: 2, scope: !10189)
!10244 = !DILocation(line: 1009, column: 2, scope: !10189)
!10245 = !DILocation(line: 1009, column: 6, scope: !10189)
!10246 = !DILocation(line: 1009, column: 15, scope: !10189)
!10247 = !DILocation(line: 1010, column: 10, scope: !10189)
!10248 = !DILocation(line: 1010, column: 14, scope: !10189)
!10249 = !DILocation(line: 1010, column: 23, scope: !10189)
!10250 = !DILocation(line: 1010, column: 8, scope: !10189)
!10251 = !DILocalVariable(name: "__ret_warn_on", scope: !10252, file: !3, line: 1012, type: !260)
!10252 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 1012, column: 2)
!10253 = !DILocation(line: 1012, column: 2, scope: !10252)
!10254 = !DILocation(line: 1012, column: 2, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 1012, column: 2)
!10256 = !DILocation(line: 1012, column: 2, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 1012, column: 2)
!10258 = !DILocation(line: 1012, column: 2, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 1012, column: 2)
!10260 = !DILocation(line: 1012, column: 2, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 1012, column: 2)
!10262 = !{i32 -2139361066, i32 -2139361037, i32 -2139360991, i32 -2139360933, i32 -2139360879, i32 -2139360825, i32 -2139360770, i32 -2139360739}
!10263 = !DILocation(line: 1012, column: 2, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 1012, column: 2)
!10265 = !{i32 -2139360335, i32 -2139360328, i32 -2139360276, i32 -2139360245, i32 -2139360215}
!10266 = !DILocation(line: 1012, column: 2, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 1012, column: 2)
!10268 = !DILocation(line: 1013, column: 10, scope: !10189)
!10269 = !DILocation(line: 1013, column: 14, scope: !10189)
!10270 = !DILocation(line: 1013, column: 23, scope: !10189)
!10271 = !DILocation(line: 1013, column: 30, scope: !10189)
!10272 = !DILocation(line: 1013, column: 9, scope: !10189)
!10273 = !DILocation(line: 1013, column: 37, scope: !10189)
!10274 = !DILocation(line: 1013, column: 47, scope: !10189)
!10275 = !DILocation(line: 1013, column: 2, scope: !10189)
!10276 = !DILocation(line: 1014, column: 11, scope: !10189)
!10277 = !DILocation(line: 1014, column: 18, scope: !10189)
!10278 = !DILocation(line: 1014, column: 28, scope: !10189)
!10279 = !DILocation(line: 1014, column: 2, scope: !10189)
!10280 = !DILocation(line: 1015, column: 12, scope: !10189)
!10281 = !DILocation(line: 1015, column: 16, scope: !10189)
!10282 = !DILocation(line: 1015, column: 25, scope: !10189)
!10283 = !DILocation(line: 1015, column: 54, scope: !10189)
!10284 = !DILocation(line: 1015, column: 52, scope: !10189)
!10285 = !DILocation(line: 1016, column: 4, scope: !10189)
!10286 = !DILocation(line: 1016, column: 14, scope: !10189)
!10287 = !DILocation(line: 1015, column: 2, scope: !10189)
!10288 = !DILocation(line: 1017, column: 1, scope: !10189)
!10289 = distinct !DISubprogram(name: "mv_60x1_errata_sata25", scope: !3, file: !3, line: 1507, type: !9941, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10290 = !DILocalVariable(name: "ap", arg: 1, scope: !10289, file: !3, line: 1507, type: !6835)
!10291 = !DILocation(line: 1507, column: 52, scope: !10289)
!10292 = !DILocalVariable(name: "want_ncq", arg: 2, scope: !10289, file: !3, line: 1507, type: !260)
!10293 = !DILocation(line: 1507, column: 60, scope: !10289)
!10294 = !DILocalVariable(name: "hpriv", scope: !10289, file: !3, line: 1509, type: !7763)
!10295 = !DILocation(line: 1509, column: 23, scope: !10289)
!10296 = !DILocation(line: 1509, column: 31, scope: !10289)
!10297 = !DILocation(line: 1509, column: 35, scope: !10289)
!10298 = !DILocation(line: 1509, column: 41, scope: !10289)
!10299 = !DILocalVariable(name: "old", scope: !10289, file: !3, line: 1510, type: !1266)
!10300 = !DILocation(line: 1510, column: 6, scope: !10289)
!10301 = !DILocalVariable(name: "new", scope: !10289, file: !3, line: 1510, type: !1266)
!10302 = !DILocation(line: 1510, column: 11, scope: !10289)
!10303 = !DILocation(line: 1513, column: 14, scope: !10289)
!10304 = !DILocation(line: 1513, column: 21, scope: !10289)
!10305 = !DILocation(line: 1513, column: 26, scope: !10289)
!10306 = !DILocation(line: 1513, column: 8, scope: !10289)
!10307 = !DILocation(line: 1513, column: 6, scope: !10289)
!10308 = !DILocation(line: 1514, column: 6, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1514, column: 6)
!10310 = !DILocation(line: 1514, column: 6, scope: !10289)
!10311 = !DILocation(line: 1515, column: 9, scope: !10309)
!10312 = !DILocation(line: 1515, column: 13, scope: !10309)
!10313 = !DILocation(line: 1515, column: 7, scope: !10309)
!10314 = !DILocation(line: 1515, column: 3, scope: !10309)
!10315 = !DILocation(line: 1517, column: 9, scope: !10309)
!10316 = !DILocation(line: 1517, column: 13, scope: !10309)
!10317 = !DILocation(line: 1517, column: 7, scope: !10309)
!10318 = !DILocation(line: 1518, column: 6, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1518, column: 6)
!10320 = !DILocation(line: 1518, column: 13, scope: !10319)
!10321 = !DILocation(line: 1518, column: 10, scope: !10319)
!10322 = !DILocation(line: 1518, column: 6, scope: !10289)
!10323 = !DILocation(line: 1519, column: 10, scope: !10319)
!10324 = !DILocation(line: 1519, column: 15, scope: !10319)
!10325 = !DILocation(line: 1519, column: 22, scope: !10319)
!10326 = !DILocation(line: 1519, column: 27, scope: !10319)
!10327 = !DILocation(line: 1519, column: 3, scope: !10319)
!10328 = !DILocation(line: 1520, column: 1, scope: !10289)
!10329 = distinct !DISubprogram(name: "sata_pmp_attached", scope: !204, file: !204, line: 1432, type: !7711, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10330 = !DILocalVariable(name: "ap", arg: 1, scope: !10329, file: !204, line: 1432, type: !6835)
!10331 = !DILocation(line: 1432, column: 55, scope: !10329)
!10332 = !DILocation(line: 1434, column: 9, scope: !10329)
!10333 = !DILocation(line: 1434, column: 13, scope: !10329)
!10334 = !DILocation(line: 1434, column: 26, scope: !10329)
!10335 = !DILocation(line: 1434, column: 2, scope: !10329)
!10336 = distinct !DISubprogram(name: "mv_config_fbs", scope: !3, file: !3, line: 1478, type: !10075, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10337 = !DILocalVariable(name: "ap", arg: 1, scope: !10336, file: !3, line: 1478, type: !6835)
!10338 = !DILocation(line: 1478, column: 44, scope: !10336)
!10339 = !DILocalVariable(name: "want_ncq", arg: 2, scope: !10336, file: !3, line: 1478, type: !260)
!10340 = !DILocation(line: 1478, column: 52, scope: !10336)
!10341 = !DILocalVariable(name: "want_fbs", arg: 3, scope: !10336, file: !3, line: 1478, type: !260)
!10342 = !DILocation(line: 1478, column: 66, scope: !10336)
!10343 = !DILocalVariable(name: "pp", scope: !10336, file: !3, line: 1480, type: !8689)
!10344 = !DILocation(line: 1480, column: 23, scope: !10336)
!10345 = !DILocation(line: 1480, column: 28, scope: !10336)
!10346 = !DILocation(line: 1480, column: 32, scope: !10336)
!10347 = !DILocalVariable(name: "port_mmio", scope: !10336, file: !3, line: 1481, type: !1187)
!10348 = !DILocation(line: 1481, column: 16, scope: !10336)
!10349 = !DILocalVariable(name: "fiscfg", scope: !10336, file: !3, line: 1483, type: !1266)
!10350 = !DILocation(line: 1483, column: 6, scope: !10336)
!10351 = !DILocalVariable(name: "old_fiscfg", scope: !10336, file: !3, line: 1483, type: !1265)
!10352 = !DILocation(line: 1483, column: 17, scope: !10336)
!10353 = !DILocation(line: 1483, column: 33, scope: !10336)
!10354 = !DILocation(line: 1483, column: 37, scope: !10336)
!10355 = !DILocation(line: 1483, column: 44, scope: !10336)
!10356 = !DILocalVariable(name: "ltmode", scope: !10336, file: !3, line: 1484, type: !1266)
!10357 = !DILocation(line: 1484, column: 6, scope: !10336)
!10358 = !DILocalVariable(name: "old_ltmode", scope: !10336, file: !3, line: 1484, type: !1265)
!10359 = !DILocation(line: 1484, column: 17, scope: !10336)
!10360 = !DILocation(line: 1484, column: 33, scope: !10336)
!10361 = !DILocation(line: 1484, column: 37, scope: !10336)
!10362 = !DILocation(line: 1484, column: 44, scope: !10336)
!10363 = !DILocalVariable(name: "haltcond", scope: !10336, file: !3, line: 1485, type: !1266)
!10364 = !DILocation(line: 1485, column: 6, scope: !10336)
!10365 = !DILocalVariable(name: "old_haltcond", scope: !10336, file: !3, line: 1485, type: !1265)
!10366 = !DILocation(line: 1485, column: 17, scope: !10336)
!10367 = !DILocation(line: 1485, column: 33, scope: !10336)
!10368 = !DILocation(line: 1485, column: 37, scope: !10336)
!10369 = !DILocation(line: 1485, column: 44, scope: !10336)
!10370 = !DILocation(line: 1487, column: 14, scope: !10336)
!10371 = !DILocation(line: 1487, column: 13, scope: !10336)
!10372 = !DILocation(line: 1487, column: 25, scope: !10336)
!10373 = !DILocation(line: 1487, column: 11, scope: !10336)
!10374 = !DILocation(line: 1488, column: 14, scope: !10336)
!10375 = !DILocation(line: 1488, column: 13, scope: !10336)
!10376 = !DILocation(line: 1488, column: 27, scope: !10336)
!10377 = !DILocation(line: 1488, column: 11, scope: !10336)
!10378 = !DILocation(line: 1490, column: 6, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 1490, column: 6)
!10380 = !DILocation(line: 1490, column: 6, scope: !10336)
!10381 = !DILocation(line: 1491, column: 13, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1490, column: 16)
!10383 = !DILocation(line: 1491, column: 12, scope: !10382)
!10384 = !DILocation(line: 1491, column: 24, scope: !10382)
!10385 = !DILocation(line: 1491, column: 10, scope: !10382)
!10386 = !DILocation(line: 1492, column: 13, scope: !10382)
!10387 = !DILocation(line: 1492, column: 12, scope: !10382)
!10388 = !DILocation(line: 1492, column: 24, scope: !10382)
!10389 = !DILocation(line: 1492, column: 10, scope: !10382)
!10390 = !DILocation(line: 1493, column: 7, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10382, file: !3, line: 1493, column: 7)
!10392 = !DILocation(line: 1493, column: 7, scope: !10382)
!10393 = !DILocation(line: 1494, column: 13, scope: !10391)
!10394 = !DILocation(line: 1494, column: 4, scope: !10391)
!10395 = !DILocation(line: 1496, column: 11, scope: !10391)
!10396 = !DILocation(line: 1497, column: 2, scope: !10382)
!10397 = !DILocation(line: 1498, column: 13, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1497, column: 9)
!10399 = !DILocation(line: 1498, column: 12, scope: !10398)
!10400 = !DILocation(line: 1498, column: 24, scope: !10398)
!10401 = !DILocation(line: 1498, column: 10, scope: !10398)
!10402 = !DILocation(line: 1501, column: 25, scope: !10336)
!10403 = !DILocation(line: 1501, column: 14, scope: !10336)
!10404 = !DILocation(line: 1501, column: 12, scope: !10336)
!10405 = !DILocation(line: 1502, column: 22, scope: !10336)
!10406 = !DILocation(line: 1502, column: 32, scope: !10336)
!10407 = !DILocation(line: 1502, column: 42, scope: !10336)
!10408 = !DILocation(line: 1502, column: 54, scope: !10336)
!10409 = !DILocation(line: 1502, column: 2, scope: !10336)
!10410 = !DILocation(line: 1503, column: 22, scope: !10336)
!10411 = !DILocation(line: 1503, column: 32, scope: !10336)
!10412 = !DILocation(line: 1503, column: 42, scope: !10336)
!10413 = !DILocation(line: 1503, column: 54, scope: !10336)
!10414 = !DILocation(line: 1503, column: 2, scope: !10336)
!10415 = !DILocation(line: 1504, column: 22, scope: !10336)
!10416 = !DILocation(line: 1504, column: 32, scope: !10336)
!10417 = !DILocation(line: 1504, column: 49, scope: !10336)
!10418 = !DILocation(line: 1504, column: 63, scope: !10336)
!10419 = !DILocation(line: 1504, column: 2, scope: !10336)
!10420 = !DILocation(line: 1505, column: 1, scope: !10336)
!10421 = distinct !DISubprogram(name: "mv_bmdma_enable_iie", scope: !3, file: !3, line: 1534, type: !9941, scopeLine: 1535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10422 = !DILocalVariable(name: "ap", arg: 1, scope: !10421, file: !3, line: 1534, type: !6835)
!10423 = !DILocation(line: 1534, column: 50, scope: !10421)
!10424 = !DILocalVariable(name: "enable_bmdma", arg: 2, scope: !10421, file: !3, line: 1534, type: !260)
!10425 = !DILocation(line: 1534, column: 58, scope: !10421)
!10426 = !DILocalVariable(name: "pp", scope: !10421, file: !3, line: 1536, type: !8689)
!10427 = !DILocation(line: 1536, column: 23, scope: !10421)
!10428 = !DILocation(line: 1536, column: 28, scope: !10421)
!10429 = !DILocation(line: 1536, column: 32, scope: !10421)
!10430 = !DILocalVariable(name: "new", scope: !10421, file: !3, line: 1537, type: !1266)
!10431 = !DILocation(line: 1537, column: 6, scope: !10421)
!10432 = !DILocalVariable(name: "old", scope: !10421, file: !3, line: 1537, type: !1265)
!10433 = !DILocation(line: 1537, column: 12, scope: !10421)
!10434 = !DILocation(line: 1537, column: 19, scope: !10421)
!10435 = !DILocation(line: 1537, column: 23, scope: !10421)
!10436 = !DILocation(line: 1537, column: 30, scope: !10421)
!10437 = !DILocation(line: 1539, column: 6, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 1539, column: 6)
!10439 = !DILocation(line: 1539, column: 6, scope: !10421)
!10440 = !DILocation(line: 1540, column: 10, scope: !10438)
!10441 = !DILocation(line: 1540, column: 9, scope: !10438)
!10442 = !DILocation(line: 1540, column: 14, scope: !10438)
!10443 = !DILocation(line: 1540, column: 7, scope: !10438)
!10444 = !DILocation(line: 1540, column: 3, scope: !10438)
!10445 = !DILocation(line: 1542, column: 10, scope: !10438)
!10446 = !DILocation(line: 1542, column: 9, scope: !10438)
!10447 = !DILocation(line: 1542, column: 14, scope: !10438)
!10448 = !DILocation(line: 1542, column: 7, scope: !10438)
!10449 = !DILocation(line: 1543, column: 33, scope: !10421)
!10450 = !DILocation(line: 1543, column: 22, scope: !10421)
!10451 = !DILocation(line: 1543, column: 37, scope: !10421)
!10452 = !DILocation(line: 1543, column: 58, scope: !10421)
!10453 = !DILocation(line: 1543, column: 63, scope: !10421)
!10454 = !DILocation(line: 1543, column: 2, scope: !10421)
!10455 = !DILocation(line: 1544, column: 1, scope: !10421)
!10456 = distinct !DISubprogram(name: "mv_soc_led_blink_enable", scope: !3, file: !3, line: 1560, type: !7627, scopeLine: 1561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10457 = !DILocalVariable(name: "ap", arg: 1, scope: !10456, file: !3, line: 1560, type: !6835)
!10458 = !DILocation(line: 1560, column: 54, scope: !10456)
!10459 = !DILocalVariable(name: "host", scope: !10456, file: !3, line: 1562, type: !7484)
!10460 = !DILocation(line: 1562, column: 19, scope: !10456)
!10461 = !DILocation(line: 1562, column: 26, scope: !10456)
!10462 = !DILocation(line: 1562, column: 30, scope: !10456)
!10463 = !DILocalVariable(name: "hpriv", scope: !10456, file: !3, line: 1563, type: !7763)
!10464 = !DILocation(line: 1563, column: 23, scope: !10456)
!10465 = !DILocation(line: 1563, column: 31, scope: !10456)
!10466 = !DILocation(line: 1563, column: 37, scope: !10456)
!10467 = !DILocalVariable(name: "hc_mmio", scope: !10456, file: !3, line: 1564, type: !1187)
!10468 = !DILocation(line: 1564, column: 16, scope: !10456)
!10469 = !DILocalVariable(name: "led_ctrl", scope: !10456, file: !3, line: 1565, type: !1266)
!10470 = !DILocation(line: 1565, column: 6, scope: !10456)
!10471 = !DILocation(line: 1567, column: 6, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 1567, column: 6)
!10473 = !DILocation(line: 1567, column: 13, scope: !10472)
!10474 = !DILocation(line: 1567, column: 22, scope: !10472)
!10475 = !DILocation(line: 1567, column: 6, scope: !10456)
!10476 = !DILocation(line: 1568, column: 3, scope: !10472)
!10477 = !DILocation(line: 1569, column: 2, scope: !10456)
!10478 = !DILocation(line: 1569, column: 9, scope: !10456)
!10479 = !DILocation(line: 1569, column: 18, scope: !10456)
!10480 = !DILocation(line: 1570, column: 46, scope: !10456)
!10481 = !DILocation(line: 1570, column: 33, scope: !10456)
!10482 = !DILocation(line: 1570, column: 53, scope: !10456)
!10483 = !DILocation(line: 1570, column: 57, scope: !10456)
!10484 = !DILocation(line: 1570, column: 12, scope: !10456)
!10485 = !DILocation(line: 1570, column: 10, scope: !10456)
!10486 = !DILocation(line: 1571, column: 19, scope: !10456)
!10487 = !DILocation(line: 1571, column: 27, scope: !10456)
!10488 = !DILocation(line: 1571, column: 13, scope: !10456)
!10489 = !DILocation(line: 1571, column: 11, scope: !10456)
!10490 = !DILocation(line: 1572, column: 9, scope: !10456)
!10491 = !DILocation(line: 1572, column: 18, scope: !10456)
!10492 = !DILocation(line: 1572, column: 40, scope: !10456)
!10493 = !DILocation(line: 1572, column: 48, scope: !10456)
!10494 = !DILocation(line: 1572, column: 2, scope: !10456)
!10495 = !DILocation(line: 1573, column: 1, scope: !10456)
!10496 = distinct !DISubprogram(name: "mv_soc_led_blink_disable", scope: !3, file: !3, line: 1575, type: !7627, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10497 = !DILocalVariable(name: "ap", arg: 1, scope: !10496, file: !3, line: 1575, type: !6835)
!10498 = !DILocation(line: 1575, column: 55, scope: !10496)
!10499 = !DILocalVariable(name: "host", scope: !10496, file: !3, line: 1577, type: !7484)
!10500 = !DILocation(line: 1577, column: 19, scope: !10496)
!10501 = !DILocation(line: 1577, column: 26, scope: !10496)
!10502 = !DILocation(line: 1577, column: 30, scope: !10496)
!10503 = !DILocalVariable(name: "hpriv", scope: !10496, file: !3, line: 1578, type: !7763)
!10504 = !DILocation(line: 1578, column: 23, scope: !10496)
!10505 = !DILocation(line: 1578, column: 31, scope: !10496)
!10506 = !DILocation(line: 1578, column: 37, scope: !10496)
!10507 = !DILocalVariable(name: "hc_mmio", scope: !10496, file: !3, line: 1579, type: !1187)
!10508 = !DILocation(line: 1579, column: 16, scope: !10496)
!10509 = !DILocalVariable(name: "led_ctrl", scope: !10496, file: !3, line: 1580, type: !1266)
!10510 = !DILocation(line: 1580, column: 6, scope: !10496)
!10511 = !DILocalVariable(name: "port", scope: !10496, file: !3, line: 1581, type: !7)
!10512 = !DILocation(line: 1581, column: 15, scope: !10496)
!10513 = !DILocation(line: 1583, column: 8, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1583, column: 6)
!10515 = !DILocation(line: 1583, column: 15, scope: !10514)
!10516 = !DILocation(line: 1583, column: 24, scope: !10514)
!10517 = !DILocation(line: 1583, column: 6, scope: !10496)
!10518 = !DILocation(line: 1584, column: 3, scope: !10514)
!10519 = !DILocation(line: 1587, column: 12, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1587, column: 2)
!10521 = !DILocation(line: 1587, column: 7, scope: !10520)
!10522 = !DILocation(line: 1587, column: 17, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1587, column: 2)
!10524 = !DILocation(line: 1587, column: 24, scope: !10523)
!10525 = !DILocation(line: 1587, column: 31, scope: !10523)
!10526 = !DILocation(line: 1587, column: 22, scope: !10523)
!10527 = !DILocation(line: 1587, column: 2, scope: !10520)
!10528 = !DILocalVariable(name: "this_ap", scope: !10529, file: !3, line: 1588, type: !6835)
!10529 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 1587, column: 48)
!10530 = !DILocation(line: 1588, column: 20, scope: !10529)
!10531 = !DILocation(line: 1588, column: 30, scope: !10529)
!10532 = !DILocation(line: 1588, column: 36, scope: !10529)
!10533 = !DILocation(line: 1588, column: 42, scope: !10529)
!10534 = !DILocalVariable(name: "pp", scope: !10529, file: !3, line: 1589, type: !8689)
!10535 = !DILocation(line: 1589, column: 24, scope: !10529)
!10536 = !DILocation(line: 1589, column: 29, scope: !10529)
!10537 = !DILocation(line: 1589, column: 38, scope: !10529)
!10538 = !DILocation(line: 1591, column: 7, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 1591, column: 7)
!10540 = !DILocation(line: 1591, column: 11, scope: !10539)
!10541 = !DILocation(line: 1591, column: 20, scope: !10539)
!10542 = !DILocation(line: 1591, column: 7, scope: !10529)
!10543 = !DILocation(line: 1592, column: 4, scope: !10539)
!10544 = !DILocation(line: 1593, column: 2, scope: !10529)
!10545 = !DILocation(line: 1587, column: 44, scope: !10523)
!10546 = !DILocation(line: 1587, column: 2, scope: !10523)
!10547 = distinct !{!10547, !10527, !10548}
!10548 = !DILocation(line: 1593, column: 2, scope: !10520)
!10549 = !DILocation(line: 1595, column: 2, scope: !10496)
!10550 = !DILocation(line: 1595, column: 9, scope: !10496)
!10551 = !DILocation(line: 1595, column: 18, scope: !10496)
!10552 = !DILocation(line: 1596, column: 46, scope: !10496)
!10553 = !DILocation(line: 1596, column: 33, scope: !10496)
!10554 = !DILocation(line: 1596, column: 53, scope: !10496)
!10555 = !DILocation(line: 1596, column: 57, scope: !10496)
!10556 = !DILocation(line: 1596, column: 12, scope: !10496)
!10557 = !DILocation(line: 1596, column: 10, scope: !10496)
!10558 = !DILocation(line: 1597, column: 19, scope: !10496)
!10559 = !DILocation(line: 1597, column: 27, scope: !10496)
!10560 = !DILocation(line: 1597, column: 13, scope: !10496)
!10561 = !DILocation(line: 1597, column: 11, scope: !10496)
!10562 = !DILocation(line: 1598, column: 9, scope: !10496)
!10563 = !DILocation(line: 1598, column: 18, scope: !10496)
!10564 = !DILocation(line: 1598, column: 41, scope: !10496)
!10565 = !DILocation(line: 1598, column: 49, scope: !10496)
!10566 = !DILocation(line: 1598, column: 2, scope: !10496)
!10567 = !DILocation(line: 1599, column: 1, scope: !10496)
!10568 = distinct !DISubprogram(name: "readl", scope: !10569, file: !10569, line: 59, type: !10570, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10569 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!10570 = !DISubroutineType(types: !10571)
!10571 = !{!7, !10572}
!10572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10573, size: 64)
!10573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10574)
!10574 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10575 = !DILocalVariable(name: "addr", arg: 1, scope: !10568, file: !10569, line: 59, type: !10572)
!10576 = !DILocation(line: 59, column: 1, scope: !10568)
!10577 = !DILocalVariable(name: "ret", scope: !10568, file: !10569, line: 59, type: !7)
!10578 = !{i32 -2143311636}
!10579 = distinct !DISubprogram(name: "writel", scope: !10569, file: !10569, line: 67, type: !10580, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10580 = !DISubroutineType(types: !10581)
!10581 = !{null, !7, !10582}
!10582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10574, size: 64)
!10583 = !DILocalVariable(name: "val", arg: 1, scope: !10579, file: !10569, line: 67, type: !7)
!10584 = !DILocation(line: 67, column: 1, scope: !10579)
!10585 = !DILocalVariable(name: "addr", arg: 2, scope: !10579, file: !10569, line: 67, type: !10582)
!10586 = !{i32 -2143309243}
!10587 = distinct !DISubprogram(name: "mv_write_cached_reg", scope: !3, file: !3, line: 962, type: !10588, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10588 = !DISubroutineType(types: !10589)
!10589 = !{null, !1187, !1265, !1266}
!10590 = !DILocalVariable(name: "addr", arg: 1, scope: !10587, file: !3, line: 962, type: !1187)
!10591 = !DILocation(line: 962, column: 54, scope: !10587)
!10592 = !DILocalVariable(name: "old", arg: 2, scope: !10587, file: !3, line: 962, type: !1265)
!10593 = !DILocation(line: 962, column: 65, scope: !10587)
!10594 = !DILocalVariable(name: "new", arg: 3, scope: !10587, file: !3, line: 962, type: !1266)
!10595 = !DILocation(line: 962, column: 74, scope: !10587)
!10596 = !DILocation(line: 964, column: 6, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 964, column: 6)
!10598 = !DILocation(line: 964, column: 14, scope: !10597)
!10599 = !DILocation(line: 964, column: 13, scope: !10597)
!10600 = !DILocation(line: 964, column: 10, scope: !10597)
!10601 = !DILocation(line: 964, column: 6, scope: !10587)
!10602 = !DILocalVariable(name: "laddr", scope: !10603, file: !3, line: 965, type: !1186)
!10603 = distinct !DILexicalBlock(scope: !10597, file: !3, line: 964, column: 19)
!10604 = !DILocation(line: 965, column: 17, scope: !10603)
!10605 = !DILocation(line: 966, column: 10, scope: !10603)
!10606 = !DILocation(line: 966, column: 4, scope: !10603)
!10607 = !DILocation(line: 966, column: 8, scope: !10603)
!10608 = !DILocation(line: 976, column: 26, scope: !10603)
!10609 = !DILocation(line: 976, column: 11, scope: !10603)
!10610 = !DILocation(line: 976, column: 31, scope: !10603)
!10611 = !DILocation(line: 976, column: 9, scope: !10603)
!10612 = !DILocation(line: 977, column: 7, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 977, column: 7)
!10614 = !DILocation(line: 977, column: 13, scope: !10613)
!10615 = !DILocation(line: 977, column: 22, scope: !10613)
!10616 = !DILocation(line: 977, column: 25, scope: !10613)
!10617 = !DILocation(line: 977, column: 31, scope: !10613)
!10618 = !DILocation(line: 977, column: 7, scope: !10603)
!10619 = !DILocation(line: 978, column: 10, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 977, column: 41)
!10621 = !DILocation(line: 979, column: 8, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 979, column: 8)
!10623 = !DILocation(line: 979, column: 14, scope: !10622)
!10624 = !DILocation(line: 979, column: 21, scope: !10622)
!10625 = !DILocation(line: 979, column: 24, scope: !10622)
!10626 = !DILocation(line: 979, column: 30, scope: !10622)
!10627 = !DILocation(line: 979, column: 8, scope: !10620)
!10628 = !DILocation(line: 980, column: 14, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 979, column: 38)
!10630 = !DILocation(line: 980, column: 19, scope: !10629)
!10631 = !DILocation(line: 980, column: 5, scope: !10629)
!10632 = !DILocation(line: 981, column: 5, scope: !10629)
!10633 = !DILocation(line: 983, column: 3, scope: !10620)
!10634 = !DILocation(line: 984, column: 10, scope: !10603)
!10635 = !DILocation(line: 984, column: 15, scope: !10603)
!10636 = !DILocation(line: 984, column: 3, scope: !10603)
!10637 = !DILocation(line: 985, column: 2, scope: !10603)
!10638 = !DILocation(line: 986, column: 1, scope: !10587)
!10639 = distinct !DISubprogram(name: "mv_hc_base_from_port", scope: !3, file: !3, line: 895, type: !8310, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10640 = !DILocalVariable(name: "base", arg: 1, scope: !10639, file: !3, line: 895, type: !1187)
!10641 = !DILocation(line: 895, column: 64, scope: !10639)
!10642 = !DILocalVariable(name: "port", arg: 2, scope: !10639, file: !3, line: 896, type: !7)
!10643 = !DILocation(line: 896, column: 21, scope: !10639)
!10644 = !DILocation(line: 898, column: 20, scope: !10639)
!10645 = !DILocation(line: 898, column: 42, scope: !10639)
!10646 = !DILocation(line: 898, column: 26, scope: !10639)
!10647 = !DILocation(line: 898, column: 9, scope: !10639)
!10648 = !DILocation(line: 898, column: 2, scope: !10639)
!10649 = distinct !DISubprogram(name: "mv_hc_base", scope: !3, file: !3, line: 890, type: !8310, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10650 = !DILocalVariable(name: "base", arg: 1, scope: !10649, file: !3, line: 890, type: !1187)
!10651 = !DILocation(line: 890, column: 54, scope: !10649)
!10652 = !DILocalVariable(name: "hc", arg: 2, scope: !10649, file: !3, line: 890, type: !7)
!10653 = !DILocation(line: 890, column: 73, scope: !10649)
!10654 = !DILocation(line: 892, column: 10, scope: !10649)
!10655 = !DILocation(line: 892, column: 15, scope: !10649)
!10656 = !DILocation(line: 892, column: 37, scope: !10649)
!10657 = !DILocation(line: 892, column: 40, scope: !10649)
!10658 = !DILocation(line: 892, column: 34, scope: !10649)
!10659 = !DILocation(line: 892, column: 2, scope: !10649)
!10660 = distinct !DISubprogram(name: "mv_hc_from_port", scope: !3, file: !3, line: 862, type: !10661, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10661 = !DISubroutineType(types: !10662)
!10662 = !{!7, !7}
!10663 = !DILocalVariable(name: "port", arg: 1, scope: !10660, file: !3, line: 862, type: !7)
!10664 = !DILocation(line: 862, column: 57, scope: !10660)
!10665 = !DILocation(line: 864, column: 9, scope: !10660)
!10666 = !DILocation(line: 864, column: 14, scope: !10660)
!10667 = !DILocation(line: 864, column: 2, scope: !10660)
!10668 = distinct !DISubprogram(name: "mv_wait_for_edma_empty_idle", scope: !3, file: !3, line: 1183, type: !7627, scopeLine: 1184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10669 = !DILocalVariable(name: "ap", arg: 1, scope: !10668, file: !3, line: 1183, type: !6835)
!10670 = !DILocation(line: 1183, column: 58, scope: !10668)
!10671 = !DILocalVariable(name: "port_mmio", scope: !10668, file: !3, line: 1185, type: !1187)
!10672 = !DILocation(line: 1185, column: 16, scope: !10668)
!10673 = !DILocation(line: 1185, column: 39, scope: !10668)
!10674 = !DILocation(line: 1185, column: 28, scope: !10668)
!10675 = !DILocalVariable(name: "empty_idle", scope: !10668, file: !3, line: 1186, type: !6088)
!10676 = !DILocation(line: 1186, column: 12, scope: !10668)
!10677 = !DILocalVariable(name: "per_loop", scope: !10668, file: !3, line: 1187, type: !10678)
!10678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !260)
!10679 = !DILocation(line: 1187, column: 12, scope: !10668)
!10680 = !DILocalVariable(name: "timeout", scope: !10668, file: !3, line: 1187, type: !10678)
!10681 = !DILocation(line: 1187, column: 26, scope: !10668)
!10682 = !DILocalVariable(name: "i", scope: !10668, file: !3, line: 1188, type: !260)
!10683 = !DILocation(line: 1188, column: 6, scope: !10668)
!10684 = !DILocation(line: 1197, column: 9, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 1197, column: 2)
!10686 = !DILocation(line: 1197, column: 7, scope: !10685)
!10687 = !DILocation(line: 1197, column: 14, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1197, column: 2)
!10689 = !DILocation(line: 1197, column: 16, scope: !10688)
!10690 = !DILocation(line: 1197, column: 2, scope: !10685)
!10691 = !DILocalVariable(name: "edma_stat", scope: !10692, file: !3, line: 1198, type: !1266)
!10692 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 1197, column: 32)
!10693 = !DILocation(line: 1198, column: 7, scope: !10692)
!10694 = !DILocation(line: 1198, column: 25, scope: !10692)
!10695 = !DILocation(line: 1198, column: 35, scope: !10692)
!10696 = !DILocation(line: 1198, column: 19, scope: !10692)
!10697 = !DILocation(line: 1199, column: 8, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1199, column: 7)
!10699 = !DILocation(line: 1199, column: 18, scope: !10698)
!10700 = !DILocation(line: 1199, column: 32, scope: !10698)
!10701 = !DILocation(line: 1199, column: 7, scope: !10692)
!10702 = !DILocation(line: 1200, column: 4, scope: !10698)
!10703 = !DILocation(line: 1201, column: 3, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 1201, column: 3)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 1201, column: 3)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 1201, column: 3)
!10707 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1201, column: 3)
!10708 = !DILocation(line: 1202, column: 2, scope: !10692)
!10709 = !DILocation(line: 1197, column: 27, scope: !10688)
!10710 = !DILocation(line: 1197, column: 2, scope: !10688)
!10711 = distinct !{!10711, !10690, !10712}
!10712 = !DILocation(line: 1202, column: 2, scope: !10685)
!10713 = !DILocation(line: 1204, column: 1, scope: !10668)
!10714 = distinct !DISubprogram(name: "mv_stop_edma_engine", scope: !3, file: !3, line: 1213, type: !10715, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10715 = !DISubroutineType(types: !10716)
!10716 = !{!260, !1187}
!10717 = !DILocalVariable(name: "port_mmio", arg: 1, scope: !10714, file: !3, line: 1213, type: !1187)
!10718 = !DILocation(line: 1213, column: 46, scope: !10714)
!10719 = !DILocalVariable(name: "i", scope: !10714, file: !3, line: 1215, type: !260)
!10720 = !DILocation(line: 1215, column: 6, scope: !10714)
!10721 = !DILocation(line: 1218, column: 20, scope: !10714)
!10722 = !DILocation(line: 1218, column: 30, scope: !10714)
!10723 = !DILocation(line: 1218, column: 2, scope: !10714)
!10724 = !DILocation(line: 1221, column: 9, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 1221, column: 2)
!10726 = !DILocation(line: 1221, column: 7, scope: !10725)
!10727 = !DILocation(line: 1221, column: 18, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 1221, column: 2)
!10729 = !DILocation(line: 1221, column: 20, scope: !10728)
!10730 = !DILocation(line: 1221, column: 2, scope: !10725)
!10731 = !DILocalVariable(name: "reg", scope: !10732, file: !3, line: 1222, type: !1266)
!10732 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 1221, column: 30)
!10733 = !DILocation(line: 1222, column: 7, scope: !10732)
!10734 = !DILocation(line: 1222, column: 19, scope: !10732)
!10735 = !DILocation(line: 1222, column: 29, scope: !10732)
!10736 = !DILocation(line: 1222, column: 13, scope: !10732)
!10737 = !DILocation(line: 1223, column: 9, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1223, column: 7)
!10739 = !DILocation(line: 1223, column: 13, scope: !10738)
!10740 = !DILocation(line: 1223, column: 7, scope: !10732)
!10741 = !DILocation(line: 1224, column: 4, scope: !10738)
!10742 = !DILocation(line: 1225, column: 3, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 1225, column: 3)
!10744 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 1225, column: 3)
!10745 = distinct !DILexicalBlock(scope: !10746, file: !3, line: 1225, column: 3)
!10746 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1225, column: 3)
!10747 = !DILocation(line: 1226, column: 2, scope: !10732)
!10748 = !DILocation(line: 1221, column: 26, scope: !10728)
!10749 = !DILocation(line: 1221, column: 2, scope: !10728)
!10750 = distinct !{!10750, !10730, !10751}
!10751 = !DILocation(line: 1226, column: 2, scope: !10725)
!10752 = !DILocation(line: 1227, column: 2, scope: !10714)
!10753 = !DILocation(line: 1228, column: 1, scope: !10714)
!10754 = distinct !DISubprogram(name: "mv_hardport_from_port", scope: !3, file: !3, line: 867, type: !10661, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10755 = !DILocalVariable(name: "port", arg: 1, scope: !10754, file: !3, line: 867, type: !7)
!10756 = !DILocation(line: 867, column: 63, scope: !10754)
!10757 = !DILocation(line: 869, column: 9, scope: !10754)
!10758 = !DILocation(line: 869, column: 14, scope: !10754)
!10759 = !DILocation(line: 869, column: 2, scope: !10754)
!10760 = distinct !DISubprogram(name: "mv_enable_port_irqs", scope: !3, file: !3, line: 1050, type: !7682, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10761 = !DILocalVariable(name: "ap", arg: 1, scope: !10760, file: !3, line: 1050, type: !6835)
!10762 = !DILocation(line: 1050, column: 50, scope: !10760)
!10763 = !DILocalVariable(name: "port_bits", arg: 2, scope: !10760, file: !3, line: 1051, type: !7)
!10764 = !DILocation(line: 1051, column: 23, scope: !10760)
!10765 = !DILocalVariable(name: "shift", scope: !10760, file: !3, line: 1053, type: !7)
!10766 = !DILocation(line: 1053, column: 15, scope: !10760)
!10767 = !DILocalVariable(name: "hardport", scope: !10760, file: !3, line: 1053, type: !7)
!10768 = !DILocation(line: 1053, column: 22, scope: !10760)
!10769 = !DILocalVariable(name: "port", scope: !10760, file: !3, line: 1053, type: !7)
!10770 = !DILocation(line: 1053, column: 32, scope: !10760)
!10771 = !DILocation(line: 1053, column: 39, scope: !10760)
!10772 = !DILocation(line: 1053, column: 43, scope: !10760)
!10773 = !DILocalVariable(name: "disable_bits", scope: !10760, file: !3, line: 1054, type: !1266)
!10774 = !DILocation(line: 1054, column: 6, scope: !10760)
!10775 = !DILocalVariable(name: "enable_bits", scope: !10760, file: !3, line: 1054, type: !1266)
!10776 = !DILocation(line: 1054, column: 20, scope: !10760)
!10777 = !DILocation(line: 1056, column: 2, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1056, column: 2)
!10779 = !DILocation(line: 1058, column: 41, scope: !10760)
!10780 = !DILocation(line: 1058, column: 38, scope: !10760)
!10781 = !DILocation(line: 1058, column: 15, scope: !10760)
!10782 = !DILocation(line: 1059, column: 17, scope: !10760)
!10783 = !DILocation(line: 1059, column: 30, scope: !10760)
!10784 = !DILocation(line: 1059, column: 27, scope: !10760)
!10785 = !DILocation(line: 1059, column: 15, scope: !10760)
!10786 = !DILocation(line: 1060, column: 23, scope: !10760)
!10787 = !DILocation(line: 1060, column: 27, scope: !10760)
!10788 = !DILocation(line: 1060, column: 33, scope: !10760)
!10789 = !DILocation(line: 1060, column: 47, scope: !10760)
!10790 = !DILocation(line: 1060, column: 2, scope: !10760)
!10791 = !DILocation(line: 1061, column: 1, scope: !10760)
!10792 = distinct !DISubprogram(name: "mv_set_main_irq_mask", scope: !3, file: !3, line: 1036, type: !10793, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10793 = !DISubroutineType(types: !10794)
!10794 = !{null, !7484, !1266, !1266}
!10795 = !DILocalVariable(name: "host", arg: 1, scope: !10792, file: !3, line: 1036, type: !7484)
!10796 = !DILocation(line: 1036, column: 51, scope: !10792)
!10797 = !DILocalVariable(name: "disable_bits", arg: 2, scope: !10792, file: !3, line: 1037, type: !1266)
!10798 = !DILocation(line: 1037, column: 10, scope: !10792)
!10799 = !DILocalVariable(name: "enable_bits", arg: 3, scope: !10792, file: !3, line: 1037, type: !1266)
!10800 = !DILocation(line: 1037, column: 28, scope: !10792)
!10801 = !DILocalVariable(name: "hpriv", scope: !10792, file: !3, line: 1039, type: !7763)
!10802 = !DILocation(line: 1039, column: 23, scope: !10792)
!10803 = !DILocation(line: 1039, column: 31, scope: !10792)
!10804 = !DILocation(line: 1039, column: 37, scope: !10792)
!10805 = !DILocalVariable(name: "old_mask", scope: !10792, file: !3, line: 1040, type: !1266)
!10806 = !DILocation(line: 1040, column: 6, scope: !10792)
!10807 = !DILocalVariable(name: "new_mask", scope: !10792, file: !3, line: 1040, type: !1266)
!10808 = !DILocation(line: 1040, column: 16, scope: !10792)
!10809 = !DILocation(line: 1042, column: 13, scope: !10792)
!10810 = !DILocation(line: 1042, column: 20, scope: !10792)
!10811 = !DILocation(line: 1042, column: 11, scope: !10792)
!10812 = !DILocation(line: 1043, column: 14, scope: !10792)
!10813 = !DILocation(line: 1043, column: 26, scope: !10792)
!10814 = !DILocation(line: 1043, column: 25, scope: !10792)
!10815 = !DILocation(line: 1043, column: 23, scope: !10792)
!10816 = !DILocation(line: 1043, column: 42, scope: !10792)
!10817 = !DILocation(line: 1043, column: 40, scope: !10792)
!10818 = !DILocation(line: 1043, column: 11, scope: !10792)
!10819 = !DILocation(line: 1044, column: 6, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10792, file: !3, line: 1044, column: 6)
!10821 = !DILocation(line: 1044, column: 18, scope: !10820)
!10822 = !DILocation(line: 1044, column: 15, scope: !10820)
!10823 = !DILocation(line: 1044, column: 6, scope: !10792)
!10824 = !DILocation(line: 1045, column: 26, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 1044, column: 28)
!10826 = !DILocation(line: 1045, column: 3, scope: !10825)
!10827 = !DILocation(line: 1045, column: 10, scope: !10825)
!10828 = !DILocation(line: 1045, column: 24, scope: !10825)
!10829 = !DILocation(line: 1046, column: 26, scope: !10825)
!10830 = !DILocation(line: 1046, column: 36, scope: !10825)
!10831 = !DILocation(line: 1046, column: 3, scope: !10825)
!10832 = !DILocation(line: 1047, column: 2, scope: !10825)
!10833 = !DILocation(line: 1048, column: 1, scope: !10792)
!10834 = distinct !DISubprogram(name: "mv_write_main_irq_mask", scope: !3, file: !3, line: 1019, type: !10835, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{null, !1266, !7763}
!10837 = !DILocalVariable(name: "mask", arg: 1, scope: !10834, file: !3, line: 1019, type: !1266)
!10838 = !DILocation(line: 1019, column: 40, scope: !10834)
!10839 = !DILocalVariable(name: "hpriv", arg: 2, scope: !10834, file: !3, line: 1019, type: !7763)
!10840 = !DILocation(line: 1019, column: 67, scope: !10834)
!10841 = !DILocation(line: 1029, column: 6, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 1029, column: 6)
!10843 = !DILocation(line: 1029, column: 11, scope: !10842)
!10844 = !DILocation(line: 1029, column: 6, scope: !10834)
!10845 = !DILocation(line: 1030, column: 8, scope: !10842)
!10846 = !DILocation(line: 1030, column: 3, scope: !10842)
!10847 = !DILocation(line: 1031, column: 6, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 1031, column: 6)
!10849 = !DILocation(line: 1031, column: 11, scope: !10848)
!10850 = !DILocation(line: 1031, column: 6, scope: !10834)
!10851 = !DILocation(line: 1032, column: 8, scope: !10848)
!10852 = !DILocation(line: 1032, column: 3, scope: !10848)
!10853 = !DILocation(line: 1033, column: 11, scope: !10834)
!10854 = !DILocation(line: 1033, column: 17, scope: !10834)
!10855 = !DILocation(line: 1033, column: 24, scope: !10834)
!10856 = !DILocation(line: 1033, column: 2, scope: !10834)
!10857 = !DILocation(line: 1034, column: 1, scope: !10834)
!10858 = distinct !DISubprogram(name: "sata_pmp_supported", scope: !204, file: !204, line: 1427, type: !7711, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10859 = !DILocalVariable(name: "ap", arg: 1, scope: !10858, file: !204, line: 1427, type: !6835)
!10860 = !DILocation(line: 1427, column: 56, scope: !10858)
!10861 = !DILocation(line: 1429, column: 9, scope: !10858)
!10862 = !DILocation(line: 1429, column: 13, scope: !10858)
!10863 = !DILocation(line: 1429, column: 19, scope: !10858)
!10864 = !DILocation(line: 1429, column: 2, scope: !10858)
!10865 = distinct !DISubprogram(name: "mv_send_fis", scope: !3, file: !3, line: 2227, type: !10866, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10866 = !DISubroutineType(types: !10867)
!10867 = !{!7, !6835, !1265, !260}
!10868 = !DILocalVariable(name: "ap", arg: 1, scope: !10865, file: !3, line: 2227, type: !6835)
!10869 = !DILocation(line: 2227, column: 50, scope: !10865)
!10870 = !DILocalVariable(name: "fis", arg: 2, scope: !10865, file: !3, line: 2227, type: !1265)
!10871 = !DILocation(line: 2227, column: 59, scope: !10865)
!10872 = !DILocalVariable(name: "nwords", arg: 3, scope: !10865, file: !3, line: 2227, type: !260)
!10873 = !DILocation(line: 2227, column: 68, scope: !10865)
!10874 = !DILocalVariable(name: "port_mmio", scope: !10865, file: !3, line: 2229, type: !1187)
!10875 = !DILocation(line: 2229, column: 16, scope: !10865)
!10876 = !DILocation(line: 2229, column: 39, scope: !10865)
!10877 = !DILocation(line: 2229, column: 28, scope: !10865)
!10878 = !DILocalVariable(name: "ifctl", scope: !10865, file: !3, line: 2230, type: !1266)
!10879 = !DILocation(line: 2230, column: 6, scope: !10865)
!10880 = !DILocalVariable(name: "old_ifctl", scope: !10865, file: !3, line: 2230, type: !1266)
!10881 = !DILocation(line: 2230, column: 13, scope: !10865)
!10882 = !DILocalVariable(name: "ifstat", scope: !10865, file: !3, line: 2230, type: !1266)
!10883 = !DILocation(line: 2230, column: 24, scope: !10865)
!10884 = !DILocalVariable(name: "i", scope: !10865, file: !3, line: 2231, type: !260)
!10885 = !DILocation(line: 2231, column: 6, scope: !10865)
!10886 = !DILocalVariable(name: "timeout", scope: !10865, file: !3, line: 2231, type: !260)
!10887 = !DILocation(line: 2231, column: 9, scope: !10865)
!10888 = !DILocalVariable(name: "final_word", scope: !10865, file: !3, line: 2231, type: !260)
!10889 = !DILocation(line: 2231, column: 24, scope: !10865)
!10890 = !DILocation(line: 2231, column: 37, scope: !10865)
!10891 = !DILocation(line: 2231, column: 44, scope: !10865)
!10892 = !DILocation(line: 2234, column: 20, scope: !10865)
!10893 = !DILocation(line: 2234, column: 30, scope: !10865)
!10894 = !DILocation(line: 2234, column: 14, scope: !10865)
!10895 = !DILocation(line: 2234, column: 12, scope: !10865)
!10896 = !DILocation(line: 2235, column: 19, scope: !10865)
!10897 = !DILocation(line: 2235, column: 29, scope: !10865)
!10898 = !DILocation(line: 2235, column: 16, scope: !10865)
!10899 = !DILocation(line: 2235, column: 8, scope: !10865)
!10900 = !DILocation(line: 2236, column: 11, scope: !10865)
!10901 = !DILocation(line: 2236, column: 18, scope: !10865)
!10902 = !DILocation(line: 2236, column: 28, scope: !10865)
!10903 = !DILocation(line: 2236, column: 2, scope: !10865)
!10904 = !DILocation(line: 2239, column: 9, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 2239, column: 2)
!10906 = !DILocation(line: 2239, column: 7, scope: !10905)
!10907 = !DILocation(line: 2239, column: 14, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 2239, column: 2)
!10909 = !DILocation(line: 2239, column: 18, scope: !10908)
!10910 = !DILocation(line: 2239, column: 16, scope: !10908)
!10911 = !DILocation(line: 2239, column: 2, scope: !10905)
!10912 = !DILocation(line: 2240, column: 10, scope: !10908)
!10913 = !DILocation(line: 2240, column: 14, scope: !10908)
!10914 = !DILocation(line: 2240, column: 18, scope: !10908)
!10915 = !DILocation(line: 2240, column: 28, scope: !10908)
!10916 = !DILocation(line: 2240, column: 3, scope: !10908)
!10917 = !DILocation(line: 2239, column: 30, scope: !10908)
!10918 = !DILocation(line: 2239, column: 2, scope: !10908)
!10919 = distinct !{!10919, !10911, !10920}
!10920 = !DILocation(line: 2240, column: 47, scope: !10905)
!10921 = !DILocation(line: 2243, column: 11, scope: !10865)
!10922 = !DILocation(line: 2243, column: 17, scope: !10865)
!10923 = !DILocation(line: 2243, column: 26, scope: !10865)
!10924 = !DILocation(line: 2243, column: 36, scope: !10865)
!10925 = !DILocation(line: 2243, column: 2, scope: !10865)
!10926 = !DILocation(line: 2244, column: 11, scope: !10865)
!10927 = !DILocation(line: 2244, column: 15, scope: !10865)
!10928 = !DILocation(line: 2244, column: 28, scope: !10865)
!10929 = !DILocation(line: 2244, column: 38, scope: !10865)
!10930 = !DILocation(line: 2244, column: 2, scope: !10865)
!10931 = !DILocation(line: 2250, column: 2, scope: !10865)
!10932 = !DILocation(line: 2251, column: 18, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 2250, column: 5)
!10934 = !DILocation(line: 2251, column: 28, scope: !10933)
!10935 = !DILocation(line: 2251, column: 12, scope: !10933)
!10936 = !DILocation(line: 2251, column: 10, scope: !10933)
!10937 = !DILocation(line: 2252, column: 2, scope: !10933)
!10938 = !DILocation(line: 2252, column: 13, scope: !10865)
!10939 = !DILocation(line: 2252, column: 20, scope: !10865)
!10940 = !DILocation(line: 2252, column: 30, scope: !10865)
!10941 = !DILocation(line: 2252, column: 33, scope: !10865)
!10942 = !DILocation(line: 0, scope: !10865)
!10943 = distinct !{!10943, !10931, !10944}
!10944 = !DILocation(line: 2252, column: 42, scope: !10865)
!10945 = !DILocation(line: 2255, column: 11, scope: !10865)
!10946 = !DILocation(line: 2255, column: 22, scope: !10865)
!10947 = !DILocation(line: 2255, column: 32, scope: !10865)
!10948 = !DILocation(line: 2255, column: 2, scope: !10865)
!10949 = !DILocation(line: 2258, column: 7, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 2258, column: 6)
!10951 = !DILocation(line: 2258, column: 14, scope: !10950)
!10952 = !DILocation(line: 2258, column: 24, scope: !10950)
!10953 = !DILocation(line: 2258, column: 6, scope: !10865)
!10954 = !DILocation(line: 2259, column: 3, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 2258, column: 35)
!10956 = !DILocation(line: 2261, column: 3, scope: !10955)
!10957 = !DILocation(line: 2263, column: 2, scope: !10865)
!10958 = !DILocation(line: 2264, column: 1, scope: !10865)
!10959 = distinct !DISubprogram(name: "mv_reset_channel", scope: !3, file: !3, line: 3559, type: !7761, scopeLine: 3561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!10960 = !DILocalVariable(name: "hpriv", arg: 1, scope: !10959, file: !3, line: 3559, type: !7763)
!10961 = !DILocation(line: 3559, column: 51, scope: !10959)
!10962 = !DILocalVariable(name: "mmio", arg: 2, scope: !10959, file: !3, line: 3559, type: !1187)
!10963 = !DILocation(line: 3559, column: 72, scope: !10959)
!10964 = !DILocalVariable(name: "port_no", arg: 3, scope: !10959, file: !3, line: 3560, type: !7)
!10965 = !DILocation(line: 3560, column: 22, scope: !10959)
!10966 = !DILocalVariable(name: "port_mmio", scope: !10959, file: !3, line: 3562, type: !1187)
!10967 = !DILocation(line: 3562, column: 16, scope: !10959)
!10968 = !DILocation(line: 3562, column: 41, scope: !10959)
!10969 = !DILocation(line: 3562, column: 47, scope: !10959)
!10970 = !DILocation(line: 3562, column: 28, scope: !10959)
!10971 = !DILocation(line: 3569, column: 22, scope: !10959)
!10972 = !DILocation(line: 3569, column: 2, scope: !10959)
!10973 = !DILocation(line: 3570, column: 23, scope: !10959)
!10974 = !DILocation(line: 3570, column: 33, scope: !10959)
!10975 = !DILocation(line: 3570, column: 2, scope: !10959)
!10976 = !DILocation(line: 3572, column: 7, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3572, column: 6)
!10978 = !DILocation(line: 3572, column: 6, scope: !10959)
!10979 = !DILocation(line: 3574, column: 18, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3572, column: 24)
!10981 = !DILocation(line: 3574, column: 3, scope: !10980)
!10982 = !DILocation(line: 3575, column: 2, scope: !10980)
!10983 = !DILocation(line: 3581, column: 23, scope: !10959)
!10984 = !DILocation(line: 3581, column: 33, scope: !10959)
!10985 = !DILocation(line: 3581, column: 2, scope: !10959)
!10986 = !DILocation(line: 3582, column: 2, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 3582, column: 2)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 3582, column: 2)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !3, line: 3582, column: 2)
!10990 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3582, column: 2)
!10991 = !DILocation(line: 3583, column: 14, scope: !10959)
!10992 = !DILocation(line: 3583, column: 24, scope: !10959)
!10993 = !DILocation(line: 3583, column: 2, scope: !10959)
!10994 = !DILocation(line: 3585, column: 2, scope: !10959)
!10995 = !DILocation(line: 3585, column: 9, scope: !10959)
!10996 = !DILocation(line: 3585, column: 14, scope: !10959)
!10997 = !DILocation(line: 3585, column: 25, scope: !10959)
!10998 = !DILocation(line: 3585, column: 32, scope: !10959)
!10999 = !DILocation(line: 3585, column: 38, scope: !10959)
!11000 = !DILocation(line: 3587, column: 6, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3587, column: 6)
!11002 = !DILocation(line: 3587, column: 6, scope: !10959)
!11003 = !DILocation(line: 3588, column: 3, scope: !11001)
!11004 = !DILocation(line: 3589, column: 1, scope: !10959)
!11005 = distinct !DISubprogram(name: "sata_ehc_deb_timing", scope: !204, file: !204, line: 1175, type: !11006, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!9197, !11008}
!11008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7436, size: 64)
!11009 = !DILocalVariable(name: "ehc", arg: 1, scope: !11005, file: !204, line: 1175, type: !11008)
!11010 = !DILocation(line: 1175, column: 44, scope: !11005)
!11011 = !DILocation(line: 1177, column: 6, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11005, file: !204, line: 1177, column: 6)
!11013 = !DILocation(line: 1177, column: 11, scope: !11012)
!11014 = !DILocation(line: 1177, column: 13, scope: !11012)
!11015 = !DILocation(line: 1177, column: 19, scope: !11012)
!11016 = !DILocation(line: 1177, column: 6, scope: !11005)
!11017 = !DILocation(line: 1178, column: 3, scope: !11012)
!11018 = !DILocation(line: 1180, column: 3, scope: !11012)
!11019 = !DILocation(line: 1181, column: 1, scope: !11005)
!11020 = distinct !DISubprogram(name: "mv_setup_ifcfg", scope: !3, file: !3, line: 3549, type: !11021, scopeLine: 3550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11021 = !DISubroutineType(types: !11022)
!11022 = !{null, !1187, !260}
!11023 = !DILocalVariable(name: "port_mmio", arg: 1, scope: !11020, file: !3, line: 3549, type: !1187)
!11024 = !DILocation(line: 3549, column: 42, scope: !11020)
!11025 = !DILocalVariable(name: "want_gen2i", arg: 2, scope: !11020, file: !3, line: 3549, type: !260)
!11026 = !DILocation(line: 3549, column: 57, scope: !11020)
!11027 = !DILocalVariable(name: "ifcfg", scope: !11020, file: !3, line: 3551, type: !1266)
!11028 = !DILocation(line: 3551, column: 6, scope: !11020)
!11029 = !DILocation(line: 3551, column: 20, scope: !11020)
!11030 = !DILocation(line: 3551, column: 30, scope: !11020)
!11031 = !DILocation(line: 3551, column: 14, scope: !11020)
!11032 = !DILocation(line: 3553, column: 11, scope: !11020)
!11033 = !DILocation(line: 3553, column: 17, scope: !11020)
!11034 = !DILocation(line: 3553, column: 26, scope: !11020)
!11035 = !DILocation(line: 3553, column: 8, scope: !11020)
!11036 = !DILocation(line: 3554, column: 6, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 3554, column: 6)
!11038 = !DILocation(line: 3554, column: 6, scope: !11020)
!11039 = !DILocation(line: 3555, column: 9, scope: !11037)
!11040 = !DILocation(line: 3555, column: 3, scope: !11037)
!11041 = !DILocation(line: 3556, column: 11, scope: !11020)
!11042 = !DILocation(line: 3556, column: 18, scope: !11020)
!11043 = !DILocation(line: 3556, column: 28, scope: !11020)
!11044 = !DILocation(line: 3556, column: 2, scope: !11020)
!11045 = !DILocation(line: 3557, column: 1, scope: !11020)
!11046 = distinct !DISubprogram(name: "mv_save_cached_regs", scope: !3, file: !3, line: 942, type: !7627, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11047 = !DILocalVariable(name: "ap", arg: 1, scope: !11046, file: !3, line: 942, type: !6835)
!11048 = !DILocation(line: 942, column: 50, scope: !11046)
!11049 = !DILocalVariable(name: "port_mmio", scope: !11046, file: !3, line: 944, type: !1187)
!11050 = !DILocation(line: 944, column: 16, scope: !11046)
!11051 = !DILocation(line: 944, column: 39, scope: !11046)
!11052 = !DILocation(line: 944, column: 28, scope: !11046)
!11053 = !DILocalVariable(name: "pp", scope: !11046, file: !3, line: 945, type: !8689)
!11054 = !DILocation(line: 945, column: 23, scope: !11046)
!11055 = !DILocation(line: 945, column: 28, scope: !11046)
!11056 = !DILocation(line: 945, column: 32, scope: !11046)
!11057 = !DILocation(line: 947, column: 28, scope: !11046)
!11058 = !DILocation(line: 947, column: 38, scope: !11046)
!11059 = !DILocation(line: 947, column: 22, scope: !11046)
!11060 = !DILocation(line: 947, column: 2, scope: !11046)
!11061 = !DILocation(line: 947, column: 6, scope: !11046)
!11062 = !DILocation(line: 947, column: 13, scope: !11046)
!11063 = !DILocation(line: 947, column: 20, scope: !11046)
!11064 = !DILocation(line: 948, column: 28, scope: !11046)
!11065 = !DILocation(line: 948, column: 38, scope: !11046)
!11066 = !DILocation(line: 948, column: 22, scope: !11046)
!11067 = !DILocation(line: 948, column: 2, scope: !11046)
!11068 = !DILocation(line: 948, column: 6, scope: !11046)
!11069 = !DILocation(line: 948, column: 13, scope: !11046)
!11070 = !DILocation(line: 948, column: 20, scope: !11046)
!11071 = !DILocation(line: 949, column: 30, scope: !11046)
!11072 = !DILocation(line: 949, column: 40, scope: !11046)
!11073 = !DILocation(line: 949, column: 24, scope: !11046)
!11074 = !DILocation(line: 949, column: 2, scope: !11046)
!11075 = !DILocation(line: 949, column: 6, scope: !11046)
!11076 = !DILocation(line: 949, column: 13, scope: !11046)
!11077 = !DILocation(line: 949, column: 22, scope: !11046)
!11078 = !DILocation(line: 950, column: 34, scope: !11046)
!11079 = !DILocation(line: 950, column: 44, scope: !11046)
!11080 = !DILocation(line: 950, column: 28, scope: !11046)
!11081 = !DILocation(line: 950, column: 2, scope: !11046)
!11082 = !DILocation(line: 950, column: 6, scope: !11046)
!11083 = !DILocation(line: 950, column: 13, scope: !11046)
!11084 = !DILocation(line: 950, column: 26, scope: !11046)
!11085 = !DILocation(line: 951, column: 1, scope: !11046)
!11086 = distinct !DISubprogram(name: "mv5_phy_base", scope: !3, file: !3, line: 908, type: !8310, scopeLine: 909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11087 = !DILocalVariable(name: "mmio", arg: 1, scope: !11086, file: !3, line: 908, type: !1187)
!11088 = !DILocation(line: 908, column: 49, scope: !11086)
!11089 = !DILocalVariable(name: "port", arg: 2, scope: !11086, file: !3, line: 908, type: !7)
!11090 = !DILocation(line: 908, column: 68, scope: !11086)
!11091 = !DILocalVariable(name: "hc_mmio", scope: !11086, file: !3, line: 910, type: !1187)
!11092 = !DILocation(line: 910, column: 16, scope: !11086)
!11093 = !DILocation(line: 910, column: 47, scope: !11086)
!11094 = !DILocation(line: 910, column: 53, scope: !11086)
!11095 = !DILocation(line: 910, column: 26, scope: !11086)
!11096 = !DILocalVariable(name: "ofs", scope: !11086, file: !3, line: 911, type: !1186)
!11097 = !DILocation(line: 911, column: 16, scope: !11086)
!11098 = !DILocation(line: 911, column: 45, scope: !11086)
!11099 = !DILocation(line: 911, column: 23, scope: !11086)
!11100 = !DILocation(line: 911, column: 51, scope: !11086)
!11101 = !DILocation(line: 911, column: 22, scope: !11086)
!11102 = !DILocation(line: 911, column: 56, scope: !11086)
!11103 = !DILocation(line: 913, column: 9, scope: !11086)
!11104 = !DILocation(line: 913, column: 19, scope: !11086)
!11105 = !DILocation(line: 913, column: 17, scope: !11086)
!11106 = !DILocation(line: 913, column: 2, scope: !11086)
!11107 = distinct !DISubprogram(name: "mv5_scr_offset", scope: !3, file: !3, line: 3038, type: !10661, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11108 = !DILocalVariable(name: "sc_reg_in", arg: 1, scope: !11107, file: !3, line: 3038, type: !7)
!11109 = !DILocation(line: 3038, column: 49, scope: !11107)
!11110 = !DILocalVariable(name: "ofs", scope: !11107, file: !3, line: 3040, type: !7)
!11111 = !DILocation(line: 3040, column: 15, scope: !11107)
!11112 = !DILocation(line: 3042, column: 10, scope: !11107)
!11113 = !DILocation(line: 3042, column: 2, scope: !11107)
!11114 = !DILocation(line: 3046, column: 9, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 3042, column: 21)
!11116 = !DILocation(line: 3046, column: 19, scope: !11115)
!11117 = !DILocation(line: 3046, column: 7, scope: !11115)
!11118 = !DILocation(line: 3047, column: 3, scope: !11115)
!11119 = !DILocation(line: 3049, column: 7, scope: !11115)
!11120 = !DILocation(line: 3050, column: 3, scope: !11115)
!11121 = !DILocation(line: 3052, column: 9, scope: !11107)
!11122 = !DILocation(line: 3052, column: 2, scope: !11107)
!11123 = distinct !DISubprogram(name: "dma_pool_zalloc", scope: !7889, file: !7889, line: 52, type: !11124, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11124 = !DISubroutineType(types: !11125)
!11125 = !{!1187, !7887, !1175, !11126}
!11126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!11127 = !DILocalVariable(name: "pool", arg: 1, scope: !11123, file: !7889, line: 52, type: !7887)
!11128 = !DILocation(line: 52, column: 54, scope: !11123)
!11129 = !DILocalVariable(name: "mem_flags", arg: 2, scope: !11123, file: !7889, line: 52, type: !1175)
!11130 = !DILocation(line: 52, column: 66, scope: !11123)
!11131 = !DILocalVariable(name: "handle", arg: 3, scope: !11123, file: !7889, line: 53, type: !11126)
!11132 = !DILocation(line: 53, column: 21, scope: !11123)
!11133 = !DILocation(line: 55, column: 24, scope: !11123)
!11134 = !DILocation(line: 55, column: 30, scope: !11123)
!11135 = !DILocation(line: 55, column: 40, scope: !11123)
!11136 = !DILocation(line: 55, column: 54, scope: !11123)
!11137 = !DILocation(line: 55, column: 9, scope: !11123)
!11138 = !DILocation(line: 55, column: 2, scope: !11123)
!11139 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !11140, file: !11140, line: 666, type: !11141, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11140 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!1186}
!11143 = !DILocalVariable(name: "f", scope: !11139, file: !11140, line: 668, type: !1186)
!11144 = !DILocation(line: 668, column: 16, scope: !11139)
!11145 = !DILocation(line: 670, column: 6, scope: !11139)
!11146 = !DILocation(line: 670, column: 4, scope: !11139)
!11147 = !DILocation(line: 671, column: 2, scope: !11139)
!11148 = !DILocation(line: 672, column: 9, scope: !11139)
!11149 = !DILocation(line: 672, column: 2, scope: !11139)
!11150 = distinct !DISubprogram(name: "mv_port_free_dma_mem", scope: !3, file: !3, line: 1665, type: !7627, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11151 = !DILocalVariable(name: "ap", arg: 1, scope: !11150, file: !3, line: 1665, type: !6835)
!11152 = !DILocation(line: 1665, column: 51, scope: !11150)
!11153 = !DILocalVariable(name: "hpriv", scope: !11150, file: !3, line: 1667, type: !7763)
!11154 = !DILocation(line: 1667, column: 23, scope: !11150)
!11155 = !DILocation(line: 1667, column: 31, scope: !11150)
!11156 = !DILocation(line: 1667, column: 35, scope: !11150)
!11157 = !DILocation(line: 1667, column: 41, scope: !11150)
!11158 = !DILocalVariable(name: "pp", scope: !11150, file: !3, line: 1668, type: !8689)
!11159 = !DILocation(line: 1668, column: 23, scope: !11150)
!11160 = !DILocation(line: 1668, column: 28, scope: !11150)
!11161 = !DILocation(line: 1668, column: 32, scope: !11150)
!11162 = !DILocalVariable(name: "tag", scope: !11150, file: !3, line: 1669, type: !260)
!11163 = !DILocation(line: 1669, column: 6, scope: !11150)
!11164 = !DILocation(line: 1671, column: 6, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 1671, column: 6)
!11166 = !DILocation(line: 1671, column: 10, scope: !11165)
!11167 = !DILocation(line: 1671, column: 6, scope: !11150)
!11168 = !DILocation(line: 1672, column: 17, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11165, file: !3, line: 1671, column: 16)
!11170 = !DILocation(line: 1672, column: 24, scope: !11169)
!11171 = !DILocation(line: 1672, column: 35, scope: !11169)
!11172 = !DILocation(line: 1672, column: 39, scope: !11169)
!11173 = !DILocation(line: 1672, column: 45, scope: !11169)
!11174 = !DILocation(line: 1672, column: 49, scope: !11169)
!11175 = !DILocation(line: 1672, column: 3, scope: !11169)
!11176 = !DILocation(line: 1673, column: 3, scope: !11169)
!11177 = !DILocation(line: 1673, column: 7, scope: !11169)
!11178 = !DILocation(line: 1673, column: 12, scope: !11169)
!11179 = !DILocation(line: 1674, column: 2, scope: !11169)
!11180 = !DILocation(line: 1675, column: 6, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 1675, column: 6)
!11182 = !DILocation(line: 1675, column: 10, scope: !11181)
!11183 = !DILocation(line: 1675, column: 6, scope: !11150)
!11184 = !DILocation(line: 1676, column: 17, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 1675, column: 16)
!11186 = !DILocation(line: 1676, column: 24, scope: !11185)
!11187 = !DILocation(line: 1676, column: 35, scope: !11185)
!11188 = !DILocation(line: 1676, column: 39, scope: !11185)
!11189 = !DILocation(line: 1676, column: 45, scope: !11185)
!11190 = !DILocation(line: 1676, column: 49, scope: !11185)
!11191 = !DILocation(line: 1676, column: 3, scope: !11185)
!11192 = !DILocation(line: 1677, column: 3, scope: !11185)
!11193 = !DILocation(line: 1677, column: 7, scope: !11185)
!11194 = !DILocation(line: 1677, column: 12, scope: !11185)
!11195 = !DILocation(line: 1678, column: 2, scope: !11185)
!11196 = !DILocation(line: 1683, column: 11, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 1683, column: 2)
!11198 = !DILocation(line: 1683, column: 7, scope: !11197)
!11199 = !DILocation(line: 1683, column: 16, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11197, file: !3, line: 1683, column: 2)
!11201 = !DILocation(line: 1683, column: 20, scope: !11200)
!11202 = !DILocation(line: 1683, column: 2, scope: !11197)
!11203 = !DILocation(line: 1684, column: 7, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 1684, column: 7)
!11205 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 1683, column: 45)
!11206 = !DILocation(line: 1684, column: 11, scope: !11204)
!11207 = !DILocation(line: 1684, column: 18, scope: !11204)
!11208 = !DILocation(line: 1684, column: 7, scope: !11205)
!11209 = !DILocation(line: 1685, column: 8, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 1685, column: 8)
!11211 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 1684, column: 24)
!11212 = !DILocation(line: 1685, column: 12, scope: !11210)
!11213 = !DILocation(line: 1685, column: 17, scope: !11210)
!11214 = !DILocation(line: 1685, column: 21, scope: !11210)
!11215 = !DILocation(line: 1685, column: 8, scope: !11211)
!11216 = !DILocation(line: 1686, column: 19, scope: !11210)
!11217 = !DILocation(line: 1686, column: 26, scope: !11210)
!11218 = !DILocation(line: 1687, column: 12, scope: !11210)
!11219 = !DILocation(line: 1687, column: 16, scope: !11210)
!11220 = !DILocation(line: 1687, column: 23, scope: !11210)
!11221 = !DILocation(line: 1688, column: 12, scope: !11210)
!11222 = !DILocation(line: 1688, column: 16, scope: !11210)
!11223 = !DILocation(line: 1688, column: 27, scope: !11210)
!11224 = !DILocation(line: 1686, column: 5, scope: !11210)
!11225 = !DILocation(line: 1689, column: 4, scope: !11211)
!11226 = !DILocation(line: 1689, column: 8, scope: !11211)
!11227 = !DILocation(line: 1689, column: 15, scope: !11211)
!11228 = !DILocation(line: 1689, column: 20, scope: !11211)
!11229 = !DILocation(line: 1690, column: 3, scope: !11211)
!11230 = !DILocation(line: 1691, column: 2, scope: !11205)
!11231 = !DILocation(line: 1683, column: 38, scope: !11200)
!11232 = !DILocation(line: 1683, column: 2, scope: !11200)
!11233 = distinct !{!11233, !11202, !11234}
!11234 = !DILocation(line: 1691, column: 2, scope: !11197)
!11235 = !DILocation(line: 1692, column: 1, scope: !11150)
!11236 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !11140, file: !11140, line: 646, type: !11141, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11237 = !DILocalVariable(name: "__ret", scope: !11238, file: !11140, line: 648, type: !1186)
!11238 = distinct !DILexicalBlock(scope: !11236, file: !11140, line: 648, column: 9)
!11239 = !DILocation(line: 648, column: 9, scope: !11238)
!11240 = !DILocalVariable(name: "__edi", scope: !11238, file: !11140, line: 648, type: !1186)
!11241 = !DILocalVariable(name: "__esi", scope: !11238, file: !11140, line: 648, type: !1186)
!11242 = !DILocalVariable(name: "__edx", scope: !11238, file: !11140, line: 648, type: !1186)
!11243 = !DILocalVariable(name: "__ecx", scope: !11238, file: !11140, line: 648, type: !1186)
!11244 = !DILocalVariable(name: "__eax", scope: !11238, file: !11140, line: 648, type: !1186)
!11245 = !DILocation(line: 648, column: 9, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !11140, line: 648, column: 9)
!11247 = distinct !DILexicalBlock(scope: !11238, file: !11140, line: 648, column: 9)
!11248 = !{i32 -2145666386, i32 -2145664071, i32 -2145663837, i32 -2145663786, i32 -2145663758, i32 -2145663733, i32 -2145664049, i32 -2145664036, i32 -2145663598, i32 -2145663479, i32 -2145663944, i32 -2145663917, i32 -2145663889, i32 -2145663859}
!11249 = !DILocalVariable(name: "__mask", scope: !11250, file: !11140, line: 648, type: !1186)
!11250 = distinct !DILexicalBlock(scope: !11246, file: !11140, line: 648, column: 9)
!11251 = !DILocation(line: 648, column: 9, scope: !11250)
!11252 = !DILocation(line: 648, column: 9, scope: !11247)
!11253 = !DILocation(line: 648, column: 2, scope: !11236)
!11254 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !11140, file: !11140, line: 656, type: !4264, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11255 = !DILocalVariable(name: "__edi", scope: !11256, file: !11140, line: 658, type: !1186)
!11256 = distinct !DILexicalBlock(scope: !11254, file: !11140, line: 658, column: 2)
!11257 = !DILocation(line: 658, column: 2, scope: !11256)
!11258 = !DILocalVariable(name: "__esi", scope: !11256, file: !11140, line: 658, type: !1186)
!11259 = !DILocalVariable(name: "__edx", scope: !11256, file: !11140, line: 658, type: !1186)
!11260 = !DILocalVariable(name: "__ecx", scope: !11256, file: !11140, line: 658, type: !1186)
!11261 = !DILocalVariable(name: "__eax", scope: !11256, file: !11140, line: 658, type: !1186)
!11262 = !{i32 -2145659292, i32 -2145658560, i32 -2145658326, i32 -2145658275, i32 -2145658247, i32 -2145658222, i32 -2145658538, i32 -2145658525, i32 -2145658087, i32 -2145657968, i32 -2145658433, i32 -2145658406, i32 -2145658378, i32 -2145658348}
!11263 = !DILocation(line: 659, column: 1, scope: !11254)
!11264 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !11140, file: !11140, line: 651, type: !11265, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{null, !1186}
!11267 = !DILocalVariable(name: "f", arg: 1, scope: !11264, file: !11140, line: 651, type: !1186)
!11268 = !DILocation(line: 651, column: 65, scope: !11264)
!11269 = !DILocalVariable(name: "__edi", scope: !11270, file: !11140, line: 653, type: !1186)
!11270 = distinct !DILexicalBlock(scope: !11264, file: !11140, line: 653, column: 2)
!11271 = !DILocation(line: 653, column: 2, scope: !11270)
!11272 = !DILocalVariable(name: "__esi", scope: !11270, file: !11140, line: 653, type: !1186)
!11273 = !DILocalVariable(name: "__edx", scope: !11270, file: !11140, line: 653, type: !1186)
!11274 = !DILocalVariable(name: "__ecx", scope: !11270, file: !11140, line: 653, type: !1186)
!11275 = !DILocalVariable(name: "__eax", scope: !11270, file: !11140, line: 653, type: !1186)
!11276 = !{i32 -2145661919, i32 -2145661169, i32 -2145660935, i32 -2145660884, i32 -2145660856, i32 -2145660831, i32 -2145661147, i32 -2145661134, i32 -2145660696, i32 -2145660577, i32 -2145661042, i32 -2145661015, i32 -2145660987, i32 -2145660957}
!11277 = !DILocation(line: 654, column: 1, scope: !11264)
!11278 = distinct !DISubprogram(name: "mv_check_atapi_dma", scope: !3, file: !3, line: 1853, type: !6829, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11279 = !DILocalVariable(name: "qc", arg: 1, scope: !11278, file: !3, line: 1853, type: !6831)
!11280 = !DILocation(line: 1853, column: 54, scope: !11278)
!11281 = !DILocalVariable(name: "scmd", scope: !11278, file: !3, line: 1855, type: !7018)
!11282 = !DILocation(line: 1855, column: 20, scope: !11278)
!11283 = !DILocation(line: 1855, column: 27, scope: !11278)
!11284 = !DILocation(line: 1855, column: 31, scope: !11278)
!11285 = !DILocation(line: 1857, column: 6, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 1857, column: 6)
!11287 = !DILocation(line: 1857, column: 6, scope: !11278)
!11288 = !DILocation(line: 1858, column: 11, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 1857, column: 12)
!11290 = !DILocation(line: 1858, column: 17, scope: !11289)
!11291 = !DILocation(line: 1858, column: 3, scope: !11289)
!11292 = !DILocation(line: 1868, column: 4, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 1858, column: 26)
!11294 = !DILocation(line: 1870, column: 2, scope: !11289)
!11295 = !DILocation(line: 1871, column: 2, scope: !11278)
!11296 = !DILocation(line: 1872, column: 1, scope: !11278)
!11297 = distinct !DISubprogram(name: "mv6_dev_config", scope: !3, file: !3, line: 1405, type: !7623, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11298 = !DILocalVariable(name: "adev", arg: 1, scope: !11297, file: !3, line: 1405, type: !7313)
!11299 = !DILocation(line: 1405, column: 47, scope: !11297)
!11300 = !DILocation(line: 1413, column: 6, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 1413, column: 6)
!11302 = !DILocation(line: 1413, column: 12, scope: !11301)
!11303 = !DILocation(line: 1413, column: 18, scope: !11301)
!11304 = !DILocation(line: 1413, column: 6, scope: !11297)
!11305 = !DILocation(line: 1414, column: 25, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11307, file: !3, line: 1414, column: 7)
!11307 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 1413, column: 35)
!11308 = !DILocation(line: 1414, column: 31, scope: !11306)
!11309 = !DILocation(line: 1414, column: 37, scope: !11306)
!11310 = !DILocation(line: 1414, column: 7, scope: !11306)
!11311 = !DILocation(line: 1414, column: 7, scope: !11307)
!11312 = !DILocation(line: 1415, column: 4, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 1414, column: 42)
!11314 = !DILocation(line: 1415, column: 10, scope: !11313)
!11315 = !DILocation(line: 1415, column: 16, scope: !11313)
!11316 = !DILocation(line: 1416, column: 4, scope: !11313)
!11317 = !DILocation(line: 1418, column: 3, scope: !11313)
!11318 = !DILocation(line: 1419, column: 2, scope: !11307)
!11319 = !DILocation(line: 1420, column: 1, scope: !11297)
!11320 = distinct !DISubprogram(name: "mv_softreset", scope: !3, file: !3, line: 3612, type: !7638, scopeLine: 3614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11321 = !DILocalVariable(name: "link", arg: 1, scope: !11320, file: !3, line: 3612, type: !7295)
!11322 = !DILocation(line: 3612, column: 42, scope: !11320)
!11323 = !DILocalVariable(name: "class", arg: 2, scope: !11320, file: !3, line: 3612, type: !2084)
!11324 = !DILocation(line: 3612, column: 62, scope: !11320)
!11325 = !DILocalVariable(name: "deadline", arg: 3, scope: !11320, file: !3, line: 3613, type: !1186)
!11326 = !DILocation(line: 3613, column: 19, scope: !11320)
!11327 = !DILocation(line: 3615, column: 16, scope: !11320)
!11328 = !DILocation(line: 3615, column: 22, scope: !11320)
!11329 = !DILocation(line: 3615, column: 40, scope: !11320)
!11330 = !DILocation(line: 3615, column: 26, scope: !11320)
!11331 = !DILocation(line: 3615, column: 2, scope: !11320)
!11332 = !DILocation(line: 3616, column: 27, scope: !11320)
!11333 = !DILocation(line: 3616, column: 33, scope: !11320)
!11334 = !DILocation(line: 3616, column: 40, scope: !11320)
!11335 = !DILocation(line: 3616, column: 9, scope: !11320)
!11336 = !DILocation(line: 3616, column: 2, scope: !11320)
!11337 = distinct !DISubprogram(name: "mv_pmp_hardreset", scope: !3, file: !3, line: 3605, type: !7638, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11338 = !DILocalVariable(name: "link", arg: 1, scope: !11337, file: !3, line: 3605, type: !7295)
!11339 = !DILocation(line: 3605, column: 46, scope: !11337)
!11340 = !DILocalVariable(name: "class", arg: 2, scope: !11337, file: !3, line: 3605, type: !2084)
!11341 = !DILocation(line: 3605, column: 66, scope: !11337)
!11342 = !DILocalVariable(name: "deadline", arg: 3, scope: !11337, file: !3, line: 3606, type: !1186)
!11343 = !DILocation(line: 3606, column: 19, scope: !11337)
!11344 = !DILocation(line: 3608, column: 16, scope: !11337)
!11345 = !DILocation(line: 3608, column: 22, scope: !11337)
!11346 = !DILocation(line: 3608, column: 40, scope: !11337)
!11347 = !DILocation(line: 3608, column: 26, scope: !11337)
!11348 = !DILocation(line: 3608, column: 2, scope: !11337)
!11349 = !DILocation(line: 3609, column: 28, scope: !11337)
!11350 = !DILocation(line: 3609, column: 34, scope: !11337)
!11351 = !DILocation(line: 3609, column: 41, scope: !11337)
!11352 = !DILocation(line: 3609, column: 9, scope: !11337)
!11353 = !DILocation(line: 3609, column: 2, scope: !11337)
!11354 = distinct !DISubprogram(name: "mv_pmp_error_handler", scope: !3, file: !3, line: 2434, type: !7627, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11355 = !DILocalVariable(name: "ap", arg: 1, scope: !11354, file: !3, line: 2434, type: !6835)
!11356 = !DILocation(line: 2434, column: 51, scope: !11354)
!11357 = !DILocalVariable(name: "pmp", scope: !11354, file: !3, line: 2436, type: !7)
!11358 = !DILocation(line: 2436, column: 15, scope: !11354)
!11359 = !DILocalVariable(name: "pmp_map", scope: !11354, file: !3, line: 2436, type: !7)
!11360 = !DILocation(line: 2436, column: 20, scope: !11354)
!11361 = !DILocalVariable(name: "pp", scope: !11354, file: !3, line: 2437, type: !8689)
!11362 = !DILocation(line: 2437, column: 23, scope: !11354)
!11363 = !DILocation(line: 2437, column: 28, scope: !11354)
!11364 = !DILocation(line: 2437, column: 32, scope: !11354)
!11365 = !DILocation(line: 2439, column: 6, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 2439, column: 6)
!11367 = !DILocation(line: 2439, column: 10, scope: !11366)
!11368 = !DILocation(line: 2439, column: 19, scope: !11366)
!11369 = !DILocation(line: 2439, column: 6, scope: !11354)
!11370 = !DILocation(line: 2446, column: 13, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 2439, column: 44)
!11372 = !DILocation(line: 2446, column: 17, scope: !11371)
!11373 = !DILocation(line: 2446, column: 11, scope: !11371)
!11374 = !DILocation(line: 2447, column: 3, scope: !11371)
!11375 = !DILocation(line: 2447, column: 7, scope: !11371)
!11376 = !DILocation(line: 2447, column: 16, scope: !11371)
!11377 = !DILocation(line: 2448, column: 12, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 2448, column: 3)
!11379 = !DILocation(line: 2448, column: 8, scope: !11378)
!11380 = !DILocation(line: 2448, column: 17, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 2448, column: 3)
!11382 = !DILocation(line: 2448, column: 25, scope: !11381)
!11383 = !DILocation(line: 2448, column: 3, scope: !11378)
!11384 = !DILocalVariable(name: "this_pmp", scope: !11385, file: !3, line: 2449, type: !7)
!11385 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 2448, column: 38)
!11386 = !DILocation(line: 2449, column: 17, scope: !11385)
!11387 = !DILocation(line: 2449, column: 34, scope: !11385)
!11388 = !DILocation(line: 2449, column: 31, scope: !11385)
!11389 = !DILocation(line: 2450, column: 8, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 2450, column: 8)
!11391 = !DILocation(line: 2450, column: 18, scope: !11390)
!11392 = !DILocation(line: 2450, column: 16, scope: !11390)
!11393 = !DILocation(line: 2450, column: 8, scope: !11385)
!11394 = !DILocalVariable(name: "link", scope: !11395, file: !3, line: 2451, type: !7295)
!11395 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 2450, column: 28)
!11396 = !DILocation(line: 2451, column: 22, scope: !11395)
!11397 = !DILocation(line: 2451, column: 30, scope: !11395)
!11398 = !DILocation(line: 2451, column: 34, scope: !11395)
!11399 = !DILocation(line: 2451, column: 43, scope: !11395)
!11400 = !DILocation(line: 2452, column: 17, scope: !11395)
!11401 = !DILocation(line: 2452, column: 16, scope: !11395)
!11402 = !DILocation(line: 2452, column: 13, scope: !11395)
!11403 = !DILocation(line: 2453, column: 30, scope: !11395)
!11404 = !DILocation(line: 2453, column: 5, scope: !11395)
!11405 = !DILocation(line: 2454, column: 4, scope: !11395)
!11406 = !DILocation(line: 2455, column: 3, scope: !11385)
!11407 = !DILocation(line: 2448, column: 34, scope: !11381)
!11408 = !DILocation(line: 2448, column: 3, scope: !11381)
!11409 = distinct !{!11409, !11383, !11410}
!11410 = !DILocation(line: 2455, column: 3, scope: !11378)
!11411 = !DILocation(line: 2456, column: 19, scope: !11371)
!11412 = !DILocation(line: 2456, column: 3, scope: !11371)
!11413 = !DILocation(line: 2457, column: 2, scope: !11371)
!11414 = !DILocation(line: 2458, column: 25, scope: !11354)
!11415 = !DILocation(line: 2458, column: 2, scope: !11354)
!11416 = !DILocation(line: 2459, column: 1, scope: !11354)
!11417 = distinct !DISubprogram(name: "mv_scr_read", scope: !3, file: !3, line: 1345, type: !7657, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11418 = !DILocalVariable(name: "link", arg: 1, scope: !11417, file: !3, line: 1345, type: !7295)
!11419 = !DILocation(line: 1345, column: 41, scope: !11417)
!11420 = !DILocalVariable(name: "sc_reg_in", arg: 2, scope: !11417, file: !3, line: 1345, type: !7)
!11421 = !DILocation(line: 1345, column: 60, scope: !11417)
!11422 = !DILocalVariable(name: "val", arg: 3, scope: !11417, file: !3, line: 1345, type: !1265)
!11423 = !DILocation(line: 1345, column: 76, scope: !11417)
!11424 = !DILocalVariable(name: "ofs", scope: !11417, file: !3, line: 1347, type: !7)
!11425 = !DILocation(line: 1347, column: 15, scope: !11417)
!11426 = !DILocation(line: 1347, column: 35, scope: !11417)
!11427 = !DILocation(line: 1347, column: 21, scope: !11417)
!11428 = !DILocation(line: 1349, column: 6, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 1349, column: 6)
!11430 = !DILocation(line: 1349, column: 10, scope: !11429)
!11431 = !DILocation(line: 1349, column: 6, scope: !11417)
!11432 = !DILocation(line: 1350, column: 27, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 1349, column: 26)
!11434 = !DILocation(line: 1350, column: 33, scope: !11433)
!11435 = !DILocation(line: 1350, column: 16, scope: !11433)
!11436 = !DILocation(line: 1350, column: 39, scope: !11433)
!11437 = !DILocation(line: 1350, column: 37, scope: !11433)
!11438 = !DILocation(line: 1350, column: 10, scope: !11433)
!11439 = !DILocation(line: 1350, column: 4, scope: !11433)
!11440 = !DILocation(line: 1350, column: 8, scope: !11433)
!11441 = !DILocation(line: 1351, column: 3, scope: !11433)
!11442 = !DILocation(line: 1353, column: 3, scope: !11429)
!11443 = !DILocation(line: 1354, column: 1, scope: !11417)
!11444 = distinct !DISubprogram(name: "mv_scr_write", scope: !3, file: !3, line: 1356, type: !7661, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11445 = !DILocalVariable(name: "link", arg: 1, scope: !11444, file: !3, line: 1356, type: !7295)
!11446 = !DILocation(line: 1356, column: 42, scope: !11444)
!11447 = !DILocalVariable(name: "sc_reg_in", arg: 2, scope: !11444, file: !3, line: 1356, type: !7)
!11448 = !DILocation(line: 1356, column: 61, scope: !11444)
!11449 = !DILocalVariable(name: "val", arg: 3, scope: !11444, file: !3, line: 1356, type: !1266)
!11450 = !DILocation(line: 1356, column: 76, scope: !11444)
!11451 = !DILocalVariable(name: "ofs", scope: !11444, file: !3, line: 1358, type: !7)
!11452 = !DILocation(line: 1358, column: 15, scope: !11444)
!11453 = !DILocation(line: 1358, column: 35, scope: !11444)
!11454 = !DILocation(line: 1358, column: 21, scope: !11444)
!11455 = !DILocation(line: 1360, column: 6, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 1360, column: 6)
!11457 = !DILocation(line: 1360, column: 10, scope: !11456)
!11458 = !DILocation(line: 1360, column: 6, scope: !11444)
!11459 = !DILocalVariable(name: "addr", scope: !11460, file: !3, line: 1361, type: !1187)
!11460 = distinct !DILexicalBlock(scope: !11456, file: !3, line: 1360, column: 26)
!11461 = !DILocation(line: 1361, column: 17, scope: !11460)
!11462 = !DILocation(line: 1361, column: 35, scope: !11460)
!11463 = !DILocation(line: 1361, column: 41, scope: !11460)
!11464 = !DILocation(line: 1361, column: 24, scope: !11460)
!11465 = !DILocation(line: 1361, column: 47, scope: !11460)
!11466 = !DILocation(line: 1361, column: 45, scope: !11460)
!11467 = !DILocalVariable(name: "hpriv", scope: !11460, file: !3, line: 1362, type: !7763)
!11468 = !DILocation(line: 1362, column: 24, scope: !11460)
!11469 = !DILocation(line: 1362, column: 32, scope: !11460)
!11470 = !DILocation(line: 1362, column: 38, scope: !11460)
!11471 = !DILocation(line: 1362, column: 42, scope: !11460)
!11472 = !DILocation(line: 1362, column: 48, scope: !11460)
!11473 = !DILocation(line: 1363, column: 7, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 1363, column: 7)
!11475 = !DILocation(line: 1363, column: 17, scope: !11474)
!11476 = !DILocation(line: 1363, column: 7, scope: !11460)
!11477 = !DILocation(line: 1377, column: 9, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 1377, column: 8)
!11479 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 1363, column: 33)
!11480 = !DILocation(line: 1377, column: 13, scope: !11478)
!11481 = !DILocation(line: 1377, column: 20, scope: !11478)
!11482 = !DILocation(line: 1377, column: 25, scope: !11478)
!11483 = !DILocation(line: 1377, column: 35, scope: !11478)
!11484 = !DILocation(line: 1377, column: 29, scope: !11478)
!11485 = !DILocation(line: 1377, column: 41, scope: !11478)
!11486 = !DILocation(line: 1377, column: 48, scope: !11478)
!11487 = !DILocation(line: 1377, column: 8, scope: !11479)
!11488 = !DILocation(line: 1378, column: 9, scope: !11478)
!11489 = !DILocation(line: 1378, column: 5, scope: !11478)
!11490 = !DILocation(line: 1380, column: 8, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 1380, column: 8)
!11492 = !DILocation(line: 1380, column: 15, scope: !11491)
!11493 = !DILocation(line: 1380, column: 24, scope: !11491)
!11494 = !DILocation(line: 1380, column: 8, scope: !11479)
!11495 = !DILocalVariable(name: "lp_phy_addr", scope: !11496, file: !3, line: 1381, type: !1187)
!11496 = distinct !DILexicalBlock(scope: !11491, file: !3, line: 1380, column: 48)
!11497 = !DILocation(line: 1381, column: 19, scope: !11496)
!11498 = !DILocation(line: 1382, column: 17, scope: !11496)
!11499 = !DILocation(line: 1382, column: 23, scope: !11496)
!11500 = !DILocation(line: 1382, column: 6, scope: !11496)
!11501 = !DILocation(line: 1382, column: 27, scope: !11496)
!11502 = !DILocalVariable(name: "lp_phy_val", scope: !11496, file: !3, line: 1386, type: !1266)
!11503 = !DILocation(line: 1386, column: 9, scope: !11496)
!11504 = !DILocation(line: 1391, column: 10, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 1391, column: 9)
!11506 = !DILocation(line: 1391, column: 14, scope: !11505)
!11507 = !DILocation(line: 1391, column: 22, scope: !11505)
!11508 = !DILocation(line: 1391, column: 9, scope: !11496)
!11509 = !DILocation(line: 1392, column: 17, scope: !11505)
!11510 = !DILocation(line: 1392, column: 6, scope: !11505)
!11511 = !DILocation(line: 1396, column: 14, scope: !11496)
!11512 = !DILocation(line: 1396, column: 26, scope: !11496)
!11513 = !DILocation(line: 1396, column: 5, scope: !11496)
!11514 = !DILocation(line: 1397, column: 4, scope: !11496)
!11515 = !DILocation(line: 1398, column: 3, scope: !11479)
!11516 = !DILocation(line: 1399, column: 12, scope: !11460)
!11517 = !DILocation(line: 1399, column: 17, scope: !11460)
!11518 = !DILocation(line: 1399, column: 3, scope: !11460)
!11519 = !DILocation(line: 1400, column: 3, scope: !11460)
!11520 = !DILocation(line: 1402, column: 3, scope: !11456)
!11521 = !DILocation(line: 1403, column: 1, scope: !11444)
!11522 = distinct !DISubprogram(name: "mv_sff_check_status", scope: !3, file: !3, line: 2208, type: !7690, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11523 = !DILocalVariable(name: "ap", arg: 1, scope: !11522, file: !3, line: 2208, type: !6835)
!11524 = !DILocation(line: 2208, column: 48, scope: !11522)
!11525 = !DILocalVariable(name: "stat", scope: !11522, file: !3, line: 2210, type: !2109)
!11526 = !DILocation(line: 2210, column: 5, scope: !11522)
!11527 = !DILocation(line: 2210, column: 20, scope: !11522)
!11528 = !DILocation(line: 2210, column: 24, scope: !11522)
!11529 = !DILocation(line: 2210, column: 31, scope: !11522)
!11530 = !DILocation(line: 2210, column: 12, scope: !11522)
!11531 = !DILocalVariable(name: "pp", scope: !11522, file: !3, line: 2211, type: !8689)
!11532 = !DILocation(line: 2211, column: 23, scope: !11522)
!11533 = !DILocation(line: 2211, column: 28, scope: !11522)
!11534 = !DILocation(line: 2211, column: 32, scope: !11522)
!11535 = !DILocation(line: 2213, column: 6, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11522, file: !3, line: 2213, column: 6)
!11537 = !DILocation(line: 2213, column: 10, scope: !11536)
!11538 = !DILocation(line: 2213, column: 19, scope: !11536)
!11539 = !DILocation(line: 2213, column: 6, scope: !11522)
!11540 = !DILocation(line: 2214, column: 7, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 2214, column: 7)
!11542 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 2213, column: 47)
!11543 = !DILocation(line: 2214, column: 12, scope: !11541)
!11544 = !DILocation(line: 2214, column: 7, scope: !11542)
!11545 = !DILocation(line: 2215, column: 4, scope: !11541)
!11546 = !DILocation(line: 2215, column: 8, scope: !11541)
!11547 = !DILocation(line: 2215, column: 17, scope: !11541)
!11548 = !DILocation(line: 2217, column: 9, scope: !11541)
!11549 = !DILocation(line: 2218, column: 2, scope: !11542)
!11550 = !DILocation(line: 2219, column: 9, scope: !11522)
!11551 = !DILocation(line: 2219, column: 2, scope: !11522)
!11552 = distinct !DISubprogram(name: "mv_sff_irq_clear", scope: !3, file: !3, line: 1837, type: !7627, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11553 = !DILocalVariable(name: "ap", arg: 1, scope: !11552, file: !3, line: 1837, type: !6835)
!11554 = !DILocation(line: 1837, column: 47, scope: !11552)
!11555 = !DILocation(line: 1839, column: 32, scope: !11552)
!11556 = !DILocation(line: 1839, column: 47, scope: !11552)
!11557 = !DILocation(line: 1839, column: 36, scope: !11552)
!11558 = !DILocation(line: 1839, column: 2, scope: !11552)
!11559 = !DILocation(line: 1840, column: 1, scope: !11552)
!11560 = distinct !DISubprogram(name: "mv_bmdma_setup", scope: !3, file: !3, line: 1881, type: !7580, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11561 = !DILocalVariable(name: "qc", arg: 1, scope: !11560, file: !3, line: 1881, type: !6831)
!11562 = !DILocation(line: 1881, column: 51, scope: !11560)
!11563 = !DILocalVariable(name: "ap", scope: !11560, file: !3, line: 1883, type: !6835)
!11564 = !DILocation(line: 1883, column: 19, scope: !11560)
!11565 = !DILocation(line: 1883, column: 24, scope: !11560)
!11566 = !DILocation(line: 1883, column: 28, scope: !11560)
!11567 = !DILocalVariable(name: "port_mmio", scope: !11560, file: !3, line: 1884, type: !1187)
!11568 = !DILocation(line: 1884, column: 16, scope: !11560)
!11569 = !DILocation(line: 1884, column: 39, scope: !11560)
!11570 = !DILocation(line: 1884, column: 28, scope: !11560)
!11571 = !DILocalVariable(name: "pp", scope: !11560, file: !3, line: 1885, type: !8689)
!11572 = !DILocation(line: 1885, column: 23, scope: !11560)
!11573 = !DILocation(line: 1885, column: 28, scope: !11560)
!11574 = !DILocation(line: 1885, column: 32, scope: !11560)
!11575 = !DILocation(line: 1887, column: 13, scope: !11560)
!11576 = !DILocation(line: 1887, column: 2, scope: !11560)
!11577 = !DILocation(line: 1890, column: 12, scope: !11560)
!11578 = !DILocation(line: 1890, column: 22, scope: !11560)
!11579 = !DILocation(line: 1890, column: 2, scope: !11560)
!11580 = !DILocation(line: 1893, column: 10, scope: !11560)
!11581 = !DILocation(line: 1893, column: 14, scope: !11560)
!11582 = !DILocation(line: 1893, column: 25, scope: !11560)
!11583 = !DILocation(line: 1893, column: 29, scope: !11560)
!11584 = !DILocation(line: 1893, column: 37, scope: !11560)
!11585 = !DILocation(line: 1893, column: 44, scope: !11560)
!11586 = !DILocation(line: 1893, column: 9, scope: !11560)
!11587 = !DILocation(line: 1894, column: 3, scope: !11560)
!11588 = !DILocation(line: 1894, column: 13, scope: !11560)
!11589 = !DILocation(line: 1893, column: 2, scope: !11560)
!11590 = !DILocation(line: 1895, column: 11, scope: !11560)
!11591 = !DILocation(line: 1895, column: 15, scope: !11560)
!11592 = !DILocation(line: 1895, column: 26, scope: !11560)
!11593 = !DILocation(line: 1895, column: 30, scope: !11560)
!11594 = !DILocation(line: 1896, column: 3, scope: !11560)
!11595 = !DILocation(line: 1896, column: 13, scope: !11560)
!11596 = !DILocation(line: 1895, column: 2, scope: !11560)
!11597 = !DILocation(line: 1899, column: 2, scope: !11560)
!11598 = !DILocation(line: 1899, column: 6, scope: !11560)
!11599 = !DILocation(line: 1899, column: 11, scope: !11560)
!11600 = !DILocation(line: 1899, column: 28, scope: !11560)
!11601 = !DILocation(line: 1899, column: 33, scope: !11560)
!11602 = !DILocation(line: 1899, column: 37, scope: !11560)
!11603 = !DILocation(line: 1900, column: 1, scope: !11560)
!11604 = distinct !DISubprogram(name: "mv_bmdma_start", scope: !3, file: !3, line: 1909, type: !7580, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11605 = !DILocalVariable(name: "qc", arg: 1, scope: !11604, file: !3, line: 1909, type: !6831)
!11606 = !DILocation(line: 1909, column: 51, scope: !11604)
!11607 = !DILocalVariable(name: "ap", scope: !11604, file: !3, line: 1911, type: !6835)
!11608 = !DILocation(line: 1911, column: 19, scope: !11604)
!11609 = !DILocation(line: 1911, column: 24, scope: !11604)
!11610 = !DILocation(line: 1911, column: 28, scope: !11604)
!11611 = !DILocalVariable(name: "port_mmio", scope: !11604, file: !3, line: 1912, type: !1187)
!11612 = !DILocation(line: 1912, column: 16, scope: !11604)
!11613 = !DILocation(line: 1912, column: 39, scope: !11604)
!11614 = !DILocation(line: 1912, column: 28, scope: !11604)
!11615 = !DILocalVariable(name: "rw", scope: !11604, file: !3, line: 1913, type: !7)
!11616 = !DILocation(line: 1913, column: 15, scope: !11604)
!11617 = !DILocation(line: 1913, column: 21, scope: !11604)
!11618 = !DILocation(line: 1913, column: 25, scope: !11604)
!11619 = !DILocation(line: 1913, column: 28, scope: !11604)
!11620 = !DILocation(line: 1913, column: 34, scope: !11604)
!11621 = !DILocation(line: 1913, column: 20, scope: !11604)
!11622 = !DILocalVariable(name: "cmd", scope: !11604, file: !3, line: 1914, type: !1266)
!11623 = !DILocation(line: 1914, column: 6, scope: !11604)
!11624 = !DILocation(line: 1914, column: 13, scope: !11604)
!11625 = !DILocation(line: 1914, column: 34, scope: !11604)
!11626 = !DILocation(line: 1917, column: 11, scope: !11604)
!11627 = !DILocation(line: 1917, column: 16, scope: !11604)
!11628 = !DILocation(line: 1917, column: 26, scope: !11604)
!11629 = !DILocation(line: 1917, column: 2, scope: !11604)
!11630 = !DILocation(line: 1918, column: 1, scope: !11604)
!11631 = distinct !DISubprogram(name: "mv_bmdma_stop", scope: !3, file: !3, line: 1945, type: !7580, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11632 = !DILocalVariable(name: "qc", arg: 1, scope: !11631, file: !3, line: 1945, type: !6831)
!11633 = !DILocation(line: 1945, column: 50, scope: !11631)
!11634 = !DILocation(line: 1947, column: 19, scope: !11631)
!11635 = !DILocation(line: 1947, column: 23, scope: !11631)
!11636 = !DILocation(line: 1947, column: 2, scope: !11631)
!11637 = !DILocation(line: 1948, column: 1, scope: !11631)
!11638 = distinct !DISubprogram(name: "mv_bmdma_status", scope: !3, file: !3, line: 1959, type: !7690, scopeLine: 1960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11639 = !DILocalVariable(name: "ap", arg: 1, scope: !11638, file: !3, line: 1959, type: !6835)
!11640 = !DILocation(line: 1959, column: 44, scope: !11638)
!11641 = !DILocalVariable(name: "port_mmio", scope: !11638, file: !3, line: 1961, type: !1187)
!11642 = !DILocation(line: 1961, column: 16, scope: !11638)
!11643 = !DILocation(line: 1961, column: 39, scope: !11638)
!11644 = !DILocation(line: 1961, column: 28, scope: !11638)
!11645 = !DILocalVariable(name: "reg", scope: !11638, file: !3, line: 1962, type: !1266)
!11646 = !DILocation(line: 1962, column: 6, scope: !11638)
!11647 = !DILocalVariable(name: "status", scope: !11638, file: !3, line: 1962, type: !1266)
!11648 = !DILocation(line: 1962, column: 11, scope: !11638)
!11649 = !DILocation(line: 1968, column: 14, scope: !11638)
!11650 = !DILocation(line: 1968, column: 24, scope: !11638)
!11651 = !DILocation(line: 1968, column: 8, scope: !11638)
!11652 = !DILocation(line: 1968, column: 6, scope: !11638)
!11653 = !DILocation(line: 1969, column: 6, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 1969, column: 6)
!11655 = !DILocation(line: 1969, column: 10, scope: !11654)
!11656 = !DILocation(line: 1969, column: 6, scope: !11638)
!11657 = !DILocation(line: 1970, column: 10, scope: !11654)
!11658 = !DILocation(line: 1970, column: 3, scope: !11654)
!11659 = !DILocation(line: 1971, column: 11, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 1971, column: 11)
!11661 = !DILocation(line: 1971, column: 15, scope: !11660)
!11662 = !DILocation(line: 1971, column: 11, scope: !11654)
!11663 = !DILocation(line: 1972, column: 13, scope: !11660)
!11664 = !DILocation(line: 1972, column: 17, scope: !11660)
!11665 = !DILocation(line: 1972, column: 32, scope: !11660)
!11666 = !DILocation(line: 1972, column: 10, scope: !11660)
!11667 = !DILocation(line: 1972, column: 3, scope: !11660)
!11668 = !DILocation(line: 1980, column: 20, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 1973, column: 7)
!11670 = !DILocation(line: 1980, column: 3, scope: !11669)
!11671 = !DILocation(line: 1981, column: 15, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 1981, column: 7)
!11673 = !DILocation(line: 1981, column: 19, scope: !11672)
!11674 = !DILocation(line: 1981, column: 26, scope: !11672)
!11675 = !DILocation(line: 1981, column: 7, scope: !11672)
!11676 = !DILocation(line: 1981, column: 42, scope: !11672)
!11677 = !DILocation(line: 1981, column: 7, scope: !11669)
!11678 = !DILocation(line: 1982, column: 11, scope: !11672)
!11679 = !DILocation(line: 1982, column: 4, scope: !11672)
!11680 = !DILocation(line: 1984, column: 11, scope: !11672)
!11681 = !DILocation(line: 1986, column: 9, scope: !11638)
!11682 = !DILocation(line: 1986, column: 2, scope: !11638)
!11683 = distinct !DISubprogram(name: "sata_srst_pmp", scope: !204, file: !204, line: 1458, type: !11684, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{!260, !7295}
!11686 = !DILocalVariable(name: "link", arg: 1, scope: !11683, file: !204, line: 1458, type: !7295)
!11687 = !DILocation(line: 1458, column: 50, scope: !11683)
!11688 = !DILocation(line: 1460, column: 25, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11683, file: !204, line: 1460, column: 6)
!11690 = !DILocation(line: 1460, column: 31, scope: !11689)
!11691 = !DILocation(line: 1460, column: 6, scope: !11689)
!11692 = !DILocation(line: 1460, column: 35, scope: !11689)
!11693 = !DILocation(line: 1460, column: 55, scope: !11689)
!11694 = !DILocation(line: 1460, column: 38, scope: !11689)
!11695 = !DILocation(line: 1460, column: 6, scope: !11683)
!11696 = !DILocation(line: 1461, column: 3, scope: !11689)
!11697 = !DILocation(line: 1462, column: 9, scope: !11683)
!11698 = !DILocation(line: 1462, column: 15, scope: !11683)
!11699 = !DILocation(line: 1462, column: 2, scope: !11683)
!11700 = !DILocation(line: 1463, column: 1, scope: !11683)
!11701 = distinct !DISubprogram(name: "ata_is_host_link", scope: !204, file: !204, line: 1437, type: !11702, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11702 = !DISubroutineType(types: !11703)
!11703 = !{!1554, !11704}
!11704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11705, size: 64)
!11705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7296)
!11706 = !DILocalVariable(name: "link", arg: 1, scope: !11701, file: !204, line: 1437, type: !11704)
!11707 = !DILocation(line: 1437, column: 60, scope: !11701)
!11708 = !DILocation(line: 1439, column: 9, scope: !11701)
!11709 = !DILocation(line: 1439, column: 18, scope: !11701)
!11710 = !DILocation(line: 1439, column: 24, scope: !11701)
!11711 = !DILocation(line: 1439, column: 28, scope: !11701)
!11712 = !DILocation(line: 1439, column: 14, scope: !11701)
!11713 = !DILocation(line: 1439, column: 33, scope: !11701)
!11714 = !DILocation(line: 1439, column: 36, scope: !11701)
!11715 = !DILocation(line: 1439, column: 44, scope: !11701)
!11716 = !DILocation(line: 1439, column: 50, scope: !11701)
!11717 = !DILocation(line: 1439, column: 54, scope: !11701)
!11718 = !DILocation(line: 1439, column: 41, scope: !11701)
!11719 = !DILocation(line: 1439, column: 2, scope: !11701)
!11720 = distinct !DISubprogram(name: "mv_scr_offset", scope: !3, file: !3, line: 1325, type: !10661, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11721 = !DILocalVariable(name: "sc_reg_in", arg: 1, scope: !11720, file: !3, line: 1325, type: !7)
!11722 = !DILocation(line: 1325, column: 48, scope: !11720)
!11723 = !DILocalVariable(name: "ofs", scope: !11720, file: !3, line: 1327, type: !7)
!11724 = !DILocation(line: 1327, column: 15, scope: !11720)
!11725 = !DILocation(line: 1329, column: 10, scope: !11720)
!11726 = !DILocation(line: 1329, column: 2, scope: !11720)
!11727 = !DILocation(line: 1333, column: 24, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 1329, column: 21)
!11729 = !DILocation(line: 1333, column: 34, scope: !11728)
!11730 = !DILocation(line: 1333, column: 21, scope: !11728)
!11731 = !DILocation(line: 1333, column: 9, scope: !11728)
!11732 = !DILocation(line: 1333, column: 7, scope: !11728)
!11733 = !DILocation(line: 1334, column: 3, scope: !11728)
!11734 = !DILocation(line: 1336, column: 7, scope: !11728)
!11735 = !DILocation(line: 1337, column: 3, scope: !11728)
!11736 = !DILocation(line: 1339, column: 7, scope: !11728)
!11737 = !DILocation(line: 1340, column: 3, scope: !11728)
!11738 = !DILocation(line: 1342, column: 9, scope: !11720)
!11739 = !DILocation(line: 1342, column: 2, scope: !11720)
!11740 = distinct !DISubprogram(name: "mv_bmdma_stop_ap", scope: !3, file: !3, line: 1929, type: !7627, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11741 = !DILocalVariable(name: "ap", arg: 1, scope: !11740, file: !3, line: 1929, type: !6835)
!11742 = !DILocation(line: 1929, column: 47, scope: !11740)
!11743 = !DILocalVariable(name: "port_mmio", scope: !11740, file: !3, line: 1931, type: !1187)
!11744 = !DILocation(line: 1931, column: 16, scope: !11740)
!11745 = !DILocation(line: 1931, column: 39, scope: !11740)
!11746 = !DILocation(line: 1931, column: 28, scope: !11740)
!11747 = !DILocalVariable(name: "cmd", scope: !11740, file: !3, line: 1932, type: !1266)
!11748 = !DILocation(line: 1932, column: 6, scope: !11740)
!11749 = !DILocation(line: 1935, column: 14, scope: !11740)
!11750 = !DILocation(line: 1935, column: 24, scope: !11740)
!11751 = !DILocation(line: 1935, column: 8, scope: !11740)
!11752 = !DILocation(line: 1935, column: 6, scope: !11740)
!11753 = !DILocation(line: 1936, column: 6, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 1936, column: 6)
!11755 = !DILocation(line: 1936, column: 10, scope: !11754)
!11756 = !DILocation(line: 1936, column: 6, scope: !11740)
!11757 = !DILocation(line: 1937, column: 7, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11754, file: !3, line: 1936, column: 27)
!11759 = !DILocation(line: 1938, column: 12, scope: !11758)
!11760 = !DILocation(line: 1938, column: 17, scope: !11758)
!11761 = !DILocation(line: 1938, column: 27, scope: !11758)
!11762 = !DILocation(line: 1938, column: 3, scope: !11758)
!11763 = !DILocation(line: 1941, column: 21, scope: !11758)
!11764 = !DILocation(line: 1941, column: 3, scope: !11758)
!11765 = !DILocation(line: 1942, column: 2, scope: !11758)
!11766 = !DILocation(line: 1943, column: 1, scope: !11740)
!11767 = distinct !DISubprogram(name: "mv_qc_prep_iie", scope: !3, file: !3, line: 2135, type: !7587, scopeLine: 2136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11768 = !DILocalVariable(name: "qc", arg: 1, scope: !11767, file: !3, line: 2135, type: !6831)
!11769 = !DILocation(line: 2135, column: 73, scope: !11767)
!11770 = !DILocalVariable(name: "ap", scope: !11767, file: !3, line: 2137, type: !6835)
!11771 = !DILocation(line: 2137, column: 19, scope: !11767)
!11772 = !DILocation(line: 2137, column: 24, scope: !11767)
!11773 = !DILocation(line: 2137, column: 28, scope: !11767)
!11774 = !DILocalVariable(name: "pp", scope: !11767, file: !3, line: 2138, type: !8689)
!11775 = !DILocation(line: 2138, column: 23, scope: !11767)
!11776 = !DILocation(line: 2138, column: 28, scope: !11767)
!11777 = !DILocation(line: 2138, column: 32, scope: !11767)
!11778 = !DILocalVariable(name: "crqb", scope: !11767, file: !3, line: 2139, type: !1189)
!11779 = !DILocation(line: 2139, column: 22, scope: !11767)
!11780 = !DILocalVariable(name: "tf", scope: !11767, file: !3, line: 2140, type: !7619)
!11781 = !DILocation(line: 2140, column: 23, scope: !11767)
!11782 = !DILocation(line: 2140, column: 29, scope: !11767)
!11783 = !DILocation(line: 2140, column: 33, scope: !11767)
!11784 = !DILocalVariable(name: "in_index", scope: !11767, file: !3, line: 2141, type: !7)
!11785 = !DILocation(line: 2141, column: 11, scope: !11767)
!11786 = !DILocalVariable(name: "flags", scope: !11767, file: !3, line: 2142, type: !1266)
!11787 = !DILocation(line: 2142, column: 6, scope: !11767)
!11788 = !DILocation(line: 2144, column: 7, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 2144, column: 6)
!11790 = !DILocation(line: 2144, column: 11, scope: !11789)
!11791 = !DILocation(line: 2144, column: 20, scope: !11789)
!11792 = !DILocation(line: 2144, column: 37, scope: !11789)
!11793 = !DILocation(line: 2145, column: 7, scope: !11789)
!11794 = !DILocation(line: 2145, column: 11, scope: !11789)
!11795 = !DILocation(line: 2145, column: 20, scope: !11789)
!11796 = !DILocation(line: 2144, column: 6, scope: !11767)
!11797 = !DILocation(line: 2146, column: 3, scope: !11789)
!11798 = !DILocation(line: 2147, column: 6, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 2147, column: 6)
!11800 = !DILocation(line: 2147, column: 10, scope: !11799)
!11801 = !DILocation(line: 2147, column: 18, scope: !11799)
!11802 = !DILocation(line: 2147, column: 6, scope: !11767)
!11803 = !DILocation(line: 2148, column: 3, scope: !11799)
!11804 = !DILocation(line: 2151, column: 8, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 2151, column: 6)
!11806 = !DILocation(line: 2151, column: 12, scope: !11805)
!11807 = !DILocation(line: 2151, column: 18, scope: !11805)
!11808 = !DILocation(line: 2151, column: 6, scope: !11767)
!11809 = !DILocation(line: 2152, column: 9, scope: !11805)
!11810 = !DILocation(line: 2152, column: 3, scope: !11805)
!11811 = !DILocalVariable(name: "__ret_warn_on", scope: !11812, file: !3, line: 2154, type: !260)
!11812 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 2154, column: 2)
!11813 = !DILocation(line: 2154, column: 2, scope: !11812)
!11814 = !DILocation(line: 2154, column: 2, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11812, file: !3, line: 2154, column: 2)
!11816 = !DILocation(line: 2154, column: 2, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 2154, column: 2)
!11818 = !DILocation(line: 2154, column: 2, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 2154, column: 2)
!11820 = !DILocation(line: 2154, column: 2, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 2154, column: 2)
!11822 = !{i32 -2139351942, i32 -2139351913, i32 -2139351867, i32 -2139351809, i32 -2139351755, i32 -2139351701, i32 -2139351646, i32 -2139351615}
!11823 = !DILocation(line: 2154, column: 2, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 2154, column: 2)
!11825 = !{i32 -2139351211, i32 -2139351204, i32 -2139351152, i32 -2139351121, i32 -2139351091}
!11826 = !DILocation(line: 2154, column: 2, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 2154, column: 2)
!11828 = !DILocation(line: 2155, column: 11, scope: !11767)
!11829 = !DILocation(line: 2155, column: 15, scope: !11767)
!11830 = !DILocation(line: 2155, column: 22, scope: !11767)
!11831 = !DILocation(line: 2155, column: 8, scope: !11767)
!11832 = !DILocation(line: 2156, column: 11, scope: !11767)
!11833 = !DILocation(line: 2156, column: 15, scope: !11767)
!11834 = !DILocation(line: 2156, column: 22, scope: !11767)
!11835 = !DILocation(line: 2156, column: 8, scope: !11767)
!11836 = !DILocation(line: 2157, column: 12, scope: !11767)
!11837 = !DILocation(line: 2157, column: 16, scope: !11767)
!11838 = !DILocation(line: 2157, column: 21, scope: !11767)
!11839 = !DILocation(line: 2157, column: 27, scope: !11767)
!11840 = !DILocation(line: 2157, column: 31, scope: !11767)
!11841 = !DILocation(line: 2157, column: 38, scope: !11767)
!11842 = !DILocation(line: 2157, column: 8, scope: !11767)
!11843 = !DILocation(line: 2160, column: 13, scope: !11767)
!11844 = !DILocation(line: 2160, column: 17, scope: !11767)
!11845 = !DILocation(line: 2160, column: 11, scope: !11767)
!11846 = !DILocation(line: 2162, column: 33, scope: !11767)
!11847 = !DILocation(line: 2162, column: 37, scope: !11767)
!11848 = !DILocation(line: 2162, column: 42, scope: !11767)
!11849 = !DILocation(line: 2162, column: 9, scope: !11767)
!11850 = !DILocation(line: 2162, column: 7, scope: !11767)
!11851 = !DILocation(line: 2163, column: 15, scope: !11767)
!11852 = !DILocation(line: 2163, column: 2, scope: !11767)
!11853 = !DILocation(line: 2163, column: 8, scope: !11767)
!11854 = !DILocation(line: 2163, column: 13, scope: !11767)
!11855 = !DILocation(line: 2164, column: 18, scope: !11767)
!11856 = !DILocation(line: 2164, column: 2, scope: !11767)
!11857 = !DILocation(line: 2164, column: 8, scope: !11767)
!11858 = !DILocation(line: 2164, column: 16, scope: !11767)
!11859 = !DILocation(line: 2165, column: 16, scope: !11767)
!11860 = !DILocation(line: 2165, column: 2, scope: !11767)
!11861 = !DILocation(line: 2165, column: 8, scope: !11767)
!11862 = !DILocation(line: 2165, column: 14, scope: !11767)
!11863 = !DILocation(line: 2167, column: 21, scope: !11767)
!11864 = !DILocation(line: 2167, column: 2, scope: !11767)
!11865 = !DILocation(line: 2167, column: 8, scope: !11767)
!11866 = !DILocation(line: 2167, column: 19, scope: !11767)
!11867 = !DILocation(line: 2171, column: 21, scope: !11767)
!11868 = !DILocation(line: 2171, column: 2, scope: !11767)
!11869 = !DILocation(line: 2171, column: 8, scope: !11767)
!11870 = !DILocation(line: 2171, column: 19, scope: !11767)
!11871 = !DILocation(line: 2177, column: 21, scope: !11767)
!11872 = !DILocation(line: 2177, column: 2, scope: !11767)
!11873 = !DILocation(line: 2177, column: 8, scope: !11767)
!11874 = !DILocation(line: 2177, column: 19, scope: !11767)
!11875 = !DILocation(line: 2183, column: 21, scope: !11767)
!11876 = !DILocation(line: 2183, column: 2, scope: !11767)
!11877 = !DILocation(line: 2183, column: 8, scope: !11767)
!11878 = !DILocation(line: 2183, column: 19, scope: !11767)
!11879 = !DILocation(line: 2188, column: 8, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 2188, column: 6)
!11881 = !DILocation(line: 2188, column: 12, scope: !11880)
!11882 = !DILocation(line: 2188, column: 18, scope: !11880)
!11883 = !DILocation(line: 2188, column: 6, scope: !11767)
!11884 = !DILocation(line: 2189, column: 3, scope: !11880)
!11885 = !DILocation(line: 2190, column: 13, scope: !11767)
!11886 = !DILocation(line: 2190, column: 2, scope: !11767)
!11887 = !DILocation(line: 2192, column: 2, scope: !11767)
!11888 = !DILocation(line: 2193, column: 1, scope: !11767)
!11889 = distinct !DISubprogram(name: "mv_chip_id", scope: !3, file: !3, line: 3769, type: !11890, scopeLine: 3770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!11890 = !DISubroutineType(types: !11891)
!11891 = !{!260, !7484, !7}
!11892 = !DILocalVariable(name: "host", arg: 1, scope: !11889, file: !3, line: 3769, type: !7484)
!11893 = !DILocation(line: 3769, column: 40, scope: !11889)
!11894 = !DILocalVariable(name: "board_idx", arg: 2, scope: !11889, file: !3, line: 3769, type: !7)
!11895 = !DILocation(line: 3769, column: 59, scope: !11889)
!11896 = !DILocalVariable(name: "pdev", scope: !11889, file: !3, line: 3771, type: !1200)
!11897 = !DILocation(line: 3771, column: 18, scope: !11889)
!11898 = !DILocalVariable(name: "__mptr", scope: !11899, file: !3, line: 3771, type: !1187)
!11899 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 3771, column: 25)
!11900 = !DILocation(line: 3771, column: 25, scope: !11899)
!11901 = !DILocation(line: 3771, column: 25, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 3771, column: 25)
!11903 = !DILocalVariable(name: "hpriv", scope: !11889, file: !3, line: 3772, type: !7763)
!11904 = !DILocation(line: 3772, column: 23, scope: !11889)
!11905 = !DILocation(line: 3772, column: 31, scope: !11889)
!11906 = !DILocation(line: 3772, column: 37, scope: !11889)
!11907 = !DILocalVariable(name: "hp_flags", scope: !11889, file: !3, line: 3773, type: !1266)
!11908 = !DILocation(line: 3773, column: 6, scope: !11889)
!11909 = !DILocation(line: 3773, column: 17, scope: !11889)
!11910 = !DILocation(line: 3773, column: 24, scope: !11889)
!11911 = !DILocation(line: 3775, column: 10, scope: !11889)
!11912 = !DILocation(line: 3775, column: 2, scope: !11889)
!11913 = !DILocation(line: 3777, column: 3, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 3775, column: 21)
!11915 = !DILocation(line: 3777, column: 10, scope: !11914)
!11916 = !DILocation(line: 3777, column: 14, scope: !11914)
!11917 = !DILocation(line: 3778, column: 12, scope: !11914)
!11918 = !DILocation(line: 3780, column: 11, scope: !11914)
!11919 = !DILocation(line: 3780, column: 17, scope: !11914)
!11920 = !DILocation(line: 3780, column: 3, scope: !11914)
!11921 = !DILocation(line: 3782, column: 13, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 3780, column: 27)
!11923 = !DILocation(line: 3783, column: 4, scope: !11922)
!11924 = !DILocation(line: 3785, column: 13, scope: !11922)
!11925 = !DILocation(line: 3786, column: 4, scope: !11922)
!11926 = !DILocation(line: 3788, column: 4, scope: !11922)
!11927 = !DILocation(line: 3790, column: 13, scope: !11922)
!11928 = !DILocation(line: 3791, column: 4, scope: !11922)
!11929 = !DILocation(line: 3793, column: 3, scope: !11914)
!11930 = !DILocation(line: 3797, column: 3, scope: !11914)
!11931 = !DILocation(line: 3797, column: 10, scope: !11914)
!11932 = !DILocation(line: 3797, column: 14, scope: !11914)
!11933 = !DILocation(line: 3798, column: 12, scope: !11914)
!11934 = !DILocation(line: 3800, column: 11, scope: !11914)
!11935 = !DILocation(line: 3800, column: 17, scope: !11914)
!11936 = !DILocation(line: 3800, column: 3, scope: !11914)
!11937 = !DILocation(line: 3802, column: 13, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 3800, column: 27)
!11939 = !DILocation(line: 3803, column: 4, scope: !11938)
!11940 = !DILocation(line: 3805, column: 13, scope: !11938)
!11941 = !DILocation(line: 3806, column: 4, scope: !11938)
!11942 = !DILocation(line: 3808, column: 4, scope: !11938)
!11943 = !DILocation(line: 3810, column: 13, scope: !11938)
!11944 = !DILocation(line: 3811, column: 4, scope: !11938)
!11945 = !DILocation(line: 3813, column: 3, scope: !11914)
!11946 = !DILocation(line: 3817, column: 3, scope: !11914)
!11947 = !DILocation(line: 3817, column: 10, scope: !11914)
!11948 = !DILocation(line: 3817, column: 14, scope: !11914)
!11949 = !DILocation(line: 3818, column: 12, scope: !11914)
!11950 = !DILocation(line: 3820, column: 11, scope: !11914)
!11951 = !DILocation(line: 3820, column: 17, scope: !11914)
!11952 = !DILocation(line: 3820, column: 3, scope: !11914)
!11953 = !DILocation(line: 3822, column: 26, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 3820, column: 27)
!11955 = !DILocation(line: 3822, column: 4, scope: !11954)
!11956 = !DILocation(line: 3823, column: 13, scope: !11954)
!11957 = !DILocation(line: 3824, column: 4, scope: !11954)
!11958 = !DILocation(line: 3826, column: 13, scope: !11954)
!11959 = !DILocation(line: 3827, column: 4, scope: !11954)
!11960 = !DILocation(line: 3829, column: 4, scope: !11954)
!11961 = !DILocation(line: 3831, column: 13, scope: !11954)
!11962 = !DILocation(line: 3832, column: 4, scope: !11954)
!11963 = !DILocation(line: 3834, column: 3, scope: !11914)
!11964 = !DILocation(line: 3837, column: 12, scope: !11914)
!11965 = !DILocation(line: 3838, column: 7, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 3838, column: 7)
!11967 = !DILocation(line: 3838, column: 13, scope: !11966)
!11968 = !DILocation(line: 3838, column: 20, scope: !11966)
!11969 = !DILocation(line: 3838, column: 41, scope: !11966)
!11970 = !DILocation(line: 3839, column: 8, scope: !11966)
!11971 = !DILocation(line: 3839, column: 14, scope: !11966)
!11972 = !DILocation(line: 3839, column: 21, scope: !11966)
!11973 = !DILocation(line: 3839, column: 31, scope: !11966)
!11974 = !DILocation(line: 3839, column: 34, scope: !11966)
!11975 = !DILocation(line: 3839, column: 40, scope: !11966)
!11976 = !DILocation(line: 3839, column: 47, scope: !11966)
!11977 = !DILocation(line: 3838, column: 7, scope: !11914)
!11978 = !DILocation(line: 3858, column: 4, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 3840, column: 3)
!11980 = !DILocation(line: 3862, column: 4, scope: !11979)
!11981 = !DILocation(line: 3866, column: 3, scope: !11979)
!11982 = !DILocation(line: 3839, column: 56, scope: !11966)
!11983 = !DILocation(line: 3869, column: 3, scope: !11914)
!11984 = !DILocation(line: 3869, column: 10, scope: !11914)
!11985 = !DILocation(line: 3869, column: 14, scope: !11914)
!11986 = !DILocation(line: 3870, column: 12, scope: !11914)
!11987 = !DILocation(line: 3871, column: 7, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 3871, column: 7)
!11989 = !DILocation(line: 3871, column: 17, scope: !11988)
!11990 = !DILocation(line: 3871, column: 30, scope: !11988)
!11991 = !DILocation(line: 3871, column: 57, scope: !11988)
!11992 = !DILocation(line: 3871, column: 33, scope: !11988)
!11993 = !DILocation(line: 3871, column: 7, scope: !11914)
!11994 = !DILocation(line: 3872, column: 13, scope: !11988)
!11995 = !DILocation(line: 3872, column: 4, scope: !11988)
!11996 = !DILocation(line: 3874, column: 11, scope: !11914)
!11997 = !DILocation(line: 3874, column: 17, scope: !11914)
!11998 = !DILocation(line: 3874, column: 3, scope: !11914)
!11999 = !DILocation(line: 3876, column: 13, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 3874, column: 27)
!12001 = !DILocation(line: 3877, column: 4, scope: !12000)
!12002 = !DILocation(line: 3879, column: 4, scope: !12000)
!12003 = !DILocation(line: 3881, column: 13, scope: !12000)
!12004 = !DILocation(line: 3882, column: 4, scope: !12000)
!12005 = !DILocation(line: 3884, column: 3, scope: !11914)
!12006 = !DILocation(line: 3886, column: 18, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 3886, column: 7)
!12008 = !DILocation(line: 3886, column: 7, scope: !12007)
!12009 = !DILocation(line: 3886, column: 7, scope: !11914)
!12010 = !DILocation(line: 3887, column: 4, scope: !12007)
!12011 = !DILocation(line: 3887, column: 11, scope: !12007)
!12012 = !DILocation(line: 3887, column: 15, scope: !12007)
!12013 = !DILocation(line: 3889, column: 4, scope: !12007)
!12014 = !DILocation(line: 3889, column: 11, scope: !12007)
!12015 = !DILocation(line: 3889, column: 15, scope: !12007)
!12016 = !DILocation(line: 3890, column: 12, scope: !11914)
!12017 = !DILocation(line: 3892, column: 3, scope: !11914)
!12018 = !DILocation(line: 3895, column: 3, scope: !11914)
!12019 = !DILocation(line: 3896, column: 3, scope: !11914)
!12020 = !DILocation(line: 3899, column: 20, scope: !11889)
!12021 = !DILocation(line: 3899, column: 2, scope: !11889)
!12022 = !DILocation(line: 3899, column: 9, scope: !11889)
!12023 = !DILocation(line: 3899, column: 18, scope: !11889)
!12024 = !DILocation(line: 3900, column: 6, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 3900, column: 6)
!12026 = !DILocation(line: 3900, column: 15, scope: !12025)
!12027 = !DILocation(line: 3900, column: 6, scope: !11889)
!12028 = !DILocation(line: 3901, column: 3, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3900, column: 29)
!12030 = !DILocation(line: 3901, column: 10, scope: !12029)
!12031 = !DILocation(line: 3901, column: 27, scope: !12029)
!12032 = !DILocation(line: 3902, column: 3, scope: !12029)
!12033 = !DILocation(line: 3902, column: 10, scope: !12029)
!12034 = !DILocation(line: 3902, column: 26, scope: !12029)
!12035 = !DILocation(line: 3903, column: 3, scope: !12029)
!12036 = !DILocation(line: 3903, column: 10, scope: !12029)
!12037 = !DILocation(line: 3903, column: 26, scope: !12029)
!12038 = !DILocation(line: 3904, column: 2, scope: !12029)
!12039 = !DILocation(line: 3905, column: 3, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3904, column: 9)
!12041 = !DILocation(line: 3905, column: 10, scope: !12040)
!12042 = !DILocation(line: 3905, column: 27, scope: !12040)
!12043 = !DILocation(line: 3906, column: 3, scope: !12040)
!12044 = !DILocation(line: 3906, column: 10, scope: !12040)
!12045 = !DILocation(line: 3906, column: 26, scope: !12040)
!12046 = !DILocation(line: 3907, column: 3, scope: !12040)
!12047 = !DILocation(line: 3907, column: 10, scope: !12040)
!12048 = !DILocation(line: 3907, column: 26, scope: !12040)
!12049 = !DILocation(line: 3910, column: 2, scope: !11889)
!12050 = !DILocation(line: 3911, column: 1, scope: !11889)
!12051 = distinct !DISubprogram(name: "mv_port_init", scope: !3, file: !3, line: 3696, type: !12052, scopeLine: 3697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12052 = !DISubroutineType(types: !12053)
!12053 = !{null, !12054, !1187}
!12054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7275, size: 64)
!12055 = !DILocalVariable(name: "port", arg: 1, scope: !12051, file: !3, line: 3696, type: !12054)
!12056 = !DILocation(line: 3696, column: 46, scope: !12051)
!12057 = !DILocalVariable(name: "port_mmio", arg: 2, scope: !12051, file: !3, line: 3696, type: !1187)
!12058 = !DILocation(line: 3696, column: 67, scope: !12051)
!12059 = !DILocalVariable(name: "serr", scope: !12051, file: !3, line: 3698, type: !1187)
!12060 = !DILocation(line: 3698, column: 16, scope: !12051)
!12061 = !DILocalVariable(name: "shd_base", scope: !12051, file: !3, line: 3698, type: !1187)
!12062 = !DILocation(line: 3698, column: 23, scope: !12051)
!12063 = !DILocation(line: 3698, column: 34, scope: !12051)
!12064 = !DILocation(line: 3698, column: 44, scope: !12051)
!12065 = !DILocation(line: 3702, column: 20, scope: !12051)
!12066 = !DILocation(line: 3702, column: 29, scope: !12051)
!12067 = !DILocation(line: 3702, column: 2, scope: !12051)
!12068 = !DILocation(line: 3702, column: 8, scope: !12051)
!12069 = !DILocation(line: 3702, column: 18, scope: !12051)
!12070 = !DILocation(line: 3704, column: 24, scope: !12051)
!12071 = !DILocation(line: 3704, column: 33, scope: !12051)
!12072 = !DILocation(line: 3704, column: 3, scope: !12051)
!12073 = !DILocation(line: 3704, column: 9, scope: !12051)
!12074 = !DILocation(line: 3704, column: 22, scope: !12051)
!12075 = !DILocation(line: 3703, column: 2, scope: !12051)
!12076 = !DILocation(line: 3703, column: 8, scope: !12051)
!12077 = !DILocation(line: 3703, column: 19, scope: !12051)
!12078 = !DILocation(line: 3705, column: 21, scope: !12051)
!12079 = !DILocation(line: 3705, column: 30, scope: !12051)
!12080 = !DILocation(line: 3705, column: 2, scope: !12051)
!12081 = !DILocation(line: 3705, column: 8, scope: !12051)
!12082 = !DILocation(line: 3705, column: 19, scope: !12051)
!12083 = !DILocation(line: 3706, column: 20, scope: !12051)
!12084 = !DILocation(line: 3706, column: 29, scope: !12051)
!12085 = !DILocation(line: 3706, column: 2, scope: !12051)
!12086 = !DILocation(line: 3706, column: 8, scope: !12051)
!12087 = !DILocation(line: 3706, column: 18, scope: !12051)
!12088 = !DILocation(line: 3707, column: 20, scope: !12051)
!12089 = !DILocation(line: 3707, column: 29, scope: !12051)
!12090 = !DILocation(line: 3707, column: 2, scope: !12051)
!12091 = !DILocation(line: 3707, column: 8, scope: !12051)
!12092 = !DILocation(line: 3707, column: 18, scope: !12051)
!12093 = !DILocation(line: 3708, column: 20, scope: !12051)
!12094 = !DILocation(line: 3708, column: 29, scope: !12051)
!12095 = !DILocation(line: 3708, column: 2, scope: !12051)
!12096 = !DILocation(line: 3708, column: 8, scope: !12051)
!12097 = !DILocation(line: 3708, column: 18, scope: !12051)
!12098 = !DILocation(line: 3709, column: 22, scope: !12051)
!12099 = !DILocation(line: 3709, column: 31, scope: !12051)
!12100 = !DILocation(line: 3709, column: 2, scope: !12051)
!12101 = !DILocation(line: 3709, column: 8, scope: !12051)
!12102 = !DILocation(line: 3709, column: 20, scope: !12051)
!12103 = !DILocation(line: 3711, column: 24, scope: !12051)
!12104 = !DILocation(line: 3711, column: 33, scope: !12051)
!12105 = !DILocation(line: 3711, column: 3, scope: !12051)
!12106 = !DILocation(line: 3711, column: 9, scope: !12051)
!12107 = !DILocation(line: 3711, column: 22, scope: !12051)
!12108 = !DILocation(line: 3710, column: 2, scope: !12051)
!12109 = !DILocation(line: 3710, column: 8, scope: !12051)
!12110 = !DILocation(line: 3710, column: 20, scope: !12051)
!12111 = !DILocation(line: 3713, column: 42, scope: !12051)
!12112 = !DILocation(line: 3713, column: 51, scope: !12051)
!12113 = !DILocation(line: 3713, column: 25, scope: !12051)
!12114 = !DILocation(line: 3713, column: 31, scope: !12051)
!12115 = !DILocation(line: 3713, column: 40, scope: !12051)
!12116 = !DILocation(line: 3713, column: 2, scope: !12051)
!12117 = !DILocation(line: 3713, column: 8, scope: !12051)
!12118 = !DILocation(line: 3713, column: 23, scope: !12051)
!12119 = !DILocation(line: 3716, column: 9, scope: !12051)
!12120 = !DILocation(line: 3716, column: 21, scope: !12051)
!12121 = !DILocation(line: 3716, column: 19, scope: !12051)
!12122 = !DILocation(line: 3716, column: 7, scope: !12051)
!12123 = !DILocation(line: 3717, column: 17, scope: !12051)
!12124 = !DILocation(line: 3717, column: 11, scope: !12051)
!12125 = !DILocation(line: 3717, column: 24, scope: !12051)
!12126 = !DILocation(line: 3717, column: 2, scope: !12051)
!12127 = !DILocation(line: 3718, column: 14, scope: !12051)
!12128 = !DILocation(line: 3718, column: 24, scope: !12051)
!12129 = !DILocation(line: 3718, column: 2, scope: !12051)
!12130 = !DILocation(line: 3721, column: 36, scope: !12051)
!12131 = !DILocation(line: 3721, column: 46, scope: !12051)
!12132 = !DILocation(line: 3721, column: 2, scope: !12051)
!12133 = !DILocation(line: 3727, column: 1, scope: !12051)
!12134 = distinct !DISubprogram(name: "mv_set_irq_coalescing", scope: !3, file: !3, line: 1087, type: !12135, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12135 = !DISubroutineType(types: !12136)
!12136 = !{null, !7484, !7, !7}
!12137 = !DILocation(line: 407, column: 64, scope: !9342, inlinedAt: !12138)
!12138 = distinct !DILocation(line: 1146, column: 2, scope: !12134)
!12139 = !DILocation(line: 407, column: 84, scope: !9342, inlinedAt: !12138)
!12140 = !DILocation(line: 327, column: 67, scope: !9350, inlinedAt: !12141)
!12141 = distinct !DILocation(line: 1110, column: 2, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 1110, column: 2)
!12143 = distinct !DILexicalBlock(scope: !12144, file: !3, line: 1110, column: 2)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 1110, column: 2)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !3, line: 1110, column: 2)
!12146 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 1110, column: 2)
!12147 = !DILocalVariable(name: "host", arg: 1, scope: !12134, file: !3, line: 1087, type: !7484)
!12148 = !DILocation(line: 1087, column: 52, scope: !12134)
!12149 = !DILocalVariable(name: "count", arg: 2, scope: !12134, file: !3, line: 1088, type: !7)
!12150 = !DILocation(line: 1088, column: 20, scope: !12134)
!12151 = !DILocalVariable(name: "usecs", arg: 3, scope: !12134, file: !3, line: 1088, type: !7)
!12152 = !DILocation(line: 1088, column: 40, scope: !12134)
!12153 = !DILocalVariable(name: "hpriv", scope: !12134, file: !3, line: 1090, type: !7763)
!12154 = !DILocation(line: 1090, column: 23, scope: !12134)
!12155 = !DILocation(line: 1090, column: 31, scope: !12134)
!12156 = !DILocation(line: 1090, column: 37, scope: !12134)
!12157 = !DILocalVariable(name: "mmio", scope: !12134, file: !3, line: 1091, type: !1187)
!12158 = !DILocation(line: 1091, column: 16, scope: !12134)
!12159 = !DILocation(line: 1091, column: 23, scope: !12134)
!12160 = !DILocation(line: 1091, column: 30, scope: !12134)
!12161 = !DILocalVariable(name: "hc_mmio", scope: !12134, file: !3, line: 1091, type: !1187)
!12162 = !DILocation(line: 1091, column: 37, scope: !12134)
!12163 = !DILocalVariable(name: "coal_enable", scope: !12134, file: !3, line: 1092, type: !1266)
!12164 = !DILocation(line: 1092, column: 6, scope: !12134)
!12165 = !DILocalVariable(name: "flags", scope: !12134, file: !3, line: 1093, type: !1186)
!12166 = !DILocation(line: 1093, column: 16, scope: !12134)
!12167 = !DILocalVariable(name: "clks", scope: !12134, file: !3, line: 1094, type: !7)
!12168 = !DILocation(line: 1094, column: 15, scope: !12134)
!12169 = !DILocalVariable(name: "is_dual_hc", scope: !12134, file: !3, line: 1094, type: !7)
!12170 = !DILocation(line: 1094, column: 21, scope: !12134)
!12171 = !DILocation(line: 1094, column: 34, scope: !12134)
!12172 = !DILocation(line: 1094, column: 41, scope: !12134)
!12173 = !DILocation(line: 1094, column: 49, scope: !12134)
!12174 = !DILocalVariable(name: "coal_disable", scope: !12134, file: !3, line: 1095, type: !6088)
!12175 = !DILocation(line: 1095, column: 12, scope: !12134)
!12176 = !DILocation(line: 1099, column: 7, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 1099, column: 6)
!12178 = !DILocation(line: 1099, column: 13, scope: !12177)
!12179 = !DILocation(line: 1099, column: 17, scope: !12177)
!12180 = !DILocation(line: 1099, column: 6, scope: !12134)
!12181 = !DILocation(line: 1100, column: 16, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 1099, column: 24)
!12183 = !DILocation(line: 1100, column: 8, scope: !12182)
!12184 = !DILocation(line: 1101, column: 2, scope: !12182)
!12185 = !DILocation(line: 1103, column: 10, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 1101, column: 9)
!12187 = !DILocation(line: 1103, column: 16, scope: !12186)
!12188 = !DILocation(line: 1103, column: 8, scope: !12186)
!12189 = !DILocation(line: 1104, column: 7, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12186, file: !3, line: 1104, column: 7)
!12191 = !DILocation(line: 1104, column: 12, scope: !12190)
!12192 = !DILocation(line: 1104, column: 7, scope: !12186)
!12193 = !DILocation(line: 1105, column: 9, scope: !12190)
!12194 = !DILocation(line: 1105, column: 4, scope: !12190)
!12195 = !DILocation(line: 1106, column: 7, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12186, file: !3, line: 1106, column: 7)
!12197 = !DILocation(line: 1106, column: 13, scope: !12196)
!12198 = !DILocation(line: 1106, column: 7, scope: !12186)
!12199 = !DILocation(line: 1107, column: 10, scope: !12196)
!12200 = !DILocation(line: 1107, column: 4, scope: !12196)
!12201 = !DILocation(line: 1110, column: 2, scope: !12134)
!12202 = !DILocation(line: 1110, column: 2, scope: !12146)
!12203 = !DILocalVariable(name: "__dummy", scope: !12204, file: !3, line: 1110, type: !1186)
!12204 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 1110, column: 2)
!12205 = !DILocation(line: 1110, column: 2, scope: !12204)
!12206 = !DILocalVariable(name: "__dummy2", scope: !12204, file: !3, line: 1110, type: !1186)
!12207 = !DILocation(line: 1110, column: 2, scope: !12145)
!12208 = !DILocation(line: 1110, column: 2, scope: !12144)
!12209 = !DILocation(line: 1110, column: 2, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12144, file: !3, line: 1110, column: 2)
!12211 = !DILocalVariable(name: "__dummy", scope: !12212, file: !3, line: 1110, type: !1186)
!12212 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 1110, column: 2)
!12213 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 1110, column: 2)
!12214 = !DILocation(line: 1110, column: 2, scope: !12212)
!12215 = !DILocalVariable(name: "__dummy2", scope: !12212, file: !3, line: 1110, type: !1186)
!12216 = !DILocation(line: 1110, column: 2, scope: !12213)
!12217 = !DILocation(line: 1110, column: 2, scope: !12143)
!12218 = !{i32 -2139359005}
!12219 = !DILocation(line: 1110, column: 2, scope: !12142)
!12220 = !DILocation(line: 329, column: 10, scope: !9350, inlinedAt: !12141)
!12221 = !DILocation(line: 329, column: 16, scope: !9350, inlinedAt: !12141)
!12222 = !DILocation(line: 1111, column: 23, scope: !12134)
!12223 = !DILocation(line: 1111, column: 2, scope: !12134)
!12224 = !DILocation(line: 1113, column: 6, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 1113, column: 6)
!12226 = !DILocation(line: 1113, column: 17, scope: !12225)
!12227 = !DILocation(line: 1113, column: 21, scope: !12225)
!12228 = !DILocation(line: 1113, column: 6, scope: !12134)
!12229 = !DILocation(line: 1118, column: 10, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 1113, column: 38)
!12231 = !DILocation(line: 1118, column: 17, scope: !12230)
!12232 = !DILocation(line: 1118, column: 22, scope: !12230)
!12233 = !DILocation(line: 1118, column: 3, scope: !12230)
!12234 = !DILocation(line: 1119, column: 10, scope: !12230)
!12235 = !DILocation(line: 1119, column: 17, scope: !12230)
!12236 = !DILocation(line: 1119, column: 22, scope: !12230)
!12237 = !DILocation(line: 1119, column: 3, scope: !12230)
!12238 = !DILocation(line: 1121, column: 31, scope: !12230)
!12239 = !DILocation(line: 1121, column: 36, scope: !12230)
!12240 = !DILocation(line: 1121, column: 3, scope: !12230)
!12241 = !DILocation(line: 1122, column: 7, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 1122, column: 7)
!12243 = !DILocation(line: 1122, column: 7, scope: !12230)
!12244 = !DILocation(line: 1123, column: 16, scope: !12242)
!12245 = !DILocation(line: 1123, column: 4, scope: !12242)
!12246 = !DILocation(line: 1124, column: 16, scope: !12230)
!12247 = !DILocation(line: 1124, column: 8, scope: !12230)
!12248 = !DILocation(line: 1125, column: 2, scope: !12230)
!12249 = !DILocation(line: 1130, column: 33, scope: !12134)
!12250 = !DILocation(line: 1130, column: 12, scope: !12134)
!12251 = !DILocation(line: 1130, column: 10, scope: !12134)
!12252 = !DILocation(line: 1131, column: 9, scope: !12134)
!12253 = !DILocation(line: 1131, column: 16, scope: !12134)
!12254 = !DILocation(line: 1131, column: 24, scope: !12134)
!12255 = !DILocation(line: 1131, column: 2, scope: !12134)
!12256 = !DILocation(line: 1132, column: 9, scope: !12134)
!12257 = !DILocation(line: 1132, column: 16, scope: !12134)
!12258 = !DILocation(line: 1132, column: 24, scope: !12134)
!12259 = !DILocation(line: 1132, column: 2, scope: !12134)
!12260 = !DILocation(line: 1133, column: 23, scope: !12134)
!12261 = !DILocation(line: 1133, column: 31, scope: !12134)
!12262 = !DILocation(line: 1133, column: 2, scope: !12134)
!12263 = !DILocation(line: 1134, column: 6, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 1134, column: 6)
!12265 = !DILocation(line: 1134, column: 6, scope: !12134)
!12266 = !DILocation(line: 1135, column: 15, scope: !12264)
!12267 = !DILocation(line: 1135, column: 3, scope: !12264)
!12268 = !DILocation(line: 1136, column: 6, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 1136, column: 6)
!12270 = !DILocation(line: 1136, column: 6, scope: !12134)
!12271 = !DILocation(line: 1137, column: 34, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 1136, column: 18)
!12273 = !DILocation(line: 1137, column: 13, scope: !12272)
!12274 = !DILocation(line: 1137, column: 11, scope: !12272)
!12275 = !DILocation(line: 1138, column: 10, scope: !12272)
!12276 = !DILocation(line: 1138, column: 17, scope: !12272)
!12277 = !DILocation(line: 1138, column: 25, scope: !12272)
!12278 = !DILocation(line: 1138, column: 3, scope: !12272)
!12279 = !DILocation(line: 1139, column: 10, scope: !12272)
!12280 = !DILocation(line: 1139, column: 17, scope: !12272)
!12281 = !DILocation(line: 1139, column: 25, scope: !12272)
!12282 = !DILocation(line: 1139, column: 3, scope: !12272)
!12283 = !DILocation(line: 1140, column: 24, scope: !12272)
!12284 = !DILocation(line: 1140, column: 32, scope: !12272)
!12285 = !DILocation(line: 1140, column: 3, scope: !12272)
!12286 = !DILocation(line: 1141, column: 7, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 1141, column: 7)
!12288 = !DILocation(line: 1141, column: 7, scope: !12272)
!12289 = !DILocation(line: 1142, column: 16, scope: !12287)
!12290 = !DILocation(line: 1142, column: 4, scope: !12287)
!12291 = !DILocation(line: 1143, column: 2, scope: !12272)
!12292 = !DILocation(line: 1145, column: 23, scope: !12134)
!12293 = !DILocation(line: 1145, column: 32, scope: !12134)
!12294 = !DILocation(line: 1145, column: 2, scope: !12134)
!12295 = !DILocation(line: 1146, column: 26, scope: !12134)
!12296 = !DILocation(line: 1146, column: 32, scope: !12134)
!12297 = !DILocation(line: 1146, column: 38, scope: !12134)
!12298 = !DILocation(line: 409, column: 2, scope: !9503, inlinedAt: !12138)
!12299 = !DILocation(line: 409, column: 2, scope: !9508, inlinedAt: !12138)
!12300 = !DILocation(line: 409, column: 2, scope: !9509, inlinedAt: !12138)
!12301 = !DILocation(line: 409, column: 2, scope: !9516, inlinedAt: !12138)
!12302 = !DILocation(line: 409, column: 2, scope: !9519, inlinedAt: !12138)
!12303 = !DILocation(line: 1147, column: 1, scope: !12134)
!12304 = distinct !DISubprogram(name: "mv_60x1b2_errata_pci7", scope: !3, file: !3, line: 3757, type: !7678, scopeLine: 3758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12305 = !DILocalVariable(name: "host", arg: 1, scope: !12304, file: !3, line: 3757, type: !7484)
!12306 = !DILocation(line: 3757, column: 52, scope: !12304)
!12307 = !DILocalVariable(name: "hpriv", scope: !12304, file: !3, line: 3759, type: !7763)
!12308 = !DILocation(line: 3759, column: 23, scope: !12304)
!12309 = !DILocation(line: 3759, column: 31, scope: !12304)
!12310 = !DILocation(line: 3759, column: 37, scope: !12304)
!12311 = !DILocalVariable(name: "mmio", scope: !12304, file: !3, line: 3760, type: !1187)
!12312 = !DILocation(line: 3760, column: 16, scope: !12304)
!12313 = !DILocation(line: 3760, column: 23, scope: !12304)
!12314 = !DILocation(line: 3760, column: 30, scope: !12304)
!12315 = !DILocation(line: 3763, column: 22, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12304, file: !3, line: 3763, column: 6)
!12317 = !DILocation(line: 3763, column: 6, scope: !12316)
!12318 = !DILocation(line: 3763, column: 6, scope: !12304)
!12319 = !DILocalVariable(name: "reg", scope: !12320, file: !3, line: 3764, type: !1266)
!12320 = distinct !DILexicalBlock(scope: !12316, file: !3, line: 3763, column: 29)
!12321 = !DILocation(line: 3764, column: 7, scope: !12320)
!12322 = !DILocation(line: 3764, column: 19, scope: !12320)
!12323 = !DILocation(line: 3764, column: 24, scope: !12320)
!12324 = !DILocation(line: 3764, column: 13, scope: !12320)
!12325 = !DILocation(line: 3765, column: 12, scope: !12320)
!12326 = !DILocation(line: 3765, column: 16, scope: !12320)
!12327 = !DILocation(line: 3765, column: 42, scope: !12320)
!12328 = !DILocation(line: 3765, column: 47, scope: !12320)
!12329 = !DILocation(line: 3765, column: 3, scope: !12320)
!12330 = !DILocation(line: 3766, column: 2, scope: !12320)
!12331 = !DILocation(line: 3767, column: 1, scope: !12304)
!12332 = distinct !DISubprogram(name: "mv_pci_cut_through_okay", scope: !3, file: !3, line: 3743, type: !8326, scopeLine: 3744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12333 = !DILocalVariable(name: "host", arg: 1, scope: !12332, file: !3, line: 3743, type: !7484)
!12334 = !DILocation(line: 3743, column: 53, scope: !12332)
!12335 = !DILocalVariable(name: "hpriv", scope: !12332, file: !3, line: 3745, type: !7763)
!12336 = !DILocation(line: 3745, column: 23, scope: !12332)
!12337 = !DILocation(line: 3745, column: 31, scope: !12332)
!12338 = !DILocation(line: 3745, column: 37, scope: !12332)
!12339 = !DILocalVariable(name: "mmio", scope: !12332, file: !3, line: 3746, type: !1187)
!12340 = !DILocation(line: 3746, column: 16, scope: !12332)
!12341 = !DILocation(line: 3746, column: 23, scope: !12332)
!12342 = !DILocation(line: 3746, column: 30, scope: !12332)
!12343 = !DILocalVariable(name: "reg", scope: !12332, file: !3, line: 3747, type: !1266)
!12344 = !DILocation(line: 3747, column: 6, scope: !12332)
!12345 = !DILocation(line: 3749, column: 23, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12332, file: !3, line: 3749, column: 6)
!12347 = !DILocation(line: 3749, column: 7, scope: !12346)
!12348 = !DILocation(line: 3749, column: 6, scope: !12332)
!12349 = !DILocation(line: 3750, column: 15, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3749, column: 30)
!12351 = !DILocation(line: 3750, column: 20, scope: !12350)
!12352 = !DILocation(line: 3750, column: 9, scope: !12350)
!12353 = !DILocation(line: 3750, column: 7, scope: !12350)
!12354 = !DILocation(line: 3751, column: 7, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12350, file: !3, line: 3751, column: 7)
!12356 = !DILocation(line: 3751, column: 11, scope: !12355)
!12357 = !DILocation(line: 3751, column: 7, scope: !12350)
!12358 = !DILocation(line: 3752, column: 4, scope: !12355)
!12359 = !DILocation(line: 3753, column: 2, scope: !12350)
!12360 = !DILocation(line: 3754, column: 2, scope: !12332)
!12361 = !DILocation(line: 3755, column: 1, scope: !12332)
!12362 = distinct !DISubprogram(name: "soc_is_65n", scope: !3, file: !3, line: 3540, type: !12363, scopeLine: 3541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12363 = !DISubroutineType(types: !12364)
!12364 = !{!1554, !7763}
!12365 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12362, file: !3, line: 3540, type: !7763)
!12366 = !DILocation(line: 3540, column: 45, scope: !12362)
!12367 = !DILocalVariable(name: "port0_mmio", scope: !12362, file: !3, line: 3542, type: !1187)
!12368 = !DILocation(line: 3542, column: 16, scope: !12362)
!12369 = !DILocation(line: 3542, column: 42, scope: !12362)
!12370 = !DILocation(line: 3542, column: 49, scope: !12362)
!12371 = !DILocation(line: 3542, column: 29, scope: !12362)
!12372 = !DILocation(line: 3544, column: 12, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12362, file: !3, line: 3544, column: 6)
!12374 = !DILocation(line: 3544, column: 23, scope: !12373)
!12375 = !DILocation(line: 3544, column: 6, scope: !12373)
!12376 = !DILocation(line: 3544, column: 6, scope: !12362)
!12377 = !DILocation(line: 3545, column: 3, scope: !12373)
!12378 = !DILocation(line: 3546, column: 2, scope: !12362)
!12379 = !DILocation(line: 3547, column: 1, scope: !12362)
!12380 = distinct !DISubprogram(name: "mv5_phy_errata", scope: !3, file: !3, line: 3129, type: !7761, scopeLine: 3131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12381 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12380, file: !3, line: 3129, type: !7763)
!12382 = !DILocation(line: 3129, column: 49, scope: !12380)
!12383 = !DILocalVariable(name: "mmio", arg: 2, scope: !12380, file: !3, line: 3129, type: !1187)
!12384 = !DILocation(line: 3129, column: 70, scope: !12380)
!12385 = !DILocalVariable(name: "port", arg: 3, scope: !12380, file: !3, line: 3130, type: !7)
!12386 = !DILocation(line: 3130, column: 20, scope: !12380)
!12387 = !DILocalVariable(name: "phy_mmio", scope: !12380, file: !3, line: 3132, type: !1187)
!12388 = !DILocation(line: 3132, column: 16, scope: !12380)
!12389 = !DILocation(line: 3132, column: 40, scope: !12380)
!12390 = !DILocation(line: 3132, column: 46, scope: !12380)
!12391 = !DILocation(line: 3132, column: 27, scope: !12380)
!12392 = !DILocalVariable(name: "mask", scope: !12380, file: !3, line: 3133, type: !6088)
!12393 = !DILocation(line: 3133, column: 12, scope: !12380)
!12394 = !DILocalVariable(name: "tmp", scope: !12380, file: !3, line: 3134, type: !1266)
!12395 = !DILocation(line: 3134, column: 6, scope: !12380)
!12396 = !DILocalVariable(name: "fix_apm_sq", scope: !12380, file: !3, line: 3135, type: !260)
!12397 = !DILocation(line: 3135, column: 6, scope: !12380)
!12398 = !DILocation(line: 3135, column: 20, scope: !12380)
!12399 = !DILocation(line: 3135, column: 27, scope: !12380)
!12400 = !DILocation(line: 3135, column: 36, scope: !12380)
!12401 = !DILocation(line: 3137, column: 6, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12380, file: !3, line: 3137, column: 6)
!12403 = !DILocation(line: 3137, column: 6, scope: !12380)
!12404 = !DILocation(line: 3138, column: 15, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 3137, column: 18)
!12406 = !DILocation(line: 3138, column: 24, scope: !12405)
!12407 = !DILocation(line: 3138, column: 9, scope: !12405)
!12408 = !DILocation(line: 3138, column: 7, scope: !12405)
!12409 = !DILocation(line: 3139, column: 7, scope: !12405)
!12410 = !DILocation(line: 3140, column: 10, scope: !12405)
!12411 = !DILocation(line: 3140, column: 15, scope: !12405)
!12412 = !DILocation(line: 3140, column: 24, scope: !12405)
!12413 = !DILocation(line: 3140, column: 3, scope: !12405)
!12414 = !DILocation(line: 3142, column: 15, scope: !12405)
!12415 = !DILocation(line: 3142, column: 24, scope: !12405)
!12416 = !DILocation(line: 3142, column: 9, scope: !12405)
!12417 = !DILocation(line: 3142, column: 7, scope: !12405)
!12418 = !DILocation(line: 3143, column: 7, scope: !12405)
!12419 = !DILocation(line: 3144, column: 7, scope: !12405)
!12420 = !DILocation(line: 3145, column: 10, scope: !12405)
!12421 = !DILocation(line: 3145, column: 15, scope: !12405)
!12422 = !DILocation(line: 3145, column: 24, scope: !12405)
!12423 = !DILocation(line: 3145, column: 3, scope: !12405)
!12424 = !DILocation(line: 3146, column: 2, scope: !12405)
!12425 = !DILocation(line: 3148, column: 14, scope: !12380)
!12426 = !DILocation(line: 3148, column: 23, scope: !12380)
!12427 = !DILocation(line: 3148, column: 8, scope: !12380)
!12428 = !DILocation(line: 3148, column: 6, scope: !12380)
!12429 = !DILocation(line: 3149, column: 6, scope: !12380)
!12430 = !DILocation(line: 3150, column: 9, scope: !12380)
!12431 = !DILocation(line: 3150, column: 16, scope: !12380)
!12432 = !DILocation(line: 3150, column: 23, scope: !12380)
!12433 = !DILocation(line: 3150, column: 29, scope: !12380)
!12434 = !DILocation(line: 3150, column: 6, scope: !12380)
!12435 = !DILocation(line: 3151, column: 9, scope: !12380)
!12436 = !DILocation(line: 3151, column: 16, scope: !12380)
!12437 = !DILocation(line: 3151, column: 23, scope: !12380)
!12438 = !DILocation(line: 3151, column: 29, scope: !12380)
!12439 = !DILocation(line: 3151, column: 6, scope: !12380)
!12440 = !DILocation(line: 3152, column: 9, scope: !12380)
!12441 = !DILocation(line: 3152, column: 14, scope: !12380)
!12442 = !DILocation(line: 3152, column: 23, scope: !12380)
!12443 = !DILocation(line: 3152, column: 2, scope: !12380)
!12444 = !DILocation(line: 3153, column: 1, scope: !12380)
!12445 = distinct !DISubprogram(name: "mv5_enable_leds", scope: !3, file: !3, line: 3116, type: !7894, scopeLine: 3117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12446 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12445, file: !3, line: 3116, type: !7763)
!12447 = !DILocation(line: 3116, column: 50, scope: !12445)
!12448 = !DILocalVariable(name: "mmio", arg: 2, scope: !12445, file: !3, line: 3116, type: !1187)
!12449 = !DILocation(line: 3116, column: 71, scope: !12445)
!12450 = !DILocalVariable(name: "tmp", scope: !12445, file: !3, line: 3118, type: !1266)
!12451 = !DILocation(line: 3118, column: 6, scope: !12445)
!12452 = !DILocation(line: 3120, column: 12, scope: !12445)
!12453 = !DILocation(line: 3120, column: 17, scope: !12445)
!12454 = !DILocation(line: 3120, column: 2, scope: !12445)
!12455 = !DILocation(line: 3124, column: 14, scope: !12445)
!12456 = !DILocation(line: 3124, column: 19, scope: !12445)
!12457 = !DILocation(line: 3124, column: 8, scope: !12445)
!12458 = !DILocation(line: 3124, column: 6, scope: !12445)
!12459 = !DILocation(line: 3125, column: 6, scope: !12445)
!12460 = !DILocation(line: 3126, column: 9, scope: !12445)
!12461 = !DILocation(line: 3126, column: 14, scope: !12445)
!12462 = !DILocation(line: 3126, column: 19, scope: !12445)
!12463 = !DILocation(line: 3126, column: 2, scope: !12445)
!12464 = !DILocation(line: 3127, column: 1, scope: !12445)
!12465 = distinct !DISubprogram(name: "mv5_read_preamp", scope: !3, file: !3, line: 3104, type: !7898, scopeLine: 3106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12466 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12465, file: !3, line: 3104, type: !7763)
!12467 = !DILocation(line: 3104, column: 50, scope: !12465)
!12468 = !DILocalVariable(name: "idx", arg: 2, scope: !12465, file: !3, line: 3104, type: !260)
!12469 = !DILocation(line: 3104, column: 61, scope: !12465)
!12470 = !DILocalVariable(name: "mmio", arg: 3, scope: !12465, file: !3, line: 3105, type: !1187)
!12471 = !DILocation(line: 3105, column: 21, scope: !12465)
!12472 = !DILocalVariable(name: "phy_mmio", scope: !12465, file: !3, line: 3107, type: !1187)
!12473 = !DILocation(line: 3107, column: 16, scope: !12465)
!12474 = !DILocation(line: 3107, column: 40, scope: !12465)
!12475 = !DILocation(line: 3107, column: 46, scope: !12465)
!12476 = !DILocation(line: 3107, column: 27, scope: !12465)
!12477 = !DILocalVariable(name: "tmp", scope: !12465, file: !3, line: 3108, type: !1266)
!12478 = !DILocation(line: 3108, column: 6, scope: !12465)
!12479 = !DILocation(line: 3110, column: 14, scope: !12465)
!12480 = !DILocation(line: 3110, column: 23, scope: !12465)
!12481 = !DILocation(line: 3110, column: 8, scope: !12465)
!12482 = !DILocation(line: 3110, column: 6, scope: !12465)
!12483 = !DILocation(line: 3112, column: 27, scope: !12465)
!12484 = !DILocation(line: 3112, column: 31, scope: !12465)
!12485 = !DILocation(line: 3112, column: 2, scope: !12465)
!12486 = !DILocation(line: 3112, column: 9, scope: !12465)
!12487 = !DILocation(line: 3112, column: 16, scope: !12465)
!12488 = !DILocation(line: 3112, column: 21, scope: !12465)
!12489 = !DILocation(line: 3112, column: 25, scope: !12465)
!12490 = !DILocation(line: 3113, column: 28, scope: !12465)
!12491 = !DILocation(line: 3113, column: 32, scope: !12465)
!12492 = !DILocation(line: 3113, column: 2, scope: !12465)
!12493 = !DILocation(line: 3113, column: 9, scope: !12465)
!12494 = !DILocation(line: 3113, column: 16, scope: !12465)
!12495 = !DILocation(line: 3113, column: 21, scope: !12465)
!12496 = !DILocation(line: 3113, column: 26, scope: !12465)
!12497 = !DILocation(line: 3114, column: 1, scope: !12465)
!12498 = distinct !DISubprogram(name: "mv5_reset_hc", scope: !3, file: !3, line: 3200, type: !7902, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12499 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12498, file: !3, line: 3200, type: !7763)
!12500 = !DILocation(line: 3200, column: 46, scope: !12498)
!12501 = !DILocalVariable(name: "mmio", arg: 2, scope: !12498, file: !3, line: 3200, type: !1187)
!12502 = !DILocation(line: 3200, column: 67, scope: !12498)
!12503 = !DILocalVariable(name: "n_hc", arg: 3, scope: !12498, file: !3, line: 3201, type: !7)
!12504 = !DILocation(line: 3201, column: 17, scope: !12498)
!12505 = !DILocalVariable(name: "hc", scope: !12498, file: !3, line: 3203, type: !7)
!12506 = !DILocation(line: 3203, column: 15, scope: !12498)
!12507 = !DILocalVariable(name: "port", scope: !12498, file: !3, line: 3203, type: !7)
!12508 = !DILocation(line: 3203, column: 19, scope: !12498)
!12509 = !DILocation(line: 3205, column: 10, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12498, file: !3, line: 3205, column: 2)
!12511 = !DILocation(line: 3205, column: 7, scope: !12510)
!12512 = !DILocation(line: 3205, column: 15, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12510, file: !3, line: 3205, column: 2)
!12514 = !DILocation(line: 3205, column: 20, scope: !12513)
!12515 = !DILocation(line: 3205, column: 18, scope: !12513)
!12516 = !DILocation(line: 3205, column: 2, scope: !12510)
!12517 = !DILocation(line: 3206, column: 13, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !3, line: 3206, column: 3)
!12519 = distinct !DILexicalBlock(scope: !12513, file: !3, line: 3205, column: 32)
!12520 = !DILocation(line: 3206, column: 8, scope: !12518)
!12521 = !DILocation(line: 3206, column: 18, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 3206, column: 3)
!12523 = !DILocation(line: 3206, column: 23, scope: !12522)
!12524 = !DILocation(line: 3206, column: 3, scope: !12518)
!12525 = !DILocation(line: 3207, column: 22, scope: !12522)
!12526 = !DILocation(line: 3207, column: 29, scope: !12522)
!12527 = !DILocation(line: 3208, column: 9, scope: !12522)
!12528 = !DILocation(line: 3208, column: 12, scope: !12522)
!12529 = !DILocation(line: 3208, column: 33, scope: !12522)
!12530 = !DILocation(line: 3208, column: 31, scope: !12522)
!12531 = !DILocation(line: 3207, column: 4, scope: !12522)
!12532 = !DILocation(line: 3206, column: 46, scope: !12522)
!12533 = !DILocation(line: 3206, column: 3, scope: !12522)
!12534 = distinct !{!12534, !12524, !12535}
!12535 = !DILocation(line: 3208, column: 37, scope: !12518)
!12536 = !DILocation(line: 3210, column: 20, scope: !12519)
!12537 = !DILocation(line: 3210, column: 27, scope: !12519)
!12538 = !DILocation(line: 3210, column: 33, scope: !12519)
!12539 = !DILocation(line: 3210, column: 3, scope: !12519)
!12540 = !DILocation(line: 3211, column: 2, scope: !12519)
!12541 = !DILocation(line: 3205, column: 28, scope: !12513)
!12542 = !DILocation(line: 3205, column: 2, scope: !12513)
!12543 = distinct !{!12543, !12516, !12544}
!12544 = !DILocation(line: 3211, column: 2, scope: !12510)
!12545 = !DILocation(line: 3213, column: 2, scope: !12498)
!12546 = distinct !DISubprogram(name: "mv5_reset_flash", scope: !3, file: !3, line: 3099, type: !7894, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12547 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12546, file: !3, line: 3099, type: !7763)
!12548 = !DILocation(line: 3099, column: 50, scope: !12546)
!12549 = !DILocalVariable(name: "mmio", arg: 2, scope: !12546, file: !3, line: 3099, type: !1187)
!12550 = !DILocation(line: 3099, column: 71, scope: !12546)
!12551 = !DILocation(line: 3101, column: 21, scope: !12546)
!12552 = !DILocation(line: 3101, column: 26, scope: !12546)
!12553 = !DILocation(line: 3101, column: 2, scope: !12546)
!12554 = !DILocation(line: 3102, column: 1, scope: !12546)
!12555 = distinct !DISubprogram(name: "mv5_reset_bus", scope: !3, file: !3, line: 3083, type: !7907, scopeLine: 3084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12556 = !DILocalVariable(name: "host", arg: 1, scope: !12555, file: !3, line: 3083, type: !7484)
!12557 = !DILocation(line: 3083, column: 44, scope: !12555)
!12558 = !DILocalVariable(name: "mmio", arg: 2, scope: !12555, file: !3, line: 3083, type: !1187)
!12559 = !DILocation(line: 3083, column: 64, scope: !12555)
!12560 = !DILocalVariable(name: "pdev", scope: !12555, file: !3, line: 3085, type: !1200)
!12561 = !DILocation(line: 3085, column: 18, scope: !12555)
!12562 = !DILocalVariable(name: "__mptr", scope: !12563, file: !3, line: 3085, type: !1187)
!12563 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 3085, column: 25)
!12564 = !DILocation(line: 3085, column: 25, scope: !12563)
!12565 = !DILocation(line: 3085, column: 25, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 3085, column: 25)
!12567 = !DILocalVariable(name: "early_5080", scope: !12555, file: !3, line: 3086, type: !260)
!12568 = !DILocation(line: 3086, column: 6, scope: !12555)
!12569 = !DILocation(line: 3088, column: 16, scope: !12555)
!12570 = !DILocation(line: 3088, column: 22, scope: !12555)
!12571 = !DILocation(line: 3088, column: 29, scope: !12555)
!12572 = !DILocation(line: 3088, column: 40, scope: !12555)
!12573 = !DILocation(line: 3088, column: 44, scope: !12555)
!12574 = !DILocation(line: 3088, column: 50, scope: !12555)
!12575 = !DILocation(line: 3088, column: 59, scope: !12555)
!12576 = !DILocation(line: 0, scope: !12555)
!12577 = !DILocation(line: 3088, column: 13, scope: !12555)
!12578 = !DILocation(line: 3090, column: 7, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 3090, column: 6)
!12580 = !DILocation(line: 3090, column: 6, scope: !12555)
!12581 = !DILocalVariable(name: "tmp", scope: !12582, file: !3, line: 3091, type: !1266)
!12582 = distinct !DILexicalBlock(scope: !12579, file: !3, line: 3090, column: 19)
!12583 = !DILocation(line: 3091, column: 7, scope: !12582)
!12584 = !DILocation(line: 3091, column: 19, scope: !12582)
!12585 = !DILocation(line: 3091, column: 24, scope: !12582)
!12586 = !DILocation(line: 3091, column: 13, scope: !12582)
!12587 = !DILocation(line: 3092, column: 7, scope: !12582)
!12588 = !DILocation(line: 3093, column: 10, scope: !12582)
!12589 = !DILocation(line: 3093, column: 15, scope: !12582)
!12590 = !DILocation(line: 3093, column: 20, scope: !12582)
!12591 = !DILocation(line: 3093, column: 3, scope: !12582)
!12592 = !DILocation(line: 3094, column: 2, scope: !12582)
!12593 = !DILocation(line: 3096, column: 19, scope: !12555)
!12594 = !DILocation(line: 3096, column: 25, scope: !12555)
!12595 = !DILocation(line: 3096, column: 2, scope: !12555)
!12596 = !DILocation(line: 3097, column: 1, scope: !12555)
!12597 = distinct !DISubprogram(name: "mv5_reset_hc_port", scope: !3, file: !3, line: 3158, type: !7761, scopeLine: 3160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12598 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12597, file: !3, line: 3158, type: !7763)
!12599 = !DILocation(line: 3158, column: 52, scope: !12597)
!12600 = !DILocalVariable(name: "mmio", arg: 2, scope: !12597, file: !3, line: 3158, type: !1187)
!12601 = !DILocation(line: 3158, column: 73, scope: !12597)
!12602 = !DILocalVariable(name: "port", arg: 3, scope: !12597, file: !3, line: 3159, type: !7)
!12603 = !DILocation(line: 3159, column: 22, scope: !12597)
!12604 = !DILocalVariable(name: "port_mmio", scope: !12597, file: !3, line: 3161, type: !1187)
!12605 = !DILocation(line: 3161, column: 16, scope: !12597)
!12606 = !DILocation(line: 3161, column: 41, scope: !12597)
!12607 = !DILocation(line: 3161, column: 47, scope: !12597)
!12608 = !DILocation(line: 3161, column: 28, scope: !12597)
!12609 = !DILocation(line: 3163, column: 19, scope: !12597)
!12610 = !DILocation(line: 3163, column: 26, scope: !12597)
!12611 = !DILocation(line: 3163, column: 32, scope: !12597)
!12612 = !DILocation(line: 3163, column: 2, scope: !12597)
!12613 = !DILocation(line: 3165, column: 2, scope: !12597)
!12614 = !DILocation(line: 3166, column: 16, scope: !12597)
!12615 = !DILocation(line: 3166, column: 26, scope: !12597)
!12616 = !DILocation(line: 3166, column: 2, scope: !12597)
!12617 = !DILocation(line: 3167, column: 2, scope: !12597)
!12618 = !DILocation(line: 3168, column: 2, scope: !12597)
!12619 = !DILocation(line: 3169, column: 2, scope: !12597)
!12620 = !DILocation(line: 3170, column: 2, scope: !12597)
!12621 = !DILocation(line: 3171, column: 2, scope: !12597)
!12622 = !DILocation(line: 3172, column: 2, scope: !12597)
!12623 = !DILocation(line: 3173, column: 2, scope: !12597)
!12624 = !DILocation(line: 3174, column: 2, scope: !12597)
!12625 = !DILocation(line: 3175, column: 2, scope: !12597)
!12626 = !DILocation(line: 3176, column: 2, scope: !12597)
!12627 = !DILocation(line: 3177, column: 15, scope: !12597)
!12628 = !DILocation(line: 3177, column: 25, scope: !12597)
!12629 = !DILocation(line: 3177, column: 2, scope: !12597)
!12630 = !DILocation(line: 3178, column: 1, scope: !12597)
!12631 = distinct !DISubprogram(name: "mv5_reset_one_hc", scope: !3, file: !3, line: 3182, type: !7761, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12632 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12631, file: !3, line: 3182, type: !7763)
!12633 = !DILocation(line: 3182, column: 51, scope: !12631)
!12634 = !DILocalVariable(name: "mmio", arg: 2, scope: !12631, file: !3, line: 3182, type: !1187)
!12635 = !DILocation(line: 3182, column: 72, scope: !12631)
!12636 = !DILocalVariable(name: "hc", arg: 3, scope: !12631, file: !3, line: 3183, type: !7)
!12637 = !DILocation(line: 3183, column: 17, scope: !12631)
!12638 = !DILocalVariable(name: "hc_mmio", scope: !12631, file: !3, line: 3185, type: !1187)
!12639 = !DILocation(line: 3185, column: 16, scope: !12631)
!12640 = !DILocation(line: 3185, column: 37, scope: !12631)
!12641 = !DILocation(line: 3185, column: 43, scope: !12631)
!12642 = !DILocation(line: 3185, column: 26, scope: !12631)
!12643 = !DILocalVariable(name: "tmp", scope: !12631, file: !3, line: 3186, type: !1266)
!12644 = !DILocation(line: 3186, column: 6, scope: !12631)
!12645 = !DILocation(line: 3188, column: 2, scope: !12631)
!12646 = !DILocation(line: 3189, column: 2, scope: !12631)
!12647 = !DILocation(line: 3190, column: 2, scope: !12631)
!12648 = !DILocation(line: 3191, column: 2, scope: !12631)
!12649 = !DILocation(line: 3193, column: 14, scope: !12631)
!12650 = !DILocation(line: 3193, column: 22, scope: !12631)
!12651 = !DILocation(line: 3193, column: 8, scope: !12631)
!12652 = !DILocation(line: 3193, column: 6, scope: !12631)
!12653 = !DILocation(line: 3194, column: 6, scope: !12631)
!12654 = !DILocation(line: 3195, column: 6, scope: !12631)
!12655 = !DILocation(line: 3196, column: 9, scope: !12631)
!12656 = !DILocation(line: 3196, column: 14, scope: !12631)
!12657 = !DILocation(line: 3196, column: 22, scope: !12631)
!12658 = !DILocation(line: 3196, column: 2, scope: !12631)
!12659 = !DILocation(line: 3197, column: 1, scope: !12631)
!12660 = distinct !DISubprogram(name: "mv_reset_pci_bus", scope: !3, file: !3, line: 3218, type: !7907, scopeLine: 3219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12661 = !DILocalVariable(name: "host", arg: 1, scope: !12660, file: !3, line: 3218, type: !7484)
!12662 = !DILocation(line: 3218, column: 47, scope: !12660)
!12663 = !DILocalVariable(name: "mmio", arg: 2, scope: !12660, file: !3, line: 3218, type: !1187)
!12664 = !DILocation(line: 3218, column: 67, scope: !12660)
!12665 = !DILocalVariable(name: "hpriv", scope: !12660, file: !3, line: 3220, type: !7763)
!12666 = !DILocation(line: 3220, column: 23, scope: !12660)
!12667 = !DILocation(line: 3220, column: 31, scope: !12660)
!12668 = !DILocation(line: 3220, column: 37, scope: !12660)
!12669 = !DILocalVariable(name: "tmp", scope: !12660, file: !3, line: 3221, type: !1266)
!12670 = !DILocation(line: 3221, column: 6, scope: !12660)
!12671 = !DILocation(line: 3223, column: 14, scope: !12660)
!12672 = !DILocation(line: 3223, column: 19, scope: !12660)
!12673 = !DILocation(line: 3223, column: 8, scope: !12660)
!12674 = !DILocation(line: 3223, column: 6, scope: !12660)
!12675 = !DILocation(line: 3224, column: 6, scope: !12660)
!12676 = !DILocation(line: 3225, column: 9, scope: !12660)
!12677 = !DILocation(line: 3225, column: 14, scope: !12660)
!12678 = !DILocation(line: 3225, column: 19, scope: !12660)
!12679 = !DILocation(line: 3225, column: 2, scope: !12660)
!12680 = !DILocation(line: 3227, column: 2, scope: !12660)
!12681 = !DILocation(line: 3228, column: 2, scope: !12660)
!12682 = !DILocation(line: 3229, column: 21, scope: !12660)
!12683 = !DILocation(line: 3229, column: 26, scope: !12660)
!12684 = !DILocation(line: 3229, column: 2, scope: !12660)
!12685 = !DILocation(line: 3230, column: 2, scope: !12660)
!12686 = !DILocation(line: 3231, column: 2, scope: !12660)
!12687 = !DILocation(line: 3232, column: 2, scope: !12660)
!12688 = !DILocation(line: 3233, column: 2, scope: !12660)
!12689 = !DILocation(line: 3234, column: 2, scope: !12660)
!12690 = !DILocation(line: 3235, column: 2, scope: !12660)
!12691 = !DILocation(line: 3236, column: 2, scope: !12660)
!12692 = !DILocation(line: 3237, column: 1, scope: !12660)
!12693 = distinct !DISubprogram(name: "mv6_phy_errata", scope: !3, file: !3, line: 3341, type: !7761, scopeLine: 3343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12694 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12693, file: !3, line: 3341, type: !7763)
!12695 = !DILocation(line: 3341, column: 49, scope: !12693)
!12696 = !DILocalVariable(name: "mmio", arg: 2, scope: !12693, file: !3, line: 3341, type: !1187)
!12697 = !DILocation(line: 3341, column: 70, scope: !12693)
!12698 = !DILocalVariable(name: "port", arg: 3, scope: !12693, file: !3, line: 3342, type: !7)
!12699 = !DILocation(line: 3342, column: 20, scope: !12693)
!12700 = !DILocalVariable(name: "port_mmio", scope: !12693, file: !3, line: 3344, type: !1187)
!12701 = !DILocation(line: 3344, column: 16, scope: !12693)
!12702 = !DILocation(line: 3344, column: 41, scope: !12693)
!12703 = !DILocation(line: 3344, column: 47, scope: !12693)
!12704 = !DILocation(line: 3344, column: 28, scope: !12693)
!12705 = !DILocalVariable(name: "hp_flags", scope: !12693, file: !3, line: 3346, type: !1266)
!12706 = !DILocation(line: 3346, column: 6, scope: !12693)
!12707 = !DILocation(line: 3346, column: 17, scope: !12693)
!12708 = !DILocation(line: 3346, column: 24, scope: !12693)
!12709 = !DILocalVariable(name: "fix_phy_mode2", scope: !12693, file: !3, line: 3347, type: !260)
!12710 = !DILocation(line: 3347, column: 6, scope: !12693)
!12711 = !DILocation(line: 3348, column: 3, scope: !12693)
!12712 = !DILocation(line: 3348, column: 12, scope: !12693)
!12713 = !DILocalVariable(name: "fix_phy_mode4", scope: !12693, file: !3, line: 3349, type: !260)
!12714 = !DILocation(line: 3349, column: 6, scope: !12693)
!12715 = !DILocation(line: 3350, column: 3, scope: !12693)
!12716 = !DILocation(line: 3350, column: 12, scope: !12693)
!12717 = !DILocalVariable(name: "m2", scope: !12693, file: !3, line: 3351, type: !1266)
!12718 = !DILocation(line: 3351, column: 6, scope: !12693)
!12719 = !DILocalVariable(name: "m3", scope: !12693, file: !3, line: 3351, type: !1266)
!12720 = !DILocation(line: 3351, column: 10, scope: !12693)
!12721 = !DILocation(line: 3353, column: 6, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 3353, column: 6)
!12723 = !DILocation(line: 3353, column: 6, scope: !12693)
!12724 = !DILocation(line: 3354, column: 14, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 3353, column: 21)
!12726 = !DILocation(line: 3354, column: 24, scope: !12725)
!12727 = !DILocation(line: 3354, column: 8, scope: !12725)
!12728 = !DILocation(line: 3354, column: 6, scope: !12725)
!12729 = !DILocation(line: 3355, column: 6, scope: !12725)
!12730 = !DILocation(line: 3356, column: 6, scope: !12725)
!12731 = !DILocation(line: 3357, column: 10, scope: !12725)
!12732 = !DILocation(line: 3357, column: 14, scope: !12725)
!12733 = !DILocation(line: 3357, column: 24, scope: !12725)
!12734 = !DILocation(line: 3357, column: 3, scope: !12725)
!12735 = !DILocation(line: 3359, column: 3, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !3, line: 3359, column: 3)
!12737 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 3359, column: 3)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 3359, column: 3)
!12739 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 3359, column: 3)
!12740 = !DILocation(line: 3361, column: 14, scope: !12725)
!12741 = !DILocation(line: 3361, column: 24, scope: !12725)
!12742 = !DILocation(line: 3361, column: 8, scope: !12725)
!12743 = !DILocation(line: 3361, column: 6, scope: !12725)
!12744 = !DILocation(line: 3362, column: 6, scope: !12725)
!12745 = !DILocation(line: 3363, column: 10, scope: !12725)
!12746 = !DILocation(line: 3363, column: 14, scope: !12725)
!12747 = !DILocation(line: 3363, column: 24, scope: !12725)
!12748 = !DILocation(line: 3363, column: 3, scope: !12725)
!12749 = !DILocation(line: 3365, column: 3, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12751, file: !3, line: 3365, column: 3)
!12751 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 3365, column: 3)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 3365, column: 3)
!12753 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 3365, column: 3)
!12754 = !DILocation(line: 3366, column: 2, scope: !12725)
!12755 = !DILocation(line: 3372, column: 13, scope: !12693)
!12756 = !DILocation(line: 3372, column: 23, scope: !12693)
!12757 = !DILocation(line: 3372, column: 7, scope: !12693)
!12758 = !DILocation(line: 3372, column: 5, scope: !12693)
!12759 = !DILocation(line: 3373, column: 8, scope: !12693)
!12760 = !DILocation(line: 3373, column: 11, scope: !12693)
!12761 = !DILocation(line: 3373, column: 19, scope: !12693)
!12762 = !DILocation(line: 3373, column: 5, scope: !12693)
!12763 = !DILocation(line: 3376, column: 6, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 3376, column: 6)
!12765 = !DILocation(line: 3376, column: 6, scope: !12693)
!12766 = !DILocation(line: 3377, column: 6, scope: !12764)
!12767 = !DILocation(line: 3377, column: 3, scope: !12764)
!12768 = !DILocation(line: 3379, column: 6, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 3379, column: 6)
!12770 = !DILocation(line: 3379, column: 6, scope: !12693)
!12771 = !DILocalVariable(name: "m4", scope: !12772, file: !3, line: 3380, type: !1266)
!12772 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 3379, column: 21)
!12773 = !DILocation(line: 3380, column: 7, scope: !12772)
!12774 = !DILocation(line: 3380, column: 18, scope: !12772)
!12775 = !DILocation(line: 3380, column: 28, scope: !12772)
!12776 = !DILocation(line: 3380, column: 12, scope: !12772)
!12777 = !DILocation(line: 3386, column: 7, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 3386, column: 7)
!12779 = !DILocation(line: 3386, column: 7, scope: !12772)
!12780 = !DILocation(line: 3387, column: 10, scope: !12778)
!12781 = !DILocation(line: 3387, column: 13, scope: !12778)
!12782 = !DILocation(line: 3387, column: 38, scope: !12778)
!12783 = !DILocation(line: 3387, column: 7, scope: !12778)
!12784 = !DILocation(line: 3387, column: 4, scope: !12778)
!12785 = !DILocation(line: 3389, column: 10, scope: !12778)
!12786 = !DILocation(line: 3389, column: 13, scope: !12778)
!12787 = !DILocation(line: 3389, column: 36, scope: !12778)
!12788 = !DILocation(line: 3389, column: 7, scope: !12778)
!12789 = !DILocation(line: 3390, column: 10, scope: !12772)
!12790 = !DILocation(line: 3390, column: 14, scope: !12772)
!12791 = !DILocation(line: 3390, column: 24, scope: !12772)
!12792 = !DILocation(line: 3390, column: 3, scope: !12772)
!12793 = !DILocation(line: 3391, column: 2, scope: !12772)
!12794 = !DILocation(line: 3398, column: 9, scope: !12693)
!12795 = !DILocation(line: 3398, column: 13, scope: !12693)
!12796 = !DILocation(line: 3398, column: 23, scope: !12693)
!12797 = !DILocation(line: 3398, column: 2, scope: !12693)
!12798 = !DILocation(line: 3401, column: 13, scope: !12693)
!12799 = !DILocation(line: 3401, column: 23, scope: !12693)
!12800 = !DILocation(line: 3401, column: 7, scope: !12693)
!12801 = !DILocation(line: 3401, column: 5, scope: !12693)
!12802 = !DILocation(line: 3403, column: 5, scope: !12693)
!12803 = !DILocation(line: 3404, column: 8, scope: !12693)
!12804 = !DILocation(line: 3404, column: 15, scope: !12693)
!12805 = !DILocation(line: 3404, column: 22, scope: !12693)
!12806 = !DILocation(line: 3404, column: 28, scope: !12693)
!12807 = !DILocation(line: 3404, column: 5, scope: !12693)
!12808 = !DILocation(line: 3405, column: 8, scope: !12693)
!12809 = !DILocation(line: 3405, column: 15, scope: !12693)
!12810 = !DILocation(line: 3405, column: 22, scope: !12693)
!12811 = !DILocation(line: 3405, column: 28, scope: !12693)
!12812 = !DILocation(line: 3405, column: 5, scope: !12693)
!12813 = !DILocation(line: 3406, column: 5, scope: !12693)
!12814 = !DILocation(line: 3409, column: 6, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 3409, column: 6)
!12816 = !DILocation(line: 3409, column: 6, scope: !12693)
!12817 = !DILocation(line: 3410, column: 6, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 3409, column: 25)
!12819 = !DILocation(line: 3411, column: 6, scope: !12818)
!12820 = !DILocation(line: 3412, column: 2, scope: !12818)
!12821 = !DILocation(line: 3414, column: 9, scope: !12693)
!12822 = !DILocation(line: 3414, column: 13, scope: !12693)
!12823 = !DILocation(line: 3414, column: 23, scope: !12693)
!12824 = !DILocation(line: 3414, column: 2, scope: !12693)
!12825 = !DILocation(line: 3415, column: 1, scope: !12693)
!12826 = distinct !DISubprogram(name: "mv6_enable_leds", scope: !3, file: !3, line: 3336, type: !7894, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12827 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12826, file: !3, line: 3336, type: !7763)
!12828 = !DILocation(line: 3336, column: 50, scope: !12826)
!12829 = !DILocalVariable(name: "mmio", arg: 2, scope: !12826, file: !3, line: 3336, type: !1187)
!12830 = !DILocation(line: 3336, column: 71, scope: !12826)
!12831 = !DILocation(line: 3338, column: 21, scope: !12826)
!12832 = !DILocation(line: 3338, column: 26, scope: !12826)
!12833 = !DILocation(line: 3338, column: 2, scope: !12826)
!12834 = !DILocation(line: 3339, column: 1, scope: !12826)
!12835 = distinct !DISubprogram(name: "mv6_read_preamp", scope: !3, file: !3, line: 3316, type: !7898, scopeLine: 3318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12836 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12835, file: !3, line: 3316, type: !7763)
!12837 = !DILocation(line: 3316, column: 50, scope: !12835)
!12838 = !DILocalVariable(name: "idx", arg: 2, scope: !12835, file: !3, line: 3316, type: !260)
!12839 = !DILocation(line: 3316, column: 61, scope: !12835)
!12840 = !DILocalVariable(name: "mmio", arg: 3, scope: !12835, file: !3, line: 3317, type: !1187)
!12841 = !DILocation(line: 3317, column: 21, scope: !12835)
!12842 = !DILocalVariable(name: "port_mmio", scope: !12835, file: !3, line: 3319, type: !1187)
!12843 = !DILocation(line: 3319, column: 16, scope: !12835)
!12844 = !DILocalVariable(name: "tmp", scope: !12835, file: !3, line: 3320, type: !1266)
!12845 = !DILocation(line: 3320, column: 6, scope: !12835)
!12846 = !DILocation(line: 3322, column: 14, scope: !12835)
!12847 = !DILocation(line: 3322, column: 19, scope: !12835)
!12848 = !DILocation(line: 3322, column: 8, scope: !12835)
!12849 = !DILocation(line: 3322, column: 6, scope: !12835)
!12850 = !DILocation(line: 3323, column: 7, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 3323, column: 6)
!12852 = !DILocation(line: 3323, column: 11, scope: !12851)
!12853 = !DILocation(line: 3323, column: 23, scope: !12851)
!12854 = !DILocation(line: 3323, column: 6, scope: !12835)
!12855 = !DILocation(line: 3324, column: 3, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12851, file: !3, line: 3323, column: 29)
!12857 = !DILocation(line: 3324, column: 10, scope: !12856)
!12858 = !DILocation(line: 3324, column: 17, scope: !12856)
!12859 = !DILocation(line: 3324, column: 22, scope: !12856)
!12860 = !DILocation(line: 3324, column: 27, scope: !12856)
!12861 = !DILocation(line: 3325, column: 3, scope: !12856)
!12862 = !DILocation(line: 3325, column: 10, scope: !12856)
!12863 = !DILocation(line: 3325, column: 17, scope: !12856)
!12864 = !DILocation(line: 3325, column: 22, scope: !12856)
!12865 = !DILocation(line: 3325, column: 26, scope: !12856)
!12866 = !DILocation(line: 3326, column: 3, scope: !12856)
!12867 = !DILocation(line: 3329, column: 27, scope: !12835)
!12868 = !DILocation(line: 3329, column: 33, scope: !12835)
!12869 = !DILocation(line: 3329, column: 14, scope: !12835)
!12870 = !DILocation(line: 3329, column: 12, scope: !12835)
!12871 = !DILocation(line: 3330, column: 14, scope: !12835)
!12872 = !DILocation(line: 3330, column: 24, scope: !12835)
!12873 = !DILocation(line: 3330, column: 8, scope: !12835)
!12874 = !DILocation(line: 3330, column: 6, scope: !12835)
!12875 = !DILocation(line: 3332, column: 28, scope: !12835)
!12876 = !DILocation(line: 3332, column: 32, scope: !12835)
!12877 = !DILocation(line: 3332, column: 2, scope: !12835)
!12878 = !DILocation(line: 3332, column: 9, scope: !12835)
!12879 = !DILocation(line: 3332, column: 16, scope: !12835)
!12880 = !DILocation(line: 3332, column: 21, scope: !12835)
!12881 = !DILocation(line: 3332, column: 26, scope: !12835)
!12882 = !DILocation(line: 3333, column: 27, scope: !12835)
!12883 = !DILocation(line: 3333, column: 31, scope: !12835)
!12884 = !DILocation(line: 3333, column: 2, scope: !12835)
!12885 = !DILocation(line: 3333, column: 9, scope: !12835)
!12886 = !DILocation(line: 3333, column: 16, scope: !12835)
!12887 = !DILocation(line: 3333, column: 21, scope: !12835)
!12888 = !DILocation(line: 3333, column: 25, scope: !12835)
!12889 = !DILocation(line: 3334, column: 1, scope: !12835)
!12890 = distinct !DISubprogram(name: "mv6_reset_hc", scope: !3, file: !3, line: 3261, type: !7902, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!12891 = !DILocalVariable(name: "hpriv", arg: 1, scope: !12890, file: !3, line: 3261, type: !7763)
!12892 = !DILocation(line: 3261, column: 46, scope: !12890)
!12893 = !DILocalVariable(name: "mmio", arg: 2, scope: !12890, file: !3, line: 3261, type: !1187)
!12894 = !DILocation(line: 3261, column: 67, scope: !12890)
!12895 = !DILocalVariable(name: "n_hc", arg: 3, scope: !12890, file: !3, line: 3262, type: !7)
!12896 = !DILocation(line: 3262, column: 17, scope: !12890)
!12897 = !DILocalVariable(name: "reg", scope: !12890, file: !3, line: 3264, type: !1187)
!12898 = !DILocation(line: 3264, column: 16, scope: !12890)
!12899 = !DILocation(line: 3264, column: 22, scope: !12890)
!12900 = !DILocation(line: 3264, column: 27, scope: !12890)
!12901 = !DILocalVariable(name: "i", scope: !12890, file: !3, line: 3265, type: !260)
!12902 = !DILocation(line: 3265, column: 6, scope: !12890)
!12903 = !DILocalVariable(name: "rc", scope: !12890, file: !3, line: 3265, type: !260)
!12904 = !DILocation(line: 3265, column: 9, scope: !12890)
!12905 = !DILocalVariable(name: "t", scope: !12890, file: !3, line: 3266, type: !1266)
!12906 = !DILocation(line: 3266, column: 6, scope: !12890)
!12907 = !DILocation(line: 3271, column: 12, scope: !12890)
!12908 = !DILocation(line: 3271, column: 6, scope: !12890)
!12909 = !DILocation(line: 3271, column: 4, scope: !12890)
!12910 = !DILocation(line: 3272, column: 9, scope: !12890)
!12911 = !DILocation(line: 3272, column: 11, scope: !12890)
!12912 = !DILocation(line: 3272, column: 30, scope: !12890)
!12913 = !DILocation(line: 3272, column: 2, scope: !12890)
!12914 = !DILocation(line: 3274, column: 9, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 3274, column: 2)
!12916 = !DILocation(line: 3274, column: 7, scope: !12915)
!12917 = !DILocation(line: 3274, column: 14, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12915, file: !3, line: 3274, column: 2)
!12919 = !DILocation(line: 3274, column: 16, scope: !12918)
!12920 = !DILocation(line: 3274, column: 2, scope: !12915)
!12921 = !DILocation(line: 3275, column: 3, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 3275, column: 3)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !3, line: 3275, column: 3)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 3275, column: 3)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 3275, column: 3)
!12926 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 3274, column: 29)
!12927 = !DILocation(line: 3276, column: 13, scope: !12926)
!12928 = !DILocation(line: 3276, column: 7, scope: !12926)
!12929 = !DILocation(line: 3276, column: 5, scope: !12926)
!12930 = !DILocation(line: 3277, column: 26, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 3277, column: 7)
!12932 = !DILocation(line: 3277, column: 24, scope: !12931)
!12933 = !DILocation(line: 3277, column: 7, scope: !12926)
!12934 = !DILocation(line: 3278, column: 4, scope: !12931)
!12935 = !DILocation(line: 3279, column: 2, scope: !12926)
!12936 = !DILocation(line: 3274, column: 25, scope: !12918)
!12937 = !DILocation(line: 3274, column: 2, scope: !12918)
!12938 = distinct !{!12938, !12920, !12939}
!12939 = !DILocation(line: 3279, column: 2, scope: !12915)
!12940 = !DILocation(line: 3280, column: 27, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 3280, column: 6)
!12942 = !DILocation(line: 3280, column: 25, scope: !12941)
!12943 = !DILocation(line: 3280, column: 6, scope: !12890)
!12944 = !DILocation(line: 3281, column: 3, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12941, file: !3, line: 3280, column: 31)
!12946 = !DILocation(line: 3282, column: 6, scope: !12945)
!12947 = !DILocation(line: 3283, column: 3, scope: !12945)
!12948 = !DILocation(line: 3287, column: 4, scope: !12890)
!12949 = !DILocation(line: 3288, column: 2, scope: !12890)
!12950 = !DILocation(line: 3289, column: 10, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 3288, column: 5)
!12952 = !DILocation(line: 3289, column: 12, scope: !12951)
!12953 = !DILocation(line: 3289, column: 28, scope: !12951)
!12954 = !DILocation(line: 3289, column: 3, scope: !12951)
!12955 = !DILocation(line: 3290, column: 13, scope: !12951)
!12956 = !DILocation(line: 3290, column: 7, scope: !12951)
!12957 = !DILocation(line: 3290, column: 5, scope: !12951)
!12958 = !DILocation(line: 3291, column: 3, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 3291, column: 3)
!12960 = distinct !DILexicalBlock(scope: !12961, file: !3, line: 3291, column: 3)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 3291, column: 3)
!12962 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 3291, column: 3)
!12963 = !DILocation(line: 3292, column: 2, scope: !12951)
!12964 = !DILocation(line: 3292, column: 28, scope: !12890)
!12965 = !DILocation(line: 3292, column: 26, scope: !12890)
!12966 = !DILocation(line: 3292, column: 31, scope: !12890)
!12967 = !DILocation(line: 3292, column: 36, scope: !12890)
!12968 = !DILocation(line: 3292, column: 39, scope: !12890)
!12969 = !DILocation(line: 0, scope: !12890)
!12970 = distinct !{!12970, !12949, !12971}
!12971 = !DILocation(line: 3292, column: 43, scope: !12890)
!12972 = !DILocation(line: 3294, column: 23, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 3294, column: 6)
!12974 = !DILocation(line: 3294, column: 21, scope: !12973)
!12975 = !DILocation(line: 3294, column: 6, scope: !12890)
!12976 = !DILocation(line: 3295, column: 3, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12973, file: !3, line: 3294, column: 27)
!12978 = !DILocation(line: 3296, column: 6, scope: !12977)
!12979 = !DILocation(line: 3297, column: 3, scope: !12977)
!12980 = !DILocation(line: 3301, column: 4, scope: !12890)
!12981 = !DILocation(line: 3302, column: 2, scope: !12890)
!12982 = !DILocation(line: 3303, column: 10, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 3302, column: 5)
!12984 = !DILocation(line: 3303, column: 12, scope: !12983)
!12985 = !DILocation(line: 3303, column: 49, scope: !12983)
!12986 = !DILocation(line: 3303, column: 3, scope: !12983)
!12987 = !DILocation(line: 3304, column: 13, scope: !12983)
!12988 = !DILocation(line: 3304, column: 7, scope: !12983)
!12989 = !DILocation(line: 3304, column: 5, scope: !12983)
!12990 = !DILocation(line: 3305, column: 3, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !3, line: 3305, column: 3)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !3, line: 3305, column: 3)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !3, line: 3305, column: 3)
!12994 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 3305, column: 3)
!12995 = !DILocation(line: 3306, column: 2, scope: !12983)
!12996 = !DILocation(line: 3306, column: 27, scope: !12890)
!12997 = !DILocation(line: 3306, column: 25, scope: !12890)
!12998 = !DILocation(line: 3306, column: 30, scope: !12890)
!12999 = !DILocation(line: 3306, column: 35, scope: !12890)
!13000 = !DILocation(line: 3306, column: 38, scope: !12890)
!13001 = distinct !{!13001, !12981, !13002}
!13002 = !DILocation(line: 3306, column: 42, scope: !12890)
!13003 = !DILocation(line: 3308, column: 21, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 3308, column: 6)
!13005 = !DILocation(line: 3308, column: 19, scope: !13004)
!13006 = !DILocation(line: 3308, column: 6, scope: !12890)
!13007 = !DILocation(line: 3309, column: 3, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 3308, column: 24)
!13009 = !DILocation(line: 3310, column: 6, scope: !13008)
!13010 = !DILocation(line: 3311, column: 2, scope: !13008)
!13011 = !DILabel(scope: !12890, name: "done", file: !3, line: 3312)
!13012 = !DILocation(line: 3312, column: 1, scope: !12890)
!13013 = !DILocation(line: 3313, column: 9, scope: !12890)
!13014 = !DILocation(line: 3313, column: 2, scope: !12890)
!13015 = distinct !DISubprogram(name: "mv6_reset_flash", scope: !3, file: !3, line: 3240, type: !7894, scopeLine: 3241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13016 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13015, file: !3, line: 3240, type: !7763)
!13017 = !DILocation(line: 3240, column: 50, scope: !13015)
!13018 = !DILocalVariable(name: "mmio", arg: 2, scope: !13015, file: !3, line: 3240, type: !1187)
!13019 = !DILocation(line: 3240, column: 71, scope: !13015)
!13020 = !DILocalVariable(name: "tmp", scope: !13015, file: !3, line: 3242, type: !1266)
!13021 = !DILocation(line: 3242, column: 6, scope: !13015)
!13022 = !DILocation(line: 3244, column: 18, scope: !13015)
!13023 = !DILocation(line: 3244, column: 25, scope: !13015)
!13024 = !DILocation(line: 3244, column: 2, scope: !13015)
!13025 = !DILocation(line: 3246, column: 14, scope: !13015)
!13026 = !DILocation(line: 3246, column: 19, scope: !13015)
!13027 = !DILocation(line: 3246, column: 8, scope: !13015)
!13028 = !DILocation(line: 3246, column: 6, scope: !13015)
!13029 = !DILocation(line: 3247, column: 6, scope: !13015)
!13030 = !DILocation(line: 3248, column: 6, scope: !13015)
!13031 = !DILocation(line: 3249, column: 9, scope: !13015)
!13032 = !DILocation(line: 3249, column: 14, scope: !13015)
!13033 = !DILocation(line: 3249, column: 19, scope: !13015)
!13034 = !DILocation(line: 3249, column: 2, scope: !13015)
!13035 = !DILocation(line: 3250, column: 1, scope: !13015)
!13036 = distinct !DISubprogram(name: "mv_in_pcix_mode", scope: !3, file: !3, line: 3729, type: !13037, scopeLine: 3730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13037 = !DISubroutineType(types: !13038)
!13038 = !{!7, !7484}
!13039 = !DILocalVariable(name: "host", arg: 1, scope: !13036, file: !3, line: 3729, type: !7484)
!13040 = !DILocation(line: 3729, column: 54, scope: !13036)
!13041 = !DILocalVariable(name: "hpriv", scope: !13036, file: !3, line: 3731, type: !7763)
!13042 = !DILocation(line: 3731, column: 23, scope: !13036)
!13043 = !DILocation(line: 3731, column: 31, scope: !13036)
!13044 = !DILocation(line: 3731, column: 37, scope: !13036)
!13045 = !DILocalVariable(name: "mmio", scope: !13036, file: !3, line: 3732, type: !1187)
!13046 = !DILocation(line: 3732, column: 16, scope: !13036)
!13047 = !DILocation(line: 3732, column: 23, scope: !13036)
!13048 = !DILocation(line: 3732, column: 30, scope: !13036)
!13049 = !DILocalVariable(name: "reg", scope: !13036, file: !3, line: 3733, type: !1266)
!13050 = !DILocation(line: 3733, column: 6, scope: !13036)
!13051 = !DILocation(line: 3735, column: 6, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 3735, column: 6)
!13053 = !DILocation(line: 3735, column: 20, scope: !13052)
!13054 = !DILocation(line: 3735, column: 24, scope: !13052)
!13055 = !DILocation(line: 3735, column: 6, scope: !13036)
!13056 = !DILocation(line: 3736, column: 3, scope: !13052)
!13057 = !DILocation(line: 3737, column: 14, scope: !13036)
!13058 = !DILocation(line: 3737, column: 19, scope: !13036)
!13059 = !DILocation(line: 3737, column: 8, scope: !13036)
!13060 = !DILocation(line: 3737, column: 6, scope: !13036)
!13061 = !DILocation(line: 3738, column: 7, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 3738, column: 6)
!13063 = !DILocation(line: 3738, column: 11, scope: !13062)
!13064 = !DILocation(line: 3738, column: 31, scope: !13062)
!13065 = !DILocation(line: 3738, column: 6, scope: !13036)
!13066 = !DILocation(line: 3739, column: 3, scope: !13062)
!13067 = !DILocation(line: 3740, column: 2, scope: !13036)
!13068 = !DILocation(line: 3741, column: 1, scope: !13036)
!13069 = distinct !DISubprogram(name: "mv_soc_65n_phy_errata", scope: !3, file: !3, line: 3502, type: !7761, scopeLine: 3504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13070 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13069, file: !3, line: 3502, type: !7763)
!13071 = !DILocation(line: 3502, column: 56, scope: !13069)
!13072 = !DILocalVariable(name: "mmio", arg: 2, scope: !13069, file: !3, line: 3503, type: !1187)
!13073 = !DILocation(line: 3503, column: 21, scope: !13069)
!13074 = !DILocalVariable(name: "port", arg: 3, scope: !13069, file: !3, line: 3503, type: !7)
!13075 = !DILocation(line: 3503, column: 40, scope: !13069)
!13076 = !DILocalVariable(name: "port_mmio", scope: !13069, file: !3, line: 3505, type: !1187)
!13077 = !DILocation(line: 3505, column: 16, scope: !13069)
!13078 = !DILocation(line: 3505, column: 41, scope: !13069)
!13079 = !DILocation(line: 3505, column: 47, scope: !13069)
!13080 = !DILocation(line: 3505, column: 28, scope: !13069)
!13081 = !DILocalVariable(name: "reg", scope: !13069, file: !3, line: 3506, type: !1266)
!13082 = !DILocation(line: 3506, column: 6, scope: !13069)
!13083 = !DILocation(line: 3508, column: 14, scope: !13069)
!13084 = !DILocation(line: 3508, column: 24, scope: !13069)
!13085 = !DILocation(line: 3508, column: 8, scope: !13069)
!13086 = !DILocation(line: 3508, column: 6, scope: !13069)
!13087 = !DILocation(line: 3509, column: 6, scope: !13069)
!13088 = !DILocation(line: 3510, column: 6, scope: !13069)
!13089 = !DILocation(line: 3511, column: 6, scope: !13069)
!13090 = !DILocation(line: 3512, column: 6, scope: !13069)
!13091 = !DILocation(line: 3513, column: 9, scope: !13069)
!13092 = !DILocation(line: 3513, column: 14, scope: !13069)
!13093 = !DILocation(line: 3513, column: 24, scope: !13069)
!13094 = !DILocation(line: 3513, column: 2, scope: !13069)
!13095 = !DILocation(line: 3515, column: 14, scope: !13069)
!13096 = !DILocation(line: 3515, column: 24, scope: !13069)
!13097 = !DILocation(line: 3515, column: 8, scope: !13069)
!13098 = !DILocation(line: 3515, column: 6, scope: !13069)
!13099 = !DILocation(line: 3516, column: 6, scope: !13069)
!13100 = !DILocation(line: 3517, column: 6, scope: !13069)
!13101 = !DILocation(line: 3518, column: 9, scope: !13069)
!13102 = !DILocation(line: 3518, column: 14, scope: !13069)
!13103 = !DILocation(line: 3518, column: 24, scope: !13069)
!13104 = !DILocation(line: 3518, column: 2, scope: !13069)
!13105 = !DILocation(line: 3520, column: 14, scope: !13069)
!13106 = !DILocation(line: 3520, column: 24, scope: !13069)
!13107 = !DILocation(line: 3520, column: 8, scope: !13069)
!13108 = !DILocation(line: 3520, column: 6, scope: !13069)
!13109 = !DILocation(line: 3521, column: 6, scope: !13069)
!13110 = !DILocation(line: 3522, column: 6, scope: !13069)
!13111 = !DILocation(line: 3523, column: 6, scope: !13069)
!13112 = !DILocation(line: 3524, column: 9, scope: !13069)
!13113 = !DILocation(line: 3524, column: 14, scope: !13069)
!13114 = !DILocation(line: 3524, column: 24, scope: !13069)
!13115 = !DILocation(line: 3524, column: 2, scope: !13069)
!13116 = !DILocation(line: 3526, column: 14, scope: !13069)
!13117 = !DILocation(line: 3526, column: 24, scope: !13069)
!13118 = !DILocation(line: 3526, column: 8, scope: !13069)
!13119 = !DILocation(line: 3526, column: 6, scope: !13069)
!13120 = !DILocation(line: 3527, column: 6, scope: !13069)
!13121 = !DILocation(line: 3528, column: 6, scope: !13069)
!13122 = !DILocation(line: 3529, column: 6, scope: !13069)
!13123 = !DILocation(line: 3530, column: 9, scope: !13069)
!13124 = !DILocation(line: 3530, column: 14, scope: !13069)
!13125 = !DILocation(line: 3530, column: 24, scope: !13069)
!13126 = !DILocation(line: 3530, column: 2, scope: !13069)
!13127 = !DILocation(line: 3531, column: 1, scope: !13069)
!13128 = distinct !DISubprogram(name: "mv_soc_enable_leds", scope: !3, file: !3, line: 3419, type: !7894, scopeLine: 3421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13129 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13128, file: !3, line: 3419, type: !7763)
!13130 = !DILocation(line: 3419, column: 53, scope: !13128)
!13131 = !DILocalVariable(name: "mmio", arg: 2, scope: !13128, file: !3, line: 3420, type: !1187)
!13132 = !DILocation(line: 3420, column: 25, scope: !13128)
!13133 = !DILocation(line: 3422, column: 2, scope: !13128)
!13134 = distinct !DISubprogram(name: "mv_soc_reset_hc", scope: !3, file: !3, line: 3478, type: !7902, scopeLine: 3480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13135 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13134, file: !3, line: 3478, type: !7763)
!13136 = !DILocation(line: 3478, column: 49, scope: !13134)
!13137 = !DILocalVariable(name: "mmio", arg: 2, scope: !13134, file: !3, line: 3479, type: !1187)
!13138 = !DILocation(line: 3479, column: 21, scope: !13134)
!13139 = !DILocalVariable(name: "n_hc", arg: 3, scope: !13134, file: !3, line: 3479, type: !7)
!13140 = !DILocation(line: 3479, column: 40, scope: !13134)
!13141 = !DILocalVariable(name: "port", scope: !13134, file: !3, line: 3481, type: !7)
!13142 = !DILocation(line: 3481, column: 15, scope: !13134)
!13143 = !DILocation(line: 3483, column: 12, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 3483, column: 2)
!13145 = !DILocation(line: 3483, column: 7, scope: !13144)
!13146 = !DILocation(line: 3483, column: 17, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13144, file: !3, line: 3483, column: 2)
!13148 = !DILocation(line: 3483, column: 24, scope: !13147)
!13149 = !DILocation(line: 3483, column: 31, scope: !13147)
!13150 = !DILocation(line: 3483, column: 22, scope: !13147)
!13151 = !DILocation(line: 3483, column: 2, scope: !13144)
!13152 = !DILocation(line: 3484, column: 24, scope: !13147)
!13153 = !DILocation(line: 3484, column: 31, scope: !13147)
!13154 = !DILocation(line: 3484, column: 37, scope: !13147)
!13155 = !DILocation(line: 3484, column: 3, scope: !13147)
!13156 = !DILocation(line: 3483, column: 44, scope: !13147)
!13157 = !DILocation(line: 3483, column: 2, scope: !13147)
!13158 = distinct !{!13158, !13151, !13159}
!13159 = !DILocation(line: 3484, column: 41, scope: !13144)
!13160 = !DILocation(line: 3486, column: 22, scope: !13134)
!13161 = !DILocation(line: 3486, column: 29, scope: !13134)
!13162 = !DILocation(line: 3486, column: 2, scope: !13134)
!13163 = !DILocation(line: 3488, column: 2, scope: !13134)
!13164 = distinct !DISubprogram(name: "mv_soc_reset_flash", scope: !3, file: !3, line: 3491, type: !7894, scopeLine: 3493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13165 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13164, file: !3, line: 3491, type: !7763)
!13166 = !DILocation(line: 3491, column: 53, scope: !13164)
!13167 = !DILocalVariable(name: "mmio", arg: 2, scope: !13164, file: !3, line: 3492, type: !1187)
!13168 = !DILocation(line: 3492, column: 25, scope: !13164)
!13169 = !DILocation(line: 3494, column: 2, scope: !13164)
!13170 = distinct !DISubprogram(name: "mv_soc_reset_bus", scope: !3, file: !3, line: 3497, type: !7907, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13171 = !DILocalVariable(name: "host", arg: 1, scope: !13170, file: !3, line: 3497, type: !7484)
!13172 = !DILocation(line: 3497, column: 47, scope: !13170)
!13173 = !DILocalVariable(name: "mmio", arg: 2, scope: !13170, file: !3, line: 3497, type: !1187)
!13174 = !DILocation(line: 3497, column: 67, scope: !13170)
!13175 = !DILocation(line: 3499, column: 2, scope: !13170)
!13176 = distinct !DISubprogram(name: "mv_soc_reset_hc_port", scope: !3, file: !3, line: 3440, type: !7761, scopeLine: 3442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13177 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13176, file: !3, line: 3440, type: !7763)
!13178 = !DILocation(line: 3440, column: 55, scope: !13176)
!13179 = !DILocalVariable(name: "mmio", arg: 2, scope: !13176, file: !3, line: 3441, type: !1187)
!13180 = !DILocation(line: 3441, column: 20, scope: !13176)
!13181 = !DILocalVariable(name: "port", arg: 3, scope: !13176, file: !3, line: 3441, type: !7)
!13182 = !DILocation(line: 3441, column: 39, scope: !13176)
!13183 = !DILocalVariable(name: "port_mmio", scope: !13176, file: !3, line: 3443, type: !1187)
!13184 = !DILocation(line: 3443, column: 16, scope: !13176)
!13185 = !DILocation(line: 3443, column: 41, scope: !13176)
!13186 = !DILocation(line: 3443, column: 47, scope: !13176)
!13187 = !DILocation(line: 3443, column: 28, scope: !13176)
!13188 = !DILocation(line: 3445, column: 19, scope: !13176)
!13189 = !DILocation(line: 3445, column: 26, scope: !13176)
!13190 = !DILocation(line: 3445, column: 32, scope: !13176)
!13191 = !DILocation(line: 3445, column: 2, scope: !13176)
!13192 = !DILocation(line: 3447, column: 2, scope: !13176)
!13193 = !DILocation(line: 3448, column: 17, scope: !13176)
!13194 = !DILocation(line: 3448, column: 27, scope: !13176)
!13195 = !DILocation(line: 3448, column: 2, scope: !13176)
!13196 = !DILocation(line: 3449, column: 2, scope: !13176)
!13197 = !DILocation(line: 3450, column: 2, scope: !13176)
!13198 = !DILocation(line: 3451, column: 2, scope: !13176)
!13199 = !DILocation(line: 3452, column: 2, scope: !13176)
!13200 = !DILocation(line: 3453, column: 2, scope: !13176)
!13201 = !DILocation(line: 3454, column: 2, scope: !13176)
!13202 = !DILocation(line: 3455, column: 2, scope: !13176)
!13203 = !DILocation(line: 3456, column: 2, scope: !13176)
!13204 = !DILocation(line: 3457, column: 2, scope: !13176)
!13205 = !DILocation(line: 3458, column: 2, scope: !13176)
!13206 = !DILocation(line: 3459, column: 16, scope: !13176)
!13207 = !DILocation(line: 3459, column: 26, scope: !13176)
!13208 = !DILocation(line: 3459, column: 2, scope: !13176)
!13209 = !DILocation(line: 3460, column: 1, scope: !13176)
!13210 = distinct !DISubprogram(name: "mv_soc_reset_one_hc", scope: !3, file: !3, line: 3465, type: !7894, scopeLine: 3467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13211 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13210, file: !3, line: 3465, type: !7763)
!13212 = !DILocation(line: 3465, column: 54, scope: !13210)
!13213 = !DILocalVariable(name: "mmio", arg: 2, scope: !13210, file: !3, line: 3466, type: !1187)
!13214 = !DILocation(line: 3466, column: 26, scope: !13210)
!13215 = !DILocalVariable(name: "hc_mmio", scope: !13210, file: !3, line: 3468, type: !1187)
!13216 = !DILocation(line: 3468, column: 16, scope: !13210)
!13217 = !DILocation(line: 3468, column: 37, scope: !13210)
!13218 = !DILocation(line: 3468, column: 26, scope: !13210)
!13219 = !DILocation(line: 3470, column: 2, scope: !13210)
!13220 = !DILocation(line: 3471, column: 2, scope: !13210)
!13221 = !DILocation(line: 3472, column: 2, scope: !13210)
!13222 = !DILocation(line: 3474, column: 1, scope: !13210)
!13223 = distinct !DISubprogram(name: "mv_soc_read_preamp", scope: !3, file: !3, line: 3425, type: !7898, scopeLine: 3427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13224 = !DILocalVariable(name: "hpriv", arg: 1, scope: !13223, file: !3, line: 3425, type: !7763)
!13225 = !DILocation(line: 3425, column: 53, scope: !13223)
!13226 = !DILocalVariable(name: "idx", arg: 2, scope: !13223, file: !3, line: 3425, type: !260)
!13227 = !DILocation(line: 3425, column: 64, scope: !13223)
!13228 = !DILocalVariable(name: "mmio", arg: 3, scope: !13223, file: !3, line: 3426, type: !1187)
!13229 = !DILocation(line: 3426, column: 21, scope: !13223)
!13230 = !DILocalVariable(name: "port_mmio", scope: !13223, file: !3, line: 3428, type: !1187)
!13231 = !DILocation(line: 3428, column: 16, scope: !13223)
!13232 = !DILocalVariable(name: "tmp", scope: !13223, file: !3, line: 3429, type: !1266)
!13233 = !DILocation(line: 3429, column: 6, scope: !13223)
!13234 = !DILocation(line: 3431, column: 27, scope: !13223)
!13235 = !DILocation(line: 3431, column: 33, scope: !13223)
!13236 = !DILocation(line: 3431, column: 14, scope: !13223)
!13237 = !DILocation(line: 3431, column: 12, scope: !13223)
!13238 = !DILocation(line: 3432, column: 14, scope: !13223)
!13239 = !DILocation(line: 3432, column: 24, scope: !13223)
!13240 = !DILocation(line: 3432, column: 8, scope: !13223)
!13241 = !DILocation(line: 3432, column: 6, scope: !13223)
!13242 = !DILocation(line: 3434, column: 28, scope: !13223)
!13243 = !DILocation(line: 3434, column: 32, scope: !13223)
!13244 = !DILocation(line: 3434, column: 2, scope: !13223)
!13245 = !DILocation(line: 3434, column: 9, scope: !13223)
!13246 = !DILocation(line: 3434, column: 16, scope: !13223)
!13247 = !DILocation(line: 3434, column: 21, scope: !13223)
!13248 = !DILocation(line: 3434, column: 26, scope: !13223)
!13249 = !DILocation(line: 3435, column: 27, scope: !13223)
!13250 = !DILocation(line: 3435, column: 31, scope: !13223)
!13251 = !DILocation(line: 3435, column: 2, scope: !13223)
!13252 = !DILocation(line: 3435, column: 9, scope: !13223)
!13253 = !DILocation(line: 3435, column: 16, scope: !13223)
!13254 = !DILocation(line: 3435, column: 21, scope: !13223)
!13255 = !DILocation(line: 3435, column: 25, scope: !13223)
!13256 = !DILocation(line: 3436, column: 1, scope: !13223)
!13257 = distinct !DISubprogram(name: "mv_pci_error", scope: !3, file: !3, line: 2948, type: !13258, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13258 = !DISubroutineType(types: !13259)
!13259 = !{!260, !7484, !1187}
!13260 = !DILocalVariable(name: "host", arg: 1, scope: !13257, file: !3, line: 2948, type: !7484)
!13261 = !DILocation(line: 2948, column: 42, scope: !13257)
!13262 = !DILocalVariable(name: "mmio", arg: 2, scope: !13257, file: !3, line: 2948, type: !1187)
!13263 = !DILocation(line: 2948, column: 62, scope: !13257)
!13264 = !DILocalVariable(name: "hpriv", scope: !13257, file: !3, line: 2950, type: !7763)
!13265 = !DILocation(line: 2950, column: 23, scope: !13257)
!13266 = !DILocation(line: 2950, column: 31, scope: !13257)
!13267 = !DILocation(line: 2950, column: 37, scope: !13257)
!13268 = !DILocalVariable(name: "ap", scope: !13257, file: !3, line: 2951, type: !6835)
!13269 = !DILocation(line: 2951, column: 19, scope: !13257)
!13270 = !DILocalVariable(name: "qc", scope: !13257, file: !3, line: 2952, type: !6831)
!13271 = !DILocation(line: 2952, column: 25, scope: !13257)
!13272 = !DILocalVariable(name: "ehi", scope: !13257, file: !3, line: 2953, type: !13273)
!13273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7310, size: 64)
!13274 = !DILocation(line: 2953, column: 22, scope: !13257)
!13275 = !DILocalVariable(name: "i", scope: !13257, file: !3, line: 2954, type: !7)
!13276 = !DILocation(line: 2954, column: 15, scope: !13257)
!13277 = !DILocalVariable(name: "err_mask", scope: !13257, file: !3, line: 2954, type: !7)
!13278 = !DILocation(line: 2954, column: 18, scope: !13257)
!13279 = !DILocalVariable(name: "printed", scope: !13257, file: !3, line: 2954, type: !7)
!13280 = !DILocation(line: 2954, column: 28, scope: !13257)
!13281 = !DILocalVariable(name: "err_cause", scope: !13257, file: !3, line: 2955, type: !1266)
!13282 = !DILocation(line: 2955, column: 6, scope: !13257)
!13283 = !DILocation(line: 2957, column: 20, scope: !13257)
!13284 = !DILocation(line: 2957, column: 27, scope: !13257)
!13285 = !DILocation(line: 2957, column: 34, scope: !13257)
!13286 = !DILocation(line: 2957, column: 25, scope: !13257)
!13287 = !DILocation(line: 2957, column: 14, scope: !13257)
!13288 = !DILocation(line: 2957, column: 12, scope: !13257)
!13289 = !DILocation(line: 2959, column: 2, scope: !13257)
!13290 = !DILocation(line: 2962, column: 19, scope: !13257)
!13291 = !DILocalVariable(name: "__mptr", scope: !13292, file: !3, line: 2962, type: !1187)
!13292 = distinct !DILexicalBlock(scope: !13257, file: !3, line: 2962, column: 29)
!13293 = !DILocation(line: 2962, column: 29, scope: !13292)
!13294 = !DILocation(line: 2962, column: 29, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 2962, column: 29)
!13296 = !DILocation(line: 2962, column: 2, scope: !13257)
!13297 = !DILocation(line: 2964, column: 14, scope: !13257)
!13298 = !DILocation(line: 2964, column: 21, scope: !13257)
!13299 = !DILocation(line: 2964, column: 28, scope: !13257)
!13300 = !DILocation(line: 2964, column: 19, scope: !13257)
!13301 = !DILocation(line: 2964, column: 2, scope: !13257)
!13302 = !DILocation(line: 2966, column: 9, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13257, file: !3, line: 2966, column: 2)
!13304 = !DILocation(line: 2966, column: 7, scope: !13303)
!13305 = !DILocation(line: 2966, column: 14, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13303, file: !3, line: 2966, column: 2)
!13307 = !DILocation(line: 2966, column: 18, scope: !13306)
!13308 = !DILocation(line: 2966, column: 24, scope: !13306)
!13309 = !DILocation(line: 2966, column: 16, scope: !13306)
!13310 = !DILocation(line: 2966, column: 2, scope: !13303)
!13311 = !DILocation(line: 2967, column: 8, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13306, file: !3, line: 2966, column: 38)
!13313 = !DILocation(line: 2967, column: 14, scope: !13312)
!13314 = !DILocation(line: 2967, column: 20, scope: !13312)
!13315 = !DILocation(line: 2967, column: 6, scope: !13312)
!13316 = !DILocation(line: 2968, column: 26, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13312, file: !3, line: 2968, column: 7)
!13318 = !DILocation(line: 2968, column: 30, scope: !13317)
!13319 = !DILocation(line: 2968, column: 8, scope: !13317)
!13320 = !DILocation(line: 2968, column: 7, scope: !13312)
!13321 = !DILocation(line: 2969, column: 11, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13317, file: !3, line: 2968, column: 37)
!13323 = !DILocation(line: 2969, column: 15, scope: !13322)
!13324 = !DILocation(line: 2969, column: 20, scope: !13322)
!13325 = !DILocation(line: 2969, column: 8, scope: !13322)
!13326 = !DILocation(line: 2970, column: 23, scope: !13322)
!13327 = !DILocation(line: 2970, column: 4, scope: !13322)
!13328 = !DILocation(line: 2971, column: 16, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 2971, column: 8)
!13330 = !DILocation(line: 2971, column: 8, scope: !13322)
!13331 = !DILocation(line: 2972, column: 23, scope: !13329)
!13332 = !DILocation(line: 2973, column: 30, scope: !13329)
!13333 = !DILocation(line: 2972, column: 5, scope: !13329)
!13334 = !DILocation(line: 2974, column: 13, scope: !13322)
!13335 = !DILocation(line: 2975, column: 4, scope: !13322)
!13336 = !DILocation(line: 2975, column: 9, scope: !13322)
!13337 = !DILocation(line: 2975, column: 16, scope: !13322)
!13338 = !DILocation(line: 2976, column: 25, scope: !13322)
!13339 = !DILocation(line: 2976, column: 29, scope: !13322)
!13340 = !DILocation(line: 2976, column: 33, scope: !13322)
!13341 = !DILocation(line: 2976, column: 38, scope: !13322)
!13342 = !DILocation(line: 2976, column: 9, scope: !13322)
!13343 = !DILocation(line: 2976, column: 7, scope: !13322)
!13344 = !DILocation(line: 2977, column: 8, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 2977, column: 8)
!13346 = !DILocation(line: 2977, column: 8, scope: !13322)
!13347 = !DILocation(line: 2978, column: 21, scope: !13345)
!13348 = !DILocation(line: 2978, column: 5, scope: !13345)
!13349 = !DILocation(line: 2978, column: 9, scope: !13345)
!13350 = !DILocation(line: 2978, column: 18, scope: !13345)
!13351 = !DILocation(line: 2980, column: 22, scope: !13345)
!13352 = !DILocation(line: 2980, column: 5, scope: !13345)
!13353 = !DILocation(line: 2980, column: 10, scope: !13345)
!13354 = !DILocation(line: 2980, column: 19, scope: !13345)
!13355 = !DILocation(line: 2982, column: 20, scope: !13322)
!13356 = !DILocation(line: 2982, column: 4, scope: !13322)
!13357 = !DILocation(line: 2983, column: 3, scope: !13322)
!13358 = !DILocation(line: 2984, column: 2, scope: !13312)
!13359 = !DILocation(line: 2966, column: 34, scope: !13306)
!13360 = !DILocation(line: 2966, column: 2, scope: !13306)
!13361 = distinct !{!13361, !13310, !13362}
!13362 = !DILocation(line: 2984, column: 2, scope: !13303)
!13363 = !DILocation(line: 2985, column: 2, scope: !13257)
!13364 = distinct !DISubprogram(name: "mv_host_intr", scope: !3, file: !3, line: 2883, type: !13365, scopeLine: 2884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13365 = !DISubroutineType(types: !13366)
!13366 = !{!260, !7484, !1266}
!13367 = !DILocalVariable(name: "host", arg: 1, scope: !13364, file: !3, line: 2883, type: !7484)
!13368 = !DILocation(line: 2883, column: 42, scope: !13364)
!13369 = !DILocalVariable(name: "main_irq_cause", arg: 2, scope: !13364, file: !3, line: 2883, type: !1266)
!13370 = !DILocation(line: 2883, column: 52, scope: !13364)
!13371 = !DILocalVariable(name: "hpriv", scope: !13364, file: !3, line: 2885, type: !7763)
!13372 = !DILocation(line: 2885, column: 23, scope: !13364)
!13373 = !DILocation(line: 2885, column: 31, scope: !13364)
!13374 = !DILocation(line: 2885, column: 37, scope: !13364)
!13375 = !DILocalVariable(name: "mmio", scope: !13364, file: !3, line: 2886, type: !1187)
!13376 = !DILocation(line: 2886, column: 16, scope: !13364)
!13377 = !DILocation(line: 2886, column: 23, scope: !13364)
!13378 = !DILocation(line: 2886, column: 30, scope: !13364)
!13379 = !DILocalVariable(name: "hc_mmio", scope: !13364, file: !3, line: 2886, type: !1187)
!13380 = !DILocation(line: 2886, column: 37, scope: !13364)
!13381 = !DILocalVariable(name: "handled", scope: !13364, file: !3, line: 2887, type: !7)
!13382 = !DILocation(line: 2887, column: 15, scope: !13364)
!13383 = !DILocalVariable(name: "port", scope: !13364, file: !3, line: 2887, type: !7)
!13384 = !DILocation(line: 2887, column: 28, scope: !13364)
!13385 = !DILocation(line: 2890, column: 6, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 2890, column: 6)
!13387 = !DILocation(line: 2890, column: 21, scope: !13386)
!13388 = !DILocation(line: 2890, column: 6, scope: !13364)
!13389 = !DILocation(line: 2891, column: 31, scope: !13386)
!13390 = !DILocation(line: 2891, column: 36, scope: !13386)
!13391 = !DILocation(line: 2891, column: 3, scope: !13386)
!13392 = !DILocation(line: 2893, column: 12, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 2893, column: 2)
!13394 = !DILocation(line: 2893, column: 7, scope: !13393)
!13395 = !DILocation(line: 2893, column: 17, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13393, file: !3, line: 2893, column: 2)
!13397 = !DILocation(line: 2893, column: 24, scope: !13396)
!13398 = !DILocation(line: 2893, column: 31, scope: !13396)
!13399 = !DILocation(line: 2893, column: 22, scope: !13396)
!13400 = !DILocation(line: 2893, column: 2, scope: !13393)
!13401 = !DILocalVariable(name: "ap", scope: !13402, file: !3, line: 2894, type: !6835)
!13402 = distinct !DILexicalBlock(scope: !13396, file: !3, line: 2893, column: 48)
!13403 = !DILocation(line: 2894, column: 20, scope: !13402)
!13404 = !DILocation(line: 2894, column: 25, scope: !13402)
!13405 = !DILocation(line: 2894, column: 31, scope: !13402)
!13406 = !DILocation(line: 2894, column: 37, scope: !13402)
!13407 = !DILocalVariable(name: "p", scope: !13402, file: !3, line: 2895, type: !7)
!13408 = !DILocation(line: 2895, column: 16, scope: !13402)
!13409 = !DILocalVariable(name: "shift", scope: !13402, file: !3, line: 2895, type: !7)
!13410 = !DILocation(line: 2895, column: 19, scope: !13402)
!13411 = !DILocalVariable(name: "hardport", scope: !13402, file: !3, line: 2895, type: !7)
!13412 = !DILocation(line: 2895, column: 26, scope: !13402)
!13413 = !DILocalVariable(name: "port_cause", scope: !13402, file: !3, line: 2895, type: !7)
!13414 = !DILocation(line: 2895, column: 36, scope: !13402)
!13415 = !DILocation(line: 2897, column: 3, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 2897, column: 3)
!13417 = !DILocation(line: 2902, column: 7, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 2902, column: 7)
!13419 = !DILocation(line: 2902, column: 16, scope: !13418)
!13420 = !DILocation(line: 2902, column: 7, scope: !13402)
!13421 = !DILocalVariable(name: "hc_cause", scope: !13422, file: !3, line: 2903, type: !1266)
!13422 = distinct !DILexicalBlock(scope: !13418, file: !3, line: 2902, column: 22)
!13423 = !DILocation(line: 2903, column: 8, scope: !13422)
!13424 = !DILocation(line: 2903, column: 20, scope: !13422)
!13425 = !DILocation(line: 2903, column: 38, scope: !13422)
!13426 = !DILocation(line: 2903, column: 35, scope: !13422)
!13427 = !DILocation(line: 2903, column: 45, scope: !13422)
!13428 = !DILocalVariable(name: "port_mask", scope: !13422, file: !3, line: 2904, type: !1266)
!13429 = !DILocation(line: 2904, column: 8, scope: !13422)
!13430 = !DILocalVariable(name: "ack_irqs", scope: !13422, file: !3, line: 2904, type: !1266)
!13431 = !DILocation(line: 2904, column: 19, scope: !13422)
!13432 = !DILocation(line: 2908, column: 9, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 2908, column: 8)
!13434 = !DILocation(line: 2908, column: 8, scope: !13422)
!13435 = !DILocation(line: 2909, column: 10, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13433, file: !3, line: 2908, column: 19)
!13437 = !DILocation(line: 2910, column: 5, scope: !13436)
!13438 = !DILocation(line: 2924, column: 13, scope: !13422)
!13439 = !DILocation(line: 2925, column: 8, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 2925, column: 8)
!13441 = !DILocation(line: 2925, column: 17, scope: !13440)
!13442 = !DILocation(line: 2925, column: 8, scope: !13422)
!13443 = !DILocation(line: 2926, column: 14, scope: !13440)
!13444 = !DILocation(line: 2926, column: 5, scope: !13440)
!13445 = !DILocation(line: 2927, column: 11, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 2927, column: 4)
!13447 = !DILocation(line: 2927, column: 9, scope: !13446)
!13448 = !DILocation(line: 2927, column: 16, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 2927, column: 4)
!13450 = !DILocation(line: 2927, column: 18, scope: !13449)
!13451 = !DILocation(line: 2927, column: 4, scope: !13446)
!13452 = !DILocation(line: 2928, column: 10, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 2928, column: 9)
!13454 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 2927, column: 42)
!13455 = !DILocation(line: 2928, column: 17, scope: !13453)
!13456 = !DILocation(line: 2928, column: 15, scope: !13453)
!13457 = !DILocation(line: 2928, column: 23, scope: !13453)
!13458 = !DILocation(line: 2928, column: 30, scope: !13453)
!13459 = !DILocation(line: 2928, column: 20, scope: !13453)
!13460 = !DILocation(line: 2928, column: 9, scope: !13454)
!13461 = !DILocation(line: 2929, column: 6, scope: !13453)
!13462 = !DILocation(line: 2930, column: 42, scope: !13454)
!13463 = !DILocation(line: 2930, column: 44, scope: !13454)
!13464 = !DILocation(line: 2930, column: 38, scope: !13454)
!13465 = !DILocation(line: 2930, column: 15, scope: !13454)
!13466 = !DILocation(line: 2931, column: 9, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 2931, column: 9)
!13468 = !DILocation(line: 2931, column: 20, scope: !13467)
!13469 = !DILocation(line: 2931, column: 18, scope: !13467)
!13470 = !DILocation(line: 2931, column: 9, scope: !13454)
!13471 = !DILocation(line: 2932, column: 41, scope: !13467)
!13472 = !DILocation(line: 2932, column: 38, scope: !13467)
!13473 = !DILocation(line: 2932, column: 15, scope: !13467)
!13474 = !DILocation(line: 2932, column: 6, scope: !13467)
!13475 = !DILocation(line: 2933, column: 4, scope: !13454)
!13476 = !DILocation(line: 2927, column: 37, scope: !13449)
!13477 = !DILocation(line: 2927, column: 4, scope: !13449)
!13478 = distinct !{!13478, !13451, !13479}
!13479 = !DILocation(line: 2933, column: 4, scope: !13446)
!13480 = !DILocation(line: 2934, column: 35, scope: !13422)
!13481 = !DILocation(line: 2934, column: 41, scope: !13422)
!13482 = !DILocation(line: 2934, column: 14, scope: !13422)
!13483 = !DILocation(line: 2934, column: 12, scope: !13422)
!13484 = !DILocation(line: 2935, column: 14, scope: !13422)
!13485 = !DILocation(line: 2935, column: 13, scope: !13422)
!13486 = !DILocation(line: 2935, column: 24, scope: !13422)
!13487 = !DILocation(line: 2935, column: 32, scope: !13422)
!13488 = !DILocation(line: 2935, column: 4, scope: !13422)
!13489 = !DILocation(line: 2936, column: 12, scope: !13422)
!13490 = !DILocation(line: 2937, column: 3, scope: !13422)
!13491 = !DILocation(line: 2941, column: 17, scope: !13402)
!13492 = !DILocation(line: 2941, column: 35, scope: !13402)
!13493 = !DILocation(line: 2941, column: 32, scope: !13402)
!13494 = !DILocation(line: 2941, column: 42, scope: !13402)
!13495 = !DILocation(line: 2941, column: 14, scope: !13402)
!13496 = !DILocation(line: 2942, column: 7, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 2942, column: 7)
!13498 = !DILocation(line: 2942, column: 7, scope: !13402)
!13499 = !DILocation(line: 2943, column: 17, scope: !13497)
!13500 = !DILocation(line: 2943, column: 21, scope: !13497)
!13501 = !DILocation(line: 2943, column: 4, scope: !13497)
!13502 = !DILocation(line: 2944, column: 2, scope: !13402)
!13503 = !DILocation(line: 2893, column: 44, scope: !13396)
!13504 = !DILocation(line: 2893, column: 2, scope: !13396)
!13505 = distinct !{!13505, !13400, !13506}
!13506 = !DILocation(line: 2944, column: 2, scope: !13393)
!13507 = !DILocation(line: 2945, column: 9, scope: !13364)
!13508 = !DILocation(line: 2945, column: 2, scope: !13364)
!13509 = distinct !DISubprogram(name: "mv_dump_all_regs", scope: !3, file: !3, line: 1280, type: !13510, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13510 = !DISubroutineType(types: !13511)
!13511 = !{null, !1187, !260, !1200}
!13512 = !DILocalVariable(name: "mmio_base", arg: 1, scope: !13509, file: !3, line: 1280, type: !1187)
!13513 = !DILocation(line: 1280, column: 44, scope: !13509)
!13514 = !DILocalVariable(name: "port", arg: 2, scope: !13509, file: !3, line: 1280, type: !260)
!13515 = !DILocation(line: 1280, column: 59, scope: !13509)
!13516 = !DILocalVariable(name: "pdev", arg: 3, scope: !13509, file: !3, line: 1281, type: !1200)
!13517 = !DILocation(line: 1281, column: 25, scope: !13509)
!13518 = !DILocation(line: 1323, column: 1, scope: !13509)
!13519 = distinct !DISubprogram(name: "ata_qc_from_tag", scope: !204, file: !204, line: 1740, type: !13520, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13520 = !DISubroutineType(types: !13521)
!13521 = !{!6831, !6835, !7}
!13522 = !DILocalVariable(name: "ap", arg: 1, scope: !13519, file: !204, line: 1740, type: !6835)
!13523 = !DILocation(line: 1740, column: 71, scope: !13519)
!13524 = !DILocalVariable(name: "tag", arg: 2, scope: !13519, file: !204, line: 1741, type: !7)
!13525 = !DILocation(line: 1741, column: 25, scope: !13519)
!13526 = !DILocalVariable(name: "qc", scope: !13519, file: !204, line: 1743, type: !6831)
!13527 = !DILocation(line: 1743, column: 25, scope: !13519)
!13528 = !DILocation(line: 1743, column: 48, scope: !13519)
!13529 = !DILocation(line: 1743, column: 52, scope: !13519)
!13530 = !DILocation(line: 1743, column: 30, scope: !13519)
!13531 = !DILocation(line: 1745, column: 6, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13519, file: !204, line: 1745, column: 6)
!13533 = !DILocation(line: 1745, column: 20, scope: !13532)
!13534 = !DILocation(line: 1745, column: 24, scope: !13532)
!13535 = !DILocation(line: 1745, column: 28, scope: !13532)
!13536 = !DILocation(line: 1745, column: 33, scope: !13532)
!13537 = !DILocation(line: 1745, column: 6, scope: !13519)
!13538 = !DILocation(line: 1746, column: 10, scope: !13532)
!13539 = !DILocation(line: 1746, column: 3, scope: !13532)
!13540 = !DILocation(line: 1748, column: 7, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13519, file: !204, line: 1748, column: 6)
!13542 = !DILocation(line: 1748, column: 11, scope: !13541)
!13543 = !DILocation(line: 1748, column: 17, scope: !13541)
!13544 = !DILocation(line: 1749, column: 26, scope: !13541)
!13545 = !DILocation(line: 1748, column: 6, scope: !13519)
!13546 = !DILocation(line: 1750, column: 10, scope: !13541)
!13547 = !DILocation(line: 1750, column: 3, scope: !13541)
!13548 = !DILocation(line: 1752, column: 2, scope: !13519)
!13549 = !DILocation(line: 1753, column: 1, scope: !13519)
!13550 = distinct !DISubprogram(name: "__ata_qc_from_tag", scope: !204, file: !204, line: 1732, type: !13520, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13551 = !DILocalVariable(name: "ap", arg: 1, scope: !13550, file: !204, line: 1732, type: !6835)
!13552 = !DILocation(line: 1732, column: 73, scope: !13550)
!13553 = !DILocalVariable(name: "tag", arg: 2, scope: !13550, file: !204, line: 1733, type: !7)
!13554 = !DILocation(line: 1733, column: 27, scope: !13550)
!13555 = !DILocation(line: 1735, column: 20, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13550, file: !204, line: 1735, column: 6)
!13557 = !DILocation(line: 1735, column: 6, scope: !13556)
!13558 = !DILocation(line: 1735, column: 6, scope: !13550)
!13559 = !DILocation(line: 1736, column: 11, scope: !13556)
!13560 = !DILocation(line: 1736, column: 15, scope: !13556)
!13561 = !DILocation(line: 1736, column: 20, scope: !13556)
!13562 = !DILocation(line: 1736, column: 3, scope: !13556)
!13563 = !DILocation(line: 1737, column: 2, scope: !13550)
!13564 = !DILocation(line: 1738, column: 1, scope: !13550)
!13565 = distinct !DISubprogram(name: "ata_tag_valid", scope: !204, file: !204, line: 1545, type: !13566, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{!1554, !7}
!13568 = !DILocalVariable(name: "tag", arg: 1, scope: !13565, file: !204, line: 1545, type: !7)
!13569 = !DILocation(line: 1545, column: 47, scope: !13565)
!13570 = !DILocation(line: 1547, column: 9, scope: !13565)
!13571 = !DILocation(line: 1547, column: 13, scope: !13565)
!13572 = !DILocation(line: 1547, column: 29, scope: !13565)
!13573 = !DILocation(line: 1547, column: 49, scope: !13565)
!13574 = !DILocation(line: 1547, column: 32, scope: !13565)
!13575 = !DILocation(line: 1547, column: 2, scope: !13565)
!13576 = distinct !DISubprogram(name: "ata_tag_internal", scope: !204, file: !204, line: 1540, type: !13566, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13577 = !DILocalVariable(name: "tag", arg: 1, scope: !13576, file: !204, line: 1540, type: !7)
!13578 = !DILocation(line: 1540, column: 50, scope: !13576)
!13579 = !DILocation(line: 1542, column: 9, scope: !13576)
!13580 = !DILocation(line: 1542, column: 13, scope: !13576)
!13581 = !DILocation(line: 1542, column: 2, scope: !13576)
!13582 = distinct !DISubprogram(name: "mv_port_intr", scope: !3, file: !3, line: 2841, type: !13583, scopeLine: 2842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13583 = !DISubroutineType(types: !13584)
!13584 = !{null, !6835, !1266}
!13585 = !DILocalVariable(name: "ap", arg: 1, scope: !13582, file: !3, line: 2841, type: !6835)
!13586 = !DILocation(line: 2841, column: 43, scope: !13582)
!13587 = !DILocalVariable(name: "port_cause", arg: 2, scope: !13582, file: !3, line: 2841, type: !1266)
!13588 = !DILocation(line: 2841, column: 51, scope: !13582)
!13589 = !DILocalVariable(name: "pp", scope: !13582, file: !3, line: 2843, type: !8689)
!13590 = !DILocation(line: 2843, column: 23, scope: !13582)
!13591 = !DILocalVariable(name: "edma_was_enabled", scope: !13582, file: !3, line: 2844, type: !260)
!13592 = !DILocation(line: 2844, column: 6, scope: !13582)
!13593 = !DILocation(line: 2851, column: 7, scope: !13582)
!13594 = !DILocation(line: 2851, column: 11, scope: !13582)
!13595 = !DILocation(line: 2851, column: 5, scope: !13582)
!13596 = !DILocation(line: 2852, column: 22, scope: !13582)
!13597 = !DILocation(line: 2852, column: 26, scope: !13582)
!13598 = !DILocation(line: 2852, column: 35, scope: !13582)
!13599 = !DILocation(line: 2852, column: 19, scope: !13582)
!13600 = !DILocation(line: 2856, column: 6, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 2856, column: 6)
!13602 = !DILocation(line: 2856, column: 23, scope: !13601)
!13603 = !DILocation(line: 2856, column: 27, scope: !13601)
!13604 = !DILocation(line: 2856, column: 38, scope: !13601)
!13605 = !DILocation(line: 2856, column: 6, scope: !13582)
!13606 = !DILocation(line: 2857, column: 27, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13601, file: !3, line: 2856, column: 51)
!13608 = !DILocation(line: 2857, column: 31, scope: !13607)
!13609 = !DILocation(line: 2857, column: 3, scope: !13607)
!13610 = !DILocation(line: 2858, column: 7, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 2858, column: 7)
!13612 = !DILocation(line: 2858, column: 11, scope: !13611)
!13613 = !DILocation(line: 2858, column: 20, scope: !13611)
!13614 = !DILocation(line: 2858, column: 7, scope: !13607)
!13615 = !DILocation(line: 2859, column: 30, scope: !13611)
!13616 = !DILocation(line: 2859, column: 4, scope: !13611)
!13617 = !DILocation(line: 2860, column: 2, scope: !13607)
!13618 = !DILocation(line: 2864, column: 6, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 2864, column: 6)
!13620 = !DILocation(line: 2864, column: 6, scope: !13582)
!13621 = !DILocation(line: 2865, column: 15, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 2864, column: 38)
!13623 = !DILocation(line: 2865, column: 3, scope: !13622)
!13624 = !DILocation(line: 2866, column: 2, scope: !13622)
!13625 = !DILocation(line: 2866, column: 14, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 2866, column: 13)
!13627 = !DILocation(line: 2866, column: 13, scope: !13619)
!13628 = !DILocalVariable(name: "qc", scope: !13629, file: !3, line: 2867, type: !6831)
!13629 = distinct !DILexicalBlock(scope: !13626, file: !3, line: 2866, column: 32)
!13630 = !DILocation(line: 2867, column: 26, scope: !13629)
!13631 = !DILocation(line: 2867, column: 48, scope: !13629)
!13632 = !DILocation(line: 2867, column: 31, scope: !13629)
!13633 = !DILocation(line: 2868, column: 7, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 2868, column: 7)
!13635 = !DILocation(line: 2868, column: 7, scope: !13629)
!13636 = !DILocation(line: 2869, column: 24, scope: !13634)
!13637 = !DILocation(line: 2869, column: 28, scope: !13634)
!13638 = !DILocation(line: 2869, column: 4, scope: !13634)
!13639 = !DILocation(line: 2871, column: 23, scope: !13634)
!13640 = !DILocation(line: 2871, column: 27, scope: !13634)
!13641 = !DILocation(line: 2871, column: 4, scope: !13634)
!13642 = !DILocation(line: 2872, column: 2, scope: !13629)
!13643 = !DILocation(line: 2873, column: 1, scope: !13582)
!13644 = distinct !DISubprogram(name: "mv_process_crpb_entries", scope: !3, file: !3, line: 2799, type: !13645, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13645 = !DISubroutineType(types: !13646)
!13646 = !{null, !6835, !8689}
!13647 = !DILocalVariable(name: "ap", arg: 1, scope: !13644, file: !3, line: 2799, type: !6835)
!13648 = !DILocation(line: 2799, column: 54, scope: !13644)
!13649 = !DILocalVariable(name: "pp", arg: 2, scope: !13644, file: !3, line: 2799, type: !8689)
!13650 = !DILocation(line: 2799, column: 79, scope: !13644)
!13651 = !DILocalVariable(name: "port_mmio", scope: !13644, file: !3, line: 2801, type: !1187)
!13652 = !DILocation(line: 2801, column: 16, scope: !13644)
!13653 = !DILocation(line: 2801, column: 39, scope: !13644)
!13654 = !DILocation(line: 2801, column: 28, scope: !13644)
!13655 = !DILocalVariable(name: "hpriv", scope: !13644, file: !3, line: 2802, type: !7763)
!13656 = !DILocation(line: 2802, column: 23, scope: !13644)
!13657 = !DILocation(line: 2802, column: 31, scope: !13644)
!13658 = !DILocation(line: 2802, column: 35, scope: !13644)
!13659 = !DILocation(line: 2802, column: 41, scope: !13644)
!13660 = !DILocalVariable(name: "in_index", scope: !13644, file: !3, line: 2803, type: !1266)
!13661 = !DILocation(line: 2803, column: 6, scope: !13644)
!13662 = !DILocalVariable(name: "work_done", scope: !13644, file: !3, line: 2804, type: !1554)
!13663 = !DILocation(line: 2804, column: 7, scope: !13644)
!13664 = !DILocalVariable(name: "done_mask", scope: !13644, file: !3, line: 2805, type: !1266)
!13665 = !DILocation(line: 2805, column: 6, scope: !13644)
!13666 = !DILocalVariable(name: "ncq_enabled", scope: !13644, file: !3, line: 2806, type: !260)
!13667 = !DILocation(line: 2806, column: 6, scope: !13644)
!13668 = !DILocation(line: 2806, column: 21, scope: !13644)
!13669 = !DILocation(line: 2806, column: 25, scope: !13644)
!13670 = !DILocation(line: 2806, column: 34, scope: !13644)
!13671 = !DILocation(line: 2809, column: 20, scope: !13644)
!13672 = !DILocation(line: 2809, column: 30, scope: !13644)
!13673 = !DILocation(line: 2809, column: 14, scope: !13644)
!13674 = !DILocation(line: 2810, column: 4, scope: !13644)
!13675 = !DILocation(line: 2810, column: 29, scope: !13644)
!13676 = !DILocation(line: 2809, column: 11, scope: !13644)
!13677 = !DILocation(line: 2813, column: 2, scope: !13644)
!13678 = !DILocation(line: 2813, column: 9, scope: !13644)
!13679 = !DILocation(line: 2813, column: 21, scope: !13644)
!13680 = !DILocation(line: 2813, column: 25, scope: !13644)
!13681 = !DILocation(line: 2813, column: 18, scope: !13644)
!13682 = !DILocalVariable(name: "tag", scope: !13683, file: !3, line: 2814, type: !7)
!13683 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 2813, column: 35)
!13684 = !DILocation(line: 2814, column: 16, scope: !13683)
!13685 = !DILocalVariable(name: "response", scope: !13683, file: !3, line: 2815, type: !8705)
!13686 = !DILocation(line: 2815, column: 19, scope: !13683)
!13687 = !DILocation(line: 2815, column: 31, scope: !13683)
!13688 = !DILocation(line: 2815, column: 35, scope: !13683)
!13689 = !DILocation(line: 2815, column: 40, scope: !13683)
!13690 = !DILocation(line: 2815, column: 44, scope: !13683)
!13691 = !DILocation(line: 2817, column: 19, scope: !13683)
!13692 = !DILocation(line: 2817, column: 23, scope: !13683)
!13693 = !DILocation(line: 2817, column: 32, scope: !13683)
!13694 = !DILocation(line: 2817, column: 37, scope: !13683)
!13695 = !DILocation(line: 2817, column: 3, scope: !13683)
!13696 = !DILocation(line: 2817, column: 7, scope: !13683)
!13697 = !DILocation(line: 2817, column: 16, scope: !13683)
!13698 = !DILocation(line: 2819, column: 7, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 2819, column: 7)
!13700 = !DILocation(line: 2819, column: 7, scope: !13683)
!13701 = !DILocation(line: 2821, column: 10, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13699, file: !3, line: 2819, column: 24)
!13703 = !DILocation(line: 2821, column: 14, scope: !13702)
!13704 = !DILocation(line: 2821, column: 19, scope: !13702)
!13705 = !DILocation(line: 2821, column: 8, scope: !13702)
!13706 = !DILocation(line: 2822, column: 3, scope: !13702)
!13707 = !DILocation(line: 2824, column: 10, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13699, file: !3, line: 2822, column: 10)
!13709 = !DILocation(line: 2824, column: 36, scope: !13708)
!13710 = !DILocation(line: 2824, column: 8, scope: !13708)
!13711 = !DILocation(line: 2826, column: 32, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 2826, column: 7)
!13713 = !DILocation(line: 2826, column: 36, scope: !13712)
!13714 = !DILocation(line: 2826, column: 46, scope: !13712)
!13715 = !DILocation(line: 2826, column: 51, scope: !13712)
!13716 = !DILocation(line: 2826, column: 7, scope: !13712)
!13717 = !DILocation(line: 2826, column: 7, scope: !13683)
!13718 = !DILocation(line: 2827, column: 22, scope: !13712)
!13719 = !DILocation(line: 2827, column: 19, scope: !13712)
!13720 = !DILocation(line: 2827, column: 14, scope: !13712)
!13721 = !DILocation(line: 2827, column: 4, scope: !13712)
!13722 = !DILocation(line: 2828, column: 13, scope: !13683)
!13723 = distinct !{!13723, !13677, !13724}
!13724 = !DILocation(line: 2829, column: 2, scope: !13644)
!13725 = !DILocation(line: 2831, column: 6, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 2831, column: 6)
!13727 = !DILocation(line: 2831, column: 6, scope: !13644)
!13728 = !DILocation(line: 2832, column: 28, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 2831, column: 17)
!13730 = !DILocation(line: 2832, column: 50, scope: !13729)
!13731 = !DILocation(line: 2832, column: 32, scope: !13729)
!13732 = !DILocation(line: 2832, column: 56, scope: !13729)
!13733 = !DILocation(line: 2832, column: 54, scope: !13729)
!13734 = !DILocation(line: 2832, column: 3, scope: !13729)
!13735 = !DILocation(line: 2835, column: 13, scope: !13729)
!13736 = !DILocation(line: 2835, column: 17, scope: !13729)
!13737 = !DILocation(line: 2835, column: 26, scope: !13729)
!13738 = !DILocation(line: 2836, column: 6, scope: !13729)
!13739 = !DILocation(line: 2836, column: 10, scope: !13729)
!13740 = !DILocation(line: 2836, column: 19, scope: !13729)
!13741 = !DILocation(line: 2836, column: 5, scope: !13729)
!13742 = !DILocation(line: 2835, column: 53, scope: !13729)
!13743 = !DILocation(line: 2837, column: 5, scope: !13729)
!13744 = !DILocation(line: 2837, column: 15, scope: !13729)
!13745 = !DILocation(line: 2835, column: 3, scope: !13729)
!13746 = !DILocation(line: 2838, column: 2, scope: !13729)
!13747 = !DILocation(line: 2839, column: 1, scope: !13644)
!13748 = distinct !DISubprogram(name: "mv_handle_fbs_ncq_dev_err", scope: !3, file: !3, line: 2503, type: !7599, scopeLine: 2504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13749 = !DILocalVariable(name: "ap", arg: 1, scope: !13748, file: !3, line: 2503, type: !6835)
!13750 = !DILocation(line: 2503, column: 55, scope: !13748)
!13751 = !DILocalVariable(name: "pp", scope: !13748, file: !3, line: 2505, type: !8689)
!13752 = !DILocation(line: 2505, column: 23, scope: !13748)
!13753 = !DILocation(line: 2505, column: 28, scope: !13748)
!13754 = !DILocation(line: 2505, column: 32, scope: !13748)
!13755 = !DILocalVariable(name: "failed_links", scope: !13748, file: !3, line: 2506, type: !260)
!13756 = !DILocation(line: 2506, column: 6, scope: !13748)
!13757 = !DILocalVariable(name: "old_map", scope: !13748, file: !3, line: 2507, type: !7)
!13758 = !DILocation(line: 2507, column: 15, scope: !13748)
!13759 = !DILocalVariable(name: "new_map", scope: !13748, file: !3, line: 2507, type: !7)
!13760 = !DILocation(line: 2507, column: 24, scope: !13748)
!13761 = !DILocation(line: 2517, column: 8, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 2517, column: 6)
!13763 = !DILocation(line: 2517, column: 12, scope: !13762)
!13764 = !DILocation(line: 2517, column: 21, scope: !13762)
!13765 = !DILocation(line: 2517, column: 6, scope: !13748)
!13766 = !DILocation(line: 2518, column: 3, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13762, file: !3, line: 2517, column: 47)
!13768 = !DILocation(line: 2518, column: 7, scope: !13767)
!13769 = !DILocation(line: 2518, column: 16, scope: !13767)
!13770 = !DILocation(line: 2519, column: 3, scope: !13767)
!13771 = !DILocation(line: 2519, column: 7, scope: !13767)
!13772 = !DILocation(line: 2519, column: 26, scope: !13767)
!13773 = !DILocation(line: 2520, column: 2, scope: !13767)
!13774 = !DILocation(line: 2521, column: 12, scope: !13748)
!13775 = !DILocation(line: 2521, column: 16, scope: !13748)
!13776 = !DILocation(line: 2521, column: 10, scope: !13748)
!13777 = !DILocation(line: 2522, column: 12, scope: !13748)
!13778 = !DILocation(line: 2522, column: 41, scope: !13748)
!13779 = !DILocation(line: 2522, column: 22, scope: !13748)
!13780 = !DILocation(line: 2522, column: 20, scope: !13748)
!13781 = !DILocation(line: 2522, column: 10, scope: !13748)
!13782 = !DILocation(line: 2524, column: 6, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 2524, column: 6)
!13784 = !DILocation(line: 2524, column: 17, scope: !13783)
!13785 = !DILocation(line: 2524, column: 14, scope: !13783)
!13786 = !DILocation(line: 2524, column: 6, scope: !13748)
!13787 = !DILocation(line: 2525, column: 28, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13783, file: !3, line: 2524, column: 26)
!13789 = !DILocation(line: 2525, column: 3, scope: !13788)
!13790 = !DILocation(line: 2525, column: 7, scope: !13788)
!13791 = !DILocation(line: 2525, column: 26, scope: !13788)
!13792 = !DILocation(line: 2526, column: 18, scope: !13788)
!13793 = !DILocation(line: 2526, column: 22, scope: !13788)
!13794 = !DILocation(line: 2526, column: 33, scope: !13788)
!13795 = !DILocation(line: 2526, column: 32, scope: !13788)
!13796 = !DILocation(line: 2526, column: 30, scope: !13788)
!13797 = !DILocation(line: 2526, column: 3, scope: !13788)
!13798 = !DILocation(line: 2527, column: 2, scope: !13788)
!13799 = !DILocation(line: 2528, column: 17, scope: !13748)
!13800 = !DILocation(line: 2528, column: 15, scope: !13748)
!13801 = !DILocation(line: 2530, column: 2, scope: !13748)
!13802 = !DILocation(line: 2536, column: 6, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 2536, column: 6)
!13804 = !DILocation(line: 2536, column: 10, scope: !13803)
!13805 = !DILocation(line: 2536, column: 29, scope: !13803)
!13806 = !DILocation(line: 2536, column: 26, scope: !13803)
!13807 = !DILocation(line: 2536, column: 42, scope: !13803)
!13808 = !DILocation(line: 2536, column: 60, scope: !13803)
!13809 = !DILocation(line: 2536, column: 45, scope: !13803)
!13810 = !DILocation(line: 2536, column: 6, scope: !13748)
!13811 = !DILocation(line: 2537, column: 27, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 2536, column: 65)
!13813 = !DILocation(line: 2537, column: 31, scope: !13812)
!13814 = !DILocation(line: 2537, column: 3, scope: !13812)
!13815 = !DILocation(line: 2538, column: 16, scope: !13812)
!13816 = !DILocation(line: 2538, column: 3, scope: !13812)
!13817 = !DILocation(line: 2539, column: 16, scope: !13812)
!13818 = !DILocation(line: 2539, column: 3, scope: !13812)
!13819 = !DILocation(line: 2540, column: 3, scope: !13812)
!13820 = !DILocation(line: 2541, column: 3, scope: !13812)
!13821 = !DILocation(line: 2543, column: 2, scope: !13748)
!13822 = !DILocation(line: 2544, column: 2, scope: !13748)
!13823 = !DILocation(line: 2545, column: 1, scope: !13748)
!13824 = distinct !DISubprogram(name: "mv_err_intr", scope: !3, file: !3, line: 2636, type: !7627, scopeLine: 2637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!13825 = !DILocalVariable(name: "ap", arg: 1, scope: !13824, file: !3, line: 2636, type: !6835)
!13826 = !DILocation(line: 2636, column: 42, scope: !13824)
!13827 = !DILocalVariable(name: "port_mmio", scope: !13824, file: !3, line: 2638, type: !1187)
!13828 = !DILocation(line: 2638, column: 16, scope: !13824)
!13829 = !DILocation(line: 2638, column: 39, scope: !13824)
!13830 = !DILocation(line: 2638, column: 28, scope: !13824)
!13831 = !DILocalVariable(name: "edma_err_cause", scope: !13824, file: !3, line: 2639, type: !1266)
!13832 = !DILocation(line: 2639, column: 6, scope: !13824)
!13833 = !DILocalVariable(name: "eh_freeze_mask", scope: !13824, file: !3, line: 2639, type: !1266)
!13834 = !DILocation(line: 2639, column: 22, scope: !13824)
!13835 = !DILocalVariable(name: "serr", scope: !13824, file: !3, line: 2639, type: !1266)
!13836 = !DILocation(line: 2639, column: 38, scope: !13824)
!13837 = !DILocalVariable(name: "fis_cause", scope: !13824, file: !3, line: 2640, type: !1266)
!13838 = !DILocation(line: 2640, column: 6, scope: !13824)
!13839 = !DILocalVariable(name: "pp", scope: !13824, file: !3, line: 2641, type: !8689)
!13840 = !DILocation(line: 2641, column: 23, scope: !13824)
!13841 = !DILocation(line: 2641, column: 28, scope: !13824)
!13842 = !DILocation(line: 2641, column: 32, scope: !13824)
!13843 = !DILocalVariable(name: "hpriv", scope: !13824, file: !3, line: 2642, type: !7763)
!13844 = !DILocation(line: 2642, column: 23, scope: !13824)
!13845 = !DILocation(line: 2642, column: 31, scope: !13824)
!13846 = !DILocation(line: 2642, column: 35, scope: !13824)
!13847 = !DILocation(line: 2642, column: 41, scope: !13824)
!13848 = !DILocalVariable(name: "action", scope: !13824, file: !3, line: 2643, type: !7)
!13849 = !DILocation(line: 2643, column: 15, scope: !13824)
!13850 = !DILocalVariable(name: "err_mask", scope: !13824, file: !3, line: 2643, type: !7)
!13851 = !DILocation(line: 2643, column: 27, scope: !13824)
!13852 = !DILocalVariable(name: "ehi", scope: !13824, file: !3, line: 2644, type: !13273)
!13853 = !DILocation(line: 2644, column: 22, scope: !13824)
!13854 = !DILocation(line: 2644, column: 29, scope: !13824)
!13855 = !DILocation(line: 2644, column: 33, scope: !13824)
!13856 = !DILocation(line: 2644, column: 38, scope: !13824)
!13857 = !DILocalVariable(name: "qc", scope: !13824, file: !3, line: 2645, type: !6831)
!13858 = !DILocation(line: 2645, column: 25, scope: !13824)
!13859 = !DILocalVariable(name: "abort", scope: !13824, file: !3, line: 2646, type: !260)
!13860 = !DILocation(line: 2646, column: 6, scope: !13824)
!13861 = !DILocation(line: 2653, column: 17, scope: !13824)
!13862 = !DILocation(line: 2653, column: 21, scope: !13824)
!13863 = !DILocation(line: 2653, column: 2, scope: !13824)
!13864 = !DILocation(line: 2654, column: 24, scope: !13824)
!13865 = !DILocation(line: 2654, column: 28, scope: !13824)
!13866 = !DILocation(line: 2654, column: 45, scope: !13824)
!13867 = !DILocation(line: 2654, column: 2, scope: !13824)
!13868 = !DILocation(line: 2656, column: 25, scope: !13824)
!13869 = !DILocation(line: 2656, column: 35, scope: !13824)
!13870 = !DILocation(line: 2656, column: 19, scope: !13824)
!13871 = !DILocation(line: 2656, column: 17, scope: !13824)
!13872 = !DILocation(line: 2657, column: 6, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2657, column: 6)
!13874 = !DILocation(line: 2657, column: 24, scope: !13873)
!13875 = !DILocation(line: 2657, column: 28, scope: !13873)
!13876 = !DILocation(line: 2657, column: 43, scope: !13873)
!13877 = !DILocation(line: 2657, column: 6, scope: !13824)
!13878 = !DILocation(line: 2658, column: 21, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 2657, column: 68)
!13880 = !DILocation(line: 2658, column: 31, scope: !13879)
!13881 = !DILocation(line: 2658, column: 15, scope: !13879)
!13882 = !DILocation(line: 2658, column: 13, scope: !13879)
!13883 = !DILocation(line: 2659, column: 13, scope: !13879)
!13884 = !DILocation(line: 2659, column: 12, scope: !13879)
!13885 = !DILocation(line: 2659, column: 24, scope: !13879)
!13886 = !DILocation(line: 2659, column: 34, scope: !13879)
!13887 = !DILocation(line: 2659, column: 3, scope: !13879)
!13888 = !DILocation(line: 2660, column: 2, scope: !13879)
!13889 = !DILocation(line: 2661, column: 12, scope: !13824)
!13890 = !DILocation(line: 2661, column: 11, scope: !13824)
!13891 = !DILocation(line: 2661, column: 28, scope: !13824)
!13892 = !DILocation(line: 2661, column: 38, scope: !13824)
!13893 = !DILocation(line: 2661, column: 2, scope: !13824)
!13894 = !DILocation(line: 2663, column: 6, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2663, column: 6)
!13896 = !DILocation(line: 2663, column: 21, scope: !13895)
!13897 = !DILocation(line: 2663, column: 6, scope: !13824)
!13898 = !DILocation(line: 2668, column: 25, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13900, file: !3, line: 2668, column: 7)
!13900 = distinct !DILexicalBlock(scope: !13895, file: !3, line: 2663, column: 37)
!13901 = !DILocation(line: 2668, column: 29, scope: !13899)
!13902 = !DILocation(line: 2668, column: 7, scope: !13899)
!13903 = !DILocation(line: 2668, column: 7, scope: !13900)
!13904 = !DILocation(line: 2669, column: 4, scope: !13899)
!13905 = !DILocation(line: 2670, column: 2, scope: !13900)
!13906 = !DILocation(line: 2672, column: 24, scope: !13824)
!13907 = !DILocation(line: 2672, column: 7, scope: !13824)
!13908 = !DILocation(line: 2672, column: 5, scope: !13824)
!13909 = !DILocation(line: 2673, column: 21, scope: !13824)
!13910 = !DILocation(line: 2673, column: 2, scope: !13824)
!13911 = !DILocation(line: 2674, column: 20, scope: !13824)
!13912 = !DILocation(line: 2675, column: 6, scope: !13824)
!13913 = !DILocation(line: 2675, column: 22, scope: !13824)
!13914 = !DILocation(line: 2675, column: 26, scope: !13824)
!13915 = !DILocation(line: 2674, column: 2, scope: !13824)
!13916 = !DILocation(line: 2677, column: 6, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2677, column: 6)
!13918 = !DILocation(line: 2677, column: 24, scope: !13917)
!13919 = !DILocation(line: 2677, column: 28, scope: !13917)
!13920 = !DILocation(line: 2677, column: 43, scope: !13917)
!13921 = !DILocation(line: 2677, column: 6, scope: !13824)
!13922 = !DILocation(line: 2678, column: 21, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13917, file: !3, line: 2677, column: 68)
!13924 = !DILocation(line: 2678, column: 44, scope: !13923)
!13925 = !DILocation(line: 2678, column: 3, scope: !13923)
!13926 = !DILocation(line: 2679, column: 7, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13923, file: !3, line: 2679, column: 7)
!13928 = !DILocation(line: 2679, column: 17, scope: !13927)
!13929 = !DILocation(line: 2679, column: 7, scope: !13923)
!13930 = !DILocalVariable(name: "ec", scope: !13931, file: !3, line: 2680, type: !1266)
!13931 = distinct !DILexicalBlock(scope: !13927, file: !3, line: 2679, column: 37)
!13932 = !DILocation(line: 2680, column: 8, scope: !13931)
!13933 = !DILocation(line: 2680, column: 13, scope: !13931)
!13934 = !DILocation(line: 2680, column: 28, scope: !13931)
!13935 = !DILocation(line: 2682, column: 28, scope: !13931)
!13936 = !DILocation(line: 2682, column: 4, scope: !13931)
!13937 = !DILocation(line: 2683, column: 9, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13931, file: !3, line: 2683, column: 8)
!13939 = !DILocation(line: 2683, column: 8, scope: !13931)
!13940 = !DILocation(line: 2684, column: 5, scope: !13938)
!13941 = !DILocation(line: 2685, column: 22, scope: !13931)
!13942 = !DILocation(line: 2685, column: 4, scope: !13931)
!13943 = !DILocation(line: 2686, column: 3, scope: !13931)
!13944 = !DILocation(line: 2687, column: 2, scope: !13923)
!13945 = !DILocation(line: 2691, column: 6, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2691, column: 6)
!13947 = !DILocation(line: 2691, column: 21, scope: !13946)
!13948 = !DILocation(line: 2691, column: 6, scope: !13824)
!13949 = !DILocation(line: 2692, column: 12, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13946, file: !3, line: 2691, column: 37)
!13951 = !DILocation(line: 2693, column: 10, scope: !13950)
!13952 = !DILocation(line: 2694, column: 21, scope: !13950)
!13953 = !DILocation(line: 2694, column: 3, scope: !13950)
!13954 = !DILocation(line: 2695, column: 2, scope: !13950)
!13955 = !DILocation(line: 2696, column: 6, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2696, column: 6)
!13957 = !DILocation(line: 2696, column: 21, scope: !13956)
!13958 = !DILocation(line: 2696, column: 6, scope: !13824)
!13959 = !DILocation(line: 2699, column: 12, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13956, file: !3, line: 2698, column: 25)
!13961 = !DILocation(line: 2700, column: 10, scope: !13960)
!13962 = !DILocation(line: 2701, column: 21, scope: !13960)
!13963 = !DILocation(line: 2701, column: 3, scope: !13960)
!13964 = !DILocation(line: 2702, column: 2, scope: !13960)
!13965 = !DILocation(line: 2703, column: 6, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2703, column: 6)
!13967 = !DILocation(line: 2703, column: 21, scope: !13966)
!13968 = !DILocation(line: 2703, column: 6, scope: !13824)
!13969 = !DILocation(line: 2704, column: 22, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 2703, column: 63)
!13971 = !DILocation(line: 2704, column: 3, scope: !13970)
!13972 = !DILocation(line: 2705, column: 21, scope: !13970)
!13973 = !DILocation(line: 2705, column: 26, scope: !13970)
!13974 = !DILocation(line: 2705, column: 41, scope: !13970)
!13975 = !DILocation(line: 2705, column: 3, scope: !13970)
!13976 = !DILocation(line: 2707, column: 10, scope: !13970)
!13977 = !DILocation(line: 2708, column: 2, scope: !13970)
!13978 = !DILocation(line: 2714, column: 6, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2714, column: 6)
!13980 = !DILocation(line: 2714, column: 6, scope: !13824)
!13981 = !DILocation(line: 2715, column: 18, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13979, file: !3, line: 2714, column: 23)
!13983 = !DILocation(line: 2716, column: 7, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13982, file: !3, line: 2716, column: 7)
!13985 = !DILocation(line: 2716, column: 22, scope: !13984)
!13986 = !DILocation(line: 2716, column: 7, scope: !13982)
!13987 = !DILocation(line: 2717, column: 4, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13984, file: !3, line: 2716, column: 45)
!13989 = !DILocation(line: 2717, column: 8, scope: !13988)
!13990 = !DILocation(line: 2717, column: 17, scope: !13988)
!13991 = !DILocation(line: 2718, column: 22, scope: !13988)
!13992 = !DILocation(line: 2718, column: 4, scope: !13988)
!13993 = !DILocation(line: 2719, column: 3, scope: !13988)
!13994 = !DILocation(line: 2720, column: 2, scope: !13982)
!13995 = !DILocation(line: 2721, column: 18, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13979, file: !3, line: 2720, column: 9)
!13997 = !DILocation(line: 2722, column: 7, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2722, column: 7)
!13999 = !DILocation(line: 2722, column: 22, scope: !13998)
!14000 = !DILocation(line: 2722, column: 7, scope: !13996)
!14001 = !DILocation(line: 2723, column: 4, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13998, file: !3, line: 2722, column: 43)
!14003 = !DILocation(line: 2723, column: 8, scope: !14002)
!14004 = !DILocation(line: 2723, column: 17, scope: !14002)
!14005 = !DILocation(line: 2724, column: 22, scope: !14002)
!14006 = !DILocation(line: 2724, column: 4, scope: !14002)
!14007 = !DILocation(line: 2725, column: 3, scope: !14002)
!14008 = !DILocation(line: 2726, column: 7, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2726, column: 7)
!14010 = !DILocation(line: 2726, column: 22, scope: !14009)
!14011 = !DILocation(line: 2726, column: 7, scope: !13996)
!14012 = !DILocation(line: 2727, column: 22, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14009, file: !3, line: 2726, column: 39)
!14014 = !DILocation(line: 2727, column: 42, scope: !14013)
!14015 = !DILocation(line: 2727, column: 4, scope: !14013)
!14016 = !DILocation(line: 2728, column: 13, scope: !14013)
!14017 = !DILocation(line: 2729, column: 11, scope: !14013)
!14018 = !DILocation(line: 2730, column: 3, scope: !14013)
!14019 = !DILocation(line: 2733, column: 7, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2733, column: 6)
!14021 = !DILocation(line: 2733, column: 6, scope: !13824)
!14022 = !DILocation(line: 2734, column: 12, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 2733, column: 17)
!14024 = !DILocation(line: 2735, column: 10, scope: !14023)
!14025 = !DILocation(line: 2736, column: 2, scope: !14023)
!14026 = !DILocation(line: 2738, column: 17, scope: !13824)
!14027 = !DILocation(line: 2738, column: 2, scope: !13824)
!14028 = !DILocation(line: 2738, column: 7, scope: !13824)
!14029 = !DILocation(line: 2738, column: 14, scope: !13824)
!14030 = !DILocation(line: 2739, column: 17, scope: !13824)
!14031 = !DILocation(line: 2739, column: 2, scope: !13824)
!14032 = !DILocation(line: 2739, column: 7, scope: !13824)
!14033 = !DILocation(line: 2739, column: 14, scope: !13824)
!14034 = !DILocation(line: 2741, column: 6, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2741, column: 6)
!14036 = !DILocation(line: 2741, column: 6, scope: !13824)
!14037 = !DILocation(line: 2742, column: 19, scope: !14035)
!14038 = !DILocation(line: 2742, column: 3, scope: !14035)
!14039 = !DILocation(line: 2742, column: 7, scope: !14035)
!14040 = !DILocation(line: 2742, column: 16, scope: !14035)
!14041 = !DILocation(line: 2744, column: 20, scope: !14035)
!14042 = !DILocation(line: 2744, column: 3, scope: !14035)
!14043 = !DILocation(line: 2744, column: 8, scope: !14035)
!14044 = !DILocation(line: 2744, column: 17, scope: !14035)
!14045 = !DILocation(line: 2746, column: 6, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2746, column: 6)
!14047 = !DILocation(line: 2746, column: 15, scope: !14046)
!14048 = !DILocation(line: 2746, column: 6, scope: !13824)
!14049 = !DILocation(line: 2752, column: 16, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14046, file: !3, line: 2746, column: 30)
!14051 = !DILocation(line: 2752, column: 3, scope: !14050)
!14052 = !DILocation(line: 2753, column: 9, scope: !14050)
!14053 = !DILocation(line: 2754, column: 2, scope: !14050)
!14054 = !DILocation(line: 2754, column: 13, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14046, file: !3, line: 2754, column: 13)
!14056 = !DILocation(line: 2754, column: 30, scope: !14055)
!14057 = !DILocation(line: 2754, column: 28, scope: !14055)
!14058 = !DILocation(line: 2754, column: 13, scope: !14046)
!14059 = !DILocation(line: 2758, column: 19, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 2754, column: 46)
!14061 = !DILocation(line: 2758, column: 3, scope: !14060)
!14062 = !DILocation(line: 2759, column: 2, scope: !14060)
!14063 = !DILocation(line: 2760, column: 9, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 2759, column: 9)
!14065 = !DILocation(line: 2763, column: 6, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !13824, file: !3, line: 2763, column: 6)
!14067 = !DILocation(line: 2763, column: 6, scope: !13824)
!14068 = !DILocation(line: 2764, column: 7, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14070, file: !3, line: 2764, column: 7)
!14070 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2763, column: 13)
!14071 = !DILocation(line: 2764, column: 7, scope: !14070)
!14072 = !DILocation(line: 2765, column: 19, scope: !14069)
!14073 = !DILocation(line: 2765, column: 23, scope: !14069)
!14074 = !DILocation(line: 2765, column: 28, scope: !14069)
!14075 = !DILocation(line: 2765, column: 4, scope: !14069)
!14076 = !DILocation(line: 2767, column: 19, scope: !14069)
!14077 = !DILocation(line: 2767, column: 4, scope: !14069)
!14078 = !DILocation(line: 2768, column: 2, scope: !14070)
!14079 = !DILocation(line: 2769, column: 1, scope: !13824)
!14080 = distinct !DISubprogram(name: "mv_get_active_qc", scope: !3, file: !3, line: 2421, type: !14081, scopeLine: 2422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{!6831, !6835}
!14083 = !DILocalVariable(name: "ap", arg: 1, scope: !14080, file: !3, line: 2421, type: !6835)
!14084 = !DILocation(line: 2421, column: 65, scope: !14080)
!14085 = !DILocalVariable(name: "pp", scope: !14080, file: !3, line: 2423, type: !8689)
!14086 = !DILocation(line: 2423, column: 23, scope: !14080)
!14087 = !DILocation(line: 2423, column: 28, scope: !14080)
!14088 = !DILocation(line: 2423, column: 32, scope: !14080)
!14089 = !DILocalVariable(name: "qc", scope: !14080, file: !3, line: 2424, type: !6831)
!14090 = !DILocation(line: 2424, column: 25, scope: !14080)
!14091 = !DILocation(line: 2426, column: 6, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14080, file: !3, line: 2426, column: 6)
!14093 = !DILocation(line: 2426, column: 10, scope: !14092)
!14094 = !DILocation(line: 2426, column: 19, scope: !14092)
!14095 = !DILocation(line: 2426, column: 6, scope: !14080)
!14096 = !DILocation(line: 2427, column: 3, scope: !14092)
!14097 = !DILocation(line: 2428, column: 23, scope: !14080)
!14098 = !DILocation(line: 2428, column: 27, scope: !14080)
!14099 = !DILocation(line: 2428, column: 31, scope: !14080)
!14100 = !DILocation(line: 2428, column: 36, scope: !14080)
!14101 = !DILocation(line: 2428, column: 7, scope: !14080)
!14102 = !DILocation(line: 2428, column: 5, scope: !14080)
!14103 = !DILocation(line: 2429, column: 6, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14080, file: !3, line: 2429, column: 6)
!14105 = !DILocation(line: 2429, column: 9, scope: !14104)
!14106 = !DILocation(line: 2429, column: 14, scope: !14104)
!14107 = !DILocation(line: 2429, column: 18, scope: !14104)
!14108 = !DILocation(line: 2429, column: 21, scope: !14104)
!14109 = !DILocation(line: 2429, column: 27, scope: !14104)
!14110 = !DILocation(line: 2429, column: 6, scope: !14080)
!14111 = !DILocation(line: 2430, column: 10, scope: !14104)
!14112 = !DILocation(line: 2430, column: 3, scope: !14104)
!14113 = !DILocation(line: 2431, column: 2, scope: !14080)
!14114 = !DILocation(line: 2432, column: 1, scope: !14080)
!14115 = distinct !DISubprogram(name: "mv_unexpected_intr", scope: !3, file: !3, line: 2606, type: !9941, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14116 = !DILocalVariable(name: "ap", arg: 1, scope: !14115, file: !3, line: 2606, type: !6835)
!14117 = !DILocation(line: 2606, column: 49, scope: !14115)
!14118 = !DILocalVariable(name: "edma_was_enabled", arg: 2, scope: !14115, file: !3, line: 2606, type: !260)
!14119 = !DILocation(line: 2606, column: 57, scope: !14115)
!14120 = !DILocalVariable(name: "ehi", scope: !14115, file: !3, line: 2608, type: !13273)
!14121 = !DILocation(line: 2608, column: 22, scope: !14115)
!14122 = !DILocation(line: 2608, column: 29, scope: !14115)
!14123 = !DILocation(line: 2608, column: 33, scope: !14115)
!14124 = !DILocation(line: 2608, column: 38, scope: !14115)
!14125 = !DILocalVariable(name: "when", scope: !14115, file: !3, line: 2609, type: !1349)
!14126 = !DILocation(line: 2609, column: 8, scope: !14115)
!14127 = !DILocation(line: 2611, column: 21, scope: !14115)
!14128 = !DILocation(line: 2611, column: 2, scope: !14115)
!14129 = !DILocation(line: 2612, column: 6, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14115, file: !3, line: 2612, column: 6)
!14131 = !DILocation(line: 2612, column: 6, scope: !14115)
!14132 = !DILocation(line: 2613, column: 8, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 2612, column: 24)
!14134 = !DILocation(line: 2614, column: 2, scope: !14133)
!14135 = !DILocalVariable(name: "qc", scope: !14136, file: !3, line: 2615, type: !6831)
!14136 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 2614, column: 9)
!14137 = !DILocation(line: 2615, column: 26, scope: !14136)
!14138 = !DILocation(line: 2615, column: 47, scope: !14136)
!14139 = !DILocation(line: 2615, column: 51, scope: !14136)
!14140 = !DILocation(line: 2615, column: 55, scope: !14136)
!14141 = !DILocation(line: 2615, column: 60, scope: !14136)
!14142 = !DILocation(line: 2615, column: 31, scope: !14136)
!14143 = !DILocation(line: 2616, column: 7, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14136, file: !3, line: 2616, column: 7)
!14145 = !DILocation(line: 2616, column: 10, scope: !14144)
!14146 = !DILocation(line: 2616, column: 14, scope: !14144)
!14147 = !DILocation(line: 2616, column: 18, scope: !14144)
!14148 = !DILocation(line: 2616, column: 21, scope: !14144)
!14149 = !DILocation(line: 2616, column: 27, scope: !14144)
!14150 = !DILocation(line: 2616, column: 7, scope: !14136)
!14151 = !DILocation(line: 2617, column: 9, scope: !14144)
!14152 = !DILocation(line: 2617, column: 4, scope: !14144)
!14153 = !DILocation(line: 2619, column: 20, scope: !14115)
!14154 = !DILocation(line: 2619, column: 65, scope: !14115)
!14155 = !DILocation(line: 2619, column: 2, scope: !14115)
!14156 = !DILocation(line: 2620, column: 2, scope: !14115)
!14157 = !DILocation(line: 2620, column: 7, scope: !14115)
!14158 = !DILocation(line: 2620, column: 16, scope: !14115)
!14159 = !DILocation(line: 2621, column: 2, scope: !14115)
!14160 = !DILocation(line: 2621, column: 7, scope: !14115)
!14161 = !DILocation(line: 2621, column: 16, scope: !14115)
!14162 = !DILocation(line: 2622, column: 18, scope: !14115)
!14163 = !DILocation(line: 2622, column: 2, scope: !14115)
!14164 = !DILocation(line: 2623, column: 1, scope: !14115)
!14165 = distinct !DISubprogram(name: "mv_process_crpb_response", scope: !3, file: !3, line: 2771, type: !14166, scopeLine: 2773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14166 = !DISubroutineType(types: !14167)
!14167 = !{!1554, !6835, !8705, !7, !260}
!14168 = !DILocalVariable(name: "ap", arg: 1, scope: !14165, file: !3, line: 2771, type: !6835)
!14169 = !DILocation(line: 2771, column: 55, scope: !14165)
!14170 = !DILocalVariable(name: "response", arg: 2, scope: !14165, file: !3, line: 2772, type: !8705)
!14171 = !DILocation(line: 2772, column: 19, scope: !14165)
!14172 = !DILocalVariable(name: "tag", arg: 3, scope: !14165, file: !3, line: 2772, type: !7)
!14173 = !DILocation(line: 2772, column: 42, scope: !14165)
!14174 = !DILocalVariable(name: "ncq_enabled", arg: 4, scope: !14165, file: !3, line: 2772, type: !260)
!14175 = !DILocation(line: 2772, column: 51, scope: !14165)
!14176 = !DILocalVariable(name: "ata_status", scope: !14165, file: !3, line: 2774, type: !2109)
!14177 = !DILocation(line: 2774, column: 5, scope: !14165)
!14178 = !DILocalVariable(name: "edma_status", scope: !14165, file: !3, line: 2775, type: !1989)
!14179 = !DILocation(line: 2775, column: 6, scope: !14165)
!14180 = !DILocation(line: 2775, column: 20, scope: !14165)
!14181 = !DILocation(line: 2782, column: 7, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14165, file: !3, line: 2782, column: 6)
!14183 = !DILocation(line: 2782, column: 6, scope: !14165)
!14184 = !DILocalVariable(name: "err_cause", scope: !14185, file: !3, line: 2783, type: !2109)
!14185 = distinct !DILexicalBlock(scope: !14182, file: !3, line: 2782, column: 20)
!14186 = !DILocation(line: 2783, column: 6, scope: !14185)
!14187 = !DILocation(line: 2783, column: 18, scope: !14185)
!14188 = !DILocation(line: 2783, column: 30, scope: !14185)
!14189 = !DILocation(line: 2783, column: 37, scope: !14185)
!14190 = !DILocation(line: 2784, column: 7, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14185, file: !3, line: 2784, column: 7)
!14192 = !DILocation(line: 2784, column: 7, scope: !14185)
!14193 = !DILocation(line: 2789, column: 4, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14191, file: !3, line: 2784, column: 18)
!14195 = !DILocation(line: 2791, column: 2, scope: !14185)
!14196 = !DILocation(line: 2792, column: 15, scope: !14165)
!14197 = !DILocation(line: 2792, column: 27, scope: !14165)
!14198 = !DILocation(line: 2792, column: 13, scope: !14165)
!14199 = !DILocation(line: 2793, column: 19, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14165, file: !3, line: 2793, column: 6)
!14201 = !DILocation(line: 2793, column: 7, scope: !14200)
!14202 = !DILocation(line: 2793, column: 6, scope: !14165)
!14203 = !DILocation(line: 2794, column: 3, scope: !14200)
!14204 = !DILocation(line: 2796, column: 2, scope: !14165)
!14205 = !DILocation(line: 2797, column: 1, scope: !14165)
!14206 = distinct !DISubprogram(name: "ac_err_mask", scope: !204, file: !204, line: 1801, type: !14207, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14207 = !DISubroutineType(types: !14208)
!14208 = !{!7, !2109}
!14209 = !DILocalVariable(name: "status", arg: 1, scope: !14206, file: !204, line: 1801, type: !2109)
!14210 = !DILocation(line: 1801, column: 43, scope: !14206)
!14211 = !DILocation(line: 1803, column: 6, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14206, file: !204, line: 1803, column: 6)
!14213 = !DILocation(line: 1803, column: 13, scope: !14212)
!14214 = !DILocation(line: 1803, column: 6, scope: !14206)
!14215 = !DILocation(line: 1804, column: 3, scope: !14212)
!14216 = !DILocation(line: 1805, column: 6, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14206, file: !204, line: 1805, column: 6)
!14218 = !DILocation(line: 1805, column: 13, scope: !14217)
!14219 = !DILocation(line: 1805, column: 6, scope: !14206)
!14220 = !DILocation(line: 1806, column: 3, scope: !14217)
!14221 = !DILocation(line: 1807, column: 2, scope: !14206)
!14222 = !DILocation(line: 1808, column: 1, scope: !14206)
!14223 = distinct !DISubprogram(name: "mv_get_err_pmp_map", scope: !3, file: !3, line: 2461, type: !14224, scopeLine: 2462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14224 = !DISubroutineType(types: !14225)
!14225 = !{!7, !6835}
!14226 = !DILocalVariable(name: "ap", arg: 1, scope: !14223, file: !3, line: 2461, type: !6835)
!14227 = !DILocation(line: 2461, column: 57, scope: !14223)
!14228 = !DILocalVariable(name: "port_mmio", scope: !14223, file: !3, line: 2463, type: !1187)
!14229 = !DILocation(line: 2463, column: 16, scope: !14223)
!14230 = !DILocation(line: 2463, column: 39, scope: !14223)
!14231 = !DILocation(line: 2463, column: 28, scope: !14223)
!14232 = !DILocation(line: 2465, column: 15, scope: !14223)
!14233 = !DILocation(line: 2465, column: 25, scope: !14223)
!14234 = !DILocation(line: 2465, column: 9, scope: !14223)
!14235 = !DILocation(line: 2465, column: 41, scope: !14223)
!14236 = !DILocation(line: 2465, column: 2, scope: !14223)
!14237 = distinct !DISubprogram(name: "mv_pmp_eh_prep", scope: !3, file: !3, line: 2468, type: !7682, scopeLine: 2469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14238 = !DILocalVariable(name: "ap", arg: 1, scope: !14237, file: !3, line: 2468, type: !6835)
!14239 = !DILocation(line: 2468, column: 45, scope: !14237)
!14240 = !DILocalVariable(name: "pmp_map", arg: 2, scope: !14237, file: !3, line: 2468, type: !7)
!14241 = !DILocation(line: 2468, column: 62, scope: !14237)
!14242 = !DILocalVariable(name: "pmp", scope: !14237, file: !3, line: 2470, type: !7)
!14243 = !DILocation(line: 2470, column: 15, scope: !14237)
!14244 = !DILocation(line: 2475, column: 11, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 2475, column: 2)
!14246 = !DILocation(line: 2475, column: 7, scope: !14245)
!14247 = !DILocation(line: 2475, column: 16, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14245, file: !3, line: 2475, column: 2)
!14249 = !DILocation(line: 2475, column: 24, scope: !14248)
!14250 = !DILocation(line: 2475, column: 2, scope: !14245)
!14251 = !DILocalVariable(name: "this_pmp", scope: !14252, file: !3, line: 2476, type: !7)
!14252 = distinct !DILexicalBlock(scope: !14248, file: !3, line: 2475, column: 37)
!14253 = !DILocation(line: 2476, column: 16, scope: !14252)
!14254 = !DILocation(line: 2476, column: 33, scope: !14252)
!14255 = !DILocation(line: 2476, column: 30, scope: !14252)
!14256 = !DILocation(line: 2477, column: 7, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14252, file: !3, line: 2477, column: 7)
!14258 = !DILocation(line: 2477, column: 17, scope: !14257)
!14259 = !DILocation(line: 2477, column: 15, scope: !14257)
!14260 = !DILocation(line: 2477, column: 7, scope: !14252)
!14261 = !DILocalVariable(name: "link", scope: !14262, file: !3, line: 2478, type: !7295)
!14262 = distinct !DILexicalBlock(scope: !14257, file: !3, line: 2477, column: 27)
!14263 = !DILocation(line: 2478, column: 21, scope: !14262)
!14264 = !DILocation(line: 2478, column: 29, scope: !14262)
!14265 = !DILocation(line: 2478, column: 33, scope: !14262)
!14266 = !DILocation(line: 2478, column: 42, scope: !14262)
!14267 = !DILocalVariable(name: "ehi", scope: !14262, file: !3, line: 2479, type: !13273)
!14268 = !DILocation(line: 2479, column: 24, scope: !14262)
!14269 = !DILocation(line: 2479, column: 31, scope: !14262)
!14270 = !DILocation(line: 2479, column: 37, scope: !14262)
!14271 = !DILocation(line: 2481, column: 16, scope: !14262)
!14272 = !DILocation(line: 2481, column: 15, scope: !14262)
!14273 = !DILocation(line: 2481, column: 12, scope: !14262)
!14274 = !DILocation(line: 2482, column: 23, scope: !14262)
!14275 = !DILocation(line: 2482, column: 4, scope: !14262)
!14276 = !DILocation(line: 2483, column: 22, scope: !14262)
!14277 = !DILocation(line: 2483, column: 4, scope: !14262)
!14278 = !DILocation(line: 2484, column: 4, scope: !14262)
!14279 = !DILocation(line: 2484, column: 9, scope: !14262)
!14280 = !DILocation(line: 2484, column: 18, scope: !14262)
!14281 = !DILocation(line: 2485, column: 4, scope: !14262)
!14282 = !DILocation(line: 2485, column: 9, scope: !14262)
!14283 = !DILocation(line: 2485, column: 16, scope: !14262)
!14284 = !DILocation(line: 2486, column: 19, scope: !14262)
!14285 = !DILocation(line: 2486, column: 4, scope: !14262)
!14286 = !DILocation(line: 2487, column: 3, scope: !14262)
!14287 = !DILocation(line: 2488, column: 2, scope: !14252)
!14288 = !DILocation(line: 2475, column: 33, scope: !14248)
!14289 = !DILocation(line: 2475, column: 2, scope: !14248)
!14290 = distinct !{!14290, !14250, !14291}
!14291 = !DILocation(line: 2488, column: 2, scope: !14245)
!14292 = !DILocation(line: 2489, column: 1, scope: !14237)
!14293 = distinct !DISubprogram(name: "__arch_hweight16", scope: !14294, file: !14294, line: 26, type: !10661, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14294 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!14295 = !DILocalVariable(name: "w", arg: 1, scope: !14296, file: !14294, line: 15, type: !7)
!14296 = distinct !DISubprogram(name: "__arch_hweight32", scope: !14294, file: !14294, line: 15, type: !10661, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14297 = !DILocation(line: 15, column: 67, scope: !14296, inlinedAt: !14298)
!14298 = distinct !DILocation(line: 28, column: 9, scope: !14293)
!14299 = !DILocalVariable(name: "res", scope: !14296, file: !14294, line: 17, type: !7)
!14300 = !DILocation(line: 17, column: 15, scope: !14296, inlinedAt: !14298)
!14301 = !DILocalVariable(name: "w", arg: 1, scope: !14293, file: !14294, line: 26, type: !7)
!14302 = !DILocation(line: 26, column: 58, scope: !14293)
!14303 = !DILocation(line: 28, column: 26, scope: !14293)
!14304 = !DILocation(line: 28, column: 28, scope: !14293)
!14305 = !DILocation(line: 21, column: 15, scope: !14296, inlinedAt: !14298)
!14306 = !DILocation(line: 19, column: 2, scope: !14296, inlinedAt: !14298)
!14307 = !{i32 -2147039463, i32 -2147039435, i32 -2147039429, i32 -2147039413, i32 -2147039397, i32 -2147039370, i32 -2147039037, i32 -2147039755, i32 -2147039031, i32 -2147038983, i32 -2147038919, i32 -2147038857, i32 -2147038800, i32 -2147038744, i32 -2147039675, i32 -2147039650, i32 -2147038510, i32 -2147038380, i32 -2147038449, i32 -2147038366, i32 -2147039550}
!14308 = !DILocation(line: 23, column: 9, scope: !14296, inlinedAt: !14298)
!14309 = !DILocation(line: 28, column: 2, scope: !14293)
!14310 = distinct !DISubprogram(name: "mv_req_q_empty", scope: !3, file: !3, line: 2491, type: !7599, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14311 = !DILocalVariable(name: "ap", arg: 1, scope: !14310, file: !3, line: 2491, type: !6835)
!14312 = !DILocation(line: 2491, column: 44, scope: !14310)
!14313 = !DILocalVariable(name: "port_mmio", scope: !14310, file: !3, line: 2493, type: !1187)
!14314 = !DILocation(line: 2493, column: 16, scope: !14310)
!14315 = !DILocation(line: 2493, column: 39, scope: !14310)
!14316 = !DILocation(line: 2493, column: 28, scope: !14310)
!14317 = !DILocalVariable(name: "in_ptr", scope: !14310, file: !3, line: 2494, type: !1266)
!14318 = !DILocation(line: 2494, column: 6, scope: !14310)
!14319 = !DILocalVariable(name: "out_ptr", scope: !14310, file: !3, line: 2494, type: !1266)
!14320 = !DILocation(line: 2494, column: 14, scope: !14310)
!14321 = !DILocation(line: 2496, column: 19, scope: !14310)
!14322 = !DILocation(line: 2496, column: 29, scope: !14310)
!14323 = !DILocation(line: 2496, column: 13, scope: !14310)
!14324 = !DILocation(line: 2497, column: 4, scope: !14310)
!14325 = !DILocation(line: 2497, column: 29, scope: !14310)
!14326 = !DILocation(line: 2496, column: 10, scope: !14310)
!14327 = !DILocation(line: 2498, column: 19, scope: !14310)
!14328 = !DILocation(line: 2498, column: 29, scope: !14310)
!14329 = !DILocation(line: 2498, column: 13, scope: !14310)
!14330 = !DILocation(line: 2499, column: 4, scope: !14310)
!14331 = !DILocation(line: 2499, column: 29, scope: !14310)
!14332 = !DILocation(line: 2498, column: 10, scope: !14310)
!14333 = !DILocation(line: 2500, column: 10, scope: !14310)
!14334 = !DILocation(line: 2500, column: 20, scope: !14310)
!14335 = !DILocation(line: 2500, column: 17, scope: !14310)
!14336 = !DILocation(line: 2500, column: 2, scope: !14310)
!14337 = distinct !DISubprogram(name: "mv_handle_dev_err", scope: !3, file: !3, line: 2563, type: !14338, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!260, !6835, !1266}
!14340 = !DILocalVariable(name: "ap", arg: 1, scope: !14337, file: !3, line: 2563, type: !6835)
!14341 = !DILocation(line: 2563, column: 47, scope: !14337)
!14342 = !DILocalVariable(name: "edma_err_cause", arg: 2, scope: !14337, file: !3, line: 2563, type: !1266)
!14343 = !DILocation(line: 2563, column: 55, scope: !14337)
!14344 = !DILocalVariable(name: "pp", scope: !14337, file: !3, line: 2565, type: !8689)
!14345 = !DILocation(line: 2565, column: 23, scope: !14337)
!14346 = !DILocation(line: 2565, column: 28, scope: !14337)
!14347 = !DILocation(line: 2565, column: 32, scope: !14337)
!14348 = !DILocation(line: 2567, column: 8, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 2567, column: 6)
!14350 = !DILocation(line: 2567, column: 12, scope: !14349)
!14351 = !DILocation(line: 2567, column: 21, scope: !14349)
!14352 = !DILocation(line: 2567, column: 6, scope: !14337)
!14353 = !DILocation(line: 2568, column: 3, scope: !14349)
!14354 = !DILocation(line: 2569, column: 8, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 2569, column: 6)
!14356 = !DILocation(line: 2569, column: 12, scope: !14355)
!14357 = !DILocation(line: 2569, column: 21, scope: !14355)
!14358 = !DILocation(line: 2569, column: 6, scope: !14337)
!14359 = !DILocation(line: 2570, column: 3, scope: !14355)
!14360 = !DILocation(line: 2572, column: 8, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 2572, column: 6)
!14362 = !DILocation(line: 2572, column: 23, scope: !14361)
!14363 = !DILocation(line: 2572, column: 6, scope: !14337)
!14364 = !DILocation(line: 2573, column: 3, scope: !14361)
!14365 = !DILocation(line: 2574, column: 17, scope: !14337)
!14366 = !DILocation(line: 2575, column: 6, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 2575, column: 6)
!14368 = !DILocation(line: 2575, column: 21, scope: !14367)
!14369 = !DILocation(line: 2575, column: 6, scope: !14337)
!14370 = !DILocation(line: 2576, column: 3, scope: !14367)
!14371 = !DILocation(line: 2578, column: 6, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 2578, column: 6)
!14373 = !DILocation(line: 2578, column: 10, scope: !14372)
!14374 = !DILocation(line: 2578, column: 19, scope: !14372)
!14375 = !DILocation(line: 2578, column: 6, scope: !14337)
!14376 = !DILocation(line: 2584, column: 7, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14378, file: !3, line: 2584, column: 7)
!14378 = distinct !DILexicalBlock(scope: !14372, file: !3, line: 2578, column: 40)
!14379 = !DILocation(line: 2584, column: 22, scope: !14377)
!14380 = !DILocation(line: 2584, column: 7, scope: !14378)
!14381 = !DILocation(line: 2585, column: 4, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 2584, column: 43)
!14383 = !DILocation(line: 2587, column: 4, scope: !14382)
!14384 = !DILocation(line: 2589, column: 36, scope: !14378)
!14385 = !DILocation(line: 2589, column: 10, scope: !14378)
!14386 = !DILocation(line: 2589, column: 3, scope: !14378)
!14387 = !DILocation(line: 2596, column: 9, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !3, line: 2596, column: 7)
!14389 = distinct !DILexicalBlock(scope: !14372, file: !3, line: 2590, column: 9)
!14390 = !DILocation(line: 2596, column: 24, scope: !14388)
!14391 = !DILocation(line: 2596, column: 7, scope: !14389)
!14392 = !DILocation(line: 2597, column: 4, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14388, file: !3, line: 2596, column: 46)
!14394 = !DILocation(line: 2599, column: 4, scope: !14393)
!14395 = !DILocation(line: 2601, column: 40, scope: !14389)
!14396 = !DILocation(line: 2601, column: 10, scope: !14389)
!14397 = !DILocation(line: 2601, column: 3, scope: !14389)
!14398 = !DILocation(line: 2604, column: 1, scope: !14337)
!14399 = distinct !DISubprogram(name: "ata_ehi_hotplugged", scope: !204, file: !204, line: 1522, type: !14400, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14400 = !DISubroutineType(types: !14401)
!14401 = !{null, !13273}
!14402 = !DILocalVariable(name: "ehi", arg: 1, scope: !14399, file: !204, line: 1522, type: !13273)
!14403 = !DILocation(line: 1522, column: 59, scope: !14399)
!14404 = !DILocation(line: 1524, column: 2, scope: !14399)
!14405 = !DILocation(line: 1524, column: 7, scope: !14399)
!14406 = !DILocation(line: 1524, column: 18, scope: !14399)
!14407 = !DILocation(line: 1525, column: 2, scope: !14399)
!14408 = !DILocation(line: 1525, column: 7, scope: !14399)
!14409 = !DILocation(line: 1525, column: 13, scope: !14399)
!14410 = !DILocation(line: 1526, column: 2, scope: !14399)
!14411 = !DILocation(line: 1526, column: 7, scope: !14399)
!14412 = !DILocation(line: 1526, column: 14, scope: !14399)
!14413 = !DILocation(line: 1527, column: 2, scope: !14399)
!14414 = !DILocation(line: 1527, column: 7, scope: !14399)
!14415 = !DILocation(line: 1527, column: 16, scope: !14399)
!14416 = !DILocation(line: 1528, column: 1, scope: !14399)
!14417 = distinct !DISubprogram(name: "mv_handle_fbs_non_ncq_dev_err", scope: !3, file: !3, line: 2547, type: !7599, scopeLine: 2548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14418 = !DILocalVariable(name: "ap", arg: 1, scope: !14417, file: !3, line: 2547, type: !6835)
!14419 = !DILocation(line: 2547, column: 59, scope: !14417)
!14420 = !DILocation(line: 2560, column: 2, scope: !14417)
!14421 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !1202, file: !1202, line: 1865, type: !14422, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{!1187, !1200}
!14424 = !DILocalVariable(name: "pdev", arg: 1, scope: !14421, file: !1202, line: 1865, type: !1200)
!14425 = !DILocation(line: 1865, column: 53, scope: !14421)
!14426 = !DILocation(line: 1867, column: 26, scope: !14421)
!14427 = !DILocation(line: 1867, column: 32, scope: !14421)
!14428 = !DILocation(line: 1867, column: 9, scope: !14421)
!14429 = !DILocation(line: 1867, column: 2, scope: !14421)
!14430 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !25, file: !25, line: 655, type: !14431, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14431 = !DISubroutineType(types: !14432)
!14432 = !{!1187, !5986}
!14433 = !DILocalVariable(name: "dev", arg: 1, scope: !14430, file: !25, line: 655, type: !5986)
!14434 = !DILocation(line: 655, column: 58, scope: !14430)
!14435 = !DILocation(line: 657, column: 9, scope: !14430)
!14436 = !DILocation(line: 657, column: 14, scope: !14430)
!14437 = !DILocation(line: 657, column: 2, scope: !14430)
!14438 = !DILocalVariable(name: "pdev", arg: 1, scope: !7967, file: !3, line: 4048, type: !7928)
!14439 = !DILocation(line: 4048, column: 54, scope: !7967)
!14440 = !DILocalVariable(name: "mv_platform_data", scope: !7967, file: !3, line: 4050, type: !14441)
!14441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14442, size: 64)
!14442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14443)
!14443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mv_sata_platform_data", file: !14444, line: 28, size: 32, elements: !14445)
!14444 = !DIFile(filename: "./include/linux/ata_platform.h", directory: "/home/lizy2001/genbc/linux")
!14445 = !{!14446}
!14446 = !DIDerivedType(tag: DW_TAG_member, name: "n_ports", scope: !14443, file: !14444, line: 29, baseType: !260, size: 32)
!14447 = !DILocation(line: 4050, column: 38, scope: !7967)
!14448 = !DILocalVariable(name: "dram", scope: !7967, file: !3, line: 4051, type: !14449)
!14449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14450, size: 64)
!14450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14451)
!14451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mbus_dram_target_info", file: !14452, line: 18, size: 832, elements: !14453)
!14452 = !DIFile(filename: "./include/linux/mbus.h", directory: "/home/lizy2001/genbc/linux")
!14453 = !{!14454, !14455, !14456}
!14454 = !DIDerivedType(tag: DW_TAG_member, name: "mbus_dram_target_id", scope: !14451, file: !14452, line: 23, baseType: !2109, size: 8)
!14455 = !DIDerivedType(tag: DW_TAG_member, name: "num_cs", scope: !14451, file: !14452, line: 30, baseType: !260, size: 32, offset: 32)
!14456 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !14451, file: !14452, line: 36, baseType: !14457, size: 768, offset: 64)
!14457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14458, size: 768, elements: !1198)
!14458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mbus_dram_window", file: !14452, line: 31, size: 192, elements: !14459)
!14459 = !{!14460, !14461, !14462, !14463}
!14460 = !DIDerivedType(tag: DW_TAG_member, name: "cs_index", scope: !14458, file: !14452, line: 32, baseType: !2109, size: 8)
!14461 = !DIDerivedType(tag: DW_TAG_member, name: "mbus_attr", scope: !14458, file: !14452, line: 33, baseType: !2109, size: 8, offset: 8)
!14462 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14458, file: !14452, line: 34, baseType: !1229, size: 64, offset: 64)
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14458, file: !14452, line: 35, baseType: !1229, size: 64, offset: 128)
!14464 = !DILocation(line: 4051, column: 38, scope: !7967)
!14465 = !DILocalVariable(name: "ppi", scope: !7967, file: !3, line: 4052, type: !8017)
!14466 = !DILocation(line: 4052, column: 30, scope: !7967)
!14467 = !DILocalVariable(name: "host", scope: !7967, file: !3, line: 4054, type: !7484)
!14468 = !DILocation(line: 4054, column: 19, scope: !7967)
!14469 = !DILocalVariable(name: "hpriv", scope: !7967, file: !3, line: 4055, type: !7763)
!14470 = !DILocation(line: 4055, column: 23, scope: !7967)
!14471 = !DILocalVariable(name: "res", scope: !7967, file: !3, line: 4056, type: !1222)
!14472 = !DILocation(line: 4056, column: 19, scope: !7967)
!14473 = !DILocalVariable(name: "n_ports", scope: !7967, file: !3, line: 4057, type: !260)
!14474 = !DILocation(line: 4057, column: 6, scope: !7967)
!14475 = !DILocalVariable(name: "irq", scope: !7967, file: !3, line: 4057, type: !260)
!14476 = !DILocation(line: 4057, column: 19, scope: !7967)
!14477 = !DILocalVariable(name: "rc", scope: !7967, file: !3, line: 4058, type: !260)
!14478 = !DILocation(line: 4058, column: 6, scope: !7967)
!14479 = !DILocalVariable(name: "port", scope: !7967, file: !3, line: 4059, type: !260)
!14480 = !DILocation(line: 4059, column: 6, scope: !7967)
!14481 = !DILocation(line: 4061, column: 2, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !3, line: 4061, column: 2)
!14483 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4061, column: 2)
!14484 = !DILocation(line: 4061, column: 2, scope: !14483)
!14485 = !DILocation(line: 4061, column: 2, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 4061, column: 2)
!14487 = !DILocation(line: 4066, column: 6, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4066, column: 6)
!14489 = !DILocation(line: 4066, column: 6, scope: !7967)
!14490 = !DILocation(line: 4067, column: 3, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14488, file: !3, line: 4066, column: 42)
!14492 = !DILocation(line: 4068, column: 3, scope: !14491)
!14493 = !DILocation(line: 4074, column: 30, scope: !7967)
!14494 = !DILocation(line: 4074, column: 8, scope: !7967)
!14495 = !DILocation(line: 4074, column: 6, scope: !7967)
!14496 = !DILocation(line: 4075, column: 6, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4075, column: 6)
!14498 = !DILocation(line: 4075, column: 10, scope: !14497)
!14499 = !DILocation(line: 4075, column: 6, scope: !7967)
!14500 = !DILocation(line: 4076, column: 3, scope: !14497)
!14501 = !DILocation(line: 4079, column: 6, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4079, column: 6)
!14503 = !DILocation(line: 4079, column: 12, scope: !14502)
!14504 = !DILocation(line: 4079, column: 16, scope: !14502)
!14505 = !DILocation(line: 4079, column: 6, scope: !7967)
!14506 = !DILocation(line: 4080, column: 29, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 4079, column: 25)
!14508 = !DILocation(line: 4080, column: 35, scope: !14507)
!14509 = !DILocation(line: 4080, column: 39, scope: !14507)
!14510 = !DILocation(line: 4080, column: 8, scope: !14507)
!14511 = !DILocation(line: 4080, column: 6, scope: !14507)
!14512 = !DILocation(line: 4082, column: 7, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14507, file: !3, line: 4082, column: 7)
!14514 = !DILocation(line: 4082, column: 7, scope: !14507)
!14515 = !DILocation(line: 4083, column: 4, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14513, file: !3, line: 4082, column: 11)
!14517 = !DILocation(line: 4085, column: 11, scope: !14516)
!14518 = !DILocation(line: 4085, column: 4, scope: !14516)
!14519 = !DILocation(line: 4088, column: 7, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14507, file: !3, line: 4088, column: 7)
!14521 = !DILocation(line: 4088, column: 15, scope: !14520)
!14522 = !DILocation(line: 4088, column: 7, scope: !14507)
!14523 = !DILocation(line: 4089, column: 4, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14520, file: !3, line: 4088, column: 21)
!14525 = !DILocation(line: 4091, column: 4, scope: !14524)
!14526 = !DILocation(line: 4094, column: 30, scope: !14507)
!14527 = !DILocation(line: 4094, column: 36, scope: !14507)
!14528 = !DILocation(line: 4094, column: 40, scope: !14507)
!14529 = !DILocation(line: 4094, column: 9, scope: !14507)
!14530 = !DILocation(line: 4094, column: 7, scope: !14507)
!14531 = !DILocation(line: 4095, column: 2, scope: !14507)
!14532 = !DILocation(line: 4096, column: 40, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 4095, column: 9)
!14534 = !DILocation(line: 4096, column: 46, scope: !14533)
!14535 = !DILocation(line: 4096, column: 22, scope: !14533)
!14536 = !DILocation(line: 4096, column: 20, scope: !14533)
!14537 = !DILocation(line: 4097, column: 13, scope: !14533)
!14538 = !DILocation(line: 4097, column: 31, scope: !14533)
!14539 = !DILocation(line: 4097, column: 11, scope: !14533)
!14540 = !DILocation(line: 4098, column: 26, scope: !14533)
!14541 = !DILocation(line: 4098, column: 9, scope: !14533)
!14542 = !DILocation(line: 4098, column: 7, scope: !14533)
!14543 = !DILocation(line: 4101, column: 31, scope: !7967)
!14544 = !DILocation(line: 4101, column: 37, scope: !7967)
!14545 = !DILocation(line: 4101, column: 42, scope: !7967)
!14546 = !DILocation(line: 4101, column: 47, scope: !7967)
!14547 = !DILocation(line: 4101, column: 9, scope: !7967)
!14548 = !DILocation(line: 4101, column: 7, scope: !7967)
!14549 = !DILocation(line: 4102, column: 24, scope: !7967)
!14550 = !DILocation(line: 4102, column: 30, scope: !7967)
!14551 = !DILocation(line: 4102, column: 10, scope: !7967)
!14552 = !DILocation(line: 4102, column: 8, scope: !7967)
!14553 = !DILocation(line: 4104, column: 7, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4104, column: 6)
!14555 = !DILocation(line: 4104, column: 12, scope: !14554)
!14556 = !DILocation(line: 4104, column: 16, scope: !14554)
!14557 = !DILocation(line: 4104, column: 6, scope: !7967)
!14558 = !DILocation(line: 4105, column: 3, scope: !14554)
!14559 = !DILocation(line: 4106, column: 35, scope: !7967)
!14560 = !DILocation(line: 4106, column: 41, scope: !7967)
!14561 = !DILocation(line: 4107, column: 6, scope: !7967)
!14562 = !DILocation(line: 4106, column: 21, scope: !7967)
!14563 = !DILocation(line: 4106, column: 2, scope: !7967)
!14564 = !DILocation(line: 4106, column: 9, scope: !7967)
!14565 = !DILocation(line: 4106, column: 19, scope: !7967)
!14566 = !DILocation(line: 4109, column: 7, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4109, column: 6)
!14568 = !DILocation(line: 4109, column: 14, scope: !14567)
!14569 = !DILocation(line: 4109, column: 6, scope: !7967)
!14570 = !DILocation(line: 4110, column: 3, scope: !14567)
!14571 = !DILocation(line: 4111, column: 35, scope: !7967)
!14572 = !DILocation(line: 4111, column: 41, scope: !7967)
!14573 = !DILocation(line: 4112, column: 6, scope: !7967)
!14574 = !DILocation(line: 4111, column: 21, scope: !7967)
!14575 = !DILocation(line: 4111, column: 2, scope: !7967)
!14576 = !DILocation(line: 4111, column: 9, scope: !7967)
!14577 = !DILocation(line: 4111, column: 19, scope: !7967)
!14578 = !DILocation(line: 4114, column: 7, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4114, column: 6)
!14580 = !DILocation(line: 4114, column: 14, scope: !14579)
!14581 = !DILocation(line: 4114, column: 6, scope: !7967)
!14582 = !DILocation(line: 4115, column: 3, scope: !14579)
!14583 = !DILocation(line: 4116, column: 23, scope: !7967)
!14584 = !DILocation(line: 4116, column: 2, scope: !7967)
!14585 = !DILocation(line: 4116, column: 8, scope: !7967)
!14586 = !DILocation(line: 4116, column: 21, scope: !7967)
!14587 = !DILocation(line: 4117, column: 2, scope: !7967)
!14588 = !DILocation(line: 4117, column: 9, scope: !7967)
!14589 = !DILocation(line: 4117, column: 19, scope: !7967)
!14590 = !DILocation(line: 4119, column: 2, scope: !7967)
!14591 = !DILocation(line: 4119, column: 8, scope: !7967)
!14592 = !DILocation(line: 4119, column: 14, scope: !7967)
!14593 = !DILocation(line: 4120, column: 30, scope: !7967)
!14594 = !DILocation(line: 4120, column: 36, scope: !7967)
!14595 = !DILocation(line: 4120, column: 41, scope: !7967)
!14596 = !DILocation(line: 4120, column: 46, scope: !7967)
!14597 = !DILocation(line: 4121, column: 22, scope: !7967)
!14598 = !DILocation(line: 4121, column: 8, scope: !7967)
!14599 = !DILocation(line: 4120, column: 16, scope: !7967)
!14600 = !DILocation(line: 4120, column: 2, scope: !7967)
!14601 = !DILocation(line: 4120, column: 9, scope: !7967)
!14602 = !DILocation(line: 4120, column: 14, scope: !7967)
!14603 = !DILocation(line: 4122, column: 7, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4122, column: 6)
!14605 = !DILocation(line: 4122, column: 14, scope: !14604)
!14606 = !DILocation(line: 4122, column: 6, scope: !7967)
!14607 = !DILocation(line: 4123, column: 3, scope: !14604)
!14608 = !DILocation(line: 4125, column: 2, scope: !7967)
!14609 = !DILocation(line: 4125, column: 9, scope: !7967)
!14610 = !DILocation(line: 4125, column: 14, scope: !7967)
!14611 = !DILocation(line: 4127, column: 24, scope: !7967)
!14612 = !DILocation(line: 4127, column: 30, scope: !7967)
!14613 = !DILocation(line: 4127, column: 15, scope: !7967)
!14614 = !DILocation(line: 4127, column: 2, scope: !7967)
!14615 = !DILocation(line: 4127, column: 9, scope: !7967)
!14616 = !DILocation(line: 4127, column: 13, scope: !7967)
!14617 = !DILocation(line: 4128, column: 13, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4128, column: 6)
!14619 = !DILocation(line: 4128, column: 20, scope: !14618)
!14620 = !DILocation(line: 4128, column: 6, scope: !14618)
!14621 = !DILocation(line: 4128, column: 6, scope: !7967)
!14622 = !DILocation(line: 4129, column: 3, scope: !14618)
!14623 = !DILocation(line: 4131, column: 22, scope: !14618)
!14624 = !DILocation(line: 4131, column: 29, scope: !14618)
!14625 = !DILocation(line: 4131, column: 3, scope: !14618)
!14626 = !DILocation(line: 4133, column: 12, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4133, column: 2)
!14628 = !DILocation(line: 4133, column: 7, scope: !14627)
!14629 = !DILocation(line: 4133, column: 17, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14627, file: !3, line: 4133, column: 2)
!14631 = !DILocation(line: 4133, column: 24, scope: !14630)
!14632 = !DILocation(line: 4133, column: 22, scope: !14630)
!14633 = !DILocation(line: 4133, column: 2, scope: !14627)
!14634 = !DILocalVariable(name: "port_number", scope: !14635, file: !3, line: 4134, type: !4088)
!14635 = distinct !DILexicalBlock(scope: !14630, file: !3, line: 4133, column: 41)
!14636 = !DILocation(line: 4134, column: 8, scope: !14635)
!14637 = !DILocation(line: 4135, column: 11, scope: !14635)
!14638 = !DILocation(line: 4135, column: 30, scope: !14635)
!14639 = !DILocation(line: 4135, column: 3, scope: !14635)
!14640 = !DILocation(line: 4136, column: 37, scope: !14635)
!14641 = !DILocation(line: 4136, column: 43, scope: !14635)
!14642 = !DILocation(line: 4136, column: 48, scope: !14635)
!14643 = !DILocation(line: 4136, column: 28, scope: !14635)
!14644 = !DILocation(line: 4136, column: 3, scope: !14635)
!14645 = !DILocation(line: 4136, column: 10, scope: !14635)
!14646 = !DILocation(line: 4136, column: 20, scope: !14635)
!14647 = !DILocation(line: 4136, column: 26, scope: !14635)
!14648 = !DILocation(line: 4137, column: 15, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 4137, column: 7)
!14650 = !DILocation(line: 4137, column: 22, scope: !14649)
!14651 = !DILocation(line: 4137, column: 32, scope: !14649)
!14652 = !DILocation(line: 4137, column: 8, scope: !14649)
!14653 = !DILocation(line: 4137, column: 7, scope: !14635)
!14654 = !DILocation(line: 4138, column: 23, scope: !14649)
!14655 = !DILocation(line: 4138, column: 30, scope: !14649)
!14656 = !DILocation(line: 4138, column: 40, scope: !14649)
!14657 = !DILocation(line: 4138, column: 4, scope: !14649)
!14658 = !DILocation(line: 4140, column: 11, scope: !14635)
!14659 = !DILocation(line: 4140, column: 34, scope: !14635)
!14660 = !DILocation(line: 4140, column: 3, scope: !14635)
!14661 = !DILocation(line: 4141, column: 51, scope: !14635)
!14662 = !DILocation(line: 4141, column: 57, scope: !14635)
!14663 = !DILocation(line: 4142, column: 15, scope: !14635)
!14664 = !DILocation(line: 4141, column: 28, scope: !14635)
!14665 = !DILocation(line: 4141, column: 3, scope: !14635)
!14666 = !DILocation(line: 4141, column: 10, scope: !14635)
!14667 = !DILocation(line: 4141, column: 20, scope: !14635)
!14668 = !DILocation(line: 4141, column: 26, scope: !14635)
!14669 = !DILocation(line: 4143, column: 14, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 4143, column: 7)
!14671 = !DILocation(line: 4143, column: 21, scope: !14670)
!14672 = !DILocation(line: 4143, column: 31, scope: !14670)
!14673 = !DILocation(line: 4143, column: 7, scope: !14670)
!14674 = !DILocation(line: 4143, column: 7, scope: !14635)
!14675 = !DILocation(line: 4144, column: 17, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14670, file: !3, line: 4143, column: 39)
!14677 = !DILocation(line: 4144, column: 24, scope: !14676)
!14678 = !DILocation(line: 4144, column: 34, scope: !14676)
!14679 = !DILocation(line: 4144, column: 9, scope: !14676)
!14680 = !DILocation(line: 4144, column: 7, scope: !14676)
!14681 = !DILocation(line: 4145, column: 4, scope: !14676)
!14682 = !DILocation(line: 4145, column: 11, scope: !14676)
!14683 = !DILocation(line: 4145, column: 21, scope: !14676)
!14684 = !DILocation(line: 4145, column: 27, scope: !14676)
!14685 = !DILocation(line: 4146, column: 8, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14676, file: !3, line: 4146, column: 8)
!14687 = !DILocation(line: 4146, column: 11, scope: !14686)
!14688 = !DILocation(line: 4146, column: 8, scope: !14676)
!14689 = !DILocation(line: 4147, column: 5, scope: !14686)
!14690 = !DILocation(line: 4150, column: 21, scope: !14676)
!14691 = !DILocation(line: 4150, column: 4, scope: !14676)
!14692 = !DILocation(line: 4150, column: 11, scope: !14676)
!14693 = !DILocation(line: 4150, column: 19, scope: !14676)
!14694 = !DILocation(line: 4151, column: 4, scope: !14676)
!14695 = !DILocation(line: 4153, column: 17, scope: !14670)
!14696 = !DILocation(line: 4153, column: 24, scope: !14670)
!14697 = !DILocation(line: 4153, column: 34, scope: !14670)
!14698 = !DILocation(line: 4153, column: 4, scope: !14670)
!14699 = !DILocation(line: 4154, column: 2, scope: !14635)
!14700 = !DILocation(line: 4133, column: 37, scope: !14630)
!14701 = !DILocation(line: 4133, column: 2, scope: !14630)
!14702 = distinct !{!14702, !14633, !14703}
!14703 = !DILocation(line: 4154, column: 2, scope: !14627)
!14704 = !DILocation(line: 4157, column: 19, scope: !7967)
!14705 = !DILocation(line: 4157, column: 2, scope: !7967)
!14706 = !DILocation(line: 4157, column: 9, scope: !7967)
!14707 = !DILocation(line: 4157, column: 17, scope: !7967)
!14708 = !DILocation(line: 4162, column: 9, scope: !7967)
!14709 = !DILocation(line: 4162, column: 7, scope: !7967)
!14710 = !DILocation(line: 4163, column: 6, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4163, column: 6)
!14712 = !DILocation(line: 4163, column: 6, scope: !7967)
!14713 = !DILocation(line: 4164, column: 24, scope: !14711)
!14714 = !DILocation(line: 4164, column: 31, scope: !14711)
!14715 = !DILocation(line: 4164, column: 3, scope: !14711)
!14716 = !DILocation(line: 4166, column: 27, scope: !7967)
!14717 = !DILocation(line: 4166, column: 35, scope: !7967)
!14718 = !DILocation(line: 4166, column: 41, scope: !7967)
!14719 = !DILocation(line: 4166, column: 7, scope: !7967)
!14720 = !DILocation(line: 4166, column: 5, scope: !7967)
!14721 = !DILocation(line: 4167, column: 6, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4167, column: 6)
!14723 = !DILocation(line: 4167, column: 6, scope: !7967)
!14724 = !DILocation(line: 4168, column: 3, scope: !14722)
!14725 = !DILocation(line: 4174, column: 6, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4174, column: 6)
!14727 = !DILocation(line: 4174, column: 12, scope: !14726)
!14728 = !DILocation(line: 4174, column: 16, scope: !14726)
!14729 = !DILocation(line: 4174, column: 24, scope: !14726)
!14730 = !DILocation(line: 4175, column: 27, scope: !14726)
!14731 = !DILocation(line: 4175, column: 33, scope: !14726)
!14732 = !DILocation(line: 4175, column: 37, scope: !14726)
!14733 = !DILocation(line: 4175, column: 3, scope: !14726)
!14734 = !DILocation(line: 4174, column: 6, scope: !7967)
!14735 = !DILocation(line: 4177, column: 3, scope: !14726)
!14736 = !DILocation(line: 4177, column: 10, scope: !14726)
!14737 = !DILocation(line: 4177, column: 19, scope: !14726)
!14738 = !DILocation(line: 4180, column: 20, scope: !7967)
!14739 = !DILocation(line: 4180, column: 7, scope: !7967)
!14740 = !DILocation(line: 4180, column: 5, scope: !7967)
!14741 = !DILocation(line: 4181, column: 6, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4181, column: 6)
!14743 = !DILocation(line: 4181, column: 6, scope: !7967)
!14744 = !DILocation(line: 4182, column: 3, scope: !14742)
!14745 = !DILocation(line: 4184, column: 2, scope: !7967)
!14746 = !DILocation(line: 4187, column: 25, scope: !7967)
!14747 = !DILocation(line: 4187, column: 31, scope: !7967)
!14748 = !DILocation(line: 4187, column: 7, scope: !7967)
!14749 = !DILocation(line: 4187, column: 5, scope: !7967)
!14750 = !DILocation(line: 4188, column: 7, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4188, column: 6)
!14752 = !DILocation(line: 4188, column: 6, scope: !7967)
!14753 = !DILocation(line: 4189, column: 3, scope: !14751)
!14754 = !DILabel(scope: !7967, name: "err", file: !3, line: 4191)
!14755 = !DILocation(line: 4191, column: 1, scope: !7967)
!14756 = !DILocation(line: 4192, column: 14, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4192, column: 6)
!14758 = !DILocation(line: 4192, column: 21, scope: !14757)
!14759 = !DILocation(line: 4192, column: 7, scope: !14757)
!14760 = !DILocation(line: 4192, column: 6, scope: !7967)
!14761 = !DILocation(line: 4193, column: 25, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14757, file: !3, line: 4192, column: 27)
!14763 = !DILocation(line: 4193, column: 32, scope: !14762)
!14764 = !DILocation(line: 4193, column: 3, scope: !14762)
!14765 = !DILocation(line: 4194, column: 11, scope: !14762)
!14766 = !DILocation(line: 4194, column: 18, scope: !14762)
!14767 = !DILocation(line: 4194, column: 3, scope: !14762)
!14768 = !DILocation(line: 4195, column: 2, scope: !14762)
!14769 = !DILocation(line: 4196, column: 12, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4196, column: 2)
!14771 = !DILocation(line: 4196, column: 7, scope: !14770)
!14772 = !DILocation(line: 4196, column: 17, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14770, file: !3, line: 4196, column: 2)
!14774 = !DILocation(line: 4196, column: 24, scope: !14773)
!14775 = !DILocation(line: 4196, column: 31, scope: !14773)
!14776 = !DILocation(line: 4196, column: 22, scope: !14773)
!14777 = !DILocation(line: 4196, column: 2, scope: !14770)
!14778 = !DILocation(line: 4197, column: 15, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14780, file: !3, line: 4197, column: 7)
!14780 = distinct !DILexicalBlock(scope: !14773, file: !3, line: 4196, column: 48)
!14781 = !DILocation(line: 4197, column: 22, scope: !14779)
!14782 = !DILocation(line: 4197, column: 32, scope: !14779)
!14783 = !DILocation(line: 4197, column: 8, scope: !14779)
!14784 = !DILocation(line: 4197, column: 7, scope: !14780)
!14785 = !DILocation(line: 4198, column: 26, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14779, file: !3, line: 4197, column: 40)
!14787 = !DILocation(line: 4198, column: 33, scope: !14786)
!14788 = !DILocation(line: 4198, column: 43, scope: !14786)
!14789 = !DILocation(line: 4198, column: 4, scope: !14786)
!14790 = !DILocation(line: 4199, column: 12, scope: !14786)
!14791 = !DILocation(line: 4199, column: 19, scope: !14786)
!14792 = !DILocation(line: 4199, column: 29, scope: !14786)
!14793 = !DILocation(line: 4199, column: 4, scope: !14786)
!14794 = !DILocation(line: 4200, column: 3, scope: !14786)
!14795 = !DILocation(line: 4201, column: 17, scope: !14780)
!14796 = !DILocation(line: 4201, column: 24, scope: !14780)
!14797 = !DILocation(line: 4201, column: 34, scope: !14780)
!14798 = !DILocation(line: 4201, column: 3, scope: !14780)
!14799 = !DILocation(line: 4202, column: 2, scope: !14780)
!14800 = !DILocation(line: 4196, column: 44, scope: !14773)
!14801 = !DILocation(line: 4196, column: 2, scope: !14773)
!14802 = distinct !{!14802, !14777, !14803}
!14803 = !DILocation(line: 4202, column: 2, scope: !14770)
!14804 = !DILocation(line: 4204, column: 9, scope: !7967)
!14805 = !DILocation(line: 4204, column: 2, scope: !7967)
!14806 = !DILocation(line: 4205, column: 1, scope: !7967)
!14807 = distinct !DISubprogram(name: "mv_platform_remove", scope: !3, file: !3, line: 4215, type: !7926, scopeLine: 4216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14808 = !DILocalVariable(name: "pdev", arg: 1, scope: !14807, file: !3, line: 4215, type: !7928)
!14809 = !DILocation(line: 4215, column: 55, scope: !14807)
!14810 = !DILocalVariable(name: "host", scope: !14807, file: !3, line: 4217, type: !7484)
!14811 = !DILocation(line: 4217, column: 19, scope: !14807)
!14812 = !DILocation(line: 4217, column: 47, scope: !14807)
!14813 = !DILocation(line: 4217, column: 26, scope: !14807)
!14814 = !DILocalVariable(name: "hpriv", scope: !14807, file: !3, line: 4218, type: !7763)
!14815 = !DILocation(line: 4218, column: 23, scope: !14807)
!14816 = !DILocation(line: 4218, column: 31, scope: !14807)
!14817 = !DILocation(line: 4218, column: 37, scope: !14807)
!14818 = !DILocalVariable(name: "port", scope: !14807, file: !3, line: 4219, type: !260)
!14819 = !DILocation(line: 4219, column: 6, scope: !14807)
!14820 = !DILocation(line: 4220, column: 18, scope: !14807)
!14821 = !DILocation(line: 4220, column: 2, scope: !14807)
!14822 = !DILocation(line: 4222, column: 14, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 4222, column: 6)
!14824 = !DILocation(line: 4222, column: 21, scope: !14823)
!14825 = !DILocation(line: 4222, column: 7, scope: !14823)
!14826 = !DILocation(line: 4222, column: 6, scope: !14807)
!14827 = !DILocation(line: 4223, column: 25, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 4222, column: 27)
!14829 = !DILocation(line: 4223, column: 32, scope: !14828)
!14830 = !DILocation(line: 4223, column: 3, scope: !14828)
!14831 = !DILocation(line: 4224, column: 11, scope: !14828)
!14832 = !DILocation(line: 4224, column: 18, scope: !14828)
!14833 = !DILocation(line: 4224, column: 3, scope: !14828)
!14834 = !DILocation(line: 4225, column: 2, scope: !14828)
!14835 = !DILocation(line: 4226, column: 12, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 4226, column: 2)
!14837 = !DILocation(line: 4226, column: 7, scope: !14836)
!14838 = !DILocation(line: 4226, column: 17, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14836, file: !3, line: 4226, column: 2)
!14840 = !DILocation(line: 4226, column: 24, scope: !14839)
!14841 = !DILocation(line: 4226, column: 30, scope: !14839)
!14842 = !DILocation(line: 4226, column: 22, scope: !14839)
!14843 = !DILocation(line: 4226, column: 2, scope: !14836)
!14844 = !DILocation(line: 4227, column: 15, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !3, line: 4227, column: 7)
!14846 = distinct !DILexicalBlock(scope: !14839, file: !3, line: 4226, column: 47)
!14847 = !DILocation(line: 4227, column: 22, scope: !14845)
!14848 = !DILocation(line: 4227, column: 32, scope: !14845)
!14849 = !DILocation(line: 4227, column: 8, scope: !14845)
!14850 = !DILocation(line: 4227, column: 7, scope: !14846)
!14851 = !DILocation(line: 4228, column: 26, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14845, file: !3, line: 4227, column: 40)
!14853 = !DILocation(line: 4228, column: 33, scope: !14852)
!14854 = !DILocation(line: 4228, column: 43, scope: !14852)
!14855 = !DILocation(line: 4228, column: 4, scope: !14852)
!14856 = !DILocation(line: 4229, column: 12, scope: !14852)
!14857 = !DILocation(line: 4229, column: 19, scope: !14852)
!14858 = !DILocation(line: 4229, column: 29, scope: !14852)
!14859 = !DILocation(line: 4229, column: 4, scope: !14852)
!14860 = !DILocation(line: 4230, column: 3, scope: !14852)
!14861 = !DILocation(line: 4231, column: 17, scope: !14846)
!14862 = !DILocation(line: 4231, column: 24, scope: !14846)
!14863 = !DILocation(line: 4231, column: 34, scope: !14846)
!14864 = !DILocation(line: 4231, column: 3, scope: !14846)
!14865 = !DILocation(line: 4232, column: 2, scope: !14846)
!14866 = !DILocation(line: 4226, column: 43, scope: !14839)
!14867 = !DILocation(line: 4226, column: 2, scope: !14839)
!14868 = distinct !{!14868, !14843, !14869}
!14869 = !DILocation(line: 4232, column: 2, scope: !14836)
!14870 = !DILocation(line: 4233, column: 2, scope: !14807)
!14871 = distinct !DISubprogram(name: "mv_platform_suspend", scope: !3, file: !3, line: 4237, type: !7959, scopeLine: 4238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14872 = !DILocalVariable(name: "pdev", arg: 1, scope: !14871, file: !3, line: 4237, type: !7928)
!14873 = !DILocation(line: 4237, column: 56, scope: !14871)
!14874 = !DILocalVariable(name: "state", arg: 2, scope: !14871, file: !3, line: 4237, type: !5781)
!14875 = !DILocation(line: 4237, column: 75, scope: !14871)
!14876 = !DILocalVariable(name: "host", scope: !14871, file: !3, line: 4239, type: !7484)
!14877 = !DILocation(line: 4239, column: 19, scope: !14871)
!14878 = !DILocation(line: 4239, column: 47, scope: !14871)
!14879 = !DILocation(line: 4239, column: 26, scope: !14871)
!14880 = !DILocation(line: 4240, column: 6, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14871, file: !3, line: 4240, column: 6)
!14882 = !DILocation(line: 4240, column: 6, scope: !14871)
!14883 = !DILocation(line: 4241, column: 27, scope: !14881)
!14884 = !DILocation(line: 4241, column: 10, scope: !14881)
!14885 = !DILocation(line: 4241, column: 3, scope: !14881)
!14886 = !DILocation(line: 4243, column: 3, scope: !14881)
!14887 = !DILocation(line: 4244, column: 1, scope: !14871)
!14888 = distinct !DISubprogram(name: "mv_platform_resume", scope: !3, file: !3, line: 4246, type: !7926, scopeLine: 4247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14889 = !DILocalVariable(name: "pdev", arg: 1, scope: !14888, file: !3, line: 4246, type: !7928)
!14890 = !DILocation(line: 4246, column: 55, scope: !14888)
!14891 = !DILocalVariable(name: "host", scope: !14888, file: !3, line: 4248, type: !7484)
!14892 = !DILocation(line: 4248, column: 19, scope: !14888)
!14893 = !DILocation(line: 4248, column: 47, scope: !14888)
!14894 = !DILocation(line: 4248, column: 26, scope: !14888)
!14895 = !DILocalVariable(name: "dram", scope: !14888, file: !3, line: 4249, type: !14449)
!14896 = !DILocation(line: 4249, column: 38, scope: !14888)
!14897 = !DILocalVariable(name: "ret", scope: !14888, file: !3, line: 4250, type: !260)
!14898 = !DILocation(line: 4250, column: 6, scope: !14888)
!14899 = !DILocation(line: 4252, column: 6, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14888, file: !3, line: 4252, column: 6)
!14901 = !DILocation(line: 4252, column: 6, scope: !14888)
!14902 = !DILocalVariable(name: "hpriv", scope: !14903, file: !3, line: 4253, type: !7763)
!14903 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 4252, column: 12)
!14904 = !DILocation(line: 4253, column: 24, scope: !14903)
!14905 = !DILocation(line: 4253, column: 32, scope: !14903)
!14906 = !DILocation(line: 4253, column: 38, scope: !14903)
!14907 = !DILocation(line: 4258, column: 10, scope: !14903)
!14908 = !DILocation(line: 4258, column: 8, scope: !14903)
!14909 = !DILocation(line: 4259, column: 7, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 4259, column: 7)
!14911 = !DILocation(line: 4259, column: 7, scope: !14903)
!14912 = !DILocation(line: 4260, column: 25, scope: !14910)
!14913 = !DILocation(line: 4260, column: 32, scope: !14910)
!14914 = !DILocation(line: 4260, column: 4, scope: !14910)
!14915 = !DILocation(line: 4263, column: 22, scope: !14903)
!14916 = !DILocation(line: 4263, column: 9, scope: !14903)
!14917 = !DILocation(line: 4263, column: 7, scope: !14903)
!14918 = !DILocation(line: 4264, column: 7, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 4264, column: 7)
!14920 = !DILocation(line: 4264, column: 7, scope: !14903)
!14921 = !DILocation(line: 4265, column: 4, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14919, file: !3, line: 4264, column: 12)
!14923 = !DILocation(line: 4266, column: 11, scope: !14922)
!14924 = !DILocation(line: 4266, column: 4, scope: !14922)
!14925 = !DILocation(line: 4268, column: 19, scope: !14903)
!14926 = !DILocation(line: 4268, column: 3, scope: !14903)
!14927 = !DILocation(line: 4269, column: 2, scope: !14903)
!14928 = !DILocation(line: 4271, column: 2, scope: !14888)
!14929 = !DILocation(line: 4272, column: 1, scope: !14888)
!14930 = distinct !DISubprogram(name: "of_property_read_u32", scope: !5951, file: !5951, line: 1214, type: !14931, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14931 = !DISubroutineType(types: !14932)
!14932 = !{!260, !14933, !1235, !1265}
!14933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14934, size: 64)
!14934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5950)
!14935 = !DILocalVariable(name: "np", arg: 1, scope: !14930, file: !5951, line: 1214, type: !14933)
!14936 = !DILocation(line: 1214, column: 66, scope: !14930)
!14937 = !DILocalVariable(name: "propname", arg: 2, scope: !14930, file: !5951, line: 1215, type: !1235)
!14938 = !DILocation(line: 1215, column: 24, scope: !14930)
!14939 = !DILocalVariable(name: "out_value", arg: 3, scope: !14930, file: !5951, line: 1216, type: !1265)
!14940 = !DILocation(line: 1216, column: 17, scope: !14930)
!14941 = !DILocation(line: 1218, column: 36, scope: !14930)
!14942 = !DILocation(line: 1218, column: 40, scope: !14930)
!14943 = !DILocation(line: 1218, column: 50, scope: !14930)
!14944 = !DILocation(line: 1218, column: 9, scope: !14930)
!14945 = !DILocation(line: 1218, column: 2, scope: !14930)
!14946 = distinct !DISubprogram(name: "dev_get_platdata", scope: !25, file: !25, line: 828, type: !14431, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14947 = !DILocalVariable(name: "dev", arg: 1, scope: !14946, file: !25, line: 828, type: !5986)
!14948 = !DILocation(line: 828, column: 59, scope: !14946)
!14949 = !DILocation(line: 830, column: 9, scope: !14946)
!14950 = !DILocation(line: 830, column: 14, scope: !14946)
!14951 = !DILocation(line: 830, column: 2, scope: !14946)
!14952 = distinct !DISubprogram(name: "devm_kcalloc", scope: !25, file: !25, line: 229, type: !14953, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14953 = !DISubroutineType(types: !14954)
!14954 = !{!1187, !1291, !1394, !1394, !1175}
!14955 = !DILocalVariable(name: "dev", arg: 1, scope: !14952, file: !25, line: 229, type: !1291)
!14956 = !DILocation(line: 229, column: 49, scope: !14952)
!14957 = !DILocalVariable(name: "n", arg: 2, scope: !14952, file: !25, line: 230, type: !1394)
!14958 = !DILocation(line: 230, column: 13, scope: !14952)
!14959 = !DILocalVariable(name: "size", arg: 3, scope: !14952, file: !25, line: 230, type: !1394)
!14960 = !DILocation(line: 230, column: 23, scope: !14952)
!14961 = !DILocalVariable(name: "flags", arg: 4, scope: !14952, file: !25, line: 230, type: !1175)
!14962 = !DILocation(line: 230, column: 35, scope: !14952)
!14963 = !DILocation(line: 232, column: 28, scope: !14952)
!14964 = !DILocation(line: 232, column: 33, scope: !14952)
!14965 = !DILocation(line: 232, column: 36, scope: !14952)
!14966 = !DILocation(line: 232, column: 42, scope: !14952)
!14967 = !DILocation(line: 232, column: 48, scope: !14952)
!14968 = !DILocation(line: 232, column: 9, scope: !14952)
!14969 = !DILocation(line: 232, column: 2, scope: !14952)
!14970 = distinct !DISubprogram(name: "resource_size", scope: !1224, file: !1224, line: 210, type: !14971, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14971 = !DISubroutineType(types: !14972)
!14972 = !{!1227, !14973}
!14973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14974, size: 64)
!14974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!14975 = !DILocalVariable(name: "res", arg: 1, scope: !14970, file: !1224, line: 210, type: !14973)
!14976 = !DILocation(line: 210, column: 68, scope: !14970)
!14977 = !DILocation(line: 212, column: 9, scope: !14970)
!14978 = !DILocation(line: 212, column: 14, scope: !14970)
!14979 = !DILocation(line: 212, column: 20, scope: !14970)
!14980 = !DILocation(line: 212, column: 25, scope: !14970)
!14981 = !DILocation(line: 212, column: 18, scope: !14970)
!14982 = !DILocation(line: 212, column: 31, scope: !14970)
!14983 = !DILocation(line: 212, column: 2, scope: !14970)
!14984 = distinct !DISubprogram(name: "IS_ERR", scope: !14985, file: !14985, line: 34, type: !14986, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14985 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!14986 = !DISubroutineType(types: !14987)
!14987 = !{!1554, !4475}
!14988 = !DILocalVariable(name: "ptr", arg: 1, scope: !14984, file: !14985, line: 34, type: !4475)
!14989 = !DILocation(line: 34, column: 60, scope: !14984)
!14990 = !DILocation(line: 36, column: 9, scope: !14984)
!14991 = !DILocation(line: 36, column: 2, scope: !14984)
!14992 = distinct !DISubprogram(name: "clk_prepare_enable", scope: !7787, file: !7787, line: 906, type: !14993, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{!260, !7785}
!14995 = !DILocalVariable(name: "clk", arg: 1, scope: !14992, file: !7787, line: 906, type: !7785)
!14996 = !DILocation(line: 906, column: 50, scope: !14992)
!14997 = !DILocalVariable(name: "ret", scope: !14992, file: !7787, line: 908, type: !260)
!14998 = !DILocation(line: 908, column: 6, scope: !14992)
!14999 = !DILocation(line: 910, column: 20, scope: !14992)
!15000 = !DILocation(line: 910, column: 8, scope: !14992)
!15001 = !DILocation(line: 910, column: 6, scope: !14992)
!15002 = !DILocation(line: 911, column: 6, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14992, file: !7787, line: 911, column: 6)
!15004 = !DILocation(line: 911, column: 6, scope: !14992)
!15005 = !DILocation(line: 912, column: 10, scope: !15003)
!15006 = !DILocation(line: 912, column: 3, scope: !15003)
!15007 = !DILocation(line: 913, column: 19, scope: !14992)
!15008 = !DILocation(line: 913, column: 8, scope: !14992)
!15009 = !DILocation(line: 913, column: 6, scope: !14992)
!15010 = !DILocation(line: 914, column: 6, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !14992, file: !7787, line: 914, column: 6)
!15012 = !DILocation(line: 914, column: 6, scope: !14992)
!15013 = !DILocation(line: 915, column: 17, scope: !15011)
!15014 = !DILocation(line: 915, column: 3, scope: !15011)
!15015 = !DILocation(line: 917, column: 9, scope: !14992)
!15016 = !DILocation(line: 917, column: 2, scope: !14992)
!15017 = !DILocation(line: 918, column: 1, scope: !14992)
!15018 = distinct !DISubprogram(name: "PTR_ERR", scope: !14985, file: !14985, line: 29, type: !15019, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15019 = !DISubroutineType(types: !15020)
!15020 = !{!1188, !4475}
!15021 = !DILocalVariable(name: "ptr", arg: 1, scope: !15018, file: !14985, line: 29, type: !4475)
!15022 = !DILocation(line: 29, column: 61, scope: !15018)
!15023 = !DILocation(line: 31, column: 16, scope: !15018)
!15024 = !DILocation(line: 31, column: 9, scope: !15018)
!15025 = !DILocation(line: 31, column: 2, scope: !15018)
!15026 = distinct !DISubprogram(name: "mv_mbus_dram_info", scope: !14452, file: !14452, line: 63, type: !15027, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!14449}
!15029 = !DILocation(line: 65, column: 2, scope: !15026)
!15030 = distinct !DISubprogram(name: "mv_conf_mbus_windows", scope: !3, file: !3, line: 4019, type: !15031, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15031 = !DISubroutineType(types: !15032)
!15032 = !{null, !7763, !14449}
!15033 = !DILocalVariable(name: "hpriv", arg: 1, scope: !15030, file: !3, line: 4019, type: !7763)
!15034 = !DILocation(line: 4019, column: 55, scope: !15030)
!15035 = !DILocalVariable(name: "dram", arg: 2, scope: !15030, file: !3, line: 4020, type: !14449)
!15036 = !DILocation(line: 4020, column: 42, scope: !15030)
!15037 = !DILocalVariable(name: "i", scope: !15030, file: !3, line: 4022, type: !260)
!15038 = !DILocation(line: 4022, column: 6, scope: !15030)
!15039 = !DILocation(line: 4024, column: 9, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 4024, column: 2)
!15041 = !DILocation(line: 4024, column: 7, scope: !15040)
!15042 = !DILocation(line: 4024, column: 14, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15040, file: !3, line: 4024, column: 2)
!15044 = !DILocation(line: 4024, column: 16, scope: !15043)
!15045 = !DILocation(line: 4024, column: 2, scope: !15040)
!15046 = !DILocation(line: 4025, column: 13, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 4024, column: 26)
!15048 = !DILocation(line: 4025, column: 20, scope: !15047)
!15049 = !DILocation(line: 4025, column: 27, scope: !15047)
!15050 = !DILocation(line: 4025, column: 25, scope: !15047)
!15051 = !DILocation(line: 4025, column: 3, scope: !15047)
!15052 = !DILocation(line: 4026, column: 13, scope: !15047)
!15053 = !DILocation(line: 4026, column: 20, scope: !15047)
!15054 = !DILocation(line: 4026, column: 27, scope: !15047)
!15055 = !DILocation(line: 4026, column: 25, scope: !15047)
!15056 = !DILocation(line: 4026, column: 3, scope: !15047)
!15057 = !DILocation(line: 4027, column: 2, scope: !15047)
!15058 = !DILocation(line: 4024, column: 22, scope: !15043)
!15059 = !DILocation(line: 4024, column: 2, scope: !15043)
!15060 = distinct !{!15060, !15045, !15061}
!15061 = !DILocation(line: 4027, column: 2, scope: !15040)
!15062 = !DILocation(line: 4029, column: 9, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 4029, column: 2)
!15064 = !DILocation(line: 4029, column: 7, scope: !15063)
!15065 = !DILocation(line: 4029, column: 14, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 4029, column: 2)
!15067 = !DILocation(line: 4029, column: 18, scope: !15066)
!15068 = !DILocation(line: 4029, column: 24, scope: !15066)
!15069 = !DILocation(line: 4029, column: 16, scope: !15066)
!15070 = !DILocation(line: 4029, column: 2, scope: !15063)
!15071 = !DILocalVariable(name: "cs", scope: !15072, file: !3, line: 4030, type: !15073)
!15072 = distinct !DILexicalBlock(scope: !15066, file: !3, line: 4029, column: 37)
!15073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15074, size: 64)
!15074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14458)
!15075 = !DILocation(line: 4030, column: 34, scope: !15072)
!15076 = !DILocation(line: 4030, column: 39, scope: !15072)
!15077 = !DILocation(line: 4030, column: 45, scope: !15072)
!15078 = !DILocation(line: 4030, column: 50, scope: !15072)
!15079 = !DILocation(line: 4030, column: 48, scope: !15072)
!15080 = !DILocation(line: 4032, column: 12, scope: !15072)
!15081 = !DILocation(line: 4032, column: 16, scope: !15072)
!15082 = !DILocation(line: 4032, column: 21, scope: !15072)
!15083 = !DILocation(line: 4032, column: 26, scope: !15072)
!15084 = !DILocation(line: 4033, column: 5, scope: !15072)
!15085 = !DILocation(line: 4033, column: 9, scope: !15072)
!15086 = !DILocation(line: 4033, column: 19, scope: !15072)
!15087 = !DILocation(line: 4033, column: 4, scope: !15072)
!15088 = !DILocation(line: 4032, column: 40, scope: !15072)
!15089 = !DILocation(line: 4034, column: 5, scope: !15072)
!15090 = !DILocation(line: 4034, column: 11, scope: !15072)
!15091 = !DILocation(line: 4034, column: 31, scope: !15072)
!15092 = !DILocation(line: 4034, column: 4, scope: !15072)
!15093 = !DILocation(line: 4033, column: 25, scope: !15072)
!15094 = !DILocation(line: 4034, column: 37, scope: !15072)
!15095 = !DILocation(line: 4032, column: 10, scope: !15072)
!15096 = !DILocation(line: 4035, column: 4, scope: !15072)
!15097 = !DILocation(line: 4035, column: 11, scope: !15072)
!15098 = !DILocation(line: 4035, column: 18, scope: !15072)
!15099 = !DILocation(line: 4035, column: 16, scope: !15072)
!15100 = !DILocation(line: 4032, column: 3, scope: !15072)
!15101 = !DILocation(line: 4036, column: 10, scope: !15072)
!15102 = !DILocation(line: 4036, column: 14, scope: !15072)
!15103 = !DILocation(line: 4036, column: 20, scope: !15072)
!15104 = !DILocation(line: 4036, column: 27, scope: !15072)
!15105 = !DILocation(line: 4036, column: 34, scope: !15072)
!15106 = !DILocation(line: 4036, column: 32, scope: !15072)
!15107 = !DILocation(line: 4036, column: 3, scope: !15072)
!15108 = !DILocation(line: 4037, column: 2, scope: !15072)
!15109 = !DILocation(line: 4029, column: 33, scope: !15066)
!15110 = !DILocation(line: 4029, column: 2, scope: !15066)
!15111 = distinct !{!15111, !15070, !15112}
!15112 = !DILocation(line: 4037, column: 2, scope: !15063)
!15113 = !DILocation(line: 4038, column: 1, scope: !15030)
!15114 = distinct !DISubprogram(name: "clk_disable_unprepare", scope: !7787, file: !7787, line: 921, type: !15115, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15115 = !DISubroutineType(types: !15116)
!15116 = !{null, !7785}
!15117 = !DILocalVariable(name: "clk", arg: 1, scope: !15114, file: !7787, line: 921, type: !7785)
!15118 = !DILocation(line: 921, column: 54, scope: !15114)
!15119 = !DILocation(line: 923, column: 14, scope: !15114)
!15120 = !DILocation(line: 923, column: 2, scope: !15114)
!15121 = !DILocation(line: 924, column: 16, scope: !15114)
!15122 = !DILocation(line: 924, column: 2, scope: !15114)
!15123 = !DILocation(line: 925, column: 1, scope: !15114)
!15124 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !5951, file: !5951, line: 494, type: !15125, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15125 = !DISubroutineType(types: !15126)
!15126 = !{!260, !14933, !1235, !1265, !1394}
!15127 = !DILocalVariable(name: "np", arg: 1, scope: !15124, file: !5951, line: 494, type: !14933)
!15128 = !DILocation(line: 494, column: 72, scope: !15124)
!15129 = !DILocalVariable(name: "propname", arg: 2, scope: !15124, file: !5951, line: 495, type: !1235)
!15130 = !DILocation(line: 495, column: 23, scope: !15124)
!15131 = !DILocalVariable(name: "out_values", arg: 3, scope: !15124, file: !5951, line: 496, type: !1265)
!15132 = !DILocation(line: 496, column: 16, scope: !15124)
!15133 = !DILocalVariable(name: "sz", arg: 4, scope: !15124, file: !5951, line: 496, type: !1394)
!15134 = !DILocation(line: 496, column: 35, scope: !15124)
!15135 = !DILocalVariable(name: "ret", scope: !15124, file: !5951, line: 498, type: !260)
!15136 = !DILocation(line: 498, column: 6, scope: !15124)
!15137 = !DILocation(line: 498, column: 48, scope: !15124)
!15138 = !DILocation(line: 498, column: 52, scope: !15124)
!15139 = !DILocation(line: 498, column: 62, scope: !15124)
!15140 = !DILocation(line: 499, column: 13, scope: !15124)
!15141 = !DILocation(line: 498, column: 12, scope: !15124)
!15142 = !DILocation(line: 500, column: 6, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15124, file: !5951, line: 500, column: 6)
!15144 = !DILocation(line: 500, column: 10, scope: !15143)
!15145 = !DILocation(line: 500, column: 6, scope: !15124)
!15146 = !DILocation(line: 501, column: 3, scope: !15143)
!15147 = !DILocation(line: 503, column: 10, scope: !15143)
!15148 = !DILocation(line: 503, column: 3, scope: !15143)
!15149 = !DILocation(line: 504, column: 1, scope: !15124)
!15150 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !25, file: !25, line: 219, type: !14953, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15151 = !DILocalVariable(name: "dev", arg: 1, scope: !15150, file: !25, line: 219, type: !1291)
!15152 = !DILocation(line: 219, column: 55, scope: !15150)
!15153 = !DILocalVariable(name: "n", arg: 2, scope: !15150, file: !25, line: 220, type: !1394)
!15154 = !DILocation(line: 220, column: 19, scope: !15150)
!15155 = !DILocalVariable(name: "size", arg: 3, scope: !15150, file: !25, line: 220, type: !1394)
!15156 = !DILocation(line: 220, column: 29, scope: !15150)
!15157 = !DILocalVariable(name: "flags", arg: 4, scope: !15150, file: !25, line: 220, type: !1175)
!15158 = !DILocation(line: 220, column: 41, scope: !15150)
!15159 = !DILocalVariable(name: "bytes", scope: !15150, file: !25, line: 222, type: !1394)
!15160 = !DILocation(line: 222, column: 9, scope: !15150)
!15161 = !DILocalVariable(name: "__a", scope: !15162, file: !25, line: 224, type: !1394)
!15162 = distinct !DILexicalBlock(scope: !15163, file: !25, line: 224, column: 6)
!15163 = distinct !DILexicalBlock(scope: !15150, file: !25, line: 224, column: 6)
!15164 = !DILocation(line: 224, column: 6, scope: !15162)
!15165 = !DILocalVariable(name: "__b", scope: !15162, file: !25, line: 224, type: !1394)
!15166 = !DILocalVariable(name: "__d", scope: !15162, file: !25, line: 224, type: !4008)
!15167 = !DILocation(line: 224, column: 6, scope: !15163)
!15168 = !DILocation(line: 224, column: 6, scope: !15150)
!15169 = !DILocation(line: 225, column: 3, scope: !15163)
!15170 = !DILocation(line: 227, column: 22, scope: !15150)
!15171 = !DILocation(line: 227, column: 27, scope: !15150)
!15172 = !DILocation(line: 227, column: 34, scope: !15150)
!15173 = !DILocation(line: 227, column: 9, scope: !15150)
!15174 = !DILocation(line: 227, column: 2, scope: !15150)
!15175 = !DILocation(line: 228, column: 1, scope: !15150)
!15176 = distinct !DISubprogram(name: "__must_check_overflow", scope: !15177, file: !15177, line: 52, type: !15178, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15177 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!15178 = !DISubroutineType(types: !15179)
!15179 = !{!1554, !1554}
!15180 = !DILocalVariable(name: "overflow", arg: 1, scope: !15176, file: !15177, line: 52, type: !1554)
!15181 = !DILocation(line: 52, column: 60, scope: !15176)
!15182 = !DILocation(line: 54, column: 9, scope: !15176)
!15183 = !DILocation(line: 54, column: 2, scope: !15176)
!15184 = distinct !DISubprogram(name: "platform_get_drvdata", scope: !7922, file: !7922, line: 231, type: !15185, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1322)
!15185 = !DISubroutineType(types: !15186)
!15186 = !{!1187, !15187}
!15187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15188, size: 64)
!15188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7929)
!15189 = !DILocalVariable(name: "pdev", arg: 1, scope: !15184, file: !7922, line: 231, type: !15187)
!15190 = !DILocation(line: 231, column: 72, scope: !15184)
!15191 = !DILocation(line: 233, column: 26, scope: !15184)
!15192 = !DILocation(line: 233, column: 32, scope: !15184)
!15193 = !DILocation(line: 233, column: 9, scope: !15184)
!15194 = !DILocation(line: 233, column: 2, scope: !15184)
