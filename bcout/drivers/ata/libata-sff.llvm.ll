; ModuleID = '../bcout/drivers/ata/libata-sff.llvm.bc'
source_filename = "drivers/ata/libata-sff.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.ata_port_operations = type { i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i1 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_port*)*, i64 (%struct.ata_device*, i64)*, void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)*, i32 (%struct.ata_link*, %struct.ata_device**)*, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)*, void (%struct.ata_device*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32*)*, i32 (%struct.ata_link*, i32, i32)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_port*, i32)*, i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_host*)*, void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i8)*, i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, void (%struct.ata_port*)*, i1 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, i8 (%struct.ata_port*)*, i64 (%struct.ata_port*, i8*)*, i64 (%struct.ata_port*, i8*, i64)*, i64 (%struct.ata_device*, i8*)*, i64 (%struct.ata_device*, i32)*, i64 (%struct.ata_port*, i32, i64)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, %struct.ata_port_operations* }
%struct.ata_queued_cmd = type { %struct.ata_port*, %struct.ata_device*, %struct.scsi_cmnd*, void (%struct.scsi_cmnd*)*, %struct.ata_taskfile, [16 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.scatterlist, %struct.scatterlist*, %struct.scatterlist*, i32, i32, %struct.ata_taskfile, void (%struct.ata_queued_cmd*)*, i8*, i8* }
%struct.ata_port = type { %struct.Scsi_Host*, %struct.ata_port_operations*, %struct.spinlock*, i64, i32, i32, i32, i32, %struct.ata_ioports, i8, i8, %struct.ata_link*, %struct.delayed_work, %struct.ata_bmdma_prd*, i64, i32, i32, i32, i32, [33 x %struct.ata_queued_cmd], i64, i64, i32, i32, [8 x i8], %struct.ata_link, %struct.ata_link*, i32, %struct.ata_link*, %struct.ata_link*, %struct.ata_port_stats, %struct.ata_host*, %struct.device*, %struct.device, %struct.mutex, %struct.delayed_work, %struct.work_struct, i32, i32, %struct.list_head, %struct.wait_queue_head, i32, %struct.completion, %struct.pm_message, i32, %struct.timer_list, i64, i64, i32, i8*, %struct.ata_acpi_gtm, [4 x i8], [512 x i8] }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.spinlock = type { %union.anon.8 }
%union.anon.8 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.53, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.22, [0 x i64] }
%struct.anon.22 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.23, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.23 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.9, %union.anon.60, %struct.atomic_t, [8 x i8] }
%union.anon.9 = type { %struct.anon.10 }
%struct.anon.10 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.62, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.63, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.64, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.67, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.70, %struct.list_head, %struct.list_head, %union.anon.71 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.6, i8* }
%union.anon.6 = type { i64 }
%struct.lockref = type { %union.anon.68 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.70 = type { %struct.list_head }
%union.anon.71 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.61, i32 }
%union.anon.61 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.72, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.72 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.38, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.38 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.75, %union.anon.76, %union.anon.77, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.80, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.74, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.74 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.75 = type { %struct.hlist_node }
%union.anon.76 = type { %struct.rb_node }
%union.anon.77 = type { %struct.anon.79 }
%struct.anon.79 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.80 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.81, void (i8*)*, i8* }
%union.anon.81 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.82, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.82 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.39, %union.anon.40, i32 }
%union.anon.39 = type { %struct.list_head }
%union.anon.40 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.62 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.63 = type { %struct.callback_head }
%union.anon.64 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.11 }
%union.anon.11 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.65 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.65 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.67 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.24 }
%union.anon.24 = type { %struct.anon.25 }
%struct.anon.25 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.29, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.30, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.31, %union.anon.35, %struct.key_restriction* }
%union.anon.29 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.30 = type { i64 }
%union.anon.31 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.32, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.32 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.35 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.45 }
%struct.anon.45 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.52, i32, [12 x i8] }
%union.anon.52 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.53 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.54, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.57 }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { i64, i64 }
%union.anon.57 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type opaque
%struct.scsi_target = type opaque
%struct.proc_dir_entry = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type opaque
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.atomic_t = type { i32 }
%struct.workqueue_struct = type opaque
%struct.ata_ioports = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.ata_bmdma_prd = type { i32, i32 }
%struct.ata_link = type { %struct.ata_port*, i32, %struct.device, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ata_eh_info, %struct.ata_eh_context, [16 x i8], [2 x %struct.ata_device], i64, [56 x i8] }
%struct.ata_eh_info = type { %struct.ata_device*, i32, i32, i32, [2 x i32], i32, i32, [80 x i8], i32 }
%struct.ata_eh_context = type { %struct.ata_eh_info, [2 x i32], [2 x [6 x i32]], [2 x i32], i32, i32, i32, [2 x i8], i64 }
%struct.ata_device = type { %struct.ata_link*, i32, i32, i64, %struct.scsi_device*, i8*, %union.acpi_object*, i32, %struct.device, i64, i64, i32, i64, i8, i8, i8, i32, i32, i32, i32, i64, i64, i64, i16, i16, i16, [58 x i8], %union.anon.73, [8 x i8], [20 x i8], [64 x i8], i32, i32, i32, i32, i32, %struct.ata_ering, [8 x i8] }
%union.acpi_object = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i32, i64, i32 }
%union.anon.73 = type { [128 x i32] }
%struct.ata_ering = type { i32, [32 x %struct.ata_ering_entry] }
%struct.ata_ering_entry = type { i32, i32, i64 }
%struct.ata_port_stats = type { i64, i64, i64 }
%struct.ata_host = type { %struct.spinlock, %struct.device*, i8**, i32, i32, i8*, %struct.ata_port_operations*, i64, %struct.kref, %struct.mutex, %struct.task_struct*, %struct.ata_port*, [0 x %struct.ata_port*] }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.pm_message = type { i32 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.ata_acpi_gtm = type { [2 x %struct.ata_acpi_drive], i32 }
%struct.ata_acpi_drive = type { i32, i32 }
%struct.scsi_cmnd = type opaque
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.ata_taskfile = type { i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.84, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.84 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.ata_port_info = type { i64, i64, i64, i64, i64, %struct.ata_port_operations*, i8* }
%struct.anon.18 = type { i64, i8, i8, %struct.atomic_t, i32 }

@ata_base_port_ops = external dso_local constant %struct.ata_port_operations, align 8
@ata_sff_port_ops = dso_local constant %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* @ata_noop_qc_prep, i32 (%struct.ata_queued_cmd*)* @ata_sff_qc_issue, i1 (%struct.ata_queued_cmd*)* @ata_sff_qc_fill_rtf, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* null, void (%struct.ata_port*)* @ata_sff_freeze, void (%struct.ata_port*)* @ata_sff_thaw, i32 (%struct.ata_link*, i64)* @ata_sff_prereset, i32 (%struct.ata_link*, i32*, i64)* @ata_sff_softreset, i32 (%struct.ata_link*, i32*, i64)* @sata_sff_hardreset, void (%struct.ata_link*, i32*)* @ata_sff_postreset, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* @ata_sff_error_handler, void (%struct.ata_port*)* @ata_sff_lost_interrupt, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32*)* null, i32 (%struct.ata_link*, i32, i32)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* @ata_sff_dev_select, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* @ata_sff_check_status, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* @ata_sff_tf_load, void (%struct.ata_port*, %struct.ata_taskfile*)* @ata_sff_tf_read, void (%struct.ata_port*, %struct.ata_taskfile*)* @ata_sff_exec_command, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* @ata_sff_data_xfer, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* @ata_sff_drain_fifo, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, i8 (%struct.ata_port*)* null, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* @ata_base_port_ops }, align 8, !dbg !0
@.str = private unnamed_addr constant [25 x i8] c"drivers/ata/libata-sff.c\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.1 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.2 = private unnamed_addr constant [58 x i8] c"port is slow to respond, please be patient (Status 0x%x)\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"port failed to respond (%lu secs, Status 0x%x)\0A\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"ST_FIRST: !(DRQ|ERR|DF)\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"ST_FIRST: DRQ=1 with device error, dev_stat 0x%X\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"ST-ATAPI: DRQ=1 with device error, dev_stat 0x%X\00", align 1
@.str.8 = private unnamed_addr constant [50 x i8] c"ST-ATA: DRQ=0 without device error, dev_stat 0x%X\00", align 1
@.str.9 = private unnamed_addr constant [51 x i8] c"ST-ATA: BUSY|DRQ persists on ERR|DF, dev_stat 0x%X\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"ata%d: SFF host state machine in invalid state %d\00", align 1
@ata_sff_wq = internal global %struct.workqueue_struct* null, align 8, !dbg !6670
@.str.11 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"%s: EXIT\0A\00", align 1
@__func__.ata_sff_flush_pio_task = private unnamed_addr constant [23 x i8] c"ata_sff_flush_pio_task\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"lost interrupt (Status 0x%x)\0A\00", align 1
@.str.14 = private unnamed_addr constant [48 x i8] c"device not ready (errno=%d), forcing hardreset\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"SRST failed (errno=%d)\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"drained %d bytes to clear DRQ\0A\00", align 1
@ata_dummy_port_ops = external dso_local global %struct.ata_port_operations, align 8
@.str.17 = private unnamed_addr constant [53 x i8] c"failed to request/iomap BARs for port %d (errno=%d)\0A\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"cmd 0x%llx ctl 0x%llx\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"no available native port\0A\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"failed to allocate ATA host\0A\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"irq %d\00", align 1
@ata_bmdma_port_ops = dso_local constant %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* @ata_bmdma_qc_prep, i32 (%struct.ata_queued_cmd*)* @ata_bmdma_qc_issue, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* @ata_bmdma_error_handler, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* @ata_bmdma_post_internal_cmd, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32*)* null, i32 (%struct.ata_link*, i32, i32)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* @ata_bmdma_port_start, void (%struct.ata_port*)* null, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* null, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* null, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* @ata_bmdma_irq_clear, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* @ata_bmdma_setup, void (%struct.ata_queued_cmd*)* @ata_bmdma_start, void (%struct.ata_queued_cmd*)* @ata_bmdma_stop, i8 (%struct.ata_port*)* @ata_bmdma_status, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* @ata_sff_port_ops }, align 8, !dbg !6666
@ata_bmdma32_port_ops = dso_local constant %struct.ata_port_operations { i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_queued_cmd*)* null, i1 (%struct.ata_queued_cmd*)* null, i32 (%struct.ata_port*)* null, i64 (%struct.ata_device*, i64)* null, void (%struct.ata_port*, %struct.ata_device*)* null, void (%struct.ata_port*, %struct.ata_device*)* null, i32 (%struct.ata_link*, %struct.ata_device**)* null, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)* null, void (%struct.ata_device*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, i32 (%struct.ata_link*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)* null, void (%struct.ata_link*, i32*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32*)* null, i32 (%struct.ata_link*, i32, i32)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, i32 (%struct.ata_link*, i32, i32)* null, i32 (%struct.ata_port*, i32)* null, i32 (%struct.ata_port*)* null, i32 (%struct.ata_port*)* @ata_bmdma_port_start32, void (%struct.ata_port*)* null, void (%struct.ata_host*)* null, void (%struct.ata_port*, i32)* null, void (%struct.ata_port*, i8)* null, i8 (%struct.ata_port*)* null, i8 (%struct.ata_port*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, void (%struct.ata_port*, %struct.ata_taskfile*)* null, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)* @ata_sff_data_xfer32, void (%struct.ata_port*)* null, i1 (%struct.ata_port*)* null, void (%struct.ata_port*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, void (%struct.ata_queued_cmd*)* null, i8 (%struct.ata_port*)* null, i64 (%struct.ata_port*, i8*)* null, i64 (%struct.ata_port*, i8*, i64)* null, i64 (%struct.ata_device*, i8*)* null, i64 (%struct.ata_device*, i32)* null, i64 (%struct.ata_port*, i32, i64)* null, void (%struct.ata_port*)* null, void (%struct.ata_port*)* null, %struct.ata_port_operations* @ata_bmdma_port_ops }, align 8, !dbg !6668
@.str.22 = private unnamed_addr constant [16 x i8] c"BMDMA stat 0x%x\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"BAR4 is zero\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"failed to set dma mask\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"failed to request/iomap BAR4\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"bmdma 0x%llx\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"ata_sff\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@page_offset_base = external dso_local global i64, align 8
@.str.28 = private unnamed_addr constant [43 x i8] c"ATAPI check failed (ireason=0x%x bytes=%u)\00", align 1
@.str.29 = private unnamed_addr constant [60 x i8] c"unexpected or too much trailing data buf=%u cur=%u bytes=%u\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.30 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.31 = private unnamed_addr constant [43 x i8] c"ata_dev_select: ENTER, device %u, wait %u\0A\00", align 1
@sata_deb_timing_hotplug = external dso_local constant [0 x i64], align 8
@sata_deb_timing_normal = external dso_local constant [0 x i64], align 8
@.str.32 = private unnamed_addr constant [30 x i8] c"no valid port_info specified\0A\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"BMDMA: %s, falling back to PIO\0A\00", align 1

; Function Attrs: noredzone
declare dso_local i32 @ata_noop_qc_prep(%struct.ata_queued_cmd*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_qc_issue(%struct.ata_queued_cmd* %qc) #1 !dbg !6678 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !6679, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !6681, metadata !DIExpression()), !dbg !6682
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6683
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !6684
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !6684
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !6682
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !6685, metadata !DIExpression()), !dbg !6686
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6687
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 1, !dbg !6688
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !6688
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 0, !dbg !6689
  %4 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !6689
  store %struct.ata_link* %4, %struct.ata_link** %link, align 8, !dbg !6686
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6690
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 3, !dbg !6692
  %6 = load i64, i64* %flags, align 8, !dbg !6692
  %and = and i64 %6, 512, !dbg !6693
  %tobool = icmp ne i64 %and, 0, !dbg !6693
  br i1 %tobool, label %if.then, label %if.end, !dbg !6694

if.then:                                          ; preds = %entry
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6695
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 4, !dbg !6696
  %flags3 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !6697
  %8 = load i64, i64* %flags3, align 8, !dbg !6698
  %or = or i64 %8, 64, !dbg !6698
  store i64 %or, i64* %flags3, align 8, !dbg !6698
  br label %if.end, !dbg !6695

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6699
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6700
  %dev4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 1, !dbg !6701
  %11 = load %struct.ata_device*, %struct.ata_device** %dev4, align 8, !dbg !6701
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 1, !dbg !6702
  %12 = load i32, i32* %devno, align 8, !dbg !6702
  call void @ata_dev_select(%struct.ata_port* %9, i32 %12, i32 1, i32 0) #9, !dbg !6703
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6704
  %tf5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 4, !dbg !6705
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf5, i32 0, i32 1, !dbg !6706
  %14 = load i8, i8* %protocol, align 8, !dbg !6706
  %conv = zext i8 %14 to i32, !dbg !6704
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb19
    i32 9, label %sw.bb41
    i32 8, label %sw.bb41
  ], !dbg !6707

sw.bb:                                            ; preds = %if.end
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6708
  %tf6 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 4, !dbg !6711
  %flags7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf6, i32 0, i32 0, !dbg !6712
  %16 = load i64, i64* %flags7, align 8, !dbg !6712
  %and8 = and i64 %16, 64, !dbg !6713
  %tobool9 = icmp ne i64 %and8, 0, !dbg !6713
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6714

if.then10:                                        ; preds = %sw.bb
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6715
  call void @ata_qc_set_polling(%struct.ata_queued_cmd* %17) #9, !dbg !6716
  br label %if.end11, !dbg !6716

if.end11:                                         ; preds = %if.then10, %sw.bb
  %18 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6717
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6718
  %tf12 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 4, !dbg !6719
  call void @ata_tf_to_host(%struct.ata_port* %18, %struct.ata_taskfile* %tf12) #9, !dbg !6720
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6721
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 37, !dbg !6722
  store i32 3, i32* %hsm_task_state, align 16, !dbg !6723
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6724
  %tf13 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %21, i32 0, i32 4, !dbg !6726
  %flags14 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf13, i32 0, i32 0, !dbg !6727
  %22 = load i64, i64* %flags14, align 8, !dbg !6727
  %and15 = and i64 %22, 64, !dbg !6728
  %tobool16 = icmp ne i64 %and15, 0, !dbg !6728
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6729

if.then17:                                        ; preds = %if.end11
  %23 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !6730
  call void @ata_sff_queue_pio_task(%struct.ata_link* %23, i64 0) #9, !dbg !6731
  br label %if.end18, !dbg !6731

if.end18:                                         ; preds = %if.then17, %if.end11
  br label %sw.epilog, !dbg !6732

sw.bb19:                                          ; preds = %if.end
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6733
  %tf20 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %24, i32 0, i32 4, !dbg !6735
  %flags21 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf20, i32 0, i32 0, !dbg !6736
  %25 = load i64, i64* %flags21, align 8, !dbg !6736
  %and22 = and i64 %25, 64, !dbg !6737
  %tobool23 = icmp ne i64 %and22, 0, !dbg !6737
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6738

if.then24:                                        ; preds = %sw.bb19
  %26 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6739
  call void @ata_qc_set_polling(%struct.ata_queued_cmd* %26) #9, !dbg !6740
  br label %if.end25, !dbg !6740

if.end25:                                         ; preds = %if.then24, %sw.bb19
  %27 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6741
  %28 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6742
  %tf26 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %28, i32 0, i32 4, !dbg !6743
  call void @ata_tf_to_host(%struct.ata_port* %27, %struct.ata_taskfile* %tf26) #9, !dbg !6744
  %29 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6745
  %tf27 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %29, i32 0, i32 4, !dbg !6747
  %flags28 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf27, i32 0, i32 0, !dbg !6748
  %30 = load i64, i64* %flags28, align 8, !dbg !6748
  %and29 = and i64 %30, 8, !dbg !6749
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6749
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !6750

if.then31:                                        ; preds = %if.end25
  %31 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6751
  %hsm_task_state32 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 37, !dbg !6753
  store i32 1, i32* %hsm_task_state32, align 16, !dbg !6754
  %32 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !6755
  call void @ata_sff_queue_pio_task(%struct.ata_link* %32, i64 0) #9, !dbg !6756
  br label %if.end40, !dbg !6757

if.else:                                          ; preds = %if.end25
  %33 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6758
  %hsm_task_state33 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %33, i32 0, i32 37, !dbg !6760
  store i32 2, i32* %hsm_task_state33, align 16, !dbg !6761
  %34 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6762
  %tf34 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %34, i32 0, i32 4, !dbg !6764
  %flags35 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf34, i32 0, i32 0, !dbg !6765
  %35 = load i64, i64* %flags35, align 8, !dbg !6765
  %and36 = and i64 %35, 64, !dbg !6766
  %tobool37 = icmp ne i64 %and36, 0, !dbg !6766
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !6767

if.then38:                                        ; preds = %if.else
  %36 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !6768
  call void @ata_sff_queue_pio_task(%struct.ata_link* %36, i64 0) #9, !dbg !6769
  br label %if.end39, !dbg !6769

if.end39:                                         ; preds = %if.then38, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then31
  br label %sw.epilog, !dbg !6770

sw.bb41:                                          ; preds = %if.end, %if.end
  %37 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6771
  %tf42 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %37, i32 0, i32 4, !dbg !6773
  %flags43 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf42, i32 0, i32 0, !dbg !6774
  %38 = load i64, i64* %flags43, align 8, !dbg !6774
  %and44 = and i64 %38, 64, !dbg !6775
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6775
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !6776

if.then46:                                        ; preds = %sw.bb41
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6777
  call void @ata_qc_set_polling(%struct.ata_queued_cmd* %39) #9, !dbg !6778
  br label %if.end47, !dbg !6778

if.end47:                                         ; preds = %if.then46, %sw.bb41
  %40 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6779
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6780
  %tf48 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %41, i32 0, i32 4, !dbg !6781
  call void @ata_tf_to_host(%struct.ata_port* %40, %struct.ata_taskfile* %tf48) #9, !dbg !6782
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6783
  %hsm_task_state49 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 37, !dbg !6784
  store i32 1, i32* %hsm_task_state49, align 16, !dbg !6785
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6786
  %dev50 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 1, !dbg !6788
  %44 = load %struct.ata_device*, %struct.ata_device** %dev50, align 8, !dbg !6788
  %flags51 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %44, i32 0, i32 3, !dbg !6789
  %45 = load i64, i64* %flags51, align 16, !dbg !6789
  %and52 = and i64 %45, 4, !dbg !6790
  %tobool53 = icmp ne i64 %and52, 0, !dbg !6790
  br i1 %tobool53, label %lor.lhs.false, label %if.then58, !dbg !6791

lor.lhs.false:                                    ; preds = %if.end47
  %46 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6792
  %tf54 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %46, i32 0, i32 4, !dbg !6793
  %flags55 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf54, i32 0, i32 0, !dbg !6794
  %47 = load i64, i64* %flags55, align 8, !dbg !6794
  %and56 = and i64 %47, 64, !dbg !6795
  %tobool57 = icmp ne i64 %and56, 0, !dbg !6795
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !6796

if.then58:                                        ; preds = %lor.lhs.false, %if.end47
  %48 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !6797
  call void @ata_sff_queue_pio_task(%struct.ata_link* %48, i64 0) #9, !dbg !6798
  br label %if.end59, !dbg !6798

if.end59:                                         ; preds = %if.then58, %lor.lhs.false
  br label %sw.epilog, !dbg !6799

sw.default:                                       ; preds = %if.end
  store i32 64, i32* %retval, align 4, !dbg !6800
  br label %return, !dbg !6800

sw.epilog:                                        ; preds = %if.end59, %if.end40, %if.end18
  store i32 0, i32* %retval, align 4, !dbg !6801
  br label %return, !dbg !6801

return:                                           ; preds = %sw.epilog, %sw.default
  %49 = load i32, i32* %retval, align 4, !dbg !6802
  ret i32 %49, !dbg !6802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @ata_sff_qc_fill_rtf(%struct.ata_queued_cmd* %qc) #1 !dbg !6803 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !6804, metadata !DIExpression()), !dbg !6805
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6806
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !6807
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6807
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 1, !dbg !6808
  %2 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !6808
  %sff_tf_read = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %2, i32 0, i32 42, !dbg !6809
  %3 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_read, align 8, !dbg !6809
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6810
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 0, !dbg !6811
  %5 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !6811
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !6812
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 21, !dbg !6813
  call void %3(%struct.ata_port* %5, %struct.ata_taskfile* %result_tf) #9, !dbg !6806
  ret i1 true, !dbg !6814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_freeze(%struct.ata_port* %ap) #1 !dbg !6815 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !6816, metadata !DIExpression()), !dbg !6817
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6818
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 9, !dbg !6819
  %1 = load i8, i8* %ctl, align 8, !dbg !6820
  %conv = zext i8 %1 to i32, !dbg !6820
  %or = or i32 %conv, 2, !dbg !6820
  %conv1 = trunc i32 %or to i8, !dbg !6820
  store i8 %conv1, i8* %ctl, align 8, !dbg !6820
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6821
  %ctl2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 9, !dbg !6822
  %3 = load i8, i8* %ctl2, align 8, !dbg !6822
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6823
  %last_ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 10, !dbg !6824
  store i8 %3, i8* %last_ctl, align 1, !dbg !6825
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6826
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 1, !dbg !6828
  %6 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !6828
  %sff_set_devctl = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %6, i32 0, i32 38, !dbg !6829
  %7 = load void (%struct.ata_port*, i8)*, void (%struct.ata_port*, i8)** %sff_set_devctl, align 8, !dbg !6829
  %tobool = icmp ne void (%struct.ata_port*, i8)* %7, null, !dbg !6826
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6830

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6831
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 8, !dbg !6832
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 12, !dbg !6833
  %9 = load i8*, i8** %ctl_addr, align 16, !dbg !6833
  %tobool3 = icmp ne i8* %9, null, !dbg !6831
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6834

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6835
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6836
  %ctl4 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 9, !dbg !6837
  %12 = load i8, i8* %ctl4, align 8, !dbg !6837
  call void @ata_sff_set_devctl(%struct.ata_port* %10, i8 zeroext %12) #9, !dbg !6838
  br label %if.end, !dbg !6838

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6839
  %ops5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 1, !dbg !6840
  %14 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops5, align 8, !dbg !6840
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %14, i32 0, i32 39, !dbg !6841
  %15 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !6841
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6842
  %call = call zeroext i8 %15(%struct.ata_port* %16) #9, !dbg !6839
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6843
  %ops6 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 1, !dbg !6845
  %18 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops6, align 8, !dbg !6845
  %sff_irq_clear = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %18, i32 0, i32 47, !dbg !6846
  %19 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear, align 8, !dbg !6846
  %tobool7 = icmp ne void (%struct.ata_port*)* %19, null, !dbg !6843
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !6847

if.then8:                                         ; preds = %if.end
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6848
  %ops9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 1, !dbg !6849
  %21 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops9, align 8, !dbg !6849
  %sff_irq_clear10 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %21, i32 0, i32 47, !dbg !6850
  %22 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear10, align 8, !dbg !6850
  %23 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6851
  call void %22(%struct.ata_port* %23) #9, !dbg !6848
  br label %if.end11, !dbg !6848

if.end11:                                         ; preds = %if.then8, %if.end
  ret void, !dbg !6852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_thaw(%struct.ata_port* %ap) #1 !dbg !6853 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6856
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !6857
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !6857
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 39, !dbg !6858
  %2 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !6858
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6859
  %call = call zeroext i8 %2(%struct.ata_port* %3) #9, !dbg !6856
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6860
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 1, !dbg !6862
  %5 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !6862
  %sff_irq_clear = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %5, i32 0, i32 47, !dbg !6863
  %6 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear, align 8, !dbg !6863
  %tobool = icmp ne void (%struct.ata_port*)* %6, null, !dbg !6860
  br i1 %tobool, label %if.then, label %if.end, !dbg !6864

if.then:                                          ; preds = %entry
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6865
  %ops2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 1, !dbg !6866
  %8 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops2, align 8, !dbg !6866
  %sff_irq_clear3 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %8, i32 0, i32 47, !dbg !6867
  %9 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear3, align 8, !dbg !6867
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6868
  call void %9(%struct.ata_port* %10) #9, !dbg !6865
  br label %if.end, !dbg !6865

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !6869
  call void @ata_sff_irq_on(%struct.ata_port* %11) #9, !dbg !6870
  ret void, !dbg !6871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_prereset(%struct.ata_link* %link, i64 %deadline) #1 !dbg !6872 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %deadline.addr = alloca i64, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %rc = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !6873, metadata !DIExpression()), !dbg !6874
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !6877, metadata !DIExpression()), !dbg !6879
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6880
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 12, !dbg !6881
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !6879
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6882, metadata !DIExpression()), !dbg !6883
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6884
  %2 = load i64, i64* %deadline.addr, align 8, !dbg !6885
  %call = call i32 @ata_std_prereset(%struct.ata_link* %1, i64 %2) #9, !dbg !6886
  store i32 %call, i32* %rc, align 4, !dbg !6887
  %3 = load i32, i32* %rc, align 4, !dbg !6888
  %tobool = icmp ne i32 %3, 0, !dbg !6888
  br i1 %tobool, label %if.then, label %if.end, !dbg !6890

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %rc, align 4, !dbg !6891
  store i32 %4, i32* %retval, align 4, !dbg !6892
  br label %return, !dbg !6892

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !6893
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %5, i32 0, i32 0, !dbg !6895
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 3, !dbg !6896
  %6 = load i32, i32* %action, align 8, !dbg !6896
  %and = and i32 %6, 4, !dbg !6897
  %tobool1 = icmp ne i32 %and, 0, !dbg !6897
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6898

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6899
  br label %return, !dbg !6899

if.end3:                                          ; preds = %if.end
  %7 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6900
  %call4 = call zeroext i1 @ata_link_offline(%struct.ata_link* %7) #9, !dbg !6902
  br i1 %call4, label %if.end12, label %if.then5, !dbg !6903

if.then5:                                         ; preds = %if.end3
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6904
  %9 = load i64, i64* %deadline.addr, align 8, !dbg !6906
  %call6 = call i32 @ata_sff_wait_ready(%struct.ata_link* %8, i64 %9) #9, !dbg !6907
  store i32 %call6, i32* %rc, align 4, !dbg !6908
  %10 = load i32, i32* %rc, align 4, !dbg !6909
  %tobool7 = icmp ne i32 %10, 0, !dbg !6909
  br i1 %tobool7, label %land.lhs.true, label %if.end11, !dbg !6911

land.lhs.true:                                    ; preds = %if.then5
  %11 = load i32, i32* %rc, align 4, !dbg !6912
  %cmp = icmp ne i32 %11, -19, !dbg !6913
  br i1 %cmp, label %if.then8, label %if.end11, !dbg !6914

if.then8:                                         ; preds = %land.lhs.true
  %12 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6915
  %13 = load i32, i32* %rc, align 4, !dbg !6915
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.14, i64 0, i64 0), i32 %13) #9, !dbg !6915
  %14 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !6917
  %i9 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %14, i32 0, i32 0, !dbg !6918
  %action10 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i9, i32 0, i32 3, !dbg !6919
  %15 = load i32, i32* %action10, align 8, !dbg !6920
  %or = or i32 %15, 4, !dbg !6920
  store i32 %or, i32* %action10, align 8, !dbg !6920
  br label %if.end11, !dbg !6921

if.end11:                                         ; preds = %if.then8, %land.lhs.true, %if.then5
  br label %if.end12, !dbg !6922

if.end12:                                         ; preds = %if.end11, %if.end3
  store i32 0, i32* %retval, align 4, !dbg !6923
  br label %return, !dbg !6923

return:                                           ; preds = %if.end12, %if.then2, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !6924
  ret i32 %16, !dbg !6924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_softreset(%struct.ata_link* %link, i32* %classes, i64 %deadline) #1 !dbg !6925 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %classes.addr = alloca i32*, align 8
  %deadline.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %slave_possible = alloca i32, align 4
  %devmask = alloca i32, align 4
  %rc = alloca i32, align 4
  %err = alloca i8, align 1
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !6926, metadata !DIExpression()), !dbg !6927
  store i32* %classes, i32** %classes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %classes.addr, metadata !6928, metadata !DIExpression()), !dbg !6929
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !6930, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !6932, metadata !DIExpression()), !dbg !6933
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6934
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !6935
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !6935
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %slave_possible, metadata !6936, metadata !DIExpression()), !dbg !6937
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6938
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 3, !dbg !6939
  %3 = load i64, i64* %flags, align 8, !dbg !6939
  %and = and i64 %3, 1, !dbg !6940
  %conv = trunc i64 %and to i32, !dbg !6938
  store i32 %conv, i32* %slave_possible, align 4, !dbg !6937
  call void @llvm.dbg.declare(metadata i32* %devmask, metadata !6941, metadata !DIExpression()), !dbg !6942
  store i32 0, i32* %devmask, align 4, !dbg !6942
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6943, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.declare(metadata i8* %err, metadata !6945, metadata !DIExpression()), !dbg !6946
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6947
  %call = call i32 @ata_devchk(%struct.ata_port* %4, i32 0) #9, !dbg !6949
  %tobool = icmp ne i32 %call, 0, !dbg !6949
  br i1 %tobool, label %if.then, label %if.end, !dbg !6950

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %devmask, align 4, !dbg !6951
  %or = or i32 %5, 1, !dbg !6951
  store i32 %or, i32* %devmask, align 4, !dbg !6951
  br label %if.end, !dbg !6952

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %slave_possible, align 4, !dbg !6953
  %tobool2 = icmp ne i32 %6, 0, !dbg !6953
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !6955

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6956
  %call3 = call i32 @ata_devchk(%struct.ata_port* %7, i32 1) #9, !dbg !6957
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6957
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !6958

if.then5:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %devmask, align 4, !dbg !6959
  %or6 = or i32 %8, 2, !dbg !6959
  store i32 %or6, i32* %devmask, align 4, !dbg !6959
  br label %if.end7, !dbg !6960

if.end7:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6961
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 1, !dbg !6962
  %10 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !6962
  %sff_dev_select = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %10, i32 0, i32 37, !dbg !6963
  %11 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select, align 8, !dbg !6963
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6964
  call void %11(%struct.ata_port* %12, i32 0) #9, !dbg !6961
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !6965
  %14 = load i32, i32* %devmask, align 4, !dbg !6966
  %15 = load i64, i64* %deadline.addr, align 8, !dbg !6967
  %call8 = call i32 @ata_bus_softreset(%struct.ata_port* %13, i32 %14, i64 %15) #9, !dbg !6968
  store i32 %call8, i32* %rc, align 4, !dbg !6969
  %16 = load i32, i32* %rc, align 4, !dbg !6970
  %tobool9 = icmp ne i32 %16, 0, !dbg !6970
  br i1 %tobool9, label %land.lhs.true10, label %if.end15, !dbg !6972

land.lhs.true10:                                  ; preds = %if.end7
  %17 = load i32, i32* %rc, align 4, !dbg !6973
  %cmp = icmp ne i32 %17, -19, !dbg !6974
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !6975

lor.lhs.false:                                    ; preds = %land.lhs.true10
  %18 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6976
  %call12 = call i32 @sata_scr_valid(%struct.ata_link* %18) #9, !dbg !6977
  %tobool13 = icmp ne i32 %call12, 0, !dbg !6977
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !6978

if.then14:                                        ; preds = %lor.lhs.false, %land.lhs.true10
  %19 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6979
  %20 = load i32, i32* %rc, align 4, !dbg !6979
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i32 %20) #9, !dbg !6979
  %21 = load i32, i32* %rc, align 4, !dbg !6981
  store i32 %21, i32* %retval, align 4, !dbg !6982
  br label %return, !dbg !6982

if.end15:                                         ; preds = %lor.lhs.false, %if.end7
  %22 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6983
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %22, i32 0, i32 14, !dbg !6984
  %arrayidx = getelementptr [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 0, !dbg !6983
  %23 = load i32, i32* %devmask, align 4, !dbg !6985
  %and16 = and i32 %23, 1, !dbg !6986
  %call17 = call i32 @ata_sff_dev_classify(%struct.ata_device* %arrayidx, i32 %and16, i8* %err) #9, !dbg !6987
  %24 = load i32*, i32** %classes.addr, align 8, !dbg !6988
  %arrayidx18 = getelementptr i32, i32* %24, i64 0, !dbg !6988
  store i32 %call17, i32* %arrayidx18, align 4, !dbg !6989
  %25 = load i32, i32* %slave_possible, align 4, !dbg !6990
  %tobool19 = icmp ne i32 %25, 0, !dbg !6990
  br i1 %tobool19, label %land.lhs.true20, label %if.end30, !dbg !6992

land.lhs.true20:                                  ; preds = %if.end15
  %26 = load i8, i8* %err, align 1, !dbg !6993
  %conv21 = zext i8 %26 to i32, !dbg !6993
  %cmp22 = icmp ne i32 %conv21, 129, !dbg !6994
  br i1 %cmp22, label %if.then24, label %if.end30, !dbg !6995

if.then24:                                        ; preds = %land.lhs.true20
  %27 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !6996
  %device25 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %27, i32 0, i32 14, !dbg !6997
  %arrayidx26 = getelementptr [2 x %struct.ata_device], [2 x %struct.ata_device]* %device25, i64 0, i64 1, !dbg !6996
  %28 = load i32, i32* %devmask, align 4, !dbg !6998
  %and27 = and i32 %28, 2, !dbg !6999
  %call28 = call i32 @ata_sff_dev_classify(%struct.ata_device* %arrayidx26, i32 %and27, i8* %err) #9, !dbg !7000
  %29 = load i32*, i32** %classes.addr, align 8, !dbg !7001
  %arrayidx29 = getelementptr i32, i32* %29, i64 1, !dbg !7001
  store i32 %call28, i32* %arrayidx29, align 4, !dbg !7002
  br label %if.end30, !dbg !7001

if.end30:                                         ; preds = %if.then24, %land.lhs.true20, %if.end15
  store i32 0, i32* %retval, align 4, !dbg !7003
  br label %return, !dbg !7003

return:                                           ; preds = %if.end30, %if.then14
  %30 = load i32, i32* %retval, align 4, !dbg !7004
  ret i32 %30, !dbg !7004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @sata_sff_hardreset(%struct.ata_link* %link, i32* %class, i64 %deadline) #1 !dbg !7005 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %class.addr = alloca i32*, align 8
  %deadline.addr = alloca i64, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %timing = alloca i64*, align 8
  %online = alloca i8, align 1
  %rc = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7006, metadata !DIExpression()), !dbg !7007
  store i32* %class, i32** %class.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %class.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !7012, metadata !DIExpression()), !dbg !7013
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7014
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 12, !dbg !7015
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !7013
  call void @llvm.dbg.declare(metadata i64** %timing, metadata !7016, metadata !DIExpression()), !dbg !7018
  %1 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7019
  %call = call i64* @sata_ehc_deb_timing(%struct.ata_eh_context* %1) #9, !dbg !7020
  store i64* %call, i64** %timing, align 8, !dbg !7018
  call void @llvm.dbg.declare(metadata i8* %online, metadata !7021, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7023, metadata !DIExpression()), !dbg !7024
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7025
  %3 = load i64*, i64** %timing, align 8, !dbg !7026
  %4 = load i64, i64* %deadline.addr, align 8, !dbg !7027
  %call1 = call i32 @sata_link_hardreset(%struct.ata_link* %2, i64* %3, i64 %4, i8* %online, i32 (%struct.ata_link*)* @ata_sff_check_ready) #9, !dbg !7028
  store i32 %call1, i32* %rc, align 4, !dbg !7029
  %5 = load i8, i8* %online, align 1, !dbg !7030
  %tobool = trunc i8 %5 to i1, !dbg !7030
  br i1 %tobool, label %if.then, label %if.end, !dbg !7032

if.then:                                          ; preds = %entry
  %6 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7033
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %6, i32 0, i32 14, !dbg !7034
  %arraydecay = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 0, !dbg !7033
  %call2 = call i32 @ata_sff_dev_classify(%struct.ata_device* %arraydecay, i32 1, i8* null) #9, !dbg !7035
  %7 = load i32*, i32** %class.addr, align 8, !dbg !7036
  store i32 %call2, i32* %7, align 4, !dbg !7037
  br label %if.end, !dbg !7038

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %rc, align 4, !dbg !7039
  ret i32 %8, !dbg !7040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_postreset(%struct.ata_link* %link, i32* %classes) #1 !dbg !7041 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %classes.addr = alloca i32*, align 8
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  store i32* %classes, i32** %classes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %classes.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7046, metadata !DIExpression()), !dbg !7047
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7048
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !7049
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !7049
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !7047
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7050
  %3 = load i32*, i32** %classes.addr, align 8, !dbg !7051
  call void @ata_std_postreset(%struct.ata_link* %2, i32* %3) #9, !dbg !7052
  %4 = load i32*, i32** %classes.addr, align 8, !dbg !7053
  %arrayidx = getelementptr i32, i32* %4, i64 0, !dbg !7053
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7053
  %cmp = icmp ne i32 %5, 11, !dbg !7055
  br i1 %cmp, label %if.then, label %if.end, !dbg !7056

if.then:                                          ; preds = %entry
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7057
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 1, !dbg !7058
  %7 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7058
  %sff_dev_select = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %7, i32 0, i32 37, !dbg !7059
  %8 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select, align 8, !dbg !7059
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7060
  call void %8(%struct.ata_port* %9, i32 1) #9, !dbg !7057
  br label %if.end, !dbg !7057

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32*, i32** %classes.addr, align 8, !dbg !7061
  %arrayidx2 = getelementptr i32, i32* %10, i64 1, !dbg !7061
  %11 = load i32, i32* %arrayidx2, align 4, !dbg !7061
  %cmp3 = icmp ne i32 %11, 11, !dbg !7063
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !7064

if.then4:                                         ; preds = %if.end
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7065
  %ops5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 1, !dbg !7066
  %13 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops5, align 8, !dbg !7066
  %sff_dev_select6 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %13, i32 0, i32 37, !dbg !7067
  %14 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select6, align 8, !dbg !7067
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7068
  call void %14(%struct.ata_port* %15, i32 0) #9, !dbg !7065
  br label %if.end7, !dbg !7065

if.end7:                                          ; preds = %if.then4, %if.end
  %16 = load i32*, i32** %classes.addr, align 8, !dbg !7069
  %arrayidx8 = getelementptr i32, i32* %16, i64 0, !dbg !7069
  %17 = load i32, i32* %arrayidx8, align 4, !dbg !7069
  %cmp9 = icmp eq i32 %17, 11, !dbg !7071
  br i1 %cmp9, label %land.lhs.true, label %if.end13, !dbg !7072

land.lhs.true:                                    ; preds = %if.end7
  %18 = load i32*, i32** %classes.addr, align 8, !dbg !7073
  %arrayidx10 = getelementptr i32, i32* %18, i64 1, !dbg !7073
  %19 = load i32, i32* %arrayidx10, align 4, !dbg !7073
  %cmp11 = icmp eq i32 %19, 11, !dbg !7074
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !7075

if.then12:                                        ; preds = %land.lhs.true
  br label %if.end18, !dbg !7076

if.end13:                                         ; preds = %land.lhs.true, %if.end7
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7078
  %ops14 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 1, !dbg !7080
  %21 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops14, align 8, !dbg !7080
  %sff_set_devctl = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %21, i32 0, i32 38, !dbg !7081
  %22 = load void (%struct.ata_port*, i8)*, void (%struct.ata_port*, i8)** %sff_set_devctl, align 8, !dbg !7081
  %tobool = icmp ne void (%struct.ata_port*, i8)* %22, null, !dbg !7078
  br i1 %tobool, label %if.then16, label %lor.lhs.false, !dbg !7082

lor.lhs.false:                                    ; preds = %if.end13
  %23 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7083
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %23, i32 0, i32 8, !dbg !7084
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 12, !dbg !7085
  %24 = load i8*, i8** %ctl_addr, align 16, !dbg !7085
  %tobool15 = icmp ne i8* %24, null, !dbg !7083
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !7086

if.then16:                                        ; preds = %lor.lhs.false, %if.end13
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7087
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7089
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 9, !dbg !7090
  %27 = load i8, i8* %ctl, align 8, !dbg !7090
  call void @ata_sff_set_devctl(%struct.ata_port* %25, i8 zeroext %27) #9, !dbg !7091
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7092
  %ctl17 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 9, !dbg !7093
  %29 = load i8, i8* %ctl17, align 8, !dbg !7093
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7094
  %last_ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 10, !dbg !7095
  store i8 %29, i8* %last_ctl, align 1, !dbg !7096
  br label %if.end18, !dbg !7097

if.end18:                                         ; preds = %if.then12, %if.then16, %lor.lhs.false
  ret void, !dbg !7098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_error_handler(%struct.ata_port* %ap) #1 !dbg !7099 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !7100, metadata !DIExpression()), !dbg !7105
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7107, metadata !DIExpression()), !dbg !7108
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7109, metadata !DIExpression()), !dbg !7114
  %ap.addr = alloca %struct.ata_port*, align 8
  %softreset = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %hardreset = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %softreset, metadata !7123, metadata !DIExpression()), !dbg !7124
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7125
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !7126
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7126
  %softreset1 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 15, !dbg !7127
  %2 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset1, align 8, !dbg !7127
  store i32 (%struct.ata_link*, i32*, i64)* %2, i32 (%struct.ata_link*, i32*, i64)** %softreset, align 8, !dbg !7124
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %hardreset, metadata !7128, metadata !DIExpression()), !dbg !7129
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7130
  %ops2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !7131
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops2, align 8, !dbg !7131
  %hardreset3 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 16, !dbg !7132
  %5 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset3, align 8, !dbg !7132
  store i32 (%struct.ata_link*, i32*, i64)* %5, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !7129
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !7133, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7135, metadata !DIExpression()), !dbg !7136
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7137
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7138
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 25, !dbg !7139
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 3, !dbg !7140
  %8 = load i32, i32* %active_tag, align 8, !dbg !7140
  %call = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %6, i32 %8) #9, !dbg !7141
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !7142
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7143
  %tobool = icmp ne %struct.ata_queued_cmd* %9, null, !dbg !7143
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7145

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7146
  %flags4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 6, !dbg !7147
  %11 = load i64, i64* %flags4, align 8, !dbg !7147
  %and = and i64 %11, 65536, !dbg !7148
  %tobool5 = icmp ne i64 %and, 0, !dbg !7148
  br i1 %tobool5, label %if.end, label %if.then, !dbg !7149

if.then:                                          ; preds = %land.lhs.true
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %qc, align 8, !dbg !7150
  br label %if.end, !dbg !7151

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %do.body, !dbg !7152

do.body:                                          ; preds = %if.end
  br label %do.body6, !dbg !7153

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7154, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7157, metadata !DIExpression()), !dbg !7156
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7156
  %conv = zext i1 %cmp to i32, !dbg !7156
  store i32 1, i32* %tmp, align 4, !dbg !7156
  %12 = load i32, i32* %tmp, align 4, !dbg !7156
  br label %do.body7, !dbg !7158

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !7159

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !7160

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !7162, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !7166, metadata !DIExpression()), !dbg !7165
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !7165
  %conv13 = zext i1 %cmp12 to i32, !dbg !7165
  store i32 1, i32* %tmp14, align 4, !dbg !7165
  %13 = load i32, i32* %tmp14, align 4, !dbg !7165
  %call15 = call i64 @arch_local_irq_save() #9, !dbg !7167
  store i64 %call15, i64* %flags, align 8, !dbg !7167
  br label %do.end, !dbg !7167

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !7160

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !7159

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7168, !srcloc !7169
  br label %do.body18, !dbg !7168

do.body18:                                        ; preds = %do.body17
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7170
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 2, !dbg !7170
  %15 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !7170
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7171
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !7172
  %rlock.i = bitcast %union.anon.8* %17 to %struct.raw_spinlock*, !dbg !7172
  br label %do.end20, !dbg !7170

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !7168

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !7159

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !7158

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !7153

do.end24:                                         ; preds = %do.end23
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7173
  %ops25 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 1, !dbg !7175
  %19 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops25, align 8, !dbg !7175
  %sff_drain_fifo = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %19, i32 0, i32 48, !dbg !7176
  %20 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %sff_drain_fifo, align 8, !dbg !7176
  %tobool26 = icmp ne void (%struct.ata_queued_cmd*)* %20, null, !dbg !7173
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !7177

if.then27:                                        ; preds = %do.end24
  %21 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7178
  %ops28 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 1, !dbg !7179
  %22 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops28, align 8, !dbg !7179
  %sff_drain_fifo29 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %22, i32 0, i32 48, !dbg !7180
  %23 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %sff_drain_fifo29, align 8, !dbg !7180
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7181
  call void %23(%struct.ata_queued_cmd* %24) #9, !dbg !7178
  br label %if.end30, !dbg !7178

if.end30:                                         ; preds = %if.then27, %do.end24
  %25 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7182
  %lock31 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 2, !dbg !7183
  %26 = load %struct.spinlock*, %struct.spinlock** %lock31, align 16, !dbg !7183
  %27 = load i64, i64* %flags, align 8, !dbg !7184
  store %struct.spinlock* %26, %struct.spinlock** %lock.addr.i44, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1099, metadata !7185, metadata !DIExpression()) #8, !dbg !7188
  call void @llvm.dbg.declare(metadata !1099, metadata !7189, metadata !DIExpression()) #8, !dbg !7188
  store i32 1, i32* %tmp.i, align 4, !dbg !7188
  %28 = load i32, i32* %tmp.i, align 4, !dbg !7188
  call void @llvm.dbg.declare(metadata !1099, metadata !7190, metadata !DIExpression()) #8, !dbg !7195
  call void @llvm.dbg.declare(metadata !1099, metadata !7196, metadata !DIExpression()) #8, !dbg !7195
  store i32 1, i32* %tmp8.i, align 4, !dbg !7195
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !7195
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !7197
  call void @arch_local_irq_restore(i64 %30) #10, !dbg !7197
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7198, !srcloc !7200
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !7201
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !7201
  %rlock.i45 = bitcast %union.anon.8* %32 to %struct.raw_spinlock*, !dbg !7201
  %33 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !7203
  %cmp32 = icmp eq i32 (%struct.ata_link*, i32*, i64)* %33, @sata_std_hardreset, !dbg !7205
  br i1 %cmp32, label %land.lhs.true36, label %lor.lhs.false, !dbg !7206

lor.lhs.false:                                    ; preds = %if.end30
  %34 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !7207
  %cmp34 = icmp eq i32 (%struct.ata_link*, i32*, i64)* %34, @sata_sff_hardreset, !dbg !7208
  br i1 %cmp34, label %land.lhs.true36, label %if.end41, !dbg !7209

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.end30
  %35 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7210
  %link37 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %35, i32 0, i32 25, !dbg !7211
  %call38 = call i32 @sata_scr_valid(%struct.ata_link* %link37) #9, !dbg !7212
  %tobool39 = icmp ne i32 %call38, 0, !dbg !7212
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !7213

if.then40:                                        ; preds = %land.lhs.true36
  store i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !7214
  br label %if.end41, !dbg !7215

if.end41:                                         ; preds = %if.then40, %land.lhs.true36, %lor.lhs.false
  %36 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7216
  %37 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7217
  %ops42 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 1, !dbg !7218
  %38 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops42, align 8, !dbg !7218
  %prereset = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %38, i32 0, i32 14, !dbg !7219
  %39 = load i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i64)** %prereset, align 8, !dbg !7219
  %40 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset, align 8, !dbg !7220
  %41 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !7221
  %42 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7222
  %ops43 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 1, !dbg !7223
  %43 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops43, align 8, !dbg !7223
  %postreset = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %43, i32 0, i32 17, !dbg !7224
  %44 = load void (%struct.ata_link*, i32*)*, void (%struct.ata_link*, i32*)** %postreset, align 8, !dbg !7224
  call void @ata_do_eh(%struct.ata_port* %36, i32 (%struct.ata_link*, i64)* %39, i32 (%struct.ata_link*, i32*, i64)* %40, i32 (%struct.ata_link*, i32*, i64)* %41, void (%struct.ata_link*, i32*)* %44) #9, !dbg !7225
  ret void, !dbg !7226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_lost_interrupt(%struct.ata_port* %ap) #1 !dbg !7227 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %status = alloca i8, align 1
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7228, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.declare(metadata i8* %status, metadata !7230, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !7232, metadata !DIExpression()), !dbg !7233
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7234
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7235
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 25, !dbg !7236
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 3, !dbg !7237
  %2 = load i32, i32* %active_tag, align 8, !dbg !7237
  %call = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %0, i32 %2) #9, !dbg !7238
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !7239
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7240
  %tobool = icmp ne %struct.ata_queued_cmd* %3, null, !dbg !7240
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7242

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7243
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 4, !dbg !7244
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !7245
  %5 = load i64, i64* %flags, align 8, !dbg !7245
  %and = and i64 %5, 64, !dbg !7246
  %tobool1 = icmp ne i64 %and, 0, !dbg !7246
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7247

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7248

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7249
  %call2 = call zeroext i8 @ata_sff_altstatus(%struct.ata_port* %6) #9, !dbg !7250
  store i8 %call2, i8* %status, align 1, !dbg !7251
  %7 = load i8, i8* %status, align 1, !dbg !7252
  %conv = zext i8 %7 to i32, !dbg !7252
  %and3 = and i32 %conv, 128, !dbg !7254
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7254
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7255

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !7256

if.end6:                                          ; preds = %if.end
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7257
  %9 = load i8, i8* %status, align 1, !dbg !7257
  %conv7 = zext i8 %9 to i32, !dbg !7257
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i32 %conv7) #9, !dbg !7257
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7258
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7259
  %call8 = call i32 @ata_sff_port_intr(%struct.ata_port* %10, %struct.ata_queued_cmd* %11) #9, !dbg !7260
  br label %return, !dbg !7261

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !7261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_dev_select(%struct.ata_port* %ap, i32 %device) #1 !dbg !7262 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %device.addr = alloca i32, align 4
  %tmp = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7263, metadata !DIExpression()), !dbg !7264
  store i32 %device, i32* %device.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %device.addr, metadata !7265, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !7267, metadata !DIExpression()), !dbg !7268
  %0 = load i32, i32* %device.addr, align 4, !dbg !7269
  %cmp = icmp eq i32 %0, 0, !dbg !7271
  br i1 %cmp, label %if.then, label %if.else, !dbg !7272

if.then:                                          ; preds = %entry
  store i8 -96, i8* %tmp, align 1, !dbg !7273
  br label %if.end, !dbg !7274

if.else:                                          ; preds = %entry
  store i8 -80, i8* %tmp, align 1, !dbg !7275
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load i8, i8* %tmp, align 1, !dbg !7276
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7277
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 8, !dbg !7278
  %device_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 8, !dbg !7279
  %3 = load i8*, i8** %device_addr, align 16, !dbg !7279
  call void @iowrite8(i8 zeroext %1, i8* %3) #9, !dbg !7280
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7281
  call void @ata_sff_pause(%struct.ata_port* %4) #9, !dbg !7282
  ret void, !dbg !7283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @ata_sff_check_status(%struct.ata_port* %ap) #1 !dbg !7284 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7285, metadata !DIExpression()), !dbg !7286
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7287
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !7288
  %status_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 9, !dbg !7289
  %1 = load i8*, i8** %status_addr, align 8, !dbg !7289
  %call = call i32 @ioread8(i8* %1) #9, !dbg !7290
  %conv = trunc i32 %call to i8, !dbg !7290
  ret i8 %conv, !dbg !7291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_tf_load(%struct.ata_port* %ap, %struct.ata_taskfile* %tf) #1 !dbg !7292 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %ioaddr = alloca %struct.ata_ioports*, align 8
  %is_addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7293, metadata !DIExpression()), !dbg !7294
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !7295, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %ioaddr, metadata !7297, metadata !DIExpression()), !dbg !7299
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7300
  %ioaddr1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !7301
  store %struct.ata_ioports* %ioaddr1, %struct.ata_ioports** %ioaddr, align 8, !dbg !7299
  call void @llvm.dbg.declare(metadata i32* %is_addr, metadata !7302, metadata !DIExpression()), !dbg !7303
  %1 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7304
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %1, i32 0, i32 0, !dbg !7305
  %2 = load i64, i64* %flags, align 8, !dbg !7305
  %and = and i64 %2, 2, !dbg !7306
  %conv = trunc i64 %and to i32, !dbg !7304
  store i32 %conv, i32* %is_addr, align 4, !dbg !7303
  %3 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7307
  %ctl = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %3, i32 0, i32 2, !dbg !7309
  %4 = load i8, i8* %ctl, align 1, !dbg !7309
  %conv2 = zext i8 %4 to i32, !dbg !7307
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7310
  %last_ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 10, !dbg !7311
  %6 = load i8, i8* %last_ctl, align 1, !dbg !7311
  %conv3 = zext i8 %6 to i32, !dbg !7310
  %cmp = icmp ne i32 %conv2, %conv3, !dbg !7312
  br i1 %cmp, label %if.then, label %if.end10, !dbg !7313

if.then:                                          ; preds = %entry
  %7 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7314
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %7, i32 0, i32 12, !dbg !7317
  %8 = load i8*, i8** %ctl_addr, align 8, !dbg !7317
  %tobool = icmp ne i8* %8, null, !dbg !7314
  br i1 %tobool, label %if.then5, label %if.end, !dbg !7318

if.then5:                                         ; preds = %if.then
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7319
  %ctl6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 2, !dbg !7320
  %10 = load i8, i8* %ctl6, align 1, !dbg !7320
  %11 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7321
  %ctl_addr7 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %11, i32 0, i32 12, !dbg !7322
  %12 = load i8*, i8** %ctl_addr7, align 8, !dbg !7322
  call void @iowrite8(i8 zeroext %10, i8* %12) #9, !dbg !7323
  br label %if.end, !dbg !7323

if.end:                                           ; preds = %if.then5, %if.then
  %13 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7324
  %ctl8 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %13, i32 0, i32 2, !dbg !7325
  %14 = load i8, i8* %ctl8, align 1, !dbg !7325
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7326
  %last_ctl9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 10, !dbg !7327
  store i8 %14, i8* %last_ctl9, align 1, !dbg !7328
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7329
  %call = call zeroext i8 @ata_wait_idle(%struct.ata_port* %16) #9, !dbg !7330
  br label %if.end10, !dbg !7331

if.end10:                                         ; preds = %if.end, %entry
  %17 = load i32, i32* %is_addr, align 4, !dbg !7332
  %tobool11 = icmp ne i32 %17, 0, !dbg !7332
  br i1 %tobool11, label %land.lhs.true, label %if.end41, !dbg !7334

land.lhs.true:                                    ; preds = %if.end10
  %18 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7335
  %flags12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %18, i32 0, i32 0, !dbg !7336
  %19 = load i64, i64* %flags12, align 8, !dbg !7336
  %and13 = and i64 %19, 1, !dbg !7337
  %tobool14 = icmp ne i64 %and13, 0, !dbg !7337
  br i1 %tobool14, label %if.then15, label %if.end41, !dbg !7338

if.then15:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7339, metadata !DIExpression()), !dbg !7342
  %20 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7342
  %ctl_addr16 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %20, i32 0, i32 12, !dbg !7342
  %21 = load i8*, i8** %ctl_addr16, align 8, !dbg !7342
  %tobool17 = icmp ne i8* %21, null, !dbg !7342
  %lnot = xor i1 %tobool17, true, !dbg !7342
  %lnot18 = xor i1 %lnot, true, !dbg !7342
  %lnot19 = xor i1 %lnot18, true, !dbg !7342
  %lnot.ext = zext i1 %lnot19 to i32, !dbg !7342
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7342
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !7343
  %tobool20 = icmp ne i32 %22, 0, !dbg !7343
  %lnot21 = xor i1 %tobool20, true, !dbg !7343
  %lnot23 = xor i1 %lnot21, true, !dbg !7343
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !7343
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !7343
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !7343
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !7342

if.then27:                                        ; preds = %if.then15
  br label %do.body, !dbg !7343

do.body:                                          ; preds = %if.then27
  br label %do.body28, !dbg !7345

do.body28:                                        ; preds = %do.body
  br label %do.end, !dbg !7347

do.end:                                           ; preds = %do.body28
  br label %do.body29, !dbg !7345

do.body29:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 406, i32 2307, i64 12) #8, !dbg !7349, !srcloc !7351
  br label %do.end30, !dbg !7349

do.end30:                                         ; preds = %do.body29
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 301) #8, !dbg !7352, !srcloc !7354
  br label %do.body31, !dbg !7345

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !7355

do.end32:                                         ; preds = %do.body31
  br label %do.end33, !dbg !7345

do.end33:                                         ; preds = %do.end32
  br label %if.end34, !dbg !7345

if.end34:                                         ; preds = %do.end33, %if.then15
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !7342
  %tobool35 = icmp ne i32 %23, 0, !dbg !7342
  %lnot36 = xor i1 %tobool35, true, !dbg !7342
  %lnot38 = xor i1 %lnot36, true, !dbg !7342
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !7342
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !7342
  store i64 %conv40, i64* %tmp, align 8, !dbg !7343
  %24 = load i64, i64* %tmp, align 8, !dbg !7342
  %25 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7357
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %25, i32 0, i32 3, !dbg !7358
  %26 = load i8, i8* %hob_feature, align 2, !dbg !7358
  %27 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7359
  %feature_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %27, i32 0, i32 3, !dbg !7360
  %28 = load i8*, i8** %feature_addr, align 8, !dbg !7360
  call void @iowrite8(i8 zeroext %26, i8* %28) #9, !dbg !7361
  %29 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7362
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %29, i32 0, i32 4, !dbg !7363
  %30 = load i8, i8* %hob_nsect, align 1, !dbg !7363
  %31 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7364
  %nsect_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %31, i32 0, i32 4, !dbg !7365
  %32 = load i8*, i8** %nsect_addr, align 8, !dbg !7365
  call void @iowrite8(i8 zeroext %30, i8* %32) #9, !dbg !7366
  %33 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7367
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %33, i32 0, i32 5, !dbg !7368
  %34 = load i8, i8* %hob_lbal, align 4, !dbg !7368
  %35 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7369
  %lbal_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %35, i32 0, i32 5, !dbg !7370
  %36 = load i8*, i8** %lbal_addr, align 8, !dbg !7370
  call void @iowrite8(i8 zeroext %34, i8* %36) #9, !dbg !7371
  %37 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7372
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %37, i32 0, i32 6, !dbg !7373
  %38 = load i8, i8* %hob_lbam, align 1, !dbg !7373
  %39 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7374
  %lbam_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %39, i32 0, i32 6, !dbg !7375
  %40 = load i8*, i8** %lbam_addr, align 8, !dbg !7375
  call void @iowrite8(i8 zeroext %38, i8* %40) #9, !dbg !7376
  %41 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7377
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %41, i32 0, i32 7, !dbg !7378
  %42 = load i8, i8* %hob_lbah, align 2, !dbg !7378
  %43 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7379
  %lbah_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %43, i32 0, i32 7, !dbg !7380
  %44 = load i8*, i8** %lbah_addr, align 8, !dbg !7380
  call void @iowrite8(i8 zeroext %42, i8* %44) #9, !dbg !7381
  br label %if.end41, !dbg !7382

if.end41:                                         ; preds = %if.end34, %land.lhs.true, %if.end10
  %45 = load i32, i32* %is_addr, align 4, !dbg !7383
  %tobool42 = icmp ne i32 %45, 0, !dbg !7383
  br i1 %tobool42, label %if.then43, label %if.end49, !dbg !7385

if.then43:                                        ; preds = %if.end41
  %46 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7386
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %46, i32 0, i32 8, !dbg !7388
  %47 = load i8, i8* %feature, align 1, !dbg !7388
  %48 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7389
  %feature_addr44 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %48, i32 0, i32 3, !dbg !7390
  %49 = load i8*, i8** %feature_addr44, align 8, !dbg !7390
  call void @iowrite8(i8 zeroext %47, i8* %49) #9, !dbg !7391
  %50 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7392
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %50, i32 0, i32 9, !dbg !7393
  %51 = load i8, i8* %nsect, align 8, !dbg !7393
  %52 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7394
  %nsect_addr45 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %52, i32 0, i32 4, !dbg !7395
  %53 = load i8*, i8** %nsect_addr45, align 8, !dbg !7395
  call void @iowrite8(i8 zeroext %51, i8* %53) #9, !dbg !7396
  %54 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7397
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %54, i32 0, i32 10, !dbg !7398
  %55 = load i8, i8* %lbal, align 1, !dbg !7398
  %56 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7399
  %lbal_addr46 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %56, i32 0, i32 5, !dbg !7400
  %57 = load i8*, i8** %lbal_addr46, align 8, !dbg !7400
  call void @iowrite8(i8 zeroext %55, i8* %57) #9, !dbg !7401
  %58 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7402
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %58, i32 0, i32 11, !dbg !7403
  %59 = load i8, i8* %lbam, align 2, !dbg !7403
  %60 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7404
  %lbam_addr47 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %60, i32 0, i32 6, !dbg !7405
  %61 = load i8*, i8** %lbam_addr47, align 8, !dbg !7405
  call void @iowrite8(i8 zeroext %59, i8* %61) #9, !dbg !7406
  %62 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7407
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %62, i32 0, i32 12, !dbg !7408
  %63 = load i8, i8* %lbah, align 1, !dbg !7408
  %64 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7409
  %lbah_addr48 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %64, i32 0, i32 7, !dbg !7410
  %65 = load i8*, i8** %lbah_addr48, align 8, !dbg !7410
  call void @iowrite8(i8 zeroext %63, i8* %65) #9, !dbg !7411
  br label %if.end49, !dbg !7412

if.end49:                                         ; preds = %if.then43, %if.end41
  %66 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7413
  %flags50 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %66, i32 0, i32 0, !dbg !7415
  %67 = load i64, i64* %flags50, align 8, !dbg !7415
  %and51 = and i64 %67, 4, !dbg !7416
  %tobool52 = icmp ne i64 %and51, 0, !dbg !7416
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !7417

if.then53:                                        ; preds = %if.end49
  %68 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7418
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %68, i32 0, i32 13, !dbg !7420
  %69 = load i8, i8* %device, align 4, !dbg !7420
  %70 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7421
  %device_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %70, i32 0, i32 8, !dbg !7422
  %71 = load i8*, i8** %device_addr, align 8, !dbg !7422
  call void @iowrite8(i8 zeroext %69, i8* %71) #9, !dbg !7423
  br label %if.end54, !dbg !7424

if.end54:                                         ; preds = %if.then53, %if.end49
  %72 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7425
  %call55 = call zeroext i8 @ata_wait_idle(%struct.ata_port* %72) #9, !dbg !7426
  ret void, !dbg !7427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_tf_read(%struct.ata_port* %ap, %struct.ata_taskfile* %tf) #1 !dbg !7428 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %ioaddr = alloca %struct.ata_ioports*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7429, metadata !DIExpression()), !dbg !7430
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %ioaddr, metadata !7433, metadata !DIExpression()), !dbg !7434
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7435
  %ioaddr1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !7436
  store %struct.ata_ioports* %ioaddr1, %struct.ata_ioports** %ioaddr, align 8, !dbg !7434
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7437
  %call = call zeroext i8 @ata_sff_check_status(%struct.ata_port* %1) #9, !dbg !7438
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7439
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 14, !dbg !7440
  store i8 %call, i8* %command, align 1, !dbg !7441
  %3 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7442
  %error_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %3, i32 0, i32 2, !dbg !7443
  %4 = load i8*, i8** %error_addr, align 8, !dbg !7443
  %call2 = call i32 @ioread8(i8* %4) #9, !dbg !7444
  %conv = trunc i32 %call2 to i8, !dbg !7444
  %5 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7445
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %5, i32 0, i32 8, !dbg !7446
  store i8 %conv, i8* %feature, align 1, !dbg !7447
  %6 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7448
  %nsect_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %6, i32 0, i32 4, !dbg !7449
  %7 = load i8*, i8** %nsect_addr, align 8, !dbg !7449
  %call3 = call i32 @ioread8(i8* %7) #9, !dbg !7450
  %conv4 = trunc i32 %call3 to i8, !dbg !7450
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7451
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 9, !dbg !7452
  store i8 %conv4, i8* %nsect, align 8, !dbg !7453
  %9 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7454
  %lbal_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %9, i32 0, i32 5, !dbg !7455
  %10 = load i8*, i8** %lbal_addr, align 8, !dbg !7455
  %call5 = call i32 @ioread8(i8* %10) #9, !dbg !7456
  %conv6 = trunc i32 %call5 to i8, !dbg !7456
  %11 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7457
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %11, i32 0, i32 10, !dbg !7458
  store i8 %conv6, i8* %lbal, align 1, !dbg !7459
  %12 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7460
  %lbam_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %12, i32 0, i32 6, !dbg !7461
  %13 = load i8*, i8** %lbam_addr, align 8, !dbg !7461
  %call7 = call i32 @ioread8(i8* %13) #9, !dbg !7462
  %conv8 = trunc i32 %call7 to i8, !dbg !7462
  %14 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7463
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %14, i32 0, i32 11, !dbg !7464
  store i8 %conv8, i8* %lbam, align 2, !dbg !7465
  %15 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7466
  %lbah_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %15, i32 0, i32 7, !dbg !7467
  %16 = load i8*, i8** %lbah_addr, align 8, !dbg !7467
  %call9 = call i32 @ioread8(i8* %16) #9, !dbg !7468
  %conv10 = trunc i32 %call9 to i8, !dbg !7468
  %17 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7469
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %17, i32 0, i32 12, !dbg !7470
  store i8 %conv10, i8* %lbah, align 1, !dbg !7471
  %18 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7472
  %device_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %18, i32 0, i32 8, !dbg !7473
  %19 = load i8*, i8** %device_addr, align 8, !dbg !7473
  %call11 = call i32 @ioread8(i8* %19) #9, !dbg !7474
  %conv12 = trunc i32 %call11 to i8, !dbg !7474
  %20 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7475
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %20, i32 0, i32 13, !dbg !7476
  store i8 %conv12, i8* %device, align 4, !dbg !7477
  %21 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7478
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %21, i32 0, i32 0, !dbg !7480
  %22 = load i64, i64* %flags, align 8, !dbg !7480
  %and = and i64 %22, 1, !dbg !7481
  %tobool = icmp ne i64 %and, 0, !dbg !7481
  br i1 %tobool, label %if.then, label %if.end60, !dbg !7482

if.then:                                          ; preds = %entry
  %23 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7483
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %23, i32 0, i32 12, !dbg !7483
  %24 = load i8*, i8** %ctl_addr, align 8, !dbg !7483
  %tobool13 = icmp ne i8* %24, null, !dbg !7483
  %lnot = xor i1 %tobool13, true, !dbg !7483
  %lnot14 = xor i1 %lnot, true, !dbg !7483
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !7483
  %conv15 = sext i32 %lnot.ext to i64, !dbg !7483
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !7483
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !7486

if.then17:                                        ; preds = %if.then
  %25 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7487
  %ctl = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %25, i32 0, i32 2, !dbg !7489
  %26 = load i8, i8* %ctl, align 1, !dbg !7489
  %conv18 = zext i8 %26 to i32, !dbg !7487
  %or = or i32 %conv18, 128, !dbg !7490
  %conv19 = trunc i32 %or to i8, !dbg !7487
  %27 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7491
  %ctl_addr20 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %27, i32 0, i32 12, !dbg !7492
  %28 = load i8*, i8** %ctl_addr20, align 8, !dbg !7492
  call void @iowrite8(i8 zeroext %conv19, i8* %28) #9, !dbg !7493
  %29 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7494
  %error_addr21 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %29, i32 0, i32 2, !dbg !7495
  %30 = load i8*, i8** %error_addr21, align 8, !dbg !7495
  %call22 = call i32 @ioread8(i8* %30) #9, !dbg !7496
  %conv23 = trunc i32 %call22 to i8, !dbg !7496
  %31 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7497
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %31, i32 0, i32 3, !dbg !7498
  store i8 %conv23, i8* %hob_feature, align 2, !dbg !7499
  %32 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7500
  %nsect_addr24 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %32, i32 0, i32 4, !dbg !7501
  %33 = load i8*, i8** %nsect_addr24, align 8, !dbg !7501
  %call25 = call i32 @ioread8(i8* %33) #9, !dbg !7502
  %conv26 = trunc i32 %call25 to i8, !dbg !7502
  %34 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7503
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %34, i32 0, i32 4, !dbg !7504
  store i8 %conv26, i8* %hob_nsect, align 1, !dbg !7505
  %35 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7506
  %lbal_addr27 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %35, i32 0, i32 5, !dbg !7507
  %36 = load i8*, i8** %lbal_addr27, align 8, !dbg !7507
  %call28 = call i32 @ioread8(i8* %36) #9, !dbg !7508
  %conv29 = trunc i32 %call28 to i8, !dbg !7508
  %37 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7509
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %37, i32 0, i32 5, !dbg !7510
  store i8 %conv29, i8* %hob_lbal, align 4, !dbg !7511
  %38 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7512
  %lbam_addr30 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %38, i32 0, i32 6, !dbg !7513
  %39 = load i8*, i8** %lbam_addr30, align 8, !dbg !7513
  %call31 = call i32 @ioread8(i8* %39) #9, !dbg !7514
  %conv32 = trunc i32 %call31 to i8, !dbg !7514
  %40 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7515
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %40, i32 0, i32 6, !dbg !7516
  store i8 %conv32, i8* %hob_lbam, align 1, !dbg !7517
  %41 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7518
  %lbah_addr33 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %41, i32 0, i32 7, !dbg !7519
  %42 = load i8*, i8** %lbah_addr33, align 8, !dbg !7519
  %call34 = call i32 @ioread8(i8* %42) #9, !dbg !7520
  %conv35 = trunc i32 %call34 to i8, !dbg !7520
  %43 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7521
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %43, i32 0, i32 7, !dbg !7522
  store i8 %conv35, i8* %hob_lbah, align 2, !dbg !7523
  %44 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7524
  %ctl36 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %44, i32 0, i32 2, !dbg !7525
  %45 = load i8, i8* %ctl36, align 1, !dbg !7525
  %46 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7526
  %ctl_addr37 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %46, i32 0, i32 12, !dbg !7527
  %47 = load i8*, i8** %ctl_addr37, align 8, !dbg !7527
  call void @iowrite8(i8 zeroext %45, i8* %47) #9, !dbg !7528
  %48 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7529
  %ctl38 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %48, i32 0, i32 2, !dbg !7530
  %49 = load i8, i8* %ctl38, align 1, !dbg !7530
  %50 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7531
  %last_ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %50, i32 0, i32 10, !dbg !7532
  store i8 %49, i8* %last_ctl, align 1, !dbg !7533
  br label %if.end59, !dbg !7534

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7535, metadata !DIExpression()), !dbg !7537
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7537
  %51 = load i32, i32* %__ret_warn_on, align 4, !dbg !7538
  %tobool39 = icmp ne i32 %51, 0, !dbg !7538
  %lnot40 = xor i1 %tobool39, true, !dbg !7538
  %lnot42 = xor i1 %lnot40, true, !dbg !7538
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !7538
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !7538
  %tobool45 = icmp ne i64 %conv44, 0, !dbg !7538
  br i1 %tobool45, label %if.then46, label %if.end, !dbg !7537

if.then46:                                        ; preds = %if.else
  br label %do.body, !dbg !7538

do.body:                                          ; preds = %if.then46
  br label %do.body47, !dbg !7540

do.body47:                                        ; preds = %do.body
  br label %do.end, !dbg !7542

do.end:                                           ; preds = %do.body47
  br label %do.body48, !dbg !7540

do.body48:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 479, i32 2307, i64 12) #8, !dbg !7544, !srcloc !7546
  br label %do.end49, !dbg !7544

do.end49:                                         ; preds = %do.body48
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 302) #8, !dbg !7547, !srcloc !7549
  br label %do.body50, !dbg !7540

do.body50:                                        ; preds = %do.end49
  br label %do.end51, !dbg !7550

do.end51:                                         ; preds = %do.body50
  br label %do.end52, !dbg !7540

do.end52:                                         ; preds = %do.end51
  br label %if.end, !dbg !7540

if.end:                                           ; preds = %do.end52, %if.else
  %52 = load i32, i32* %__ret_warn_on, align 4, !dbg !7537
  %tobool53 = icmp ne i32 %52, 0, !dbg !7537
  %lnot54 = xor i1 %tobool53, true, !dbg !7537
  %lnot56 = xor i1 %lnot54, true, !dbg !7537
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !7537
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !7537
  store i64 %conv58, i64* %tmp, align 8, !dbg !7538
  %53 = load i64, i64* %tmp, align 8, !dbg !7537
  br label %if.end59

if.end59:                                         ; preds = %if.end, %if.then17
  br label %if.end60, !dbg !7552

if.end60:                                         ; preds = %if.end59, %entry
  ret void, !dbg !7553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_exec_command(%struct.ata_port* %ap, %struct.ata_taskfile* %tf) #1 !dbg !7554 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7555, metadata !DIExpression()), !dbg !7556
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !7559
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 14, !dbg !7560
  %1 = load i8, i8* %command, align 1, !dbg !7560
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7561
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 8, !dbg !7562
  %command_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 10, !dbg !7563
  %3 = load i8*, i8** %command_addr, align 16, !dbg !7563
  call void @iowrite8(i8 zeroext %1, i8* %3) #9, !dbg !7564
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7565
  call void @ata_sff_pause(%struct.ata_port* %4) #9, !dbg !7566
  ret void, !dbg !7567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_data_xfer(%struct.ata_queued_cmd* %qc, i8* %buf, i32 %buflen, i32 %rw) #1 !dbg !7568 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  %rw.addr = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %data_addr = alloca i8*, align 8
  %words = alloca i32, align 4
  %pad = alloca [2 x i8], align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !7569, metadata !DIExpression()), !dbg !7570
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7571, metadata !DIExpression()), !dbg !7572
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !7573, metadata !DIExpression()), !dbg !7574
  store i32 %rw, i32* %rw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rw.addr, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7577, metadata !DIExpression()), !dbg !7578
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !7579
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !7580
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7580
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 0, !dbg !7581
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !7581
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !7582
  %3 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !7582
  store %struct.ata_port* %3, %struct.ata_port** %ap, align 8, !dbg !7578
  call void @llvm.dbg.declare(metadata i8** %data_addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7585
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 8, !dbg !7586
  %data_addr2 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 1, !dbg !7587
  %5 = load i8*, i8** %data_addr2, align 8, !dbg !7587
  store i8* %5, i8** %data_addr, align 8, !dbg !7584
  call void @llvm.dbg.declare(metadata i32* %words, metadata !7588, metadata !DIExpression()), !dbg !7589
  %6 = load i32, i32* %buflen.addr, align 4, !dbg !7590
  %shr = lshr i32 %6, 1, !dbg !7591
  store i32 %shr, i32* %words, align 4, !dbg !7589
  %7 = load i32, i32* %rw.addr, align 4, !dbg !7592
  %cmp = icmp eq i32 %7, 0, !dbg !7594
  br i1 %cmp, label %if.then, label %if.else, !dbg !7595

if.then:                                          ; preds = %entry
  %8 = load i8*, i8** %data_addr, align 8, !dbg !7596
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !7597
  %10 = load i32, i32* %words, align 4, !dbg !7598
  %conv = zext i32 %10 to i64, !dbg !7598
  call void @ioread16_rep(i8* %8, i8* %9, i64 %conv) #9, !dbg !7599
  br label %if.end, !dbg !7599

if.else:                                          ; preds = %entry
  %11 = load i8*, i8** %data_addr, align 8, !dbg !7600
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !7601
  %13 = load i32, i32* %words, align 4, !dbg !7602
  %conv3 = zext i32 %13 to i64, !dbg !7602
  call void @iowrite16_rep(i8* %11, i8* %12, i64 %conv3) #9, !dbg !7603
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %buflen.addr, align 4, !dbg !7604
  %and = and i32 %14, 1, !dbg !7604
  %tobool = icmp ne i32 %and, 0, !dbg !7604
  %lnot = xor i1 %tobool, true, !dbg !7604
  %lnot4 = xor i1 %lnot, true, !dbg !7604
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !7604
  %conv5 = sext i32 %lnot.ext to i64, !dbg !7604
  %tobool6 = icmp ne i64 %conv5, 0, !dbg !7604
  br i1 %tobool6, label %if.then7, label %if.end15, !dbg !7606

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [2 x i8]* %pad, metadata !7607, metadata !DIExpression()), !dbg !7610
  %15 = bitcast [2 x i8]* %pad to i8*, !dbg !7610
  call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 2, i1 false), !dbg !7610
  %16 = load i32, i32* %buflen.addr, align 4, !dbg !7611
  %sub = sub i32 %16, 1, !dbg !7612
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !7613
  %idx.ext = zext i32 %sub to i64, !dbg !7613
  %add.ptr = getelementptr i8, i8* %17, i64 %idx.ext, !dbg !7613
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !7613
  %18 = load i32, i32* %rw.addr, align 4, !dbg !7614
  %cmp8 = icmp eq i32 %18, 0, !dbg !7616
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !7617

if.then10:                                        ; preds = %if.then7
  %19 = load i8*, i8** %data_addr, align 8, !dbg !7618
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %pad, i64 0, i64 0, !dbg !7620
  call void @ioread16_rep(i8* %19, i8* %arraydecay, i64 1) #9, !dbg !7621
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %pad, i64 0, i64 0, !dbg !7622
  %20 = load i8, i8* %arrayidx, align 1, !dbg !7622
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !7623
  store i8 %20, i8* %21, align 1, !dbg !7624
  br label %if.end14, !dbg !7625

if.else11:                                        ; preds = %if.then7
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !7626
  %23 = load i8, i8* %22, align 1, !dbg !7628
  %arrayidx12 = getelementptr [2 x i8], [2 x i8]* %pad, i64 0, i64 0, !dbg !7629
  store i8 %23, i8* %arrayidx12, align 1, !dbg !7630
  %24 = load i8*, i8** %data_addr, align 8, !dbg !7631
  %arraydecay13 = getelementptr inbounds [2 x i8], [2 x i8]* %pad, i64 0, i64 0, !dbg !7632
  call void @iowrite16_rep(i8* %24, i8* %arraydecay13, i64 1) #9, !dbg !7633
  br label %if.end14

if.end14:                                         ; preds = %if.else11, %if.then10
  %25 = load i32, i32* %words, align 4, !dbg !7634
  %inc = add i32 %25, 1, !dbg !7634
  store i32 %inc, i32* %words, align 4, !dbg !7634
  br label %if.end15, !dbg !7635

if.end15:                                         ; preds = %if.end14, %if.end
  %26 = load i32, i32* %words, align 4, !dbg !7636
  %shl = shl i32 %26, 1, !dbg !7637
  ret i32 %shl, !dbg !7638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_drain_fifo(%struct.ata_queued_cmd* %qc) #1 !dbg !7639 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %count = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7642, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7644, metadata !DIExpression()), !dbg !7645
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !7646
  %cmp = icmp eq %struct.ata_queued_cmd* %0, null, !dbg !7648
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7649

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !7650
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 11, !dbg !7651
  %2 = load i32, i32* %dma_dir, align 8, !dbg !7651
  %cmp1 = icmp eq i32 %2, 1, !dbg !7652
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7653

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end8, !dbg !7654

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !7655
  %ap2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 0, !dbg !7656
  %4 = load %struct.ata_port*, %struct.ata_port** %ap2, align 8, !dbg !7656
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !7657
  store i32 0, i32* %count, align 4, !dbg !7658
  br label %for.cond, !dbg !7660

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7661
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 1, !dbg !7663
  %6 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7663
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %6, i32 0, i32 39, !dbg !7664
  %7 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !7664
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7665
  %call = call zeroext i8 %7(%struct.ata_port* %8) #9, !dbg !7661
  %conv = zext i8 %call to i32, !dbg !7661
  %and = and i32 %conv, 8, !dbg !7666
  %tobool = icmp ne i32 %and, 0, !dbg !7666
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7667

land.rhs:                                         ; preds = %for.cond
  %9 = load i32, i32* %count, align 4, !dbg !7668
  %cmp3 = icmp slt i32 %9, 65536, !dbg !7669
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %10 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ], !dbg !7670
  br i1 %10, label %for.body, label %for.end, !dbg !7671

for.body:                                         ; preds = %land.end
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7672
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 8, !dbg !7673
  %data_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 1, !dbg !7674
  %12 = load i8*, i8** %data_addr, align 8, !dbg !7674
  %call5 = call i32 @ioread16(i8* %12) #9, !dbg !7675
  br label %for.inc, !dbg !7675

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %count, align 4, !dbg !7676
  %add = add i32 %13, 2, !dbg !7676
  store i32 %add, i32* %count, align 4, !dbg !7676
  br label %for.cond, !dbg !7677, !llvm.loop !7678

for.end:                                          ; preds = %land.end
  %14 = load i32, i32* %count, align 4, !dbg !7680
  %tobool6 = icmp ne i32 %14, 0, !dbg !7680
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7682

if.then7:                                         ; preds = %for.end
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7683
  %16 = load i32, i32* %count, align 4, !dbg !7683
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0), i32 %16) #9, !dbg !7683
  br label %if.end8, !dbg !7683

if.end8:                                          ; preds = %if.then, %if.then7, %for.end
  ret void, !dbg !7684
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noredzone
declare dso_local i32 @ioread8(i8*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_pause(%struct.ata_port* %ap) #1 !dbg !7685 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7686, metadata !DIExpression()), !dbg !7687
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7688
  call void @ata_sff_sync(%struct.ata_port* %0) #9, !dbg !7689
  call void @__const_udelay(i64 2000) #9, !dbg !7690
  ret void, !dbg !7695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_sff_sync(%struct.ata_port* %ap) #1 !dbg !7696 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7699
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !7701
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7701
  %sff_check_altstatus = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 40, !dbg !7702
  %2 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_altstatus, align 8, !dbg !7702
  %tobool = icmp ne i8 (%struct.ata_port*)* %2, null, !dbg !7699
  br i1 %tobool, label %if.then, label %if.else, !dbg !7703

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7704
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !7705
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !7705
  %sff_check_altstatus2 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 40, !dbg !7706
  %5 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_altstatus2, align 8, !dbg !7706
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7707
  %call = call zeroext i8 %5(%struct.ata_port* %6) #9, !dbg !7704
  br label %if.end8, !dbg !7704

if.else:                                          ; preds = %entry
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7708
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 8, !dbg !7710
  %altstatus_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 11, !dbg !7711
  %8 = load i8*, i8** %altstatus_addr, align 8, !dbg !7711
  %tobool3 = icmp ne i8* %8, null, !dbg !7708
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !7712

if.then4:                                         ; preds = %if.else
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7713
  %ioaddr5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 8, !dbg !7714
  %altstatus_addr6 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr5, i32 0, i32 11, !dbg !7715
  %10 = load i8*, i8** %altstatus_addr6, align 8, !dbg !7715
  %call7 = call i32 @ioread8(i8* %10) #9, !dbg !7716
  br label %if.end, !dbg !7716

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !7717
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_dma_pause(%struct.ata_port* %ap) #1 !dbg !7718 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7719, metadata !DIExpression()), !dbg !7720
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7721
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !7723
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7723
  %sff_check_altstatus = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 40, !dbg !7724
  %2 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_altstatus, align 8, !dbg !7724
  %tobool = icmp ne i8 (%struct.ata_port*)* %2, null, !dbg !7721
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7725

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7726
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 8, !dbg !7727
  %altstatus_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 11, !dbg !7728
  %4 = load i8*, i8** %altstatus_addr, align 8, !dbg !7728
  %tobool1 = icmp ne i8* %4, null, !dbg !7726
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7729

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7730
  %call = call zeroext i8 @ata_sff_altstatus(%struct.ata_port* %5) #9, !dbg !7732
  br label %do.end7, !dbg !7733

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !7734

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !7735

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7737

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7735

do.body3:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 176, i32 0, i64 12) #8, !dbg !7739, !srcloc !7741
  br label %do.end4, !dbg !7739

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !7735

do.body5:                                         ; preds = %do.end4
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #8, !dbg !7742, !srcloc !7745
  unreachable, !dbg !7746

do.end6:                                          ; No predecessors!
  br label %do.end7, !dbg !7735

do.end7:                                          ; preds = %if.then, %do.end6
  ret void, !dbg !7747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_sff_altstatus(%struct.ata_port* %ap) #1 !dbg !7748 {
entry:
  %retval = alloca i8, align 1
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7751
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !7753
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7753
  %sff_check_altstatus = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 40, !dbg !7754
  %2 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_altstatus, align 8, !dbg !7754
  %tobool = icmp ne i8 (%struct.ata_port*)* %2, null, !dbg !7751
  br i1 %tobool, label %if.then, label %if.end, !dbg !7755

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7756
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !7757
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !7757
  %sff_check_altstatus2 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 40, !dbg !7758
  %5 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_altstatus2, align 8, !dbg !7758
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7759
  %call = call zeroext i8 %5(%struct.ata_port* %6) #9, !dbg !7756
  store i8 %call, i8* %retval, align 1, !dbg !7760
  br label %return, !dbg !7760

if.end:                                           ; preds = %entry
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7761
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 8, !dbg !7762
  %altstatus_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 11, !dbg !7763
  %8 = load i8*, i8** %altstatus_addr, align 8, !dbg !7763
  %call3 = call i32 @ioread8(i8* %8) #9, !dbg !7764
  %conv = trunc i32 %call3 to i8, !dbg !7764
  store i8 %conv, i8* %retval, align 1, !dbg !7765
  br label %return, !dbg !7765

return:                                           ; preds = %if.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !7766
  ret i8 %9, !dbg !7766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_busy_sleep(%struct.ata_port* %ap, i64 %tmout_pat, i64 %tmout) #1 !dbg !7767 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %tmout_pat.addr = alloca i64, align 8
  %tmout.addr = alloca i64, align 8
  %timer_start = alloca i64, align 8
  %timeout = alloca i64, align 8
  %status = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store i64 %tmout_pat, i64* %tmout_pat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tmout_pat.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store i64 %tmout, i64* %tmout.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tmout.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata i64* %timer_start, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !7778, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.declare(metadata i8* %status, metadata !7780, metadata !DIExpression()), !dbg !7781
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7782
  %call = call zeroext i8 @ata_sff_busy_wait(%struct.ata_port* %0, i32 128, i32 300) #9, !dbg !7783
  store i8 %call, i8* %status, align 1, !dbg !7784
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !7785
  store i64 %1, i64* %timer_start, align 8, !dbg !7786
  %2 = load i64, i64* %timer_start, align 8, !dbg !7787
  %3 = load i64, i64* %tmout_pat.addr, align 8, !dbg !7788
  %call1 = call i64 @ata_deadline(i64 %2, i64 %3) #9, !dbg !7789
  store i64 %call1, i64* %timeout, align 8, !dbg !7790
  br label %while.cond, !dbg !7791

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i8, i8* %status, align 1, !dbg !7792
  %conv = zext i8 %4 to i32, !dbg !7792
  %cmp = icmp ne i32 %conv, 255, !dbg !7793
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7794

land.lhs.true:                                    ; preds = %while.cond
  %5 = load i8, i8* %status, align 1, !dbg !7795
  %conv3 = zext i8 %5 to i32, !dbg !7795
  %and = and i32 %conv3, 128, !dbg !7796
  %tobool = icmp ne i32 %and, 0, !dbg !7796
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7797

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !7798
  %7 = load i64, i64* %timeout, align 8, !dbg !7798
  %sub = sub i64 %6, %7, !dbg !7798
  %cmp4 = icmp slt i64 %sub, 0, !dbg !7798
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp4, %land.rhs ], !dbg !7799
  br i1 %8, label %while.body, label %while.end, !dbg !7791

while.body:                                       ; preds = %land.end
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7800
  call void @ata_msleep(%struct.ata_port* %9, i32 50) #9, !dbg !7802
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7803
  %call6 = call zeroext i8 @ata_sff_busy_wait(%struct.ata_port* %10, i32 128, i32 3) #9, !dbg !7804
  store i8 %call6, i8* %status, align 1, !dbg !7805
  br label %while.cond, !dbg !7791, !llvm.loop !7806

while.end:                                        ; preds = %land.end
  %11 = load i8, i8* %status, align 1, !dbg !7808
  %conv7 = zext i8 %11 to i32, !dbg !7808
  %cmp8 = icmp ne i32 %conv7, 255, !dbg !7810
  br i1 %cmp8, label %land.lhs.true10, label %if.end, !dbg !7811

land.lhs.true10:                                  ; preds = %while.end
  %12 = load i8, i8* %status, align 1, !dbg !7812
  %conv11 = zext i8 %12 to i32, !dbg !7812
  %and12 = and i32 %conv11, 128, !dbg !7813
  %tobool13 = icmp ne i32 %and12, 0, !dbg !7813
  br i1 %tobool13, label %if.then, label %if.end, !dbg !7814

if.then:                                          ; preds = %land.lhs.true10
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7815
  %14 = load i8, i8* %status, align 1, !dbg !7815
  %conv14 = zext i8 %14 to i32, !dbg !7815
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0), i32 %conv14) #9, !dbg !7815
  br label %if.end, !dbg !7815

if.end:                                           ; preds = %if.then, %land.lhs.true10, %while.end
  %15 = load i64, i64* %timer_start, align 8, !dbg !7816
  %16 = load i64, i64* %tmout.addr, align 8, !dbg !7817
  %call15 = call i64 @ata_deadline(i64 %15, i64 %16) #9, !dbg !7818
  store i64 %call15, i64* %timeout, align 8, !dbg !7819
  br label %while.cond16, !dbg !7820

while.cond16:                                     ; preds = %while.body29, %if.end
  %17 = load i8, i8* %status, align 1, !dbg !7821
  %conv17 = zext i8 %17 to i32, !dbg !7821
  %cmp18 = icmp ne i32 %conv17, 255, !dbg !7822
  br i1 %cmp18, label %land.lhs.true20, label %land.end28, !dbg !7823

land.lhs.true20:                                  ; preds = %while.cond16
  %18 = load i8, i8* %status, align 1, !dbg !7824
  %conv21 = zext i8 %18 to i32, !dbg !7824
  %and22 = and i32 %conv21, 128, !dbg !7825
  %tobool23 = icmp ne i32 %and22, 0, !dbg !7825
  br i1 %tobool23, label %land.rhs24, label %land.end28, !dbg !7826

land.rhs24:                                       ; preds = %land.lhs.true20
  %19 = load volatile i64, i64* @jiffies, align 8, !dbg !7827
  %20 = load i64, i64* %timeout, align 8, !dbg !7827
  %sub25 = sub i64 %19, %20, !dbg !7827
  %cmp26 = icmp slt i64 %sub25, 0, !dbg !7827
  br label %land.end28

land.end28:                                       ; preds = %land.rhs24, %land.lhs.true20, %while.cond16
  %21 = phi i1 [ false, %land.lhs.true20 ], [ false, %while.cond16 ], [ %cmp26, %land.rhs24 ], !dbg !7799
  br i1 %21, label %while.body29, label %while.end31, !dbg !7820

while.body29:                                     ; preds = %land.end28
  %22 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7828
  call void @ata_msleep(%struct.ata_port* %22, i32 50) #9, !dbg !7830
  %23 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7831
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %23, i32 0, i32 1, !dbg !7832
  %24 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7832
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %24, i32 0, i32 39, !dbg !7833
  %25 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !7833
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7834
  %call30 = call zeroext i8 %25(%struct.ata_port* %26) #9, !dbg !7831
  store i8 %call30, i8* %status, align 1, !dbg !7835
  br label %while.cond16, !dbg !7820, !llvm.loop !7836

while.end31:                                      ; preds = %land.end28
  %27 = load i8, i8* %status, align 1, !dbg !7838
  %conv32 = zext i8 %27 to i32, !dbg !7838
  %cmp33 = icmp eq i32 %conv32, 255, !dbg !7840
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !7841

if.then35:                                        ; preds = %while.end31
  store i32 -19, i32* %retval, align 4, !dbg !7842
  br label %return, !dbg !7842

if.end36:                                         ; preds = %while.end31
  %28 = load i8, i8* %status, align 1, !dbg !7843
  %conv37 = zext i8 %28 to i32, !dbg !7843
  %and38 = and i32 %conv37, 128, !dbg !7845
  %tobool39 = icmp ne i32 %and38, 0, !dbg !7845
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !7846

if.then40:                                        ; preds = %if.end36
  %29 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7847
  %30 = load i64, i64* %tmout.addr, align 8, !dbg !7847
  %add = add i64 %30, 1000, !dbg !7847
  %sub41 = sub i64 %add, 1, !dbg !7847
  %div = udiv i64 %sub41, 1000, !dbg !7847
  %31 = load i8, i8* %status, align 1, !dbg !7847
  %conv42 = zext i8 %31 to i32, !dbg !7847
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i64 %div, i32 %conv42) #9, !dbg !7847
  store i32 -16, i32* %retval, align 4, !dbg !7849
  br label %return, !dbg !7849

if.end43:                                         ; preds = %if.end36
  store i32 0, i32* %retval, align 4, !dbg !7850
  br label %return, !dbg !7850

return:                                           ; preds = %if.end43, %if.then40, %if.then35
  %32 = load i32, i32* %retval, align 4, !dbg !7851
  ret i32 %32, !dbg !7851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_sff_busy_wait(%struct.ata_port* %ap, i32 %bits, i32 %max) #1 !dbg !7852 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %bits.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.declare(metadata i8* %status, metadata !7861, metadata !DIExpression()), !dbg !7862
  br label %do.body, !dbg !7863

do.body:                                          ; preds = %land.end, %entry
  call void @__const_udelay(i64 42950) #9, !dbg !7864
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7870
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !7871
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7871
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 39, !dbg !7872
  %2 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !7872
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7873
  %call = call zeroext i8 %2(%struct.ata_port* %3) #9, !dbg !7870
  store i8 %call, i8* %status, align 1, !dbg !7874
  %4 = load i32, i32* %max.addr, align 4, !dbg !7875
  %dec = add i32 %4, -1, !dbg !7875
  store i32 %dec, i32* %max.addr, align 4, !dbg !7875
  br label %do.cond, !dbg !7876

do.cond:                                          ; preds = %do.body
  %5 = load i8, i8* %status, align 1, !dbg !7877
  %conv = zext i8 %5 to i32, !dbg !7877
  %cmp = icmp ne i32 %conv, 255, !dbg !7878
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7879

land.lhs.true:                                    ; preds = %do.cond
  %6 = load i8, i8* %status, align 1, !dbg !7880
  %conv2 = zext i8 %6 to i32, !dbg !7880
  %7 = load i32, i32* %bits.addr, align 4, !dbg !7881
  %and = and i32 %conv2, %7, !dbg !7882
  %tobool = icmp ne i32 %and, 0, !dbg !7882
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7883

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %max.addr, align 4, !dbg !7884
  %cmp3 = icmp ugt i32 %8, 0, !dbg !7885
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %do.cond
  %9 = phi i1 [ false, %land.lhs.true ], [ false, %do.cond ], [ %cmp3, %land.rhs ], !dbg !7886
  br i1 %9, label %do.body, label %do.end, !dbg !7876, !llvm.loop !7887

do.end:                                           ; preds = %land.end
  %10 = load i8, i8* %status, align 1, !dbg !7889
  ret i8 %10, !dbg !7890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_deadline(i64 %from_jiffies, i64 %timeout_msecs) #1 !dbg !7891 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7894, metadata !DIExpression()), !dbg !7899
  %from_jiffies.addr = alloca i64, align 8
  %timeout_msecs.addr = alloca i64, align 8
  store i64 %from_jiffies, i64* %from_jiffies.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from_jiffies.addr, metadata !7901, metadata !DIExpression()), !dbg !7902
  store i64 %timeout_msecs, i64* %timeout_msecs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout_msecs.addr, metadata !7903, metadata !DIExpression()), !dbg !7904
  %0 = load i64, i64* %from_jiffies.addr, align 8, !dbg !7905
  %1 = load i64, i64* %timeout_msecs.addr, align 8, !dbg !7906
  %conv = trunc i64 %1 to i32, !dbg !7906
  store i32 %conv, i32* %m.addr.i, align 4
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !7907
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #8, !dbg !7909
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !7910

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !7911
  %cmp.i = icmp slt i32 %4, 0, !dbg !7914
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7915

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !7916
  br label %msecs_to_jiffies.exit, !dbg !7916

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !7917
  %call.i = call i64 @_msecs_to_jiffies(i32 %5) #10, !dbg !7918
  store i64 %call.i, i64* %retval.i, align 8, !dbg !7919
  br label %msecs_to_jiffies.exit, !dbg !7919

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !7920
  %call2.i = call i64 @__msecs_to_jiffies(i32 %6) #10, !dbg !7922
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !7923
  br label %msecs_to_jiffies.exit, !dbg !7923

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !7924
  %add = add i64 %0, %7, !dbg !7925
  ret i64 %add, !dbg !7926
}

; Function Attrs: noredzone
declare dso_local void @ata_msleep(%struct.ata_port*, i32) #0

; Function Attrs: noredzone
declare dso_local void @ata_port_printk(%struct.ata_port*, i8*, i8*, ...) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_wait_ready(%struct.ata_link* %link, i64 %deadline) #1 !dbg !7927 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %deadline.addr = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7928, metadata !DIExpression()), !dbg !7929
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !7930, metadata !DIExpression()), !dbg !7931
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7932
  %1 = load i64, i64* %deadline.addr, align 8, !dbg !7933
  %call = call i32 @ata_wait_ready(%struct.ata_link* %0, i64 %1, i32 (%struct.ata_link*)* @ata_sff_check_ready) #9, !dbg !7934
  ret i32 %call, !dbg !7935
}

; Function Attrs: noredzone
declare dso_local i32 @ata_wait_ready(%struct.ata_link*, i64, i32 (%struct.ata_link*)*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_sff_check_ready(%struct.ata_link* %link) #1 !dbg !7936 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %status = alloca i8, align 1
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.declare(metadata i8* %status, metadata !7941, metadata !DIExpression()), !dbg !7942
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7943
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !7944
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !7944
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 1, !dbg !7945
  %2 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7945
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %2, i32 0, i32 39, !dbg !7946
  %3 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !7946
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !7947
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 0, !dbg !7948
  %5 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !7948
  %call = call zeroext i8 %3(%struct.ata_port* %5) #9, !dbg !7943
  store i8 %call, i8* %status, align 1, !dbg !7942
  %6 = load i8, i8* %status, align 1, !dbg !7949
  %call2 = call i32 @ata_check_ready(i8 zeroext %6) #9, !dbg !7950
  ret i32 %call2, !dbg !7951
}

; Function Attrs: noredzone
declare dso_local void @iowrite8(i8 zeroext, i8*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_irq_on(%struct.ata_port* %ap) #1 !dbg !7952 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %ioaddr = alloca %struct.ata_ioports*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7953, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %ioaddr, metadata !7955, metadata !DIExpression()), !dbg !7956
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7957
  %ioaddr1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !7958
  store %struct.ata_ioports* %ioaddr1, %struct.ata_ioports** %ioaddr, align 8, !dbg !7956
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7959
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 1, !dbg !7961
  %2 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7961
  %sff_irq_on = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %2, i32 0, i32 45, !dbg !7962
  %3 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_on, align 8, !dbg !7962
  %tobool = icmp ne void (%struct.ata_port*)* %3, null, !dbg !7959
  br i1 %tobool, label %if.then, label %if.end, !dbg !7963

if.then:                                          ; preds = %entry
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7964
  %ops2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 1, !dbg !7966
  %5 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops2, align 8, !dbg !7966
  %sff_irq_on3 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %5, i32 0, i32 45, !dbg !7967
  %6 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_on3, align 8, !dbg !7967
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7968
  call void %6(%struct.ata_port* %7) #9, !dbg !7964
  br label %if.end17, !dbg !7969

if.end:                                           ; preds = %entry
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7970
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 9, !dbg !7971
  %9 = load i8, i8* %ctl, align 8, !dbg !7972
  %conv = zext i8 %9 to i32, !dbg !7972
  %and = and i32 %conv, -3, !dbg !7972
  %conv4 = trunc i32 %and to i8, !dbg !7972
  store i8 %conv4, i8* %ctl, align 8, !dbg !7972
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7973
  %ctl5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 9, !dbg !7974
  %11 = load i8, i8* %ctl5, align 8, !dbg !7974
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7975
  %last_ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 10, !dbg !7976
  store i8 %11, i8* %last_ctl, align 1, !dbg !7977
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7978
  %ops6 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 1, !dbg !7980
  %14 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops6, align 8, !dbg !7980
  %sff_set_devctl = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %14, i32 0, i32 38, !dbg !7981
  %15 = load void (%struct.ata_port*, i8)*, void (%struct.ata_port*, i8)** %sff_set_devctl, align 8, !dbg !7981
  %tobool7 = icmp ne void (%struct.ata_port*, i8)* %15, null, !dbg !7978
  br i1 %tobool7, label %if.then9, label %lor.lhs.false, !dbg !7982

lor.lhs.false:                                    ; preds = %if.end
  %16 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !7983
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %16, i32 0, i32 12, !dbg !7984
  %17 = load i8*, i8** %ctl_addr, align 8, !dbg !7984
  %tobool8 = icmp ne i8* %17, null, !dbg !7983
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !7985

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7986
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7987
  %ctl10 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 9, !dbg !7988
  %20 = load i8, i8* %ctl10, align 8, !dbg !7988
  call void @ata_sff_set_devctl(%struct.ata_port* %18, i8 zeroext %20) #9, !dbg !7989
  br label %if.end11, !dbg !7989

if.end11:                                         ; preds = %if.then9, %lor.lhs.false
  %21 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7990
  %call = call zeroext i8 @ata_wait_idle(%struct.ata_port* %21) #9, !dbg !7991
  %22 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7992
  %ops12 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %22, i32 0, i32 1, !dbg !7994
  %23 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops12, align 8, !dbg !7994
  %sff_irq_clear = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %23, i32 0, i32 47, !dbg !7995
  %24 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear, align 8, !dbg !7995
  %tobool13 = icmp ne void (%struct.ata_port*)* %24, null, !dbg !7992
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !7996

if.then14:                                        ; preds = %if.end11
  %25 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7997
  %ops15 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 1, !dbg !7998
  %26 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops15, align 8, !dbg !7998
  %sff_irq_clear16 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %26, i32 0, i32 47, !dbg !7999
  %27 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear16, align 8, !dbg !7999
  %28 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8000
  call void %27(%struct.ata_port* %28) #9, !dbg !7997
  br label %if.end17, !dbg !7997

if.end17:                                         ; preds = %if.then, %if.then14, %if.end11
  ret void, !dbg !8001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_sff_set_devctl(%struct.ata_port* %ap, i8 zeroext %ctl) #1 !dbg !8002 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %ctl.addr = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8003, metadata !DIExpression()), !dbg !8004
  store i8 %ctl, i8* %ctl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ctl.addr, metadata !8005, metadata !DIExpression()), !dbg !8006
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8007
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !8009
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8009
  %sff_set_devctl = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 38, !dbg !8010
  %2 = load void (%struct.ata_port*, i8)*, void (%struct.ata_port*, i8)** %sff_set_devctl, align 8, !dbg !8010
  %tobool = icmp ne void (%struct.ata_port*, i8)* %2, null, !dbg !8007
  br i1 %tobool, label %if.then, label %if.else, !dbg !8011

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8012
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !8013
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !8013
  %sff_set_devctl2 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 38, !dbg !8014
  %5 = load void (%struct.ata_port*, i8)*, void (%struct.ata_port*, i8)** %sff_set_devctl2, align 8, !dbg !8014
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8015
  %7 = load i8, i8* %ctl.addr, align 1, !dbg !8016
  call void %5(%struct.ata_port* %6, i8 zeroext %7) #9, !dbg !8012
  br label %if.end, !dbg !8012

if.else:                                          ; preds = %entry
  %8 = load i8, i8* %ctl.addr, align 1, !dbg !8017
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8018
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 8, !dbg !8019
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 12, !dbg !8020
  %10 = load i8*, i8** %ctl_addr, align 16, !dbg !8020
  call void @iowrite8(i8 zeroext %8, i8* %10) #9, !dbg !8021
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_wait_idle(%struct.ata_port* %ap) #1 !dbg !8023 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %status = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8024, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.declare(metadata i8* %status, metadata !8026, metadata !DIExpression()), !dbg !8027
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8028
  %call = call zeroext i8 @ata_sff_busy_wait(%struct.ata_port* %0, i32 136, i32 1000) #9, !dbg !8029
  store i8 %call, i8* %status, align 1, !dbg !8027
  %1 = load i8, i8* %status, align 1, !dbg !8030
  ret i8 %1, !dbg !8031
}

; Function Attrs: noredzone
declare dso_local void @ioread16_rep(i8*, i8*, i64) #0

; Function Attrs: noredzone
declare dso_local void @iowrite16_rep(i8*, i8*, i64) #0

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_data_xfer32(%struct.ata_queued_cmd* %qc, i8* %buf, i32 %buflen, i32 %rw) #1 !dbg !8032 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  %rw.addr = alloca i32, align 4
  %dev = alloca %struct.ata_device*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %data_addr = alloca i8*, align 8
  %words = alloca i32, align 4
  %slop = alloca i32, align 4
  %pad = alloca [4 x i8], align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8033, metadata !DIExpression()), !dbg !8034
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8035, metadata !DIExpression()), !dbg !8036
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !8037, metadata !DIExpression()), !dbg !8038
  store i32 %rw, i32* %rw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rw.addr, metadata !8039, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !8041, metadata !DIExpression()), !dbg !8042
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8043
  %dev1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !8044
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !8044
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !8042
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8045, metadata !DIExpression()), !dbg !8046
  %2 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8047
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 0, !dbg !8048
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !8048
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !8049
  %4 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !8049
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !8046
  call void @llvm.dbg.declare(metadata i8** %data_addr, metadata !8050, metadata !DIExpression()), !dbg !8051
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8052
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 8, !dbg !8053
  %data_addr3 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 1, !dbg !8054
  %6 = load i8*, i8** %data_addr3, align 8, !dbg !8054
  store i8* %6, i8** %data_addr, align 8, !dbg !8051
  call void @llvm.dbg.declare(metadata i32* %words, metadata !8055, metadata !DIExpression()), !dbg !8056
  %7 = load i32, i32* %buflen.addr, align 4, !dbg !8057
  %shr = lshr i32 %7, 2, !dbg !8058
  store i32 %shr, i32* %words, align 4, !dbg !8056
  call void @llvm.dbg.declare(metadata i32* %slop, metadata !8059, metadata !DIExpression()), !dbg !8060
  %8 = load i32, i32* %buflen.addr, align 4, !dbg !8061
  %and = and i32 %8, 3, !dbg !8062
  store i32 %and, i32* %slop, align 4, !dbg !8060
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8063
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 4, !dbg !8065
  %10 = load i32, i32* %pflags, align 32, !dbg !8065
  %and4 = and i32 %10, 1048576, !dbg !8066
  %tobool = icmp ne i32 %and4, 0, !dbg !8066
  br i1 %tobool, label %if.end, label %if.then, !dbg !8067

if.then:                                          ; preds = %entry
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8068
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !8069
  %13 = load i32, i32* %buflen.addr, align 4, !dbg !8070
  %14 = load i32, i32* %rw.addr, align 4, !dbg !8071
  %call = call i32 @ata_sff_data_xfer(%struct.ata_queued_cmd* %11, i8* %12, i32 %13, i32 %14) #9, !dbg !8072
  store i32 %call, i32* %retval, align 4, !dbg !8073
  br label %return, !dbg !8073

if.end:                                           ; preds = %entry
  %15 = load i32, i32* %rw.addr, align 4, !dbg !8074
  %cmp = icmp eq i32 %15, 0, !dbg !8076
  br i1 %cmp, label %if.then5, label %if.else, !dbg !8077

if.then5:                                         ; preds = %if.end
  %16 = load i8*, i8** %data_addr, align 8, !dbg !8078
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !8079
  %18 = load i32, i32* %words, align 4, !dbg !8080
  %conv = zext i32 %18 to i64, !dbg !8080
  call void @ioread32_rep(i8* %16, i8* %17, i64 %conv) #9, !dbg !8081
  br label %if.end7, !dbg !8081

if.else:                                          ; preds = %if.end
  %19 = load i8*, i8** %data_addr, align 8, !dbg !8082
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !8083
  %21 = load i32, i32* %words, align 4, !dbg !8084
  %conv6 = zext i32 %21 to i64, !dbg !8084
  call void @iowrite32_rep(i8* %19, i8* %20, i64 %conv6) #9, !dbg !8085
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %22 = load i32, i32* %slop, align 4, !dbg !8086
  %tobool8 = icmp ne i32 %22, 0, !dbg !8086
  %lnot = xor i1 %tobool8, true, !dbg !8086
  %lnot9 = xor i1 %lnot, true, !dbg !8086
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !8086
  %conv10 = sext i32 %lnot.ext to i64, !dbg !8086
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !8086
  br i1 %tobool11, label %if.then12, label %if.end35, !dbg !8088

if.then12:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata [4 x i8]* %pad, metadata !8089, metadata !DIExpression()), !dbg !8092
  %23 = bitcast [4 x i8]* %pad to i8*, !dbg !8092
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 4, i1 false), !dbg !8092
  %24 = load i32, i32* %buflen.addr, align 4, !dbg !8093
  %25 = load i32, i32* %slop, align 4, !dbg !8094
  %sub = sub i32 %24, %25, !dbg !8095
  %26 = load i8*, i8** %buf.addr, align 8, !dbg !8096
  %idx.ext = zext i32 %sub to i64, !dbg !8096
  %add.ptr = getelementptr i8, i8* %26, i64 %idx.ext, !dbg !8096
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !8096
  %27 = load i32, i32* %rw.addr, align 4, !dbg !8097
  %cmp13 = icmp eq i32 %27, 0, !dbg !8099
  br i1 %cmp13, label %if.then15, label %if.else24, !dbg !8100

if.then15:                                        ; preds = %if.then12
  %28 = load i32, i32* %slop, align 4, !dbg !8101
  %cmp16 = icmp slt i32 %28, 3, !dbg !8104
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !8105

if.then18:                                        ; preds = %if.then15
  %29 = load i8*, i8** %data_addr, align 8, !dbg !8106
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %pad, i64 0, i64 0, !dbg !8107
  call void @ioread16_rep(i8* %29, i8* %arraydecay, i64 1) #9, !dbg !8108
  br label %if.end21, !dbg !8108

if.else19:                                        ; preds = %if.then15
  %30 = load i8*, i8** %data_addr, align 8, !dbg !8109
  %arraydecay20 = getelementptr inbounds [4 x i8], [4 x i8]* %pad, i64 0, i64 0, !dbg !8110
  call void @ioread32_rep(i8* %30, i8* %arraydecay20, i64 1) #9, !dbg !8111
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.then18
  %31 = load i8*, i8** %buf.addr, align 8, !dbg !8112
  %arraydecay22 = getelementptr inbounds [4 x i8], [4 x i8]* %pad, i64 0, i64 0, !dbg !8113
  %32 = load i32, i32* %slop, align 4, !dbg !8114
  %conv23 = sext i32 %32 to i64, !dbg !8114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %arraydecay22, i64 %conv23, i1 false), !dbg !8113
  br label %if.end34, !dbg !8115

if.else24:                                        ; preds = %if.then12
  %arraydecay25 = getelementptr inbounds [4 x i8], [4 x i8]* %pad, i64 0, i64 0, !dbg !8116
  %33 = load i8*, i8** %buf.addr, align 8, !dbg !8118
  %34 = load i32, i32* %slop, align 4, !dbg !8119
  %conv26 = sext i32 %34 to i64, !dbg !8119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay25, i8* align 1 %33, i64 %conv26, i1 false), !dbg !8116
  %35 = load i32, i32* %slop, align 4, !dbg !8120
  %cmp27 = icmp slt i32 %35, 3, !dbg !8122
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !8123

if.then29:                                        ; preds = %if.else24
  %36 = load i8*, i8** %data_addr, align 8, !dbg !8124
  %arraydecay30 = getelementptr inbounds [4 x i8], [4 x i8]* %pad, i64 0, i64 0, !dbg !8125
  call void @iowrite16_rep(i8* %36, i8* %arraydecay30, i64 1) #9, !dbg !8126
  br label %if.end33, !dbg !8126

if.else31:                                        ; preds = %if.else24
  %37 = load i8*, i8** %data_addr, align 8, !dbg !8127
  %arraydecay32 = getelementptr inbounds [4 x i8], [4 x i8]* %pad, i64 0, i64 0, !dbg !8128
  call void @iowrite32_rep(i8* %37, i8* %arraydecay32, i64 1) #9, !dbg !8129
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end21
  br label %if.end35, !dbg !8130

if.end35:                                         ; preds = %if.end34, %if.end7
  %38 = load i32, i32* %buflen.addr, align 4, !dbg !8131
  %add = add i32 %38, 1, !dbg !8132
  %and36 = and i32 %add, -2, !dbg !8133
  store i32 %and36, i32* %retval, align 4, !dbg !8134
  br label %return, !dbg !8134

return:                                           ; preds = %if.end35, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !8135
  ret i32 %39, !dbg !8135
}

; Function Attrs: noredzone
declare dso_local void @ioread32_rep(i8*, i8*, i64) #0

; Function Attrs: noredzone
declare dso_local void @iowrite32_rep(i8*, i8*, i64) #0

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_hsm_move(%struct.ata_port* %ap, %struct.ata_queued_cmd* %qc, i8 zeroext %status, i32 %in_wq) #1 !dbg !8136 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %status.addr = alloca i8, align 1
  %in_wq.addr = alloca i32, align 4
  %link = alloca %struct.ata_link*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %poll_next = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on22 = alloca i32, align 4
  %tmp46 = alloca i64, align 8
  %__ret_warn_on252 = alloca i32, align 4
  %tmp277 = alloca i64, align 8
  %__ret_warn_on287 = alloca i32, align 4
  %tmp312 = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8139, metadata !DIExpression()), !dbg !8140
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8141, metadata !DIExpression()), !dbg !8142
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !8143, metadata !DIExpression()), !dbg !8144
  store i32 %in_wq, i32* %in_wq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_wq.addr, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !8147, metadata !DIExpression()), !dbg !8148
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8149
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !8150
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8150
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 0, !dbg !8151
  %2 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !8151
  store %struct.ata_link* %2, %struct.ata_link** %link, align 8, !dbg !8148
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !8152, metadata !DIExpression()), !dbg !8154
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8155
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 11, !dbg !8156
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !8154
  call void @llvm.dbg.declare(metadata i32* %poll_next, metadata !8157, metadata !DIExpression()), !dbg !8158
  br label %do.body, !dbg !8159

do.body:                                          ; preds = %entry
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8160
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 2, !dbg !8160
  %5 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8160
  br label %do.end, !dbg !8160

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8162, metadata !DIExpression()), !dbg !8164
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8164
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 6, !dbg !8164
  %7 = load i64, i64* %flags, align 8, !dbg !8164
  %and = and i64 %7, 1, !dbg !8164
  %cmp = icmp eq i64 %and, 0, !dbg !8164
  %lnot = xor i1 %cmp, true, !dbg !8164
  %lnot2 = xor i1 %lnot, true, !dbg !8164
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8164
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8164
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !8165
  %tobool = icmp ne i32 %8, 0, !dbg !8165
  %lnot3 = xor i1 %tobool, true, !dbg !8165
  %lnot5 = xor i1 %lnot3, true, !dbg !8165
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !8165
  %conv = sext i32 %lnot.ext6 to i64, !dbg !8165
  %tobool7 = icmp ne i64 %conv, 0, !dbg !8165
  br i1 %tobool7, label %if.then, label %if.end, !dbg !8164

if.then:                                          ; preds = %do.end
  br label %do.body8, !dbg !8165

do.body8:                                         ; preds = %if.then
  br label %do.body9, !dbg !8167

do.body9:                                         ; preds = %do.body8
  br label %do.end10, !dbg !8169

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !8167

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 977, i32 2307, i64 12) #8, !dbg !8171, !srcloc !8173
  br label %do.end12, !dbg !8171

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 316) #8, !dbg !8174, !srcloc !8176
  br label %do.body13, !dbg !8167

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !8177

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !8167

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !8167

if.end:                                           ; preds = %do.end15, %do.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !8164
  %tobool16 = icmp ne i32 %9, 0, !dbg !8164
  %lnot17 = xor i1 %tobool16, true, !dbg !8164
  %lnot19 = xor i1 %lnot17, true, !dbg !8164
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !8164
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !8164
  store i64 %conv21, i64* %tmp, align 8, !dbg !8165
  %10 = load i64, i64* %tmp, align 8, !dbg !8164
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on22, metadata !8179, metadata !DIExpression()), !dbg !8181
  %11 = load i32, i32* %in_wq.addr, align 4, !dbg !8181
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8181
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8181
  %call = call i32 @ata_hsm_ok_in_wq(%struct.ata_port* %12, %struct.ata_queued_cmd* %13) #9, !dbg !8181
  %cmp23 = icmp ne i32 %11, %call, !dbg !8181
  %lnot25 = xor i1 %cmp23, true, !dbg !8181
  %lnot27 = xor i1 %lnot25, true, !dbg !8181
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !8181
  store i32 %lnot.ext28, i32* %__ret_warn_on22, align 4, !dbg !8181
  %14 = load i32, i32* %__ret_warn_on22, align 4, !dbg !8182
  %tobool29 = icmp ne i32 %14, 0, !dbg !8182
  %lnot30 = xor i1 %tobool29, true, !dbg !8182
  %lnot32 = xor i1 %lnot30, true, !dbg !8182
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !8182
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !8182
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !8182
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !8181

if.then36:                                        ; preds = %if.end
  br label %do.body37, !dbg !8182

do.body37:                                        ; preds = %if.then36
  br label %do.body38, !dbg !8184

do.body38:                                        ; preds = %do.body37
  br label %do.end39, !dbg !8186

do.end39:                                         ; preds = %do.body38
  br label %do.body40, !dbg !8184

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 983, i32 2307, i64 12) #8, !dbg !8188, !srcloc !8190
  br label %do.end41, !dbg !8188

do.end41:                                         ; preds = %do.body40
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 317) #8, !dbg !8191, !srcloc !8193
  br label %do.body42, !dbg !8184

do.body42:                                        ; preds = %do.end41
  br label %do.end43, !dbg !8194

do.end43:                                         ; preds = %do.body42
  br label %do.end44, !dbg !8184

do.end44:                                         ; preds = %do.end43
  br label %if.end45, !dbg !8184

if.end45:                                         ; preds = %do.end44, %if.end
  %15 = load i32, i32* %__ret_warn_on22, align 4, !dbg !8181
  %tobool47 = icmp ne i32 %15, 0, !dbg !8181
  %lnot48 = xor i1 %tobool47, true, !dbg !8181
  %lnot50 = xor i1 %lnot48, true, !dbg !8181
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !8181
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !8181
  store i64 %conv52, i64* %tmp46, align 8, !dbg !8182
  %16 = load i64, i64* %tmp46, align 8, !dbg !8181
  br label %fsm_start, !dbg !8196

fsm_start:                                        ; preds = %if.then246, %if.then232, %if.end222, %if.end186, %if.then148, %if.then133, %if.then121, %if.then95, %if.end79, %if.end45
  call void @llvm.dbg.label(metadata !8197), !dbg !8198
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8199
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 37, !dbg !8200
  %18 = load i32, i32* %hsm_task_state, align 16, !dbg !8200
  switch i32 %18, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb110
    i32 3, label %sw.bb236
    i32 4, label %sw.bb285
  ], !dbg !8201

sw.bb:                                            ; preds = %fsm_start
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8202
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 4, !dbg !8204
  %flags53 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !8205
  %20 = load i64, i64* %flags53, align 8, !dbg !8205
  %and54 = and i64 %20, 64, !dbg !8206
  %conv55 = trunc i64 %and54 to i32, !dbg !8207
  store i32 %conv55, i32* %poll_next, align 4, !dbg !8208
  %21 = load i8, i8* %status.addr, align 1, !dbg !8209
  %conv56 = zext i8 %21 to i32, !dbg !8209
  %and57 = and i32 %conv56, 8, !dbg !8209
  %cmp58 = icmp eq i32 %and57, 0, !dbg !8209
  %lnot60 = xor i1 %cmp58, true, !dbg !8209
  %lnot62 = xor i1 %lnot60, true, !dbg !8209
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !8209
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !8209
  %tobool65 = icmp ne i64 %conv64, 0, !dbg !8209
  br i1 %tobool65, label %if.then66, label %if.end81, !dbg !8211

if.then66:                                        ; preds = %sw.bb
  %22 = load i8, i8* %status.addr, align 1, !dbg !8212
  %conv67 = zext i8 %22 to i32, !dbg !8212
  %and68 = and i32 %conv67, 33, !dbg !8212
  %tobool69 = icmp ne i32 %and68, 0, !dbg !8212
  %lnot70 = xor i1 %tobool69, true, !dbg !8212
  %lnot72 = xor i1 %lnot70, true, !dbg !8212
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !8212
  %conv74 = sext i32 %lnot.ext73 to i64, !dbg !8212
  %tobool75 = icmp ne i64 %conv74, 0, !dbg !8212
  br i1 %tobool75, label %if.then76, label %if.else, !dbg !8215

if.then76:                                        ; preds = %if.then66
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8216
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 20, !dbg !8217
  %24 = load i32, i32* %err_mask, align 4, !dbg !8218
  %or = or i32 %24, 1, !dbg !8218
  store i32 %or, i32* %err_mask, align 4, !dbg !8218
  br label %if.end79, !dbg !8216

if.else:                                          ; preds = %if.then66
  %25 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !8219
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #9, !dbg !8221
  %26 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8222
  %err_mask77 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %26, i32 0, i32 20, !dbg !8223
  %27 = load i32, i32* %err_mask77, align 4, !dbg !8224
  %or78 = or i32 %27, 2, !dbg !8224
  store i32 %or78, i32* %err_mask77, align 4, !dbg !8224
  br label %if.end79

if.end79:                                         ; preds = %if.else, %if.then76
  %28 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8225
  %hsm_task_state80 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 37, !dbg !8226
  store i32 4, i32* %hsm_task_state80, align 16, !dbg !8227
  br label %fsm_start, !dbg !8228

if.end81:                                         ; preds = %sw.bb
  %29 = load i8, i8* %status.addr, align 1, !dbg !8229
  %conv82 = zext i8 %29 to i32, !dbg !8229
  %and83 = and i32 %conv82, 33, !dbg !8229
  %tobool84 = icmp ne i32 %and83, 0, !dbg !8229
  %lnot85 = xor i1 %tobool84, true, !dbg !8229
  %lnot87 = xor i1 %lnot85, true, !dbg !8229
  %lnot.ext88 = zext i1 %lnot87 to i32, !dbg !8229
  %conv89 = sext i32 %lnot.ext88 to i64, !dbg !8229
  %tobool90 = icmp ne i64 %conv89, 0, !dbg !8229
  br i1 %tobool90, label %if.then91, label %if.end101, !dbg !8231

if.then91:                                        ; preds = %if.end81
  %30 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8232
  %dev92 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %30, i32 0, i32 1, !dbg !8235
  %31 = load %struct.ata_device*, %struct.ata_device** %dev92, align 8, !dbg !8235
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 2, !dbg !8236
  %32 = load i32, i32* %horkage, align 4, !dbg !8236
  %and93 = and i32 %32, 512, !dbg !8237
  %tobool94 = icmp ne i32 %and93, 0, !dbg !8237
  br i1 %tobool94, label %if.end100, label %if.then95, !dbg !8238

if.then95:                                        ; preds = %if.then91
  %33 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !8239
  %34 = load i8, i8* %status.addr, align 1, !dbg !8241
  %conv96 = zext i8 %34 to i32, !dbg !8241
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %33, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0), i32 %conv96) #9, !dbg !8242
  %35 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8243
  %err_mask97 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %35, i32 0, i32 20, !dbg !8244
  %36 = load i32, i32* %err_mask97, align 4, !dbg !8245
  %or98 = or i32 %36, 2, !dbg !8245
  store i32 %or98, i32* %err_mask97, align 4, !dbg !8245
  %37 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8246
  %hsm_task_state99 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 37, !dbg !8247
  store i32 4, i32* %hsm_task_state99, align 16, !dbg !8248
  br label %fsm_start, !dbg !8249

if.end100:                                        ; preds = %if.then91
  br label %if.end101, !dbg !8250

if.end101:                                        ; preds = %if.end100, %if.end81
  %38 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8251
  %tf102 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %38, i32 0, i32 4, !dbg !8253
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf102, i32 0, i32 1, !dbg !8254
  %39 = load i8, i8* %protocol, align 8, !dbg !8254
  %conv103 = zext i8 %39 to i32, !dbg !8251
  %cmp104 = icmp eq i32 %conv103, 1, !dbg !8255
  br i1 %cmp104, label %if.then106, label %if.else108, !dbg !8256

if.then106:                                       ; preds = %if.end101
  %40 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8257
  %hsm_task_state107 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %40, i32 0, i32 37, !dbg !8259
  store i32 2, i32* %hsm_task_state107, align 16, !dbg !8260
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8261
  call void @ata_pio_sectors(%struct.ata_queued_cmd* %41) #9, !dbg !8262
  br label %if.end109, !dbg !8263

if.else108:                                       ; preds = %if.end101
  %42 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8264
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8265
  call void @atapi_send_cdb(%struct.ata_port* %42, %struct.ata_queued_cmd* %43) #9, !dbg !8266
  br label %if.end109

if.end109:                                        ; preds = %if.else108, %if.then106
  br label %sw.epilog, !dbg !8267

sw.bb110:                                         ; preds = %fsm_start
  %44 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8268
  %tf111 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %44, i32 0, i32 4, !dbg !8270
  %protocol112 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf111, i32 0, i32 1, !dbg !8271
  %45 = load i8, i8* %protocol112, align 8, !dbg !8271
  %conv113 = zext i8 %45 to i32, !dbg !8268
  %cmp114 = icmp eq i32 %conv113, 9, !dbg !8272
  br i1 %cmp114, label %if.then116, label %if.else150, !dbg !8273

if.then116:                                       ; preds = %sw.bb110
  %46 = load i8, i8* %status.addr, align 1, !dbg !8274
  %conv117 = zext i8 %46 to i32, !dbg !8274
  %and118 = and i32 %conv117, 8, !dbg !8277
  %cmp119 = icmp eq i32 %and118, 0, !dbg !8278
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !8279

if.then121:                                       ; preds = %if.then116
  %47 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8280
  %hsm_task_state122 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %47, i32 0, i32 37, !dbg !8282
  store i32 3, i32* %hsm_task_state122, align 16, !dbg !8283
  br label %fsm_start, !dbg !8284

if.end123:                                        ; preds = %if.then116
  %48 = load i8, i8* %status.addr, align 1, !dbg !8285
  %conv124 = zext i8 %48 to i32, !dbg !8285
  %and125 = and i32 %conv124, 33, !dbg !8285
  %tobool126 = icmp ne i32 %and125, 0, !dbg !8285
  %lnot127 = xor i1 %tobool126, true, !dbg !8285
  %lnot129 = xor i1 %lnot127, true, !dbg !8285
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !8285
  %conv131 = sext i32 %lnot.ext130 to i64, !dbg !8285
  %tobool132 = icmp ne i64 %conv131, 0, !dbg !8285
  br i1 %tobool132, label %if.then133, label %if.end138, !dbg !8287

if.then133:                                       ; preds = %if.end123
  %49 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !8288
  %50 = load i8, i8* %status.addr, align 1, !dbg !8290
  %conv134 = zext i8 %50 to i32, !dbg !8290
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %49, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i32 %conv134) #9, !dbg !8291
  %51 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8292
  %err_mask135 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %51, i32 0, i32 20, !dbg !8293
  %52 = load i32, i32* %err_mask135, align 4, !dbg !8294
  %or136 = or i32 %52, 2, !dbg !8294
  store i32 %or136, i32* %err_mask135, align 4, !dbg !8294
  %53 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8295
  %hsm_task_state137 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %53, i32 0, i32 37, !dbg !8296
  store i32 4, i32* %hsm_task_state137, align 16, !dbg !8297
  br label %fsm_start, !dbg !8298

if.end138:                                        ; preds = %if.end123
  %54 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8299
  call void @atapi_pio_bytes(%struct.ata_queued_cmd* %54) #9, !dbg !8300
  %55 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8301
  %hsm_task_state139 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %55, i32 0, i32 37, !dbg !8301
  %56 = load i32, i32* %hsm_task_state139, align 16, !dbg !8301
  %cmp140 = icmp eq i32 %56, 4, !dbg !8301
  %lnot142 = xor i1 %cmp140, true, !dbg !8301
  %lnot144 = xor i1 %lnot142, true, !dbg !8301
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !8301
  %conv146 = sext i32 %lnot.ext145 to i64, !dbg !8301
  %tobool147 = icmp ne i64 %conv146, 0, !dbg !8301
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !8303

if.then148:                                       ; preds = %if.end138
  br label %fsm_start, !dbg !8304

if.end149:                                        ; preds = %if.end138
  br label %if.end235, !dbg !8305

if.else150:                                       ; preds = %sw.bb110
  %57 = load i8, i8* %status.addr, align 1, !dbg !8306
  %conv151 = zext i8 %57 to i32, !dbg !8306
  %and152 = and i32 %conv151, 8, !dbg !8306
  %cmp153 = icmp eq i32 %and152, 0, !dbg !8306
  %lnot155 = xor i1 %cmp153, true, !dbg !8306
  %lnot157 = xor i1 %lnot155, true, !dbg !8306
  %lnot.ext158 = zext i1 %lnot157 to i32, !dbg !8306
  %conv159 = sext i32 %lnot.ext158 to i64, !dbg !8306
  %tobool160 = icmp ne i64 %conv159, 0, !dbg !8306
  br i1 %tobool160, label %if.then161, label %if.end188, !dbg !8309

if.then161:                                       ; preds = %if.else150
  %58 = load i8, i8* %status.addr, align 1, !dbg !8310
  %conv162 = zext i8 %58 to i32, !dbg !8310
  %and163 = and i32 %conv162, 33, !dbg !8310
  %tobool164 = icmp ne i32 %and163, 0, !dbg !8310
  %lnot165 = xor i1 %tobool164, true, !dbg !8310
  %lnot167 = xor i1 %lnot165, true, !dbg !8310
  %lnot.ext168 = zext i1 %lnot167 to i32, !dbg !8310
  %conv169 = sext i32 %lnot.ext168 to i64, !dbg !8310
  %tobool170 = icmp ne i64 %conv169, 0, !dbg !8310
  br i1 %tobool170, label %if.then171, label %if.else182, !dbg !8313

if.then171:                                       ; preds = %if.then161
  %59 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8314
  %err_mask172 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %59, i32 0, i32 20, !dbg !8316
  %60 = load i32, i32* %err_mask172, align 4, !dbg !8317
  %or173 = or i32 %60, 1, !dbg !8317
  store i32 %or173, i32* %err_mask172, align 4, !dbg !8317
  %61 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8318
  %dev174 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %61, i32 0, i32 1, !dbg !8320
  %62 = load %struct.ata_device*, %struct.ata_device** %dev174, align 8, !dbg !8320
  %horkage175 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %62, i32 0, i32 2, !dbg !8321
  %63 = load i32, i32* %horkage175, align 4, !dbg !8321
  %and176 = and i32 %63, 1, !dbg !8322
  %tobool177 = icmp ne i32 %and176, 0, !dbg !8322
  br i1 %tobool177, label %if.then178, label %if.end181, !dbg !8323

if.then178:                                       ; preds = %if.then171
  %64 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8324
  %err_mask179 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %64, i32 0, i32 20, !dbg !8325
  %65 = load i32, i32* %err_mask179, align 4, !dbg !8326
  %or180 = or i32 %65, 512, !dbg !8326
  store i32 %or180, i32* %err_mask179, align 4, !dbg !8326
  br label %if.end181, !dbg !8324

if.end181:                                        ; preds = %if.then178, %if.then171
  br label %if.end186, !dbg !8327

if.else182:                                       ; preds = %if.then161
  %66 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !8328
  %67 = load i8, i8* %status.addr, align 1, !dbg !8330
  %conv183 = zext i8 %67 to i32, !dbg !8330
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %66, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), i32 %conv183) #9, !dbg !8331
  %68 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8332
  %err_mask184 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %68, i32 0, i32 20, !dbg !8333
  %69 = load i32, i32* %err_mask184, align 4, !dbg !8334
  %or185 = or i32 %69, 514, !dbg !8334
  store i32 %or185, i32* %err_mask184, align 4, !dbg !8334
  br label %if.end186

if.end186:                                        ; preds = %if.else182, %if.end181
  %70 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8335
  %hsm_task_state187 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %70, i32 0, i32 37, !dbg !8336
  store i32 4, i32* %hsm_task_state187, align 16, !dbg !8337
  br label %fsm_start, !dbg !8338

if.end188:                                        ; preds = %if.else150
  %71 = load i8, i8* %status.addr, align 1, !dbg !8339
  %conv189 = zext i8 %71 to i32, !dbg !8339
  %and190 = and i32 %conv189, 33, !dbg !8339
  %tobool191 = icmp ne i32 %and190, 0, !dbg !8339
  %lnot192 = xor i1 %tobool191, true, !dbg !8339
  %lnot194 = xor i1 %lnot192, true, !dbg !8339
  %lnot.ext195 = zext i1 %lnot194 to i32, !dbg !8339
  %conv196 = sext i32 %lnot.ext195 to i64, !dbg !8339
  %tobool197 = icmp ne i64 %conv196, 0, !dbg !8339
  br i1 %tobool197, label %if.then198, label %if.end224, !dbg !8341

if.then198:                                       ; preds = %if.end188
  %72 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8342
  %err_mask199 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %72, i32 0, i32 20, !dbg !8344
  %73 = load i32, i32* %err_mask199, align 4, !dbg !8345
  %or200 = or i32 %73, 1, !dbg !8345
  store i32 %or200, i32* %err_mask199, align 4, !dbg !8345
  %74 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8346
  %tf201 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %74, i32 0, i32 4, !dbg !8348
  %flags202 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf201, i32 0, i32 0, !dbg !8349
  %75 = load i64, i64* %flags202, align 8, !dbg !8349
  %and203 = and i64 %75, 8, !dbg !8350
  %tobool204 = icmp ne i64 %and203, 0, !dbg !8350
  br i1 %tobool204, label %if.end207, label %if.then205, !dbg !8351

if.then205:                                       ; preds = %if.then198
  %76 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8352
  call void @ata_pio_sectors(%struct.ata_queued_cmd* %76) #9, !dbg !8354
  %77 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8355
  %call206 = call zeroext i8 @ata_wait_idle(%struct.ata_port* %77) #9, !dbg !8356
  store i8 %call206, i8* %status.addr, align 1, !dbg !8357
  br label %if.end207, !dbg !8358

if.end207:                                        ; preds = %if.then205, %if.then198
  %78 = load i8, i8* %status.addr, align 1, !dbg !8359
  %conv208 = zext i8 %78 to i32, !dbg !8359
  %and209 = and i32 %conv208, 136, !dbg !8361
  %tobool210 = icmp ne i32 %and209, 0, !dbg !8361
  br i1 %tobool210, label %if.then211, label %if.end215, !dbg !8362

if.then211:                                       ; preds = %if.end207
  %79 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !8363
  %80 = load i8, i8* %status.addr, align 1, !dbg !8365
  %conv212 = zext i8 %80 to i32, !dbg !8365
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %79, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0), i32 %conv212) #9, !dbg !8366
  %81 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8367
  %err_mask213 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %81, i32 0, i32 20, !dbg !8368
  %82 = load i32, i32* %err_mask213, align 4, !dbg !8369
  %or214 = or i32 %82, 2, !dbg !8369
  store i32 %or214, i32* %err_mask213, align 4, !dbg !8369
  br label %if.end215, !dbg !8370

if.end215:                                        ; preds = %if.then211, %if.end207
  %83 = load i8, i8* %status.addr, align 1, !dbg !8371
  %conv216 = zext i8 %83 to i32, !dbg !8371
  %cmp217 = icmp eq i32 %conv216, 127, !dbg !8373
  br i1 %cmp217, label %if.then219, label %if.end222, !dbg !8374

if.then219:                                       ; preds = %if.end215
  %84 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8375
  %err_mask220 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %84, i32 0, i32 20, !dbg !8376
  %85 = load i32, i32* %err_mask220, align 4, !dbg !8377
  %or221 = or i32 %85, 512, !dbg !8377
  store i32 %or221, i32* %err_mask220, align 4, !dbg !8377
  br label %if.end222, !dbg !8375

if.end222:                                        ; preds = %if.then219, %if.end215
  %86 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8378
  %hsm_task_state223 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %86, i32 0, i32 37, !dbg !8379
  store i32 4, i32* %hsm_task_state223, align 16, !dbg !8380
  br label %fsm_start, !dbg !8381

if.end224:                                        ; preds = %if.end188
  %87 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8382
  call void @ata_pio_sectors(%struct.ata_queued_cmd* %87) #9, !dbg !8383
  %88 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8384
  %hsm_task_state225 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %88, i32 0, i32 37, !dbg !8386
  %89 = load i32, i32* %hsm_task_state225, align 16, !dbg !8386
  %cmp226 = icmp eq i32 %89, 3, !dbg !8387
  br i1 %cmp226, label %land.lhs.true, label %if.end234, !dbg !8388

land.lhs.true:                                    ; preds = %if.end224
  %90 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8389
  %tf228 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %90, i32 0, i32 4, !dbg !8390
  %flags229 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf228, i32 0, i32 0, !dbg !8391
  %91 = load i64, i64* %flags229, align 8, !dbg !8391
  %and230 = and i64 %91, 8, !dbg !8392
  %tobool231 = icmp ne i64 %and230, 0, !dbg !8392
  br i1 %tobool231, label %if.end234, label %if.then232, !dbg !8393

if.then232:                                       ; preds = %land.lhs.true
  %92 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8394
  %call233 = call zeroext i8 @ata_wait_idle(%struct.ata_port* %92) #9, !dbg !8396
  store i8 %call233, i8* %status.addr, align 1, !dbg !8397
  br label %fsm_start, !dbg !8398

if.end234:                                        ; preds = %land.lhs.true, %if.end224
  br label %if.end235

if.end235:                                        ; preds = %if.end234, %if.end149
  store i32 1, i32* %poll_next, align 4, !dbg !8399
  br label %sw.epilog, !dbg !8400

sw.bb236:                                         ; preds = %fsm_start
  %93 = load i8, i8* %status.addr, align 1, !dbg !8401
  %call237 = call zeroext i1 @ata_ok(i8 zeroext %93) #9, !dbg !8401
  %lnot238 = xor i1 %call237, true, !dbg !8401
  %lnot240 = xor i1 %lnot238, true, !dbg !8401
  %lnot242 = xor i1 %lnot240, true, !dbg !8401
  %lnot.ext243 = zext i1 %lnot242 to i32, !dbg !8401
  %conv244 = sext i32 %lnot.ext243 to i64, !dbg !8401
  %tobool245 = icmp ne i64 %conv244, 0, !dbg !8401
  br i1 %tobool245, label %if.then246, label %if.end251, !dbg !8403

if.then246:                                       ; preds = %sw.bb236
  %94 = load i8, i8* %status.addr, align 1, !dbg !8404
  %call247 = call i32 @__ac_err_mask(i8 zeroext %94) #9, !dbg !8406
  %95 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8407
  %err_mask248 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %95, i32 0, i32 20, !dbg !8408
  %96 = load i32, i32* %err_mask248, align 4, !dbg !8409
  %or249 = or i32 %96, %call247, !dbg !8409
  store i32 %or249, i32* %err_mask248, align 4, !dbg !8409
  %97 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8410
  %hsm_task_state250 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %97, i32 0, i32 37, !dbg !8411
  store i32 4, i32* %hsm_task_state250, align 16, !dbg !8412
  br label %fsm_start, !dbg !8413

if.end251:                                        ; preds = %sw.bb236
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on252, metadata !8414, metadata !DIExpression()), !dbg !8416
  %98 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8416
  %err_mask253 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %98, i32 0, i32 20, !dbg !8416
  %99 = load i32, i32* %err_mask253, align 4, !dbg !8416
  %and254 = and i32 %99, 3, !dbg !8416
  %tobool255 = icmp ne i32 %and254, 0, !dbg !8416
  %lnot256 = xor i1 %tobool255, true, !dbg !8416
  %lnot258 = xor i1 %lnot256, true, !dbg !8416
  %lnot.ext259 = zext i1 %lnot258 to i32, !dbg !8416
  store i32 %lnot.ext259, i32* %__ret_warn_on252, align 4, !dbg !8416
  %100 = load i32, i32* %__ret_warn_on252, align 4, !dbg !8417
  %tobool260 = icmp ne i32 %100, 0, !dbg !8417
  %lnot261 = xor i1 %tobool260, true, !dbg !8417
  %lnot263 = xor i1 %lnot261, true, !dbg !8417
  %lnot.ext264 = zext i1 %lnot263 to i32, !dbg !8417
  %conv265 = sext i32 %lnot.ext264 to i64, !dbg !8417
  %tobool266 = icmp ne i64 %conv265, 0, !dbg !8417
  br i1 %tobool266, label %if.then267, label %if.end276, !dbg !8416

if.then267:                                       ; preds = %if.end251
  br label %do.body268, !dbg !8417

do.body268:                                       ; preds = %if.then267
  br label %do.body269, !dbg !8419

do.body269:                                       ; preds = %do.body268
  br label %do.end270, !dbg !8421

do.end270:                                        ; preds = %do.body269
  br label %do.body271, !dbg !8419

do.body271:                                       ; preds = %do.end270
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 1191, i32 2307, i64 12) #8, !dbg !8423, !srcloc !8425
  br label %do.end272, !dbg !8423

do.end272:                                        ; preds = %do.body271
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 318) #8, !dbg !8426, !srcloc !8428
  br label %do.body273, !dbg !8419

do.body273:                                       ; preds = %do.end272
  br label %do.end274, !dbg !8429

do.end274:                                        ; preds = %do.body273
  br label %do.end275, !dbg !8419

do.end275:                                        ; preds = %do.end274
  br label %if.end276, !dbg !8419

if.end276:                                        ; preds = %do.end275, %if.end251
  %101 = load i32, i32* %__ret_warn_on252, align 4, !dbg !8416
  %tobool278 = icmp ne i32 %101, 0, !dbg !8416
  %lnot279 = xor i1 %tobool278, true, !dbg !8416
  %lnot281 = xor i1 %lnot279, true, !dbg !8416
  %lnot.ext282 = zext i1 %lnot281 to i32, !dbg !8416
  %conv283 = sext i32 %lnot.ext282 to i64, !dbg !8416
  store i64 %conv283, i64* %tmp277, align 8, !dbg !8417
  %102 = load i64, i64* %tmp277, align 8, !dbg !8416
  %103 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8431
  %hsm_task_state284 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %103, i32 0, i32 37, !dbg !8432
  store i32 0, i32* %hsm_task_state284, align 16, !dbg !8433
  %104 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8434
  %105 = load i32, i32* %in_wq.addr, align 4, !dbg !8435
  call void @ata_hsm_qc_complete(%struct.ata_queued_cmd* %104, i32 %105) #9, !dbg !8436
  store i32 0, i32* %poll_next, align 4, !dbg !8437
  br label %sw.epilog, !dbg !8438

sw.bb285:                                         ; preds = %fsm_start
  %106 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8439
  %hsm_task_state286 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %106, i32 0, i32 37, !dbg !8440
  store i32 0, i32* %hsm_task_state286, align 16, !dbg !8441
  %107 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8442
  %108 = load i32, i32* %in_wq.addr, align 4, !dbg !8443
  call void @ata_hsm_qc_complete(%struct.ata_queued_cmd* %107, i32 %108) #9, !dbg !8444
  store i32 0, i32* %poll_next, align 4, !dbg !8445
  br label %sw.epilog, !dbg !8446

sw.default:                                       ; preds = %fsm_start
  store i32 0, i32* %poll_next, align 4, !dbg !8447
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on287, metadata !8448, metadata !DIExpression()), !dbg !8450
  store i32 1, i32* %__ret_warn_on287, align 4, !dbg !8450
  %109 = load i32, i32* %__ret_warn_on287, align 4, !dbg !8451
  %tobool288 = icmp ne i32 %109, 0, !dbg !8451
  %lnot289 = xor i1 %tobool288, true, !dbg !8451
  %lnot291 = xor i1 %lnot289, true, !dbg !8451
  %lnot.ext292 = zext i1 %lnot291 to i32, !dbg !8451
  %conv293 = sext i32 %lnot.ext292 to i64, !dbg !8451
  %tobool294 = icmp ne i64 %conv293, 0, !dbg !8451
  br i1 %tobool294, label %if.then295, label %if.end311, !dbg !8450

if.then295:                                       ; preds = %sw.default
  br label %do.body296, !dbg !8451

do.body296:                                       ; preds = %if.then295
  br label %do.body297, !dbg !8453

do.body297:                                       ; preds = %do.body296
  br label %do.end298, !dbg !8455

do.end298:                                        ; preds = %do.body297
  %110 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8453
  %print_id = getelementptr inbounds %struct.ata_port, %struct.ata_port* %110, i32 0, i32 5, !dbg !8453
  %111 = load i32, i32* %print_id, align 4, !dbg !8453
  %112 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8453
  %hsm_task_state299 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %112, i32 0, i32 37, !dbg !8453
  %113 = load i32, i32* %hsm_task_state299, align 16, !dbg !8453
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i64 0, i64 0), i32 %111, i32 %113) #9, !dbg !8453
  br label %do.body300, !dbg !8453

do.body300:                                       ; preds = %do.end298
  br label %do.body301, !dbg !8457

do.body301:                                       ; preds = %do.body300
  br label %do.end302, !dbg !8459

do.end302:                                        ; preds = %do.body301
  br label %do.body303, !dbg !8457

do.body303:                                       ; preds = %do.end302
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 1212, i32 2313, i64 12) #8, !dbg !8461, !srcloc !8463
  br label %do.end304, !dbg !8461

do.end304:                                        ; preds = %do.body303
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 319) #8, !dbg !8464, !srcloc !8466
  br label %do.body305, !dbg !8457

do.body305:                                       ; preds = %do.end304
  br label %do.end306, !dbg !8467

do.end306:                                        ; preds = %do.body305
  br label %do.end307, !dbg !8457

do.end307:                                        ; preds = %do.end306
  br label %do.body308, !dbg !8453

do.body308:                                       ; preds = %do.end307
  br label %do.end309, !dbg !8469

do.end309:                                        ; preds = %do.body308
  br label %do.end310, !dbg !8453

do.end310:                                        ; preds = %do.end309
  br label %if.end311, !dbg !8453

if.end311:                                        ; preds = %do.end310, %sw.default
  %114 = load i32, i32* %__ret_warn_on287, align 4, !dbg !8450
  %tobool313 = icmp ne i32 %114, 0, !dbg !8450
  %lnot314 = xor i1 %tobool313, true, !dbg !8450
  %lnot316 = xor i1 %lnot314, true, !dbg !8450
  %lnot.ext317 = zext i1 %lnot316 to i32, !dbg !8450
  %conv318 = sext i32 %lnot.ext317 to i64, !dbg !8450
  store i64 %conv318, i64* %tmp312, align 8, !dbg !8451
  %115 = load i64, i64* %tmp312, align 8, !dbg !8450
  br label %sw.epilog, !dbg !8471

sw.epilog:                                        ; preds = %if.end311, %sw.bb285, %if.end276, %if.end235, %if.end109
  %116 = load i32, i32* %poll_next, align 4, !dbg !8472
  ret i32 %116, !dbg !8473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_hsm_ok_in_wq(%struct.ata_port* %ap, %struct.ata_queued_cmd* %qc) #1 !dbg !8474 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8477, metadata !DIExpression()), !dbg !8478
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8479, metadata !DIExpression()), !dbg !8480
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8481
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !8483
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !8484
  %1 = load i64, i64* %flags, align 8, !dbg !8484
  %and = and i64 %1, 64, !dbg !8485
  %tobool = icmp ne i64 %and, 0, !dbg !8485
  br i1 %tobool, label %if.then, label %if.end, !dbg !8486

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8487
  br label %return, !dbg !8487

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8488
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 37, !dbg !8490
  %3 = load i32, i32* %hsm_task_state, align 16, !dbg !8490
  %cmp = icmp eq i32 %3, 1, !dbg !8491
  br i1 %cmp, label %if.then1, label %if.end20, !dbg !8492

if.then1:                                         ; preds = %if.end
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8493
  %tf2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 4, !dbg !8496
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf2, i32 0, i32 1, !dbg !8497
  %5 = load i8, i8* %protocol, align 8, !dbg !8497
  %conv = zext i8 %5 to i32, !dbg !8493
  %cmp3 = icmp eq i32 %conv, 1, !dbg !8498
  br i1 %cmp3, label %land.lhs.true, label %if.end10, !dbg !8499

land.lhs.true:                                    ; preds = %if.then1
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8500
  %tf5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 4, !dbg !8501
  %flags6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf5, i32 0, i32 0, !dbg !8502
  %7 = load i64, i64* %flags6, align 8, !dbg !8502
  %and7 = and i64 %7, 8, !dbg !8503
  %tobool8 = icmp ne i64 %and7, 0, !dbg !8503
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8504

if.then9:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8505
  br label %return, !dbg !8505

if.end10:                                         ; preds = %land.lhs.true, %if.then1
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8506
  %tf11 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 4, !dbg !8508
  %protocol12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf11, i32 0, i32 1, !dbg !8509
  %9 = load i8, i8* %protocol12, align 8, !dbg !8509
  %call = call zeroext i1 @ata_is_atapi(i8 zeroext %9) #9, !dbg !8510
  br i1 %call, label %land.lhs.true14, label %if.end19, !dbg !8511

land.lhs.true14:                                  ; preds = %if.end10
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8512
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 1, !dbg !8513
  %11 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8513
  %flags15 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 3, !dbg !8514
  %12 = load i64, i64* %flags15, align 16, !dbg !8514
  %and16 = and i64 %12, 4, !dbg !8515
  %tobool17 = icmp ne i64 %and16, 0, !dbg !8515
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !8516

if.then18:                                        ; preds = %land.lhs.true14
  store i32 1, i32* %retval, align 4, !dbg !8517
  br label %return, !dbg !8517

if.end19:                                         ; preds = %land.lhs.true14, %if.end10
  br label %if.end20, !dbg !8518

if.end20:                                         ; preds = %if.end19, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8519
  br label %return, !dbg !8519

return:                                           ; preds = %if.end20, %if.then18, %if.then9, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8520
  ret i32 %13, !dbg !8520
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noredzone
declare dso_local void @ata_ehi_push_desc(%struct.ata_eh_info*, i8*, ...) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_pio_sectors(%struct.ata_queued_cmd* %qc) #1 !dbg !8521 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %nsect = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x305 = alloca i32, align 4
  %__UNIQUE_ID___y306 = alloca i32, align 4
  %tmp23 = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8522, metadata !DIExpression()), !dbg !8523
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8524
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !8526
  %call = call i32 @is_multi_taskfile(%struct.ata_taskfile* %tf) #9, !dbg !8527
  %tobool = icmp ne i32 %call, 0, !dbg !8527
  br i1 %tobool, label %if.then, label %if.else, !dbg !8528

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %nsect, metadata !8529, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8532, metadata !DIExpression()), !dbg !8534
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8534
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %1, i32 0, i32 1, !dbg !8534
  %2 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8534
  %multi_count = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 17, !dbg !8534
  %3 = load i32, i32* %multi_count, align 8, !dbg !8534
  %cmp = icmp eq i32 %3, 0, !dbg !8534
  %lnot = xor i1 %cmp, true, !dbg !8534
  %lnot1 = xor i1 %lnot, true, !dbg !8534
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8534
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8534
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8535
  %tobool2 = icmp ne i32 %4, 0, !dbg !8535
  %lnot3 = xor i1 %tobool2, true, !dbg !8535
  %lnot5 = xor i1 %lnot3, true, !dbg !8535
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !8535
  %conv = sext i32 %lnot.ext6 to i64, !dbg !8535
  %tobool7 = icmp ne i64 %conv, 0, !dbg !8535
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !8534

if.then8:                                         ; preds = %if.then
  br label %do.body, !dbg !8535

do.body:                                          ; preds = %if.then8
  br label %do.body9, !dbg !8537

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8539

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8537

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 708, i32 2307, i64 12) #8, !dbg !8541, !srcloc !8543
  br label %do.end11, !dbg !8541

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 304) #8, !dbg !8544, !srcloc !8546
  br label %do.body12, !dbg !8537

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8547

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8537

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8537

if.end:                                           ; preds = %do.end14, %if.then
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8534
  %tobool15 = icmp ne i32 %5, 0, !dbg !8534
  %lnot16 = xor i1 %tobool15, true, !dbg !8534
  %lnot18 = xor i1 %lnot16, true, !dbg !8534
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8534
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8534
  store i64 %conv20, i64* %tmp, align 8, !dbg !8535
  %6 = load i64, i64* %tmp, align 8, !dbg !8534
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x305, metadata !8549, metadata !DIExpression()), !dbg !8551
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8551
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 13, !dbg !8551
  %8 = load i32, i32* %nbytes, align 8, !dbg !8551
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8551
  %curbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 15, !dbg !8551
  %10 = load i32, i32* %curbytes, align 8, !dbg !8551
  %sub = sub i32 %8, %10, !dbg !8551
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8551
  %sect_size = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 12, !dbg !8551
  %12 = load i32, i32* %sect_size, align 4, !dbg !8551
  %div = udiv i32 %sub, %12, !dbg !8551
  store i32 %div, i32* %__UNIQUE_ID___x305, align 4, !dbg !8551
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y306, metadata !8552, metadata !DIExpression()), !dbg !8551
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8551
  %dev21 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 1, !dbg !8551
  %14 = load %struct.ata_device*, %struct.ata_device** %dev21, align 8, !dbg !8551
  %multi_count22 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 17, !dbg !8551
  %15 = load i32, i32* %multi_count22, align 8, !dbg !8551
  store i32 %15, i32* %__UNIQUE_ID___y306, align 4, !dbg !8551
  %16 = load i32, i32* %__UNIQUE_ID___x305, align 4, !dbg !8551
  %17 = load i32, i32* %__UNIQUE_ID___y306, align 4, !dbg !8551
  %cmp24 = icmp ult i32 %16, %17, !dbg !8551
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !8551

cond.true:                                        ; preds = %if.end
  %18 = load i32, i32* %__UNIQUE_ID___x305, align 4, !dbg !8551
  br label %cond.end, !dbg !8551

cond.false:                                       ; preds = %if.end
  %19 = load i32, i32* %__UNIQUE_ID___y306, align 4, !dbg !8551
  br label %cond.end, !dbg !8551

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %19, %cond.false ], !dbg !8551
  store i32 %cond, i32* %tmp23, align 4, !dbg !8551
  %20 = load i32, i32* %tmp23, align 4, !dbg !8551
  store i32 %20, i32* %nsect, align 4, !dbg !8553
  br label %while.cond, !dbg !8554

while.cond:                                       ; preds = %while.body, %cond.end
  %21 = load i32, i32* %nsect, align 4, !dbg !8555
  %dec = add i32 %21, -1, !dbg !8555
  store i32 %dec, i32* %nsect, align 4, !dbg !8555
  %tobool26 = icmp ne i32 %21, 0, !dbg !8554
  br i1 %tobool26, label %while.body, label %while.end, !dbg !8554

while.body:                                       ; preds = %while.cond
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8556
  call void @ata_pio_sector(%struct.ata_queued_cmd* %22) #9, !dbg !8557
  br label %while.cond, !dbg !8554, !llvm.loop !8558

while.end:                                        ; preds = %while.cond
  br label %if.end27, !dbg !8560

if.else:                                          ; preds = %entry
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8561
  call void @ata_pio_sector(%struct.ata_queued_cmd* %23) #9, !dbg !8562
  br label %if.end27

if.end27:                                         ; preds = %if.else, %while.end
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8563
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %24, i32 0, i32 0, !dbg !8564
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8564
  call void @ata_sff_sync(%struct.ata_port* %25) #9, !dbg !8565
  ret void, !dbg !8566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atapi_send_cdb(%struct.ata_port* %ap, %struct.ata_queued_cmd* %qc) #1 !dbg !8567 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8572, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8574, metadata !DIExpression()), !dbg !8576
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8576
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !8576
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8576
  %cdb_len = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 19, !dbg !8576
  %2 = load i32, i32* %cdb_len, align 32, !dbg !8576
  %cmp = icmp ult i32 %2, 12, !dbg !8576
  %lnot = xor i1 %cmp, true, !dbg !8576
  %lnot1 = xor i1 %lnot, true, !dbg !8576
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8576
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8576
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8577
  %tobool = icmp ne i32 %3, 0, !dbg !8577
  %lnot2 = xor i1 %tobool, true, !dbg !8577
  %lnot4 = xor i1 %lnot2, true, !dbg !8577
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !8577
  %conv = sext i32 %lnot.ext5 to i64, !dbg !8577
  %tobool6 = icmp ne i64 %conv, 0, !dbg !8577
  br i1 %tobool6, label %if.then, label %if.end, !dbg !8576

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8577

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !8579

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !8581

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !8579

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 735, i32 2307, i64 12) #8, !dbg !8583, !srcloc !8585
  br label %do.end9, !dbg !8583

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #8, !dbg !8586, !srcloc !8588
  br label %do.body10, !dbg !8579

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !8589

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !8579

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !8579

if.end:                                           ; preds = %do.end12, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8576
  %tobool13 = icmp ne i32 %4, 0, !dbg !8576
  %lnot14 = xor i1 %tobool13, true, !dbg !8576
  %lnot16 = xor i1 %lnot14, true, !dbg !8576
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !8576
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !8576
  store i64 %conv18, i64* %tmp, align 8, !dbg !8577
  %5 = load i64, i64* %tmp, align 8, !dbg !8576
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8591
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 1, !dbg !8592
  %7 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8592
  %sff_data_xfer = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %7, i32 0, i32 44, !dbg !8593
  %8 = load i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)** %sff_data_xfer, align 8, !dbg !8593
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8594
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8595
  %cdb = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 5, !dbg !8596
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %cdb, i64 0, i64 0, !dbg !8595
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8597
  %dev19 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 1, !dbg !8598
  %12 = load %struct.ata_device*, %struct.ata_device** %dev19, align 8, !dbg !8598
  %cdb_len20 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 19, !dbg !8599
  %13 = load i32, i32* %cdb_len20, align 32, !dbg !8599
  %call = call i32 %8(%struct.ata_queued_cmd* %9, i8* %arraydecay, i32 %13, i32 1) #9, !dbg !8591
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8600
  call void @ata_sff_sync(%struct.ata_port* %14) #9, !dbg !8601
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8602
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 4, !dbg !8603
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !8604
  %16 = load i8, i8* %protocol, align 8, !dbg !8604
  %conv21 = zext i8 %16 to i32, !dbg !8602
  switch i32 %conv21, label %sw.default [
    i32 9, label %sw.bb
    i32 8, label %sw.bb22
    i32 10, label %sw.bb24
  ], !dbg !8605

sw.bb:                                            ; preds = %if.end
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8606
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 37, !dbg !8608
  store i32 2, i32* %hsm_task_state, align 16, !dbg !8609
  br label %sw.epilog, !dbg !8610

sw.bb22:                                          ; preds = %if.end
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8611
  %hsm_task_state23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 37, !dbg !8612
  store i32 3, i32* %hsm_task_state23, align 16, !dbg !8613
  br label %sw.epilog, !dbg !8614

sw.bb24:                                          ; preds = %if.end
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8615
  %hsm_task_state25 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 37, !dbg !8616
  store i32 3, i32* %hsm_task_state25, align 16, !dbg !8617
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8618
  %ops26 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 1, !dbg !8619
  %21 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops26, align 8, !dbg !8619
  %bmdma_start = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %21, i32 0, i32 50, !dbg !8620
  %22 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_start, align 8, !dbg !8620
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8621
  call void %22(%struct.ata_queued_cmd* %23) #9, !dbg !8618
  br label %sw.epilog, !dbg !8622

sw.default:                                       ; preds = %if.end
  br label %do.body27, !dbg !8623

do.body27:                                        ; preds = %sw.default
  br label %do.body28, !dbg !8624

do.body28:                                        ; preds = %do.body27
  br label %do.end29, !dbg !8626

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !8624

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 756, i32 0, i64 12) #8, !dbg !8628, !srcloc !8630
  br label %do.end31, !dbg !8628

do.end31:                                         ; preds = %do.body30
  br label %do.body32, !dbg !8624

do.body32:                                        ; preds = %do.end31
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 308) #8, !dbg !8631, !srcloc !8634
  unreachable, !dbg !8635

do.end33:                                         ; No predecessors!
  br label %do.end34, !dbg !8624

do.end34:                                         ; preds = %do.end33
  br label %sw.epilog, !dbg !8636

sw.epilog:                                        ; preds = %do.end34, %sw.bb24, %sw.bb22, %sw.bb
  ret void, !dbg !8637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atapi_pio_bytes(%struct.ata_queued_cmd* %qc) #1 !dbg !8638 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %ireason = alloca i32, align 4
  %bc_lo = alloca i32, align 4
  %bc_hi = alloca i32, align 4
  %bytes = alloca i32, align 4
  %i_write = alloca i32, align 4
  %do_write = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8639, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8641, metadata !DIExpression()), !dbg !8642
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8643
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !8644
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !8644
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !8642
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !8645, metadata !DIExpression()), !dbg !8646
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8647
  %dev2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 1, !dbg !8648
  %3 = load %struct.ata_device*, %struct.ata_device** %dev2, align 8, !dbg !8648
  store %struct.ata_device* %3, %struct.ata_device** %dev, align 8, !dbg !8646
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !8649, metadata !DIExpression()), !dbg !8650
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8651
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 0, !dbg !8652
  %5 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !8652
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %5, i32 0, i32 11, !dbg !8653
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !8650
  call void @llvm.dbg.declare(metadata i32* %ireason, metadata !8654, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.declare(metadata i32* %bc_lo, metadata !8656, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.declare(metadata i32* %bc_hi, metadata !8658, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !8660, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.declare(metadata i32* %i_write, metadata !8662, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.declare(metadata i32* %do_write, metadata !8664, metadata !DIExpression()), !dbg !8665
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8666
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 4, !dbg !8667
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !8668
  %7 = load i64, i64* %flags, align 8, !dbg !8668
  %and = and i64 %7, 8, !dbg !8669
  %tobool = icmp ne i64 %and, 0, !dbg !8670
  %8 = zext i1 %tobool to i64, !dbg !8670
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !8670
  store i32 %cond, i32* %do_write, align 4, !dbg !8665
  %9 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8671
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 1, !dbg !8672
  %10 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8672
  %sff_tf_read = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %10, i32 0, i32 42, !dbg !8673
  %11 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_read, align 8, !dbg !8673
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8674
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8675
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 21, !dbg !8676
  call void %11(%struct.ata_port* %12, %struct.ata_taskfile* %result_tf) #9, !dbg !8671
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8677
  %result_tf3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 21, !dbg !8678
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf3, i32 0, i32 9, !dbg !8679
  %15 = load i8, i8* %nsect, align 8, !dbg !8679
  %conv = zext i8 %15 to i32, !dbg !8677
  store i32 %conv, i32* %ireason, align 4, !dbg !8680
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8681
  %result_tf4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 21, !dbg !8682
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf4, i32 0, i32 11, !dbg !8683
  %17 = load i8, i8* %lbam, align 2, !dbg !8683
  %conv5 = zext i8 %17 to i32, !dbg !8681
  store i32 %conv5, i32* %bc_lo, align 4, !dbg !8684
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8685
  %result_tf6 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 21, !dbg !8686
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf6, i32 0, i32 12, !dbg !8687
  %19 = load i8, i8* %lbah, align 1, !dbg !8687
  %conv7 = zext i8 %19 to i32, !dbg !8685
  store i32 %conv7, i32* %bc_hi, align 4, !dbg !8688
  %20 = load i32, i32* %bc_hi, align 4, !dbg !8689
  %shl = shl i32 %20, 8, !dbg !8690
  %21 = load i32, i32* %bc_lo, align 4, !dbg !8691
  %or = or i32 %shl, %21, !dbg !8692
  store i32 %or, i32* %bytes, align 4, !dbg !8693
  %22 = load i32, i32* %ireason, align 4, !dbg !8694
  %and8 = and i32 %22, 1, !dbg !8694
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8694
  %lnot = xor i1 %tobool9, true, !dbg !8694
  %lnot10 = xor i1 %lnot, true, !dbg !8694
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !8694
  %conv11 = sext i32 %lnot.ext to i64, !dbg !8694
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !8694
  br i1 %tobool12, label %if.then, label %if.end, !dbg !8696

if.then:                                          ; preds = %entry
  br label %atapi_check, !dbg !8697

if.end:                                           ; preds = %entry
  %23 = load i32, i32* %ireason, align 4, !dbg !8698
  %and13 = and i32 %23, 2, !dbg !8699
  %cmp = icmp eq i32 %and13, 0, !dbg !8700
  %24 = zext i1 %cmp to i64, !dbg !8701
  %cond15 = select i1 %cmp, i32 1, i32 0, !dbg !8701
  store i32 %cond15, i32* %i_write, align 4, !dbg !8702
  %25 = load i32, i32* %do_write, align 4, !dbg !8703
  %26 = load i32, i32* %i_write, align 4, !dbg !8703
  %cmp16 = icmp ne i32 %25, %26, !dbg !8703
  %lnot18 = xor i1 %cmp16, true, !dbg !8703
  %lnot20 = xor i1 %lnot18, true, !dbg !8703
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !8703
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !8703
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !8703
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !8705

if.then24:                                        ; preds = %if.end
  br label %atapi_check, !dbg !8706

if.end25:                                         ; preds = %if.end
  %27 = load i32, i32* %bytes, align 4, !dbg !8707
  %tobool26 = icmp ne i32 %27, 0, !dbg !8707
  %lnot27 = xor i1 %tobool26, true, !dbg !8707
  %lnot29 = xor i1 %lnot27, true, !dbg !8707
  %lnot31 = xor i1 %lnot29, true, !dbg !8707
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !8707
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !8707
  %tobool34 = icmp ne i64 %conv33, 0, !dbg !8707
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !8709

if.then35:                                        ; preds = %if.end25
  br label %atapi_check, !dbg !8710

if.end36:                                         ; preds = %if.end25
  %28 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8711
  %29 = load i32, i32* %bytes, align 4, !dbg !8711
  %call = call i32 @__atapi_pio_bytes(%struct.ata_queued_cmd* %28, i32 %29) #9, !dbg !8711
  %tobool37 = icmp ne i32 %call, 0, !dbg !8711
  %lnot38 = xor i1 %tobool37, true, !dbg !8711
  %lnot40 = xor i1 %lnot38, true, !dbg !8711
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !8711
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !8711
  %tobool43 = icmp ne i64 %conv42, 0, !dbg !8711
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !8713

if.then44:                                        ; preds = %if.end36
  br label %err_out, !dbg !8714

if.end45:                                         ; preds = %if.end36
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8715
  call void @ata_sff_sync(%struct.ata_port* %30) #9, !dbg !8716
  br label %return, !dbg !8717

atapi_check:                                      ; preds = %if.then35, %if.then24, %if.then
  call void @llvm.dbg.label(metadata !8718), !dbg !8719
  %31 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !8720
  %32 = load i32, i32* %ireason, align 4, !dbg !8721
  %33 = load i32, i32* %bytes, align 4, !dbg !8722
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %31, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i64 0, i64 0), i32 %32, i32 %33) #9, !dbg !8723
  br label %err_out, !dbg !8723

err_out:                                          ; preds = %atapi_check, %if.then44
  call void @llvm.dbg.label(metadata !8724), !dbg !8725
  %34 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8726
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %34, i32 0, i32 20, !dbg !8727
  %35 = load i32, i32* %err_mask, align 4, !dbg !8728
  %or46 = or i32 %35, 2, !dbg !8728
  store i32 %or46, i32* %err_mask, align 4, !dbg !8728
  %36 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8729
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %36, i32 0, i32 37, !dbg !8730
  store i32 4, i32* %hsm_task_state, align 16, !dbg !8731
  br label %return, !dbg !8732

return:                                           ; preds = %err_out, %if.end45
  ret void, !dbg !8732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_ok(i8 zeroext %status) #1 !dbg !8733 {
entry:
  %status.addr = alloca i8, align 1
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !8736, metadata !DIExpression()), !dbg !8737
  %0 = load i8, i8* %status.addr, align 1, !dbg !8738
  %conv = zext i8 %0 to i32, !dbg !8738
  %and = and i32 %conv, 233, !dbg !8739
  %cmp = icmp eq i32 %and, 64, !dbg !8740
  ret i1 %cmp, !dbg !8741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__ac_err_mask(i8 zeroext %status) #1 !dbg !8742 {
entry:
  %retval = alloca i32, align 4
  %status.addr = alloca i8, align 1
  %mask = alloca i32, align 4
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !8745, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8747, metadata !DIExpression()), !dbg !8748
  %0 = load i8, i8* %status.addr, align 1, !dbg !8749
  %call = call i32 @ac_err_mask(i8 zeroext %0) #9, !dbg !8750
  store i32 %call, i32* %mask, align 4, !dbg !8748
  %1 = load i32, i32* %mask, align 4, !dbg !8751
  %cmp = icmp eq i32 %1, 0, !dbg !8753
  br i1 %cmp, label %if.then, label %if.end, !dbg !8754

if.then:                                          ; preds = %entry
  store i32 256, i32* %retval, align 4, !dbg !8755
  br label %return, !dbg !8755

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %mask, align 4, !dbg !8756
  store i32 %2, i32* %retval, align 4, !dbg !8757
  br label %return, !dbg !8757

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !8758
  ret i32 %3, !dbg !8758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_hsm_qc_complete(%struct.ata_queued_cmd* %qc, i32 %in_wq) #1 !dbg !8759 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %in_wq.addr = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8762, metadata !DIExpression()), !dbg !8763
  store i32 %in_wq, i32* %in_wq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_wq.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8766, metadata !DIExpression()), !dbg !8767
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8768
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !8769
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !8769
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !8767
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8770
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 1, !dbg !8772
  %3 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8772
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %3, i32 0, i32 22, !dbg !8773
  %4 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !8773
  %tobool = icmp ne void (%struct.ata_port*)* %4, null, !dbg !8770
  br i1 %tobool, label %if.then, label %if.else30, !dbg !8774

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %in_wq.addr, align 4, !dbg !8775
  %tobool2 = icmp ne i32 %5, 0, !dbg !8775
  br i1 %tobool2, label %if.then3, label %if.else13, !dbg !8778

if.then3:                                         ; preds = %if.then
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8779
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8781
  %tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 7, !dbg !8782
  %8 = load i32, i32* %tag, align 8, !dbg !8782
  %call = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %6, i32 %8) #9, !dbg !8783
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8784
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8785
  %tobool4 = icmp ne %struct.ata_queued_cmd* %9, null, !dbg !8785
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !8787

if.then5:                                         ; preds = %if.then3
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8788
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 20, !dbg !8788
  %11 = load i32, i32* %err_mask, align 4, !dbg !8788
  %and = and i32 %11, 2, !dbg !8788
  %tobool6 = icmp ne i32 %and, 0, !dbg !8788
  %lnot = xor i1 %tobool6, true, !dbg !8788
  %lnot7 = xor i1 %lnot, true, !dbg !8788
  %lnot8 = xor i1 %lnot7, true, !dbg !8788
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !8788
  %conv = sext i32 %lnot.ext to i64, !dbg !8788
  %tobool9 = icmp ne i64 %conv, 0, !dbg !8788
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !8791

if.then10:                                        ; preds = %if.then5
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8792
  call void @ata_sff_irq_on(%struct.ata_port* %12) #9, !dbg !8794
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8795
  call void @ata_qc_complete(%struct.ata_queued_cmd* %13) #9, !dbg !8796
  br label %if.end, !dbg !8797

if.else:                                          ; preds = %if.then5
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8798
  %call11 = call i32 @ata_port_freeze(%struct.ata_port* %14) #9, !dbg !8799
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  br label %if.end12, !dbg !8800

if.end12:                                         ; preds = %if.end, %if.then3
  br label %if.end29, !dbg !8801

if.else13:                                        ; preds = %if.then
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8802
  %err_mask14 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 20, !dbg !8802
  %16 = load i32, i32* %err_mask14, align 4, !dbg !8802
  %and15 = and i32 %16, 2, !dbg !8802
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8802
  %lnot17 = xor i1 %tobool16, true, !dbg !8802
  %lnot19 = xor i1 %lnot17, true, !dbg !8802
  %lnot21 = xor i1 %lnot19, true, !dbg !8802
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !8802
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !8802
  %tobool24 = icmp ne i64 %conv23, 0, !dbg !8802
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !8805

if.then25:                                        ; preds = %if.else13
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8806
  call void @ata_qc_complete(%struct.ata_queued_cmd* %17) #9, !dbg !8807
  br label %if.end28, !dbg !8807

if.else26:                                        ; preds = %if.else13
  %18 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8808
  %call27 = call i32 @ata_port_freeze(%struct.ata_port* %18) #9, !dbg !8809
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end12
  br label %if.end35, !dbg !8810

if.else30:                                        ; preds = %entry
  %19 = load i32, i32* %in_wq.addr, align 4, !dbg !8811
  %tobool31 = icmp ne i32 %19, 0, !dbg !8811
  br i1 %tobool31, label %if.then32, label %if.else33, !dbg !8814

if.then32:                                        ; preds = %if.else30
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8815
  call void @ata_sff_irq_on(%struct.ata_port* %20) #9, !dbg !8817
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8818
  call void @ata_qc_complete(%struct.ata_queued_cmd* %21) #9, !dbg !8819
  br label %if.end34, !dbg !8820

if.else33:                                        ; preds = %if.else30
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8821
  call void @ata_qc_complete(%struct.ata_queued_cmd* %22) #9, !dbg !8822
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then32
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end29
  ret void, !dbg !8823
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_queue_work(%struct.work_struct* %work) #1 !dbg !8824 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !8825, metadata !DIExpression()), !dbg !8826
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ata_sff_wq, align 8, !dbg !8827
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !8828
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #9, !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #1 !dbg !8831 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !8836, metadata !DIExpression()), !dbg !8837
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !8838
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !8839
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #9, !dbg !8840
  ret i1 %call, !dbg !8841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_queue_delayed_work(%struct.delayed_work* %dwork, i64 %delay) #1 !dbg !8842 {
entry:
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ata_sff_wq, align 8, !dbg !8850
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !8851
  %2 = load i64, i64* %delay.addr, align 8, !dbg !8852
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #9, !dbg !8853
  ret void, !dbg !8854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #1 !dbg !8855 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !8858, metadata !DIExpression()), !dbg !8859
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !8860, metadata !DIExpression()), !dbg !8861
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8862, metadata !DIExpression()), !dbg !8863
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !8864
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !8865
  %2 = load i64, i64* %delay.addr, align 8, !dbg !8866
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #9, !dbg !8867
  ret i1 %call, !dbg !8868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_queue_pio_task(%struct.ata_link* %link, i64 %delay) #1 !dbg !8869 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7894, metadata !DIExpression()), !dbg !8872
  %link.addr = alloca %struct.ata_link*, align 8
  %delay.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !8874, metadata !DIExpression()), !dbg !8875
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8878, metadata !DIExpression()), !dbg !8879
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !8880
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !8881
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !8881
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !8879
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8882, metadata !DIExpression()), !dbg !8884
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8884
  %sff_pio_task_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 11, !dbg !8884
  %3 = load %struct.ata_link*, %struct.ata_link** %sff_pio_task_link, align 16, !dbg !8884
  %cmp = icmp ne %struct.ata_link* %3, null, !dbg !8884
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8884

land.rhs:                                         ; preds = %entry
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8884
  %sff_pio_task_link2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 11, !dbg !8884
  %5 = load %struct.ata_link*, %struct.ata_link** %sff_pio_task_link2, align 16, !dbg !8884
  %6 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !8884
  %cmp3 = icmp ne %struct.ata_link* %5, %6, !dbg !8884
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8885
  %lnot = xor i1 %7, true, !dbg !8884
  %lnot4 = xor i1 %lnot, true, !dbg !8884
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8884
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8884
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !8886
  %tobool = icmp ne i32 %8, 0, !dbg !8886
  %lnot5 = xor i1 %tobool, true, !dbg !8886
  %lnot7 = xor i1 %lnot5, true, !dbg !8886
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8886
  %conv = sext i32 %lnot.ext8 to i64, !dbg !8886
  %tobool9 = icmp ne i64 %conv, 0, !dbg !8886
  br i1 %tobool9, label %if.then, label %if.end, !dbg !8884

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !8886

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !8888

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !8890

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !8888

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 1236, i32 2305, i64 12) #8, !dbg !8892, !srcloc !8894
  br label %do.end12, !dbg !8892

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 320) #8, !dbg !8895, !srcloc !8897
  br label %do.body13, !dbg !8888

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !8898

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !8888

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !8888

if.end:                                           ; preds = %do.end15, %land.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !8884
  %tobool16 = icmp ne i32 %9, 0, !dbg !8884
  %lnot17 = xor i1 %tobool16, true, !dbg !8884
  %lnot19 = xor i1 %lnot17, true, !dbg !8884
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !8884
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !8884
  store i64 %conv21, i64* %tmp, align 8, !dbg !8886
  %10 = load i64, i64* %tmp, align 8, !dbg !8884
  %11 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !8900
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8901
  %sff_pio_task_link22 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 11, !dbg !8902
  store %struct.ata_link* %11, %struct.ata_link** %sff_pio_task_link22, align 16, !dbg !8903
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8904
  %sff_pio_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 12, !dbg !8905
  %14 = load i64, i64* %delay.addr, align 8, !dbg !8906
  %conv23 = trunc i64 %14 to i32, !dbg !8906
  store i32 %conv23, i32* %m.addr.i, align 4
  %15 = load i32, i32* %m.addr.i, align 4, !dbg !8907
  %16 = call i1 @llvm.is.constant.i32(i32 %15) #8, !dbg !8908
  br i1 %16, label %if.then.i, label %if.else.i, !dbg !8909

if.then.i:                                        ; preds = %if.end
  %17 = load i32, i32* %m.addr.i, align 4, !dbg !8910
  %cmp.i = icmp slt i32 %17, 0, !dbg !8911
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8912

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8913
  br label %msecs_to_jiffies.exit, !dbg !8913

if.end.i:                                         ; preds = %if.then.i
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !8914
  %call.i = call i64 @_msecs_to_jiffies(i32 %18) #10, !dbg !8915
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8916
  br label %msecs_to_jiffies.exit, !dbg !8916

if.else.i:                                        ; preds = %if.end
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !8917
  %call2.i = call i64 @__msecs_to_jiffies(i32 %19) #10, !dbg !8918
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8919
  br label %msecs_to_jiffies.exit, !dbg !8919

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %20 = load i64, i64* %retval.i, align 8, !dbg !8920
  call void @ata_sff_queue_delayed_work(%struct.delayed_work* %sff_pio_task, i64 %20) #9, !dbg !8921
  ret void, !dbg !8922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_flush_pio_task(%struct.ata_port* %ap) #1 !dbg !8923 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !8924, metadata !DIExpression()), !dbg !8928
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8930, metadata !DIExpression()), !dbg !8932
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8934, metadata !DIExpression()), !dbg !8935
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8936
  %sff_pio_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 12, !dbg !8937
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %sff_pio_task) #9, !dbg !8938
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8939
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 2, !dbg !8940
  %2 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8940
  store %struct.spinlock* %2, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #10, !dbg !8941
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8944, !srcloc !8946
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8947
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8947
  %rlock.i = bitcast %union.anon.8* %4 to %struct.raw_spinlock*, !dbg !8947
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8949
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 37, !dbg !8950
  store i32 0, i32* %hsm_task_state, align 16, !dbg !8951
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8952
  %lock1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 2, !dbg !8953
  %7 = load %struct.spinlock*, %struct.spinlock** %lock1, align 16, !dbg !8953
  store %struct.spinlock* %7, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #10, !dbg !8954
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8957, !srcloc !8959
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !8960
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8960
  %rlock.i3 = bitcast %union.anon.8* %9 to %struct.raw_spinlock*, !dbg !8960
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8962
  %sff_pio_task_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 11, !dbg !8963
  store %struct.ata_link* null, %struct.ata_link** %sff_pio_task_link, align 16, !dbg !8964
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8965
  %msg_enable = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 38, !dbg !8965
  %12 = load i32, i32* %msg_enable, align 4, !dbg !8965
  %and = and i32 %12, 32, !dbg !8965
  %tobool = icmp ne i32 %and, 0, !dbg !8965
  br i1 %tobool, label %if.then, label %if.end, !dbg !8967

if.then:                                          ; preds = %entry
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8968
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.ata_sff_flush_pio_task, i64 0, i64 0)) #9, !dbg !8968
  br label %if.end, !dbg !8968

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8969
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_dev_select(%struct.ata_port* %ap, i32 %device, i32 %wait, i32 %can_sleep) #1 !dbg !8970 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %device.addr = alloca i32, align 4
  %wait.addr = alloca i32, align 4
  %can_sleep.addr = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  store i32 %device, i32* %device.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %device.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  store i32 %wait, i32* %wait.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wait.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  store i32 %can_sleep, i32* %can_sleep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %can_sleep.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8981
  %msg_enable = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 38, !dbg !8981
  %1 = load i32, i32* %msg_enable, align 4, !dbg !8981
  %and = and i32 %1, 4, !dbg !8981
  %tobool = icmp ne i32 %and, 0, !dbg !8981
  br i1 %tobool, label %if.then, label %if.end, !dbg !8983

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8984
  %3 = load i32, i32* %device.addr, align 4, !dbg !8984
  %4 = load i32, i32* %wait.addr, align 4, !dbg !8984
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31, i64 0, i64 0), i32 %3, i32 %4) #9, !dbg !8984
  br label %if.end, !dbg !8984

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %wait.addr, align 4, !dbg !8985
  %tobool1 = icmp ne i32 %5, 0, !dbg !8985
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !8987

if.then2:                                         ; preds = %if.end
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8988
  %call = call zeroext i8 @ata_wait_idle(%struct.ata_port* %6) #9, !dbg !8989
  br label %if.end3, !dbg !8989

if.end3:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8990
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 1, !dbg !8991
  %8 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8991
  %sff_dev_select = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %8, i32 0, i32 37, !dbg !8992
  %9 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select, align 8, !dbg !8992
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8993
  %11 = load i32, i32* %device.addr, align 4, !dbg !8994
  call void %9(%struct.ata_port* %10, i32 %11) #9, !dbg !8990
  %12 = load i32, i32* %wait.addr, align 4, !dbg !8995
  %tobool4 = icmp ne i32 %12, 0, !dbg !8995
  br i1 %tobool4, label %if.then5, label %if.end11, !dbg !8997

if.then5:                                         ; preds = %if.end3
  %13 = load i32, i32* %can_sleep.addr, align 4, !dbg !8998
  %tobool6 = icmp ne i32 %13, 0, !dbg !8998
  br i1 %tobool6, label %land.lhs.true, label %if.end9, !dbg !9001

land.lhs.true:                                    ; preds = %if.then5
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9002
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 25, !dbg !9003
  %device7 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 14, !dbg !9004
  %15 = load i32, i32* %device.addr, align 4, !dbg !9005
  %idxprom = zext i32 %15 to i64, !dbg !9002
  %arrayidx = getelementptr [2 x %struct.ata_device], [2 x %struct.ata_device]* %device7, i64 0, i64 %idxprom, !dbg !9002
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %arrayidx, i32 0, i32 11, !dbg !9006
  %16 = load i32, i32* %class, align 64, !dbg !9006
  %cmp = icmp eq i32 %16, 3, !dbg !9007
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !9008

if.then8:                                         ; preds = %land.lhs.true
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9009
  call void @ata_msleep(%struct.ata_port* %17, i32 150) #9, !dbg !9010
  br label %if.end9, !dbg !9010

if.end9:                                          ; preds = %if.then8, %land.lhs.true, %if.then5
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9011
  %call10 = call zeroext i8 @ata_wait_idle(%struct.ata_port* %18) #9, !dbg !9012
  br label %if.end11, !dbg !9013

if.end11:                                         ; preds = %if.end9, %if.end3
  ret void, !dbg !9014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_qc_set_polling(%struct.ata_queued_cmd* %qc) #1 !dbg !9015 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9016, metadata !DIExpression()), !dbg !9017
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9018
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !9019
  %ctl = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 2, !dbg !9020
  %1 = load i8, i8* %ctl, align 1, !dbg !9021
  %conv = zext i8 %1 to i32, !dbg !9021
  %or = or i32 %conv, 2, !dbg !9021
  %conv1 = trunc i32 %or to i8, !dbg !9021
  store i8 %conv1, i8* %ctl, align 1, !dbg !9021
  ret void, !dbg !9022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_tf_to_host(%struct.ata_port* %ap, %struct.ata_taskfile* %tf) #1 !dbg !9023 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9024, metadata !DIExpression()), !dbg !9025
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !9026, metadata !DIExpression()), !dbg !9027
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9028
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !9029
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9029
  %sff_tf_load = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 41, !dbg !9030
  %2 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_load, align 8, !dbg !9030
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9031
  %4 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9032
  call void %2(%struct.ata_port* %3, %struct.ata_taskfile* %4) #9, !dbg !9028
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9033
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 1, !dbg !9034
  %6 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !9034
  %sff_exec_command = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %6, i32 0, i32 43, !dbg !9035
  %7 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_exec_command, align 8, !dbg !9035
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9036
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9037
  call void %7(%struct.ata_port* %8, %struct.ata_taskfile* %9) #9, !dbg !9033
  ret void, !dbg !9038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_port_intr(%struct.ata_port* %ap, %struct.ata_queued_cmd* %qc) #1 !dbg !9039 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9042, metadata !DIExpression()), !dbg !9043
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9044, metadata !DIExpression()), !dbg !9045
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9046
  %1 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9047
  %call = call i32 @__ata_sff_port_intr(%struct.ata_port* %0, %struct.ata_queued_cmd* %1, i1 zeroext false) #9, !dbg !9048
  ret i32 %call, !dbg !9049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__ata_sff_port_intr(%struct.ata_port* %ap, %struct.ata_queued_cmd* %qc, i1 zeroext %hsmv_on_idle) #1 !dbg !9050 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %hsmv_on_idle.addr = alloca i8, align 1
  %status = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9055, metadata !DIExpression()), !dbg !9056
  %frombool = zext i1 %hsmv_on_idle to i8
  store i8 %frombool, i8* %hsmv_on_idle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hsmv_on_idle.addr, metadata !9057, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata i8* %status, metadata !9059, metadata !DIExpression()), !dbg !9060
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9061
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 37, !dbg !9062
  %1 = load i32, i32* %hsm_task_state, align 16, !dbg !9062
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb1
  ], !dbg !9063

sw.bb:                                            ; preds = %entry
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9064
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 1, !dbg !9067
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9067
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 3, !dbg !9068
  %4 = load i64, i64* %flags, align 16, !dbg !9068
  %and = and i64 %4, 4, !dbg !9069
  %tobool = icmp ne i64 %and, 0, !dbg !9069
  br i1 %tobool, label %if.end, label %if.then, !dbg !9070

if.then:                                          ; preds = %sw.bb
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9071
  %call = call i32 @ata_sff_idle_irq(%struct.ata_port* %5) #9, !dbg !9072
  store i32 %call, i32* %retval, align 4, !dbg !9073
  br label %return, !dbg !9073

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !9074

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9075
  %call2 = call i32 @ata_sff_idle_irq(%struct.ata_port* %6) #9, !dbg !9076
  store i32 %call2, i32* %retval, align 4, !dbg !9077
  br label %return, !dbg !9077

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9078

sw.epilog:                                        ; preds = %sw.default, %if.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9079
  %call3 = call zeroext i8 @ata_sff_irq_status(%struct.ata_port* %7) #9, !dbg !9080
  store i8 %call3, i8* %status, align 1, !dbg !9081
  %8 = load i8, i8* %status, align 1, !dbg !9082
  %conv = zext i8 %8 to i32, !dbg !9082
  %and4 = and i32 %conv, 128, !dbg !9084
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9084
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !9085

if.then6:                                         ; preds = %sw.epilog
  %9 = load i8, i8* %hsmv_on_idle.addr, align 1, !dbg !9086
  %tobool7 = trunc i8 %9 to i1, !dbg !9086
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !9089

if.then8:                                         ; preds = %if.then6
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9090
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 20, !dbg !9092
  %11 = load i32, i32* %err_mask, align 4, !dbg !9093
  %or = or i32 %11, 2, !dbg !9093
  store i32 %or, i32* %err_mask, align 4, !dbg !9093
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9094
  %hsm_task_state9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 37, !dbg !9095
  store i32 4, i32* %hsm_task_state9, align 16, !dbg !9096
  br label %if.end11, !dbg !9097

if.else:                                          ; preds = %if.then6
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9098
  %call10 = call i32 @ata_sff_idle_irq(%struct.ata_port* %13) #9, !dbg !9099
  store i32 %call10, i32* %retval, align 4, !dbg !9100
  br label %return, !dbg !9100

if.end11:                                         ; preds = %if.then8
  br label %if.end12, !dbg !9101

if.end12:                                         ; preds = %if.end11, %sw.epilog
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9102
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 1, !dbg !9104
  %15 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9104
  %sff_irq_clear = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %15, i32 0, i32 47, !dbg !9105
  %16 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear, align 8, !dbg !9105
  %tobool13 = icmp ne void (%struct.ata_port*)* %16, null, !dbg !9102
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !9106

if.then14:                                        ; preds = %if.end12
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9107
  %ops15 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 1, !dbg !9108
  %18 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops15, align 8, !dbg !9108
  %sff_irq_clear16 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %18, i32 0, i32 47, !dbg !9109
  %19 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear16, align 8, !dbg !9109
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9110
  call void %19(%struct.ata_port* %20) #9, !dbg !9107
  br label %if.end17, !dbg !9107

if.end17:                                         ; preds = %if.then14, %if.end12
  %21 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9111
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9112
  %23 = load i8, i8* %status, align 1, !dbg !9113
  %call18 = call i32 @ata_sff_hsm_move(%struct.ata_port* %21, %struct.ata_queued_cmd* %22, i8 zeroext %23, i32 0) #9, !dbg !9114
  store i32 1, i32* %retval, align 4, !dbg !9115
  br label %return, !dbg !9115

return:                                           ; preds = %if.end17, %if.else, %sw.bb1, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !9116
  ret i32 %24, !dbg !9116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_interrupt(i32 %irq, i8* %dev_instance) #1 !dbg !9117 {
entry:
  %irq.addr = alloca i32, align 4
  %dev_instance.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9121, metadata !DIExpression()), !dbg !9122
  store i8* %dev_instance, i8** %dev_instance.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_instance.addr, metadata !9123, metadata !DIExpression()), !dbg !9124
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9125
  %1 = load i8*, i8** %dev_instance.addr, align 8, !dbg !9126
  %call = call i32 @__ata_sff_interrupt(i32 %0, i8* %1, i32 (%struct.ata_port*, %struct.ata_queued_cmd*)* @ata_sff_port_intr) #9, !dbg !9127
  ret i32 %call, !dbg !9128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__ata_sff_interrupt(i32 %irq, i8* %dev_instance, i32 (%struct.ata_port*, %struct.ata_queued_cmd*)* %port_intr) #1 !dbg !9129 {
entry:
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !7100, metadata !DIExpression()), !dbg !9133
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7107, metadata !DIExpression()), !dbg !9135
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7109, metadata !DIExpression()), !dbg !9136
  %irq.addr = alloca i32, align 4
  %dev_instance.addr = alloca i8*, align 8
  %port_intr.addr = alloca i32 (%struct.ata_port*, %struct.ata_queued_cmd*)*, align 8
  %host = alloca %struct.ata_host*, align 8
  %retried = alloca i8, align 1
  %i = alloca i32, align 4
  %handled = alloca i32, align 4
  %idle = alloca i32, align 4
  %polling = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %retry34 = alloca i8, align 1
  %ap40 = alloca %struct.ata_port*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9143, metadata !DIExpression()), !dbg !9144
  store i8* %dev_instance, i8** %dev_instance.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_instance.addr, metadata !9145, metadata !DIExpression()), !dbg !9146
  store i32 (%struct.ata_port*, %struct.ata_queued_cmd*)* %port_intr, i32 (%struct.ata_port*, %struct.ata_queued_cmd*)** %port_intr.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_port*, %struct.ata_queued_cmd*)** %port_intr.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !9149, metadata !DIExpression()), !dbg !9150
  %0 = load i8*, i8** %dev_instance.addr, align 8, !dbg !9151
  %1 = bitcast i8* %0 to %struct.ata_host*, !dbg !9151
  store %struct.ata_host* %1, %struct.ata_host** %host, align 8, !dbg !9150
  call void @llvm.dbg.declare(metadata i8* %retried, metadata !9152, metadata !DIExpression()), !dbg !9153
  store i8 0, i8* %retried, align 1, !dbg !9153
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !9156, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.declare(metadata i32* %idle, metadata !9158, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.declare(metadata i32* %polling, metadata !9160, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9162, metadata !DIExpression()), !dbg !9163
  br label %do.body, !dbg !9164

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9165

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9166, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9169, metadata !DIExpression()), !dbg !9168
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9168
  %conv = zext i1 %cmp to i32, !dbg !9168
  store i32 1, i32* %tmp, align 4, !dbg !9168
  %2 = load i32, i32* %tmp, align 4, !dbg !9168
  br label %do.body2, !dbg !9170

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9171

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9172

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9174, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9178, metadata !DIExpression()), !dbg !9177
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9177
  %conv8 = zext i1 %cmp7 to i32, !dbg !9177
  store i32 1, i32* %tmp9, align 4, !dbg !9177
  %3 = load i32, i32* %tmp9, align 4, !dbg !9177
  %call = call i64 @arch_local_irq_save() #9, !dbg !9179
  store i64 %call, i64* %flags, align 8, !dbg !9179
  br label %do.end, !dbg !9179

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9172

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9171

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9180, !srcloc !9181
  br label %do.body12, !dbg !9180

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9182
  %lock = getelementptr inbounds %struct.ata_host, %struct.ata_host* %4, i32 0, i32 0, !dbg !9182
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9183
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9184
  %rlock.i = bitcast %union.anon.8* %6 to %struct.raw_spinlock*, !dbg !9184
  br label %do.end14, !dbg !9182

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9180

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9171

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9170

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9165

do.end18:                                         ; preds = %do.end17
  br label %retry, !dbg !9165

retry:                                            ; preds = %if.then85, %do.end18
  call void @llvm.dbg.label(metadata !9185), !dbg !9186
  store i32 0, i32* %polling, align 4, !dbg !9187
  store i32 0, i32* %idle, align 4, !dbg !9188
  store i32 0, i32* %handled, align 4, !dbg !9189
  store i32 0, i32* %i, align 4, !dbg !9190
  br label %for.cond, !dbg !9192

for.cond:                                         ; preds = %for.inc, %retry
  %7 = load i32, i32* %i, align 4, !dbg !9193
  %8 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9195
  %n_ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %8, i32 0, i32 3, !dbg !9196
  %9 = load i32, i32* %n_ports, align 8, !dbg !9196
  %cmp19 = icmp ult i32 %7, %9, !dbg !9197
  br i1 %cmp19, label %for.body, label %for.end, !dbg !9198

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9199, metadata !DIExpression()), !dbg !9201
  %10 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9202
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %10, i32 0, i32 12, !dbg !9203
  %11 = load i32, i32* %i, align 4, !dbg !9204
  %idxprom = zext i32 %11 to i64, !dbg !9202
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !9202
  %12 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !9202
  store %struct.ata_port* %12, %struct.ata_port** %ap, align 8, !dbg !9201
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !9205, metadata !DIExpression()), !dbg !9206
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9207
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9208
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 25, !dbg !9209
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 3, !dbg !9210
  %15 = load i32, i32* %active_tag, align 8, !dbg !9210
  %call21 = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %13, i32 %15) #9, !dbg !9211
  store %struct.ata_queued_cmd* %call21, %struct.ata_queued_cmd** %qc, align 8, !dbg !9212
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9213
  %tobool = icmp ne %struct.ata_queued_cmd* %16, null, !dbg !9213
  br i1 %tobool, label %if.then, label %if.else27, !dbg !9215

if.then:                                          ; preds = %for.body
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9216
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %17, i32 0, i32 4, !dbg !9219
  %flags22 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !9220
  %18 = load i64, i64* %flags22, align 8, !dbg !9220
  %and = and i64 %18, 64, !dbg !9221
  %tobool23 = icmp ne i64 %and, 0, !dbg !9221
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !9222

if.then24:                                        ; preds = %if.then
  %19 = load i32 (%struct.ata_port*, %struct.ata_queued_cmd*)*, i32 (%struct.ata_port*, %struct.ata_queued_cmd*)** %port_intr.addr, align 8, !dbg !9223
  %20 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9224
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9225
  %call25 = call i32 %19(%struct.ata_port* %20, %struct.ata_queued_cmd* %21) #9, !dbg !9223
  %22 = load i32, i32* %handled, align 4, !dbg !9226
  %or = or i32 %22, %call25, !dbg !9226
  store i32 %or, i32* %handled, align 4, !dbg !9226
  br label %if.end, !dbg !9227

if.else:                                          ; preds = %if.then
  %23 = load i32, i32* %i, align 4, !dbg !9228
  %shl = shl i32 1, %23, !dbg !9229
  %24 = load i32, i32* %polling, align 4, !dbg !9230
  %or26 = or i32 %24, %shl, !dbg !9230
  store i32 %or26, i32* %polling, align 4, !dbg !9230
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then24
  br label %if.end30, !dbg !9231

if.else27:                                        ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !9232
  %shl28 = shl i32 1, %25, !dbg !9233
  %26 = load i32, i32* %idle, align 4, !dbg !9234
  %or29 = or i32 %26, %shl28, !dbg !9234
  store i32 %or29, i32* %idle, align 4, !dbg !9234
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.end
  br label %for.inc, !dbg !9235

for.inc:                                          ; preds = %if.end30
  %27 = load i32, i32* %i, align 4, !dbg !9236
  %inc = add i32 %27, 1, !dbg !9236
  store i32 %inc, i32* %i, align 4, !dbg !9236
  br label %for.cond, !dbg !9237, !llvm.loop !9238

for.end:                                          ; preds = %for.cond
  %28 = load i32, i32* %handled, align 4, !dbg !9240
  %tobool31 = icmp ne i32 %28, 0, !dbg !9240
  br i1 %tobool31, label %if.end87, label %land.lhs.true, !dbg !9242

land.lhs.true:                                    ; preds = %for.end
  %29 = load i8, i8* %retried, align 1, !dbg !9243
  %tobool32 = trunc i8 %29 to i1, !dbg !9243
  br i1 %tobool32, label %if.end87, label %if.then33, !dbg !9244

if.then33:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %retry34, metadata !9245, metadata !DIExpression()), !dbg !9247
  store i8 0, i8* %retry34, align 1, !dbg !9247
  store i32 0, i32* %i, align 4, !dbg !9248
  br label %for.cond35, !dbg !9250

for.cond35:                                       ; preds = %for.inc81, %if.then33
  %30 = load i32, i32* %i, align 4, !dbg !9251
  %31 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9253
  %n_ports36 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %31, i32 0, i32 3, !dbg !9254
  %32 = load i32, i32* %n_ports36, align 8, !dbg !9254
  %cmp37 = icmp ult i32 %30, %32, !dbg !9255
  br i1 %cmp37, label %for.body39, label %for.end83, !dbg !9256

for.body39:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap40, metadata !9257, metadata !DIExpression()), !dbg !9259
  %33 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9260
  %ports41 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %33, i32 0, i32 12, !dbg !9261
  %34 = load i32, i32* %i, align 4, !dbg !9262
  %idxprom42 = zext i32 %34 to i64, !dbg !9260
  %arrayidx43 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports41, i64 0, i64 %idxprom42, !dbg !9260
  %35 = load %struct.ata_port*, %struct.ata_port** %arrayidx43, align 8, !dbg !9260
  store %struct.ata_port* %35, %struct.ata_port** %ap40, align 8, !dbg !9259
  %36 = load i32, i32* %polling, align 4, !dbg !9263
  %37 = load i32, i32* %i, align 4, !dbg !9265
  %shl44 = shl i32 1, %37, !dbg !9266
  %and45 = and i32 %36, %shl44, !dbg !9267
  %tobool46 = icmp ne i32 %and45, 0, !dbg !9267
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9268

if.then47:                                        ; preds = %for.body39
  br label %for.inc81, !dbg !9269

if.end48:                                         ; preds = %for.body39
  %38 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9270
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 1, !dbg !9272
  %39 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9272
  %sff_irq_check = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %39, i32 0, i32 46, !dbg !9273
  %40 = load i1 (%struct.ata_port*)*, i1 (%struct.ata_port*)** %sff_irq_check, align 8, !dbg !9273
  %tobool49 = icmp ne i1 (%struct.ata_port*)* %40, null, !dbg !9270
  br i1 %tobool49, label %lor.lhs.false, label %if.then53, !dbg !9274

lor.lhs.false:                                    ; preds = %if.end48
  %41 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9275
  %ops50 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %41, i32 0, i32 1, !dbg !9276
  %42 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops50, align 8, !dbg !9276
  %sff_irq_check51 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %42, i32 0, i32 46, !dbg !9277
  %43 = load i1 (%struct.ata_port*)*, i1 (%struct.ata_port*)** %sff_irq_check51, align 8, !dbg !9277
  %44 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9278
  %call52 = call zeroext i1 %43(%struct.ata_port* %44) #9, !dbg !9275
  br i1 %call52, label %if.end54, label %if.then53, !dbg !9279

if.then53:                                        ; preds = %lor.lhs.false, %if.end48
  br label %for.inc81, !dbg !9280

if.end54:                                         ; preds = %lor.lhs.false
  %45 = load i32, i32* %idle, align 4, !dbg !9281
  %46 = load i32, i32* %i, align 4, !dbg !9283
  %shl55 = shl i32 1, %46, !dbg !9284
  %and56 = and i32 %45, %shl55, !dbg !9285
  %tobool57 = icmp ne i32 %and56, 0, !dbg !9285
  br i1 %tobool57, label %if.then58, label %if.else67, !dbg !9286

if.then58:                                        ; preds = %if.end54
  %47 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9287
  %ops59 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %47, i32 0, i32 1, !dbg !9289
  %48 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops59, align 8, !dbg !9289
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %48, i32 0, i32 39, !dbg !9290
  %49 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !9290
  %50 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9291
  %call60 = call zeroext i8 %49(%struct.ata_port* %50) #9, !dbg !9287
  %51 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9292
  %ops61 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %51, i32 0, i32 1, !dbg !9294
  %52 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops61, align 8, !dbg !9294
  %sff_irq_clear = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %52, i32 0, i32 47, !dbg !9295
  %53 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear, align 8, !dbg !9295
  %tobool62 = icmp ne void (%struct.ata_port*)* %53, null, !dbg !9292
  br i1 %tobool62, label %if.then63, label %if.end66, !dbg !9296

if.then63:                                        ; preds = %if.then58
  %54 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9297
  %ops64 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %54, i32 0, i32 1, !dbg !9298
  %55 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops64, align 8, !dbg !9298
  %sff_irq_clear65 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %55, i32 0, i32 47, !dbg !9299
  %56 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear65, align 8, !dbg !9299
  %57 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9300
  call void %56(%struct.ata_port* %57) #9, !dbg !9297
  br label %if.end66, !dbg !9297

if.end66:                                         ; preds = %if.then63, %if.then58
  br label %if.end80, !dbg !9301

if.else67:                                        ; preds = %if.end54
  %58 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9302
  %ops68 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %58, i32 0, i32 1, !dbg !9305
  %59 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops68, align 8, !dbg !9305
  %sff_check_status69 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %59, i32 0, i32 39, !dbg !9306
  %60 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status69, align 8, !dbg !9306
  %61 = load %struct.ata_port*, %struct.ata_port** %ap40, align 8, !dbg !9307
  %call70 = call zeroext i8 %60(%struct.ata_port* %61) #9, !dbg !9302
  %conv71 = zext i8 %call70 to i32, !dbg !9302
  %and72 = and i32 %conv71, 128, !dbg !9308
  %tobool73 = icmp ne i32 %and72, 0, !dbg !9308
  br i1 %tobool73, label %if.end79, label %if.then74, !dbg !9309

if.then74:                                        ; preds = %if.else67
  %62 = load i8, i8* %retry34, align 1, !dbg !9310
  %tobool75 = trunc i8 %62 to i1, !dbg !9310
  %conv76 = zext i1 %tobool75 to i32, !dbg !9310
  %or77 = or i32 %conv76, 1, !dbg !9310
  %tobool78 = icmp ne i32 %or77, 0, !dbg !9310
  %frombool = zext i1 %tobool78 to i8, !dbg !9310
  store i8 %frombool, i8* %retry34, align 1, !dbg !9310
  br label %if.end79, !dbg !9311

if.end79:                                         ; preds = %if.then74, %if.else67
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end66
  br label %for.inc81, !dbg !9312

for.inc81:                                        ; preds = %if.end80, %if.then53, %if.then47
  %63 = load i32, i32* %i, align 4, !dbg !9313
  %inc82 = add i32 %63, 1, !dbg !9313
  store i32 %inc82, i32* %i, align 4, !dbg !9313
  br label %for.cond35, !dbg !9314, !llvm.loop !9315

for.end83:                                        ; preds = %for.cond35
  %64 = load i8, i8* %retry34, align 1, !dbg !9317
  %tobool84 = trunc i8 %64 to i1, !dbg !9317
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !9319

if.then85:                                        ; preds = %for.end83
  store i8 1, i8* %retried, align 1, !dbg !9320
  br label %retry, !dbg !9322

if.end86:                                         ; preds = %for.end83
  br label %if.end87, !dbg !9323

if.end87:                                         ; preds = %if.end86, %land.lhs.true, %for.end
  %65 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !9324
  %lock88 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %65, i32 0, i32 0, !dbg !9325
  %66 = load i64, i64* %flags, align 8, !dbg !9326
  store %struct.spinlock* %lock88, %struct.spinlock** %lock.addr.i90, align 8
  store i64 %66, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1099, metadata !7185, metadata !DIExpression()) #8, !dbg !9327
  call void @llvm.dbg.declare(metadata !1099, metadata !7189, metadata !DIExpression()) #8, !dbg !9327
  store i32 1, i32* %tmp.i, align 4, !dbg !9327
  %67 = load i32, i32* %tmp.i, align 4, !dbg !9327
  call void @llvm.dbg.declare(metadata !1099, metadata !7190, metadata !DIExpression()) #8, !dbg !9328
  call void @llvm.dbg.declare(metadata !1099, metadata !7196, metadata !DIExpression()) #8, !dbg !9328
  store i32 1, i32* %tmp8.i, align 4, !dbg !9328
  %68 = load i32, i32* %tmp8.i, align 4, !dbg !9328
  %69 = load i64, i64* %flags.addr.i, align 8, !dbg !9329
  call void @arch_local_irq_restore(i64 %69) #10, !dbg !9329
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9330, !srcloc !7200
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !9331
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !9331
  %rlock.i91 = bitcast %union.anon.8* %71 to %struct.raw_spinlock*, !dbg !9331
  %72 = load i32, i32* %handled, align 4, !dbg !9332
  %tobool89 = icmp ne i32 %72, 0, !dbg !9332
  %73 = zext i1 %tobool89 to i64, !dbg !9332
  %cond = select i1 %tobool89, i32 1, i32 0, !dbg !9332
  ret i32 %cond, !dbg !9333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %ap, i32 %tag) #1 !dbg !9334 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %tag.addr = alloca i32, align 4
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9337, metadata !DIExpression()), !dbg !9338
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !9339, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !9341, metadata !DIExpression()), !dbg !9342
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9343
  %1 = load i32, i32* %tag.addr, align 4, !dbg !9344
  %call = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %0, i32 %1) #9, !dbg !9345
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !9342
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9346
  %tobool = icmp ne %struct.ata_queued_cmd* %2, null, !dbg !9346
  %lnot = xor i1 %tobool, true, !dbg !9346
  %lnot1 = xor i1 %lnot, true, !dbg !9346
  %lnot2 = xor i1 %lnot1, true, !dbg !9346
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9346
  %conv = sext i32 %lnot.ext to i64, !dbg !9346
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9346
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !9348

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9349
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !9350
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9350
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 22, !dbg !9351
  %5 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9351
  %tobool4 = icmp ne void (%struct.ata_port*)* %5, null, !dbg !9349
  br i1 %tobool4, label %if.end, label %if.then, !dbg !9352

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9353
  store %struct.ata_queued_cmd* %6, %struct.ata_queued_cmd** %retval, align 8, !dbg !9354
  br label %return, !dbg !9354

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9355
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 6, !dbg !9357
  %8 = load i64, i64* %flags, align 8, !dbg !9357
  %and = and i64 %8, 65537, !dbg !9358
  %cmp = icmp eq i64 %and, 1, !dbg !9359
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !9360

if.then6:                                         ; preds = %if.end
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9361
  store %struct.ata_queued_cmd* %9, %struct.ata_queued_cmd** %retval, align 8, !dbg !9362
  br label %return, !dbg !9362

if.end7:                                          ; preds = %if.end
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !9363
  br label %return, !dbg !9363

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !9364
  ret %struct.ata_queued_cmd* %10, !dbg !9364
}

; Function Attrs: noredzone
declare dso_local i32 @ata_std_prereset(%struct.ata_link*, i64) #0

; Function Attrs: noredzone
declare dso_local zeroext i1 @ata_link_offline(%struct.ata_link*) #0

; Function Attrs: noredzone
declare dso_local void @ata_link_printk(%struct.ata_link*, i8*, i8*, ...) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_dev_classify(%struct.ata_device* %dev, i32 %present, i8* %r_err) #1 !dbg !9365 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %present.addr = alloca i32, align 4
  %r_err.addr = alloca i8*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %tf = alloca %struct.ata_taskfile, align 8
  %class = alloca i32, align 4
  %err = alloca i8, align 1
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9368, metadata !DIExpression()), !dbg !9369
  store i32 %present, i32* %present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %present.addr, metadata !9370, metadata !DIExpression()), !dbg !9371
  store i8* %r_err, i8** %r_err.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_err.addr, metadata !9372, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9374, metadata !DIExpression()), !dbg !9375
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9376
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !9377
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !9377
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !9378
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9378
  store %struct.ata_port* %2, %struct.ata_port** %ap, align 8, !dbg !9375
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.declare(metadata i32* %class, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.declare(metadata i8* %err, metadata !9383, metadata !DIExpression()), !dbg !9384
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9385
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !9386
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9386
  %sff_dev_select = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 37, !dbg !9387
  %5 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select, align 8, !dbg !9387
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9388
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9389
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 1, !dbg !9390
  %8 = load i32, i32* %devno, align 8, !dbg !9390
  call void %5(%struct.ata_port* %6, i32 %8) #9, !dbg !9385
  %9 = bitcast %struct.ata_taskfile* %tf to i8*, !dbg !9391
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false), !dbg !9391
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9392
  %ops2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 1, !dbg !9393
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops2, align 8, !dbg !9393
  %sff_tf_read = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %11, i32 0, i32 42, !dbg !9394
  %12 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_read, align 8, !dbg !9394
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9395
  call void %12(%struct.ata_port* %13, %struct.ata_taskfile* %tf) #9, !dbg !9392
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !9396
  %14 = load i8, i8* %feature, align 1, !dbg !9396
  store i8 %14, i8* %err, align 1, !dbg !9397
  %15 = load i8*, i8** %r_err.addr, align 8, !dbg !9398
  %tobool = icmp ne i8* %15, null, !dbg !9398
  br i1 %tobool, label %if.then, label %if.end, !dbg !9400

if.then:                                          ; preds = %entry
  %16 = load i8, i8* %err, align 1, !dbg !9401
  %17 = load i8*, i8** %r_err.addr, align 8, !dbg !9402
  store i8 %16, i8* %17, align 1, !dbg !9403
  br label %if.end, !dbg !9404

if.end:                                           ; preds = %if.then, %entry
  %18 = load i8, i8* %err, align 1, !dbg !9405
  %conv = zext i8 %18 to i32, !dbg !9405
  %cmp = icmp eq i32 %conv, 0, !dbg !9407
  br i1 %cmp, label %if.then4, label %if.else, !dbg !9408

if.then4:                                         ; preds = %if.end
  %19 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9409
  %horkage = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 2, !dbg !9410
  %20 = load i32, i32* %horkage, align 4, !dbg !9411
  %or = or i32 %20, 1, !dbg !9411
  store i32 %or, i32* %horkage, align 4, !dbg !9411
  br label %if.end20, !dbg !9409

if.else:                                          ; preds = %if.end
  %21 = load i8, i8* %err, align 1, !dbg !9412
  %conv5 = zext i8 %21 to i32, !dbg !9412
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !9414
  br i1 %cmp6, label %if.then8, label %if.else9, !dbg !9415

if.then8:                                         ; preds = %if.else
  br label %if.end19, !dbg !9415

if.else9:                                         ; preds = %if.else
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9416
  %devno10 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 1, !dbg !9418
  %23 = load i32, i32* %devno10, align 8, !dbg !9418
  %cmp11 = icmp eq i32 %23, 0, !dbg !9419
  br i1 %cmp11, label %land.lhs.true, label %if.else17, !dbg !9420

land.lhs.true:                                    ; preds = %if.else9
  %24 = load i8, i8* %err, align 1, !dbg !9421
  %conv13 = zext i8 %24 to i32, !dbg !9421
  %cmp14 = icmp eq i32 %conv13, 129, !dbg !9422
  br i1 %cmp14, label %if.then16, label %if.else17, !dbg !9423

if.then16:                                        ; preds = %land.lhs.true
  br label %if.end18, !dbg !9423

if.else17:                                        ; preds = %land.lhs.true, %if.else9
  store i32 11, i32* %retval, align 4, !dbg !9424
  br label %return, !dbg !9424

if.end18:                                         ; preds = %if.then16
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then8
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then4
  %call = call i32 @ata_dev_classify(%struct.ata_taskfile* %tf) #9, !dbg !9425
  store i32 %call, i32* %class, align 4, !dbg !9426
  %25 = load i32, i32* %class, align 4, !dbg !9427
  %cmp21 = icmp eq i32 %25, 0, !dbg !9429
  br i1 %cmp21, label %if.then23, label %if.else31, !dbg !9430

if.then23:                                        ; preds = %if.end20
  %26 = load i32, i32* %present.addr, align 4, !dbg !9431
  %tobool24 = icmp ne i32 %26, 0, !dbg !9431
  br i1 %tobool24, label %land.lhs.true25, label %if.else29, !dbg !9434

land.lhs.true25:                                  ; preds = %if.then23
  %27 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9435
  %horkage26 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %27, i32 0, i32 2, !dbg !9436
  %28 = load i32, i32* %horkage26, align 4, !dbg !9436
  %and = and i32 %28, 1, !dbg !9437
  %tobool27 = icmp ne i32 %and, 0, !dbg !9437
  br i1 %tobool27, label %if.then28, label %if.else29, !dbg !9438

if.then28:                                        ; preds = %land.lhs.true25
  store i32 1, i32* %class, align 4, !dbg !9439
  br label %if.end30, !dbg !9440

if.else29:                                        ; preds = %land.lhs.true25, %if.then23
  store i32 11, i32* %class, align 4, !dbg !9441
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then28
  br label %if.end42, !dbg !9442

if.else31:                                        ; preds = %if.end20
  %29 = load i32, i32* %class, align 4, !dbg !9443
  %cmp32 = icmp eq i32 %29, 1, !dbg !9445
  br i1 %cmp32, label %land.lhs.true34, label %if.end41, !dbg !9446

land.lhs.true34:                                  ; preds = %if.else31
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9447
  %ops35 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 1, !dbg !9448
  %31 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops35, align 8, !dbg !9448
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %31, i32 0, i32 39, !dbg !9449
  %32 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !9449
  %33 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9450
  %call36 = call zeroext i8 %32(%struct.ata_port* %33) #9, !dbg !9447
  %conv37 = zext i8 %call36 to i32, !dbg !9447
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !9451
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !9452

if.then40:                                        ; preds = %land.lhs.true34
  store i32 11, i32* %class, align 4, !dbg !9453
  br label %if.end41, !dbg !9454

if.end41:                                         ; preds = %if.then40, %land.lhs.true34, %if.else31
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end30
  %34 = load i32, i32* %class, align 4, !dbg !9455
  store i32 %34, i32* %retval, align 4, !dbg !9456
  br label %return, !dbg !9456

return:                                           ; preds = %if.end42, %if.else17
  %35 = load i32, i32* %retval, align 4, !dbg !9457
  ret i32 %35, !dbg !9457
}

; Function Attrs: noredzone
declare dso_local i32 @ata_dev_classify(%struct.ata_taskfile*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_wait_after_reset(%struct.ata_link* %link, i32 %devmask, i64 %deadline) #1 !dbg !9458 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %devmask.addr = alloca i32, align 4
  %deadline.addr = alloca i64, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ioaddr = alloca %struct.ata_ioports*, align 8
  %dev0 = alloca i32, align 4
  %dev1 = alloca i32, align 4
  %rc = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %nsect = alloca i8, align 1
  %lbal = alloca i8, align 1
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9461, metadata !DIExpression()), !dbg !9462
  store i32 %devmask, i32* %devmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devmask.addr, metadata !9463, metadata !DIExpression()), !dbg !9464
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !9465, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9467, metadata !DIExpression()), !dbg !9468
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9469
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !9470
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9470
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9468
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %ioaddr, metadata !9471, metadata !DIExpression()), !dbg !9472
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9473
  %ioaddr2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 8, !dbg !9474
  store %struct.ata_ioports* %ioaddr2, %struct.ata_ioports** %ioaddr, align 8, !dbg !9472
  call void @llvm.dbg.declare(metadata i32* %dev0, metadata !9475, metadata !DIExpression()), !dbg !9476
  %3 = load i32, i32* %devmask.addr, align 4, !dbg !9477
  %and = and i32 %3, 1, !dbg !9478
  store i32 %and, i32* %dev0, align 4, !dbg !9476
  call void @llvm.dbg.declare(metadata i32* %dev1, metadata !9479, metadata !DIExpression()), !dbg !9480
  %4 = load i32, i32* %devmask.addr, align 4, !dbg !9481
  %and3 = and i32 %4, 2, !dbg !9482
  store i32 %and3, i32* %dev1, align 4, !dbg !9480
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9483, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9485, metadata !DIExpression()), !dbg !9486
  store i32 0, i32* %ret, align 4, !dbg !9486
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9487
  call void @ata_msleep(%struct.ata_port* %5, i32 150) #9, !dbg !9488
  %6 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9489
  %7 = load i64, i64* %deadline.addr, align 8, !dbg !9490
  %call = call i32 @ata_sff_wait_ready(%struct.ata_link* %6, i64 %7) #9, !dbg !9491
  store i32 %call, i32* %rc, align 4, !dbg !9492
  %8 = load i32, i32* %rc, align 4, !dbg !9493
  %tobool = icmp ne i32 %8, 0, !dbg !9493
  br i1 %tobool, label %if.then, label %if.end, !dbg !9495

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %rc, align 4, !dbg !9496
  store i32 %9, i32* %retval, align 4, !dbg !9497
  br label %return, !dbg !9497

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %dev1, align 4, !dbg !9498
  %tobool4 = icmp ne i32 %10, 0, !dbg !9498
  br i1 %tobool4, label %if.then5, label %if.end25, !dbg !9500

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9501, metadata !DIExpression()), !dbg !9503
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9504
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 1, !dbg !9505
  %12 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9505
  %sff_dev_select = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %12, i32 0, i32 37, !dbg !9506
  %13 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select, align 8, !dbg !9506
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9507
  call void %13(%struct.ata_port* %14, i32 1) #9, !dbg !9504
  store i32 0, i32* %i, align 4, !dbg !9508
  br label %for.cond, !dbg !9510

for.cond:                                         ; preds = %for.inc, %if.then5
  %15 = load i32, i32* %i, align 4, !dbg !9511
  %cmp = icmp slt i32 %15, 2, !dbg !9513
  br i1 %cmp, label %for.body, label %for.end, !dbg !9514

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %nsect, metadata !9515, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.declare(metadata i8* %lbal, metadata !9518, metadata !DIExpression()), !dbg !9519
  %16 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9520
  %nsect_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %16, i32 0, i32 4, !dbg !9521
  %17 = load i8*, i8** %nsect_addr, align 8, !dbg !9521
  %call6 = call i32 @ioread8(i8* %17) #9, !dbg !9522
  %conv = trunc i32 %call6 to i8, !dbg !9522
  store i8 %conv, i8* %nsect, align 1, !dbg !9523
  %18 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9524
  %lbal_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %18, i32 0, i32 5, !dbg !9525
  %19 = load i8*, i8** %lbal_addr, align 8, !dbg !9525
  %call7 = call i32 @ioread8(i8* %19) #9, !dbg !9526
  %conv8 = trunc i32 %call7 to i8, !dbg !9526
  store i8 %conv8, i8* %lbal, align 1, !dbg !9527
  %20 = load i8, i8* %nsect, align 1, !dbg !9528
  %conv9 = zext i8 %20 to i32, !dbg !9528
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !9530
  br i1 %cmp10, label %land.lhs.true, label %if.end16, !dbg !9531

land.lhs.true:                                    ; preds = %for.body
  %21 = load i8, i8* %lbal, align 1, !dbg !9532
  %conv12 = zext i8 %21 to i32, !dbg !9532
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !9533
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !9534

if.then15:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !9535

if.end16:                                         ; preds = %land.lhs.true, %for.body
  %22 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9536
  call void @ata_msleep(%struct.ata_port* %22, i32 50) #9, !dbg !9537
  br label %for.inc, !dbg !9538

for.inc:                                          ; preds = %if.end16
  %23 = load i32, i32* %i, align 4, !dbg !9539
  %inc = add i32 %23, 1, !dbg !9539
  store i32 %inc, i32* %i, align 4, !dbg !9539
  br label %for.cond, !dbg !9540, !llvm.loop !9541

for.end:                                          ; preds = %if.then15, %for.cond
  %24 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9543
  %25 = load i64, i64* %deadline.addr, align 8, !dbg !9544
  %call17 = call i32 @ata_sff_wait_ready(%struct.ata_link* %24, i64 %25) #9, !dbg !9545
  store i32 %call17, i32* %rc, align 4, !dbg !9546
  %26 = load i32, i32* %rc, align 4, !dbg !9547
  %tobool18 = icmp ne i32 %26, 0, !dbg !9547
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !9549

if.then19:                                        ; preds = %for.end
  %27 = load i32, i32* %rc, align 4, !dbg !9550
  %cmp20 = icmp ne i32 %27, -19, !dbg !9553
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !9554

if.then22:                                        ; preds = %if.then19
  %28 = load i32, i32* %rc, align 4, !dbg !9555
  store i32 %28, i32* %retval, align 4, !dbg !9556
  br label %return, !dbg !9556

if.end23:                                         ; preds = %if.then19
  %29 = load i32, i32* %rc, align 4, !dbg !9557
  store i32 %29, i32* %ret, align 4, !dbg !9558
  br label %if.end24, !dbg !9559

if.end24:                                         ; preds = %if.end23, %for.end
  br label %if.end25, !dbg !9560

if.end25:                                         ; preds = %if.end24, %if.end
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9561
  %ops26 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 1, !dbg !9562
  %31 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops26, align 8, !dbg !9562
  %sff_dev_select27 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %31, i32 0, i32 37, !dbg !9563
  %32 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select27, align 8, !dbg !9563
  %33 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9564
  call void %32(%struct.ata_port* %33, i32 0) #9, !dbg !9561
  %34 = load i32, i32* %dev1, align 4, !dbg !9565
  %tobool28 = icmp ne i32 %34, 0, !dbg !9565
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !9567

if.then29:                                        ; preds = %if.end25
  %35 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9568
  %ops30 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %35, i32 0, i32 1, !dbg !9569
  %36 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops30, align 8, !dbg !9569
  %sff_dev_select31 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %36, i32 0, i32 37, !dbg !9570
  %37 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select31, align 8, !dbg !9570
  %38 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9571
  call void %37(%struct.ata_port* %38, i32 1) #9, !dbg !9568
  br label %if.end32, !dbg !9568

if.end32:                                         ; preds = %if.then29, %if.end25
  %39 = load i32, i32* %dev0, align 4, !dbg !9572
  %tobool33 = icmp ne i32 %39, 0, !dbg !9572
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !9574

if.then34:                                        ; preds = %if.end32
  %40 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9575
  %ops35 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %40, i32 0, i32 1, !dbg !9576
  %41 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops35, align 8, !dbg !9576
  %sff_dev_select36 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %41, i32 0, i32 37, !dbg !9577
  %42 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select36, align 8, !dbg !9577
  %43 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9578
  call void %42(%struct.ata_port* %43, i32 0) #9, !dbg !9575
  br label %if.end37, !dbg !9575

if.end37:                                         ; preds = %if.then34, %if.end32
  %44 = load i32, i32* %ret, align 4, !dbg !9579
  store i32 %44, i32* %retval, align 4, !dbg !9580
  br label %return, !dbg !9580

return:                                           ; preds = %if.end37, %if.then22, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !9581
  ret i32 %45, !dbg !9581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_devchk(%struct.ata_port* %ap, i32 %device) #1 !dbg !9582 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %device.addr = alloca i32, align 4
  %ioaddr = alloca %struct.ata_ioports*, align 8
  %nsect = alloca i8, align 1
  %lbal = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9585, metadata !DIExpression()), !dbg !9586
  store i32 %device, i32* %device.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %device.addr, metadata !9587, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %ioaddr, metadata !9589, metadata !DIExpression()), !dbg !9590
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9591
  %ioaddr1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !9592
  store %struct.ata_ioports* %ioaddr1, %struct.ata_ioports** %ioaddr, align 8, !dbg !9590
  call void @llvm.dbg.declare(metadata i8* %nsect, metadata !9593, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.declare(metadata i8* %lbal, metadata !9595, metadata !DIExpression()), !dbg !9596
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9597
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 1, !dbg !9598
  %2 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9598
  %sff_dev_select = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %2, i32 0, i32 37, !dbg !9599
  %3 = load void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i32)** %sff_dev_select, align 8, !dbg !9599
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9600
  %5 = load i32, i32* %device.addr, align 4, !dbg !9601
  call void %3(%struct.ata_port* %4, i32 %5) #9, !dbg !9597
  %6 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9602
  %nsect_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %6, i32 0, i32 4, !dbg !9603
  %7 = load i8*, i8** %nsect_addr, align 8, !dbg !9603
  call void @iowrite8(i8 zeroext 85, i8* %7) #9, !dbg !9604
  %8 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9605
  %lbal_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %8, i32 0, i32 5, !dbg !9606
  %9 = load i8*, i8** %lbal_addr, align 8, !dbg !9606
  call void @iowrite8(i8 zeroext -86, i8* %9) #9, !dbg !9607
  %10 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9608
  %nsect_addr2 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %10, i32 0, i32 4, !dbg !9609
  %11 = load i8*, i8** %nsect_addr2, align 8, !dbg !9609
  call void @iowrite8(i8 zeroext -86, i8* %11) #9, !dbg !9610
  %12 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9611
  %lbal_addr3 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %12, i32 0, i32 5, !dbg !9612
  %13 = load i8*, i8** %lbal_addr3, align 8, !dbg !9612
  call void @iowrite8(i8 zeroext 85, i8* %13) #9, !dbg !9613
  %14 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9614
  %nsect_addr4 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %14, i32 0, i32 4, !dbg !9615
  %15 = load i8*, i8** %nsect_addr4, align 8, !dbg !9615
  call void @iowrite8(i8 zeroext 85, i8* %15) #9, !dbg !9616
  %16 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9617
  %lbal_addr5 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %16, i32 0, i32 5, !dbg !9618
  %17 = load i8*, i8** %lbal_addr5, align 8, !dbg !9618
  call void @iowrite8(i8 zeroext -86, i8* %17) #9, !dbg !9619
  %18 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9620
  %nsect_addr6 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %18, i32 0, i32 4, !dbg !9621
  %19 = load i8*, i8** %nsect_addr6, align 8, !dbg !9621
  %call = call i32 @ioread8(i8* %19) #9, !dbg !9622
  %conv = trunc i32 %call to i8, !dbg !9622
  store i8 %conv, i8* %nsect, align 1, !dbg !9623
  %20 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9624
  %lbal_addr7 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %20, i32 0, i32 5, !dbg !9625
  %21 = load i8*, i8** %lbal_addr7, align 8, !dbg !9625
  %call8 = call i32 @ioread8(i8* %21) #9, !dbg !9626
  %conv9 = trunc i32 %call8 to i8, !dbg !9626
  store i8 %conv9, i8* %lbal, align 1, !dbg !9627
  %22 = load i8, i8* %nsect, align 1, !dbg !9628
  %conv10 = zext i8 %22 to i32, !dbg !9628
  %cmp = icmp eq i32 %conv10, 85, !dbg !9630
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9631

land.lhs.true:                                    ; preds = %entry
  %23 = load i8, i8* %lbal, align 1, !dbg !9632
  %conv12 = zext i8 %23 to i32, !dbg !9632
  %cmp13 = icmp eq i32 %conv12, 170, !dbg !9633
  br i1 %cmp13, label %if.then, label %if.end, !dbg !9634

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !9635
  br label %return, !dbg !9635

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !9636
  br label %return, !dbg !9636

return:                                           ; preds = %if.end, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !9637
  ret i32 %24, !dbg !9637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_bus_softreset(%struct.ata_port* %ap, i32 %devmask, i64 %deadline) #1 !dbg !9638 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %devmask.addr = alloca i32, align 4
  %deadline.addr = alloca i64, align 8
  %ioaddr = alloca %struct.ata_ioports*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9641, metadata !DIExpression()), !dbg !9642
  store i32 %devmask, i32* %devmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devmask.addr, metadata !9643, metadata !DIExpression()), !dbg !9644
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %ioaddr, metadata !9647, metadata !DIExpression()), !dbg !9648
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9649
  %ioaddr1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !9650
  store %struct.ata_ioports* %ioaddr1, %struct.ata_ioports** %ioaddr, align 8, !dbg !9648
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9651
  %ioaddr2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 8, !dbg !9653
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr2, i32 0, i32 12, !dbg !9654
  %2 = load i8*, i8** %ctl_addr, align 16, !dbg !9654
  %tobool = icmp ne i8* %2, null, !dbg !9651
  br i1 %tobool, label %if.then, label %if.end, !dbg !9655

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9656
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 9, !dbg !9658
  %4 = load i8, i8* %ctl, align 8, !dbg !9658
  %5 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9659
  %ctl_addr3 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %5, i32 0, i32 12, !dbg !9660
  %6 = load i8*, i8** %ctl_addr3, align 8, !dbg !9660
  call void @iowrite8(i8 zeroext %4, i8* %6) #9, !dbg !9661
  call void @__const_udelay(i64 85900) #9, !dbg !9662
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9667
  %ctl4 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 9, !dbg !9668
  %8 = load i8, i8* %ctl4, align 8, !dbg !9668
  %conv = zext i8 %8 to i32, !dbg !9667
  %or = or i32 %conv, 4, !dbg !9669
  %conv5 = trunc i32 %or to i8, !dbg !9667
  %9 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9670
  %ctl_addr6 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %9, i32 0, i32 12, !dbg !9671
  %10 = load i8*, i8** %ctl_addr6, align 8, !dbg !9671
  call void @iowrite8(i8 zeroext %conv5, i8* %10) #9, !dbg !9672
  call void @__const_udelay(i64 85900) #9, !dbg !9673
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9678
  %ctl7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 9, !dbg !9679
  %12 = load i8, i8* %ctl7, align 8, !dbg !9679
  %13 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr, align 8, !dbg !9680
  %ctl_addr8 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %13, i32 0, i32 12, !dbg !9681
  %14 = load i8*, i8** %ctl_addr8, align 8, !dbg !9681
  call void @iowrite8(i8 zeroext %12, i8* %14) #9, !dbg !9682
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9683
  %ctl9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 9, !dbg !9684
  %16 = load i8, i8* %ctl9, align 8, !dbg !9684
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9685
  %last_ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 10, !dbg !9686
  store i8 %16, i8* %last_ctl, align 1, !dbg !9687
  br label %if.end, !dbg !9688

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9689
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 25, !dbg !9690
  %19 = load i32, i32* %devmask.addr, align 4, !dbg !9691
  %20 = load i64, i64* %deadline.addr, align 8, !dbg !9692
  %call = call i32 @ata_sff_wait_after_reset(%struct.ata_link* %link, i32 %19, i64 %20) #9, !dbg !9693
  ret i32 %call, !dbg !9694
}

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_valid(%struct.ata_link*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64* @sata_ehc_deb_timing(%struct.ata_eh_context* %ehc) #1 !dbg !9695 {
entry:
  %retval = alloca i64*, align 8
  %ehc.addr = alloca %struct.ata_eh_context*, align 8
  store %struct.ata_eh_context* %ehc, %struct.ata_eh_context** %ehc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc.addr, metadata !9698, metadata !DIExpression()), !dbg !9699
  %0 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc.addr, align 8, !dbg !9700
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %0, i32 0, i32 0, !dbg !9702
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !9703
  %1 = load i32, i32* %flags, align 4, !dbg !9703
  %and = and i32 %1, 1, !dbg !9704
  %tobool = icmp ne i32 %and, 0, !dbg !9704
  br i1 %tobool, label %if.then, label %if.else, !dbg !9705

if.then:                                          ; preds = %entry
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @sata_deb_timing_hotplug, i64 0, i64 0), i64** %retval, align 8, !dbg !9706
  br label %return, !dbg !9706

if.else:                                          ; preds = %entry
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @sata_deb_timing_normal, i64 0, i64 0), i64** %retval, align 8, !dbg !9707
  br label %return, !dbg !9707

return:                                           ; preds = %if.else, %if.then
  %2 = load i64*, i64** %retval, align 8, !dbg !9708
  ret i64* %2, !dbg !9708
}

; Function Attrs: noredzone
declare dso_local i32 @sata_link_hardreset(%struct.ata_link*, i64*, i64, i8*, i32 (%struct.ata_link*)*) #0

; Function Attrs: noredzone
declare dso_local void @ata_std_postreset(%struct.ata_link*, i32*) #0

; Function Attrs: noredzone
declare dso_local i32 @ioread16(i8*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %ap, i32 %tag) #1 !dbg !9709 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %tag.addr = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  %0 = load i32, i32* %tag.addr, align 4, !dbg !9714
  %call = call zeroext i1 @ata_tag_valid(i32 %0) #9, !dbg !9716
  br i1 %call, label %if.then, label %if.end, !dbg !9717

if.then:                                          ; preds = %entry
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9718
  %qcmd = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 19, !dbg !9719
  %2 = load i32, i32* %tag.addr, align 4, !dbg !9720
  %idxprom = zext i32 %2 to i64, !dbg !9718
  %arrayidx = getelementptr [33 x %struct.ata_queued_cmd], [33 x %struct.ata_queued_cmd]* %qcmd, i64 0, i64 %idxprom, !dbg !9718
  store %struct.ata_queued_cmd* %arrayidx, %struct.ata_queued_cmd** %retval, align 8, !dbg !9721
  br label %return, !dbg !9721

if.end:                                           ; preds = %entry
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !9722
  br label %return, !dbg !9722

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !9723
  ret %struct.ata_queued_cmd* %3, !dbg !9723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #1 !dbg !9724 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !9728, metadata !DIExpression()), !dbg !9729
  %call = call i64 @arch_local_save_flags() #9, !dbg !9730
  store i64 %call, i64* %f, align 8, !dbg !9731
  call void @arch_local_irq_disable() #9, !dbg !9732
  %0 = load i64, i64* %f, align 8, !dbg !9733
  ret i64 %0, !dbg !9734
}

; Function Attrs: noredzone
declare dso_local i32 @sata_std_hardreset(%struct.ata_link*, i32*, i64) #0

; Function Attrs: noredzone
declare dso_local void @ata_do_eh(%struct.ata_port*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_std_ports(%struct.ata_ioports* %ioaddr) #1 !dbg !9735 {
entry:
  %ioaddr.addr = alloca %struct.ata_ioports*, align 8
  store %struct.ata_ioports* %ioaddr, %struct.ata_ioports** %ioaddr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ioports** %ioaddr.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  %0 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9740
  %cmd_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %0, i32 0, i32 0, !dbg !9741
  %1 = load i8*, i8** %cmd_addr, align 8, !dbg !9741
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !9742
  %2 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9743
  %data_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %2, i32 0, i32 1, !dbg !9744
  store i8* %add.ptr, i8** %data_addr, align 8, !dbg !9745
  %3 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9746
  %cmd_addr1 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %3, i32 0, i32 0, !dbg !9747
  %4 = load i8*, i8** %cmd_addr1, align 8, !dbg !9747
  %add.ptr2 = getelementptr i8, i8* %4, i64 1, !dbg !9748
  %5 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9749
  %error_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %5, i32 0, i32 2, !dbg !9750
  store i8* %add.ptr2, i8** %error_addr, align 8, !dbg !9751
  %6 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9752
  %cmd_addr3 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %6, i32 0, i32 0, !dbg !9753
  %7 = load i8*, i8** %cmd_addr3, align 8, !dbg !9753
  %add.ptr4 = getelementptr i8, i8* %7, i64 1, !dbg !9754
  %8 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9755
  %feature_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %8, i32 0, i32 3, !dbg !9756
  store i8* %add.ptr4, i8** %feature_addr, align 8, !dbg !9757
  %9 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9758
  %cmd_addr5 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %9, i32 0, i32 0, !dbg !9759
  %10 = load i8*, i8** %cmd_addr5, align 8, !dbg !9759
  %add.ptr6 = getelementptr i8, i8* %10, i64 2, !dbg !9760
  %11 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9761
  %nsect_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %11, i32 0, i32 4, !dbg !9762
  store i8* %add.ptr6, i8** %nsect_addr, align 8, !dbg !9763
  %12 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9764
  %cmd_addr7 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %12, i32 0, i32 0, !dbg !9765
  %13 = load i8*, i8** %cmd_addr7, align 8, !dbg !9765
  %add.ptr8 = getelementptr i8, i8* %13, i64 3, !dbg !9766
  %14 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9767
  %lbal_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %14, i32 0, i32 5, !dbg !9768
  store i8* %add.ptr8, i8** %lbal_addr, align 8, !dbg !9769
  %15 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9770
  %cmd_addr9 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %15, i32 0, i32 0, !dbg !9771
  %16 = load i8*, i8** %cmd_addr9, align 8, !dbg !9771
  %add.ptr10 = getelementptr i8, i8* %16, i64 4, !dbg !9772
  %17 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9773
  %lbam_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %17, i32 0, i32 6, !dbg !9774
  store i8* %add.ptr10, i8** %lbam_addr, align 8, !dbg !9775
  %18 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9776
  %cmd_addr11 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %18, i32 0, i32 0, !dbg !9777
  %19 = load i8*, i8** %cmd_addr11, align 8, !dbg !9777
  %add.ptr12 = getelementptr i8, i8* %19, i64 5, !dbg !9778
  %20 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9779
  %lbah_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %20, i32 0, i32 7, !dbg !9780
  store i8* %add.ptr12, i8** %lbah_addr, align 8, !dbg !9781
  %21 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9782
  %cmd_addr13 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %21, i32 0, i32 0, !dbg !9783
  %22 = load i8*, i8** %cmd_addr13, align 8, !dbg !9783
  %add.ptr14 = getelementptr i8, i8* %22, i64 6, !dbg !9784
  %23 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9785
  %device_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %23, i32 0, i32 8, !dbg !9786
  store i8* %add.ptr14, i8** %device_addr, align 8, !dbg !9787
  %24 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9788
  %cmd_addr15 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %24, i32 0, i32 0, !dbg !9789
  %25 = load i8*, i8** %cmd_addr15, align 8, !dbg !9789
  %add.ptr16 = getelementptr i8, i8* %25, i64 7, !dbg !9790
  %26 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9791
  %status_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %26, i32 0, i32 9, !dbg !9792
  store i8* %add.ptr16, i8** %status_addr, align 8, !dbg !9793
  %27 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9794
  %cmd_addr17 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %27, i32 0, i32 0, !dbg !9795
  %28 = load i8*, i8** %cmd_addr17, align 8, !dbg !9795
  %add.ptr18 = getelementptr i8, i8* %28, i64 7, !dbg !9796
  %29 = load %struct.ata_ioports*, %struct.ata_ioports** %ioaddr.addr, align 8, !dbg !9797
  %command_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %29, i32 0, i32 10, !dbg !9798
  store i8* %add.ptr18, i8** %command_addr, align 8, !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_sff_init_host(%struct.ata_host* %host) #1 !dbg !9801 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %gdev = alloca %struct.device*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %mask = alloca i32, align 4
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %base = alloca i32, align 4
  %iomap = alloca i8**, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !9804, metadata !DIExpression()), !dbg !9805
  call void @llvm.dbg.declare(metadata %struct.device** %gdev, metadata !9806, metadata !DIExpression()), !dbg !9807
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !9808
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !9809
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9809
  store %struct.device* %1, %struct.device** %gdev, align 8, !dbg !9807
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9810, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9812, metadata !DIExpression()), !dbg !9814
  %2 = load %struct.device*, %struct.device** %gdev, align 8, !dbg !9814
  %3 = bitcast %struct.device* %2 to i8*, !dbg !9814
  store i8* %3, i8** %__mptr, align 8, !dbg !9814
  br label %do.body, !dbg !9814

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9815

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9814
  %add.ptr = getelementptr i8, i8* %4, i64 -176, !dbg !9814
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !9814
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !9815
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !9814
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !9811
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !9817, metadata !DIExpression()), !dbg !9818
  store i32 0, i32* %mask, align 4, !dbg !9818
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9819, metadata !DIExpression()), !dbg !9820
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9821, metadata !DIExpression()), !dbg !9822
  store i32 0, i32* %i, align 4, !dbg !9823
  br label %for.cond, !dbg !9825

for.cond:                                         ; preds = %for.inc, %do.end
  %7 = load i32, i32* %i, align 4, !dbg !9826
  %cmp = icmp slt i32 %7, 2, !dbg !9828
  br i1 %cmp, label %for.body, label %for.end, !dbg !9829

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9830, metadata !DIExpression()), !dbg !9832
  %8 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !9833
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %8, i32 0, i32 12, !dbg !9834
  %9 = load i32, i32* %i, align 4, !dbg !9835
  %idxprom = sext i32 %9 to i64, !dbg !9833
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !9833
  %10 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !9833
  store %struct.ata_port* %10, %struct.ata_port** %ap, align 8, !dbg !9832
  call void @llvm.dbg.declare(metadata i32* %base, metadata !9836, metadata !DIExpression()), !dbg !9837
  %11 = load i32, i32* %i, align 4, !dbg !9838
  %mul = mul i32 %11, 2, !dbg !9839
  store i32 %mul, i32* %base, align 4, !dbg !9837
  call void @llvm.dbg.declare(metadata i8*** %iomap, metadata !9840, metadata !DIExpression()), !dbg !9841
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9842
  %call = call i32 @ata_port_is_dummy(%struct.ata_port* %12) #9, !dbg !9844
  %tobool = icmp ne i32 %call, 0, !dbg !9844
  br i1 %tobool, label %if.then, label %if.end, !dbg !9845

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9846

if.end:                                           ; preds = %for.body
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9847
  %14 = load i32, i32* %i, align 4, !dbg !9849
  %call1 = call i32 @ata_resources_present(%struct.pci_dev* %13, i32 %14) #9, !dbg !9850
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9850
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9851

if.then3:                                         ; preds = %if.end
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9852
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 1, !dbg !9854
  store %struct.ata_port_operations* @ata_dummy_port_ops, %struct.ata_port_operations** %ops, align 8, !dbg !9855
  br label %for.inc, !dbg !9856

if.end4:                                          ; preds = %if.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9857
  %17 = load i32, i32* %base, align 4, !dbg !9858
  %shl = shl i32 3, %17, !dbg !9859
  %18 = load %struct.device*, %struct.device** %gdev, align 8, !dbg !9860
  %call5 = call i8* @dev_driver_string(%struct.device* %18) #9, !dbg !9861
  %call6 = call i32 @pcim_iomap_regions(%struct.pci_dev* %16, i32 %shl, i8* %call5) #9, !dbg !9862
  store i32 %call6, i32* %rc, align 4, !dbg !9863
  %19 = load i32, i32* %rc, align 4, !dbg !9864
  %tobool7 = icmp ne i32 %19, 0, !dbg !9864
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !9866

if.then8:                                         ; preds = %if.end4
  %20 = load %struct.device*, %struct.device** %gdev, align 8, !dbg !9867
  %21 = load i32, i32* %i, align 4, !dbg !9867
  %22 = load i32, i32* %rc, align 4, !dbg !9867
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0), i32 %21, i32 %22) #11, !dbg !9867
  %23 = load i32, i32* %rc, align 4, !dbg !9869
  %cmp9 = icmp eq i32 %23, -16, !dbg !9871
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !9872

if.then10:                                        ; preds = %if.then8
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9873
  call void @pcim_pin_device(%struct.pci_dev* %24) #9, !dbg !9874
  br label %if.end11, !dbg !9874

if.end11:                                         ; preds = %if.then10, %if.then8
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9875
  %ops12 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 1, !dbg !9876
  store %struct.ata_port_operations* @ata_dummy_port_ops, %struct.ata_port_operations** %ops12, align 8, !dbg !9877
  br label %for.inc, !dbg !9878

if.end13:                                         ; preds = %if.end4
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9879
  %call14 = call i8** @pcim_iomap_table(%struct.pci_dev* %26) #9, !dbg !9880
  store i8** %call14, i8*** %iomap, align 8, !dbg !9881
  %27 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !9882
  %iomap15 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %27, i32 0, i32 2, !dbg !9883
  store i8** %call14, i8*** %iomap15, align 8, !dbg !9884
  %28 = load i8**, i8*** %iomap, align 8, !dbg !9885
  %29 = load i32, i32* %base, align 4, !dbg !9886
  %idxprom16 = sext i32 %29 to i64, !dbg !9885
  %arrayidx17 = getelementptr i8*, i8** %28, i64 %idxprom16, !dbg !9885
  %30 = load i8*, i8** %arrayidx17, align 8, !dbg !9885
  %31 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9887
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 8, !dbg !9888
  %cmd_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 0, !dbg !9889
  store i8* %30, i8** %cmd_addr, align 16, !dbg !9890
  %32 = load i8**, i8*** %iomap, align 8, !dbg !9891
  %33 = load i32, i32* %base, align 4, !dbg !9892
  %add = add i32 %33, 1, !dbg !9893
  %idxprom18 = sext i32 %add to i64, !dbg !9891
  %arrayidx19 = getelementptr i8*, i8** %32, i64 %idxprom18, !dbg !9891
  %34 = load i8*, i8** %arrayidx19, align 8, !dbg !9891
  %35 = ptrtoint i8* %34 to i64, !dbg !9894
  %or = or i64 %35, 2, !dbg !9895
  %36 = inttoptr i64 %or to i8*, !dbg !9896
  %37 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9897
  %ioaddr20 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 8, !dbg !9898
  %ctl_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr20, i32 0, i32 12, !dbg !9899
  store i8* %36, i8** %ctl_addr, align 16, !dbg !9900
  %38 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9901
  %ioaddr21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 8, !dbg !9902
  %altstatus_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr21, i32 0, i32 11, !dbg !9903
  store i8* %36, i8** %altstatus_addr, align 8, !dbg !9904
  %39 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9905
  %ioaddr22 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %39, i32 0, i32 8, !dbg !9906
  call void @ata_sff_std_ports(%struct.ata_ioports* %ioaddr22) #9, !dbg !9907
  %40 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9908
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9909
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 44, !dbg !9909
  %42 = load i32, i32* %base, align 4, !dbg !9909
  %idxprom23 = sext i32 %42 to i64, !dbg !9909
  %arrayidx24 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom23, !dbg !9909
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx24, i32 0, i32 0, !dbg !9909
  %43 = load i64, i64* %start, align 8, !dbg !9909
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9910
  %resource25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 44, !dbg !9910
  %45 = load i32, i32* %base, align 4, !dbg !9910
  %add26 = add i32 %45, 1, !dbg !9910
  %idxprom27 = sext i32 %add26 to i64, !dbg !9910
  %arrayidx28 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource25, i64 0, i64 %idxprom27, !dbg !9910
  %start29 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx28, i32 0, i32 0, !dbg !9910
  %46 = load i64, i64* %start29, align 8, !dbg !9910
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i64 %43, i64 %46) #9, !dbg !9911
  %47 = load i32, i32* %i, align 4, !dbg !9912
  %shl30 = shl i32 1, %47, !dbg !9913
  %48 = load i32, i32* %mask, align 4, !dbg !9914
  %or31 = or i32 %48, %shl30, !dbg !9914
  store i32 %or31, i32* %mask, align 4, !dbg !9914
  br label %for.inc, !dbg !9915

for.inc:                                          ; preds = %if.end13, %if.end11, %if.then3, %if.then
  %49 = load i32, i32* %i, align 4, !dbg !9916
  %inc = add i32 %49, 1, !dbg !9916
  store i32 %inc, i32* %i, align 4, !dbg !9916
  br label %for.cond, !dbg !9917, !llvm.loop !9918

for.end:                                          ; preds = %for.cond
  %50 = load i32, i32* %mask, align 4, !dbg !9920
  %tobool32 = icmp ne i32 %50, 0, !dbg !9920
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !9922

if.then33:                                        ; preds = %for.end
  %51 = load %struct.device*, %struct.device** %gdev, align 8, !dbg !9923
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %51, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0)) #11, !dbg !9923
  store i32 -19, i32* %retval, align 4, !dbg !9925
  br label %return, !dbg !9925

if.end34:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !9926
  br label %return, !dbg !9926

return:                                           ; preds = %if.end34, %if.then33
  %52 = load i32, i32* %retval, align 4, !dbg !9927
  ret i32 %52, !dbg !9927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_port_is_dummy(%struct.ata_port* %ap) #1 !dbg !9928 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9929, metadata !DIExpression()), !dbg !9930
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9931
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !9932
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9932
  %cmp = icmp eq %struct.ata_port_operations* %1, @ata_dummy_port_ops, !dbg !9933
  %conv = zext i1 %cmp to i32, !dbg !9933
  ret i32 %conv, !dbg !9934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_resources_present(%struct.pci_dev* %pdev, i32 %port) #1 !dbg !9935 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %port.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9940, metadata !DIExpression()), !dbg !9941
  %0 = load i32, i32* %port.addr, align 4, !dbg !9942
  %mul = mul i32 %0, 2, !dbg !9943
  store i32 %mul, i32* %port.addr, align 4, !dbg !9944
  store i32 0, i32* %i, align 4, !dbg !9945
  br label %for.cond, !dbg !9947

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !9948
  %cmp = icmp slt i32 %1, 2, !dbg !9950
  br i1 %cmp, label %for.body, label %for.end, !dbg !9951

for.body:                                         ; preds = %for.cond
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9952
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !9952
  %3 = load i32, i32* %port.addr, align 4, !dbg !9952
  %4 = load i32, i32* %i, align 4, !dbg !9952
  %add = add i32 %3, %4, !dbg !9952
  %idxprom = sext i32 %add to i64, !dbg !9952
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !9952
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !9952
  %5 = load i64, i64* %start, align 8, !dbg !9952
  %cmp1 = icmp eq i64 %5, 0, !dbg !9955
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !9956

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9957
  %resource2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !9957
  %7 = load i32, i32* %port.addr, align 4, !dbg !9957
  %8 = load i32, i32* %i, align 4, !dbg !9957
  %add3 = add i32 %7, %8, !dbg !9957
  %idxprom4 = sext i32 %add3 to i64, !dbg !9957
  %arrayidx5 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource2, i64 0, i64 %idxprom4, !dbg !9957
  %start6 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx5, i32 0, i32 0, !dbg !9957
  %9 = load i64, i64* %start6, align 8, !dbg !9957
  %cmp7 = icmp eq i64 %9, 0, !dbg !9957
  br i1 %cmp7, label %land.lhs.true, label %cond.false, !dbg !9957

land.lhs.true:                                    ; preds = %lor.lhs.false
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9957
  %resource8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !9957
  %11 = load i32, i32* %port.addr, align 4, !dbg !9957
  %12 = load i32, i32* %i, align 4, !dbg !9957
  %add9 = add i32 %11, %12, !dbg !9957
  %idxprom10 = sext i32 %add9 to i64, !dbg !9957
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource8, i64 0, i64 %idxprom10, !dbg !9957
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 1, !dbg !9957
  %13 = load i64, i64* %end, align 8, !dbg !9957
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9957
  %resource12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 44, !dbg !9957
  %15 = load i32, i32* %port.addr, align 4, !dbg !9957
  %16 = load i32, i32* %i, align 4, !dbg !9957
  %add13 = add i32 %15, %16, !dbg !9957
  %idxprom14 = sext i32 %add13 to i64, !dbg !9957
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource12, i64 0, i64 %idxprom14, !dbg !9957
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 0, !dbg !9957
  %17 = load i64, i64* %start16, align 8, !dbg !9957
  %cmp17 = icmp eq i64 %13, %17, !dbg !9957
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !9957

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !9957

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9957
  %resource18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 44, !dbg !9957
  %19 = load i32, i32* %port.addr, align 4, !dbg !9957
  %20 = load i32, i32* %i, align 4, !dbg !9957
  %add19 = add i32 %19, %20, !dbg !9957
  %idxprom20 = sext i32 %add19 to i64, !dbg !9957
  %arrayidx21 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource18, i64 0, i64 %idxprom20, !dbg !9957
  %end22 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx21, i32 0, i32 1, !dbg !9957
  %21 = load i64, i64* %end22, align 8, !dbg !9957
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9957
  %resource23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 44, !dbg !9957
  %23 = load i32, i32* %port.addr, align 4, !dbg !9957
  %24 = load i32, i32* %i, align 4, !dbg !9957
  %add24 = add i32 %23, %24, !dbg !9957
  %idxprom25 = sext i32 %add24 to i64, !dbg !9957
  %arrayidx26 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource23, i64 0, i64 %idxprom25, !dbg !9957
  %start27 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx26, i32 0, i32 0, !dbg !9957
  %25 = load i64, i64* %start27, align 8, !dbg !9957
  %sub = sub i64 %21, %25, !dbg !9957
  %add28 = add i64 %sub, 1, !dbg !9957
  br label %cond.end, !dbg !9957

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add28, %cond.false ], !dbg !9957
  %cmp29 = icmp eq i64 %cond, 0, !dbg !9958
  br i1 %cmp29, label %if.then, label %if.end, !dbg !9959

if.then:                                          ; preds = %cond.end, %for.body
  store i32 0, i32* %retval, align 4, !dbg !9960
  br label %return, !dbg !9960

if.end:                                           ; preds = %cond.end
  br label %for.inc, !dbg !9961

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !9962
  %inc = add i32 %26, 1, !dbg !9962
  store i32 %inc, i32* %i, align 4, !dbg !9962
  br label %for.cond, !dbg !9963, !llvm.loop !9964

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !9966
  br label %return, !dbg !9966

return:                                           ; preds = %for.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !9967
  ret i32 %27, !dbg !9967
}

; Function Attrs: noredzone
declare dso_local i32 @pcim_iomap_regions(%struct.pci_dev*, i32, i8*) #0

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #0

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @pcim_pin_device(%struct.pci_dev*) #0

; Function Attrs: noredzone
declare dso_local i8** @pcim_iomap_table(%struct.pci_dev*) #0

; Function Attrs: noredzone
declare dso_local void @ata_port_desc(%struct.ata_port*, i8*, ...) #0

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_sff_prepare_host(%struct.pci_dev* %pdev, %struct.ata_port_info** %ppi, %struct.ata_host** %r_host) #1 !dbg !9968 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ppi.addr = alloca %struct.ata_port_info**, align 8
  %r_host.addr = alloca %struct.ata_host**, align 8
  %host = alloca %struct.ata_host*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  store %struct.ata_port_info** %ppi, %struct.ata_port_info*** %ppi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_info*** %ppi.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  store %struct.ata_host** %r_host, %struct.ata_host*** %r_host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host*** %r_host.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !9991, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9993, metadata !DIExpression()), !dbg !9994
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9995
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9997
  %call = call i8* @devres_open_group(%struct.device* %dev, i8* null, i32 3264) #9, !dbg !9998
  %tobool = icmp ne i8* %call, null, !dbg !9998
  br i1 %tobool, label %if.end, label %if.then, !dbg !9999

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10000
  br label %return, !dbg !10000

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10001
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !10002
  %2 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !10003
  %call2 = call %struct.ata_host* @ata_host_alloc_pinfo(%struct.device* %dev1, %struct.ata_port_info** %2, i32 2) #9, !dbg !10004
  store %struct.ata_host* %call2, %struct.ata_host** %host, align 8, !dbg !10005
  %3 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10006
  %tobool3 = icmp ne %struct.ata_host* %3, null, !dbg !10006
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !10008

if.then4:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10009
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !10009
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !10009
  store i32 -12, i32* %rc, align 4, !dbg !10011
  br label %err_out, !dbg !10012

if.end6:                                          ; preds = %if.end
  %5 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10013
  %call7 = call i32 @ata_pci_sff_init_host(%struct.ata_host* %5) #9, !dbg !10014
  store i32 %call7, i32* %rc, align 4, !dbg !10015
  %6 = load i32, i32* %rc, align 4, !dbg !10016
  %tobool8 = icmp ne i32 %6, 0, !dbg !10016
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10018

if.then9:                                         ; preds = %if.end6
  br label %err_out, !dbg !10019

if.end10:                                         ; preds = %if.end6
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10020
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !10021
  call void @devres_remove_group(%struct.device* %dev11, i8* null) #9, !dbg !10022
  %8 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10023
  %9 = load %struct.ata_host**, %struct.ata_host*** %r_host.addr, align 8, !dbg !10024
  store %struct.ata_host* %8, %struct.ata_host** %9, align 8, !dbg !10025
  store i32 0, i32* %retval, align 4, !dbg !10026
  br label %return, !dbg !10026

err_out:                                          ; preds = %if.then9, %if.then4
  call void @llvm.dbg.label(metadata !10027), !dbg !10028
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10029
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !10030
  %call13 = call i32 @devres_release_group(%struct.device* %dev12, i8* null) #9, !dbg !10031
  %11 = load i32, i32* %rc, align 4, !dbg !10032
  store i32 %11, i32* %retval, align 4, !dbg !10033
  br label %return, !dbg !10033

return:                                           ; preds = %err_out, %if.end10, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10034
  ret i32 %12, !dbg !10034
}

; Function Attrs: noredzone
declare dso_local i8* @devres_open_group(%struct.device*, i8*, i32) #0

; Function Attrs: noredzone
declare dso_local %struct.ata_host* @ata_host_alloc_pinfo(%struct.device*, %struct.ata_port_info**, i32) #0

; Function Attrs: noredzone
declare dso_local void @devres_remove_group(%struct.device*, i8*) #0

; Function Attrs: noredzone
declare dso_local i32 @devres_release_group(%struct.device*, i8*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_sff_activate_host(%struct.ata_host* %host, i32 (i32, i8*)* %irq_handler, %struct.scsi_host_template* %sht) #1 !dbg !10035 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.ata_host*, align 8
  %irq_handler.addr = alloca i32 (i32, i8*)*, align 8
  %sht.addr = alloca %struct.scsi_host_template*, align 8
  %dev = alloca %struct.device*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %drv_name = alloca i8*, align 8
  %legacy_mode = alloca i32, align 4
  %rc = alloca i32, align 4
  %tmp8 = alloca i8, align 1
  %mask = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !10040, metadata !DIExpression()), !dbg !10041
  store i32 (i32, i8*)* %irq_handler, i32 (i32, i8*)** %irq_handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %irq_handler.addr, metadata !10042, metadata !DIExpression()), !dbg !10043
  store %struct.scsi_host_template* %sht, %struct.scsi_host_template** %sht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %sht.addr, metadata !10044, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10046, metadata !DIExpression()), !dbg !10047
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10048
  %dev1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !10049
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !10049
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !10047
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10052, metadata !DIExpression()), !dbg !10054
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10054
  %3 = bitcast %struct.device* %2 to i8*, !dbg !10054
  store i8* %3, i8** %__mptr, align 8, !dbg !10054
  br label %do.body, !dbg !10054

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10055

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !10054
  %add.ptr = getelementptr i8, i8* %4, i64 -176, !dbg !10054
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !10054
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !10055
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !10054
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !10051
  call void @llvm.dbg.declare(metadata i8** %drv_name, metadata !10057, metadata !DIExpression()), !dbg !10058
  %7 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10059
  %dev2 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %7, i32 0, i32 1, !dbg !10060
  %8 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !10060
  %call = call i8* @dev_driver_string(%struct.device* %8) #9, !dbg !10061
  store i8* %call, i8** %drv_name, align 8, !dbg !10058
  call void @llvm.dbg.declare(metadata i32* %legacy_mode, metadata !10062, metadata !DIExpression()), !dbg !10063
  store i32 0, i32* %legacy_mode, align 4, !dbg !10063
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10064, metadata !DIExpression()), !dbg !10065
  %9 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10066
  %call3 = call i32 @ata_host_start(%struct.ata_host* %9) #9, !dbg !10067
  store i32 %call3, i32* %rc, align 4, !dbg !10068
  %10 = load i32, i32* %rc, align 4, !dbg !10069
  %tobool = icmp ne i32 %10, 0, !dbg !10069
  br i1 %tobool, label %if.then, label %if.end, !dbg !10071

if.then:                                          ; preds = %do.end
  %11 = load i32, i32* %rc, align 4, !dbg !10072
  store i32 %11, i32* %retval, align 4, !dbg !10073
  br label %return, !dbg !10073

if.end:                                           ; preds = %do.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10074
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 11, !dbg !10076
  %13 = load i32, i32* %class, align 4, !dbg !10076
  %shr = lshr i32 %13, 8, !dbg !10077
  %cmp = icmp eq i32 %shr, 257, !dbg !10078
  br i1 %cmp, label %if.then4, label %if.end27, !dbg !10079

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %tmp8, metadata !10080, metadata !DIExpression()), !dbg !10082
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !10083, metadata !DIExpression()), !dbg !10084
  store i8 0, i8* %mask, align 1, !dbg !10084
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10085
  %call5 = call i32 @pci_read_config_byte(%struct.pci_dev* %14, i32 9, i8* %tmp8) #9, !dbg !10086
  %15 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10087
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %15, i32 0, i32 12, !dbg !10089
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 0, !dbg !10087
  %16 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !10087
  %call6 = call i32 @ata_port_is_dummy(%struct.ata_port* %16) #9, !dbg !10090
  %tobool7 = icmp ne i32 %call6, 0, !dbg !10090
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !10091

if.then8:                                         ; preds = %if.then4
  %17 = load i8, i8* %mask, align 1, !dbg !10092
  %conv = zext i8 %17 to i32, !dbg !10092
  %or = or i32 %conv, 1, !dbg !10092
  %conv9 = trunc i32 %or to i8, !dbg !10092
  store i8 %conv9, i8* %mask, align 1, !dbg !10092
  br label %if.end10, !dbg !10093

if.end10:                                         ; preds = %if.then8, %if.then4
  %18 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10094
  %ports11 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %18, i32 0, i32 12, !dbg !10096
  %arrayidx12 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports11, i64 0, i64 1, !dbg !10094
  %19 = load %struct.ata_port*, %struct.ata_port** %arrayidx12, align 8, !dbg !10094
  %call13 = call i32 @ata_port_is_dummy(%struct.ata_port* %19) #9, !dbg !10097
  %tobool14 = icmp ne i32 %call13, 0, !dbg !10097
  br i1 %tobool14, label %if.end19, label %if.then15, !dbg !10098

if.then15:                                        ; preds = %if.end10
  %20 = load i8, i8* %mask, align 1, !dbg !10099
  %conv16 = zext i8 %20 to i32, !dbg !10099
  %or17 = or i32 %conv16, 4, !dbg !10099
  %conv18 = trunc i32 %or17 to i8, !dbg !10099
  store i8 %conv18, i8* %mask, align 1, !dbg !10099
  br label %if.end19, !dbg !10100

if.end19:                                         ; preds = %if.then15, %if.end10
  %21 = load i8, i8* %tmp8, align 1, !dbg !10101
  %conv20 = zext i8 %21 to i32, !dbg !10101
  %22 = load i8, i8* %mask, align 1, !dbg !10103
  %conv21 = zext i8 %22 to i32, !dbg !10103
  %and = and i32 %conv20, %conv21, !dbg !10104
  %23 = load i8, i8* %mask, align 1, !dbg !10105
  %conv22 = zext i8 %23 to i32, !dbg !10105
  %cmp23 = icmp ne i32 %and, %conv22, !dbg !10106
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10107

if.then25:                                        ; preds = %if.end19
  store i32 1, i32* %legacy_mode, align 4, !dbg !10108
  br label %if.end26, !dbg !10109

if.end26:                                         ; preds = %if.then25, %if.end19
  br label %if.end27, !dbg !10110

if.end27:                                         ; preds = %if.end26, %if.end
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10111
  %call28 = call i8* @devres_open_group(%struct.device* %24, i8* null, i32 3264) #9, !dbg !10113
  %tobool29 = icmp ne i8* %call28, null, !dbg !10113
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !10114

if.then30:                                        ; preds = %if.end27
  store i32 -12, i32* %retval, align 4, !dbg !10115
  br label %return, !dbg !10115

if.end31:                                         ; preds = %if.end27
  %25 = load i32, i32* %legacy_mode, align 4, !dbg !10116
  %tobool32 = icmp ne i32 %25, 0, !dbg !10116
  br i1 %tobool32, label %if.else, label %land.lhs.true, !dbg !10118

land.lhs.true:                                    ; preds = %if.end31
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10119
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 43, !dbg !10120
  %27 = load i32, i32* %irq, align 4, !dbg !10120
  %tobool33 = icmp ne i32 %27, 0, !dbg !10119
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !10121

if.then34:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10122, metadata !DIExpression()), !dbg !10124
  %28 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10125
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10126
  %irq35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 43, !dbg !10127
  %30 = load i32, i32* %irq35, align 4, !dbg !10127
  %31 = load i32 (i32, i8*)*, i32 (i32, i8*)** %irq_handler.addr, align 8, !dbg !10128
  %32 = load i8*, i8** %drv_name, align 8, !dbg !10129
  %33 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10130
  %34 = bitcast %struct.ata_host* %33 to i8*, !dbg !10130
  %call36 = call i32 @devm_request_irq(%struct.device* %28, i32 %30, i32 (i32, i8*)* %31, i64 128, i8* %32, i8* %34) #9, !dbg !10131
  store i32 %call36, i32* %rc, align 4, !dbg !10132
  %35 = load i32, i32* %rc, align 4, !dbg !10133
  %tobool37 = icmp ne i32 %35, 0, !dbg !10133
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !10135

if.then38:                                        ; preds = %if.then34
  br label %out, !dbg !10136

if.end39:                                         ; preds = %if.then34
  store i32 0, i32* %i, align 4, !dbg !10137
  br label %for.cond, !dbg !10139

for.cond:                                         ; preds = %for.inc, %if.end39
  %36 = load i32, i32* %i, align 4, !dbg !10140
  %cmp40 = icmp slt i32 %36, 2, !dbg !10142
  br i1 %cmp40, label %for.body, label %for.end, !dbg !10143

for.body:                                         ; preds = %for.cond
  %37 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10144
  %ports42 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %37, i32 0, i32 12, !dbg !10147
  %38 = load i32, i32* %i, align 4, !dbg !10148
  %idxprom = sext i32 %38 to i64, !dbg !10144
  %arrayidx43 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports42, i64 0, i64 %idxprom, !dbg !10144
  %39 = load %struct.ata_port*, %struct.ata_port** %arrayidx43, align 8, !dbg !10144
  %call44 = call i32 @ata_port_is_dummy(%struct.ata_port* %39) #9, !dbg !10149
  %tobool45 = icmp ne i32 %call44, 0, !dbg !10149
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !10150

if.then46:                                        ; preds = %for.body
  br label %for.inc, !dbg !10151

if.end47:                                         ; preds = %for.body
  %40 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10152
  %ports48 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %40, i32 0, i32 12, !dbg !10153
  %41 = load i32, i32* %i, align 4, !dbg !10154
  %idxprom49 = sext i32 %41 to i64, !dbg !10152
  %arrayidx50 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports48, i64 0, i64 %idxprom49, !dbg !10152
  %42 = load %struct.ata_port*, %struct.ata_port** %arrayidx50, align 8, !dbg !10152
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10155
  %irq51 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 43, !dbg !10156
  %44 = load i32, i32* %irq51, align 4, !dbg !10156
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 %44) #9, !dbg !10157
  br label %for.inc, !dbg !10158

for.inc:                                          ; preds = %if.end47, %if.then46
  %45 = load i32, i32* %i, align 4, !dbg !10159
  %inc = add i32 %45, 1, !dbg !10159
  store i32 %inc, i32* %i, align 4, !dbg !10159
  br label %for.cond, !dbg !10160, !llvm.loop !10161

for.end:                                          ; preds = %for.cond
  br label %if.end79, !dbg !10163

if.else:                                          ; preds = %land.lhs.true, %if.end31
  %46 = load i32, i32* %legacy_mode, align 4, !dbg !10164
  %tobool52 = icmp ne i32 %46, 0, !dbg !10164
  br i1 %tobool52, label %if.then53, label %if.end78, !dbg !10166

if.then53:                                        ; preds = %if.else
  %47 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10167
  %ports54 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %47, i32 0, i32 12, !dbg !10170
  %arrayidx55 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports54, i64 0, i64 0, !dbg !10167
  %48 = load %struct.ata_port*, %struct.ata_port** %arrayidx55, align 8, !dbg !10167
  %call56 = call i32 @ata_port_is_dummy(%struct.ata_port* %48) #9, !dbg !10171
  %tobool57 = icmp ne i32 %call56, 0, !dbg !10171
  br i1 %tobool57, label %if.end65, label %if.then58, !dbg !10172

if.then58:                                        ; preds = %if.then53
  %49 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10173
  %50 = load i32 (i32, i8*)*, i32 (i32, i8*)** %irq_handler.addr, align 8, !dbg !10175
  %51 = load i8*, i8** %drv_name, align 8, !dbg !10176
  %52 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10177
  %53 = bitcast %struct.ata_host* %52 to i8*, !dbg !10177
  %call59 = call i32 @devm_request_irq(%struct.device* %49, i32 14, i32 (i32, i8*)* %50, i64 128, i8* %51, i8* %53) #9, !dbg !10178
  store i32 %call59, i32* %rc, align 4, !dbg !10179
  %54 = load i32, i32* %rc, align 4, !dbg !10180
  %tobool60 = icmp ne i32 %54, 0, !dbg !10180
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !10182

if.then61:                                        ; preds = %if.then58
  br label %out, !dbg !10183

if.end62:                                         ; preds = %if.then58
  %55 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10184
  %ports63 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %55, i32 0, i32 12, !dbg !10185
  %arrayidx64 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports63, i64 0, i64 0, !dbg !10184
  %56 = load %struct.ata_port*, %struct.ata_port** %arrayidx64, align 8, !dbg !10184
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 14) #9, !dbg !10186
  br label %if.end65, !dbg !10187

if.end65:                                         ; preds = %if.end62, %if.then53
  %57 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10188
  %ports66 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %57, i32 0, i32 12, !dbg !10190
  %arrayidx67 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports66, i64 0, i64 1, !dbg !10188
  %58 = load %struct.ata_port*, %struct.ata_port** %arrayidx67, align 8, !dbg !10188
  %call68 = call i32 @ata_port_is_dummy(%struct.ata_port* %58) #9, !dbg !10191
  %tobool69 = icmp ne i32 %call68, 0, !dbg !10191
  br i1 %tobool69, label %if.end77, label %if.then70, !dbg !10192

if.then70:                                        ; preds = %if.end65
  %59 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10193
  %60 = load i32 (i32, i8*)*, i32 (i32, i8*)** %irq_handler.addr, align 8, !dbg !10195
  %61 = load i8*, i8** %drv_name, align 8, !dbg !10196
  %62 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10197
  %63 = bitcast %struct.ata_host* %62 to i8*, !dbg !10197
  %call71 = call i32 @devm_request_irq(%struct.device* %59, i32 15, i32 (i32, i8*)* %60, i64 128, i8* %61, i8* %63) #9, !dbg !10198
  store i32 %call71, i32* %rc, align 4, !dbg !10199
  %64 = load i32, i32* %rc, align 4, !dbg !10200
  %tobool72 = icmp ne i32 %64, 0, !dbg !10200
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !10202

if.then73:                                        ; preds = %if.then70
  br label %out, !dbg !10203

if.end74:                                         ; preds = %if.then70
  %65 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10204
  %ports75 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %65, i32 0, i32 12, !dbg !10205
  %arrayidx76 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports75, i64 0, i64 1, !dbg !10204
  %66 = load %struct.ata_port*, %struct.ata_port** %arrayidx76, align 8, !dbg !10204
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %66, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 15) #9, !dbg !10206
  br label %if.end77, !dbg !10207

if.end77:                                         ; preds = %if.end74, %if.end65
  br label %if.end78, !dbg !10208

if.end78:                                         ; preds = %if.end77, %if.else
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %for.end
  %67 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !10209
  %68 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !10210
  %call80 = call i32 @ata_host_register(%struct.ata_host* %67, %struct.scsi_host_template* %68) #9, !dbg !10211
  store i32 %call80, i32* %rc, align 4, !dbg !10212
  br label %out, !dbg !10213

out:                                              ; preds = %if.end79, %if.then73, %if.then61, %if.then38
  call void @llvm.dbg.label(metadata !10214), !dbg !10215
  %69 = load i32, i32* %rc, align 4, !dbg !10216
  %cmp81 = icmp eq i32 %69, 0, !dbg !10218
  br i1 %cmp81, label %if.then83, label %if.else84, !dbg !10219

if.then83:                                        ; preds = %out
  %70 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10220
  call void @devres_remove_group(%struct.device* %70, i8* null) #9, !dbg !10221
  br label %if.end86, !dbg !10221

if.else84:                                        ; preds = %out
  %71 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10222
  %call85 = call i32 @devres_release_group(%struct.device* %71, i8* null) #9, !dbg !10223
  br label %if.end86

if.end86:                                         ; preds = %if.else84, %if.then83
  %72 = load i32, i32* %rc, align 4, !dbg !10224
  store i32 %72, i32* %retval, align 4, !dbg !10225
  br label %return, !dbg !10225

return:                                           ; preds = %if.end86, %if.then30, %if.then
  %73 = load i32, i32* %retval, align 4, !dbg !10226
  ret i32 %73, !dbg !10226
}

; Function Attrs: noredzone
declare dso_local i32 @ata_host_start(%struct.ata_host*) #0

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_request_irq(%struct.device* %dev, i32 %irq, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #1 !dbg !10227 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10232, metadata !DIExpression()), !dbg !10233
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !10238, metadata !DIExpression()), !dbg !10239
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !10240, metadata !DIExpression()), !dbg !10241
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10242
  %1 = load i32, i32* %irq.addr, align 4, !dbg !10243
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10244
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !10245
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !10246
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !10247
  %call = call i32 @devm_request_threaded_irq(%struct.device* %0, i32 %1, i32 (i32, i8*)* %2, i32 (i32, i8*)* null, i64 %3, i8* %4, i8* %5) #9, !dbg !10248
  ret i32 %call, !dbg !10249
}

; Function Attrs: noredzone
declare dso_local i32 @ata_host_register(%struct.ata_host*, %struct.scsi_host_template*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_sff_init_one(%struct.pci_dev* %pdev, %struct.ata_port_info** %ppi, %struct.scsi_host_template* %sht, i8* %host_priv, i32 %hflag) #1 !dbg !10250 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ppi.addr = alloca %struct.ata_port_info**, align 8
  %sht.addr = alloca %struct.scsi_host_template*, align 8
  %host_priv.addr = alloca i8*, align 8
  %hflag.addr = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  store %struct.ata_port_info** %ppi, %struct.ata_port_info*** %ppi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_info*** %ppi.addr, metadata !10255, metadata !DIExpression()), !dbg !10256
  store %struct.scsi_host_template* %sht, %struct.scsi_host_template** %sht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %sht.addr, metadata !10257, metadata !DIExpression()), !dbg !10258
  store i8* %host_priv, i8** %host_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %host_priv.addr, metadata !10259, metadata !DIExpression()), !dbg !10260
  store i32 %hflag, i32* %hflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hflag.addr, metadata !10261, metadata !DIExpression()), !dbg !10262
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10263
  %1 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !10264
  %2 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !10265
  %3 = load i8*, i8** %host_priv.addr, align 8, !dbg !10266
  %4 = load i32, i32* %hflag.addr, align 4, !dbg !10267
  %call = call i32 @ata_pci_init_one(%struct.pci_dev* %0, %struct.ata_port_info** %1, %struct.scsi_host_template* %2, i8* %3, i32 %4, i1 zeroext false) #9, !dbg !10268
  ret i32 %call, !dbg !10269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_pci_init_one(%struct.pci_dev* %pdev, %struct.ata_port_info** %ppi, %struct.scsi_host_template* %sht, i8* %host_priv, i32 %hflags, i1 zeroext %bmdma) #1 !dbg !10270 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ppi.addr = alloca %struct.ata_port_info**, align 8
  %sht.addr = alloca %struct.scsi_host_template*, align 8
  %host_priv.addr = alloca i8*, align 8
  %hflags.addr = alloca i32, align 4
  %bmdma.addr = alloca i8, align 1
  %dev = alloca %struct.device*, align 8
  %pi = alloca %struct.ata_port_info*, align 8
  %host = alloca %struct.ata_host*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10273, metadata !DIExpression()), !dbg !10274
  store %struct.ata_port_info** %ppi, %struct.ata_port_info*** %ppi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_info*** %ppi.addr, metadata !10275, metadata !DIExpression()), !dbg !10276
  store %struct.scsi_host_template* %sht, %struct.scsi_host_template** %sht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %sht.addr, metadata !10277, metadata !DIExpression()), !dbg !10278
  store i8* %host_priv, i8** %host_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %host_priv.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  store i32 %hflags, i32* %hflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hflags.addr, metadata !10281, metadata !DIExpression()), !dbg !10282
  %frombool = zext i1 %bmdma to i8
  store i8 %frombool, i8* %bmdma.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bmdma.addr, metadata !10283, metadata !DIExpression()), !dbg !10284
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10285, metadata !DIExpression()), !dbg !10286
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10287
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10288
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !10286
  call void @llvm.dbg.declare(metadata %struct.ata_port_info** %pi, metadata !10289, metadata !DIExpression()), !dbg !10290
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host, metadata !10291, metadata !DIExpression()), !dbg !10292
  store %struct.ata_host* null, %struct.ata_host** %host, align 8, !dbg !10292
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10293, metadata !DIExpression()), !dbg !10294
  %1 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !10295
  %call = call %struct.ata_port_info* @ata_sff_find_valid_pi(%struct.ata_port_info** %1) #9, !dbg !10296
  store %struct.ata_port_info* %call, %struct.ata_port_info** %pi, align 8, !dbg !10297
  %2 = load %struct.ata_port_info*, %struct.ata_port_info** %pi, align 8, !dbg !10298
  %tobool = icmp ne %struct.ata_port_info* %2, null, !dbg !10298
  br i1 %tobool, label %if.end, label %if.then, !dbg !10300

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10301
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !10301
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0)) #11, !dbg !10301
  store i32 -22, i32* %retval, align 4, !dbg !10303
  br label %return, !dbg !10303

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10304
  %call3 = call i8* @devres_open_group(%struct.device* %4, i8* null, i32 3264) #9, !dbg !10306
  %tobool4 = icmp ne i8* %call3, null, !dbg !10306
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10307

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !10308
  br label %return, !dbg !10308

if.end6:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10309
  %call7 = call i32 @pcim_enable_device(%struct.pci_dev* %5) #9, !dbg !10310
  store i32 %call7, i32* %rc, align 4, !dbg !10311
  %6 = load i32, i32* %rc, align 4, !dbg !10312
  %tobool8 = icmp ne i32 %6, 0, !dbg !10312
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10314

if.then9:                                         ; preds = %if.end6
  br label %out, !dbg !10315

if.end10:                                         ; preds = %if.end6
  %7 = load i8, i8* %bmdma.addr, align 1, !dbg !10316
  %tobool11 = trunc i8 %7 to i1, !dbg !10316
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !10318

if.then12:                                        ; preds = %if.end10
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10319
  %9 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !10320
  %call13 = call i32 @ata_pci_bmdma_prepare_host(%struct.pci_dev* %8, %struct.ata_port_info** %9, %struct.ata_host** %host) #9, !dbg !10321
  store i32 %call13, i32* %rc, align 4, !dbg !10322
  br label %if.end15, !dbg !10323

if.else:                                          ; preds = %if.end10
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10324
  %11 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !10325
  %call14 = call i32 @ata_pci_sff_prepare_host(%struct.pci_dev* %10, %struct.ata_port_info** %11, %struct.ata_host** %host) #9, !dbg !10326
  store i32 %call14, i32* %rc, align 4, !dbg !10327
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  %12 = load i32, i32* %rc, align 4, !dbg !10328
  %tobool16 = icmp ne i32 %12, 0, !dbg !10328
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !10330

if.then17:                                        ; preds = %if.end15
  br label %out, !dbg !10331

if.end18:                                         ; preds = %if.end15
  %13 = load i8*, i8** %host_priv.addr, align 8, !dbg !10332
  %14 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10333
  %private_data = getelementptr inbounds %struct.ata_host, %struct.ata_host* %14, i32 0, i32 5, !dbg !10334
  store i8* %13, i8** %private_data, align 8, !dbg !10335
  %15 = load i32, i32* %hflags.addr, align 4, !dbg !10336
  %conv = sext i32 %15 to i64, !dbg !10336
  %16 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10337
  %flags = getelementptr inbounds %struct.ata_host, %struct.ata_host* %16, i32 0, i32 7, !dbg !10338
  %17 = load i64, i64* %flags, align 8, !dbg !10339
  %or = or i64 %17, %conv, !dbg !10339
  store i64 %or, i64* %flags, align 8, !dbg !10339
  %18 = load i8, i8* %bmdma.addr, align 1, !dbg !10340
  %tobool19 = trunc i8 %18 to i1, !dbg !10340
  br i1 %tobool19, label %if.then20, label %if.else22, !dbg !10342

if.then20:                                        ; preds = %if.end18
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10343
  call void @pci_set_master(%struct.pci_dev* %19) #9, !dbg !10345
  %20 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10346
  %21 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !10347
  %call21 = call i32 @ata_pci_sff_activate_host(%struct.ata_host* %20, i32 (i32, i8*)* @ata_bmdma_interrupt, %struct.scsi_host_template* %21) #9, !dbg !10348
  store i32 %call21, i32* %rc, align 4, !dbg !10349
  br label %if.end24, !dbg !10350

if.else22:                                        ; preds = %if.end18
  %22 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10351
  %23 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !10352
  %call23 = call i32 @ata_pci_sff_activate_host(%struct.ata_host* %22, i32 (i32, i8*)* @ata_sff_interrupt, %struct.scsi_host_template* %23) #9, !dbg !10353
  store i32 %call23, i32* %rc, align 4, !dbg !10354
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then20
  br label %out, !dbg !10340

out:                                              ; preds = %if.end24, %if.then17, %if.then9
  call void @llvm.dbg.label(metadata !10355), !dbg !10356
  %24 = load i32, i32* %rc, align 4, !dbg !10357
  %cmp = icmp eq i32 %24, 0, !dbg !10359
  br i1 %cmp, label %if.then26, label %if.else28, !dbg !10360

if.then26:                                        ; preds = %out
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10361
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !10362
  call void @devres_remove_group(%struct.device* %dev27, i8* null) #9, !dbg !10363
  br label %if.end31, !dbg !10363

if.else28:                                        ; preds = %out
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10364
  %dev29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !10365
  %call30 = call i32 @devres_release_group(%struct.device* %dev29, i8* null) #9, !dbg !10366
  br label %if.end31

if.end31:                                         ; preds = %if.else28, %if.then26
  %27 = load i32, i32* %rc, align 4, !dbg !10367
  store i32 %27, i32* %retval, align 4, !dbg !10368
  br label %return, !dbg !10368

return:                                           ; preds = %if.end31, %if.then5, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !10369
  ret i32 %28, !dbg !10369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bmdma_qc_prep(%struct.ata_queued_cmd* %qc) #1 !dbg !10370 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10371, metadata !DIExpression()), !dbg !10372
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10373
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 6, !dbg !10375
  %1 = load i64, i64* %flags, align 8, !dbg !10375
  %and = and i64 %1, 2, !dbg !10376
  %tobool = icmp ne i64 %and, 0, !dbg !10376
  br i1 %tobool, label %if.end, label %if.then, !dbg !10377

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10378
  br label %return, !dbg !10378

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10379
  call void @ata_bmdma_fill_sg(%struct.ata_queued_cmd* %2) #9, !dbg !10380
  store i32 0, i32* %retval, align 4, !dbg !10381
  br label %return, !dbg !10381

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !10382
  ret i32 %3, !dbg !10382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bmdma_qc_issue(%struct.ata_queued_cmd* %qc) #1 !dbg !10383 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on34 = alloca i32, align 4
  %tmp60 = alloca i64, align 8
  %__ret_warn_on79 = alloca i32, align 4
  %tmp97 = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10386, metadata !DIExpression()), !dbg !10387
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10388
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !10389
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !10389
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10387
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !10390, metadata !DIExpression()), !dbg !10391
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10392
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 1, !dbg !10393
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10393
  %link2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 0, !dbg !10394
  %4 = load %struct.ata_link*, %struct.ata_link** %link2, align 64, !dbg !10394
  store %struct.ata_link* %4, %struct.ata_link** %link, align 8, !dbg !10391
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10395
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 4, !dbg !10397
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10398
  %6 = load i8, i8* %protocol, align 8, !dbg !10398
  %call = call zeroext i1 @ata_is_dma(i8 zeroext %6) #9, !dbg !10399
  br i1 %call, label %if.end, label %if.then, !dbg !10400

if.then:                                          ; preds = %entry
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10401
  %call3 = call i32 @ata_sff_qc_issue(%struct.ata_queued_cmd* %7) #9, !dbg !10402
  store i32 %call3, i32* %retval, align 4, !dbg !10403
  br label %return, !dbg !10403

if.end:                                           ; preds = %entry
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10404
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10405
  %dev4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 1, !dbg !10406
  %10 = load %struct.ata_device*, %struct.ata_device** %dev4, align 8, !dbg !10406
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 1, !dbg !10407
  %11 = load i32, i32* %devno, align 8, !dbg !10407
  call void @ata_dev_select(%struct.ata_port* %8, i32 %11, i32 1, i32 0) #9, !dbg !10408
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10409
  %tf5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %12, i32 0, i32 4, !dbg !10410
  %protocol6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf5, i32 0, i32 1, !dbg !10411
  %13 = load i8, i8* %protocol6, align 8, !dbg !10411
  %conv = zext i8 %13 to i32, !dbg !10409
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 10, label %sw.bb33
  ], !dbg !10412

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10413, metadata !DIExpression()), !dbg !10416
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10416
  %tf7 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 4, !dbg !10416
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf7, i32 0, i32 0, !dbg !10416
  %15 = load i64, i64* %flags, align 8, !dbg !10416
  %and = and i64 %15, 64, !dbg !10416
  %tobool = icmp ne i64 %and, 0, !dbg !10416
  %lnot = xor i1 %tobool, true, !dbg !10416
  %lnot8 = xor i1 %lnot, true, !dbg !10416
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !10416
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10416
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !10417
  %tobool9 = icmp ne i32 %16, 0, !dbg !10417
  %lnot10 = xor i1 %tobool9, true, !dbg !10417
  %lnot12 = xor i1 %lnot10, true, !dbg !10417
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !10417
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !10417
  %tobool15 = icmp ne i64 %conv14, 0, !dbg !10417
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !10416

if.then16:                                        ; preds = %sw.bb
  br label %do.body, !dbg !10417

do.body:                                          ; preds = %if.then16
  br label %do.body17, !dbg !10419

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !10421

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !10419

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 2738, i32 2307, i64 12) #8, !dbg !10423, !srcloc !10425
  br label %do.end19, !dbg !10423

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 326) #8, !dbg !10426, !srcloc !10428
  br label %do.body20, !dbg !10419

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !10429

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !10419

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !10419

if.end23:                                         ; preds = %do.end22, %sw.bb
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !10416
  %tobool24 = icmp ne i32 %17, 0, !dbg !10416
  %lnot25 = xor i1 %tobool24, true, !dbg !10416
  %lnot27 = xor i1 %lnot25, true, !dbg !10416
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !10416
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !10416
  store i64 %conv29, i64* %tmp, align 8, !dbg !10417
  %18 = load i64, i64* %tmp, align 8, !dbg !10416
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10431
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 1, !dbg !10432
  %20 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !10432
  %sff_tf_load = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %20, i32 0, i32 41, !dbg !10433
  %21 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_load, align 8, !dbg !10433
  %22 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10434
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10435
  %tf30 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 4, !dbg !10436
  call void %21(%struct.ata_port* %22, %struct.ata_taskfile* %tf30) #9, !dbg !10431
  %24 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10437
  %ops31 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %24, i32 0, i32 1, !dbg !10438
  %25 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops31, align 8, !dbg !10438
  %bmdma_setup = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %25, i32 0, i32 49, !dbg !10439
  %26 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_setup, align 8, !dbg !10439
  %27 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10440
  call void %26(%struct.ata_queued_cmd* %27) #9, !dbg !10437
  %28 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10441
  %ops32 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 1, !dbg !10442
  %29 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops32, align 8, !dbg !10442
  %bmdma_start = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %29, i32 0, i32 50, !dbg !10443
  %30 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_start, align 8, !dbg !10443
  %31 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10444
  call void %30(%struct.ata_queued_cmd* %31) #9, !dbg !10441
  %32 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10445
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 37, !dbg !10446
  store i32 3, i32* %hsm_task_state, align 16, !dbg !10447
  br label %sw.epilog, !dbg !10448

sw.bb33:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on34, metadata !10449, metadata !DIExpression()), !dbg !10451
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10451
  %tf35 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %33, i32 0, i32 4, !dbg !10451
  %flags36 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf35, i32 0, i32 0, !dbg !10451
  %34 = load i64, i64* %flags36, align 8, !dbg !10451
  %and37 = and i64 %34, 64, !dbg !10451
  %tobool38 = icmp ne i64 %and37, 0, !dbg !10451
  %lnot39 = xor i1 %tobool38, true, !dbg !10451
  %lnot41 = xor i1 %lnot39, true, !dbg !10451
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !10451
  store i32 %lnot.ext42, i32* %__ret_warn_on34, align 4, !dbg !10451
  %35 = load i32, i32* %__ret_warn_on34, align 4, !dbg !10452
  %tobool43 = icmp ne i32 %35, 0, !dbg !10452
  %lnot44 = xor i1 %tobool43, true, !dbg !10452
  %lnot46 = xor i1 %lnot44, true, !dbg !10452
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !10452
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !10452
  %tobool49 = icmp ne i64 %conv48, 0, !dbg !10452
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !10451

if.then50:                                        ; preds = %sw.bb33
  br label %do.body51, !dbg !10452

do.body51:                                        ; preds = %if.then50
  br label %do.body52, !dbg !10454

do.body52:                                        ; preds = %do.body51
  br label %do.end53, !dbg !10456

do.end53:                                         ; preds = %do.body52
  br label %do.body54, !dbg !10454

do.body54:                                        ; preds = %do.end53
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 2747, i32 2307, i64 12) #8, !dbg !10458, !srcloc !10460
  br label %do.end55, !dbg !10458

do.end55:                                         ; preds = %do.body54
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 327) #8, !dbg !10461, !srcloc !10463
  br label %do.body56, !dbg !10454

do.body56:                                        ; preds = %do.end55
  br label %do.end57, !dbg !10464

do.end57:                                         ; preds = %do.body56
  br label %do.end58, !dbg !10454

do.end58:                                         ; preds = %do.end57
  br label %if.end59, !dbg !10454

if.end59:                                         ; preds = %do.end58, %sw.bb33
  %36 = load i32, i32* %__ret_warn_on34, align 4, !dbg !10451
  %tobool61 = icmp ne i32 %36, 0, !dbg !10451
  %lnot62 = xor i1 %tobool61, true, !dbg !10451
  %lnot64 = xor i1 %lnot62, true, !dbg !10451
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !10451
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !10451
  store i64 %conv66, i64* %tmp60, align 8, !dbg !10452
  %37 = load i64, i64* %tmp60, align 8, !dbg !10451
  %38 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10466
  %ops67 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 1, !dbg !10467
  %39 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops67, align 8, !dbg !10467
  %sff_tf_load68 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %39, i32 0, i32 41, !dbg !10468
  %40 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_tf_load68, align 8, !dbg !10468
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10469
  %42 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10470
  %tf69 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %42, i32 0, i32 4, !dbg !10471
  call void %40(%struct.ata_port* %41, %struct.ata_taskfile* %tf69) #9, !dbg !10466
  %43 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10472
  %ops70 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %43, i32 0, i32 1, !dbg !10473
  %44 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops70, align 8, !dbg !10473
  %bmdma_setup71 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %44, i32 0, i32 49, !dbg !10474
  %45 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_setup71, align 8, !dbg !10474
  %46 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10475
  call void %45(%struct.ata_queued_cmd* %46) #9, !dbg !10472
  %47 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10476
  %hsm_task_state72 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %47, i32 0, i32 37, !dbg !10477
  store i32 1, i32* %hsm_task_state72, align 16, !dbg !10478
  %48 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10479
  %dev73 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %48, i32 0, i32 1, !dbg !10481
  %49 = load %struct.ata_device*, %struct.ata_device** %dev73, align 8, !dbg !10481
  %flags74 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %49, i32 0, i32 3, !dbg !10482
  %50 = load i64, i64* %flags74, align 16, !dbg !10482
  %and75 = and i64 %50, 4, !dbg !10483
  %tobool76 = icmp ne i64 %and75, 0, !dbg !10483
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !10484

if.then77:                                        ; preds = %if.end59
  %51 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !10485
  call void @ata_sff_queue_pio_task(%struct.ata_link* %51, i64 0) #9, !dbg !10486
  br label %if.end78, !dbg !10486

if.end78:                                         ; preds = %if.then77, %if.end59
  br label %sw.epilog, !dbg !10487

sw.default:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on79, metadata !10488, metadata !DIExpression()), !dbg !10490
  store i32 1, i32* %__ret_warn_on79, align 4, !dbg !10490
  %52 = load i32, i32* %__ret_warn_on79, align 4, !dbg !10491
  %tobool80 = icmp ne i32 %52, 0, !dbg !10491
  %lnot81 = xor i1 %tobool80, true, !dbg !10491
  %lnot83 = xor i1 %lnot81, true, !dbg !10491
  %lnot.ext84 = zext i1 %lnot83 to i32, !dbg !10491
  %conv85 = sext i32 %lnot.ext84 to i64, !dbg !10491
  %tobool86 = icmp ne i64 %conv85, 0, !dbg !10491
  br i1 %tobool86, label %if.then87, label %if.end96, !dbg !10490

if.then87:                                        ; preds = %sw.default
  br label %do.body88, !dbg !10491

do.body88:                                        ; preds = %if.then87
  br label %do.body89, !dbg !10493

do.body89:                                        ; preds = %do.body88
  br label %do.end90, !dbg !10495

do.end90:                                         ; preds = %do.body89
  br label %do.body91, !dbg !10493

do.body91:                                        ; preds = %do.end90
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 2759, i32 2305, i64 12) #8, !dbg !10497, !srcloc !10499
  br label %do.end92, !dbg !10497

do.end92:                                         ; preds = %do.body91
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 328) #8, !dbg !10500, !srcloc !10502
  br label %do.body93, !dbg !10493

do.body93:                                        ; preds = %do.end92
  br label %do.end94, !dbg !10503

do.end94:                                         ; preds = %do.body93
  br label %do.end95, !dbg !10493

do.end95:                                         ; preds = %do.end94
  br label %if.end96, !dbg !10493

if.end96:                                         ; preds = %do.end95, %sw.default
  %53 = load i32, i32* %__ret_warn_on79, align 4, !dbg !10490
  %tobool98 = icmp ne i32 %53, 0, !dbg !10490
  %lnot99 = xor i1 %tobool98, true, !dbg !10490
  %lnot101 = xor i1 %lnot99, true, !dbg !10490
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !10490
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !10490
  store i64 %conv103, i64* %tmp97, align 8, !dbg !10491
  %54 = load i64, i64* %tmp97, align 8, !dbg !10490
  store i32 64, i32* %retval, align 4, !dbg !10505
  br label %return, !dbg !10505

sw.epilog:                                        ; preds = %if.end78, %if.end23
  store i32 0, i32* %retval, align 4, !dbg !10506
  br label %return, !dbg !10506

return:                                           ; preds = %sw.epilog, %if.end96, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !10507
  ret i32 %55, !dbg !10507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_bmdma_error_handler(%struct.ata_port* %ap) #1 !dbg !10508 {
entry:
  %lock.addr.i54 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i54, metadata !7100, metadata !DIExpression()), !dbg !10509
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7107, metadata !DIExpression()), !dbg !10511
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7109, metadata !DIExpression()), !dbg !10512
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %flags = alloca i64, align 8
  %thaw = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %host_stat = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10519, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !10521, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10523, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.declare(metadata i8* %thaw, metadata !10525, metadata !DIExpression()), !dbg !10526
  store i8 0, i8* %thaw, align 1, !dbg !10526
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10527
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10528
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 25, !dbg !10529
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 3, !dbg !10530
  %2 = load i32, i32* %active_tag, align 8, !dbg !10530
  %call = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %0, i32 %2) #9, !dbg !10531
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !10532
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10533
  %tobool = icmp ne %struct.ata_queued_cmd* %3, null, !dbg !10533
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10535

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10536
  %flags1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 6, !dbg !10537
  %5 = load i64, i64* %flags1, align 8, !dbg !10537
  %and = and i64 %5, 65536, !dbg !10538
  %tobool2 = icmp ne i64 %and, 0, !dbg !10538
  br i1 %tobool2, label %if.end, label %if.then, !dbg !10539

if.then:                                          ; preds = %land.lhs.true
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %qc, align 8, !dbg !10540
  br label %if.end, !dbg !10541

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %do.body, !dbg !10542

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !10543

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10544, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10547, metadata !DIExpression()), !dbg !10546
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10546
  %conv = zext i1 %cmp to i32, !dbg !10546
  store i32 1, i32* %tmp, align 4, !dbg !10546
  %6 = load i32, i32* %tmp, align 4, !dbg !10546
  br label %do.body4, !dbg !10548

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !10549

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !10550

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !10552, metadata !DIExpression()), !dbg !10555
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !10556, metadata !DIExpression()), !dbg !10555
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !10555
  %conv10 = zext i1 %cmp9 to i32, !dbg !10555
  store i32 1, i32* %tmp11, align 4, !dbg !10555
  %7 = load i32, i32* %tmp11, align 4, !dbg !10555
  %call12 = call i64 @arch_local_irq_save() #9, !dbg !10557
  store i64 %call12, i64* %flags, align 8, !dbg !10557
  br label %do.end, !dbg !10557

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !10550

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !10549

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10558, !srcloc !10559
  br label %do.body15, !dbg !10558

do.body15:                                        ; preds = %do.body14
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10560
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !10560
  %9 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !10560
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10561
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10562
  %rlock.i = bitcast %union.anon.8* %11 to %struct.raw_spinlock*, !dbg !10562
  br label %do.end17, !dbg !10560

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !10558

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10549

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10548

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10543

do.end21:                                         ; preds = %do.end20
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10563
  %tobool22 = icmp ne %struct.ata_queued_cmd* %12, null, !dbg !10563
  br i1 %tobool22, label %land.lhs.true23, label %if.end49, !dbg !10565

land.lhs.true23:                                  ; preds = %do.end21
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10566
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 4, !dbg !10567
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10568
  %14 = load i8, i8* %protocol, align 8, !dbg !10568
  %call24 = call zeroext i1 @ata_is_dma(i8 zeroext %14) #9, !dbg !10569
  br i1 %call24, label %if.then26, label %if.end49, !dbg !10570

if.then26:                                        ; preds = %land.lhs.true23
  call void @llvm.dbg.declare(metadata i8* %host_stat, metadata !10571, metadata !DIExpression()), !dbg !10573
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10574
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 1, !dbg !10575
  %16 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !10575
  %bmdma_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %16, i32 0, i32 52, !dbg !10576
  %17 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %bmdma_status, align 8, !dbg !10576
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10577
  %call27 = call zeroext i8 %17(%struct.ata_port* %18) #9, !dbg !10574
  store i8 %call27, i8* %host_stat, align 1, !dbg !10578
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10579
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 20, !dbg !10581
  %20 = load i32, i32* %err_mask, align 4, !dbg !10581
  %cmp28 = icmp eq i32 %20, 4, !dbg !10582
  br i1 %cmp28, label %land.lhs.true30, label %if.end36, !dbg !10583

land.lhs.true30:                                  ; preds = %if.then26
  %21 = load i8, i8* %host_stat, align 1, !dbg !10584
  %conv31 = zext i8 %21 to i32, !dbg !10584
  %and32 = and i32 %conv31, 2, !dbg !10585
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10585
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !10586

if.then34:                                        ; preds = %land.lhs.true30
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10587
  %err_mask35 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %22, i32 0, i32 20, !dbg !10589
  store i32 32, i32* %err_mask35, align 4, !dbg !10590
  store i8 1, i8* %thaw, align 1, !dbg !10591
  br label %if.end36, !dbg !10592

if.end36:                                         ; preds = %if.then34, %land.lhs.true30, %if.then26
  %23 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10593
  %ops37 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %23, i32 0, i32 1, !dbg !10594
  %24 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops37, align 8, !dbg !10594
  %bmdma_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %24, i32 0, i32 51, !dbg !10595
  %25 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_stop, align 8, !dbg !10595
  %26 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10596
  call void %25(%struct.ata_queued_cmd* %26) #9, !dbg !10593
  %27 = load i8, i8* %thaw, align 1, !dbg !10597
  %tobool38 = trunc i8 %27 to i1, !dbg !10597
  br i1 %tobool38, label %if.then39, label %if.end48, !dbg !10599

if.then39:                                        ; preds = %if.end36
  %28 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10600
  %ops40 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %28, i32 0, i32 1, !dbg !10602
  %29 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops40, align 8, !dbg !10602
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %29, i32 0, i32 39, !dbg !10603
  %30 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !10603
  %31 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10604
  %call41 = call zeroext i8 %30(%struct.ata_port* %31) #9, !dbg !10600
  %32 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10605
  %ops42 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 1, !dbg !10607
  %33 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops42, align 8, !dbg !10607
  %sff_irq_clear = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %33, i32 0, i32 47, !dbg !10608
  %34 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear, align 8, !dbg !10608
  %tobool43 = icmp ne void (%struct.ata_port*)* %34, null, !dbg !10605
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !10609

if.then44:                                        ; preds = %if.then39
  %35 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10610
  %ops45 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %35, i32 0, i32 1, !dbg !10611
  %36 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops45, align 8, !dbg !10611
  %sff_irq_clear46 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %36, i32 0, i32 47, !dbg !10612
  %37 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sff_irq_clear46, align 8, !dbg !10612
  %38 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10613
  call void %37(%struct.ata_port* %38) #9, !dbg !10610
  br label %if.end47, !dbg !10610

if.end47:                                         ; preds = %if.then44, %if.then39
  br label %if.end48, !dbg !10614

if.end48:                                         ; preds = %if.end47, %if.end36
  br label %if.end49, !dbg !10615

if.end49:                                         ; preds = %if.end48, %land.lhs.true23, %do.end21
  %39 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10616
  %lock50 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %39, i32 0, i32 2, !dbg !10617
  %40 = load %struct.spinlock*, %struct.spinlock** %lock50, align 16, !dbg !10617
  %41 = load i64, i64* %flags, align 8, !dbg !10618
  store %struct.spinlock* %40, %struct.spinlock** %lock.addr.i54, align 8
  store i64 %41, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1099, metadata !7185, metadata !DIExpression()) #8, !dbg !10619
  call void @llvm.dbg.declare(metadata !1099, metadata !7189, metadata !DIExpression()) #8, !dbg !10619
  store i32 1, i32* %tmp.i, align 4, !dbg !10619
  %42 = load i32, i32* %tmp.i, align 4, !dbg !10619
  call void @llvm.dbg.declare(metadata !1099, metadata !7190, metadata !DIExpression()) #8, !dbg !10620
  call void @llvm.dbg.declare(metadata !1099, metadata !7196, metadata !DIExpression()) #8, !dbg !10620
  store i32 1, i32* %tmp8.i, align 4, !dbg !10620
  %43 = load i32, i32* %tmp8.i, align 4, !dbg !10620
  %44 = load i64, i64* %flags.addr.i, align 8, !dbg !10621
  call void @arch_local_irq_restore(i64 %44) #10, !dbg !10621
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10622, !srcloc !7200
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i54, align 8, !dbg !10623
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !10623
  %rlock.i55 = bitcast %union.anon.8* %46 to %struct.raw_spinlock*, !dbg !10623
  %47 = load i8, i8* %thaw, align 1, !dbg !10624
  %tobool51 = trunc i8 %47 to i1, !dbg !10624
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !10626

if.then52:                                        ; preds = %if.end49
  %48 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10627
  call void @ata_eh_thaw_port(%struct.ata_port* %48) #9, !dbg !10628
  br label %if.end53, !dbg !10628

if.end53:                                         ; preds = %if.then52, %if.end49
  %49 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10629
  call void @ata_sff_error_handler(%struct.ata_port* %49) #9, !dbg !10630
  ret void, !dbg !10631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_bmdma_post_internal_cmd(%struct.ata_queued_cmd* %qc) #1 !dbg !10632 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !7100, metadata !DIExpression()), !dbg !10633
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7107, metadata !DIExpression()), !dbg !10637
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7109, metadata !DIExpression()), !dbg !10638
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10647, metadata !DIExpression()), !dbg !10648
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10649
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !10650
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !10650
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10648
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10651, metadata !DIExpression()), !dbg !10652
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10653
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 4, !dbg !10654
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !10655
  %3 = load i8, i8* %protocol, align 8, !dbg !10655
  %call = call zeroext i1 @ata_is_dma(i8 zeroext %3) #9, !dbg !10656
  br i1 %call, label %if.then, label %if.end, !dbg !10657

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10658

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !10659

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10660, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10663, metadata !DIExpression()), !dbg !10662
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10662
  %conv = zext i1 %cmp to i32, !dbg !10662
  store i32 1, i32* %tmp, align 4, !dbg !10662
  %4 = load i32, i32* %tmp, align 4, !dbg !10662
  br label %do.body3, !dbg !10664

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10665

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !10666

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !10668, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !10672, metadata !DIExpression()), !dbg !10671
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !10671
  %conv9 = zext i1 %cmp8 to i32, !dbg !10671
  store i32 1, i32* %tmp10, align 4, !dbg !10671
  %5 = load i32, i32* %tmp10, align 4, !dbg !10671
  %call11 = call i64 @arch_local_irq_save() #9, !dbg !10673
  store i64 %call11, i64* %flags, align 8, !dbg !10673
  br label %do.end, !dbg !10673

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !10666

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !10665

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10674, !srcloc !10675
  br label %do.body14, !dbg !10674

do.body14:                                        ; preds = %do.body13
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10676
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 2, !dbg !10676
  %7 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !10676
  store %struct.spinlock* %7, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10677
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !10678
  %rlock.i = bitcast %union.anon.8* %9 to %struct.raw_spinlock*, !dbg !10678
  br label %do.end16, !dbg !10676

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !10674

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10665

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10664

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10659

do.end20:                                         ; preds = %do.end19
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10679
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 1, !dbg !10680
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !10680
  %bmdma_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %11, i32 0, i32 51, !dbg !10681
  %12 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_stop, align 8, !dbg !10681
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10682
  call void %12(%struct.ata_queued_cmd* %13) #9, !dbg !10679
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10683
  %lock21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 2, !dbg !10684
  %15 = load %struct.spinlock*, %struct.spinlock** %lock21, align 16, !dbg !10684
  %16 = load i64, i64* %flags, align 8, !dbg !10685
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1099, metadata !7185, metadata !DIExpression()) #8, !dbg !10686
  call void @llvm.dbg.declare(metadata !1099, metadata !7189, metadata !DIExpression()) #8, !dbg !10686
  store i32 1, i32* %tmp.i, align 4, !dbg !10686
  %17 = load i32, i32* %tmp.i, align 4, !dbg !10686
  call void @llvm.dbg.declare(metadata !1099, metadata !7190, metadata !DIExpression()) #8, !dbg !10687
  call void @llvm.dbg.declare(metadata !1099, metadata !7196, metadata !DIExpression()) #8, !dbg !10687
  store i32 1, i32* %tmp8.i, align 4, !dbg !10687
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !10687
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !10688
  call void @arch_local_irq_restore(i64 %19) #10, !dbg !10688
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10689, !srcloc !7200
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !10690
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !10690
  %rlock.i23 = bitcast %union.anon.8* %21 to %struct.raw_spinlock*, !dbg !10690
  br label %if.end, !dbg !10691

if.end:                                           ; preds = %do.end20, %entry
  ret void, !dbg !10692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bmdma_port_start(%struct.ata_port* %ap) #1 !dbg !10693 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10694, metadata !DIExpression()), !dbg !10695
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10696
  %mwdma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 16, !dbg !10698
  %1 = load i32, i32* %mwdma_mask, align 4, !dbg !10698
  %tobool = icmp ne i32 %1, 0, !dbg !10696
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10699

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10700
  %udma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 17, !dbg !10701
  %3 = load i32, i32* %udma_mask, align 8, !dbg !10701
  %tobool1 = icmp ne i32 %3, 0, !dbg !10700
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !10702

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10703
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 31, !dbg !10705
  %5 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !10705
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %5, i32 0, i32 1, !dbg !10706
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10706
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10707
  %bmdma_prd_dma = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 14, !dbg !10708
  %call = call i8* @dmam_alloc_coherent(%struct.device* %6, i64 2048, i64* %bmdma_prd_dma, i32 3264) #9, !dbg !10709
  %8 = bitcast i8* %call to %struct.ata_bmdma_prd*, !dbg !10709
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10710
  %bmdma_prd = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 13, !dbg !10711
  store %struct.ata_bmdma_prd* %8, %struct.ata_bmdma_prd** %bmdma_prd, align 16, !dbg !10712
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10713
  %bmdma_prd2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 13, !dbg !10715
  %11 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %bmdma_prd2, align 16, !dbg !10715
  %tobool3 = icmp ne %struct.ata_bmdma_prd* %11, null, !dbg !10713
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !10716

if.then4:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !10717
  br label %return, !dbg !10717

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !10718

if.end5:                                          ; preds = %if.end, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !10719
  br label %return, !dbg !10719

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i32, i32* %retval, align 4, !dbg !10720
  ret i32 %12, !dbg !10720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_bmdma_irq_clear(%struct.ata_port* %ap) #1 !dbg !10721 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %mmio = alloca i8*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10722, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !10724, metadata !DIExpression()), !dbg !10725
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10726
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !10727
  %bmdma_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 13, !dbg !10728
  %1 = load i8*, i8** %bmdma_addr, align 8, !dbg !10728
  store i8* %1, i8** %mmio, align 8, !dbg !10725
  %2 = load i8*, i8** %mmio, align 8, !dbg !10729
  %tobool = icmp ne i8* %2, null, !dbg !10729
  br i1 %tobool, label %if.end, label %if.then, !dbg !10731

if.then:                                          ; preds = %entry
  br label %return, !dbg !10732

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %mmio, align 8, !dbg !10733
  %add.ptr = getelementptr i8, i8* %3, i64 2, !dbg !10734
  %call = call i32 @ioread8(i8* %add.ptr) #9, !dbg !10735
  %conv = trunc i32 %call to i8, !dbg !10735
  %4 = load i8*, i8** %mmio, align 8, !dbg !10736
  %add.ptr1 = getelementptr i8, i8* %4, i64 2, !dbg !10737
  call void @iowrite8(i8 zeroext %conv, i8* %add.ptr1) #9, !dbg !10738
  br label %return, !dbg !10739

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_bmdma_setup(%struct.ata_queued_cmd* %qc) #1 !dbg !10740 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %rw = alloca i32, align 4
  %dmactl = alloca i8, align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10741, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10743, metadata !DIExpression()), !dbg !10744
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10745
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !10746
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !10746
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10744
  call void @llvm.dbg.declare(metadata i32* %rw, metadata !10747, metadata !DIExpression()), !dbg !10748
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10749
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 4, !dbg !10750
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !10751
  %3 = load i64, i64* %flags, align 8, !dbg !10751
  %and = and i64 %3, 8, !dbg !10752
  %conv = trunc i64 %and to i32, !dbg !10753
  store i32 %conv, i32* %rw, align 4, !dbg !10748
  call void @llvm.dbg.declare(metadata i8* %dmactl, metadata !10754, metadata !DIExpression()), !dbg !10755
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10756, !srcloc !10757
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10758
  %bmdma_prd_dma = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 14, !dbg !10759
  %5 = load i64, i64* %bmdma_prd_dma, align 8, !dbg !10759
  %conv2 = trunc i64 %5 to i32, !dbg !10758
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10760
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 8, !dbg !10761
  %bmdma_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 13, !dbg !10762
  %7 = load i8*, i8** %bmdma_addr, align 8, !dbg !10762
  %add.ptr = getelementptr i8, i8* %7, i64 4, !dbg !10763
  call void @iowrite32(i32 %conv2, i8* %add.ptr) #9, !dbg !10764
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10765
  %ioaddr3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 8, !dbg !10766
  %bmdma_addr4 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr3, i32 0, i32 13, !dbg !10767
  %9 = load i8*, i8** %bmdma_addr4, align 8, !dbg !10767
  %add.ptr5 = getelementptr i8, i8* %9, i64 0, !dbg !10768
  %call = call i32 @ioread8(i8* %add.ptr5) #9, !dbg !10769
  %conv6 = trunc i32 %call to i8, !dbg !10769
  store i8 %conv6, i8* %dmactl, align 1, !dbg !10770
  %10 = load i8, i8* %dmactl, align 1, !dbg !10771
  %conv7 = zext i8 %10 to i32, !dbg !10771
  %and8 = and i32 %conv7, -10, !dbg !10771
  %conv9 = trunc i32 %and8 to i8, !dbg !10771
  store i8 %conv9, i8* %dmactl, align 1, !dbg !10771
  %11 = load i32, i32* %rw, align 4, !dbg !10772
  %tobool = icmp ne i32 %11, 0, !dbg !10772
  br i1 %tobool, label %if.end, label %if.then, !dbg !10774

if.then:                                          ; preds = %entry
  %12 = load i8, i8* %dmactl, align 1, !dbg !10775
  %conv10 = zext i8 %12 to i32, !dbg !10775
  %or = or i32 %conv10, 8, !dbg !10775
  %conv11 = trunc i32 %or to i8, !dbg !10775
  store i8 %conv11, i8* %dmactl, align 1, !dbg !10775
  br label %if.end, !dbg !10776

if.end:                                           ; preds = %if.then, %entry
  %13 = load i8, i8* %dmactl, align 1, !dbg !10777
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10778
  %ioaddr12 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 8, !dbg !10779
  %bmdma_addr13 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr12, i32 0, i32 13, !dbg !10780
  %15 = load i8*, i8** %bmdma_addr13, align 8, !dbg !10780
  %add.ptr14 = getelementptr i8, i8* %15, i64 0, !dbg !10781
  call void @iowrite8(i8 zeroext %13, i8* %add.ptr14) #9, !dbg !10782
  %16 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10783
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 1, !dbg !10784
  %17 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !10784
  %sff_exec_command = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %17, i32 0, i32 43, !dbg !10785
  %18 = load void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)** %sff_exec_command, align 8, !dbg !10785
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10786
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10787
  %tf15 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %20, i32 0, i32 4, !dbg !10788
  call void %18(%struct.ata_port* %19, %struct.ata_taskfile* %tf15) #9, !dbg !10783
  ret void, !dbg !10789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_bmdma_start(%struct.ata_queued_cmd* %qc) #1 !dbg !10790 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dmactl = alloca i8, align 1
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10791, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10793, metadata !DIExpression()), !dbg !10794
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10795
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !10796
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !10796
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10794
  call void @llvm.dbg.declare(metadata i8* %dmactl, metadata !10797, metadata !DIExpression()), !dbg !10798
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10799
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 8, !dbg !10800
  %bmdma_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 13, !dbg !10801
  %3 = load i8*, i8** %bmdma_addr, align 8, !dbg !10801
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !10802
  %call = call i32 @ioread8(i8* %add.ptr) #9, !dbg !10803
  %conv = trunc i32 %call to i8, !dbg !10803
  store i8 %conv, i8* %dmactl, align 1, !dbg !10804
  %4 = load i8, i8* %dmactl, align 1, !dbg !10805
  %conv2 = zext i8 %4 to i32, !dbg !10805
  %or = or i32 %conv2, 1, !dbg !10806
  %conv3 = trunc i32 %or to i8, !dbg !10805
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10807
  %ioaddr4 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 8, !dbg !10808
  %bmdma_addr5 = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr4, i32 0, i32 13, !dbg !10809
  %6 = load i8*, i8** %bmdma_addr5, align 8, !dbg !10809
  %add.ptr6 = getelementptr i8, i8* %6, i64 0, !dbg !10810
  call void @iowrite8(i8 zeroext %conv3, i8* %add.ptr6) #9, !dbg !10811
  ret void, !dbg !10812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_bmdma_stop(%struct.ata_queued_cmd* %qc) #1 !dbg !10813 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %mmio = alloca i8*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10814, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10816, metadata !DIExpression()), !dbg !10817
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10818
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !10819
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !10819
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10817
  call void @llvm.dbg.declare(metadata i8** %mmio, metadata !10820, metadata !DIExpression()), !dbg !10821
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10822
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 8, !dbg !10823
  %bmdma_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 13, !dbg !10824
  %3 = load i8*, i8** %bmdma_addr, align 8, !dbg !10824
  store i8* %3, i8** %mmio, align 8, !dbg !10821
  %4 = load i8*, i8** %mmio, align 8, !dbg !10825
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !10826
  %call = call i32 @ioread8(i8* %add.ptr) #9, !dbg !10827
  %and = and i32 %call, -2, !dbg !10828
  %conv = trunc i32 %and to i8, !dbg !10827
  %5 = load i8*, i8** %mmio, align 8, !dbg !10829
  %add.ptr2 = getelementptr i8, i8* %5, i64 0, !dbg !10830
  call void @iowrite8(i8 zeroext %conv, i8* %add.ptr2) #9, !dbg !10831
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10832
  call void @ata_sff_dma_pause(%struct.ata_port* %6) #9, !dbg !10833
  ret void, !dbg !10834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @ata_bmdma_status(%struct.ata_port* %ap) #1 !dbg !10835 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10836, metadata !DIExpression()), !dbg !10837
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10838
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 8, !dbg !10839
  %bmdma_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 13, !dbg !10840
  %1 = load i8*, i8** %bmdma_addr, align 8, !dbg !10840
  %add.ptr = getelementptr i8, i8* %1, i64 2, !dbg !10841
  %call = call i32 @ioread8(i8* %add.ptr) #9, !dbg !10842
  %conv = trunc i32 %call to i8, !dbg !10842
  ret i8 %conv, !dbg !10843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bmdma_port_start32(%struct.ata_port* %ap) #1 !dbg !10844 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10847
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 4, !dbg !10848
  %1 = load i32, i32* %pflags, align 32, !dbg !10849
  %or = or i32 %1, 3145728, !dbg !10849
  store i32 %or, i32* %pflags, align 32, !dbg !10849
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10850
  %call = call i32 @ata_bmdma_port_start(%struct.ata_port* %2) #9, !dbg !10851
  ret i32 %call, !dbg !10852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_bmdma_fill_sg(%struct.ata_queued_cmd* %qc) #1 !dbg !10853 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %prd = alloca %struct.ata_bmdma_prd*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %si = alloca i32, align 4
  %pi = alloca i32, align 4
  %addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %sg_len = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10854, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10856, metadata !DIExpression()), !dbg !10857
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10858
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !10859
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !10859
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10857
  call void @llvm.dbg.declare(metadata %struct.ata_bmdma_prd** %prd, metadata !10860, metadata !DIExpression()), !dbg !10861
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10862
  %bmdma_prd = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 13, !dbg !10863
  %3 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %bmdma_prd, align 16, !dbg !10863
  store %struct.ata_bmdma_prd* %3, %struct.ata_bmdma_prd** %prd, align 8, !dbg !10861
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !10864, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.declare(metadata i32* %si, metadata !10866, metadata !DIExpression()), !dbg !10867
  call void @llvm.dbg.declare(metadata i32* %pi, metadata !10868, metadata !DIExpression()), !dbg !10869
  store i32 0, i32* %pi, align 4, !dbg !10870
  store i32 0, i32* %si, align 4, !dbg !10871
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10871
  %sg2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 17, !dbg !10871
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg2, align 8, !dbg !10871
  store %struct.scatterlist* %5, %struct.scatterlist** %sg, align 8, !dbg !10871
  br label %for.cond, !dbg !10871

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %si, align 4, !dbg !10873
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10873
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 9, !dbg !10873
  %8 = load i32, i32* %n_elem, align 8, !dbg !10873
  %cmp = icmp ult i32 %6, %8, !dbg !10873
  br i1 %cmp, label %for.body, label %for.end, !dbg !10871

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !10875, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10878, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata i32* %sg_len, metadata !10880, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10882, metadata !DIExpression()), !dbg !10883
  %9 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10884
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %9, i32 0, i32 3, !dbg !10884
  %10 = load i64, i64* %dma_address, align 8, !dbg !10884
  %conv = trunc i64 %10 to i32, !dbg !10885
  store i32 %conv, i32* %addr, align 4, !dbg !10886
  %11 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10887
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %11, i32 0, i32 4, !dbg !10887
  %12 = load i32, i32* %dma_length, align 8, !dbg !10887
  store i32 %12, i32* %sg_len, align 4, !dbg !10888
  br label %while.cond, !dbg !10889

while.cond:                                       ; preds = %if.end, %for.body
  %13 = load i32, i32* %sg_len, align 4, !dbg !10890
  %tobool = icmp ne i32 %13, 0, !dbg !10889
  br i1 %tobool, label %while.body, label %while.end, !dbg !10889

while.body:                                       ; preds = %while.cond
  %14 = load i32, i32* %addr, align 4, !dbg !10891
  %and = and i32 %14, 65535, !dbg !10893
  store i32 %and, i32* %offset, align 4, !dbg !10894
  %15 = load i32, i32* %sg_len, align 4, !dbg !10895
  store i32 %15, i32* %len, align 4, !dbg !10896
  %16 = load i32, i32* %offset, align 4, !dbg !10897
  %17 = load i32, i32* %sg_len, align 4, !dbg !10899
  %add = add i32 %16, %17, !dbg !10900
  %cmp3 = icmp ugt i32 %add, 65536, !dbg !10901
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10902

if.then:                                          ; preds = %while.body
  %18 = load i32, i32* %offset, align 4, !dbg !10903
  %sub = sub i32 65536, %18, !dbg !10904
  store i32 %sub, i32* %len, align 4, !dbg !10905
  br label %if.end, !dbg !10906

if.end:                                           ; preds = %if.then, %while.body
  %19 = load i32, i32* %addr, align 4, !dbg !10907
  %20 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !10908
  %21 = load i32, i32* %pi, align 4, !dbg !10909
  %idxprom = zext i32 %21 to i64, !dbg !10908
  %arrayidx = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %20, i64 %idxprom, !dbg !10908
  %addr5 = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx, i32 0, i32 0, !dbg !10910
  store i32 %19, i32* %addr5, align 4, !dbg !10911
  %22 = load i32, i32* %len, align 4, !dbg !10912
  %and6 = and i32 %22, 65535, !dbg !10912
  %23 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !10913
  %24 = load i32, i32* %pi, align 4, !dbg !10914
  %idxprom7 = zext i32 %24 to i64, !dbg !10913
  %arrayidx8 = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %23, i64 %idxprom7, !dbg !10913
  %flags_len = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx8, i32 0, i32 1, !dbg !10915
  store i32 %and6, i32* %flags_len, align 4, !dbg !10916
  %25 = load i32, i32* %pi, align 4, !dbg !10917
  %inc = add i32 %25, 1, !dbg !10917
  store i32 %inc, i32* %pi, align 4, !dbg !10917
  %26 = load i32, i32* %len, align 4, !dbg !10918
  %27 = load i32, i32* %sg_len, align 4, !dbg !10919
  %sub9 = sub i32 %27, %26, !dbg !10919
  store i32 %sub9, i32* %sg_len, align 4, !dbg !10919
  %28 = load i32, i32* %len, align 4, !dbg !10920
  %29 = load i32, i32* %addr, align 4, !dbg !10921
  %add10 = add i32 %29, %28, !dbg !10921
  store i32 %add10, i32* %addr, align 4, !dbg !10921
  br label %while.cond, !dbg !10889, !llvm.loop !10922

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !10924

for.inc:                                          ; preds = %while.end
  %30 = load i32, i32* %si, align 4, !dbg !10873
  %inc11 = add i32 %30, 1, !dbg !10873
  store i32 %inc11, i32* %si, align 4, !dbg !10873
  %31 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10873
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %31) #9, !dbg !10873
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !10873
  br label %for.cond, !dbg !10873, !llvm.loop !10925

for.end:                                          ; preds = %for.cond
  %32 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !10927
  %33 = load i32, i32* %pi, align 4, !dbg !10928
  %sub12 = sub i32 %33, 1, !dbg !10929
  %idxprom13 = zext i32 %sub12 to i64, !dbg !10927
  %arrayidx14 = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %32, i64 %idxprom13, !dbg !10927
  %flags_len15 = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx14, i32 0, i32 1, !dbg !10930
  %34 = load i32, i32* %flags_len15, align 4, !dbg !10931
  %or = or i32 %34, -2147483648, !dbg !10931
  store i32 %or, i32* %flags_len15, align 4, !dbg !10931
  ret void, !dbg !10932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bmdma_dumb_qc_prep(%struct.ata_queued_cmd* %qc) #1 !dbg !10933 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10936
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 6, !dbg !10938
  %1 = load i64, i64* %flags, align 8, !dbg !10938
  %and = and i64 %1, 2, !dbg !10939
  %tobool = icmp ne i64 %and, 0, !dbg !10939
  br i1 %tobool, label %if.end, label %if.then, !dbg !10940

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10941
  br label %return, !dbg !10941

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10942
  call void @ata_bmdma_fill_sg_dumb(%struct.ata_queued_cmd* %2) #9, !dbg !10943
  store i32 0, i32* %retval, align 4, !dbg !10944
  br label %return, !dbg !10944

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !10945
  ret i32 %3, !dbg !10945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_bmdma_fill_sg_dumb(%struct.ata_queued_cmd* %qc) #1 !dbg !10946 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %prd = alloca %struct.ata_bmdma_prd*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %si = alloca i32, align 4
  %pi = alloca i32, align 4
  %addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %sg_len = alloca i32, align 4
  %len = alloca i32, align 4
  %blen = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !10947, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10949, metadata !DIExpression()), !dbg !10950
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10951
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !10952
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !10952
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10950
  call void @llvm.dbg.declare(metadata %struct.ata_bmdma_prd** %prd, metadata !10953, metadata !DIExpression()), !dbg !10954
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10955
  %bmdma_prd = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 13, !dbg !10956
  %3 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %bmdma_prd, align 16, !dbg !10956
  store %struct.ata_bmdma_prd* %3, %struct.ata_bmdma_prd** %prd, align 8, !dbg !10954
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.declare(metadata i32* %si, metadata !10959, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata i32* %pi, metadata !10961, metadata !DIExpression()), !dbg !10962
  store i32 0, i32* %pi, align 4, !dbg !10963
  store i32 0, i32* %si, align 4, !dbg !10964
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10964
  %sg2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 17, !dbg !10964
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg2, align 8, !dbg !10964
  store %struct.scatterlist* %5, %struct.scatterlist** %sg, align 8, !dbg !10964
  br label %for.cond, !dbg !10964

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %si, align 4, !dbg !10966
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !10966
  %n_elem = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 9, !dbg !10966
  %8 = load i32, i32* %n_elem, align 8, !dbg !10966
  %cmp = icmp ult i32 %6, %8, !dbg !10966
  br i1 %cmp, label %for.body, label %for.end, !dbg !10964

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10971, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.declare(metadata i32* %sg_len, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10975, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.declare(metadata i32* %blen, metadata !10977, metadata !DIExpression()), !dbg !10978
  %9 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10979
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %9, i32 0, i32 3, !dbg !10979
  %10 = load i64, i64* %dma_address, align 8, !dbg !10979
  %conv = trunc i64 %10 to i32, !dbg !10980
  store i32 %conv, i32* %addr, align 4, !dbg !10981
  %11 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10982
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %11, i32 0, i32 4, !dbg !10982
  %12 = load i32, i32* %dma_length, align 8, !dbg !10982
  store i32 %12, i32* %sg_len, align 4, !dbg !10983
  br label %while.cond, !dbg !10984

while.cond:                                       ; preds = %if.end16, %for.body
  %13 = load i32, i32* %sg_len, align 4, !dbg !10985
  %tobool = icmp ne i32 %13, 0, !dbg !10984
  br i1 %tobool, label %while.body, label %while.end, !dbg !10984

while.body:                                       ; preds = %while.cond
  %14 = load i32, i32* %addr, align 4, !dbg !10986
  %and = and i32 %14, 65535, !dbg !10988
  store i32 %and, i32* %offset, align 4, !dbg !10989
  %15 = load i32, i32* %sg_len, align 4, !dbg !10990
  store i32 %15, i32* %len, align 4, !dbg !10991
  %16 = load i32, i32* %offset, align 4, !dbg !10992
  %17 = load i32, i32* %sg_len, align 4, !dbg !10994
  %add = add i32 %16, %17, !dbg !10995
  %cmp3 = icmp ugt i32 %add, 65536, !dbg !10996
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10997

if.then:                                          ; preds = %while.body
  %18 = load i32, i32* %offset, align 4, !dbg !10998
  %sub = sub i32 65536, %18, !dbg !10999
  store i32 %sub, i32* %len, align 4, !dbg !11000
  br label %if.end, !dbg !11001

if.end:                                           ; preds = %if.then, %while.body
  %19 = load i32, i32* %len, align 4, !dbg !11002
  %and5 = and i32 %19, 65535, !dbg !11003
  store i32 %and5, i32* %blen, align 4, !dbg !11004
  %20 = load i32, i32* %addr, align 4, !dbg !11005
  %21 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !11006
  %22 = load i32, i32* %pi, align 4, !dbg !11007
  %idxprom = zext i32 %22 to i64, !dbg !11006
  %arrayidx = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %21, i64 %idxprom, !dbg !11006
  %addr6 = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx, i32 0, i32 0, !dbg !11008
  store i32 %20, i32* %addr6, align 4, !dbg !11009
  %23 = load i32, i32* %blen, align 4, !dbg !11010
  %cmp7 = icmp eq i32 %23, 0, !dbg !11012
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !11013

if.then9:                                         ; preds = %if.end
  %24 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !11014
  %25 = load i32, i32* %pi, align 4, !dbg !11016
  %idxprom10 = zext i32 %25 to i64, !dbg !11014
  %arrayidx11 = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %24, i64 %idxprom10, !dbg !11014
  %flags_len = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx11, i32 0, i32 1, !dbg !11017
  store i32 32768, i32* %flags_len, align 4, !dbg !11018
  store i32 32768, i32* %blen, align 4, !dbg !11019
  %26 = load i32, i32* %addr, align 4, !dbg !11020
  %add12 = add i32 %26, 32768, !dbg !11020
  %27 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !11021
  %28 = load i32, i32* %pi, align 4, !dbg !11022
  %inc = add i32 %28, 1, !dbg !11022
  store i32 %inc, i32* %pi, align 4, !dbg !11022
  %idxprom13 = zext i32 %inc to i64, !dbg !11021
  %arrayidx14 = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %27, i64 %idxprom13, !dbg !11021
  %addr15 = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx14, i32 0, i32 0, !dbg !11023
  store i32 %add12, i32* %addr15, align 4, !dbg !11024
  br label %if.end16, !dbg !11025

if.end16:                                         ; preds = %if.then9, %if.end
  %29 = load i32, i32* %blen, align 4, !dbg !11026
  %30 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !11027
  %31 = load i32, i32* %pi, align 4, !dbg !11028
  %idxprom17 = zext i32 %31 to i64, !dbg !11027
  %arrayidx18 = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %30, i64 %idxprom17, !dbg !11027
  %flags_len19 = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx18, i32 0, i32 1, !dbg !11029
  store i32 %29, i32* %flags_len19, align 4, !dbg !11030
  %32 = load i32, i32* %pi, align 4, !dbg !11031
  %inc20 = add i32 %32, 1, !dbg !11031
  store i32 %inc20, i32* %pi, align 4, !dbg !11031
  %33 = load i32, i32* %len, align 4, !dbg !11032
  %34 = load i32, i32* %sg_len, align 4, !dbg !11033
  %sub21 = sub i32 %34, %33, !dbg !11033
  store i32 %sub21, i32* %sg_len, align 4, !dbg !11033
  %35 = load i32, i32* %len, align 4, !dbg !11034
  %36 = load i32, i32* %addr, align 4, !dbg !11035
  %add22 = add i32 %36, %35, !dbg !11035
  store i32 %add22, i32* %addr, align 4, !dbg !11035
  br label %while.cond, !dbg !10984, !llvm.loop !11036

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !11038

for.inc:                                          ; preds = %while.end
  %37 = load i32, i32* %si, align 4, !dbg !10966
  %inc23 = add i32 %37, 1, !dbg !10966
  store i32 %inc23, i32* %si, align 4, !dbg !10966
  %38 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10966
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %38) #9, !dbg !10966
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !10966
  br label %for.cond, !dbg !10966, !llvm.loop !11039

for.end:                                          ; preds = %for.cond
  %39 = load %struct.ata_bmdma_prd*, %struct.ata_bmdma_prd** %prd, align 8, !dbg !11041
  %40 = load i32, i32* %pi, align 4, !dbg !11042
  %sub24 = sub i32 %40, 1, !dbg !11043
  %idxprom25 = zext i32 %sub24 to i64, !dbg !11041
  %arrayidx26 = getelementptr %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %39, i64 %idxprom25, !dbg !11041
  %flags_len27 = getelementptr inbounds %struct.ata_bmdma_prd, %struct.ata_bmdma_prd* %arrayidx26, i32 0, i32 1, !dbg !11044
  %41 = load i32, i32* %flags_len27, align 4, !dbg !11045
  %or = or i32 %41, -2147483648, !dbg !11045
  store i32 %or, i32* %flags_len27, align 4, !dbg !11045
  ret void, !dbg !11046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_dma(i8 zeroext %prot) #1 !dbg !11047 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !11048, metadata !DIExpression()), !dbg !11049
  %0 = load i8, i8* %prot.addr, align 1, !dbg !11050
  %conv = zext i8 %0 to i32, !dbg !11050
  %and = and i32 %conv, 2, !dbg !11051
  %tobool = icmp ne i32 %and, 0, !dbg !11050
  ret i1 %tobool, !dbg !11052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bmdma_port_intr(%struct.ata_port* %ap, %struct.ata_queued_cmd* %qc) #1 !dbg !11053 {
entry:
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %host_stat = alloca i8, align 1
  %bmdma_stopped = alloca i8, align 1
  %handled = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11054, metadata !DIExpression()), !dbg !11055
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !11058, metadata !DIExpression()), !dbg !11059
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11060
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 25, !dbg !11061
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 11, !dbg !11062
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !11059
  call void @llvm.dbg.declare(metadata i8* %host_stat, metadata !11063, metadata !DIExpression()), !dbg !11064
  store i8 0, i8* %host_stat, align 1, !dbg !11064
  call void @llvm.dbg.declare(metadata i8* %bmdma_stopped, metadata !11065, metadata !DIExpression()), !dbg !11066
  store i8 0, i8* %bmdma_stopped, align 1, !dbg !11066
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !11067, metadata !DIExpression()), !dbg !11068
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11069
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 37, !dbg !11071
  %2 = load i32, i32* %hsm_task_state, align 16, !dbg !11071
  %cmp = icmp eq i32 %2, 3, !dbg !11072
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !11073

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11074
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 4, !dbg !11075
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !11076
  %4 = load i8, i8* %protocol, align 8, !dbg !11076
  %call = call zeroext i1 @ata_is_dma(i8 zeroext %4) #9, !dbg !11077
  br i1 %call, label %if.then, label %if.end14, !dbg !11078

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11079
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 1, !dbg !11081
  %6 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !11081
  %bmdma_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %6, i32 0, i32 52, !dbg !11082
  %7 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %bmdma_status, align 8, !dbg !11082
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11083
  %call1 = call zeroext i8 %7(%struct.ata_port* %8) #9, !dbg !11079
  store i8 %call1, i8* %host_stat, align 1, !dbg !11084
  %9 = load i8, i8* %host_stat, align 1, !dbg !11085
  %conv = zext i8 %9 to i32, !dbg !11085
  %and = and i32 %conv, 4, !dbg !11087
  %tobool = icmp ne i32 %and, 0, !dbg !11087
  br i1 %tobool, label %if.end, label %if.then2, !dbg !11088

if.then2:                                         ; preds = %if.then
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11089
  %call3 = call i32 @ata_sff_idle_irq(%struct.ata_port* %10) #9, !dbg !11090
  store i32 %call3, i32* %retval, align 4, !dbg !11091
  br label %return, !dbg !11091

if.end:                                           ; preds = %if.then
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11092
  %ops4 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 1, !dbg !11093
  %12 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops4, align 8, !dbg !11093
  %bmdma_stop = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %12, i32 0, i32 51, !dbg !11094
  %13 = load void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)** %bmdma_stop, align 8, !dbg !11094
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11095
  call void %13(%struct.ata_queued_cmd* %14) #9, !dbg !11092
  store i8 1, i8* %bmdma_stopped, align 1, !dbg !11096
  %15 = load i8, i8* %host_stat, align 1, !dbg !11097
  %conv5 = zext i8 %15 to i32, !dbg !11097
  %and6 = and i32 %conv5, 2, !dbg !11097
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11097
  %lnot = xor i1 %tobool7, true, !dbg !11097
  %lnot8 = xor i1 %lnot, true, !dbg !11097
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !11097
  %conv9 = sext i32 %lnot.ext to i64, !dbg !11097
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !11097
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !11099

if.then11:                                        ; preds = %if.end
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11100
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 20, !dbg !11102
  %17 = load i32, i32* %err_mask, align 4, !dbg !11103
  %or = or i32 %17, 32, !dbg !11103
  store i32 %or, i32* %err_mask, align 4, !dbg !11103
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11104
  %hsm_task_state12 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 37, !dbg !11105
  store i32 4, i32* %hsm_task_state12, align 16, !dbg !11106
  br label %if.end13, !dbg !11107

if.end13:                                         ; preds = %if.then11, %if.end
  br label %if.end14, !dbg !11108

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %entry
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11109
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11110
  %21 = load i8, i8* %bmdma_stopped, align 1, !dbg !11111
  %tobool15 = trunc i8 %21 to i1, !dbg !11111
  %call16 = call i32 @__ata_sff_port_intr(%struct.ata_port* %19, %struct.ata_queued_cmd* %20, i1 zeroext %tobool15) #9, !dbg !11112
  store i32 %call16, i32* %handled, align 4, !dbg !11113
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11114
  %err_mask17 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %22, i32 0, i32 20, !dbg !11114
  %23 = load i32, i32* %err_mask17, align 4, !dbg !11114
  %tobool18 = icmp ne i32 %23, 0, !dbg !11114
  %lnot19 = xor i1 %tobool18, true, !dbg !11114
  %lnot21 = xor i1 %lnot19, true, !dbg !11114
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11114
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !11114
  %tobool24 = icmp ne i64 %conv23, 0, !dbg !11114
  br i1 %tobool24, label %land.lhs.true25, label %if.end32, !dbg !11116

land.lhs.true25:                                  ; preds = %if.end14
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11117
  %tf26 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %24, i32 0, i32 4, !dbg !11118
  %protocol27 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf26, i32 0, i32 1, !dbg !11119
  %25 = load i8, i8* %protocol27, align 8, !dbg !11119
  %call28 = call zeroext i1 @ata_is_dma(i8 zeroext %25) #9, !dbg !11120
  br i1 %call28, label %if.then30, label %if.end32, !dbg !11121

if.then30:                                        ; preds = %land.lhs.true25
  %26 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !11122
  %27 = load i8, i8* %host_stat, align 1, !dbg !11123
  %conv31 = zext i8 %27 to i32, !dbg !11123
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0), i32 %conv31) #9, !dbg !11124
  br label %if.end32, !dbg !11124

if.end32:                                         ; preds = %if.then30, %land.lhs.true25, %if.end14
  %28 = load i32, i32* %handled, align 4, !dbg !11125
  store i32 %28, i32* %retval, align 4, !dbg !11126
  br label %return, !dbg !11126

return:                                           ; preds = %if.end32, %if.then2
  %29 = load i32, i32* %retval, align 4, !dbg !11127
  ret i32 %29, !dbg !11127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_sff_idle_irq(%struct.ata_port* %ap) #1 !dbg !11128 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11133
  %stats = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 30, !dbg !11134
  %idle_irq = getelementptr inbounds %struct.ata_port_stats, %struct.ata_port_stats* %stats, i32 0, i32 1, !dbg !11135
  %1 = load i64, i64* %idle_irq, align 8, !dbg !11136
  %inc = add i64 %1, 1, !dbg !11136
  store i64 %inc, i64* %idle_irq, align 8, !dbg !11136
  ret i32 0, !dbg !11137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_bmdma_interrupt(i32 %irq, i8* %dev_instance) #1 !dbg !11138 {
entry:
  %irq.addr = alloca i32, align 4
  %dev_instance.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11139, metadata !DIExpression()), !dbg !11140
  store i8* %dev_instance, i8** %dev_instance.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_instance.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11143
  %1 = load i8*, i8** %dev_instance.addr, align 8, !dbg !11144
  %call = call i32 @__ata_sff_interrupt(i32 %0, i8* %1, i32 (%struct.ata_port*, %struct.ata_queued_cmd*)* @ata_bmdma_port_intr) #9, !dbg !11145
  ret i32 %call, !dbg !11146
}

; Function Attrs: noredzone
declare dso_local void @ata_eh_thaw_port(%struct.ata_port*) #0

; Function Attrs: noredzone
declare dso_local void @iowrite32(i32, i8*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dmam_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #1 !dbg !11147 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11152, metadata !DIExpression()), !dbg !11153
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11154, metadata !DIExpression()), !dbg !11155
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !11156, metadata !DIExpression()), !dbg !11157
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !11158, metadata !DIExpression()), !dbg !11159
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11160
  %1 = load i64, i64* %size.addr, align 8, !dbg !11161
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !11162
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !11163
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !11164
  %and = and i32 %4, 8192, !dbg !11165
  %tobool = icmp ne i32 %and, 0, !dbg !11166
  %5 = zext i1 %tobool to i64, !dbg !11166
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !11166
  %call = call i8* @dmam_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #9, !dbg !11167
  ret i8* %call, !dbg !11168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_bmdma_clear_simplex(%struct.pci_dev* %pdev) #1 !dbg !11169 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bmdma = alloca i64, align 8
  %simplex = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11170, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.declare(metadata i64* %bmdma, metadata !11172, metadata !DIExpression()), !dbg !11173
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11174
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !11174
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 4, !dbg !11174
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !11174
  %1 = load i64, i64* %start, align 8, !dbg !11174
  store i64 %1, i64* %bmdma, align 8, !dbg !11173
  call void @llvm.dbg.declare(metadata i8* %simplex, metadata !11175, metadata !DIExpression()), !dbg !11176
  %2 = load i64, i64* %bmdma, align 8, !dbg !11177
  %cmp = icmp eq i64 %2, 0, !dbg !11179
  br i1 %cmp, label %if.then, label %if.end, !dbg !11180

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !11181
  br label %return, !dbg !11181

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %bmdma, align 8, !dbg !11182
  %add = add i64 %3, 2, !dbg !11183
  %conv = trunc i64 %add to i32, !dbg !11182
  %call = call zeroext i8 @inb(i32 %conv) #9, !dbg !11184
  store i8 %call, i8* %simplex, align 1, !dbg !11185
  %4 = load i8, i8* %simplex, align 1, !dbg !11186
  %conv1 = zext i8 %4 to i32, !dbg !11186
  %and = and i32 %conv1, 96, !dbg !11187
  %conv2 = trunc i32 %and to i8, !dbg !11186
  %5 = load i64, i64* %bmdma, align 8, !dbg !11188
  %add3 = add i64 %5, 2, !dbg !11189
  %conv4 = trunc i64 %add3 to i32, !dbg !11188
  call void @outb(i8 zeroext %conv2, i32 %conv4) #9, !dbg !11190
  %6 = load i64, i64* %bmdma, align 8, !dbg !11191
  %add5 = add i64 %6, 2, !dbg !11192
  %conv6 = trunc i64 %add5 to i32, !dbg !11191
  %call7 = call zeroext i8 @inb(i32 %conv6) #9, !dbg !11193
  store i8 %call7, i8* %simplex, align 1, !dbg !11194
  %7 = load i8, i8* %simplex, align 1, !dbg !11195
  %conv8 = zext i8 %7 to i32, !dbg !11195
  %and9 = and i32 %conv8, 128, !dbg !11197
  %tobool = icmp ne i32 %and9, 0, !dbg !11197
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !11198

if.then10:                                        ; preds = %if.end
  store i32 -95, i32* %retval, align 4, !dbg !11199
  br label %return, !dbg !11199

if.end11:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11200
  br label %return, !dbg !11200

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !11201
  ret i32 %8, !dbg !11201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #1 !dbg !11202 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11206, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.declare(metadata i8* %value, metadata !11208, metadata !DIExpression()), !dbg !11207
  %0 = load i32, i32* %port.addr, align 4, !dbg !11207
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #8, !dbg !11207, !srcloc !11209
  store i8 %1, i8* %value, align 1, !dbg !11207
  %2 = load i8, i8* %value, align 1, !dbg !11207
  ret i8 %2, !dbg !11207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #1 !dbg !11210 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !11213, metadata !DIExpression()), !dbg !11214
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11215, metadata !DIExpression()), !dbg !11214
  %0 = load i8, i8* %value.addr, align 1, !dbg !11214
  %1 = load i32, i32* %port.addr, align 4, !dbg !11214
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #8, !dbg !11214, !srcloc !11216
  ret void, !dbg !11214
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_pci_bmdma_init(%struct.ata_host* %host) #1 !dbg !11217 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %gdev = alloca %struct.device*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %bmdma = alloca i8*, align 8
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.declare(metadata %struct.device** %gdev, metadata !11220, metadata !DIExpression()), !dbg !11221
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11222
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !11223
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11223
  store %struct.device* %1, %struct.device** %gdev, align 8, !dbg !11221
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !11224, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11226, metadata !DIExpression()), !dbg !11228
  %2 = load %struct.device*, %struct.device** %gdev, align 8, !dbg !11228
  %3 = bitcast %struct.device* %2 to i8*, !dbg !11228
  store i8* %3, i8** %__mptr, align 8, !dbg !11228
  br label %do.body, !dbg !11228

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11229

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !11228
  %add.ptr = getelementptr i8, i8* %4, i64 -176, !dbg !11228
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !11228
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !11229
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !11228
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !11225
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11231, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11233, metadata !DIExpression()), !dbg !11234
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11235
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 44, !dbg !11235
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 4, !dbg !11235
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !11235
  %8 = load i64, i64* %start, align 8, !dbg !11235
  %cmp = icmp eq i64 %8, 0, !dbg !11237
  br i1 %cmp, label %if.then, label %if.end, !dbg !11238

if.then:                                          ; preds = %do.end
  %9 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11239
  call void @ata_bmdma_nodma(%struct.ata_host* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !11241
  br label %for.end, !dbg !11242

if.end:                                           ; preds = %do.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11243
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !11244
  %call = call i32 @dma_set_mask_and_coherent(%struct.device* %dev1, i64 4294967295) #9, !dbg !11245
  store i32 %call, i32* %rc, align 4, !dbg !11246
  %11 = load i32, i32* %rc, align 4, !dbg !11247
  %tobool = icmp ne i32 %11, 0, !dbg !11247
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11249

if.then2:                                         ; preds = %if.end
  %12 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11250
  call void @ata_bmdma_nodma(%struct.ata_host* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !11251
  br label %if.end3, !dbg !11251

if.end3:                                          ; preds = %if.then2, %if.end
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11252
  %14 = load %struct.device*, %struct.device** %gdev, align 8, !dbg !11253
  %call4 = call i8* @dev_driver_string(%struct.device* %14) #9, !dbg !11254
  %call5 = call i32 @pcim_iomap_regions(%struct.pci_dev* %13, i32 16, i8* %call4) #9, !dbg !11255
  store i32 %call5, i32* %rc, align 4, !dbg !11256
  %15 = load i32, i32* %rc, align 4, !dbg !11257
  %tobool6 = icmp ne i32 %15, 0, !dbg !11257
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11259

if.then7:                                         ; preds = %if.end3
  %16 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11260
  call void @ata_bmdma_nodma(%struct.ata_host* %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !11262
  br label %for.end, !dbg !11263

if.end8:                                          ; preds = %if.end3
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11264
  %call9 = call i8** @pcim_iomap_table(%struct.pci_dev* %17) #9, !dbg !11265
  %18 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11266
  %iomap = getelementptr inbounds %struct.ata_host, %struct.ata_host* %18, i32 0, i32 2, !dbg !11267
  store i8** %call9, i8*** %iomap, align 8, !dbg !11268
  store i32 0, i32* %i, align 4, !dbg !11269
  br label %for.cond, !dbg !11271

for.cond:                                         ; preds = %for.inc, %if.end8
  %19 = load i32, i32* %i, align 4, !dbg !11272
  %cmp10 = icmp slt i32 %19, 2, !dbg !11274
  br i1 %cmp10, label %for.body, label %for.end, !dbg !11275

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11276, metadata !DIExpression()), !dbg !11278
  %20 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11279
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %20, i32 0, i32 12, !dbg !11280
  %21 = load i32, i32* %i, align 4, !dbg !11281
  %idxprom = sext i32 %21 to i64, !dbg !11279
  %arrayidx11 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !11279
  %22 = load %struct.ata_port*, %struct.ata_port** %arrayidx11, align 8, !dbg !11279
  store %struct.ata_port* %22, %struct.ata_port** %ap, align 8, !dbg !11278
  call void @llvm.dbg.declare(metadata i8** %bmdma, metadata !11282, metadata !DIExpression()), !dbg !11283
  %23 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11284
  %iomap12 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %23, i32 0, i32 2, !dbg !11285
  %24 = load i8**, i8*** %iomap12, align 8, !dbg !11285
  %arrayidx13 = getelementptr i8*, i8** %24, i64 4, !dbg !11284
  %25 = load i8*, i8** %arrayidx13, align 8, !dbg !11284
  %26 = load i32, i32* %i, align 4, !dbg !11286
  %mul = mul i32 8, %26, !dbg !11287
  %idx.ext = sext i32 %mul to i64, !dbg !11288
  %add.ptr14 = getelementptr i8, i8* %25, i64 %idx.ext, !dbg !11288
  store i8* %add.ptr14, i8** %bmdma, align 8, !dbg !11283
  %27 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11289
  %call15 = call i32 @ata_port_is_dummy(%struct.ata_port* %27) #9, !dbg !11291
  %tobool16 = icmp ne i32 %call15, 0, !dbg !11291
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !11292

if.then17:                                        ; preds = %for.body
  br label %for.inc, !dbg !11293

if.end18:                                         ; preds = %for.body
  %28 = load i8*, i8** %bmdma, align 8, !dbg !11294
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11295
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %29, i32 0, i32 8, !dbg !11296
  %bmdma_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 13, !dbg !11297
  store i8* %28, i8** %bmdma_addr, align 8, !dbg !11298
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11299
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 3, !dbg !11301
  %31 = load i64, i64* %flags, align 8, !dbg !11301
  %and = and i64 %31, 32768, !dbg !11302
  %tobool19 = icmp ne i64 %and, 0, !dbg !11302
  br i1 %tobool19, label %if.end26, label %land.lhs.true, !dbg !11303

land.lhs.true:                                    ; preds = %if.end18
  %32 = load i8*, i8** %bmdma, align 8, !dbg !11304
  %add.ptr20 = getelementptr i8, i8* %32, i64 2, !dbg !11305
  %call21 = call i32 @ioread8(i8* %add.ptr20) #9, !dbg !11306
  %and22 = and i32 %call21, 128, !dbg !11307
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11307
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !11308

if.then24:                                        ; preds = %land.lhs.true
  %33 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11309
  %flags25 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %33, i32 0, i32 7, !dbg !11310
  %34 = load i64, i64* %flags25, align 8, !dbg !11311
  %or = or i64 %34, 1, !dbg !11311
  store i64 %or, i64* %flags25, align 8, !dbg !11311
  br label %if.end26, !dbg !11309

if.end26:                                         ; preds = %if.then24, %land.lhs.true, %if.end18
  %35 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11312
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11313
  %resource27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 44, !dbg !11313
  %arrayidx28 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource27, i64 0, i64 4, !dbg !11313
  %start29 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx28, i32 0, i32 0, !dbg !11313
  %37 = load i64, i64* %start29, align 8, !dbg !11313
  %38 = load i32, i32* %i, align 4, !dbg !11314
  %mul30 = mul i32 8, %38, !dbg !11315
  %conv = sext i32 %mul30 to i64, !dbg !11316
  %add = add i64 %37, %conv, !dbg !11317
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i64 %add) #9, !dbg !11318
  br label %for.inc, !dbg !11319

for.inc:                                          ; preds = %if.end26, %if.then17
  %39 = load i32, i32* %i, align 4, !dbg !11320
  %inc = add i32 %39, 1, !dbg !11320
  store i32 %inc, i32* %i, align 4, !dbg !11320
  br label %for.cond, !dbg !11321, !llvm.loop !11322

for.end:                                          ; preds = %if.then, %if.then7, %for.cond
  ret void, !dbg !11324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_bmdma_nodma(%struct.ata_host* %host, i8* %reason) #1 !dbg !11325 {
entry:
  %host.addr = alloca %struct.ata_host*, align 8
  %reason.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.ata_host* %host, %struct.ata_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host** %host.addr, metadata !11328, metadata !DIExpression()), !dbg !11329
  store i8* %reason, i8** %reason.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !11330, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11332, metadata !DIExpression()), !dbg !11333
  %0 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11334
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %0, i32 0, i32 1, !dbg !11334
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11334
  %2 = load i8*, i8** %reason.addr, align 8, !dbg !11334
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i64 0, i64 0), i8* %2) #11, !dbg !11334
  store i32 0, i32* %i, align 4, !dbg !11335
  br label %for.cond, !dbg !11337

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !11338
  %cmp = icmp slt i32 %3, 2, !dbg !11340
  br i1 %cmp, label %for.body, label %for.end, !dbg !11341

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11342
  %ports = getelementptr inbounds %struct.ata_host, %struct.ata_host* %4, i32 0, i32 12, !dbg !11344
  %5 = load i32, i32* %i, align 4, !dbg !11345
  %idxprom = sext i32 %5 to i64, !dbg !11342
  %arrayidx = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports, i64 0, i64 %idxprom, !dbg !11342
  %6 = load %struct.ata_port*, %struct.ata_port** %arrayidx, align 8, !dbg !11342
  %mwdma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 16, !dbg !11346
  store i32 0, i32* %mwdma_mask, align 4, !dbg !11347
  %7 = load %struct.ata_host*, %struct.ata_host** %host.addr, align 8, !dbg !11348
  %ports1 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %7, i32 0, i32 12, !dbg !11349
  %8 = load i32, i32* %i, align 4, !dbg !11350
  %idxprom2 = sext i32 %8 to i64, !dbg !11348
  %arrayidx3 = getelementptr [0 x %struct.ata_port*], [0 x %struct.ata_port*]* %ports1, i64 0, i64 %idxprom2, !dbg !11348
  %9 = load %struct.ata_port*, %struct.ata_port** %arrayidx3, align 8, !dbg !11348
  %udma_mask = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 17, !dbg !11351
  store i32 0, i32* %udma_mask, align 8, !dbg !11352
  br label %for.inc, !dbg !11353

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !11354
  %inc = add i32 %10, 1, !dbg !11354
  store i32 %inc, i32* %i, align 4, !dbg !11354
  br label %for.cond, !dbg !11355, !llvm.loop !11356

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_mask_and_coherent(%struct.device* %dev, i64 %mask) #1 !dbg !11359 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %mask.addr = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11362, metadata !DIExpression()), !dbg !11363
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !11364, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11366, metadata !DIExpression()), !dbg !11367
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11368
  %1 = load i64, i64* %mask.addr, align 8, !dbg !11369
  %call = call i32 @dma_set_mask(%struct.device* %0, i64 %1) #9, !dbg !11370
  store i32 %call, i32* %rc, align 4, !dbg !11367
  %2 = load i32, i32* %rc, align 4, !dbg !11371
  %cmp = icmp eq i32 %2, 0, !dbg !11373
  br i1 %cmp, label %if.then, label %if.end, !dbg !11374

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11375
  %4 = load i64, i64* %mask.addr, align 8, !dbg !11376
  %call1 = call i32 @dma_set_coherent_mask(%struct.device* %3, i64 %4) #9, !dbg !11377
  br label %if.end, !dbg !11377

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %rc, align 4, !dbg !11378
  ret i32 %5, !dbg !11379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_bmdma_prepare_host(%struct.pci_dev* %pdev, %struct.ata_port_info** %ppi, %struct.ata_host** %r_host) #1 !dbg !11380 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ppi.addr = alloca %struct.ata_port_info**, align 8
  %r_host.addr = alloca %struct.ata_host**, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11381, metadata !DIExpression()), !dbg !11382
  store %struct.ata_port_info** %ppi, %struct.ata_port_info*** %ppi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_info*** %ppi.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  store %struct.ata_host** %r_host, %struct.ata_host*** %r_host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_host*** %r_host.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11387, metadata !DIExpression()), !dbg !11388
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11389
  %1 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !11390
  %2 = load %struct.ata_host**, %struct.ata_host*** %r_host.addr, align 8, !dbg !11391
  %call = call i32 @ata_pci_sff_prepare_host(%struct.pci_dev* %0, %struct.ata_port_info** %1, %struct.ata_host** %2) #9, !dbg !11392
  store i32 %call, i32* %rc, align 4, !dbg !11393
  %3 = load i32, i32* %rc, align 4, !dbg !11394
  %tobool = icmp ne i32 %3, 0, !dbg !11394
  br i1 %tobool, label %if.then, label %if.end, !dbg !11396

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %rc, align 4, !dbg !11397
  store i32 %4, i32* %retval, align 4, !dbg !11398
  br label %return, !dbg !11398

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_host**, %struct.ata_host*** %r_host.addr, align 8, !dbg !11399
  %6 = load %struct.ata_host*, %struct.ata_host** %5, align 8, !dbg !11400
  call void @ata_pci_bmdma_init(%struct.ata_host* %6) #9, !dbg !11401
  store i32 0, i32* %retval, align 4, !dbg !11402
  br label %return, !dbg !11402

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11403
  ret i32 %7, !dbg !11403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_pci_bmdma_init_one(%struct.pci_dev* %pdev, %struct.ata_port_info** %ppi, %struct.scsi_host_template* %sht, i8* %host_priv, i32 %hflags) #1 !dbg !11404 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ppi.addr = alloca %struct.ata_port_info**, align 8
  %sht.addr = alloca %struct.scsi_host_template*, align 8
  %host_priv.addr = alloca i8*, align 8
  %hflags.addr = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11405, metadata !DIExpression()), !dbg !11406
  store %struct.ata_port_info** %ppi, %struct.ata_port_info*** %ppi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_info*** %ppi.addr, metadata !11407, metadata !DIExpression()), !dbg !11408
  store %struct.scsi_host_template* %sht, %struct.scsi_host_template** %sht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_host_template** %sht.addr, metadata !11409, metadata !DIExpression()), !dbg !11410
  store i8* %host_priv, i8** %host_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %host_priv.addr, metadata !11411, metadata !DIExpression()), !dbg !11412
  store i32 %hflags, i32* %hflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hflags.addr, metadata !11413, metadata !DIExpression()), !dbg !11414
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11415
  %1 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !11416
  %2 = load %struct.scsi_host_template*, %struct.scsi_host_template** %sht.addr, align 8, !dbg !11417
  %3 = load i8*, i8** %host_priv.addr, align 8, !dbg !11418
  %4 = load i32, i32* %hflags.addr, align 4, !dbg !11419
  %call = call i32 @ata_pci_init_one(%struct.pci_dev* %0, %struct.ata_port_info** %1, %struct.scsi_host_template* %2, i8* %3, i32 %4, i1 zeroext true) #9, !dbg !11420
  ret i32 %call, !dbg !11421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_port_init(%struct.ata_port* %ap) #1 !dbg !11422 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11423, metadata !DIExpression()), !dbg !11424
  br label %do.body, !dbg !11425

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11426

do.body1:                                         ; preds = %do.body
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11428
  %sff_pio_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 12, !dbg !11428
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %sff_pio_task, i32 0, i32 0, !dbg !11428
  call void @__init_work(%struct.work_struct* %work, i32 0) #9, !dbg !11428
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11428
  %sff_pio_task2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 12, !dbg !11428
  %work3 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %sff_pio_task2, i32 0, i32 0, !dbg !11428
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work3, i32 0, i32 0, !dbg !11428
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !11428
  store i64 68719476704, i64* %counter, align 8, !dbg !11428
  %2 = bitcast %struct.atomic64_t* %data to i8*, !dbg !11428
  %3 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !11428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !11428
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11428
  %sff_pio_task4 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 12, !dbg !11428
  %work5 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %sff_pio_task4, i32 0, i32 0, !dbg !11428
  %entry6 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work5, i32 0, i32 1, !dbg !11428
  call void @INIT_LIST_HEAD(%struct.list_head* %entry6) #9, !dbg !11428
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11428
  %sff_pio_task7 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 12, !dbg !11428
  %work8 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %sff_pio_task7, i32 0, i32 0, !dbg !11428
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work8, i32 0, i32 2, !dbg !11428
  store void (%struct.work_struct*)* @ata_sff_pio_task, void (%struct.work_struct*)** %func, align 8, !dbg !11428
  br label %do.end, !dbg !11428

do.end:                                           ; preds = %do.body1
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11426
  %sff_pio_task9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 12, !dbg !11426
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %sff_pio_task9, i32 0, i32 1, !dbg !11426
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #9, !dbg !11426
  br label %do.end10, !dbg !11426

do.end10:                                         ; preds = %do.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11430
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 9, !dbg !11431
  store i8 8, i8* %ctl, align 8, !dbg !11432
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11433
  %last_ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 10, !dbg !11434
  store i8 -1, i8* %last_ctl, align 1, !dbg !11435
  ret void, !dbg !11436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #1 !dbg !11437 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11440, metadata !DIExpression()), !dbg !11441
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !11442, metadata !DIExpression()), !dbg !11443
  ret void, !dbg !11444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 !dbg !11445 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11449, metadata !DIExpression()), !dbg !11450
  br label %do.body, !dbg !11451

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11452

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11454

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !11452

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11456
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11456
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11456
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !11456
  br label %do.end3, !dbg !11456

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !11452

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11458
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11459
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !11460
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !11461
  ret void, !dbg !11462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_sff_pio_task(%struct.work_struct* %work) #1 !dbg !11463 {
entry:
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !8924, metadata !DIExpression()), !dbg !11464
  %lock.addr.i68 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i68, metadata !8930, metadata !DIExpression()), !dbg !11466
  %lock.addr.i66 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i66, metadata !8924, metadata !DIExpression()), !dbg !11470
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8930, metadata !DIExpression()), !dbg !11472
  %work.addr = alloca %struct.work_struct*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %status = alloca i8, align 1
  %poll_next = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp40 = alloca i64, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11474, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11476, metadata !DIExpression()), !dbg !11477
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11478, metadata !DIExpression()), !dbg !11480
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11480
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !11480
  store i8* %1, i8** %__mptr, align 8, !dbg !11480
  br label %do.body, !dbg !11480

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11481

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11480
  %add.ptr = getelementptr i8, i8* %2, i64 -184, !dbg !11480
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !11480
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !11481
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !11480
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !11477
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !11483, metadata !DIExpression()), !dbg !11484
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11485
  %sff_pio_task_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 11, !dbg !11486
  %6 = load %struct.ata_link*, %struct.ata_link** %sff_pio_task_link, align 16, !dbg !11486
  store %struct.ata_link* %6, %struct.ata_link** %link, align 8, !dbg !11484
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !11487, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.declare(metadata i8* %status, metadata !11489, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.declare(metadata i32* %poll_next, metadata !11491, metadata !DIExpression()), !dbg !11492
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11493
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 2, !dbg !11494
  %8 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !11494
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #10, !dbg !11495
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11496, !srcloc !8946
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11497
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11497
  %rlock.i = bitcast %union.anon.8* %10 to %struct.raw_spinlock*, !dbg !11497
  br label %do.body1, !dbg !11498

do.body1:                                         ; preds = %do.end
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11499
  %sff_pio_task_link2 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 11, !dbg !11499
  %12 = load %struct.ata_link*, %struct.ata_link** %sff_pio_task_link2, align 16, !dbg !11499
  %cmp = icmp eq %struct.ata_link* %12, null, !dbg !11499
  %lnot = xor i1 %cmp, true, !dbg !11499
  %lnot3 = xor i1 %lnot, true, !dbg !11499
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11499
  %conv = sext i32 %lnot.ext to i64, !dbg !11499
  %tobool = icmp ne i64 %conv, 0, !dbg !11499
  br i1 %tobool, label %if.then, label %if.end, !dbg !11502

if.then:                                          ; preds = %do.body1
  br label %do.body4, !dbg !11499

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !11503

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !11505

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11503

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 1279, i32 0, i64 12) #8, !dbg !11507, !srcloc !11509
  br label %do.end8, !dbg !11507

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !11503

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 322) #8, !dbg !11510, !srcloc !11513
  unreachable, !dbg !11514

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !11503

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !11503

if.end:                                           ; preds = %do.end11, %do.body1
  br label %do.end12, !dbg !11502

do.end12:                                         ; preds = %if.end
  %13 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11515
  %14 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11516
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %14, i32 0, i32 3, !dbg !11517
  %15 = load i32, i32* %active_tag, align 8, !dbg !11517
  %call = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %13, i32 %15) #9, !dbg !11518
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !11519
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !11520
  %tobool13 = icmp ne %struct.ata_queued_cmd* %16, null, !dbg !11520
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !11522

if.then14:                                        ; preds = %do.end12
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11523
  %sff_pio_task_link15 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 11, !dbg !11525
  store %struct.ata_link* null, %struct.ata_link** %sff_pio_task_link15, align 16, !dbg !11526
  br label %out_unlock, !dbg !11527

if.end16:                                         ; preds = %do.end12
  br label %fsm_start, !dbg !11520

fsm_start:                                        ; preds = %if.then63, %if.end16
  call void @llvm.dbg.label(metadata !11528), !dbg !11529
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11530, metadata !DIExpression()), !dbg !11532
  %18 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11532
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 37, !dbg !11532
  %19 = load i32, i32* %hsm_task_state, align 16, !dbg !11532
  %cmp17 = icmp eq i32 %19, 0, !dbg !11532
  %lnot19 = xor i1 %cmp17, true, !dbg !11532
  %lnot21 = xor i1 %lnot19, true, !dbg !11532
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11532
  store i32 %lnot.ext22, i32* %__ret_warn_on, align 4, !dbg !11532
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !11533
  %tobool23 = icmp ne i32 %20, 0, !dbg !11533
  %lnot24 = xor i1 %tobool23, true, !dbg !11533
  %lnot26 = xor i1 %lnot24, true, !dbg !11533
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !11533
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !11533
  %tobool29 = icmp ne i64 %conv28, 0, !dbg !11533
  br i1 %tobool29, label %if.then30, label %if.end39, !dbg !11532

if.then30:                                        ; preds = %fsm_start
  br label %do.body31, !dbg !11533

do.body31:                                        ; preds = %if.then30
  br label %do.body32, !dbg !11535

do.body32:                                        ; preds = %do.body31
  br label %do.end33, !dbg !11537

do.end33:                                         ; preds = %do.body32
  br label %do.body34, !dbg !11535

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 1288, i32 2307, i64 12) #8, !dbg !11539, !srcloc !11541
  br label %do.end35, !dbg !11539

do.end35:                                         ; preds = %do.body34
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 323) #8, !dbg !11542, !srcloc !11544
  br label %do.body36, !dbg !11535

do.body36:                                        ; preds = %do.end35
  br label %do.end37, !dbg !11545

do.end37:                                         ; preds = %do.body36
  br label %do.end38, !dbg !11535

do.end38:                                         ; preds = %do.end37
  br label %if.end39, !dbg !11535

if.end39:                                         ; preds = %do.end38, %fsm_start
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !11532
  %tobool41 = icmp ne i32 %21, 0, !dbg !11532
  %lnot42 = xor i1 %tobool41, true, !dbg !11532
  %lnot44 = xor i1 %lnot42, true, !dbg !11532
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !11532
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !11532
  store i64 %conv46, i64* %tmp40, align 8, !dbg !11533
  %22 = load i64, i64* %tmp40, align 8, !dbg !11532
  %23 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11547
  %call47 = call zeroext i8 @ata_sff_busy_wait(%struct.ata_port* %23, i32 128, i32 5) #9, !dbg !11548
  store i8 %call47, i8* %status, align 1, !dbg !11549
  %24 = load i8, i8* %status, align 1, !dbg !11550
  %conv48 = zext i8 %24 to i32, !dbg !11550
  %and = and i32 %conv48, 128, !dbg !11551
  %tobool49 = icmp ne i32 %and, 0, !dbg !11551
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !11552

if.then50:                                        ; preds = %if.end39
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11553
  %lock51 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 2, !dbg !11554
  %26 = load %struct.spinlock*, %struct.spinlock** %lock51, align 16, !dbg !11554
  store %struct.spinlock* %26, %struct.spinlock** %lock.addr.i66, align 8
  call void @arch_local_irq_enable() #10, !dbg !11555
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11556, !srcloc !8959
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i66, align 8, !dbg !11557
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !11557
  %rlock.i67 = bitcast %union.anon.8* %28 to %struct.raw_spinlock*, !dbg !11557
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11558
  call void @ata_msleep(%struct.ata_port* %29, i32 2) #9, !dbg !11559
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11560
  %lock52 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 2, !dbg !11561
  %31 = load %struct.spinlock*, %struct.spinlock** %lock52, align 16, !dbg !11561
  store %struct.spinlock* %31, %struct.spinlock** %lock.addr.i68, align 8
  call void @arch_local_irq_disable() #10, !dbg !11562
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11563, !srcloc !8946
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i68, align 8, !dbg !11564
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !11564
  %rlock.i69 = bitcast %union.anon.8* %33 to %struct.raw_spinlock*, !dbg !11564
  %34 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11565
  %call53 = call zeroext i8 @ata_sff_busy_wait(%struct.ata_port* %34, i32 128, i32 10) #9, !dbg !11566
  store i8 %call53, i8* %status, align 1, !dbg !11567
  %35 = load i8, i8* %status, align 1, !dbg !11568
  %conv54 = zext i8 %35 to i32, !dbg !11568
  %and55 = and i32 %conv54, 128, !dbg !11570
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11570
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !11571

if.then57:                                        ; preds = %if.then50
  %36 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11572
  call void @ata_sff_queue_pio_task(%struct.ata_link* %36, i64 16) #9, !dbg !11574
  br label %out_unlock, !dbg !11575

if.end58:                                         ; preds = %if.then50
  br label %if.end59, !dbg !11576

if.end59:                                         ; preds = %if.end58, %if.end39
  %37 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11577
  %sff_pio_task_link60 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %37, i32 0, i32 11, !dbg !11578
  store %struct.ata_link* null, %struct.ata_link** %sff_pio_task_link60, align 16, !dbg !11579
  %38 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11580
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !11581
  %40 = load i8, i8* %status, align 1, !dbg !11582
  %call61 = call i32 @ata_sff_hsm_move(%struct.ata_port* %38, %struct.ata_queued_cmd* %39, i8 zeroext %40, i32 1) #9, !dbg !11583
  store i32 %call61, i32* %poll_next, align 4, !dbg !11584
  %41 = load i32, i32* %poll_next, align 4, !dbg !11585
  %tobool62 = icmp ne i32 %41, 0, !dbg !11585
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !11587

if.then63:                                        ; preds = %if.end59
  br label %fsm_start, !dbg !11588

if.end64:                                         ; preds = %if.end59
  br label %out_unlock, !dbg !11585

out_unlock:                                       ; preds = %if.end64, %if.then57, %if.then14
  call void @llvm.dbg.label(metadata !11589), !dbg !11590
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11591
  %lock65 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 2, !dbg !11592
  %43 = load %struct.spinlock*, %struct.spinlock** %lock65, align 16, !dbg !11592
  store %struct.spinlock* %43, %struct.spinlock** %lock.addr.i70, align 8
  call void @arch_local_irq_enable() #10, !dbg !11593
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11594, !srcloc !8959
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !11595
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !11595
  %rlock.i71 = bitcast %union.anon.8* %45 to %struct.raw_spinlock*, !dbg !11595
  ret void, !dbg !11596
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #0

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #0

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_sff_init() #5 section ".init.text" !dbg !11597 {
entry:
  %retval = alloca i32, align 4
  %call = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i32 8, i32 512) #9, !dbg !11600
  store %struct.workqueue_struct* %call, %struct.workqueue_struct** @ata_sff_wq, align 8, !dbg !11601
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ata_sff_wq, align 8, !dbg !11602
  %tobool = icmp ne %struct.workqueue_struct* %0, null, !dbg !11602
  br i1 %tobool, label %if.end, label %if.then, !dbg !11604

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11605
  br label %return, !dbg !11605

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11606
  br label %return, !dbg !11606

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !11607
  ret i32 %1, !dbg !11607
}

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_sff_exit() #1 !dbg !11608 {
entry:
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ata_sff_wq, align 8, !dbg !11609
  call void @destroy_workqueue(%struct.workqueue_struct* %0) #9, !dbg !11610
  ret void, !dbg !11611
}

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_check_ready(i8 zeroext %status) #1 !dbg !11612 {
entry:
  %retval = alloca i32, align 4
  %status.addr = alloca i8, align 1
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !11615, metadata !DIExpression()), !dbg !11616
  %0 = load i8, i8* %status.addr, align 1, !dbg !11617
  %conv = zext i8 %0 to i32, !dbg !11617
  %and = and i32 %conv, 128, !dbg !11619
  %tobool = icmp ne i32 %and, 0, !dbg !11619
  br i1 %tobool, label %if.end, label %if.then, !dbg !11620

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11621
  br label %return, !dbg !11621

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %status.addr, align 1, !dbg !11622
  %conv1 = zext i8 %1 to i32, !dbg !11622
  %cmp = icmp eq i32 %conv1, 255, !dbg !11624
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !11625

if.then3:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !11626
  br label %return, !dbg !11626

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11627
  br label %return, !dbg !11627

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !11628
  ret i32 %2, !dbg !11628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_atapi(i8 zeroext %prot) #1 !dbg !11629 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  %0 = load i8, i8* %prot.addr, align 1, !dbg !11632
  %conv = zext i8 %0 to i32, !dbg !11632
  %and = and i32 %conv, 8, !dbg !11633
  %tobool = icmp ne i32 %and, 0, !dbg !11632
  ret i1 %tobool, !dbg !11634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_multi_taskfile(%struct.ata_taskfile* %tf) #1 !dbg !11635 {
entry:
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !11638, metadata !DIExpression()), !dbg !11639
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !11640
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 14, !dbg !11641
  %1 = load i8, i8* %command, align 1, !dbg !11641
  %conv = zext i8 %1 to i32, !dbg !11640
  %cmp = icmp eq i32 %conv, 196, !dbg !11642
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !11643

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !11644
  %command2 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 14, !dbg !11645
  %3 = load i8, i8* %command2, align 1, !dbg !11645
  %conv3 = zext i8 %3 to i32, !dbg !11644
  %cmp4 = icmp eq i32 %conv3, 197, !dbg !11646
  br i1 %cmp4, label %lor.end, label %lor.lhs.false6, !dbg !11647

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %4 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !11648
  %command7 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %4, i32 0, i32 14, !dbg !11649
  %5 = load i8, i8* %command7, align 1, !dbg !11649
  %conv8 = zext i8 %5 to i32, !dbg !11648
  %cmp9 = icmp eq i32 %conv8, 41, !dbg !11650
  br i1 %cmp9, label %lor.end, label %lor.lhs.false11, !dbg !11651

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !11652
  %command12 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 14, !dbg !11653
  %7 = load i8, i8* %command12, align 1, !dbg !11653
  %conv13 = zext i8 %7 to i32, !dbg !11652
  %cmp14 = icmp eq i32 %conv13, 57, !dbg !11654
  br i1 %cmp14, label %lor.end, label %lor.rhs, !dbg !11655

lor.rhs:                                          ; preds = %lor.lhs.false11
  %8 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !11656
  %command16 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %8, i32 0, i32 14, !dbg !11657
  %9 = load i8, i8* %command16, align 1, !dbg !11657
  %conv17 = zext i8 %9 to i32, !dbg !11656
  %cmp18 = icmp eq i32 %conv17, 206, !dbg !11658
  br label %lor.end, !dbg !11655

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false, %entry
  %10 = phi i1 [ true, %lor.lhs.false11 ], [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp18, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !11655
  ret i32 %lor.ext, !dbg !11659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_pio_sector(%struct.ata_queued_cmd* %qc) #1 !dbg !11660 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !11661, metadata !DIExpression()), !dbg !11663
  %tmp.i = alloca %struct.page*, align 8
  %tmp1.i = alloca %struct.page*, align 8
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %do_write = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %page = alloca %struct.page*, align 8
  %offset = alloca i32, align 4
  %buf = alloca i8*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11666, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.declare(metadata i32* %do_write, metadata !11668, metadata !DIExpression()), !dbg !11669
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11670
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !11671
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !11672
  %1 = load i64, i64* %flags, align 8, !dbg !11672
  %and = and i64 %1, 8, !dbg !11673
  %conv = trunc i64 %and to i32, !dbg !11674
  store i32 %conv, i32* %do_write, align 4, !dbg !11669
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11675, metadata !DIExpression()), !dbg !11676
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11677
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 0, !dbg !11678
  %3 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !11678
  store %struct.ata_port* %3, %struct.ata_port** %ap, align 8, !dbg !11676
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !11679, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11681, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !11683, metadata !DIExpression()), !dbg !11684
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11685
  %cursg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 18, !dbg !11687
  %5 = load %struct.scatterlist*, %struct.scatterlist** %cursg, align 8, !dbg !11687
  %tobool = icmp ne %struct.scatterlist* %5, null, !dbg !11685
  br i1 %tobool, label %if.end, label %if.then, !dbg !11688

if.then:                                          ; preds = %entry
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11689
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 13, !dbg !11691
  %7 = load i32, i32* %nbytes, align 8, !dbg !11691
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11692
  %curbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 15, !dbg !11693
  store i32 %7, i32* %curbytes, align 8, !dbg !11694
  br label %if.end45, !dbg !11695

if.end:                                           ; preds = %entry
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11696
  %curbytes2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 15, !dbg !11698
  %10 = load i32, i32* %curbytes2, align 8, !dbg !11698
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11699
  %nbytes3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 13, !dbg !11700
  %12 = load i32, i32* %nbytes3, align 8, !dbg !11700
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11701
  %sect_size = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 12, !dbg !11702
  %14 = load i32, i32* %sect_size, align 4, !dbg !11702
  %sub = sub i32 %12, %14, !dbg !11703
  %cmp = icmp eq i32 %10, %sub, !dbg !11704
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !11705

if.then5:                                         ; preds = %if.end
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11706
  %hsm_task_state = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 37, !dbg !11707
  store i32 3, i32* %hsm_task_state, align 16, !dbg !11708
  br label %if.end6, !dbg !11706

if.end6:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11709
  %cursg7 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 18, !dbg !11710
  %17 = load %struct.scatterlist*, %struct.scatterlist** %cursg7, align 8, !dbg !11710
  %call = call %struct.page* @sg_page(%struct.scatterlist* %17) #9, !dbg !11711
  store %struct.page* %call, %struct.page** %page, align 8, !dbg !11712
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11713
  %cursg8 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 18, !dbg !11714
  %19 = load %struct.scatterlist*, %struct.scatterlist** %cursg8, align 8, !dbg !11714
  %offset9 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %19, i32 0, i32 1, !dbg !11715
  %20 = load i32, i32* %offset9, align 8, !dbg !11715
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11716
  %cursg_ofs = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %21, i32 0, i32 19, !dbg !11717
  %22 = load i32, i32* %cursg_ofs, align 8, !dbg !11717
  %add = add i32 %20, %22, !dbg !11718
  store i32 %add, i32* %offset, align 4, !dbg !11719
  %23 = load i64, i64* @vmemmap_base, align 8, !dbg !11720
  %24 = inttoptr i64 %23 to %struct.page*, !dbg !11720
  %25 = load %struct.page*, %struct.page** %page, align 8, !dbg !11720
  %26 = load i64, i64* @vmemmap_base, align 8, !dbg !11720
  %27 = inttoptr i64 %26 to %struct.page*, !dbg !11720
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %25 to i64, !dbg !11720
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %27 to i64, !dbg !11720
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11720
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !11720
  %28 = load i32, i32* %offset, align 4, !dbg !11720
  %shr = lshr i32 %28, 12, !dbg !11720
  %conv10 = zext i32 %shr to i64, !dbg !11720
  %add11 = add i64 %sub.ptr.div, %conv10, !dbg !11720
  %add.ptr = getelementptr %struct.page, %struct.page* %24, i64 %add11, !dbg !11720
  store %struct.page* %add.ptr, %struct.page** %page, align 8, !dbg !11721
  %29 = load i32, i32* %offset, align 4, !dbg !11722
  %conv12 = zext i32 %29 to i64, !dbg !11722
  %rem = urem i64 %conv12, 4096, !dbg !11722
  %conv13 = trunc i64 %rem to i32, !dbg !11722
  store i32 %conv13, i32* %offset, align 4, !dbg !11722
  %30 = load %struct.page*, %struct.page** %page, align 8, !dbg !11723
  %call14 = call i8* @kmap_atomic(%struct.page* %30) #9, !dbg !11724
  store i8* %call14, i8** %buf, align 8, !dbg !11725
  %31 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11726
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 1, !dbg !11727
  %32 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !11727
  %sff_data_xfer = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %32, i32 0, i32 44, !dbg !11728
  %33 = load i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)** %sff_data_xfer, align 8, !dbg !11728
  %34 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11729
  %35 = load i8*, i8** %buf, align 8, !dbg !11730
  %36 = load i32, i32* %offset, align 4, !dbg !11731
  %idx.ext = zext i32 %36 to i64, !dbg !11732
  %add.ptr15 = getelementptr i8, i8* %35, i64 %idx.ext, !dbg !11732
  %37 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11733
  %sect_size16 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %37, i32 0, i32 12, !dbg !11734
  %38 = load i32, i32* %sect_size16, align 4, !dbg !11734
  %39 = load i32, i32* %do_write, align 4, !dbg !11735
  %call17 = call i32 %33(%struct.ata_queued_cmd* %34, i8* %add.ptr15, i32 %38, i32 %39) #9, !dbg !11726
  br label %do.body, !dbg !11736

do.body:                                          ; preds = %if.end6
  br label %do.body18, !dbg !11737

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !11739

do.end:                                           ; preds = %do.body18
  %40 = load i8*, i8** %buf, align 8, !dbg !11737
  call void @kunmap_atomic_high(i8* %40) #9, !dbg !11737
  call void @pagefault_enable() #9, !dbg !11737
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11737, !srcloc !11741
  br label %do.end19, !dbg !11737

do.end19:                                         ; preds = %do.end
  %41 = load i32, i32* %do_write, align 4, !dbg !11742
  %tobool20 = icmp ne i32 %41, 0, !dbg !11742
  br i1 %tobool20, label %if.end24, label %land.lhs.true, !dbg !11743

land.lhs.true:                                    ; preds = %do.end19
  %42 = load %struct.page*, %struct.page** %page, align 8, !dbg !11744
  store %struct.page* %42, %struct.page** %page.addr.i, align 8
  %43 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !11745
  %call.i = call %struct.page* @compound_head(%struct.page* %43) #10, !dbg !11745
  store %struct.page* %call.i, %struct.page** %tmp1.i, align 8, !dbg !11745
  %44 = load %struct.page*, %struct.page** %tmp1.i, align 8, !dbg !11745
  store %struct.page* %44, %struct.page** %tmp.i, align 8, !dbg !11748
  %45 = load %struct.page*, %struct.page** %tmp.i, align 8, !dbg !11748
  %flags.i = getelementptr inbounds %struct.page, %struct.page* %45, i32 0, i32 0, !dbg !11663
  %call2.i = call zeroext i1 @test_bit(i64 9, i64* %flags.i) #10, !dbg !11663
  %conv.i = zext i1 %call2.i to i32, !dbg !11663
  %tobool22 = icmp ne i32 %conv.i, 0, !dbg !11749
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !11750

if.then23:                                        ; preds = %land.lhs.true
  %46 = load %struct.page*, %struct.page** %page, align 8, !dbg !11751
  call void @flush_dcache_page(%struct.page* %46) #9, !dbg !11752
  br label %if.end24, !dbg !11752

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %do.end19
  %47 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11753
  %sect_size25 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %47, i32 0, i32 12, !dbg !11754
  %48 = load i32, i32* %sect_size25, align 4, !dbg !11754
  %49 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11755
  %curbytes26 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %49, i32 0, i32 15, !dbg !11756
  %50 = load i32, i32* %curbytes26, align 8, !dbg !11757
  %add27 = add i32 %50, %48, !dbg !11757
  store i32 %add27, i32* %curbytes26, align 8, !dbg !11757
  %51 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11758
  %sect_size28 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %51, i32 0, i32 12, !dbg !11759
  %52 = load i32, i32* %sect_size28, align 4, !dbg !11759
  %53 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11760
  %cursg_ofs29 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %53, i32 0, i32 19, !dbg !11761
  %54 = load i32, i32* %cursg_ofs29, align 8, !dbg !11762
  %add30 = add i32 %54, %52, !dbg !11762
  store i32 %add30, i32* %cursg_ofs29, align 8, !dbg !11762
  %55 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11763
  %cursg_ofs31 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %55, i32 0, i32 19, !dbg !11765
  %56 = load i32, i32* %cursg_ofs31, align 8, !dbg !11765
  %57 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11766
  %cursg32 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %57, i32 0, i32 18, !dbg !11767
  %58 = load %struct.scatterlist*, %struct.scatterlist** %cursg32, align 8, !dbg !11767
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %58, i32 0, i32 2, !dbg !11768
  %59 = load i32, i32* %length, align 4, !dbg !11768
  %cmp33 = icmp eq i32 %56, %59, !dbg !11769
  br i1 %cmp33, label %if.then35, label %if.end45, !dbg !11770

if.then35:                                        ; preds = %if.end24
  %60 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11771
  %cursg36 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %60, i32 0, i32 18, !dbg !11773
  %61 = load %struct.scatterlist*, %struct.scatterlist** %cursg36, align 8, !dbg !11773
  %call37 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %61) #9, !dbg !11774
  %62 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11775
  %cursg38 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %62, i32 0, i32 18, !dbg !11776
  store %struct.scatterlist* %call37, %struct.scatterlist** %cursg38, align 8, !dbg !11777
  %63 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11778
  %cursg39 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %63, i32 0, i32 18, !dbg !11780
  %64 = load %struct.scatterlist*, %struct.scatterlist** %cursg39, align 8, !dbg !11780
  %tobool40 = icmp ne %struct.scatterlist* %64, null, !dbg !11778
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !11781

if.then41:                                        ; preds = %if.then35
  %65 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11782
  %hsm_task_state42 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %65, i32 0, i32 37, !dbg !11783
  store i32 3, i32* %hsm_task_state42, align 16, !dbg !11784
  br label %if.end43, !dbg !11782

if.end43:                                         ; preds = %if.then41, %if.then35
  %66 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11785
  %cursg_ofs44 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %66, i32 0, i32 19, !dbg !11786
  store i32 0, i32* %cursg_ofs44, align 8, !dbg !11787
  br label %if.end45, !dbg !11788

if.end45:                                         ; preds = %if.then, %if.end43, %if.end24
  ret void, !dbg !11789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #1 !dbg !11790 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !11793, metadata !DIExpression()), !dbg !11794
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11795
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !11796
  %1 = load i64, i64* %page_link, align 8, !dbg !11796
  %and = and i64 %1, -4, !dbg !11797
  %2 = inttoptr i64 %and to %struct.page*, !dbg !11798
  ret %struct.page* %2, !dbg !11799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmap_atomic(%struct.page* %page) #1 !dbg !11800 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !11804, metadata !DIExpression()), !dbg !11810
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11814, !srcloc !11815
  call void @pagefault_disable() #9, !dbg !11816
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !11817
  store %struct.page* %0, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !11818
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !11818
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !11818
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !11818
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !11818
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !11818
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !11818
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !11818
  %add.i = add i64 %shl.i, %4, !dbg !11818
  %5 = inttoptr i64 %add.i to i8*, !dbg !11818
  ret i8* %5, !dbg !11819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kunmap_atomic_high(i8* %addr) #1 !dbg !11820 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11821, metadata !DIExpression()), !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_enable() #1 !dbg !11824 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !11826, metadata !DIExpression()), !dbg !11832
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !11836, metadata !DIExpression()), !dbg !11838
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !11839, metadata !DIExpression()), !dbg !11841
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11842, !srcloc !11843
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !11838
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !11838
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !11841, !srcloc !11844
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !11841
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !11841
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !11841
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !11841
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !11841
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !11832
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !11832
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !11832
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !11832
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !11845
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !11846
  %dec.i = add i32 %7, -1, !dbg !11846
  store i32 %dec.i, i32* %pagefault_disabled.i, align 8, !dbg !11846
  ret void, !dbg !11847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_dcache_page(%struct.page* %page) #1 !dbg !11848 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !11850, metadata !DIExpression()), !dbg !11851
  ret void, !dbg !11852
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_disable() #1 !dbg !11853 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !11826, metadata !DIExpression()), !dbg !11854
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !11836, metadata !DIExpression()), !dbg !11858
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !11839, metadata !DIExpression()), !dbg !11859
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !11858
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !11858
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !11859, !srcloc !11844
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !11859
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !11859
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !11859
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !11859
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !11859
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !11854
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !11854
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !11854
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !11854
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !11860
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !11861
  %inc.i = add i32 %7, 1, !dbg !11861
  store i32 %inc.i, i32* %pagefault_disabled.i, align 8, !dbg !11861
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11862, !srcloc !11863
  ret void, !dbg !11864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #1 !dbg !11865 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !11869, metadata !DIExpression()), !dbg !11872
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !11874, metadata !DIExpression()), !dbg !11875
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !11876, metadata !DIExpression()), !dbg !11877
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11878, metadata !DIExpression()), !dbg !11880
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11882, metadata !DIExpression()), !dbg !11883
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11884, metadata !DIExpression()), !dbg !11892
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11894, metadata !DIExpression()), !dbg !11895
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11896, metadata !DIExpression()), !dbg !11897
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11898, metadata !DIExpression()), !dbg !11899
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11900
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11901
  %div = sdiv i64 %1, 64, !dbg !11901
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11902
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11900
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11903
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11904
  %conv.i = trunc i64 %4 to i32, !dbg !11904
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #10, !dbg !11905
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11906
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11906
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #10, !dbg !11906
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11907
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !11907
  br i1 %8, label %cond.true, label %cond.false, !dbg !11907

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !11907
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !11907
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !11908
  %and.i = and i64 %11, 63, !dbg !11909
  %shl.i = shl i64 1, %and.i, !dbg !11910
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !11911
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11912
  %shr.i = ashr i64 %13, 6, !dbg !11913
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !11911
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !11911
  %and1.i = and i64 %shl.i, %14, !dbg !11914
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !11915
  %conv = zext i1 %cmp.i to i32, !dbg !11907
  br label %cond.end, !dbg !11907

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !11907
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !11907
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !11916
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !11917
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #8, !dbg !11918, !srcloc !11919
  store i8 %19, i8* %oldbit.i, align 1, !dbg !11918
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !11920
  %tobool.i = trunc i8 %20 to i1, !dbg !11920
  %conv2 = zext i1 %tobool.i to i32, !dbg !11907
  br label %cond.end, !dbg !11907

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !11907
  %tobool = icmp ne i32 %cond, 0, !dbg !11907
  ret i1 %tobool, !dbg !11921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @compound_head(%struct.page* %page) #1 !dbg !11922 {
entry:
  %retval = alloca %struct.page*, align 8
  %page.addr = alloca %struct.page*, align 8
  %head = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !11925, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.declare(metadata i64* %head, metadata !11927, metadata !DIExpression()), !dbg !11928
  br label %do.body, !dbg !11929

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11931

do.end:                                           ; preds = %do.body
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !11929
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !11929
  %2 = bitcast %union.anon.9* %1 to %struct.anon.18*, !dbg !11929
  %compound_head = getelementptr inbounds %struct.anon.18, %struct.anon.18* %2, i32 0, i32 0, !dbg !11929
  %3 = load volatile i64, i64* %compound_head, align 8, !dbg !11929
  store i64 %3, i64* %tmp, align 8, !dbg !11931
  %4 = load i64, i64* %tmp, align 8, !dbg !11929
  store i64 %4, i64* %head, align 8, !dbg !11928
  %5 = load i64, i64* %head, align 8, !dbg !11933
  %and = and i64 %5, 1, !dbg !11933
  %tobool = icmp ne i64 %and, 0, !dbg !11933
  %lnot = xor i1 %tobool, true, !dbg !11933
  %lnot1 = xor i1 %lnot, true, !dbg !11933
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11933
  %conv = sext i32 %lnot.ext to i64, !dbg !11933
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11933
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11935

if.then:                                          ; preds = %do.end
  %6 = load i64, i64* %head, align 8, !dbg !11936
  %sub = sub i64 %6, 1, !dbg !11937
  %7 = inttoptr i64 %sub to %struct.page*, !dbg !11938
  store %struct.page* %7, %struct.page** %retval, align 8, !dbg !11939
  br label %return, !dbg !11939

if.end:                                           ; preds = %do.end
  %8 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !11940
  store %struct.page* %8, %struct.page** %retval, align 8, !dbg !11941
  br label %return, !dbg !11941

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.page*, %struct.page** %retval, align 8, !dbg !11942
  ret %struct.page* %9, !dbg !11942
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !11943 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11947, metadata !DIExpression()), !dbg !11948
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11949, metadata !DIExpression()), !dbg !11950
  ret i1 true, !dbg !11951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !11952 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11956, metadata !DIExpression()), !dbg !11957
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11958, metadata !DIExpression()), !dbg !11959
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11960, metadata !DIExpression()), !dbg !11961
  ret void, !dbg !11962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__atapi_pio_bytes(%struct.ata_queued_cmd* %qc, i32 %bytes) #1 !dbg !11963 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %bytes.addr = alloca i32, align 4
  %rw = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %page = alloca %struct.page*, align 8
  %buf = alloca i8*, align 8
  %offset = alloca i32, align 4
  %count = alloca i32, align 4
  %consumed = alloca i32, align 4
  %__UNIQUE_ID___x309 = alloca i32, align 4
  %__UNIQUE_ID___y310 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x311 = alloca i32, align 4
  %__UNIQUE_ID___y312 = alloca i32, align 4
  %tmp16 = alloca i32, align 4
  %__UNIQUE_ID___x314 = alloca i32, align 4
  %__UNIQUE_ID___y315 = alloca i32, align 4
  %tmp28 = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !11966, metadata !DIExpression()), !dbg !11967
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !11968, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.declare(metadata i32* %rw, metadata !11970, metadata !DIExpression()), !dbg !11971
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11972
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 4, !dbg !11973
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !11974
  %1 = load i64, i64* %flags, align 8, !dbg !11974
  %and = and i64 %1, 8, !dbg !11975
  %tobool = icmp ne i64 %and, 0, !dbg !11976
  %2 = zext i1 %tobool to i64, !dbg !11976
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !11976
  store i32 %cond, i32* %rw, align 4, !dbg !11971
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11977, metadata !DIExpression()), !dbg !11978
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11979
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %3, i32 0, i32 0, !dbg !11980
  %4 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !11980
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !11978
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11981, metadata !DIExpression()), !dbg !11982
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !11983
  %dev2 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 1, !dbg !11984
  %6 = load %struct.ata_device*, %struct.ata_device** %dev2, align 8, !dbg !11984
  store %struct.ata_device* %6, %struct.ata_device** %dev, align 8, !dbg !11982
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !11985, metadata !DIExpression()), !dbg !11986
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11987
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 0, !dbg !11988
  %8 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !11988
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %8, i32 0, i32 11, !dbg !11989
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !11986
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !11990, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !11992, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !11994, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11996, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11998, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.declare(metadata i32* %consumed, metadata !12000, metadata !DIExpression()), !dbg !12001
  br label %next_sg, !dbg !12002

next_sg:                                          ; preds = %if.then51, %entry
  call void @llvm.dbg.label(metadata !12003), !dbg !12004
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12005
  %cursg = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 18, !dbg !12006
  %10 = load %struct.scatterlist*, %struct.scatterlist** %cursg, align 8, !dbg !12006
  store %struct.scatterlist* %10, %struct.scatterlist** %sg, align 8, !dbg !12007
  %11 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12008
  %tobool3 = icmp ne %struct.scatterlist* %11, null, !dbg !12008
  %lnot = xor i1 %tobool3, true, !dbg !12008
  %lnot4 = xor i1 %lnot, true, !dbg !12008
  %lnot5 = xor i1 %lnot4, true, !dbg !12008
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !12008
  %conv = sext i32 %lnot.ext to i64, !dbg !12008
  %tobool6 = icmp ne i64 %conv, 0, !dbg !12008
  br i1 %tobool6, label %if.then, label %if.end, !dbg !12010

if.then:                                          ; preds = %next_sg
  %12 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !12011
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12013
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 13, !dbg !12014
  %14 = load i32, i32* %nbytes, align 8, !dbg !12014
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12015
  %curbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %15, i32 0, i32 15, !dbg !12016
  %16 = load i32, i32* %curbytes, align 8, !dbg !12016
  %17 = load i32, i32* %bytes.addr, align 4, !dbg !12017
  call void (%struct.ata_eh_info*, i8*, ...) @ata_ehi_push_desc(%struct.ata_eh_info* %12, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i32 %14, i32 %16, i32 %17) #9, !dbg !12018
  store i32 -1, i32* %retval, align 4, !dbg !12019
  br label %return, !dbg !12019

if.end:                                           ; preds = %next_sg
  %18 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12020
  %call = call %struct.page* @sg_page(%struct.scatterlist* %18) #9, !dbg !12021
  store %struct.page* %call, %struct.page** %page, align 8, !dbg !12022
  %19 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12023
  %offset7 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %19, i32 0, i32 1, !dbg !12024
  %20 = load i32, i32* %offset7, align 8, !dbg !12024
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12025
  %cursg_ofs = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %21, i32 0, i32 19, !dbg !12026
  %22 = load i32, i32* %cursg_ofs, align 8, !dbg !12026
  %add = add i32 %20, %22, !dbg !12027
  store i32 %add, i32* %offset, align 4, !dbg !12028
  %23 = load i64, i64* @vmemmap_base, align 8, !dbg !12029
  %24 = inttoptr i64 %23 to %struct.page*, !dbg !12029
  %25 = load %struct.page*, %struct.page** %page, align 8, !dbg !12029
  %26 = load i64, i64* @vmemmap_base, align 8, !dbg !12029
  %27 = inttoptr i64 %26 to %struct.page*, !dbg !12029
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %25 to i64, !dbg !12029
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %27 to i64, !dbg !12029
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12029
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !12029
  %28 = load i32, i32* %offset, align 4, !dbg !12029
  %shr = lshr i32 %28, 12, !dbg !12029
  %conv8 = zext i32 %shr to i64, !dbg !12029
  %add9 = add i64 %sub.ptr.div, %conv8, !dbg !12029
  %add.ptr = getelementptr %struct.page, %struct.page* %24, i64 %add9, !dbg !12029
  store %struct.page* %add.ptr, %struct.page** %page, align 8, !dbg !12030
  %29 = load i32, i32* %offset, align 4, !dbg !12031
  %conv10 = zext i32 %29 to i64, !dbg !12031
  %rem = urem i64 %conv10, 4096, !dbg !12031
  %conv11 = trunc i64 %rem to i32, !dbg !12031
  store i32 %conv11, i32* %offset, align 4, !dbg !12031
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x309, metadata !12032, metadata !DIExpression()), !dbg !12034
  %30 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12034
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %30, i32 0, i32 2, !dbg !12034
  %31 = load i32, i32* %length, align 4, !dbg !12034
  %32 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12034
  %cursg_ofs12 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %32, i32 0, i32 19, !dbg !12034
  %33 = load i32, i32* %cursg_ofs12, align 8, !dbg !12034
  %sub = sub i32 %31, %33, !dbg !12034
  store i32 %sub, i32* %__UNIQUE_ID___x309, align 4, !dbg !12034
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y310, metadata !12035, metadata !DIExpression()), !dbg !12034
  %34 = load i32, i32* %bytes.addr, align 4, !dbg !12034
  store i32 %34, i32* %__UNIQUE_ID___y310, align 4, !dbg !12034
  %35 = load i32, i32* %__UNIQUE_ID___x309, align 4, !dbg !12034
  %36 = load i32, i32* %__UNIQUE_ID___y310, align 4, !dbg !12034
  %cmp = icmp ult i32 %35, %36, !dbg !12034
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12034

cond.true:                                        ; preds = %if.end
  %37 = load i32, i32* %__UNIQUE_ID___x309, align 4, !dbg !12034
  br label %cond.end, !dbg !12034

cond.false:                                       ; preds = %if.end
  %38 = load i32, i32* %__UNIQUE_ID___y310, align 4, !dbg !12034
  br label %cond.end, !dbg !12034

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i32 [ %37, %cond.true ], [ %38, %cond.false ], !dbg !12034
  store i32 %cond14, i32* %tmp, align 4, !dbg !12034
  %39 = load i32, i32* %tmp, align 4, !dbg !12034
  store i32 %39, i32* %count, align 4, !dbg !12036
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x311, metadata !12037, metadata !DIExpression()), !dbg !12039
  %40 = load i32, i32* %count, align 4, !dbg !12039
  store i32 %40, i32* %__UNIQUE_ID___x311, align 4, !dbg !12039
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y312, metadata !12040, metadata !DIExpression()), !dbg !12039
  %41 = load i32, i32* %offset, align 4, !dbg !12039
  %sub15 = sub i32 4096, %41, !dbg !12039
  store i32 %sub15, i32* %__UNIQUE_ID___y312, align 4, !dbg !12039
  %42 = load i32, i32* %__UNIQUE_ID___x311, align 4, !dbg !12039
  %43 = load i32, i32* %__UNIQUE_ID___y312, align 4, !dbg !12039
  %cmp17 = icmp ult i32 %42, %43, !dbg !12039
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !12039

cond.true19:                                      ; preds = %cond.end
  %44 = load i32, i32* %__UNIQUE_ID___x311, align 4, !dbg !12039
  br label %cond.end21, !dbg !12039

cond.false20:                                     ; preds = %cond.end
  %45 = load i32, i32* %__UNIQUE_ID___y312, align 4, !dbg !12039
  br label %cond.end21, !dbg !12039

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi i32 [ %44, %cond.true19 ], [ %45, %cond.false20 ], !dbg !12039
  store i32 %cond22, i32* %tmp16, align 4, !dbg !12039
  %46 = load i32, i32* %tmp16, align 4, !dbg !12039
  store i32 %46, i32* %count, align 4, !dbg !12041
  %47 = load %struct.page*, %struct.page** %page, align 8, !dbg !12042
  %call23 = call i8* @kmap_atomic(%struct.page* %47) #9, !dbg !12043
  store i8* %call23, i8** %buf, align 8, !dbg !12044
  %48 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12045
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %48, i32 0, i32 1, !dbg !12046
  %49 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !12046
  %sff_data_xfer = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %49, i32 0, i32 44, !dbg !12047
  %50 = load i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)** %sff_data_xfer, align 8, !dbg !12047
  %51 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12048
  %52 = load i8*, i8** %buf, align 8, !dbg !12049
  %53 = load i32, i32* %offset, align 4, !dbg !12050
  %idx.ext = zext i32 %53 to i64, !dbg !12051
  %add.ptr24 = getelementptr i8, i8* %52, i64 %idx.ext, !dbg !12051
  %54 = load i32, i32* %count, align 4, !dbg !12052
  %55 = load i32, i32* %rw, align 4, !dbg !12053
  %call25 = call i32 %50(%struct.ata_queued_cmd* %51, i8* %add.ptr24, i32 %54, i32 %55) #9, !dbg !12045
  store i32 %call25, i32* %consumed, align 4, !dbg !12054
  br label %do.body, !dbg !12055

do.body:                                          ; preds = %cond.end21
  br label %do.body26, !dbg !12056

do.body26:                                        ; preds = %do.body
  br label %do.end, !dbg !12058

do.end:                                           ; preds = %do.body26
  %56 = load i8*, i8** %buf, align 8, !dbg !12056
  call void @kunmap_atomic_high(i8* %56) #9, !dbg !12056
  call void @pagefault_enable() #9, !dbg !12056
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12056, !srcloc !12060
  br label %do.end27, !dbg !12056

do.end27:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x314, metadata !12061, metadata !DIExpression()), !dbg !12063
  %57 = load i32, i32* %bytes.addr, align 4, !dbg !12063
  store i32 %57, i32* %__UNIQUE_ID___x314, align 4, !dbg !12063
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y315, metadata !12064, metadata !DIExpression()), !dbg !12063
  %58 = load i32, i32* %consumed, align 4, !dbg !12063
  store i32 %58, i32* %__UNIQUE_ID___y315, align 4, !dbg !12063
  %59 = load i32, i32* %__UNIQUE_ID___x314, align 4, !dbg !12063
  %60 = load i32, i32* %__UNIQUE_ID___y315, align 4, !dbg !12063
  %cmp29 = icmp ult i32 %59, %60, !dbg !12063
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !12063

cond.true31:                                      ; preds = %do.end27
  %61 = load i32, i32* %__UNIQUE_ID___x314, align 4, !dbg !12063
  br label %cond.end33, !dbg !12063

cond.false32:                                     ; preds = %do.end27
  %62 = load i32, i32* %__UNIQUE_ID___y315, align 4, !dbg !12063
  br label %cond.end33, !dbg !12063

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond34 = phi i32 [ %61, %cond.true31 ], [ %62, %cond.false32 ], !dbg !12063
  store i32 %cond34, i32* %tmp28, align 4, !dbg !12063
  %63 = load i32, i32* %tmp28, align 4, !dbg !12063
  %64 = load i32, i32* %bytes.addr, align 4, !dbg !12065
  %sub35 = sub i32 %64, %63, !dbg !12065
  store i32 %sub35, i32* %bytes.addr, align 4, !dbg !12065
  %65 = load i32, i32* %count, align 4, !dbg !12066
  %66 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12067
  %curbytes36 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %66, i32 0, i32 15, !dbg !12068
  %67 = load i32, i32* %curbytes36, align 8, !dbg !12069
  %add37 = add i32 %67, %65, !dbg !12069
  store i32 %add37, i32* %curbytes36, align 8, !dbg !12069
  %68 = load i32, i32* %count, align 4, !dbg !12070
  %69 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12071
  %cursg_ofs38 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %69, i32 0, i32 19, !dbg !12072
  %70 = load i32, i32* %cursg_ofs38, align 8, !dbg !12073
  %add39 = add i32 %70, %68, !dbg !12073
  store i32 %add39, i32* %cursg_ofs38, align 8, !dbg !12073
  %71 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12074
  %cursg_ofs40 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %71, i32 0, i32 19, !dbg !12076
  %72 = load i32, i32* %cursg_ofs40, align 8, !dbg !12076
  %73 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12077
  %length41 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %73, i32 0, i32 2, !dbg !12078
  %74 = load i32, i32* %length41, align 4, !dbg !12078
  %cmp42 = icmp eq i32 %72, %74, !dbg !12079
  br i1 %cmp42, label %if.then44, label %if.end49, !dbg !12080

if.then44:                                        ; preds = %cond.end33
  %75 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12081
  %cursg45 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %75, i32 0, i32 18, !dbg !12083
  %76 = load %struct.scatterlist*, %struct.scatterlist** %cursg45, align 8, !dbg !12083
  %call46 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %76) #9, !dbg !12084
  %77 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12085
  %cursg47 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %77, i32 0, i32 18, !dbg !12086
  store %struct.scatterlist* %call46, %struct.scatterlist** %cursg47, align 8, !dbg !12087
  %78 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !12088
  %cursg_ofs48 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %78, i32 0, i32 19, !dbg !12089
  store i32 0, i32* %cursg_ofs48, align 8, !dbg !12090
  br label %if.end49, !dbg !12091

if.end49:                                         ; preds = %if.then44, %cond.end33
  %79 = load i32, i32* %bytes.addr, align 4, !dbg !12092
  %tobool50 = icmp ne i32 %79, 0, !dbg !12092
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !12094

if.then51:                                        ; preds = %if.end49
  br label %next_sg, !dbg !12095

if.end52:                                         ; preds = %if.end49
  store i32 0, i32* %retval, align 4, !dbg !12096
  br label %return, !dbg !12096

return:                                           ; preds = %if.end52, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !12097
  ret i32 %80, !dbg !12097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ac_err_mask(i8 zeroext %status) #1 !dbg !12098 {
entry:
  %retval = alloca i32, align 4
  %status.addr = alloca i8, align 1
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !12099, metadata !DIExpression()), !dbg !12100
  %0 = load i8, i8* %status.addr, align 1, !dbg !12101
  %conv = zext i8 %0 to i32, !dbg !12101
  %and = and i32 %conv, 136, !dbg !12103
  %tobool = icmp ne i32 %and, 0, !dbg !12103
  br i1 %tobool, label %if.then, label %if.end, !dbg !12104

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12105
  br label %return, !dbg !12105

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %status.addr, align 1, !dbg !12106
  %conv1 = zext i8 %1 to i32, !dbg !12106
  %and2 = and i32 %conv1, 33, !dbg !12108
  %tobool3 = icmp ne i32 %and2, 0, !dbg !12108
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12109

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !12110
  br label %return, !dbg !12110

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12111
  br label %return, !dbg !12111

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !12112
  ret i32 %2, !dbg !12112
}

; Function Attrs: noredzone
declare dso_local void @ata_qc_complete(%struct.ata_queued_cmd*) #0

; Function Attrs: noredzone
declare dso_local i32 @ata_port_freeze(%struct.ata_port*) #0

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #0

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #0

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #1 !dbg !12113 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !12114, metadata !DIExpression()), !dbg !12115
  %0 = load i32, i32* %m.addr, align 4, !dbg !12116
  %conv = zext i32 %0 to i64, !dbg !12116
  %add = add i64 %conv, 4, !dbg !12117
  %sub = sub i64 %add, 1, !dbg !12118
  %div = sdiv i64 %sub, 4, !dbg !12119
  ret i64 %div, !dbg !12120
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #1 !dbg !12121 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12122, metadata !DIExpression()), !dbg !12124
  %0 = load i64, i64* %__edi, align 8, !dbg !12124
  store i64 %0, i64* %__edi, align 8, !dbg !12124
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12125, metadata !DIExpression()), !dbg !12124
  %1 = load i64, i64* %__esi, align 8, !dbg !12124
  store i64 %1, i64* %__esi, align 8, !dbg !12124
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12126, metadata !DIExpression()), !dbg !12124
  %2 = load i64, i64* %__edx, align 8, !dbg !12124
  store i64 %2, i64* %__edx, align 8, !dbg !12124
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12127, metadata !DIExpression()), !dbg !12124
  %3 = load i64, i64* %__ecx, align 8, !dbg !12124
  store i64 %3, i64* %__ecx, align 8, !dbg !12124
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12128, metadata !DIExpression()), !dbg !12124
  %4 = load i64, i64* %__eax, align 8, !dbg !12124
  store i64 %4, i64* %__eax, align 8, !dbg !12124
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !12124
  %6 = call i64 @llvm.read_register.i64(metadata !6672), !dbg !12124
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !12124, !srcloc !12129
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12124
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12124
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12124
  call void @llvm.write_register.i64(metadata !6672, i64 %asmresult1), !dbg !12124
  ret void, !dbg !12130
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #1 !dbg !12131 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12132, metadata !DIExpression()), !dbg !12134
  %0 = load i64, i64* %__edi, align 8, !dbg !12134
  store i64 %0, i64* %__edi, align 8, !dbg !12134
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12135, metadata !DIExpression()), !dbg !12134
  %1 = load i64, i64* %__esi, align 8, !dbg !12134
  store i64 %1, i64* %__esi, align 8, !dbg !12134
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12136, metadata !DIExpression()), !dbg !12134
  %2 = load i64, i64* %__edx, align 8, !dbg !12134
  store i64 %2, i64* %__edx, align 8, !dbg !12134
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12137, metadata !DIExpression()), !dbg !12134
  %3 = load i64, i64* %__ecx, align 8, !dbg !12134
  store i64 %3, i64* %__ecx, align 8, !dbg !12134
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12138, metadata !DIExpression()), !dbg !12134
  %4 = load i64, i64* %__eax, align 8, !dbg !12134
  store i64 %4, i64* %__eax, align 8, !dbg !12134
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !12134
  %6 = call i64 @llvm.read_register.i64(metadata !6672), !dbg !12134
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #8, !dbg !12134, !srcloc !12139
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12134
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12134
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12134
  call void @llvm.write_register.i64(metadata !6672, i64 %asmresult1), !dbg !12134
  ret void, !dbg !12140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @ata_sff_irq_status(%struct.ata_port* %ap) #1 !dbg !12141 {
entry:
  %retval = alloca i8, align 1
  %ap.addr = alloca %struct.ata_port*, align 8
  %status = alloca i8, align 1
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12142, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.declare(metadata i8* %status, metadata !12144, metadata !DIExpression()), !dbg !12145
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12146
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !12148
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !12148
  %sff_check_altstatus = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 40, !dbg !12149
  %2 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_altstatus, align 8, !dbg !12149
  %tobool = icmp ne i8 (%struct.ata_port*)* %2, null, !dbg !12146
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !12150

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12151
  %ioaddr = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 8, !dbg !12152
  %altstatus_addr = getelementptr inbounds %struct.ata_ioports, %struct.ata_ioports* %ioaddr, i32 0, i32 11, !dbg !12153
  %4 = load i8*, i8** %altstatus_addr, align 8, !dbg !12153
  %tobool1 = icmp ne i8* %4, null, !dbg !12151
  br i1 %tobool1, label %if.then, label %if.end4, !dbg !12154

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12155
  %call = call zeroext i8 @ata_sff_altstatus(%struct.ata_port* %5) #9, !dbg !12157
  store i8 %call, i8* %status, align 1, !dbg !12158
  %6 = load i8, i8* %status, align 1, !dbg !12159
  %conv = zext i8 %6 to i32, !dbg !12159
  %and = and i32 %conv, 128, !dbg !12161
  %tobool2 = icmp ne i32 %and, 0, !dbg !12161
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !12162

if.then3:                                         ; preds = %if.then
  %7 = load i8, i8* %status, align 1, !dbg !12163
  store i8 %7, i8* %retval, align 1, !dbg !12164
  br label %return, !dbg !12164

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !12165

if.end4:                                          ; preds = %if.end, %lor.lhs.false
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12166
  %ops5 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 1, !dbg !12167
  %9 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops5, align 8, !dbg !12167
  %sff_check_status = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %9, i32 0, i32 39, !dbg !12168
  %10 = load i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)** %sff_check_status, align 8, !dbg !12168
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12169
  %call6 = call zeroext i8 %10(%struct.ata_port* %11) #9, !dbg !12166
  store i8 %call6, i8* %status, align 1, !dbg !12170
  %12 = load i8, i8* %status, align 1, !dbg !12171
  store i8 %12, i8* %retval, align 1, !dbg !12172
  br label %return, !dbg !12172

return:                                           ; preds = %if.end4, %if.then3
  %13 = load i8, i8* %retval, align 1, !dbg !12173
  ret i8 %13, !dbg !12173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_valid(i32 %tag) #1 !dbg !12174 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !12177, metadata !DIExpression()), !dbg !12178
  %0 = load i32, i32* %tag.addr, align 4, !dbg !12179
  %cmp = icmp ult i32 %0, 32, !dbg !12180
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !12181

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %tag.addr, align 4, !dbg !12182
  %call = call zeroext i1 @ata_tag_internal(i32 %1) #9, !dbg !12183
  br label %lor.end, !dbg !12181

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %2, !dbg !12184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_internal(i32 %tag) #1 !dbg !12185 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !12186, metadata !DIExpression()), !dbg !12187
  %0 = load i32, i32* %tag.addr, align 4, !dbg !12188
  %cmp = icmp eq i32 %0, 32, !dbg !12189
  ret i1 %cmp, !dbg !12190
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #1 !dbg !12191 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !12192, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12195, metadata !DIExpression()), !dbg !12194
  %0 = load i64, i64* %__edi, align 8, !dbg !12194
  store i64 %0, i64* %__edi, align 8, !dbg !12194
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12196, metadata !DIExpression()), !dbg !12194
  %1 = load i64, i64* %__esi, align 8, !dbg !12194
  store i64 %1, i64* %__esi, align 8, !dbg !12194
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12197, metadata !DIExpression()), !dbg !12194
  %2 = load i64, i64* %__edx, align 8, !dbg !12194
  store i64 %2, i64* %__edx, align 8, !dbg !12194
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12198, metadata !DIExpression()), !dbg !12194
  %3 = load i64, i64* %__ecx, align 8, !dbg !12194
  store i64 %3, i64* %__ecx, align 8, !dbg !12194
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12199, metadata !DIExpression()), !dbg !12194
  %4 = load i64, i64* %__eax, align 8, !dbg !12194
  store i64 %4, i64* %__eax, align 8, !dbg !12194
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !12194
  %6 = call i64 @llvm.read_register.i64(metadata !6672), !dbg !12200
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !12200, !srcloc !12203
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12200
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12200
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12200
  call void @llvm.write_register.i64(metadata !6672, i64 %asmresult1), !dbg !12200
  %8 = load i64, i64* %__eax, align 8, !dbg !12200
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !12204, metadata !DIExpression()), !dbg !12206
  store i64 -1, i64* %__mask, align 8, !dbg !12206
  %9 = load i64, i64* %__mask, align 8, !dbg !12206
  store i64 %9, i64* %tmp, align 8, !dbg !12206
  %10 = load i64, i64* %tmp, align 8, !dbg !12206
  %and = and i64 %8, %10, !dbg !12200
  store i64 %and, i64* %__ret, align 8, !dbg !12200
  %11 = load i64, i64* %__ret, align 8, !dbg !12194
  store i64 %11, i64* %tmp2, align 8, !dbg !12207
  %12 = load i64, i64* %tmp2, align 8, !dbg !12194
  ret i64 %12, !dbg !12208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #1 !dbg !12209 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !12212, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12214, metadata !DIExpression()), !dbg !12216
  %0 = load i64, i64* %__edi, align 8, !dbg !12216
  store i64 %0, i64* %__edi, align 8, !dbg !12216
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12217, metadata !DIExpression()), !dbg !12216
  %1 = load i64, i64* %__esi, align 8, !dbg !12216
  store i64 %1, i64* %__esi, align 8, !dbg !12216
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12218, metadata !DIExpression()), !dbg !12216
  %2 = load i64, i64* %__edx, align 8, !dbg !12216
  store i64 %2, i64* %__edx, align 8, !dbg !12216
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12219, metadata !DIExpression()), !dbg !12216
  %3 = load i64, i64* %__ecx, align 8, !dbg !12216
  store i64 %3, i64* %__ecx, align 8, !dbg !12216
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12220, metadata !DIExpression()), !dbg !12216
  %4 = load i64, i64* %__eax, align 8, !dbg !12216
  store i64 %4, i64* %__eax, align 8, !dbg !12216
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !12216
  %6 = call i64 @llvm.read_register.i64(metadata !6672), !dbg !12216
  %7 = load i64, i64* %f.addr, align 8, !dbg !12216
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !12216, !srcloc !12221
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !12216
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !12216
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12216
  call void @llvm.write_register.i64(metadata !6672, i64 %asmresult1), !dbg !12216
  ret void, !dbg !12222
}

; Function Attrs: noredzone
declare dso_local i32 @devm_request_threaded_irq(%struct.device*, i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #0

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_port_info* @ata_sff_find_valid_pi(%struct.ata_port_info** %ppi) #1 !dbg !12223 {
entry:
  %retval = alloca %struct.ata_port_info*, align 8
  %ppi.addr = alloca %struct.ata_port_info**, align 8
  %i = alloca i32, align 4
  store %struct.ata_port_info** %ppi, %struct.ata_port_info*** %ppi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port_info*** %ppi.addr, metadata !12226, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12228, metadata !DIExpression()), !dbg !12229
  store i32 0, i32* %i, align 4, !dbg !12230
  br label %for.cond, !dbg !12232

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12233
  %cmp = icmp slt i32 %0, 2, !dbg !12235
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12236

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !12237
  %2 = load i32, i32* %i, align 4, !dbg !12238
  %idxprom = sext i32 %2 to i64, !dbg !12237
  %arrayidx = getelementptr %struct.ata_port_info*, %struct.ata_port_info** %1, i64 %idxprom, !dbg !12237
  %3 = load %struct.ata_port_info*, %struct.ata_port_info** %arrayidx, align 8, !dbg !12237
  %tobool = icmp ne %struct.ata_port_info* %3, null, !dbg !12236
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !12239
  br i1 %4, label %for.body, label %for.end, !dbg !12240

for.body:                                         ; preds = %land.end
  %5 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !12241
  %6 = load i32, i32* %i, align 4, !dbg !12243
  %idxprom1 = sext i32 %6 to i64, !dbg !12241
  %arrayidx2 = getelementptr %struct.ata_port_info*, %struct.ata_port_info** %5, i64 %idxprom1, !dbg !12241
  %7 = load %struct.ata_port_info*, %struct.ata_port_info** %arrayidx2, align 8, !dbg !12241
  %port_ops = getelementptr inbounds %struct.ata_port_info, %struct.ata_port_info* %7, i32 0, i32 5, !dbg !12244
  %8 = load %struct.ata_port_operations*, %struct.ata_port_operations** %port_ops, align 8, !dbg !12244
  %cmp3 = icmp ne %struct.ata_port_operations* %8, @ata_dummy_port_ops, !dbg !12245
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12246

if.then:                                          ; preds = %for.body
  %9 = load %struct.ata_port_info**, %struct.ata_port_info*** %ppi.addr, align 8, !dbg !12247
  %10 = load i32, i32* %i, align 4, !dbg !12248
  %idxprom4 = sext i32 %10 to i64, !dbg !12247
  %arrayidx5 = getelementptr %struct.ata_port_info*, %struct.ata_port_info** %9, i64 %idxprom4, !dbg !12247
  %11 = load %struct.ata_port_info*, %struct.ata_port_info** %arrayidx5, align 8, !dbg !12247
  store %struct.ata_port_info* %11, %struct.ata_port_info** %retval, align 8, !dbg !12249
  br label %return, !dbg !12249

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12250

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !12251
  %inc = add i32 %12, 1, !dbg !12251
  store i32 %inc, i32* %i, align 4, !dbg !12251
  br label %for.cond, !dbg !12252, !llvm.loop !12253

for.end:                                          ; preds = %land.end
  store %struct.ata_port_info* null, %struct.ata_port_info** %retval, align 8, !dbg !12255
  br label %return, !dbg !12255

return:                                           ; preds = %for.end, %if.then
  %13 = load %struct.ata_port_info*, %struct.ata_port_info** %retval, align 8, !dbg !12256
  ret %struct.ata_port_info* %13, !dbg !12256
}

; Function Attrs: noredzone
declare dso_local i32 @pcim_enable_device(%struct.pci_dev*) #0

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #0

; Function Attrs: noredzone
declare dso_local i8* @dmam_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #0

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #0

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #0

attributes #0 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noredzone }
attributes #10 = { noredzone nounwind }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6672}
!llvm.module.flags = !{!6673, !6674, !6675, !6676}
!llvm.ident = !{!6677}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ata_sff_port_ops", scope: !2, file: !3, line: 26, type: !6571, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !967, globals: !6665, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/ata/libata-sff.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !20, !28, !34, !40, !46, !53, !61, !67, !81, !87, !94, !98, !110, !115, !122, !129, !135, !141, !151, !160, !174, !179, !592, !829, !836, !851, !856, !866, !872, !879, !912, !928}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !12, line: 296, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17, !18, !19}
!14 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !21, line: 9, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !29, line: 54, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33}
!31 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !35, line: 26, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !41, line: 44, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45}
!43 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !47, line: 343, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!48 = !{!49, !50, !51, !52}
!49 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !54, line: 524, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58, !59, !60}
!56 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !54, line: 502, baseType: !7, size: 32, elements: !62)
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !68, line: 76, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80}
!70 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!73 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!74 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!75 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!76 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!77 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!78 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!79 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!80 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !82, line: 118, baseType: !7, size: 32, elements: !83)
!82 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!83 = !{!84, !85, !86}
!84 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !88, line: 19, baseType: !7, size: 32, elements: !89)
!88 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!89 = !{!90, !91, !92, !93}
!90 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !82, line: 293, baseType: !7, size: 32, elements: !95)
!95 = !{!96, !97}
!96 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !99, line: 49, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!100 = !{!101, !102, !103, !104, !105, !106, !107, !108, !109}
!101 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!107 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!108 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!109 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !82, line: 315, baseType: !7, size: 32, elements: !111)
!111 = !{!112, !113, !114}
!112 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !116, line: 15, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120, !121}
!118 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !123, line: 59, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!124 = !{!125, !126, !127, !128}
!125 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!127 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!128 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !130, line: 546, baseType: !7, size: 32, elements: !131)
!130 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!131 = !{!132, !133, !134}
!132 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !136, line: 16, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139, !140}
!138 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !142, line: 514, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!143 = !{!144, !145, !146, !147, !148, !149, !150}
!144 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!145 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!146 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!147 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!148 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!149 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!150 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_lpm_policy", file: !152, line: 506, baseType: !7, size: 32, elements: !153)
!152 = !DIFile(filename: "./include/linux/libata.h", directory: "/home/lizy2001/genbc/linux")
!153 = !{!154, !155, !156, !157, !158, !159}
!154 = !DIEnumerator(name: "ATA_LPM_UNKNOWN", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "ATA_LPM_MAX_POWER", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "ATA_LPM_MED_POWER", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "ATA_LPM_MED_POWER_WITH_DIPM", value: 3, isUnsigned: true)
!158 = !DIEnumerator(name: "ATA_LPM_MIN_POWER_WITH_PARTIAL", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "ATA_LPM_MIN_POWER", value: 5, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_completion_errors", file: !152, line: 487, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173}
!162 = !DIEnumerator(name: "AC_ERR_OK", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "AC_ERR_DEV", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "AC_ERR_HSM", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "AC_ERR_TIMEOUT", value: 4, isUnsigned: true)
!166 = !DIEnumerator(name: "AC_ERR_MEDIA", value: 8, isUnsigned: true)
!167 = !DIEnumerator(name: "AC_ERR_ATA_BUS", value: 16, isUnsigned: true)
!168 = !DIEnumerator(name: "AC_ERR_HOST_BUS", value: 32, isUnsigned: true)
!169 = !DIEnumerator(name: "AC_ERR_SYSTEM", value: 64, isUnsigned: true)
!170 = !DIEnumerator(name: "AC_ERR_INVALID", value: 128, isUnsigned: true)
!171 = !DIEnumerator(name: "AC_ERR_OTHER", value: 256, isUnsigned: true)
!172 = !DIEnumerator(name: "AC_ERR_NODEV_HINT", value: 512, isUnsigned: true)
!173 = !DIEnumerator(name: "AC_ERR_NCQ", value: 1024, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sw_activity", file: !152, line: 544, baseType: !7, size: 32, elements: !175)
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "OFF", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "BLINK_ON", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "BLINK_OFF", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !180, line: 25, baseType: !181, size: 32, elements: !182)
!180 = !DIFile(filename: "./include/linux/ata.h", directory: "/home/lizy2001/genbc/linux")
!181 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!182 = !{!183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591}
!183 = !DIEnumerator(name: "ATA_MAX_DEVICES", value: 2)
!184 = !DIEnumerator(name: "ATA_MAX_PRD", value: 256)
!185 = !DIEnumerator(name: "ATA_SECT_SIZE", value: 512)
!186 = !DIEnumerator(name: "ATA_MAX_SECTORS_128", value: 128)
!187 = !DIEnumerator(name: "ATA_MAX_SECTORS", value: 256)
!188 = !DIEnumerator(name: "ATA_MAX_SECTORS_1024", value: 1024)
!189 = !DIEnumerator(name: "ATA_MAX_SECTORS_LBA48", value: 65535)
!190 = !DIEnumerator(name: "ATA_MAX_SECTORS_TAPE", value: 65535)
!191 = !DIEnumerator(name: "ATA_MAX_TRIM_RNUM", value: 64)
!192 = !DIEnumerator(name: "ATA_ID_WORDS", value: 256)
!193 = !DIEnumerator(name: "ATA_ID_CONFIG", value: 0)
!194 = !DIEnumerator(name: "ATA_ID_CYLS", value: 1)
!195 = !DIEnumerator(name: "ATA_ID_HEADS", value: 3)
!196 = !DIEnumerator(name: "ATA_ID_SECTORS", value: 6)
!197 = !DIEnumerator(name: "ATA_ID_SERNO", value: 10)
!198 = !DIEnumerator(name: "ATA_ID_BUF_SIZE", value: 21)
!199 = !DIEnumerator(name: "ATA_ID_FW_REV", value: 23)
!200 = !DIEnumerator(name: "ATA_ID_PROD", value: 27)
!201 = !DIEnumerator(name: "ATA_ID_MAX_MULTSECT", value: 47)
!202 = !DIEnumerator(name: "ATA_ID_DWORD_IO", value: 48)
!203 = !DIEnumerator(name: "ATA_ID_TRUSTED", value: 48)
!204 = !DIEnumerator(name: "ATA_ID_CAPABILITY", value: 49)
!205 = !DIEnumerator(name: "ATA_ID_OLD_PIO_MODES", value: 51)
!206 = !DIEnumerator(name: "ATA_ID_OLD_DMA_MODES", value: 52)
!207 = !DIEnumerator(name: "ATA_ID_FIELD_VALID", value: 53)
!208 = !DIEnumerator(name: "ATA_ID_CUR_CYLS", value: 54)
!209 = !DIEnumerator(name: "ATA_ID_CUR_HEADS", value: 55)
!210 = !DIEnumerator(name: "ATA_ID_CUR_SECTORS", value: 56)
!211 = !DIEnumerator(name: "ATA_ID_MULTSECT", value: 59)
!212 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY", value: 60)
!213 = !DIEnumerator(name: "ATA_ID_SWDMA_MODES", value: 62)
!214 = !DIEnumerator(name: "ATA_ID_MWDMA_MODES", value: 63)
!215 = !DIEnumerator(name: "ATA_ID_PIO_MODES", value: 64)
!216 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_MIN", value: 65)
!217 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_TIME", value: 66)
!218 = !DIEnumerator(name: "ATA_ID_EIDE_PIO", value: 67)
!219 = !DIEnumerator(name: "ATA_ID_EIDE_PIO_IORDY", value: 68)
!220 = !DIEnumerator(name: "ATA_ID_ADDITIONAL_SUPP", value: 69)
!221 = !DIEnumerator(name: "ATA_ID_QUEUE_DEPTH", value: 75)
!222 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY", value: 76)
!223 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY_2", value: 77)
!224 = !DIEnumerator(name: "ATA_ID_FEATURE_SUPP", value: 78)
!225 = !DIEnumerator(name: "ATA_ID_MAJOR_VER", value: 80)
!226 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_1", value: 82)
!227 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_2", value: 83)
!228 = !DIEnumerator(name: "ATA_ID_CFSSE", value: 84)
!229 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_1", value: 85)
!230 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_2", value: 86)
!231 = !DIEnumerator(name: "ATA_ID_CSF_DEFAULT", value: 87)
!232 = !DIEnumerator(name: "ATA_ID_UDMA_MODES", value: 88)
!233 = !DIEnumerator(name: "ATA_ID_HW_CONFIG", value: 93)
!234 = !DIEnumerator(name: "ATA_ID_SPG", value: 98)
!235 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY_2", value: 100)
!236 = !DIEnumerator(name: "ATA_ID_SECTOR_SIZE", value: 106)
!237 = !DIEnumerator(name: "ATA_ID_WWN", value: 108)
!238 = !DIEnumerator(name: "ATA_ID_LOGICAL_SECTOR_SIZE", value: 117)
!239 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_3", value: 119)
!240 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_4", value: 120)
!241 = !DIEnumerator(name: "ATA_ID_LAST_LUN", value: 126)
!242 = !DIEnumerator(name: "ATA_ID_DLF", value: 128)
!243 = !DIEnumerator(name: "ATA_ID_CSFO", value: 129)
!244 = !DIEnumerator(name: "ATA_ID_CFA_POWER", value: 160)
!245 = !DIEnumerator(name: "ATA_ID_CFA_KEY_MGMT", value: 162)
!246 = !DIEnumerator(name: "ATA_ID_CFA_MODES", value: 163)
!247 = !DIEnumerator(name: "ATA_ID_DATA_SET_MGMT", value: 169)
!248 = !DIEnumerator(name: "ATA_ID_SCT_CMD_XPORT", value: 206)
!249 = !DIEnumerator(name: "ATA_ID_ROT_SPEED", value: 217)
!250 = !DIEnumerator(name: "ATA_ID_PIO4", value: 2)
!251 = !DIEnumerator(name: "ATA_ID_SERNO_LEN", value: 20)
!252 = !DIEnumerator(name: "ATA_ID_FW_REV_LEN", value: 8)
!253 = !DIEnumerator(name: "ATA_ID_PROD_LEN", value: 40)
!254 = !DIEnumerator(name: "ATA_ID_WWN_LEN", value: 8)
!255 = !DIEnumerator(name: "ATA_PCI_CTL_OFS", value: 2)
!256 = !DIEnumerator(name: "ATA_PIO0", value: 1)
!257 = !DIEnumerator(name: "ATA_PIO1", value: 3)
!258 = !DIEnumerator(name: "ATA_PIO2", value: 7)
!259 = !DIEnumerator(name: "ATA_PIO3", value: 15)
!260 = !DIEnumerator(name: "ATA_PIO4", value: 31)
!261 = !DIEnumerator(name: "ATA_PIO5", value: 63)
!262 = !DIEnumerator(name: "ATA_PIO6", value: 127)
!263 = !DIEnumerator(name: "ATA_PIO4_ONLY", value: 16)
!264 = !DIEnumerator(name: "ATA_SWDMA0", value: 1)
!265 = !DIEnumerator(name: "ATA_SWDMA1", value: 3)
!266 = !DIEnumerator(name: "ATA_SWDMA2", value: 7)
!267 = !DIEnumerator(name: "ATA_SWDMA2_ONLY", value: 4)
!268 = !DIEnumerator(name: "ATA_MWDMA0", value: 1)
!269 = !DIEnumerator(name: "ATA_MWDMA1", value: 3)
!270 = !DIEnumerator(name: "ATA_MWDMA2", value: 7)
!271 = !DIEnumerator(name: "ATA_MWDMA3", value: 15)
!272 = !DIEnumerator(name: "ATA_MWDMA4", value: 31)
!273 = !DIEnumerator(name: "ATA_MWDMA12_ONLY", value: 6)
!274 = !DIEnumerator(name: "ATA_MWDMA2_ONLY", value: 4)
!275 = !DIEnumerator(name: "ATA_UDMA0", value: 1)
!276 = !DIEnumerator(name: "ATA_UDMA1", value: 3)
!277 = !DIEnumerator(name: "ATA_UDMA2", value: 7)
!278 = !DIEnumerator(name: "ATA_UDMA3", value: 15)
!279 = !DIEnumerator(name: "ATA_UDMA4", value: 31)
!280 = !DIEnumerator(name: "ATA_UDMA5", value: 63)
!281 = !DIEnumerator(name: "ATA_UDMA6", value: 127)
!282 = !DIEnumerator(name: "ATA_UDMA7", value: 255)
!283 = !DIEnumerator(name: "ATA_UDMA24_ONLY", value: 20)
!284 = !DIEnumerator(name: "ATA_UDMA_MASK_40C", value: 7)
!285 = !DIEnumerator(name: "ATA_PRD_SZ", value: 8)
!286 = !DIEnumerator(name: "ATA_PRD_TBL_SZ", value: 2048)
!287 = !DIEnumerator(name: "ATA_PRD_EOT", value: -2147483648)
!288 = !DIEnumerator(name: "ATA_DMA_TABLE_OFS", value: 4)
!289 = !DIEnumerator(name: "ATA_DMA_STATUS", value: 2)
!290 = !DIEnumerator(name: "ATA_DMA_CMD", value: 0)
!291 = !DIEnumerator(name: "ATA_DMA_WR", value: 8)
!292 = !DIEnumerator(name: "ATA_DMA_START", value: 1)
!293 = !DIEnumerator(name: "ATA_DMA_INTR", value: 4)
!294 = !DIEnumerator(name: "ATA_DMA_ERR", value: 2)
!295 = !DIEnumerator(name: "ATA_DMA_ACTIVE", value: 1)
!296 = !DIEnumerator(name: "ATA_HOB", value: 128)
!297 = !DIEnumerator(name: "ATA_NIEN", value: 2)
!298 = !DIEnumerator(name: "ATA_LBA", value: 64)
!299 = !DIEnumerator(name: "ATA_DEV1", value: 16)
!300 = !DIEnumerator(name: "ATA_DEVICE_OBS", value: 160)
!301 = !DIEnumerator(name: "ATA_DEVCTL_OBS", value: 8)
!302 = !DIEnumerator(name: "ATA_BUSY", value: 128)
!303 = !DIEnumerator(name: "ATA_DRDY", value: 64)
!304 = !DIEnumerator(name: "ATA_DF", value: 32)
!305 = !DIEnumerator(name: "ATA_DSC", value: 16)
!306 = !DIEnumerator(name: "ATA_DRQ", value: 8)
!307 = !DIEnumerator(name: "ATA_CORR", value: 4)
!308 = !DIEnumerator(name: "ATA_SENSE", value: 2)
!309 = !DIEnumerator(name: "ATA_ERR", value: 1)
!310 = !DIEnumerator(name: "ATA_SRST", value: 4)
!311 = !DIEnumerator(name: "ATA_ICRC", value: 128)
!312 = !DIEnumerator(name: "ATA_BBK", value: 128)
!313 = !DIEnumerator(name: "ATA_UNC", value: 64)
!314 = !DIEnumerator(name: "ATA_MC", value: 32)
!315 = !DIEnumerator(name: "ATA_IDNF", value: 16)
!316 = !DIEnumerator(name: "ATA_MCR", value: 8)
!317 = !DIEnumerator(name: "ATA_ABORTED", value: 4)
!318 = !DIEnumerator(name: "ATA_TRK0NF", value: 2)
!319 = !DIEnumerator(name: "ATA_AMNF", value: 1)
!320 = !DIEnumerator(name: "ATAPI_LFS", value: 240)
!321 = !DIEnumerator(name: "ATAPI_EOM", value: 2)
!322 = !DIEnumerator(name: "ATAPI_ILI", value: 1)
!323 = !DIEnumerator(name: "ATAPI_IO", value: 2)
!324 = !DIEnumerator(name: "ATAPI_COD", value: 1)
!325 = !DIEnumerator(name: "ATA_REG_DATA", value: 0)
!326 = !DIEnumerator(name: "ATA_REG_ERR", value: 1)
!327 = !DIEnumerator(name: "ATA_REG_NSECT", value: 2)
!328 = !DIEnumerator(name: "ATA_REG_LBAL", value: 3)
!329 = !DIEnumerator(name: "ATA_REG_LBAM", value: 4)
!330 = !DIEnumerator(name: "ATA_REG_LBAH", value: 5)
!331 = !DIEnumerator(name: "ATA_REG_DEVICE", value: 6)
!332 = !DIEnumerator(name: "ATA_REG_STATUS", value: 7)
!333 = !DIEnumerator(name: "ATA_REG_FEATURE", value: 1)
!334 = !DIEnumerator(name: "ATA_REG_CMD", value: 7)
!335 = !DIEnumerator(name: "ATA_REG_BYTEL", value: 4)
!336 = !DIEnumerator(name: "ATA_REG_BYTEH", value: 5)
!337 = !DIEnumerator(name: "ATA_REG_DEVSEL", value: 6)
!338 = !DIEnumerator(name: "ATA_REG_IRQ", value: 2)
!339 = !DIEnumerator(name: "ATA_CMD_DEV_RESET", value: 8)
!340 = !DIEnumerator(name: "ATA_CMD_CHK_POWER", value: 229)
!341 = !DIEnumerator(name: "ATA_CMD_STANDBY", value: 226)
!342 = !DIEnumerator(name: "ATA_CMD_IDLE", value: 227)
!343 = !DIEnumerator(name: "ATA_CMD_EDD", value: 144)
!344 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO", value: 146)
!345 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO_DMA", value: 147)
!346 = !DIEnumerator(name: "ATA_CMD_NOP", value: 0)
!347 = !DIEnumerator(name: "ATA_CMD_FLUSH", value: 231)
!348 = !DIEnumerator(name: "ATA_CMD_FLUSH_EXT", value: 234)
!349 = !DIEnumerator(name: "ATA_CMD_ID_ATA", value: 236)
!350 = !DIEnumerator(name: "ATA_CMD_ID_ATAPI", value: 161)
!351 = !DIEnumerator(name: "ATA_CMD_SERVICE", value: 162)
!352 = !DIEnumerator(name: "ATA_CMD_READ", value: 200)
!353 = !DIEnumerator(name: "ATA_CMD_READ_EXT", value: 37)
!354 = !DIEnumerator(name: "ATA_CMD_READ_QUEUED", value: 38)
!355 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_EXT", value: 43)
!356 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_DMA_EXT", value: 42)
!357 = !DIEnumerator(name: "ATA_CMD_WRITE", value: 202)
!358 = !DIEnumerator(name: "ATA_CMD_WRITE_EXT", value: 53)
!359 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED", value: 54)
!360 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_EXT", value: 59)
!361 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_DMA_EXT", value: 58)
!362 = !DIEnumerator(name: "ATA_CMD_WRITE_FUA_EXT", value: 61)
!363 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED_FUA_EXT", value: 62)
!364 = !DIEnumerator(name: "ATA_CMD_FPDMA_READ", value: 96)
!365 = !DIEnumerator(name: "ATA_CMD_FPDMA_WRITE", value: 97)
!366 = !DIEnumerator(name: "ATA_CMD_NCQ_NON_DATA", value: 99)
!367 = !DIEnumerator(name: "ATA_CMD_FPDMA_SEND", value: 100)
!368 = !DIEnumerator(name: "ATA_CMD_FPDMA_RECV", value: 101)
!369 = !DIEnumerator(name: "ATA_CMD_PIO_READ", value: 32)
!370 = !DIEnumerator(name: "ATA_CMD_PIO_READ_EXT", value: 36)
!371 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE", value: 48)
!372 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE_EXT", value: 52)
!373 = !DIEnumerator(name: "ATA_CMD_READ_MULTI", value: 196)
!374 = !DIEnumerator(name: "ATA_CMD_READ_MULTI_EXT", value: 41)
!375 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI", value: 197)
!376 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_EXT", value: 57)
!377 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_FUA_EXT", value: 206)
!378 = !DIEnumerator(name: "ATA_CMD_SET_FEATURES", value: 239)
!379 = !DIEnumerator(name: "ATA_CMD_SET_MULTI", value: 198)
!380 = !DIEnumerator(name: "ATA_CMD_PACKET", value: 160)
!381 = !DIEnumerator(name: "ATA_CMD_VERIFY", value: 64)
!382 = !DIEnumerator(name: "ATA_CMD_VERIFY_EXT", value: 66)
!383 = !DIEnumerator(name: "ATA_CMD_WRITE_UNCORR_EXT", value: 69)
!384 = !DIEnumerator(name: "ATA_CMD_STANDBYNOW1", value: 224)
!385 = !DIEnumerator(name: "ATA_CMD_IDLEIMMEDIATE", value: 225)
!386 = !DIEnumerator(name: "ATA_CMD_SLEEP", value: 230)
!387 = !DIEnumerator(name: "ATA_CMD_INIT_DEV_PARAMS", value: 145)
!388 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX", value: 248)
!389 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX_EXT", value: 39)
!390 = !DIEnumerator(name: "ATA_CMD_SET_MAX", value: 249)
!391 = !DIEnumerator(name: "ATA_CMD_SET_MAX_EXT", value: 55)
!392 = !DIEnumerator(name: "ATA_CMD_READ_LOG_EXT", value: 47)
!393 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_EXT", value: 63)
!394 = !DIEnumerator(name: "ATA_CMD_READ_LOG_DMA_EXT", value: 71)
!395 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_DMA_EXT", value: 87)
!396 = !DIEnumerator(name: "ATA_CMD_TRUSTED_NONDATA", value: 91)
!397 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV", value: 92)
!398 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV_DMA", value: 93)
!399 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND", value: 94)
!400 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND_DMA", value: 95)
!401 = !DIEnumerator(name: "ATA_CMD_PMP_READ", value: 228)
!402 = !DIEnumerator(name: "ATA_CMD_PMP_READ_DMA", value: 233)
!403 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE", value: 232)
!404 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE_DMA", value: 235)
!405 = !DIEnumerator(name: "ATA_CMD_CONF_OVERLAY", value: 177)
!406 = !DIEnumerator(name: "ATA_CMD_SEC_SET_PASS", value: 241)
!407 = !DIEnumerator(name: "ATA_CMD_SEC_UNLOCK", value: 242)
!408 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_PREP", value: 243)
!409 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_UNIT", value: 244)
!410 = !DIEnumerator(name: "ATA_CMD_SEC_FREEZE_LOCK", value: 245)
!411 = !DIEnumerator(name: "ATA_CMD_SEC_DISABLE_PASS", value: 246)
!412 = !DIEnumerator(name: "ATA_CMD_CONFIG_STREAM", value: 81)
!413 = !DIEnumerator(name: "ATA_CMD_SMART", value: 176)
!414 = !DIEnumerator(name: "ATA_CMD_MEDIA_LOCK", value: 222)
!415 = !DIEnumerator(name: "ATA_CMD_MEDIA_UNLOCK", value: 223)
!416 = !DIEnumerator(name: "ATA_CMD_DSM", value: 6)
!417 = !DIEnumerator(name: "ATA_CMD_CHK_MED_CRD_TYP", value: 209)
!418 = !DIEnumerator(name: "ATA_CMD_CFA_REQ_EXT_ERR", value: 3)
!419 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_NE", value: 56)
!420 = !DIEnumerator(name: "ATA_CMD_CFA_TRANS_SECT", value: 135)
!421 = !DIEnumerator(name: "ATA_CMD_CFA_ERASE", value: 192)
!422 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_MULT_NE", value: 205)
!423 = !DIEnumerator(name: "ATA_CMD_REQ_SENSE_DATA", value: 11)
!424 = !DIEnumerator(name: "ATA_CMD_SANITIZE_DEVICE", value: 180)
!425 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_IN", value: 74)
!426 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_OUT", value: 159)
!427 = !DIEnumerator(name: "ATA_CMD_RESTORE", value: 16)
!428 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_RD_LOG_DMA_EXT", value: 1)
!429 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_ZAC_MGMT_IN", value: 2)
!430 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_DSM", value: 0)
!431 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_WR_LOG_DMA_EXT", value: 2)
!432 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ABORT_QUEUE", value: 0)
!433 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_SET_FEATURES", value: 5)
!434 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZERO_EXT", value: 6)
!435 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 7)
!436 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_IN_REPORT_ZONES", value: 0)
!437 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_CLOSE_ZONE", value: 1)
!438 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_FINISH_ZONE", value: 2)
!439 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_OPEN_ZONE", value: 3)
!440 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_RESET_WRITE_POINTER", value: 4)
!441 = !DIEnumerator(name: "ATA_LOG_DIRECTORY", value: 0)
!442 = !DIEnumerator(name: "ATA_LOG_SATA_NCQ", value: 16)
!443 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA", value: 18)
!444 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV", value: 19)
!445 = !DIEnumerator(name: "ATA_LOG_IDENTIFY_DEVICE", value: 48)
!446 = !DIEnumerator(name: "ATA_LOG_SECURITY", value: 6)
!447 = !DIEnumerator(name: "ATA_LOG_SATA_SETTINGS", value: 8)
!448 = !DIEnumerator(name: "ATA_LOG_ZONED_INFORMATION", value: 9)
!449 = !DIEnumerator(name: "ATA_LOG_DEVSLP_OFFSET", value: 48)
!450 = !DIEnumerator(name: "ATA_LOG_DEVSLP_SIZE", value: 8)
!451 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT", value: 0)
!452 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT_MASK", value: 31)
!453 = !DIEnumerator(name: "ATA_LOG_DEVSLP_DETO", value: 1)
!454 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID", value: 7)
!455 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID_MASK", value: 128)
!456 = !DIEnumerator(name: "ATA_LOG_NCQ_PRIO_OFFSET", value: 9)
!457 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_OFFSET", value: 0)
!458 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_DSM", value: 1)
!459 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_OFFSET", value: 4)
!460 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_TRIM", value: 1)
!461 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_OFFSET", value: 8)
!462 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_SUPPORTED", value: 1)
!463 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_OFFSET", value: 12)
!464 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_SUPPORTED", value: 1)
!465 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OFFSET", value: 16)
!466 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OUT_SUPPORTED", value: 1)
!467 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_IN_SUPPORTED", value: 2)
!468 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SIZE", value: 20)
!469 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SUBCMDS_OFFSET", value: 0)
!470 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_OFFSET", value: 0)
!471 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NCQ", value: 1)
!472 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_ALL", value: 2)
!473 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_STREAMING", value: 4)
!474 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NON_STREAMING", value: 8)
!475 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_SELECTED", value: 16)
!476 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OFFSET", value: 28)
!477 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 1)
!478 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SIZE", value: 64)
!479 = !DIEnumerator(name: "ATA_CMD_READ_LONG", value: 34)
!480 = !DIEnumerator(name: "ATA_CMD_READ_LONG_ONCE", value: 35)
!481 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG", value: 50)
!482 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG_ONCE", value: 51)
!483 = !DIEnumerator(name: "SETFEATURES_XFER", value: 3)
!484 = !DIEnumerator(name: "XFER_UDMA_7", value: 71)
!485 = !DIEnumerator(name: "XFER_UDMA_6", value: 70)
!486 = !DIEnumerator(name: "XFER_UDMA_5", value: 69)
!487 = !DIEnumerator(name: "XFER_UDMA_4", value: 68)
!488 = !DIEnumerator(name: "XFER_UDMA_3", value: 67)
!489 = !DIEnumerator(name: "XFER_UDMA_2", value: 66)
!490 = !DIEnumerator(name: "XFER_UDMA_1", value: 65)
!491 = !DIEnumerator(name: "XFER_UDMA_0", value: 64)
!492 = !DIEnumerator(name: "XFER_MW_DMA_4", value: 36)
!493 = !DIEnumerator(name: "XFER_MW_DMA_3", value: 35)
!494 = !DIEnumerator(name: "XFER_MW_DMA_2", value: 34)
!495 = !DIEnumerator(name: "XFER_MW_DMA_1", value: 33)
!496 = !DIEnumerator(name: "XFER_MW_DMA_0", value: 32)
!497 = !DIEnumerator(name: "XFER_SW_DMA_2", value: 18)
!498 = !DIEnumerator(name: "XFER_SW_DMA_1", value: 17)
!499 = !DIEnumerator(name: "XFER_SW_DMA_0", value: 16)
!500 = !DIEnumerator(name: "XFER_PIO_6", value: 14)
!501 = !DIEnumerator(name: "XFER_PIO_5", value: 13)
!502 = !DIEnumerator(name: "XFER_PIO_4", value: 12)
!503 = !DIEnumerator(name: "XFER_PIO_3", value: 11)
!504 = !DIEnumerator(name: "XFER_PIO_2", value: 10)
!505 = !DIEnumerator(name: "XFER_PIO_1", value: 9)
!506 = !DIEnumerator(name: "XFER_PIO_0", value: 8)
!507 = !DIEnumerator(name: "XFER_PIO_SLOW", value: 0)
!508 = !DIEnumerator(name: "SETFEATURES_WC_ON", value: 2)
!509 = !DIEnumerator(name: "SETFEATURES_WC_OFF", value: 130)
!510 = !DIEnumerator(name: "SETFEATURES_RA_ON", value: 170)
!511 = !DIEnumerator(name: "SETFEATURES_RA_OFF", value: 85)
!512 = !DIEnumerator(name: "SETFEATURES_AAM_ON", value: 66)
!513 = !DIEnumerator(name: "SETFEATURES_AAM_OFF", value: 194)
!514 = !DIEnumerator(name: "SETFEATURES_SPINUP", value: 7)
!515 = !DIEnumerator(name: "SETFEATURES_SPINUP_TIMEOUT", value: 30000)
!516 = !DIEnumerator(name: "SETFEATURES_SATA_ENABLE", value: 16)
!517 = !DIEnumerator(name: "SETFEATURES_SATA_DISABLE", value: 144)
!518 = !DIEnumerator(name: "SATA_FPDMA_OFFSET", value: 1)
!519 = !DIEnumerator(name: "SATA_FPDMA_AA", value: 2)
!520 = !DIEnumerator(name: "SATA_DIPM", value: 3)
!521 = !DIEnumerator(name: "SATA_FPDMA_IN_ORDER", value: 4)
!522 = !DIEnumerator(name: "SATA_AN", value: 5)
!523 = !DIEnumerator(name: "SATA_SSP", value: 6)
!524 = !DIEnumerator(name: "SATA_DEVSLP", value: 9)
!525 = !DIEnumerator(name: "SETFEATURE_SENSE_DATA", value: 195)
!526 = !DIEnumerator(name: "ATA_SET_MAX_ADDR", value: 0)
!527 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD", value: 1)
!528 = !DIEnumerator(name: "ATA_SET_MAX_LOCK", value: 2)
!529 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK", value: 3)
!530 = !DIEnumerator(name: "ATA_SET_MAX_FREEZE_LOCK", value: 4)
!531 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD_DMA", value: 5)
!532 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK_DMA", value: 6)
!533 = !DIEnumerator(name: "ATA_DCO_RESTORE", value: 192)
!534 = !DIEnumerator(name: "ATA_DCO_FREEZE_LOCK", value: 193)
!535 = !DIEnumerator(name: "ATA_DCO_IDENTIFY", value: 194)
!536 = !DIEnumerator(name: "ATA_DCO_SET", value: 195)
!537 = !DIEnumerator(name: "ATA_SMART_ENABLE", value: 216)
!538 = !DIEnumerator(name: "ATA_SMART_READ_VALUES", value: 208)
!539 = !DIEnumerator(name: "ATA_SMART_READ_THRESHOLDS", value: 209)
!540 = !DIEnumerator(name: "ATA_DSM_TRIM", value: 1)
!541 = !DIEnumerator(name: "ATA_SMART_LBAM_PASS", value: 79)
!542 = !DIEnumerator(name: "ATA_SMART_LBAH_PASS", value: 194)
!543 = !DIEnumerator(name: "ATAPI_PKT_DMA", value: 1)
!544 = !DIEnumerator(name: "ATAPI_DMADIR", value: 4)
!545 = !DIEnumerator(name: "ATAPI_CDB_LEN", value: 16)
!546 = !DIEnumerator(name: "SATA_PMP_MAX_PORTS", value: 15)
!547 = !DIEnumerator(name: "SATA_PMP_CTRL_PORT", value: 15)
!548 = !DIEnumerator(name: "SATA_PMP_GSCR_DWORDS", value: 128)
!549 = !DIEnumerator(name: "SATA_PMP_GSCR_PROD_ID", value: 0)
!550 = !DIEnumerator(name: "SATA_PMP_GSCR_REV", value: 1)
!551 = !DIEnumerator(name: "SATA_PMP_GSCR_PORT_INFO", value: 2)
!552 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR", value: 32)
!553 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR_EN", value: 33)
!554 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT", value: 64)
!555 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT_EN", value: 96)
!556 = !DIEnumerator(name: "SATA_PMP_PSCR_STATUS", value: 0)
!557 = !DIEnumerator(name: "SATA_PMP_PSCR_ERROR", value: 1)
!558 = !DIEnumerator(name: "SATA_PMP_PSCR_CONTROL", value: 2)
!559 = !DIEnumerator(name: "SATA_PMP_FEAT_BIST", value: 1)
!560 = !DIEnumerator(name: "SATA_PMP_FEAT_PMREQ", value: 2)
!561 = !DIEnumerator(name: "SATA_PMP_FEAT_DYNSSC", value: 4)
!562 = !DIEnumerator(name: "SATA_PMP_FEAT_NOTIFY", value: 8)
!563 = !DIEnumerator(name: "ATA_CBL_NONE", value: 0)
!564 = !DIEnumerator(name: "ATA_CBL_PATA40", value: 1)
!565 = !DIEnumerator(name: "ATA_CBL_PATA80", value: 2)
!566 = !DIEnumerator(name: "ATA_CBL_PATA40_SHORT", value: 3)
!567 = !DIEnumerator(name: "ATA_CBL_PATA_UNK", value: 4)
!568 = !DIEnumerator(name: "ATA_CBL_PATA_IGN", value: 5)
!569 = !DIEnumerator(name: "ATA_CBL_SATA", value: 6)
!570 = !DIEnumerator(name: "SCR_STATUS", value: 0)
!571 = !DIEnumerator(name: "SCR_ERROR", value: 1)
!572 = !DIEnumerator(name: "SCR_CONTROL", value: 2)
!573 = !DIEnumerator(name: "SCR_ACTIVE", value: 3)
!574 = !DIEnumerator(name: "SCR_NOTIFICATION", value: 4)
!575 = !DIEnumerator(name: "SERR_DATA_RECOVERED", value: 1)
!576 = !DIEnumerator(name: "SERR_COMM_RECOVERED", value: 2)
!577 = !DIEnumerator(name: "SERR_DATA", value: 256)
!578 = !DIEnumerator(name: "SERR_PERSISTENT", value: 512)
!579 = !DIEnumerator(name: "SERR_PROTOCOL", value: 1024)
!580 = !DIEnumerator(name: "SERR_INTERNAL", value: 2048)
!581 = !DIEnumerator(name: "SERR_PHYRDY_CHG", value: 65536)
!582 = !DIEnumerator(name: "SERR_PHY_INT_ERR", value: 131072)
!583 = !DIEnumerator(name: "SERR_COMM_WAKE", value: 262144)
!584 = !DIEnumerator(name: "SERR_10B_8B_ERR", value: 524288)
!585 = !DIEnumerator(name: "SERR_DISPARITY", value: 1048576)
!586 = !DIEnumerator(name: "SERR_CRC", value: 2097152)
!587 = !DIEnumerator(name: "SERR_HANDSHAKE", value: 4194304)
!588 = !DIEnumerator(name: "SERR_LINK_SEQ_ERR", value: 8388608)
!589 = !DIEnumerator(name: "SERR_TRANS_ST_ERROR", value: 16777216)
!590 = !DIEnumerator(name: "SERR_UNRECOG_FIS", value: 33554432)
!591 = !DIEnumerator(name: "SERR_DEV_XCHG", value: 67108864)
!592 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 106, baseType: !181, size: 32, elements: !593)
!593 = !{!594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!594 = !DIEnumerator(name: "LIBATA_MAX_PRD", value: 128)
!595 = !DIEnumerator(name: "LIBATA_DUMB_MAX_PRD", value: 64)
!596 = !DIEnumerator(name: "ATA_DEF_QUEUE", value: 1)
!597 = !DIEnumerator(name: "ATA_MAX_QUEUE", value: 32)
!598 = !DIEnumerator(name: "ATA_TAG_INTERNAL", value: 32)
!599 = !DIEnumerator(name: "ATA_SHORT_PAUSE", value: 16)
!600 = !DIEnumerator(name: "ATAPI_MAX_DRAIN", value: 16384)
!601 = !DIEnumerator(name: "ATA_ALL_DEVICES", value: 3)
!602 = !DIEnumerator(name: "ATA_SHT_EMULATED", value: 1)
!603 = !DIEnumerator(name: "ATA_SHT_THIS_ID", value: -1)
!604 = !DIEnumerator(name: "ATA_TFLAG_LBA48", value: 1)
!605 = !DIEnumerator(name: "ATA_TFLAG_ISADDR", value: 2)
!606 = !DIEnumerator(name: "ATA_TFLAG_DEVICE", value: 4)
!607 = !DIEnumerator(name: "ATA_TFLAG_WRITE", value: 8)
!608 = !DIEnumerator(name: "ATA_TFLAG_LBA", value: 16)
!609 = !DIEnumerator(name: "ATA_TFLAG_FUA", value: 32)
!610 = !DIEnumerator(name: "ATA_TFLAG_POLLING", value: 64)
!611 = !DIEnumerator(name: "ATA_DFLAG_LBA", value: 1)
!612 = !DIEnumerator(name: "ATA_DFLAG_LBA48", value: 2)
!613 = !DIEnumerator(name: "ATA_DFLAG_CDB_INTR", value: 4)
!614 = !DIEnumerator(name: "ATA_DFLAG_NCQ", value: 8)
!615 = !DIEnumerator(name: "ATA_DFLAG_FLUSH_EXT", value: 16)
!616 = !DIEnumerator(name: "ATA_DFLAG_ACPI_PENDING", value: 32)
!617 = !DIEnumerator(name: "ATA_DFLAG_ACPI_FAILED", value: 64)
!618 = !DIEnumerator(name: "ATA_DFLAG_AN", value: 128)
!619 = !DIEnumerator(name: "ATA_DFLAG_TRUSTED", value: 256)
!620 = !DIEnumerator(name: "ATA_DFLAG_DMADIR", value: 1024)
!621 = !DIEnumerator(name: "ATA_DFLAG_CFG_MASK", value: 4095)
!622 = !DIEnumerator(name: "ATA_DFLAG_PIO", value: 4096)
!623 = !DIEnumerator(name: "ATA_DFLAG_NCQ_OFF", value: 8192)
!624 = !DIEnumerator(name: "ATA_DFLAG_SLEEPING", value: 32768)
!625 = !DIEnumerator(name: "ATA_DFLAG_DUBIOUS_XFER", value: 65536)
!626 = !DIEnumerator(name: "ATA_DFLAG_NO_UNLOAD", value: 131072)
!627 = !DIEnumerator(name: "ATA_DFLAG_UNLOCK_HPA", value: 262144)
!628 = !DIEnumerator(name: "ATA_DFLAG_NCQ_SEND_RECV", value: 524288)
!629 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO", value: 1048576)
!630 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO_ENABLE", value: 2097152)
!631 = !DIEnumerator(name: "ATA_DFLAG_INIT_MASK", value: 16777215)
!632 = !DIEnumerator(name: "ATA_DFLAG_DETACH", value: 16777216)
!633 = !DIEnumerator(name: "ATA_DFLAG_DETACHED", value: 33554432)
!634 = !DIEnumerator(name: "ATA_DFLAG_DA", value: 67108864)
!635 = !DIEnumerator(name: "ATA_DFLAG_DEVSLP", value: 134217728)
!636 = !DIEnumerator(name: "ATA_DFLAG_ACPI_DISABLED", value: 268435456)
!637 = !DIEnumerator(name: "ATA_DFLAG_D_SENSE", value: 536870912)
!638 = !DIEnumerator(name: "ATA_DFLAG_ZAC", value: 1073741824)
!639 = !DIEnumerator(name: "ATA_DEV_UNKNOWN", value: 0)
!640 = !DIEnumerator(name: "ATA_DEV_ATA", value: 1)
!641 = !DIEnumerator(name: "ATA_DEV_ATA_UNSUP", value: 2)
!642 = !DIEnumerator(name: "ATA_DEV_ATAPI", value: 3)
!643 = !DIEnumerator(name: "ATA_DEV_ATAPI_UNSUP", value: 4)
!644 = !DIEnumerator(name: "ATA_DEV_PMP", value: 5)
!645 = !DIEnumerator(name: "ATA_DEV_PMP_UNSUP", value: 6)
!646 = !DIEnumerator(name: "ATA_DEV_SEMB", value: 7)
!647 = !DIEnumerator(name: "ATA_DEV_SEMB_UNSUP", value: 8)
!648 = !DIEnumerator(name: "ATA_DEV_ZAC", value: 9)
!649 = !DIEnumerator(name: "ATA_DEV_ZAC_UNSUP", value: 10)
!650 = !DIEnumerator(name: "ATA_DEV_NONE", value: 11)
!651 = !DIEnumerator(name: "ATA_LFLAG_NO_HRST", value: 2)
!652 = !DIEnumerator(name: "ATA_LFLAG_NO_SRST", value: 4)
!653 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_ATA", value: 8)
!654 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_SEMB", value: 16)
!655 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_CLASS", value: 24)
!656 = !DIEnumerator(name: "ATA_LFLAG_NO_RETRY", value: 32)
!657 = !DIEnumerator(name: "ATA_LFLAG_DISABLED", value: 64)
!658 = !DIEnumerator(name: "ATA_LFLAG_SW_ACTIVITY", value: 128)
!659 = !DIEnumerator(name: "ATA_LFLAG_NO_LPM", value: 256)
!660 = !DIEnumerator(name: "ATA_LFLAG_RST_ONCE", value: 512)
!661 = !DIEnumerator(name: "ATA_LFLAG_CHANGED", value: 1024)
!662 = !DIEnumerator(name: "ATA_LFLAG_NO_DB_DELAY", value: 2048)
!663 = !DIEnumerator(name: "ATA_FLAG_SLAVE_POSS", value: 1)
!664 = !DIEnumerator(name: "ATA_FLAG_SATA", value: 2)
!665 = !DIEnumerator(name: "ATA_FLAG_NO_LPM", value: 4)
!666 = !DIEnumerator(name: "ATA_FLAG_NO_LOG_PAGE", value: 32)
!667 = !DIEnumerator(name: "ATA_FLAG_NO_ATAPI", value: 64)
!668 = !DIEnumerator(name: "ATA_FLAG_PIO_DMA", value: 128)
!669 = !DIEnumerator(name: "ATA_FLAG_PIO_LBA48", value: 256)
!670 = !DIEnumerator(name: "ATA_FLAG_PIO_POLLING", value: 512)
!671 = !DIEnumerator(name: "ATA_FLAG_NCQ", value: 1024)
!672 = !DIEnumerator(name: "ATA_FLAG_NO_POWEROFF_SPINDOWN", value: 2048)
!673 = !DIEnumerator(name: "ATA_FLAG_NO_HIBERNATE_SPINDOWN", value: 4096)
!674 = !DIEnumerator(name: "ATA_FLAG_DEBUGMSG", value: 8192)
!675 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AA", value: 16384)
!676 = !DIEnumerator(name: "ATA_FLAG_IGN_SIMPLEX", value: 32768)
!677 = !DIEnumerator(name: "ATA_FLAG_NO_IORDY", value: 65536)
!678 = !DIEnumerator(name: "ATA_FLAG_ACPI_SATA", value: 131072)
!679 = !DIEnumerator(name: "ATA_FLAG_AN", value: 262144)
!680 = !DIEnumerator(name: "ATA_FLAG_PMP", value: 524288)
!681 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AUX", value: 1048576)
!682 = !DIEnumerator(name: "ATA_FLAG_EM", value: 2097152)
!683 = !DIEnumerator(name: "ATA_FLAG_SW_ACTIVITY", value: 4194304)
!684 = !DIEnumerator(name: "ATA_FLAG_NO_DIPM", value: 8388608)
!685 = !DIEnumerator(name: "ATA_FLAG_SAS_HOST", value: 16777216)
!686 = !DIEnumerator(name: "ATA_PFLAG_EH_PENDING", value: 1)
!687 = !DIEnumerator(name: "ATA_PFLAG_EH_IN_PROGRESS", value: 2)
!688 = !DIEnumerator(name: "ATA_PFLAG_FROZEN", value: 4)
!689 = !DIEnumerator(name: "ATA_PFLAG_RECOVERED", value: 8)
!690 = !DIEnumerator(name: "ATA_PFLAG_LOADING", value: 16)
!691 = !DIEnumerator(name: "ATA_PFLAG_SCSI_HOTPLUG", value: 64)
!692 = !DIEnumerator(name: "ATA_PFLAG_INITIALIZING", value: 128)
!693 = !DIEnumerator(name: "ATA_PFLAG_RESETTING", value: 256)
!694 = !DIEnumerator(name: "ATA_PFLAG_UNLOADING", value: 512)
!695 = !DIEnumerator(name: "ATA_PFLAG_UNLOADED", value: 1024)
!696 = !DIEnumerator(name: "ATA_PFLAG_SUSPENDED", value: 131072)
!697 = !DIEnumerator(name: "ATA_PFLAG_PM_PENDING", value: 262144)
!698 = !DIEnumerator(name: "ATA_PFLAG_INIT_GTM_VALID", value: 524288)
!699 = !DIEnumerator(name: "ATA_PFLAG_PIO32", value: 1048576)
!700 = !DIEnumerator(name: "ATA_PFLAG_PIO32CHANGE", value: 2097152)
!701 = !DIEnumerator(name: "ATA_PFLAG_EXTERNAL", value: 4194304)
!702 = !DIEnumerator(name: "ATA_QCFLAG_ACTIVE", value: 1)
!703 = !DIEnumerator(name: "ATA_QCFLAG_DMAMAP", value: 2)
!704 = !DIEnumerator(name: "ATA_QCFLAG_IO", value: 8)
!705 = !DIEnumerator(name: "ATA_QCFLAG_RESULT_TF", value: 16)
!706 = !DIEnumerator(name: "ATA_QCFLAG_CLEAR_EXCL", value: 32)
!707 = !DIEnumerator(name: "ATA_QCFLAG_QUIET", value: 64)
!708 = !DIEnumerator(name: "ATA_QCFLAG_RETRY", value: 128)
!709 = !DIEnumerator(name: "ATA_QCFLAG_FAILED", value: 65536)
!710 = !DIEnumerator(name: "ATA_QCFLAG_SENSE_VALID", value: 131072)
!711 = !DIEnumerator(name: "ATA_QCFLAG_EH_SCHEDULED", value: 262144)
!712 = !DIEnumerator(name: "ATA_HOST_SIMPLEX", value: 1)
!713 = !DIEnumerator(name: "ATA_HOST_STARTED", value: 2)
!714 = !DIEnumerator(name: "ATA_HOST_PARALLEL_SCAN", value: 4)
!715 = !DIEnumerator(name: "ATA_HOST_IGNORE_ATA", value: 8)
!716 = !DIEnumerator(name: "ATA_TMOUT_BOOT", value: 30000)
!717 = !DIEnumerator(name: "ATA_TMOUT_BOOT_QUICK", value: 7000)
!718 = !DIEnumerator(name: "ATA_TMOUT_INTERNAL_QUICK", value: 5000)
!719 = !DIEnumerator(name: "ATA_TMOUT_MAX_PARK", value: 30000)
!720 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT_LONG", value: 2000)
!721 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT", value: 800)
!722 = !DIEnumerator(name: "ATA_WAIT_AFTER_RESET", value: 150)
!723 = !DIEnumerator(name: "ATA_TMOUT_PMP_SRST_WAIT", value: 5000)
!724 = !DIEnumerator(name: "ATA_TMOUT_SPURIOUS_PHY", value: 10000)
!725 = !DIEnumerator(name: "BUS_UNKNOWN", value: 0)
!726 = !DIEnumerator(name: "BUS_DMA", value: 1)
!727 = !DIEnumerator(name: "BUS_IDLE", value: 2)
!728 = !DIEnumerator(name: "BUS_NOINTR", value: 3)
!729 = !DIEnumerator(name: "BUS_NODATA", value: 4)
!730 = !DIEnumerator(name: "BUS_TIMER", value: 5)
!731 = !DIEnumerator(name: "BUS_PIO", value: 6)
!732 = !DIEnumerator(name: "BUS_EDD", value: 7)
!733 = !DIEnumerator(name: "BUS_IDENTIFY", value: 8)
!734 = !DIEnumerator(name: "BUS_PACKET", value: 9)
!735 = !DIEnumerator(name: "PORT_UNKNOWN", value: 0)
!736 = !DIEnumerator(name: "PORT_ENABLED", value: 1)
!737 = !DIEnumerator(name: "PORT_DISABLED", value: 2)
!738 = !DIEnumerator(name: "ATA_NR_PIO_MODES", value: 7)
!739 = !DIEnumerator(name: "ATA_NR_MWDMA_MODES", value: 5)
!740 = !DIEnumerator(name: "ATA_NR_UDMA_MODES", value: 8)
!741 = !DIEnumerator(name: "ATA_SHIFT_PIO", value: 0)
!742 = !DIEnumerator(name: "ATA_SHIFT_MWDMA", value: 7)
!743 = !DIEnumerator(name: "ATA_SHIFT_UDMA", value: 12)
!744 = !DIEnumerator(name: "ATA_SHIFT_PRIO", value: 6)
!745 = !DIEnumerator(name: "ATA_PRIO_HIGH", value: 2)
!746 = !DIEnumerator(name: "ATA_DMA_PAD_SZ", value: 4)
!747 = !DIEnumerator(name: "ATA_ERING_SIZE", value: 32)
!748 = !DIEnumerator(name: "ATA_DEFER_LINK", value: 1)
!749 = !DIEnumerator(name: "ATA_DEFER_PORT", value: 2)
!750 = !DIEnumerator(name: "ATA_EH_DESC_LEN", value: 80)
!751 = !DIEnumerator(name: "ATA_EH_REVALIDATE", value: 1)
!752 = !DIEnumerator(name: "ATA_EH_SOFTRESET", value: 2)
!753 = !DIEnumerator(name: "ATA_EH_HARDRESET", value: 4)
!754 = !DIEnumerator(name: "ATA_EH_RESET", value: 6)
!755 = !DIEnumerator(name: "ATA_EH_ENABLE_LINK", value: 8)
!756 = !DIEnumerator(name: "ATA_EH_PARK", value: 32)
!757 = !DIEnumerator(name: "ATA_EH_PERDEV_MASK", value: 33)
!758 = !DIEnumerator(name: "ATA_EH_ALL_ACTIONS", value: 15)
!759 = !DIEnumerator(name: "ATA_EHI_HOTPLUGGED", value: 1)
!760 = !DIEnumerator(name: "ATA_EHI_NO_AUTOPSY", value: 4)
!761 = !DIEnumerator(name: "ATA_EHI_QUIET", value: 8)
!762 = !DIEnumerator(name: "ATA_EHI_NO_RECOVERY", value: 16)
!763 = !DIEnumerator(name: "ATA_EHI_DID_SOFTRESET", value: 65536)
!764 = !DIEnumerator(name: "ATA_EHI_DID_HARDRESET", value: 131072)
!765 = !DIEnumerator(name: "ATA_EHI_PRINTINFO", value: 262144)
!766 = !DIEnumerator(name: "ATA_EHI_SETMODE", value: 524288)
!767 = !DIEnumerator(name: "ATA_EHI_POST_SETMODE", value: 1048576)
!768 = !DIEnumerator(name: "ATA_EHI_DID_RESET", value: 196608)
!769 = !DIEnumerator(name: "ATA_EHI_TO_SLAVE_MASK", value: 12)
!770 = !DIEnumerator(name: "ATA_EH_MAX_TRIES", value: 5)
!771 = !DIEnumerator(name: "ATA_LINK_RESUME_TRIES", value: 5)
!772 = !DIEnumerator(name: "ATA_PROBE_MAX_TRIES", value: 3)
!773 = !DIEnumerator(name: "ATA_EH_DEV_TRIES", value: 3)
!774 = !DIEnumerator(name: "ATA_EH_PMP_TRIES", value: 5)
!775 = !DIEnumerator(name: "ATA_EH_PMP_LINK_TRIES", value: 3)
!776 = !DIEnumerator(name: "SATA_PMP_RW_TIMEOUT", value: 3000)
!777 = !DIEnumerator(name: "ATA_EH_CMD_TIMEOUT_TABLE_SIZE", value: 6)
!778 = !DIEnumerator(name: "ATA_HORKAGE_DIAGNOSTIC", value: 1)
!779 = !DIEnumerator(name: "ATA_HORKAGE_NODMA", value: 2)
!780 = !DIEnumerator(name: "ATA_HORKAGE_NONCQ", value: 4)
!781 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_128", value: 8)
!782 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_HPA", value: 16)
!783 = !DIEnumerator(name: "ATA_HORKAGE_DISABLE", value: 32)
!784 = !DIEnumerator(name: "ATA_HORKAGE_HPA_SIZE", value: 64)
!785 = !DIEnumerator(name: "ATA_HORKAGE_IVB", value: 256)
!786 = !DIEnumerator(name: "ATA_HORKAGE_STUCK_ERR", value: 512)
!787 = !DIEnumerator(name: "ATA_HORKAGE_BRIDGE_OK", value: 1024)
!788 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_MOD16_DMA", value: 2048)
!789 = !DIEnumerator(name: "ATA_HORKAGE_FIRMWARE_WARN", value: 4096)
!790 = !DIEnumerator(name: "ATA_HORKAGE_1_5_GBPS", value: 8192)
!791 = !DIEnumerator(name: "ATA_HORKAGE_NOSETXFER", value: 16384)
!792 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_FPDMA_AA", value: 32768)
!793 = !DIEnumerator(name: "ATA_HORKAGE_DUMP_ID", value: 65536)
!794 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_LBA48", value: 131072)
!795 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_DMADIR", value: 262144)
!796 = !DIEnumerator(name: "ATA_HORKAGE_NO_NCQ_TRIM", value: 524288)
!797 = !DIEnumerator(name: "ATA_HORKAGE_NOLPM", value: 1048576)
!798 = !DIEnumerator(name: "ATA_HORKAGE_WD_BROKEN_LPM", value: 2097152)
!799 = !DIEnumerator(name: "ATA_HORKAGE_ZERO_AFTER_TRIM", value: 4194304)
!800 = !DIEnumerator(name: "ATA_HORKAGE_NO_DMA_LOG", value: 8388608)
!801 = !DIEnumerator(name: "ATA_HORKAGE_NOTRIM", value: 16777216)
!802 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_1024", value: 33554432)
!803 = !DIEnumerator(name: "ATA_HORKAGE_MAX_TRIM_128M", value: 67108864)
!804 = !DIEnumerator(name: "ATA_DMA_MASK_ATA", value: 1)
!805 = !DIEnumerator(name: "ATA_DMA_MASK_ATAPI", value: 2)
!806 = !DIEnumerator(name: "ATA_DMA_MASK_CFA", value: 4)
!807 = !DIEnumerator(name: "ATAPI_READ", value: 0)
!808 = !DIEnumerator(name: "ATAPI_WRITE", value: 1)
!809 = !DIEnumerator(name: "ATAPI_READ_CD", value: 2)
!810 = !DIEnumerator(name: "ATAPI_PASS_THRU", value: 3)
!811 = !DIEnumerator(name: "ATAPI_MISC", value: 4)
!812 = !DIEnumerator(name: "ATA_TIMING_SETUP", value: 1)
!813 = !DIEnumerator(name: "ATA_TIMING_ACT8B", value: 2)
!814 = !DIEnumerator(name: "ATA_TIMING_REC8B", value: 4)
!815 = !DIEnumerator(name: "ATA_TIMING_CYC8B", value: 8)
!816 = !DIEnumerator(name: "ATA_TIMING_8BIT", value: 14)
!817 = !DIEnumerator(name: "ATA_TIMING_ACTIVE", value: 16)
!818 = !DIEnumerator(name: "ATA_TIMING_RECOVER", value: 32)
!819 = !DIEnumerator(name: "ATA_TIMING_DMACK_HOLD", value: 64)
!820 = !DIEnumerator(name: "ATA_TIMING_CYCLE", value: 128)
!821 = !DIEnumerator(name: "ATA_TIMING_UDMA", value: 256)
!822 = !DIEnumerator(name: "ATA_TIMING_ALL", value: 511)
!823 = !DIEnumerator(name: "ATA_ACPI_FILTER_SETXFER", value: 1)
!824 = !DIEnumerator(name: "ATA_ACPI_FILTER_LOCK", value: 2)
!825 = !DIEnumerator(name: "ATA_ACPI_FILTER_DIPM", value: 4)
!826 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_OFFSET", value: 8)
!827 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_AA", value: 16)
!828 = !DIEnumerator(name: "ATA_ACPI_FILTER_DEFAULT", value: 7)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hsm_task_states", file: !152, line: 478, baseType: !7, size: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835}
!831 = !DIEnumerator(name: "HSM_ST_IDLE", value: 0, isUnsigned: true)
!832 = !DIEnumerator(name: "HSM_ST_FIRST", value: 1, isUnsigned: true)
!833 = !DIEnumerator(name: "HSM_ST", value: 2, isUnsigned: true)
!834 = !DIEnumerator(name: "HSM_ST_LAST", value: 3, isUnsigned: true)
!835 = !DIEnumerator(name: "HSM_ST_ERR", value: 4, isUnsigned: true)
!836 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_prot_flags", file: !180, line: 520, baseType: !7, size: 32, elements: !837)
!837 = !{!838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!838 = !DIEnumerator(name: "ATA_PROT_FLAG_PIO", value: 1, isUnsigned: true)
!839 = !DIEnumerator(name: "ATA_PROT_FLAG_DMA", value: 2, isUnsigned: true)
!840 = !DIEnumerator(name: "ATA_PROT_FLAG_NCQ", value: 4, isUnsigned: true)
!841 = !DIEnumerator(name: "ATA_PROT_FLAG_ATAPI", value: 8, isUnsigned: true)
!842 = !DIEnumerator(name: "ATA_PROT_UNKNOWN", value: 255, isUnsigned: true)
!843 = !DIEnumerator(name: "ATA_PROT_NODATA", value: 0, isUnsigned: true)
!844 = !DIEnumerator(name: "ATA_PROT_PIO", value: 1, isUnsigned: true)
!845 = !DIEnumerator(name: "ATA_PROT_DMA", value: 2, isUnsigned: true)
!846 = !DIEnumerator(name: "ATA_PROT_NCQ_NODATA", value: 4, isUnsigned: true)
!847 = !DIEnumerator(name: "ATA_PROT_NCQ", value: 6, isUnsigned: true)
!848 = !DIEnumerator(name: "ATAPI_PROT_NODATA", value: 8, isUnsigned: true)
!849 = !DIEnumerator(name: "ATAPI_PROT_PIO", value: 9, isUnsigned: true)
!850 = !DIEnumerator(name: "ATAPI_PROT_DMA", value: 10, isUnsigned: true)
!851 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !852, line: 10, baseType: !7, size: 32, elements: !853)
!852 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!853 = !{!854, !855}
!854 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!855 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!856 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 74, baseType: !7, size: 32, elements: !857)
!857 = !{!858, !859, !860, !861, !862, !863, !864, !865}
!858 = !DIEnumerator(name: "ATA_MSG_DRV", value: 1, isUnsigned: true)
!859 = !DIEnumerator(name: "ATA_MSG_INFO", value: 2, isUnsigned: true)
!860 = !DIEnumerator(name: "ATA_MSG_PROBE", value: 4, isUnsigned: true)
!861 = !DIEnumerator(name: "ATA_MSG_WARN", value: 8, isUnsigned: true)
!862 = !DIEnumerator(name: "ATA_MSG_MALLOC", value: 16, isUnsigned: true)
!863 = !DIEnumerator(name: "ATA_MSG_CTL", value: 32, isUnsigned: true)
!864 = !DIEnumerator(name: "ATA_MSG_INTR", value: 64, isUnsigned: true)
!865 = !DIEnumerator(name: "ATA_MSG_ERR", value: 128, isUnsigned: true)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !867, line: 11, baseType: !7, size: 32, elements: !868)
!867 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!868 = !{!869, !870, !871}
!869 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!870 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!871 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !873, line: 5, baseType: !7, size: 32, elements: !874)
!873 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!874 = !{!875, !876, !877, !878}
!875 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!876 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!877 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!878 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !880, line: 30, baseType: !881, size: 64, elements: !882)
!880 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!881 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!882 = !{!883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911}
!883 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!884 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!885 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!886 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!887 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!888 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!889 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!890 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!891 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!892 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!893 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!894 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!895 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!896 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!897 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!898 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!899 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!900 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!901 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!902 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!903 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!904 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!905 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!906 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!907 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!908 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!909 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!910 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!911 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !880, line: 308, baseType: !7, size: 32, elements: !913)
!913 = !{!914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927}
!914 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!915 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!916 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!917 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!918 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!919 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!920 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!921 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!922 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!923 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!924 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!925 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!926 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!927 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!928 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pageflags", file: !929, line: 104, baseType: !7, size: 32, elements: !930)
!929 = !DIFile(filename: "./include/linux/page-flags.h", directory: "/home/lizy2001/genbc/linux")
!930 = !{!931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966}
!931 = !DIEnumerator(name: "PG_locked", value: 0, isUnsigned: true)
!932 = !DIEnumerator(name: "PG_referenced", value: 1, isUnsigned: true)
!933 = !DIEnumerator(name: "PG_uptodate", value: 2, isUnsigned: true)
!934 = !DIEnumerator(name: "PG_dirty", value: 3, isUnsigned: true)
!935 = !DIEnumerator(name: "PG_lru", value: 4, isUnsigned: true)
!936 = !DIEnumerator(name: "PG_active", value: 5, isUnsigned: true)
!937 = !DIEnumerator(name: "PG_workingset", value: 6, isUnsigned: true)
!938 = !DIEnumerator(name: "PG_waiters", value: 7, isUnsigned: true)
!939 = !DIEnumerator(name: "PG_error", value: 8, isUnsigned: true)
!940 = !DIEnumerator(name: "PG_slab", value: 9, isUnsigned: true)
!941 = !DIEnumerator(name: "PG_owner_priv_1", value: 10, isUnsigned: true)
!942 = !DIEnumerator(name: "PG_arch_1", value: 11, isUnsigned: true)
!943 = !DIEnumerator(name: "PG_reserved", value: 12, isUnsigned: true)
!944 = !DIEnumerator(name: "PG_private", value: 13, isUnsigned: true)
!945 = !DIEnumerator(name: "PG_private_2", value: 14, isUnsigned: true)
!946 = !DIEnumerator(name: "PG_writeback", value: 15, isUnsigned: true)
!947 = !DIEnumerator(name: "PG_head", value: 16, isUnsigned: true)
!948 = !DIEnumerator(name: "PG_mappedtodisk", value: 17, isUnsigned: true)
!949 = !DIEnumerator(name: "PG_reclaim", value: 18, isUnsigned: true)
!950 = !DIEnumerator(name: "PG_swapbacked", value: 19, isUnsigned: true)
!951 = !DIEnumerator(name: "PG_unevictable", value: 20, isUnsigned: true)
!952 = !DIEnumerator(name: "PG_mlocked", value: 21, isUnsigned: true)
!953 = !DIEnumerator(name: "PG_uncached", value: 22, isUnsigned: true)
!954 = !DIEnumerator(name: "PG_arch_2", value: 23, isUnsigned: true)
!955 = !DIEnumerator(name: "__NR_PAGEFLAGS", value: 24, isUnsigned: true)
!956 = !DIEnumerator(name: "PG_checked", value: 10, isUnsigned: true)
!957 = !DIEnumerator(name: "PG_swapcache", value: 10, isUnsigned: true)
!958 = !DIEnumerator(name: "PG_fscache", value: 14, isUnsigned: true)
!959 = !DIEnumerator(name: "PG_pinned", value: 10, isUnsigned: true)
!960 = !DIEnumerator(name: "PG_savepinned", value: 3, isUnsigned: true)
!961 = !DIEnumerator(name: "PG_foreign", value: 10, isUnsigned: true)
!962 = !DIEnumerator(name: "PG_xen_remapped", value: 10, isUnsigned: true)
!963 = !DIEnumerator(name: "PG_slob_free", value: 13, isUnsigned: true)
!964 = !DIEnumerator(name: "PG_double_map", value: 6, isUnsigned: true)
!965 = !DIEnumerator(name: "PG_isolated", value: 18, isUnsigned: true)
!966 = !DIEnumerator(name: "PG_reported", value: 2, isUnsigned: true)
!967 = !{!881, !968, !969, !1010, !1003, !1637, !1614, !5944, !2120, !998, !5630, !5945, !7, !181, !1040, !5948, !1041, !5949, !5951}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !971, line: 309, size: 19264, elements: !972)
!971 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!972 = !{!973, !980, !5747, !5748, !5749, !5750, !5761, !5762, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5842, !5843, !5844, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5918, !5919, !5920, !5921, !5922, !5923, !5925, !5926, !5927, !5930, !5937, !5938, !5939, !5940, !5941, !5942, !5943}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !970, file: !971, line: 310, baseType: !974, size: 128)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !975, line: 178, size: 128, elements: !976)
!975 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!976 = !{!977, !979}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !974, file: !975, line: 179, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !974, file: !975, line: 179, baseType: !978, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !970, file: !971, line: 311, baseType: !981, size: 64, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !971, line: 605, size: 8064, elements: !983)
!983 = !{!984, !985, !986, !987, !988, !989, !990, !1017, !1018, !1019, !1046, !1049, !1050, !1054, !1056, !1057, !1058, !1059, !1063, !1065, !1067, !5743, !5744, !5745, !5746}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !982, file: !971, line: 606, baseType: !974, size: 128)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !982, file: !971, line: 607, baseType: !981, size: 64, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !982, file: !971, line: 608, baseType: !974, size: 128, offset: 192)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !982, file: !971, line: 609, baseType: !974, size: 128, offset: 320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !982, file: !971, line: 610, baseType: !969, size: 64, offset: 448)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !982, file: !971, line: 611, baseType: !974, size: 128, offset: 512)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !982, file: !971, line: 613, baseType: !991, size: 256, offset: 640)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 256, elements: !1015)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !994, line: 20, size: 512, elements: !995)
!994 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!995 = !{!996, !1004, !1005, !1009, !1011, !1012, !1013, !1014}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !993, file: !994, line: 21, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !975, line: 158, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !975, line: 153, baseType: !999)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !1000, line: 23, baseType: !1001)
!1000 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !1002, line: 31, baseType: !1003)
!1002 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!1003 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !993, file: !994, line: 22, baseType: !997, size: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !993, file: !994, line: 23, baseType: !1006, size: 64, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1008)
!1008 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !993, file: !994, line: 24, baseType: !1010, size: 64, offset: 192)
!1010 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !993, file: !994, line: 25, baseType: !1010, size: 64, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !993, file: !994, line: 26, baseType: !992, size: 64, offset: 320)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !993, file: !994, line: 26, baseType: !992, size: 64, offset: 384)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !993, file: !994, line: 26, baseType: !992, size: 64, offset: 448)
!1015 = !{!1016}
!1016 = !DISubrange(count: 4)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !982, file: !971, line: 614, baseType: !974, size: 128, offset: 896)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !982, file: !971, line: 615, baseType: !993, size: 512, offset: 1024)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !982, file: !971, line: 617, baseType: !1020, size: 64, offset: 1536)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !971, line: 731, size: 320, elements: !1022)
!1022 = !{!1023, !1027, !1031, !1035, !1042}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !1021, file: !971, line: 732, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!181, !981}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !1021, file: !971, line: 733, baseType: !1028, size: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !981}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !1021, file: !971, line: 734, baseType: !1032, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!968, !981, !7, !181}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1021, file: !971, line: 735, baseType: !1036, size: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!181, !981, !7, !181, !181, !1039}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !1000, line: 21, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !1002, line: 27, baseType: !7)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1021, file: !971, line: 736, baseType: !1043, size: 64, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!181, !981, !7, !181, !181, !1040}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !982, file: !971, line: 618, baseType: !1047, size: 64, offset: 1600)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !971, line: 537, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !982, file: !971, line: 619, baseType: !968, size: 64, offset: 1664)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !982, file: !971, line: 620, baseType: !1051, size: 64, offset: 1728)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1053, line: 123, flags: DIFlagFwdDecl)
!1053 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !982, file: !971, line: 622, baseType: !1055, size: 8, offset: 1792)
!1055 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !982, file: !971, line: 623, baseType: !1055, size: 8, offset: 1800)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !982, file: !971, line: 624, baseType: !1055, size: 8, offset: 1808)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !982, file: !971, line: 625, baseType: !1055, size: 8, offset: 1816)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !982, file: !971, line: 630, baseType: !1060, size: 384, offset: 1824)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 384, elements: !1061)
!1061 = !{!1062}
!1062 = !DISubrange(count: 48)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !982, file: !971, line: 632, baseType: !1064, size: 16, offset: 2208)
!1064 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !982, file: !971, line: 633, baseType: !1066, size: 16, offset: 2224)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !971, line: 237, baseType: !1064)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !982, file: !971, line: 634, baseType: !1068, size: 64, offset: 2240)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !47, line: 461, size: 5568, elements: !1070)
!1070 = !{!1071, !5209, !5210, !5213, !5214, !5264, !5355, !5356, !5357, !5358, !5359, !5368, !5462, !5475, !5670, !5671, !5675, !5677, !5678, !5679, !5683, !5689, !5690, !5693, !5694, !5695, !5696, !5697, !5698, !5699, !5731, !5732, !5733, !5736, !5739, !5740, !5741, !5742}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1069, file: !47, line: 462, baseType: !1072, size: 512)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1073, line: 64, size: 512, elements: !1074)
!1073 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1074 = !{!1075, !1076, !1077, !1079, !1139, !5076, !5203, !5204, !5205, !5206, !5207, !5208}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1072, file: !1073, line: 65, baseType: !1006, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1072, file: !1073, line: 66, baseType: !974, size: 128, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1072, file: !1073, line: 67, baseType: !1078, size: 64, offset: 192)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1072, file: !1073, line: 68, baseType: !1080, size: 64, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1073, line: 192, size: 704, elements: !1082)
!1082 = !{!1083, !1084, !1100, !1101}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1081, file: !1073, line: 193, baseType: !974, size: 128)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1081, file: !1073, line: 194, baseType: !1085, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1086, line: 83, baseType: !1087)
!1086 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1086, line: 71, elements: !1088)
!1088 = !{!1089}
!1089 = !DIDerivedType(tag: DW_TAG_member, scope: !1087, file: !1086, line: 72, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1087, file: !1086, line: 72, elements: !1091)
!1091 = !{!1092}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1090, file: !1086, line: 73, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1086, line: 20, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1093, file: !1086, line: 21, baseType: !1096)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1097, line: 25, baseType: !1098)
!1097 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1097, line: 25, elements: !1099)
!1099 = !{}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1081, file: !1073, line: 195, baseType: !1072, size: 512, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1081, file: !1073, line: 196, baseType: !1102, size: 64, offset: 640)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1073, line: 156, size: 192, elements: !1105)
!1105 = !{!1106, !1111, !1116}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1104, file: !1073, line: 157, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!181, !1080, !1078}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1104, file: !1073, line: 158, baseType: !1112, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1113)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!1006, !1080, !1078}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1104, file: !1073, line: 159, baseType: !1117, size: 64, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!181, !1080, !1078, !1121}
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1073, line: 148, size: 20736, elements: !1123)
!1123 = !{!1124, !1129, !1133, !1134, !1138}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1122, file: !1073, line: 149, baseType: !1125, size: 192)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 192, elements: !1127)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1127 = !{!1128}
!1128 = !DISubrange(count: 3)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1122, file: !1073, line: 150, baseType: !1130, size: 4096, offset: 192)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 4096, elements: !1131)
!1131 = !{!1132}
!1132 = !DISubrange(count: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1122, file: !1073, line: 151, baseType: !181, size: 32, offset: 4288)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1122, file: !1073, line: 152, baseType: !1135, size: 16384, offset: 4320)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 16384, elements: !1136)
!1136 = !{!1137}
!1137 = !DISubrange(count: 2048)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1122, file: !1073, line: 153, baseType: !181, size: 32, offset: 20704)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1072, file: !1073, line: 69, baseType: !1140, size: 64, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1073, line: 138, size: 448, elements: !1142)
!1142 = !{!1143, !1147, !1174, !1176, !5038, !5066, !5070}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1141, file: !1073, line: 139, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !1078}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1141, file: !1073, line: 140, baseType: !1148, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1151, line: 230, size: 128, elements: !1152)
!1151 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1152 = !{!1153, !1167}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1150, file: !1151, line: 231, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!1157, !1078, !1161, !1126}
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !975, line: 60, baseType: !1158)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1159, line: 73, baseType: !1160)
!1159 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1159, line: 15, baseType: !881)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1151, line: 30, size: 128, elements: !1163)
!1163 = !{!1164, !1165}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1162, file: !1151, line: 31, baseType: !1006, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1162, file: !1151, line: 32, baseType: !1166, size: 16, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !975, line: 19, baseType: !1064)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1150, file: !1151, line: 232, baseType: !1168, size: 64, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!1157, !1078, !1161, !1006, !1171}
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !975, line: 55, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1159, line: 72, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1159, line: 16, baseType: !1010)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1141, file: !1073, line: 141, baseType: !1175, size: 64, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1141, file: !1073, line: 142, baseType: !1177, size: 64, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1151, line: 84, size: 320, elements: !1181)
!1181 = !{!1182, !1183, !1187, !5035, !5036}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1180, file: !1151, line: 85, baseType: !1006, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1180, file: !1151, line: 86, baseType: !1184, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!1166, !1078, !1161, !181}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1180, file: !1151, line: 88, baseType: !1188, size: 64, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!1166, !1078, !1191, !181}
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1151, line: 168, size: 448, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197, !5030, !5031}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1192, file: !1151, line: 169, baseType: !1162, size: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1192, file: !1151, line: 170, baseType: !1171, size: 64, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1192, file: !1151, line: 171, baseType: !968, size: 64, offset: 192)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1192, file: !1151, line: 172, baseType: !1198, size: 64, offset: 256)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!1157, !1201, !1078, !1191, !1126, !1372, !1171}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !12, line: 916, size: 1856, align: 32, elements: !1203)
!1203 = !{!1204, !1222, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5004, !5013, !5014, !5023, !5024, !5025, !5026, !5027, !5028, !5029}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1202, file: !12, line: 920, baseType: !1205, size: 128)
!1205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1202, file: !12, line: 917, size: 128, elements: !1206)
!1206 = !{!1207, !1213}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1205, file: !12, line: 918, baseType: !1208, size: 64)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1209, line: 58, size: 64, elements: !1210)
!1209 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1210 = !{!1211}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1208, file: !1209, line: 59, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1205, file: !12, line: 919, baseType: !1214, size: 128, align: 64)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !975, line: 216, size: 128, align: 64, elements: !1215)
!1215 = !{!1216, !1218}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1214, file: !975, line: 217, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1214, file: !975, line: 218, baseType: !1219, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{null, !1217}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1202, file: !12, line: 921, baseType: !1223, size: 128, offset: 128)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1224, line: 8, size: 128, elements: !1225)
!1224 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1225 = !{!1226, !1230}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1223, file: !1224, line: 9, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1229, line: 18, flags: DIFlagFwdDecl)
!1229 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1223, file: !1224, line: 10, baseType: !1231, size: 64, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1229, line: 89, size: 1536, elements: !1233)
!1233 = !{!1234, !1235, !1245, !1253, !1254, !1269, !4963, !4965, !4977, !4978, !4979, !4980, !4981, !4987, !4988, !4989}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1232, file: !1229, line: 91, baseType: !7, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1232, file: !1229, line: 92, baseType: !1236, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1237, line: 277, baseType: !1238)
!1237 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1237, line: 277, size: 32, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1238, file: !1237, line: 277, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1237, line: 70, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1237, line: 65, size: 32, elements: !1243)
!1243 = !{!1244}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1242, file: !1237, line: 66, baseType: !7, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1232, file: !1229, line: 93, baseType: !1246, size: 128, offset: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1247, line: 38, size: 128, elements: !1248)
!1247 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1248 = !{!1249, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !1247, line: 39, baseType: !1250, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1246, file: !1247, line: 39, baseType: !1252, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1232, file: !1229, line: 94, baseType: !1231, size: 64, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1232, file: !1229, line: 95, baseType: !1255, size: 128, offset: 256)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1229, line: 47, size: 128, elements: !1256)
!1256 = !{!1257, !1266}
!1257 = !DIDerivedType(tag: DW_TAG_member, scope: !1255, file: !1229, line: 48, baseType: !1258, size: 64)
!1258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1255, file: !1229, line: 48, size: 64, elements: !1259)
!1259 = !{!1260, !1265}
!1260 = !DIDerivedType(tag: DW_TAG_member, scope: !1258, file: !1229, line: 49, baseType: !1261, size: 64)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1258, file: !1229, line: 49, size: 64, elements: !1262)
!1262 = !{!1263, !1264}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1261, file: !1229, line: 50, baseType: !1040, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1261, file: !1229, line: 50, baseType: !1040, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1258, file: !1229, line: 52, baseType: !999, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1255, file: !1229, line: 54, baseType: !1267, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1232, file: !1229, line: 96, baseType: !1270, size: 64, offset: 384)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !12, line: 610, size: 4224, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1283, !1290, !1291, !1439, !4676, !4677, !4678, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4939, !4947, !4948, !4949, !4959, !4960, !4961, !4962}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1271, file: !12, line: 611, baseType: !1166, size: 16)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1271, file: !12, line: 612, baseType: !1064, size: 16, offset: 16)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1271, file: !12, line: 613, baseType: !1276, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1277, line: 23, baseType: !1278)
!1277 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1277, line: 21, size: 32, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1278, file: !1277, line: 22, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !975, line: 32, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1159, line: 49, baseType: !7)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1271, file: !12, line: 614, baseType: !1284, size: 32, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1277, line: 28, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1277, line: 26, size: 32, elements: !1286)
!1286 = !{!1287}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1285, file: !1277, line: 27, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !975, line: 33, baseType: !1289)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1159, line: 50, baseType: !7)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1271, file: !12, line: 615, baseType: !7, size: 32, offset: 96)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1271, file: !12, line: 622, baseType: !1292, size: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !12, line: 1864, size: 1536, align: 512, elements: !1295)
!1295 = !{!1296, !1300, !1313, !1317, !1323, !1327, !1333, !1337, !1341, !1345, !1349, !1350, !1356, !1360, !1386, !1415, !1419, !1425, !1430, !1434, !1435}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1294, file: !12, line: 1865, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!1231, !1270, !1231, !7}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1294, file: !12, line: 1866, baseType: !1301, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!1006, !1231, !1270, !1304}
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1306, line: 10, size: 128, elements: !1307)
!1306 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1307 = !{!1308, !1312}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1305, file: !1306, line: 11, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{null, !968}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1305, file: !1306, line: 12, baseType: !968, size: 64, offset: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1294, file: !12, line: 1867, baseType: !1314, size: 64, offset: 128)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!181, !1270, !181}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1294, file: !12, line: 1868, baseType: !1318, size: 64, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!1321, !1270, !181}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !12, line: 581, flags: DIFlagFwdDecl)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1294, file: !12, line: 1870, baseType: !1324, size: 64, offset: 256)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!181, !1231, !1126, !181}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1294, file: !12, line: 1872, baseType: !1328, size: 64, offset: 320)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!181, !1270, !1231, !1166, !1331}
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !975, line: 30, baseType: !1332)
!1332 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1294, file: !12, line: 1873, baseType: !1334, size: 64, offset: 384)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!181, !1231, !1270, !1231}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1294, file: !12, line: 1874, baseType: !1338, size: 64, offset: 448)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!181, !1270, !1231}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1294, file: !12, line: 1875, baseType: !1342, size: 64, offset: 512)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!181, !1270, !1231, !1006}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1294, file: !12, line: 1876, baseType: !1346, size: 64, offset: 576)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!181, !1270, !1231, !1166}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1294, file: !12, line: 1877, baseType: !1338, size: 64, offset: 640)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1294, file: !12, line: 1878, baseType: !1351, size: 64, offset: 704)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!181, !1270, !1231, !1166, !1354}
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !975, line: 16, baseType: !1355)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !975, line: 13, baseType: !1040)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1294, file: !12, line: 1879, baseType: !1357, size: 64, offset: 768)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!181, !1270, !1231, !1270, !1231, !7}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1294, file: !12, line: 1881, baseType: !1361, size: 64, offset: 832)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!181, !1231, !1364}
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !12, line: 219, size: 640, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371, !1375, !1383, !1384, !1385}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1365, file: !12, line: 220, baseType: !7, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1365, file: !12, line: 221, baseType: !1166, size: 16, offset: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1365, file: !12, line: 222, baseType: !1276, size: 32, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1365, file: !12, line: 223, baseType: !1284, size: 32, offset: 96)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1365, file: !12, line: 224, baseType: !1372, size: 64, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !975, line: 46, baseType: !1373)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1159, line: 88, baseType: !1374)
!1374 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1365, file: !12, line: 225, baseType: !1376, size: 128, offset: 192)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1377, line: 13, size: 128, elements: !1378)
!1377 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1378 = !{!1379, !1382}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1376, file: !1377, line: 14, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1377, line: 8, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !1002, line: 30, baseType: !1374)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1376, file: !1377, line: 15, baseType: !881, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1365, file: !12, line: 226, baseType: !1376, size: 128, offset: 320)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1365, file: !12, line: 227, baseType: !1376, size: 128, offset: 448)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1365, file: !12, line: 234, baseType: !1201, size: 64, offset: 576)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1294, file: !12, line: 1882, baseType: !1387, size: 64, offset: 896)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!181, !1390, !1392, !1040, !7}
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1394, line: 22, size: 1152, elements: !1395)
!1394 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1395 = !{!1396, !1397, !1398, !1399, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1393, file: !1394, line: 23, baseType: !1040, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1393, file: !1394, line: 24, baseType: !1166, size: 16, offset: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1393, file: !1394, line: 25, baseType: !7, size: 32, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1393, file: !1394, line: 26, baseType: !1400, size: 32, offset: 96)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !975, line: 104, baseType: !1040)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1393, file: !1394, line: 27, baseType: !999, size: 64, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1393, file: !1394, line: 28, baseType: !999, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1393, file: !1394, line: 37, baseType: !999, size: 64, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1393, file: !1394, line: 38, baseType: !1354, size: 32, offset: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1393, file: !1394, line: 39, baseType: !1354, size: 32, offset: 352)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1393, file: !1394, line: 40, baseType: !1276, size: 32, offset: 384)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1393, file: !1394, line: 41, baseType: !1284, size: 32, offset: 416)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1393, file: !1394, line: 42, baseType: !1372, size: 64, offset: 448)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1393, file: !1394, line: 43, baseType: !1376, size: 128, offset: 512)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1393, file: !1394, line: 44, baseType: !1376, size: 128, offset: 640)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1393, file: !1394, line: 45, baseType: !1376, size: 128, offset: 768)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1393, file: !1394, line: 46, baseType: !1376, size: 128, offset: 896)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1393, file: !1394, line: 47, baseType: !999, size: 64, offset: 1024)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1393, file: !1394, line: 48, baseType: !999, size: 64, offset: 1088)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1294, file: !12, line: 1883, baseType: !1416, size: 64, offset: 960)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!1157, !1231, !1126, !1171}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1294, file: !12, line: 1884, baseType: !1420, size: 64, offset: 1024)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!181, !1270, !1423, !999, !999}
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !12, line: 50, flags: DIFlagFwdDecl)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1294, file: !12, line: 1886, baseType: !1426, size: 64, offset: 1088)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!181, !1270, !1429, !181}
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1294, file: !12, line: 1887, baseType: !1431, size: 64, offset: 1152)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{!181, !1270, !1231, !1201, !7, !1166}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1294, file: !12, line: 1890, baseType: !1346, size: 64, offset: 1216)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1294, file: !12, line: 1891, baseType: !1436, size: 64, offset: 1280)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{!181, !1270, !1321, !181}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1271, file: !12, line: 623, baseType: !1440, size: 64, offset: 192)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !12, line: 1416, size: 9472, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446, !1447, !1448, !1498, !4290, !4372, !4455, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4471, !4475, !4476, !4477, !4478, !4481, !4482, !4483, !4524, !4550, !4551, !4552, !4553, !4554, !4555, !4558, !4559, !4566, !4567, !4568, !4569, !4570, !4629, !4630, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1441, file: !12, line: 1417, baseType: !974, size: 128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1441, file: !12, line: 1418, baseType: !1354, size: 32, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1441, file: !12, line: 1419, baseType: !1055, size: 8, offset: 160)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1441, file: !12, line: 1420, baseType: !1010, size: 64, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1441, file: !12, line: 1421, baseType: !1372, size: 64, offset: 256)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1441, file: !12, line: 1422, baseType: !1449, size: 64, offset: 320)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !12, line: 2228, size: 576, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1461, !1465, !1469, !1473, !1477, !1478, !1488, !1491, !1492, !1493, !1495, !1496, !1497}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1450, file: !12, line: 2229, baseType: !1006, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1450, file: !12, line: 2230, baseType: !181, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1450, file: !12, line: 2238, baseType: !1455, size: 64, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!181, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1460, line: 28, flags: DIFlagFwdDecl)
!1460 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1450, file: !12, line: 2239, baseType: !1462, size: 64, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1464)
!1464 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !12, line: 70, flags: DIFlagFwdDecl)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1450, file: !12, line: 2240, baseType: !1466, size: 64, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!1231, !1449, !181, !1006, !968}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1450, file: !12, line: 2242, baseType: !1470, size: 64, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !1440}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1450, file: !12, line: 2243, baseType: !1474, size: 64, offset: 384)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1476, line: 76, flags: DIFlagFwdDecl)
!1476 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1450, file: !12, line: 2244, baseType: !1449, size: 64, offset: 448)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1450, file: !12, line: 2245, baseType: !1479, size: 64, offset: 512)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !975, line: 182, size: 64, elements: !1480)
!1480 = !{!1481}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1479, file: !975, line: 183, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !975, line: 186, size: 128, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1483, file: !975, line: 187, baseType: !1482, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1483, file: !975, line: 187, baseType: !1487, size: 64, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1450, file: !12, line: 2247, baseType: !1489, offset: 576)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1490, line: 187, elements: !1099)
!1490 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1450, file: !12, line: 2248, baseType: !1489, offset: 576)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1450, file: !12, line: 2249, baseType: !1489, offset: 576)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1450, file: !12, line: 2250, baseType: !1494, offset: 576)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, elements: !1127)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1450, file: !12, line: 2252, baseType: !1489, offset: 576)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1450, file: !12, line: 2253, baseType: !1489, offset: 576)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1450, file: !12, line: 2254, baseType: !1489, offset: 576)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1441, file: !12, line: 1423, baseType: !1499, size: 64, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !12, line: 1935, size: 1472, elements: !1502)
!1502 = !{!1503, !1507, !1511, !1512, !1516, !1522, !1526, !1527, !1528, !1532, !1536, !1537, !1538, !1539, !1545, !1550, !1551, !1607, !1608, !1609, !1610, !4274, !4289}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1501, file: !12, line: 1936, baseType: !1504, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!1270, !1440}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1501, file: !12, line: 1937, baseType: !1508, size: 64, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{null, !1270}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1501, file: !12, line: 1938, baseType: !1508, size: 64, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1501, file: !12, line: 1940, baseType: !1513, size: 64, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{null, !1270, !181}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1501, file: !12, line: 1941, baseType: !1517, size: 64, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!181, !1270, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !130, line: 40, flags: DIFlagFwdDecl)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1501, file: !12, line: 1942, baseType: !1523, size: 64, offset: 320)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!181, !1270}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1501, file: !12, line: 1943, baseType: !1508, size: 64, offset: 384)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1501, file: !12, line: 1944, baseType: !1470, size: 64, offset: 448)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1501, file: !12, line: 1945, baseType: !1529, size: 64, offset: 512)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!181, !1440, !181}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1501, file: !12, line: 1946, baseType: !1533, size: 64, offset: 576)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!181, !1440}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1501, file: !12, line: 1947, baseType: !1533, size: 64, offset: 640)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1501, file: !12, line: 1948, baseType: !1533, size: 64, offset: 704)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1501, file: !12, line: 1949, baseType: !1533, size: 64, offset: 768)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1501, file: !12, line: 1950, baseType: !1540, size: 64, offset: 832)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!181, !1231, !1543}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !12, line: 57, flags: DIFlagFwdDecl)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1501, file: !12, line: 1951, baseType: !1546, size: 64, offset: 896)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!181, !1440, !1549, !1126}
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1501, file: !12, line: 1952, baseType: !1470, size: 64, offset: 960)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1501, file: !12, line: 1954, baseType: !1552, size: 64, offset: 1024)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!181, !1555, !1231}
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1557, line: 16, size: 896, elements: !1558)
!1557 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1558 = !{!1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1580, !1602, !1603, !1606}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1556, file: !1557, line: 17, baseType: !1126, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1556, file: !1557, line: 18, baseType: !1171, size: 64, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1556, file: !1557, line: 19, baseType: !1171, size: 64, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1556, file: !1557, line: 20, baseType: !1171, size: 64, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1556, file: !1557, line: 21, baseType: !1171, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1556, file: !1557, line: 22, baseType: !1372, size: 64, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1556, file: !1557, line: 23, baseType: !1372, size: 64, offset: 384)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1556, file: !1557, line: 24, baseType: !1567, size: 192, offset: 448)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1568, line: 53, size: 192, elements: !1569)
!1568 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1569 = !{!1570, !1578, !1579}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1567, file: !1568, line: 54, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1572, line: 13, baseType: !1573)
!1572 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !975, line: 175, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !975, line: 173, size: 64, elements: !1575)
!1575 = !{!1576}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1574, file: !975, line: 174, baseType: !1577, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !1000, line: 22, baseType: !1381)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1567, file: !1568, line: 55, baseType: !1085, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1567, file: !1568, line: 59, baseType: !974, size: 128, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1556, file: !1557, line: 25, baseType: !1581, size: 64, offset: 640)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1557, line: 31, size: 256, elements: !1584)
!1584 = !{!1585, !1590, !1594, !1598}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1583, file: !1557, line: 32, baseType: !1586, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!968, !1555, !1589}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1583, file: !1557, line: 33, baseType: !1591, size: 64, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{null, !1555, !968}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1583, file: !1557, line: 34, baseType: !1595, size: 64, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!968, !1555, !968, !1589}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1583, file: !1557, line: 35, baseType: !1599, size: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!181, !1555, !968}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1556, file: !1557, line: 26, baseType: !181, size: 32, offset: 704)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1556, file: !1557, line: 27, baseType: !1604, size: 64, offset: 768)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1556, file: !1557, line: 28, baseType: !968, size: 64, offset: 832)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1501, file: !12, line: 1955, baseType: !1552, size: 64, offset: 1088)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1501, file: !12, line: 1956, baseType: !1552, size: 64, offset: 1152)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1501, file: !12, line: 1957, baseType: !1552, size: 64, offset: 1216)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1501, file: !12, line: 1963, baseType: !1611, size: 64, offset: 1280)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!181, !1440, !1614, !1637}
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1616, line: 68, size: 512, align: 128, elements: !1617)
!1616 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1617 = !{!1618, !1619, !4266, !4273}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1615, file: !1616, line: 69, baseType: !1010, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, scope: !1615, file: !1616, line: 77, baseType: !1620, size: 320, offset: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1615, file: !1616, line: 77, size: 320, elements: !1621)
!1621 = !{!1622, !1827, !1832, !1860, !1868, !1874, !4217, !4265}
!1622 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1616, line: 78, baseType: !1623, size: 320)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1616, line: 78, size: 320, elements: !1624)
!1624 = !{!1625, !1626, !1825, !1826}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1623, file: !1616, line: 84, baseType: !974, size: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1623, file: !1616, line: 86, baseType: !1627, size: 64, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !12, line: 451, size: 1216, align: 64, elements: !1629)
!1629 = !{!1630, !1631, !1639, !1640, !1645, !1660, !1669, !1670, !1671, !1672, !1818, !1819, !1822, !1823, !1824}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1628, file: !12, line: 452, baseType: !1270, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1628, file: !12, line: 453, baseType: !1632, size: 128, offset: 64)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1633, line: 292, size: 128, elements: !1634)
!1633 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1634 = !{!1635, !1636, !1638}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1632, file: !1633, line: 293, baseType: !1085)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1632, file: !1633, line: 295, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !975, line: 148, baseType: !7)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1632, file: !1633, line: 296, baseType: !968, size: 64, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1628, file: !12, line: 454, baseType: !1637, size: 32, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1628, file: !12, line: 455, baseType: !1641, size: 32, offset: 224)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !975, line: 168, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !975, line: 166, size: 32, elements: !1643)
!1643 = !{!1644}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1642, file: !975, line: 167, baseType: !181, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1628, file: !12, line: 460, baseType: !1646, size: 128, offset: 256)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1647, line: 125, size: 128, elements: !1648)
!1647 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1648 = !{!1649, !1659}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1646, file: !1647, line: 126, baseType: !1650, size: 64)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1647, line: 31, size: 64, elements: !1651)
!1651 = !{!1652}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1650, file: !1647, line: 32, baseType: !1653, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1647, line: 24, size: 192, align: 64, elements: !1655)
!1655 = !{!1656, !1657, !1658}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1654, file: !1647, line: 25, baseType: !1010, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1654, file: !1647, line: 26, baseType: !1653, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1654, file: !1647, line: 27, baseType: !1653, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1646, file: !1647, line: 127, baseType: !1653, size: 64, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1628, file: !12, line: 461, baseType: !1661, size: 256, offset: 384)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1662, line: 35, size: 256, elements: !1663)
!1662 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1663 = !{!1664, !1665, !1666, !1668}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1661, file: !1662, line: 36, baseType: !1571, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1661, file: !1662, line: 42, baseType: !1571, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1661, file: !1662, line: 46, baseType: !1667, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1086, line: 29, baseType: !1093)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1661, file: !1662, line: 47, baseType: !974, size: 128, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1628, file: !12, line: 462, baseType: !1010, size: 64, offset: 640)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1628, file: !12, line: 463, baseType: !1010, size: 64, offset: 704)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1628, file: !12, line: 464, baseType: !1010, size: 64, offset: 768)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1628, file: !12, line: 465, baseType: !1673, size: 64, offset: 832)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !12, line: 367, size: 1408, elements: !1676)
!1676 = !{!1677, !1681, !1685, !1689, !1693, !1697, !1710, !1716, !1720, !1725, !1729, !1733, !1737, !1782, !1786, !1792, !1793, !1794, !1798, !1803, !1807, !1814}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1675, file: !12, line: 368, baseType: !1678, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!181, !1614, !1520}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1675, file: !12, line: 369, baseType: !1682, size: 64, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!181, !1201, !1614}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1675, file: !12, line: 372, baseType: !1686, size: 64, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!181, !1627, !1520}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1675, file: !12, line: 375, baseType: !1690, size: 64, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!181, !1614}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1675, file: !12, line: 381, baseType: !1694, size: 64, offset: 256)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{!181, !1201, !1627, !978, !7}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1675, file: !12, line: 383, baseType: !1698, size: 64, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{null, !1701}
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1703, line: 795, size: 256, elements: !1704)
!1703 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1704 = !{!1705, !1706, !1707, !1708, !1709}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1702, file: !1703, line: 796, baseType: !1201, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1702, file: !1703, line: 797, baseType: !1627, size: 64, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1702, file: !1703, line: 799, baseType: !1010, size: 64, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1702, file: !1703, line: 800, baseType: !7, size: 32, offset: 192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1702, file: !1703, line: 801, baseType: !7, size: 32, offset: 224)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1675, file: !12, line: 385, baseType: !1711, size: 64, offset: 384)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!181, !1201, !1627, !1372, !7, !7, !1714, !1715}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1675, file: !12, line: 388, baseType: !1717, size: 64, offset: 448)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!181, !1201, !1627, !1372, !7, !7, !1614, !968}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1675, file: !12, line: 393, baseType: !1721, size: 64, offset: 512)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!1724, !1627, !1724}
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !975, line: 125, baseType: !999)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1675, file: !12, line: 394, baseType: !1726, size: 64, offset: 576)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{null, !1614, !7, !7}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1675, file: !12, line: 395, baseType: !1730, size: 64, offset: 640)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!181, !1614, !1637}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1675, file: !12, line: 396, baseType: !1734, size: 64, offset: 704)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{null, !1614}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1675, file: !12, line: 397, baseType: !1738, size: 64, offset: 768)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!1157, !1741, !1780}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !12, line: 320, size: 384, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1750, !1751, !1752, !1755, !1756}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1742, file: !12, line: 321, baseType: !1201, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1742, file: !12, line: 326, baseType: !1372, size: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1742, file: !12, line: 327, baseType: !1747, size: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{null, !1741, !881, !881}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1742, file: !12, line: 328, baseType: !968, size: 64, offset: 192)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1742, file: !12, line: 329, baseType: !181, size: 32, offset: 256)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1742, file: !12, line: 330, baseType: !1753, size: 16, offset: 288)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !1000, line: 19, baseType: !1754)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !1002, line: 24, baseType: !1064)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1742, file: !12, line: 331, baseType: !1753, size: 16, offset: 304)
!1756 = !DIDerivedType(tag: DW_TAG_member, scope: !1742, file: !12, line: 332, baseType: !1757, size: 64, offset: 320)
!1757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1742, file: !12, line: 332, size: 64, elements: !1758)
!1758 = !{!1759, !1760}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1757, file: !12, line: 333, baseType: !7, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1757, file: !12, line: 334, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1703, line: 569, size: 448, elements: !1763)
!1763 = !{!1764, !1765, !1766}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1762, file: !1703, line: 570, baseType: !1614, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1762, file: !1703, line: 571, baseType: !181, size: 32, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1762, file: !1703, line: 572, baseType: !1767, size: 320, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1768, line: 14, baseType: !1769)
!1768 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1768, line: 29, size: 320, elements: !1770)
!1770 = !{!1771, !1772, !1773, !1779}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1769, file: !1768, line: 30, baseType: !7, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1769, file: !1768, line: 31, baseType: !968, size: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1769, file: !1768, line: 32, baseType: !1774, size: 64, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1768, line: 16, baseType: !1775)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!181, !1778, !7, !181, !968}
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1769, file: !1768, line: 33, baseType: !974, size: 128, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !12, line: 64, flags: DIFlagFwdDecl)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1675, file: !12, line: 402, baseType: !1783, size: 64, offset: 832)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!181, !1627, !1614, !1614, !115}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1675, file: !12, line: 404, baseType: !1787, size: 64, offset: 896)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!1331, !1614, !1790}
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1791, line: 305, baseType: !7)
!1791 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1675, file: !12, line: 405, baseType: !1734, size: 64, offset: 960)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1675, file: !12, line: 406, baseType: !1690, size: 64, offset: 1024)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1675, file: !12, line: 407, baseType: !1795, size: 64, offset: 1088)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!181, !1614, !1010, !1010}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1675, file: !12, line: 409, baseType: !1799, size: 64, offset: 1152)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{null, !1614, !1802, !1802}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1675, file: !12, line: 410, baseType: !1804, size: 64, offset: 1216)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!181, !1627, !1614}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1675, file: !12, line: 413, baseType: !1808, size: 64, offset: 1280)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!181, !1811, !1201, !1813}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !12, line: 61, flags: DIFlagFwdDecl)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1675, file: !12, line: 415, baseType: !1815, size: 64, offset: 1344)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{null, !1201}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1628, file: !12, line: 466, baseType: !1010, size: 64, offset: 896)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1628, file: !12, line: 467, baseType: !1820, size: 32, offset: 960)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1821, line: 8, baseType: !1040)
!1821 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1628, file: !12, line: 468, baseType: !1085, offset: 992)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1628, file: !12, line: 469, baseType: !974, size: 128, offset: 1024)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1628, file: !12, line: 470, baseType: !968, size: 64, offset: 1152)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1623, file: !1616, line: 87, baseType: !1010, size: 64, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1623, file: !1616, line: 94, baseType: !1010, size: 64, offset: 256)
!1827 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1616, line: 96, baseType: !1828, size: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1616, line: 96, size: 64, elements: !1829)
!1829 = !{!1830}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1828, file: !1616, line: 101, baseType: !1831, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !975, line: 143, baseType: !999)
!1832 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1616, line: 103, baseType: !1833, size: 320)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1616, line: 103, size: 320, elements: !1834)
!1834 = !{!1835, !1845, !1848, !1849}
!1835 = !DIDerivedType(tag: DW_TAG_member, scope: !1833, file: !1616, line: 104, baseType: !1836, size: 128)
!1836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1833, file: !1616, line: 104, size: 128, elements: !1837)
!1837 = !{!1838, !1839}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1836, file: !1616, line: 105, baseType: !974, size: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, scope: !1836, file: !1616, line: 106, baseType: !1840, size: 128)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1836, file: !1616, line: 106, size: 128, elements: !1841)
!1841 = !{!1842, !1843, !1844}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1840, file: !1616, line: 107, baseType: !1614, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1840, file: !1616, line: 109, baseType: !181, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1840, file: !1616, line: 110, baseType: !181, size: 32, offset: 96)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1833, file: !1616, line: 117, baseType: !1846, size: 64, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1616, line: 117, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1833, file: !1616, line: 119, baseType: !968, size: 64, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_member, scope: !1833, file: !1616, line: 120, baseType: !1850, size: 64, offset: 256)
!1850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1833, file: !1616, line: 120, size: 64, elements: !1851)
!1851 = !{!1852, !1853, !1854}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1850, file: !1616, line: 121, baseType: !968, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1850, file: !1616, line: 122, baseType: !1010, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, scope: !1850, file: !1616, line: 123, baseType: !1855, size: 32)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1850, file: !1616, line: 123, size: 32, elements: !1856)
!1856 = !{!1857, !1858, !1859}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1855, file: !1616, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1855, file: !1616, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1855, file: !1616, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1860 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1616, line: 130, baseType: !1861, size: 192)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1616, line: 130, size: 192, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1861, file: !1616, line: 131, baseType: !1010, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1861, file: !1616, line: 134, baseType: !1055, size: 8, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1861, file: !1616, line: 135, baseType: !1055, size: 8, offset: 72)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1861, file: !1616, line: 136, baseType: !1641, size: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1861, file: !1616, line: 137, baseType: !7, size: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1616, line: 139, baseType: !1869, size: 256)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1616, line: 139, size: 256, elements: !1870)
!1870 = !{!1871, !1872, !1873}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1869, file: !1616, line: 140, baseType: !1010, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1869, file: !1616, line: 141, baseType: !1641, size: 32, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1869, file: !1616, line: 143, baseType: !974, size: 128, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1616, line: 145, baseType: !1875, size: 256)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1616, line: 145, size: 256, elements: !1876)
!1876 = !{!1877, !1878, !1881, !1882, !4216}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1875, file: !1616, line: 146, baseType: !1010, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1875, file: !1616, line: 147, baseType: !1879, size: 64, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1880, line: 509, baseType: !1614)
!1880 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1875, file: !1616, line: 148, baseType: !1010, size: 64, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, scope: !1875, file: !1616, line: 149, baseType: !1883, size: 64, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1875, file: !1616, line: 149, size: 64, elements: !1884)
!1884 = !{!1885, !4215}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1883, file: !1616, line: 150, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1616, line: 388, size: 7296, elements: !1888)
!1888 = !{!1889, !4213}
!1889 = !DIDerivedType(tag: DW_TAG_member, scope: !1887, file: !1616, line: 389, baseType: !1890, size: 7296)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1887, file: !1616, line: 389, size: 7296, elements: !1891)
!1891 = !{!1892, !2010, !2011, !2012, !2016, !2017, !2018, !2019, !2020, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2061, !2067, !2070, !2110, !2111, !4197, !4198, !4201, !4202, !4203, !4206, !4207, !4208, !4211, !4212}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1890, file: !1616, line: 390, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1616, line: 305, size: 1472, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1910, !1911, !1916, !1917, !1920, !2004, !2005, !2006, !2007, !2008}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1894, file: !1616, line: 308, baseType: !1010, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1894, file: !1616, line: 309, baseType: !1010, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1894, file: !1616, line: 313, baseType: !1893, size: 64, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1894, file: !1616, line: 313, baseType: !1893, size: 64, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1894, file: !1616, line: 315, baseType: !1654, size: 192, align: 64, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1894, file: !1616, line: 323, baseType: !1010, size: 64, offset: 448)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1894, file: !1616, line: 327, baseType: !1886, size: 64, offset: 512)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1894, file: !1616, line: 333, baseType: !1904, size: 64, offset: 576)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1880, line: 284, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1880, line: 284, size: 64, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1905, file: !1880, line: 284, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1909, line: 19, baseType: !1010)
!1909 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1894, file: !1616, line: 334, baseType: !1010, size: 64, offset: 640)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1894, file: !1616, line: 343, baseType: !1912, size: 256, offset: 704)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1894, file: !1616, line: 340, size: 256, elements: !1913)
!1913 = !{!1914, !1915}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1912, file: !1616, line: 341, baseType: !1654, size: 192, align: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1912, file: !1616, line: 342, baseType: !1010, size: 64, offset: 192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1894, file: !1616, line: 351, baseType: !974, size: 128, offset: 960)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1894, file: !1616, line: 353, baseType: !1918, size: 64, offset: 1088)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1616, line: 353, flags: DIFlagFwdDecl)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1894, file: !1616, line: 356, baseType: !1921, size: 64, offset: 1152)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !130, line: 557, size: 832, elements: !1924)
!1924 = !{!1925, !1929, !1930, !1934, !1938, !1978, !1982, !1986, !1990, !1991, !1992, !1996, !2000}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1923, file: !130, line: 558, baseType: !1926, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{null, !1893}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1923, file: !130, line: 559, baseType: !1926, size: 64, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1923, file: !130, line: 560, baseType: !1931, size: 64, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!181, !1893, !1010}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1923, file: !130, line: 561, baseType: !1935, size: 64, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{!181, !1893}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1923, file: !130, line: 562, baseType: !1939, size: 64, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!1942, !1943}
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1616, line: 682, baseType: !7)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !130, line: 508, size: 768, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949, !1950, !1951, !1958, !1965, !1971, !1972, !1973, !1975, !1977}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1944, file: !130, line: 509, baseType: !1893, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1944, file: !130, line: 510, baseType: !7, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1944, file: !130, line: 511, baseType: !1637, size: 32, offset: 96)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1944, file: !130, line: 512, baseType: !1010, size: 64, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1944, file: !130, line: 513, baseType: !1010, size: 64, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1944, file: !130, line: 514, baseType: !1952, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1880, line: 385, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1880, line: 385, size: 64, elements: !1955)
!1955 = !{!1956}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1954, file: !1880, line: 385, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1909, line: 15, baseType: !1010)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1944, file: !130, line: 516, baseType: !1959, size: 64, offset: 320)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1880, line: 359, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1880, line: 359, size: 64, elements: !1962)
!1962 = !{!1963}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1961, file: !1880, line: 359, baseType: !1964, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1909, line: 16, baseType: !1010)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1944, file: !130, line: 519, baseType: !1966, size: 64, offset: 384)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1909, line: 21, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1909, line: 21, size: 64, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1967, file: !1909, line: 21, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1909, line: 14, baseType: !1010)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1944, file: !130, line: 521, baseType: !1614, size: 64, offset: 448)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1944, file: !130, line: 522, baseType: !1614, size: 64, offset: 512)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1944, file: !130, line: 528, baseType: !1974, size: 64, offset: 576)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1944, file: !130, line: 532, baseType: !1976, size: 64, offset: 640)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1944, file: !130, line: 536, baseType: !1879, size: 64, offset: 704)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1923, file: !130, line: 563, baseType: !1979, size: 64, offset: 320)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!1942, !1943, !129}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1923, file: !130, line: 565, baseType: !1983, size: 64, offset: 384)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1943, !1010, !1010}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1923, file: !130, line: 567, baseType: !1987, size: 64, offset: 448)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!1010, !1893}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1923, file: !130, line: 571, baseType: !1939, size: 64, offset: 512)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1923, file: !130, line: 574, baseType: !1939, size: 64, offset: 576)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1923, file: !130, line: 579, baseType: !1993, size: 64, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!181, !1893, !1010, !968, !181, !181}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1923, file: !130, line: 585, baseType: !1997, size: 64, offset: 704)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!1006, !1893}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1923, file: !130, line: 615, baseType: !2001, size: 64, offset: 768)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{!1614, !1893, !1010}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1894, file: !1616, line: 359, baseType: !1010, size: 64, offset: 1216)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1894, file: !1616, line: 361, baseType: !1201, size: 64, offset: 1280)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1894, file: !1616, line: 362, baseType: !968, size: 64, offset: 1344)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1894, file: !1616, line: 365, baseType: !1571, size: 64, offset: 1408)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1894, file: !1616, line: 373, baseType: !2009, offset: 1472)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1616, line: 296, elements: !1099)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1890, file: !1616, line: 391, baseType: !1650, size: 64, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1890, file: !1616, line: 392, baseType: !999, size: 64, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1890, file: !1616, line: 394, baseType: !2013, size: 64, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!1010, !1201, !1010, !1010, !1010, !1010}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1890, file: !1616, line: 398, baseType: !1010, size: 64, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1890, file: !1616, line: 399, baseType: !1010, size: 64, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1890, file: !1616, line: 405, baseType: !1010, size: 64, offset: 384)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1890, file: !1616, line: 406, baseType: !1010, size: 64, offset: 448)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1890, file: !1616, line: 407, baseType: !2021, size: 64, offset: 512)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1880, line: 286, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1880, line: 286, size: 64, elements: !2024)
!2024 = !{!2025}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2023, file: !1880, line: 286, baseType: !2026, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1909, line: 18, baseType: !1010)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1890, file: !1616, line: 416, baseType: !1641, size: 32, offset: 576)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1890, file: !1616, line: 428, baseType: !1641, size: 32, offset: 608)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1890, file: !1616, line: 437, baseType: !1641, size: 32, offset: 640)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1890, file: !1616, line: 447, baseType: !1641, size: 32, offset: 672)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1890, file: !1616, line: 450, baseType: !1571, size: 64, offset: 704)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1890, file: !1616, line: 452, baseType: !181, size: 32, offset: 768)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1890, file: !1616, line: 454, baseType: !1085, offset: 800)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1890, file: !1616, line: 457, baseType: !1661, size: 256, offset: 832)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1890, file: !1616, line: 459, baseType: !974, size: 128, offset: 1088)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1890, file: !1616, line: 466, baseType: !1010, size: 64, offset: 1216)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1890, file: !1616, line: 467, baseType: !1010, size: 64, offset: 1280)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1890, file: !1616, line: 469, baseType: !1010, size: 64, offset: 1344)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1890, file: !1616, line: 470, baseType: !1010, size: 64, offset: 1408)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1890, file: !1616, line: 471, baseType: !1573, size: 64, offset: 1472)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1890, file: !1616, line: 472, baseType: !1010, size: 64, offset: 1536)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1890, file: !1616, line: 473, baseType: !1010, size: 64, offset: 1600)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1890, file: !1616, line: 474, baseType: !1010, size: 64, offset: 1664)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1890, file: !1616, line: 475, baseType: !1010, size: 64, offset: 1728)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1890, file: !1616, line: 477, baseType: !1085, offset: 1792)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1890, file: !1616, line: 478, baseType: !1010, size: 64, offset: 1792)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1890, file: !1616, line: 478, baseType: !1010, size: 64, offset: 1856)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1890, file: !1616, line: 478, baseType: !1010, size: 64, offset: 1920)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1890, file: !1616, line: 478, baseType: !1010, size: 64, offset: 1984)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1890, file: !1616, line: 479, baseType: !1010, size: 64, offset: 2048)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1890, file: !1616, line: 479, baseType: !1010, size: 64, offset: 2112)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1890, file: !1616, line: 479, baseType: !1010, size: 64, offset: 2176)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1890, file: !1616, line: 480, baseType: !1010, size: 64, offset: 2240)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1890, file: !1616, line: 480, baseType: !1010, size: 64, offset: 2304)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1890, file: !1616, line: 480, baseType: !1010, size: 64, offset: 2368)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1890, file: !1616, line: 480, baseType: !1010, size: 64, offset: 2432)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1890, file: !1616, line: 482, baseType: !2058, size: 2816, offset: 2496)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 2816, elements: !2059)
!2059 = !{!2060}
!2060 = !DISubrange(count: 44)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1890, file: !1616, line: 488, baseType: !2062, size: 256, offset: 5312)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2063, line: 60, size: 256, elements: !2064)
!2063 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2064 = !{!2065}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2062, file: !2063, line: 61, baseType: !2066, size: 256)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1571, size: 256, elements: !1015)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1890, file: !1616, line: 490, baseType: !2068, size: 64, offset: 5568)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1616, line: 490, flags: DIFlagFwdDecl)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1890, file: !1616, line: 493, baseType: !2071, size: 896, offset: 5632)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2072, line: 53, baseType: !2073)
!2072 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2072, line: 13, size: 896, elements: !2074)
!2074 = !{!2075, !2076, !2077, !2078, !2081, !2082, !2083, !2084, !2104, !2105, !2106}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2073, file: !2072, line: 18, baseType: !999, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2073, file: !2072, line: 28, baseType: !1573, size: 64, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2073, file: !2072, line: 31, baseType: !1661, size: 256, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2073, file: !2072, line: 32, baseType: !2079, size: 64, offset: 384)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2072, line: 32, flags: DIFlagFwdDecl)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2073, file: !2072, line: 37, baseType: !1064, size: 16, offset: 448)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2073, file: !2072, line: 40, baseType: !1567, size: 192, offset: 512)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2073, file: !2072, line: 41, baseType: !968, size: 64, offset: 704)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2073, file: !2072, line: 42, baseType: !2085, size: 64, offset: 768)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2088, line: 13, size: 896, elements: !2089)
!2088 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2089 = !{!2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2087, file: !2088, line: 14, baseType: !968, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2087, file: !2088, line: 15, baseType: !1010, size: 64, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2087, file: !2088, line: 17, baseType: !1010, size: 64, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2087, file: !2088, line: 17, baseType: !1010, size: 64, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2087, file: !2088, line: 19, baseType: !881, size: 64, offset: 256)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2087, file: !2088, line: 21, baseType: !881, size: 64, offset: 320)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2087, file: !2088, line: 22, baseType: !881, size: 64, offset: 384)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2087, file: !2088, line: 23, baseType: !881, size: 64, offset: 448)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2087, file: !2088, line: 24, baseType: !881, size: 64, offset: 512)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2087, file: !2088, line: 25, baseType: !881, size: 64, offset: 576)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2087, file: !2088, line: 26, baseType: !881, size: 64, offset: 640)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2087, file: !2088, line: 27, baseType: !881, size: 64, offset: 704)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2087, file: !2088, line: 28, baseType: !881, size: 64, offset: 768)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2087, file: !2088, line: 29, baseType: !881, size: 64, offset: 832)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2073, file: !2072, line: 44, baseType: !1641, size: 32, offset: 832)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2073, file: !2072, line: 50, baseType: !1753, size: 16, offset: 864)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2073, file: !2072, line: 51, baseType: !2107, size: 16, offset: 880)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !1000, line: 18, baseType: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !1002, line: 23, baseType: !2109)
!2109 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1890, file: !1616, line: 495, baseType: !1010, size: 64, offset: 6528)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1890, file: !1616, line: 497, baseType: !2112, size: 64, offset: 6592)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1616, line: 381, size: 384, elements: !2114)
!2114 = !{!2115, !2116, !4196}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2113, file: !1616, line: 382, baseType: !1641, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2113, file: !1616, line: 383, baseType: !2117, size: 128, offset: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1616, line: 376, size: 128, elements: !2118)
!2118 = !{!2119, !4194}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2117, file: !1616, line: 377, baseType: !2120, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2122, line: 640, size: 48640, elements: !2123)
!2122 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2123 = !{!2124, !2130, !2132, !2133, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2150, !2168, !2179, !2264, !2265, !2266, !2277, !2278, !2280, !2281, !2282, !2283, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2361, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2398, !2400, !2401, !2402, !2414, !2415, !2416, !2417, !2418, !2419, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2443, !2448, !2632, !2633, !2634, !2635, !2639, !2642, !2645, !2648, !2651, !2654, !2755, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2801, !2802, !2803, !2804, !2805, !2810, !2811, !2812, !2815, !2816, !3841, !3850, !3853, !3854, !3855, !3858, !3859, !3938, !3939, !3942, !3943, !3946, !3947, !3948, !3952, !3953, !3954, !3967, !3968, !3969, !3979, !3984, !3987, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2121, file: !2122, line: 646, baseType: !2125, size: 128)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2126, line: 56, size: 128, elements: !2127)
!2126 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2125, file: !2126, line: 57, baseType: !1010, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2125, file: !2126, line: 58, baseType: !1040, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2121, file: !2122, line: 649, baseType: !2131, size: 64, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !881)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2121, file: !2122, line: 657, baseType: !968, size: 64, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2121, file: !2122, line: 658, baseType: !2134, size: 32, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !2135, line: 113, baseType: !2136)
!2135 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !2135, line: 111, size: 32, elements: !2137)
!2137 = !{!2138}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2136, file: !2135, line: 112, baseType: !1641, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2121, file: !2122, line: 660, baseType: !7, size: 32, offset: 288)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2121, file: !2122, line: 661, baseType: !7, size: 32, offset: 320)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2121, file: !2122, line: 684, baseType: !181, size: 32, offset: 352)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2121, file: !2122, line: 686, baseType: !181, size: 32, offset: 384)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2121, file: !2122, line: 687, baseType: !181, size: 32, offset: 416)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2121, file: !2122, line: 688, baseType: !181, size: 32, offset: 448)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2121, file: !2122, line: 689, baseType: !7, size: 32, offset: 480)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2121, file: !2122, line: 691, baseType: !2147, size: 64, offset: 512)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2149)
!2149 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2122, line: 691, flags: DIFlagFwdDecl)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2121, file: !2122, line: 692, baseType: !2151, size: 832, offset: 576)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2122, line: 451, size: 832, elements: !2152)
!2152 = !{!2153, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2151, file: !2122, line: 453, baseType: !2154, size: 128)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2122, line: 325, size: 128, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2154, file: !2122, line: 326, baseType: !1010, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2154, file: !2122, line: 327, baseType: !1040, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2151, file: !2122, line: 454, baseType: !1654, size: 192, align: 64, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2151, file: !2122, line: 455, baseType: !974, size: 128, offset: 320)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2151, file: !2122, line: 456, baseType: !7, size: 32, offset: 448)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2151, file: !2122, line: 458, baseType: !999, size: 64, offset: 512)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2151, file: !2122, line: 459, baseType: !999, size: 64, offset: 576)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2151, file: !2122, line: 460, baseType: !999, size: 64, offset: 640)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2151, file: !2122, line: 461, baseType: !999, size: 64, offset: 704)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2151, file: !2122, line: 463, baseType: !999, size: 64, offset: 768)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2151, file: !2122, line: 465, baseType: !2167, offset: 832)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2122, line: 415, elements: !1099)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2121, file: !2122, line: 693, baseType: !2169, size: 384, offset: 1408)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2122, line: 489, size: 384, elements: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2169, file: !2122, line: 490, baseType: !974, size: 128)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2169, file: !2122, line: 491, baseType: !1010, size: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2169, file: !2122, line: 492, baseType: !1010, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2169, file: !2122, line: 493, baseType: !7, size: 32, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2169, file: !2122, line: 494, baseType: !1064, size: 16, offset: 288)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2169, file: !2122, line: 495, baseType: !1064, size: 16, offset: 304)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2169, file: !2122, line: 497, baseType: !2178, size: 64, offset: 320)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2121, file: !2122, line: 697, baseType: !2180, size: 1792, offset: 1792)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2122, line: 507, size: 1792, elements: !2181)
!2181 = !{!2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2261, !2262}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2180, file: !2122, line: 508, baseType: !1654, size: 192, align: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2180, file: !2122, line: 515, baseType: !999, size: 64, offset: 192)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2180, file: !2122, line: 516, baseType: !999, size: 64, offset: 256)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2180, file: !2122, line: 517, baseType: !999, size: 64, offset: 320)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2180, file: !2122, line: 518, baseType: !999, size: 64, offset: 384)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2180, file: !2122, line: 519, baseType: !999, size: 64, offset: 448)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2180, file: !2122, line: 526, baseType: !1577, size: 64, offset: 512)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2180, file: !2122, line: 527, baseType: !999, size: 64, offset: 576)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2180, file: !2122, line: 528, baseType: !7, size: 32, offset: 640)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2180, file: !2122, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2180, file: !2122, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2180, file: !2122, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2180, file: !2122, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2180, file: !2122, line: 563, baseType: !2196, size: 512, offset: 704)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !2197)
!2197 = !{!2198, !2206, !2207, !2212, !2255, !2258, !2259, !2260}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2196, file: !6, line: 119, baseType: !2199, size: 256)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2200, line: 9, size: 256, elements: !2201)
!2200 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2201 = !{!2202, !2203}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2199, file: !2200, line: 10, baseType: !1654, size: 192, align: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2199, file: !2200, line: 11, baseType: !2204, size: 64, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2205, line: 29, baseType: !1577)
!2205 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2196, file: !6, line: 120, baseType: !2204, size: 64, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2196, file: !6, line: 121, baseType: !2208, size: 64, offset: 320)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!5, !2211}
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2196, file: !6, line: 122, baseType: !2213, size: 64, offset: 384)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !2215)
!2215 = !{!2216, !2236, !2237, !2240, !2245, !2246, !2250, !2254}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2214, file: !6, line: 160, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !2219)
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2218, file: !6, line: 215, baseType: !1667)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2218, file: !6, line: 216, baseType: !7, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2218, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2218, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2218, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2218, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2218, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2218, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2218, file: !6, line: 233, baseType: !2204, size: 64, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2218, file: !6, line: 234, baseType: !2211, size: 64, offset: 192)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2218, file: !6, line: 235, baseType: !2204, size: 64, offset: 256)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2218, file: !6, line: 236, baseType: !2211, size: 64, offset: 320)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2218, file: !6, line: 237, baseType: !2233, size: 4096, offset: 512)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2214, size: 4096, elements: !2234)
!2234 = !{!2235}
!2235 = !DISubrange(count: 8)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2214, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2214, file: !6, line: 162, baseType: !2238, size: 32, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !975, line: 27, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1159, line: 96, baseType: !181)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2214, file: !6, line: 163, baseType: !2241, size: 32, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1237, line: 276, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1237, line: 276, size: 32, elements: !2243)
!2243 = !{!2244}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2242, file: !1237, line: 276, baseType: !1241, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2214, file: !6, line: 164, baseType: !2211, size: 64, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2214, file: !6, line: 165, baseType: !2247, size: 128, offset: 256)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2200, line: 14, size: 128, elements: !2248)
!2248 = !{!2249}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2247, file: !2200, line: 15, baseType: !1646, size: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2214, file: !6, line: 166, baseType: !2251, size: 64, offset: 384)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!2204}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2214, file: !6, line: 167, baseType: !2204, size: 64, offset: 448)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2196, file: !6, line: 123, baseType: !2256, size: 8, offset: 448)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !1000, line: 17, baseType: !2257)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !1002, line: 21, baseType: !1055)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2196, file: !6, line: 124, baseType: !2256, size: 8, offset: 456)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2196, file: !6, line: 125, baseType: !2256, size: 8, offset: 464)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2196, file: !6, line: 126, baseType: !2256, size: 8, offset: 472)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2180, file: !2122, line: 572, baseType: !2196, size: 512, offset: 1216)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2180, file: !2122, line: 580, baseType: !2263, size: 64, offset: 1728)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2121, file: !2122, line: 721, baseType: !7, size: 32, offset: 3584)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2121, file: !2122, line: 722, baseType: !181, size: 32, offset: 3616)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2121, file: !2122, line: 723, baseType: !2267, size: 64, offset: 3648)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2269)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2270, line: 17, baseType: !2271)
!2270 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2270, line: 17, size: 64, elements: !2272)
!2272 = !{!2273}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2271, file: !2270, line: 17, baseType: !2274, size: 64)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 64, elements: !2275)
!2275 = !{!2276}
!2276 = !DISubrange(count: 1)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2121, file: !2122, line: 724, baseType: !2269, size: 64, offset: 3712)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2121, file: !2122, line: 749, baseType: !2279, offset: 3776)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2122, line: 290, elements: !1099)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2121, file: !2122, line: 751, baseType: !974, size: 128, offset: 3776)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2121, file: !2122, line: 757, baseType: !1886, size: 64, offset: 3904)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2121, file: !2122, line: 758, baseType: !1886, size: 64, offset: 3968)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2121, file: !2122, line: 761, baseType: !2284, size: 320, offset: 4032)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2063, line: 34, size: 320, elements: !2285)
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2284, file: !2063, line: 35, baseType: !999, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2284, file: !2063, line: 36, baseType: !2288, size: 256, offset: 64)
!2288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 256, elements: !1015)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2121, file: !2122, line: 766, baseType: !181, size: 32, offset: 4352)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2121, file: !2122, line: 767, baseType: !181, size: 32, offset: 4384)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2121, file: !2122, line: 768, baseType: !181, size: 32, offset: 4416)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2121, file: !2122, line: 770, baseType: !181, size: 32, offset: 4448)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2121, file: !2122, line: 772, baseType: !1010, size: 64, offset: 4480)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2121, file: !2122, line: 775, baseType: !7, size: 32, offset: 4544)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2121, file: !2122, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2121, file: !2122, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2121, file: !2122, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2121, file: !2122, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2121, file: !2122, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2121, file: !2122, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2121, file: !2122, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2121, file: !2122, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2121, file: !2122, line: 831, baseType: !1010, size: 64, offset: 4672)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2121, file: !2122, line: 833, baseType: !2305, size: 384, offset: 4736)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !136, line: 25, size: 384, elements: !2306)
!2306 = !{!2307, !2312}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2305, file: !136, line: 26, baseType: !2308, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!881, !2311}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, scope: !2305, file: !136, line: 27, baseType: !2313, size: 320, offset: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2305, file: !136, line: 27, size: 320, elements: !2314)
!2314 = !{!2315, !2324, !2351}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2313, file: !136, line: 36, baseType: !2316, size: 320)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2313, file: !136, line: 29, size: 320, elements: !2317)
!2317 = !{!2318, !2319, !2320, !2321, !2322, !2323}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2316, file: !136, line: 30, baseType: !1039, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2316, file: !136, line: 31, baseType: !1040, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2316, file: !136, line: 32, baseType: !1040, size: 32, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2316, file: !136, line: 33, baseType: !1040, size: 32, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2316, file: !136, line: 34, baseType: !999, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2316, file: !136, line: 35, baseType: !1039, size: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2313, file: !136, line: 46, baseType: !2325, size: 192)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2313, file: !136, line: 38, size: 192, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2350}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2325, file: !136, line: 39, baseType: !2238, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2325, file: !136, line: 40, baseType: !135, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, scope: !2325, file: !136, line: 41, baseType: !2330, size: 64, offset: 64)
!2330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2325, file: !136, line: 41, size: 64, elements: !2331)
!2331 = !{!2332, !2340}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2330, file: !136, line: 42, baseType: !2333, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2335, line: 7, size: 128, elements: !2336)
!2335 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2336 = !{!2337, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2334, file: !2335, line: 8, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1159, line: 93, baseType: !1374)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2334, file: !2335, line: 9, baseType: !1374, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2330, file: !136, line: 43, baseType: !2341, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2343, line: 7, size: 64, elements: !2344)
!2343 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2344 = !{!2345, !2349}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2342, file: !2343, line: 8, baseType: !2346, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2343, line: 5, baseType: !2347)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !1000, line: 20, baseType: !2348)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !1002, line: 26, baseType: !181)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2342, file: !2343, line: 9, baseType: !2347, size: 32, offset: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2325, file: !136, line: 45, baseType: !999, size: 64, offset: 128)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2313, file: !136, line: 54, baseType: !2352, size: 256)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2313, file: !136, line: 48, size: 256, elements: !2353)
!2353 = !{!2354, !2357, !2358, !2359, !2360}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2352, file: !136, line: 49, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !136, line: 14, flags: DIFlagFwdDecl)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2352, file: !136, line: 50, baseType: !181, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2352, file: !136, line: 51, baseType: !181, size: 32, offset: 96)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2352, file: !136, line: 52, baseType: !1010, size: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2352, file: !136, line: 53, baseType: !1010, size: 64, offset: 192)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2121, file: !2122, line: 835, baseType: !2362, size: 32, offset: 5120)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !975, line: 22, baseType: !2363)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1159, line: 28, baseType: !181)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2121, file: !2122, line: 836, baseType: !2362, size: 32, offset: 5152)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2121, file: !2122, line: 840, baseType: !1010, size: 64, offset: 5184)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2121, file: !2122, line: 849, baseType: !2120, size: 64, offset: 5248)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2121, file: !2122, line: 852, baseType: !2120, size: 64, offset: 5312)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2121, file: !2122, line: 857, baseType: !974, size: 128, offset: 5376)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2121, file: !2122, line: 858, baseType: !974, size: 128, offset: 5504)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2121, file: !2122, line: 859, baseType: !2120, size: 64, offset: 5632)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2121, file: !2122, line: 867, baseType: !974, size: 128, offset: 5696)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2121, file: !2122, line: 868, baseType: !974, size: 128, offset: 5824)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2121, file: !2122, line: 871, baseType: !2374, size: 64, offset: 5952)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !21, line: 59, size: 768, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2382, !2383, !2389, !2390}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2375, file: !21, line: 61, baseType: !2134, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2375, file: !21, line: 62, baseType: !7, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2375, file: !21, line: 63, baseType: !1085, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2375, file: !21, line: 65, baseType: !2381, size: 256, offset: 64)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1479, size: 256, elements: !1015)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2375, file: !21, line: 66, baseType: !1479, size: 64, offset: 320)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2375, file: !21, line: 68, baseType: !2384, size: 128, offset: 384)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1768, line: 40, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1768, line: 36, size: 128, elements: !2386)
!2386 = !{!2387, !2388}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2385, file: !1768, line: 37, baseType: !1085)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2385, file: !1768, line: 38, baseType: !974, size: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2375, file: !21, line: 69, baseType: !1214, size: 128, align: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2375, file: !21, line: 70, baseType: !2391, size: 128, offset: 640)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 128, elements: !2275)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !21, line: 54, size: 128, elements: !2393)
!2393 = !{!2394, !2395}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2392, file: !21, line: 55, baseType: !181, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2392, file: !21, line: 56, baseType: !2396, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !21, line: 56, flags: DIFlagFwdDecl)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2121, file: !2122, line: 872, baseType: !2399, size: 512, offset: 6016)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 512, elements: !1015)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2121, file: !2122, line: 873, baseType: !974, size: 128, offset: 6528)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2121, file: !2122, line: 874, baseType: !974, size: 128, offset: 6656)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2121, file: !2122, line: 876, baseType: !2403, size: 64, offset: 6784)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2405, line: 26, size: 192, elements: !2406)
!2405 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2404, file: !2405, line: 27, baseType: !7, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2404, file: !2405, line: 28, baseType: !2409, size: 128, offset: 64)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2410, line: 43, size: 128, elements: !2411)
!2410 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2411 = !{!2412, !2413}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2409, file: !2410, line: 44, baseType: !1667)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2409, file: !2410, line: 45, baseType: !974, size: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2121, file: !2122, line: 879, baseType: !1549, size: 64, offset: 6848)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2121, file: !2122, line: 882, baseType: !1549, size: 64, offset: 6912)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2121, file: !2122, line: 884, baseType: !999, size: 64, offset: 6976)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2121, file: !2122, line: 885, baseType: !999, size: 64, offset: 7040)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2121, file: !2122, line: 890, baseType: !999, size: 64, offset: 7104)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2121, file: !2122, line: 891, baseType: !2420, size: 128, offset: 7168)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2122, line: 242, size: 128, elements: !2421)
!2421 = !{!2422, !2423, !2424}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2420, file: !2122, line: 244, baseType: !999, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2420, file: !2122, line: 245, baseType: !999, size: 64, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2420, file: !2122, line: 246, baseType: !1667, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2121, file: !2122, line: 900, baseType: !1010, size: 64, offset: 7296)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2121, file: !2122, line: 901, baseType: !1010, size: 64, offset: 7360)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2121, file: !2122, line: 904, baseType: !999, size: 64, offset: 7424)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2121, file: !2122, line: 907, baseType: !999, size: 64, offset: 7488)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2121, file: !2122, line: 910, baseType: !1010, size: 64, offset: 7552)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2121, file: !2122, line: 911, baseType: !1010, size: 64, offset: 7616)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2121, file: !2122, line: 914, baseType: !2432, size: 640, offset: 7680)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2433, line: 123, size: 640, elements: !2434)
!2433 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2434 = !{!2435, !2441, !2442}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2432, file: !2433, line: 124, baseType: !2436, size: 576)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2437, size: 576, elements: !1127)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2433, line: 108, size: 192, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2437, file: !2433, line: 109, baseType: !999, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2437, file: !2433, line: 110, baseType: !2247, size: 128, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2432, file: !2433, line: 125, baseType: !7, size: 32, offset: 576)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2432, file: !2433, line: 126, baseType: !7, size: 32, offset: 608)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2121, file: !2122, line: 917, baseType: !2444, size: 192, offset: 8320)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2433, line: 134, size: 192, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2444, file: !2433, line: 135, baseType: !1214, size: 128, align: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2444, file: !2433, line: 136, baseType: !7, size: 32, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2121, file: !2122, line: 923, baseType: !2449, size: 64, offset: 8512)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2452, line: 111, size: 1280, elements: !2453)
!2452 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2453 = !{!2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2473, !2474, !2475, !2476, !2477, !2478, !2585, !2586, !2587, !2588, !2614, !2617, !2627}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2451, file: !2452, line: 112, baseType: !1641, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2451, file: !2452, line: 120, baseType: !1276, size: 32, offset: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2451, file: !2452, line: 121, baseType: !1284, size: 32, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2451, file: !2452, line: 122, baseType: !1276, size: 32, offset: 96)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2451, file: !2452, line: 123, baseType: !1284, size: 32, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2451, file: !2452, line: 124, baseType: !1276, size: 32, offset: 160)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2451, file: !2452, line: 125, baseType: !1284, size: 32, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2451, file: !2452, line: 126, baseType: !1276, size: 32, offset: 224)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2451, file: !2452, line: 127, baseType: !1284, size: 32, offset: 256)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2451, file: !2452, line: 128, baseType: !7, size: 32, offset: 288)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2451, file: !2452, line: 129, baseType: !2465, size: 64, offset: 320)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2466, line: 26, baseType: !2467)
!2466 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2466, line: 24, size: 64, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2467, file: !2466, line: 25, baseType: !2470, size: 64)
!2470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 64, elements: !2471)
!2471 = !{!2472}
!2472 = !DISubrange(count: 2)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2451, file: !2452, line: 130, baseType: !2465, size: 64, offset: 384)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2451, file: !2452, line: 131, baseType: !2465, size: 64, offset: 448)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2451, file: !2452, line: 132, baseType: !2465, size: 64, offset: 512)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2451, file: !2452, line: 133, baseType: !2465, size: 64, offset: 576)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2451, file: !2452, line: 135, baseType: !1055, size: 8, offset: 640)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2451, file: !2452, line: 137, baseType: !2479, size: 64, offset: 704)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2481, line: 189, size: 1664, elements: !2482)
!2481 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2482 = !{!2483, !2484, !2487, !2492, !2493, !2496, !2497, !2502, !2503, !2504, !2505, !2507, !2508, !2509, !2510, !2511, !2549, !2570}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2480, file: !2481, line: 190, baseType: !2134, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2480, file: !2481, line: 191, baseType: !2485, size: 32, offset: 32)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2481, line: 28, baseType: !2486)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !975, line: 98, baseType: !2347)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 192, baseType: !2488, size: 192, offset: 64)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 192, size: 192, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2488, file: !2481, line: 193, baseType: !974, size: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2488, file: !2481, line: 194, baseType: !1654, size: 192, align: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2480, file: !2481, line: 199, baseType: !1661, size: 256, offset: 256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2480, file: !2481, line: 200, baseType: !2494, size: 64, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2481, line: 200, flags: DIFlagFwdDecl)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2480, file: !2481, line: 201, baseType: !968, size: 64, offset: 576)
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 202, baseType: !2498, size: 64, offset: 640)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 202, size: 64, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2498, file: !2481, line: 203, baseType: !1380, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2498, file: !2481, line: 204, baseType: !1380, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2480, file: !2481, line: 206, baseType: !1380, size: 64, offset: 704)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2480, file: !2481, line: 207, baseType: !1276, size: 32, offset: 768)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2480, file: !2481, line: 208, baseType: !1284, size: 32, offset: 800)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2480, file: !2481, line: 209, baseType: !2506, size: 32, offset: 832)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2481, line: 31, baseType: !1400)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2480, file: !2481, line: 210, baseType: !1064, size: 16, offset: 864)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2480, file: !2481, line: 211, baseType: !1064, size: 16, offset: 880)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2480, file: !2481, line: 215, baseType: !2109, size: 16, offset: 896)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2480, file: !2481, line: 222, baseType: !1010, size: 64, offset: 960)
!2511 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 239, baseType: !2512, size: 320, offset: 1024)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 239, size: 320, elements: !2513)
!2513 = !{!2514, !2541}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2512, file: !2481, line: 240, baseType: !2515, size: 320)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2481, line: 108, size: 320, elements: !2516)
!2516 = !{!2517, !2518, !2530, !2533, !2540}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2515, file: !2481, line: 110, baseType: !1010, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2481, line: 111, baseType: !2519, size: 64, offset: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2481, line: 111, size: 64, elements: !2520)
!2520 = !{!2521, !2529}
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2481, line: 112, baseType: !2522, size: 64)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2519, file: !2481, line: 112, size: 64, elements: !2523)
!2523 = !{!2524, !2525}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2522, file: !2481, line: 114, baseType: !1753, size: 16)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2522, file: !2481, line: 115, baseType: !2526, size: 48, offset: 16)
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 48, elements: !2527)
!2527 = !{!2528}
!2528 = !DISubrange(count: 6)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2519, file: !2481, line: 121, baseType: !1010, size: 64)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2515, file: !2481, line: 123, baseType: !2531, size: 64, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2481, line: 96, flags: DIFlagFwdDecl)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2515, file: !2481, line: 124, baseType: !2534, size: 64, offset: 192)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2481, line: 102, size: 192, elements: !2536)
!2536 = !{!2537, !2538, !2539}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2535, file: !2481, line: 103, baseType: !1214, size: 128, align: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2535, file: !2481, line: 104, baseType: !2134, size: 32, offset: 128)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2535, file: !2481, line: 105, baseType: !1331, size: 8, offset: 160)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2515, file: !2481, line: 125, baseType: !1006, size: 64, offset: 256)
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2481, line: 241, baseType: !2542, size: 320)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2512, file: !2481, line: 241, size: 320, elements: !2543)
!2543 = !{!2544, !2545, !2546, !2547, !2548}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2542, file: !2481, line: 242, baseType: !1010, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2542, file: !2481, line: 243, baseType: !1010, size: 64, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2542, file: !2481, line: 244, baseType: !2531, size: 64, offset: 128)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2542, file: !2481, line: 245, baseType: !2534, size: 64, offset: 192)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2542, file: !2481, line: 246, baseType: !1126, size: 64, offset: 256)
!2549 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 254, baseType: !2550, size: 256, offset: 1344)
!2550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 254, size: 256, elements: !2551)
!2551 = !{!2552, !2558}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2550, file: !2481, line: 255, baseType: !2553, size: 256)
!2553 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2481, line: 128, size: 256, elements: !2554)
!2554 = !{!2555, !2556}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2553, file: !2481, line: 129, baseType: !968, size: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2553, file: !2481, line: 130, baseType: !2557, size: 256)
!2557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 256, elements: !1015)
!2558 = !DIDerivedType(tag: DW_TAG_member, scope: !2550, file: !2481, line: 256, baseType: !2559, size: 256)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2550, file: !2481, line: 256, size: 256, elements: !2560)
!2560 = !{!2561, !2562}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2559, file: !2481, line: 258, baseType: !974, size: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2559, file: !2481, line: 259, baseType: !2563, size: 128, offset: 128)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2564, line: 22, size: 128, elements: !2565)
!2564 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2565 = !{!2566, !2569}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2563, file: !2564, line: 23, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2564, line: 23, flags: DIFlagFwdDecl)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2563, file: !2564, line: 24, baseType: !1010, size: 64, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2480, file: !2481, line: 274, baseType: !2571, size: 64, offset: 1600)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2481, line: 170, size: 192, elements: !2573)
!2573 = !{!2574, !2583, !2584}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2572, file: !2481, line: 171, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2481, line: 165, baseType: !2576)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{!181, !2479, !2579, !2581, !2479}
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2532)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2553)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2572, file: !2481, line: 172, baseType: !2479, size: 64, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2572, file: !2481, line: 173, baseType: !2531, size: 64, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2451, file: !2452, line: 138, baseType: !2479, size: 64, offset: 768)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2451, file: !2452, line: 139, baseType: !2479, size: 64, offset: 832)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2451, file: !2452, line: 140, baseType: !2479, size: 64, offset: 896)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2451, file: !2452, line: 145, baseType: !2589, size: 64, offset: 960)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2591, line: 13, size: 896, elements: !2592)
!2591 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2592 = !{!2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2590, file: !2591, line: 14, baseType: !2134, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2590, file: !2591, line: 15, baseType: !1641, size: 32, offset: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2590, file: !2591, line: 16, baseType: !1641, size: 32, offset: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2590, file: !2591, line: 21, baseType: !1571, size: 64, offset: 128)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2590, file: !2591, line: 27, baseType: !1010, size: 64, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2590, file: !2591, line: 28, baseType: !1010, size: 64, offset: 256)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2590, file: !2591, line: 29, baseType: !1571, size: 64, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2590, file: !2591, line: 32, baseType: !1483, size: 128, offset: 384)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2590, file: !2591, line: 33, baseType: !1276, size: 32, offset: 512)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2590, file: !2591, line: 37, baseType: !1571, size: 64, offset: 576)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2590, file: !2591, line: 44, baseType: !2604, size: 256, offset: 640)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2605, line: 15, size: 256, elements: !2606)
!2605 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2604, file: !2605, line: 16, baseType: !1667)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2604, file: !2605, line: 18, baseType: !181, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2604, file: !2605, line: 19, baseType: !181, size: 32, offset: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2604, file: !2605, line: 20, baseType: !181, size: 32, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2604, file: !2605, line: 21, baseType: !181, size: 32, offset: 96)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2604, file: !2605, line: 22, baseType: !1010, size: 64, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2604, file: !2605, line: 23, baseType: !1010, size: 64, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2451, file: !2452, line: 146, baseType: !2615, size: 64, offset: 1024)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1616, line: 516, flags: DIFlagFwdDecl)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2451, file: !2452, line: 147, baseType: !2618, size: 64, offset: 1088)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2452, line: 25, size: 64, elements: !2620)
!2620 = !{!2621, !2622, !2623}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2619, file: !2452, line: 26, baseType: !1641, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2619, file: !2452, line: 27, baseType: !181, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2619, file: !2452, line: 28, baseType: !2624, offset: 64)
!2624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, elements: !2625)
!2625 = !{!2626}
!2626 = !DISubrange(count: 0)
!2627 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2452, line: 149, baseType: !2628, size: 128, offset: 1152)
!2628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2452, line: 149, size: 128, elements: !2629)
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2628, file: !2452, line: 150, baseType: !181, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2628, file: !2452, line: 151, baseType: !1214, size: 128, align: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2121, file: !2122, line: 926, baseType: !2449, size: 64, offset: 8576)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2121, file: !2122, line: 929, baseType: !2449, size: 64, offset: 8640)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2121, file: !2122, line: 933, baseType: !2479, size: 64, offset: 8704)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2121, file: !2122, line: 943, baseType: !2636, size: 128, offset: 8768)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 128, elements: !2637)
!2637 = !{!2638}
!2638 = !DISubrange(count: 16)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2121, file: !2122, line: 945, baseType: !2640, size: 64, offset: 8896)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2122, line: 49, flags: DIFlagFwdDecl)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2121, file: !2122, line: 956, baseType: !2643, size: 64, offset: 8960)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2122, line: 45, flags: DIFlagFwdDecl)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2121, file: !2122, line: 959, baseType: !2646, size: 64, offset: 9024)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2122, line: 959, flags: DIFlagFwdDecl)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2121, file: !2122, line: 962, baseType: !2649, size: 64, offset: 9088)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2122, line: 66, flags: DIFlagFwdDecl)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2121, file: !2122, line: 966, baseType: !2652, size: 64, offset: 9152)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2122, line: 50, flags: DIFlagFwdDecl)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2121, file: !2122, line: 969, baseType: !2655, size: 64, offset: 9216)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2657, line: 82, size: 7296, elements: !2658)
!2657 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2658 = !{!2659, !2660, !2661, !2662, !2663, !2664, !2665, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2694, !2703, !2704, !2706, !2707, !2708, !2711, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2741, !2742, !2749, !2750, !2751, !2752, !2753, !2754}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2656, file: !2657, line: 83, baseType: !2134, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2656, file: !2657, line: 84, baseType: !1641, size: 32, offset: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2656, file: !2657, line: 85, baseType: !181, size: 32, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2656, file: !2657, line: 86, baseType: !974, size: 128, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2656, file: !2657, line: 88, baseType: !2384, size: 128, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2656, file: !2657, line: 91, baseType: !2120, size: 64, offset: 384)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2656, file: !2657, line: 94, baseType: !2666, size: 192, offset: 448)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2667, line: 30, size: 192, elements: !2668)
!2667 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2668 = !{!2669, !2670}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2666, file: !2667, line: 31, baseType: !974, size: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2666, file: !2667, line: 32, baseType: !2671, size: 64, offset: 128)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2672, line: 25, baseType: !2673)
!2672 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2672, line: 23, size: 64, elements: !2674)
!2674 = !{!2675}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2673, file: !2672, line: 24, baseType: !2274, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2656, file: !2657, line: 97, baseType: !1479, size: 64, offset: 640)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2656, file: !2657, line: 100, baseType: !181, size: 32, offset: 704)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2656, file: !2657, line: 106, baseType: !181, size: 32, offset: 736)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2656, file: !2657, line: 107, baseType: !2120, size: 64, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2656, file: !2657, line: 110, baseType: !181, size: 32, offset: 832)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2656, file: !2657, line: 111, baseType: !7, size: 32, offset: 864)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2656, file: !2657, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2656, file: !2657, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2656, file: !2657, line: 128, baseType: !181, size: 32, offset: 928)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2656, file: !2657, line: 129, baseType: !974, size: 128, offset: 960)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2656, file: !2657, line: 132, baseType: !2196, size: 512, offset: 1088)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2656, file: !2657, line: 133, baseType: !2204, size: 64, offset: 1600)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2656, file: !2657, line: 140, baseType: !2689, size: 256, offset: 1664)
!2689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2690, size: 256, elements: !2471)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2657, line: 38, size: 128, elements: !2691)
!2691 = !{!2692, !2693}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2690, file: !2657, line: 39, baseType: !999, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2690, file: !2657, line: 40, baseType: !999, size: 64, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2656, file: !2657, line: 146, baseType: !2695, size: 192, offset: 1920)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2657, line: 66, size: 192, elements: !2696)
!2696 = !{!2697}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2695, file: !2657, line: 67, baseType: !2698, size: 192)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2657, line: 47, size: 192, elements: !2699)
!2699 = !{!2700, !2701, !2702}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2698, file: !2657, line: 48, baseType: !1573, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2698, file: !2657, line: 49, baseType: !1573, size: 64, offset: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2698, file: !2657, line: 50, baseType: !1573, size: 64, offset: 128)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2656, file: !2657, line: 150, baseType: !2432, size: 640, offset: 2112)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2656, file: !2657, line: 153, baseType: !2705, size: 256, offset: 2752)
!2705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 256, elements: !1015)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2656, file: !2657, line: 159, baseType: !2374, size: 64, offset: 3008)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2656, file: !2657, line: 162, baseType: !181, size: 32, offset: 3072)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2656, file: !2657, line: 164, baseType: !2709, size: 64, offset: 3136)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2657, line: 164, flags: DIFlagFwdDecl)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2656, file: !2657, line: 175, baseType: !2712, size: 32, offset: 3200)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1237, line: 805, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1237, line: 798, size: 32, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2713, file: !1237, line: 803, baseType: !1236, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2713, file: !1237, line: 804, baseType: !1085, offset: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2656, file: !2657, line: 176, baseType: !999, size: 64, offset: 3264)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2656, file: !2657, line: 176, baseType: !999, size: 64, offset: 3328)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2656, file: !2657, line: 176, baseType: !999, size: 64, offset: 3392)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2656, file: !2657, line: 176, baseType: !999, size: 64, offset: 3456)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2656, file: !2657, line: 177, baseType: !999, size: 64, offset: 3520)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2656, file: !2657, line: 178, baseType: !999, size: 64, offset: 3584)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2656, file: !2657, line: 179, baseType: !2420, size: 128, offset: 3648)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2656, file: !2657, line: 180, baseType: !1010, size: 64, offset: 3776)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2656, file: !2657, line: 180, baseType: !1010, size: 64, offset: 3840)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2656, file: !2657, line: 180, baseType: !1010, size: 64, offset: 3904)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2656, file: !2657, line: 180, baseType: !1010, size: 64, offset: 3968)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2656, file: !2657, line: 181, baseType: !1010, size: 64, offset: 4032)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2656, file: !2657, line: 181, baseType: !1010, size: 64, offset: 4096)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2656, file: !2657, line: 181, baseType: !1010, size: 64, offset: 4160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2656, file: !2657, line: 181, baseType: !1010, size: 64, offset: 4224)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2656, file: !2657, line: 182, baseType: !1010, size: 64, offset: 4288)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2656, file: !2657, line: 182, baseType: !1010, size: 64, offset: 4352)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2656, file: !2657, line: 182, baseType: !1010, size: 64, offset: 4416)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2656, file: !2657, line: 182, baseType: !1010, size: 64, offset: 4480)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2656, file: !2657, line: 183, baseType: !1010, size: 64, offset: 4544)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2656, file: !2657, line: 183, baseType: !1010, size: 64, offset: 4608)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2656, file: !2657, line: 184, baseType: !2739, offset: 4672)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2740, line: 12, elements: !1099)
!2740 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2656, file: !2657, line: 192, baseType: !1003, size: 64, offset: 4672)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2656, file: !2657, line: 203, baseType: !2743, size: 2048, offset: 4736)
!2743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2744, size: 2048, elements: !2637)
!2744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2745, line: 43, size: 128, elements: !2746)
!2745 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2746 = !{!2747, !2748}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2744, file: !2745, line: 44, baseType: !1173, size: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2744, file: !2745, line: 45, baseType: !1173, size: 64, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2656, file: !2657, line: 220, baseType: !1331, size: 8, offset: 6784)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2656, file: !2657, line: 221, baseType: !2109, size: 16, offset: 6800)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2656, file: !2657, line: 222, baseType: !2109, size: 16, offset: 6816)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2656, file: !2657, line: 224, baseType: !1886, size: 64, offset: 6848)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2656, file: !2657, line: 227, baseType: !1567, size: 192, offset: 6912)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2656, file: !2657, line: 233, baseType: !1567, size: 192, offset: 7104)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2121, file: !2122, line: 970, baseType: !2756, size: 64, offset: 9280)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2657, line: 20, size: 16576, elements: !2758)
!2758 = !{!2759, !2760, !2761, !2762}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2757, file: !2657, line: 21, baseType: !1085)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2757, file: !2657, line: 22, baseType: !2134, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2757, file: !2657, line: 23, baseType: !2384, size: 128, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2757, file: !2657, line: 24, baseType: !2763, size: 16384, offset: 192)
!2763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2764, size: 16384, elements: !1131)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2667, line: 49, size: 256, elements: !2765)
!2765 = !{!2766}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2764, file: !2667, line: 50, baseType: !2767, size: 256)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2667, line: 35, size: 256, elements: !2768)
!2768 = !{!2769, !2776, !2777, !2783}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2767, file: !2667, line: 37, baseType: !2770, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2771, line: 19, baseType: !2772)
!2771 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2771, line: 18, baseType: !2774)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{null, !181}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2767, file: !2667, line: 38, baseType: !1010, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2767, file: !2667, line: 44, baseType: !2778, size: 64, offset: 128)
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2771, line: 22, baseType: !2779)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2771, line: 21, baseType: !2781)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{null}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2767, file: !2667, line: 46, baseType: !2671, size: 64, offset: 192)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2121, file: !2122, line: 971, baseType: !2671, size: 64, offset: 9344)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2121, file: !2122, line: 972, baseType: !2671, size: 64, offset: 9408)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2121, file: !2122, line: 974, baseType: !2671, size: 64, offset: 9472)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2121, file: !2122, line: 975, baseType: !2666, size: 192, offset: 9536)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2121, file: !2122, line: 976, baseType: !1010, size: 64, offset: 9728)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2121, file: !2122, line: 977, baseType: !1171, size: 64, offset: 9792)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2121, file: !2122, line: 978, baseType: !7, size: 32, offset: 9856)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2121, file: !2122, line: 980, baseType: !1217, size: 64, offset: 9920)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2121, file: !2122, line: 989, baseType: !2793, size: 128, offset: 9984)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2794, line: 35, size: 128, elements: !2795)
!2794 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2793, file: !2794, line: 36, baseType: !181, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2793, file: !2794, line: 37, baseType: !1641, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2793, file: !2794, line: 38, baseType: !2799, size: 64, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2794, line: 23, flags: DIFlagFwdDecl)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2121, file: !2122, line: 992, baseType: !999, size: 64, offset: 10112)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2121, file: !2122, line: 993, baseType: !999, size: 64, offset: 10176)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2121, file: !2122, line: 996, baseType: !1085, offset: 10240)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2121, file: !2122, line: 999, baseType: !1667, offset: 10240)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2121, file: !2122, line: 1001, baseType: !2806, size: 64, offset: 10240)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2122, line: 636, size: 64, elements: !2807)
!2807 = !{!2808}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2806, file: !2122, line: 637, baseType: !2809, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2121, file: !2122, line: 1005, baseType: !1646, size: 128, offset: 10304)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2121, file: !2122, line: 1007, baseType: !2120, size: 64, offset: 10432)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2121, file: !2122, line: 1009, baseType: !2813, size: 64, offset: 10496)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2122, line: 1009, flags: DIFlagFwdDecl)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2121, file: !2122, line: 1043, baseType: !968, size: 64, offset: 10560)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2121, file: !2122, line: 1046, baseType: !2817, size: 64, offset: 10624)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2819, line: 554, size: 128, elements: !2820)
!2819 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2820 = !{!2821, !3840}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2818, file: !2819, line: 555, baseType: !2822, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2824, line: 203, size: 832, elements: !2825)
!2824 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2825 = !{!2826, !2827, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3808, !3813, !3814, !3833, !3834, !3835, !3836, !3837, !3839}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2823, file: !2824, line: 204, baseType: !2822, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2823, file: !2824, line: 205, baseType: !2828, size: 64, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2830, line: 167, size: 8512, elements: !2831)
!2830 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2831 = !{!2832, !2833, !2834, !2835, !2839, !2840, !2841, !2914, !2915, !3104, !3775, !3776, !3777, !3778, !3779, !3780, !3783, !3784, !3787, !3788, !3789, !3792}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2829, file: !2830, line: 171, baseType: !181, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2829, file: !2830, line: 172, baseType: !181, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2829, file: !2830, line: 173, baseType: !181, size: 32, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2829, file: !2830, line: 176, baseType: !2836, size: 256, offset: 96)
!2836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 256, elements: !2837)
!2837 = !{!2838}
!2838 = !DISubrange(count: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2829, file: !2830, line: 178, baseType: !1064, size: 16, offset: 352)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2829, file: !2830, line: 179, baseType: !1064, size: 16, offset: 368)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2829, file: !2830, line: 186, baseType: !2842, size: 64, offset: 384)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2830, line: 149, size: 256, elements: !2844)
!2844 = !{!2845, !2846, !2847, !2910}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2843, file: !2830, line: 150, baseType: !1214, size: 128, align: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2843, file: !2830, line: 151, baseType: !181, size: 32, offset: 128)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2843, file: !2830, line: 152, baseType: !2848, size: 64, offset: 192)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2830, line: 53, size: 6592, elements: !2850)
!2850 = !{!2851, !2852, !2853, !2854, !2857, !2878, !2879, !2880, !2881, !2882, !2892}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2849, file: !2830, line: 54, baseType: !1724, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2849, file: !2830, line: 60, baseType: !1724, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2849, file: !2830, line: 64, baseType: !1010, size: 64, offset: 128)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2849, file: !2830, line: 65, baseType: !2855, size: 64, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2830, line: 65, flags: DIFlagFwdDecl)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2849, file: !2830, line: 66, baseType: !2858, size: 128, offset: 256)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2859, line: 105, size: 128, elements: !2860)
!2859 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2860 = !{!2861, !2862}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2858, file: !2859, line: 110, baseType: !1010, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2858, file: !2859, line: 118, baseType: !2863, size: 64, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2859, line: 95, size: 448, elements: !2865)
!2865 = !{!2866, !2867, !2873, !2874, !2875, !2876, !2877}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2864, file: !2859, line: 96, baseType: !1571, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2864, file: !2859, line: 97, baseType: !2868, size: 64, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2859, line: 60, baseType: !2870)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{null, !2872}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2864, file: !2859, line: 98, baseType: !2868, size: 64, offset: 128)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2864, file: !2859, line: 99, baseType: !1331, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2864, file: !2859, line: 100, baseType: !1331, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2864, file: !2859, line: 101, baseType: !1214, size: 128, align: 64, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2864, file: !2859, line: 102, baseType: !2872, size: 64, offset: 384)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2849, file: !2830, line: 68, baseType: !1069, size: 5568, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2849, file: !2830, line: 69, baseType: !1078, size: 64, offset: 5952)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2849, file: !2830, line: 70, baseType: !181, size: 32, offset: 6016)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2849, file: !2830, line: 70, baseType: !181, size: 32, offset: 6048)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2849, file: !2830, line: 71, baseType: !2883, size: 64, offset: 6080)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2830, line: 48, size: 808, elements: !2885)
!2885 = !{!2886, !2890}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2884, file: !2830, line: 49, baseType: !2887, size: 296)
!2887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 296, elements: !2888)
!2888 = !{!2889}
!2889 = !DISubrange(count: 37)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2884, file: !2830, line: 50, baseType: !2891, size: 512, offset: 296)
!2891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 512, elements: !1131)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2849, file: !2830, line: 75, baseType: !2893, size: 448, offset: 6144)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !880, line: 124, size: 448, elements: !2894)
!2894 = !{!2895, !2906, !2907}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2893, file: !880, line: 125, baseType: !2896, size: 256)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !880, line: 102, size: 256, elements: !2897)
!2897 = !{!2898, !2899, !2900}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2896, file: !880, line: 103, baseType: !1571, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2896, file: !880, line: 104, baseType: !974, size: 128, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2896, file: !880, line: 105, baseType: !2901, size: 64, offset: 192)
!2901 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !880, line: 21, baseType: !2902)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{null, !2905}
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2893, file: !880, line: 126, baseType: !1214, size: 128, align: 64, offset: 256)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2893, file: !880, line: 129, baseType: !2908, size: 64, offset: 384)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !880, line: 18, flags: DIFlagFwdDecl)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2843, file: !2830, line: 153, baseType: !2911, offset: 256)
!2911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2848, elements: !2912)
!2912 = !{!2913}
!2913 = !DISubrange(count: -1)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2829, file: !2830, line: 187, baseType: !2849, size: 6592, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2829, file: !2830, line: 189, baseType: !2916, size: 64, offset: 7040)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !82, line: 1844, size: 960, elements: !2919)
!2919 = !{!2920, !2925, !3033, !3037, !3041, !3045, !3046, !3050, !3054, !3058, !3064, !3068, !3094, !3099, !3100}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2918, file: !82, line: 1845, baseType: !2921, size: 64)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!2924, !2822}
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2824, line: 515, baseType: !7)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2918, file: !82, line: 1846, baseType: !2926, size: 64, offset: 64)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{!181, !2929, !3032}
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2824, line: 22, size: 1344, elements: !2931)
!2931 = !{!2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !3030, !3031}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2930, file: !2824, line: 23, baseType: !1354, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2930, file: !2824, line: 24, baseType: !181, size: 32, offset: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2930, file: !2824, line: 25, baseType: !1270, size: 64, offset: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2930, file: !2824, line: 26, baseType: !1440, size: 64, offset: 128)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2930, file: !2824, line: 27, baseType: !1567, size: 192, offset: 192)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2930, file: !2824, line: 28, baseType: !968, size: 64, offset: 384)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2930, file: !2824, line: 29, baseType: !968, size: 64, offset: 448)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2930, file: !2824, line: 30, baseType: !181, size: 32, offset: 512)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2930, file: !2824, line: 31, baseType: !1331, size: 8, offset: 544)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2930, file: !2824, line: 33, baseType: !974, size: 128, offset: 576)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2930, file: !2824, line: 35, baseType: !2929, size: 64, offset: 704)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2930, file: !2824, line: 36, baseType: !2256, size: 8, offset: 768)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2930, file: !2824, line: 37, baseType: !2848, size: 64, offset: 832)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2930, file: !2824, line: 39, baseType: !7, size: 32, offset: 896)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2930, file: !2824, line: 41, baseType: !1085, offset: 928)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2930, file: !2824, line: 42, baseType: !2828, size: 64, offset: 960)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2930, file: !2824, line: 43, baseType: !2949, size: 64, offset: 1024)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !99, line: 165, size: 4672, elements: !2951)
!2951 = !{!2952, !2953, !2954, !2955, !2956, !2957, !2962, !2963, !2964, !2965, !2966, !2967, !3023, !3024, !3025, !3026, !3028, !3029}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2950, file: !99, line: 166, baseType: !999, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2950, file: !99, line: 167, baseType: !1654, size: 192, align: 64, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2950, file: !99, line: 168, baseType: !974, size: 128, offset: 256)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2950, file: !99, line: 169, baseType: !1010, size: 64, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2950, file: !99, line: 170, baseType: !1010, size: 64, offset: 448)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2950, file: !99, line: 172, baseType: !2958, size: 32, offset: 512)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2959, line: 19, size: 32, elements: !2960)
!2959 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2960 = !{!2961}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2958, file: !2959, line: 20, baseType: !2134, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2950, file: !99, line: 173, baseType: !7, size: 32, offset: 544)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2950, file: !99, line: 174, baseType: !7, size: 32, offset: 576)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2950, file: !99, line: 175, baseType: !7, size: 32, offset: 608)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2950, file: !99, line: 175, baseType: !7, size: 32, offset: 640)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2950, file: !99, line: 181, baseType: !1571, size: 64, offset: 704)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2950, file: !99, line: 183, baseType: !2968, size: 2688, offset: 768)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !99, line: 107, size: 2688, elements: !2969)
!2969 = !{!2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2999, !3000, !3001, !3002, !3003, !3021, !3022}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2968, file: !99, line: 108, baseType: !2949, size: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2968, file: !99, line: 110, baseType: !1010, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2968, file: !99, line: 111, baseType: !1010, size: 64, offset: 128)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2968, file: !99, line: 113, baseType: !974, size: 128, offset: 192)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2968, file: !99, line: 114, baseType: !974, size: 128, offset: 320)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2968, file: !99, line: 115, baseType: !974, size: 128, offset: 448)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2968, file: !99, line: 116, baseType: !974, size: 128, offset: 576)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2968, file: !99, line: 117, baseType: !1085, offset: 704)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2968, file: !99, line: 119, baseType: !2979, size: 256, offset: 704)
!2979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2980, size: 256, elements: !1015)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2981, line: 97, size: 64, elements: !2982)
!2981 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2982 = !{!2983}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2980, file: !2981, line: 98, baseType: !1577, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2968, file: !99, line: 121, baseType: !1010, size: 64, offset: 960)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2968, file: !99, line: 123, baseType: !1010, size: 64, offset: 1024)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2968, file: !99, line: 124, baseType: !1010, size: 64, offset: 1088)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2968, file: !99, line: 125, baseType: !1010, size: 64, offset: 1152)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2968, file: !99, line: 126, baseType: !1010, size: 64, offset: 1216)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2968, file: !99, line: 127, baseType: !1010, size: 64, offset: 1280)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2968, file: !99, line: 135, baseType: !1010, size: 64, offset: 1344)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2968, file: !99, line: 136, baseType: !1010, size: 64, offset: 1408)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2968, file: !99, line: 138, baseType: !2993, size: 128, offset: 1472)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2994, line: 76, size: 128, elements: !2995)
!2994 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2995 = !{!2996, !2997, !2998}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2993, file: !2994, line: 78, baseType: !2980, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2993, file: !2994, line: 80, baseType: !7, size: 32, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2993, file: !2994, line: 81, baseType: !1667, offset: 96)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2968, file: !99, line: 139, baseType: !181, size: 32, offset: 1600)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2968, file: !99, line: 140, baseType: !98, size: 32, offset: 1632)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2968, file: !99, line: 142, baseType: !1085, offset: 1664)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2968, file: !99, line: 143, baseType: !974, size: 128, offset: 1664)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2968, file: !99, line: 144, baseType: !3004, size: 704, offset: 1792)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !880, line: 115, size: 704, elements: !3005)
!3005 = !{!3006, !3007, !3019, !3020}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3004, file: !880, line: 116, baseType: !2896, size: 256)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3004, file: !880, line: 117, baseType: !3008, size: 320, offset: 256)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3009, line: 11, size: 320, elements: !3010)
!3009 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3010 = !{!3011, !3012, !3013, !3018}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3008, file: !3009, line: 16, baseType: !1483, size: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3008, file: !3009, line: 17, baseType: !1010, size: 64, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3008, file: !3009, line: 18, baseType: !3014, size: 64, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{null, !3017}
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3008, file: !3009, line: 19, baseType: !1040, size: 32, offset: 256)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3004, file: !880, line: 120, baseType: !2908, size: 64, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3004, file: !880, line: 121, baseType: !181, size: 32, offset: 640)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2968, file: !99, line: 146, baseType: !1010, size: 64, offset: 2496)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2968, file: !99, line: 148, baseType: !974, size: 128, offset: 2560)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2950, file: !99, line: 184, baseType: !974, size: 128, offset: 3456)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2950, file: !99, line: 190, baseType: !2384, size: 128, offset: 3584)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2950, file: !99, line: 192, baseType: !1068, size: 64, offset: 3712)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2950, file: !99, line: 193, baseType: !3027, size: 512, offset: 3776)
!3027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 512, elements: !1131)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2950, file: !99, line: 194, baseType: !1068, size: 64, offset: 4288)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2950, file: !99, line: 196, baseType: !3008, size: 320, offset: 4352)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2930, file: !2824, line: 46, baseType: !181, size: 32, offset: 1088)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2930, file: !2824, line: 48, baseType: !1567, size: 192, offset: 1152)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !975, line: 150, baseType: !7)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2918, file: !82, line: 1847, baseType: !3034, size: 64, offset: 128)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = !DISubroutineType(types: !3036)
!3036 = !{null, !2828, !3032}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2918, file: !82, line: 1848, baseType: !3038, size: 64, offset: 192)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!181, !2929, !1724, !1614, !7}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2918, file: !82, line: 1849, baseType: !3042, size: 64, offset: 256)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!181, !2929, !3032, !7, !1010}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2918, file: !82, line: 1850, baseType: !3042, size: 64, offset: 320)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2918, file: !82, line: 1851, baseType: !3047, size: 64, offset: 384)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!7, !2828, !7}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2918, file: !82, line: 1853, baseType: !3051, size: 64, offset: 448)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DISubroutineType(types: !3053)
!3053 = !{null, !2828}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2918, file: !82, line: 1854, baseType: !3055, size: 64, offset: 512)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!181, !2828}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2918, file: !82, line: 1855, baseType: !3059, size: 64, offset: 576)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!181, !2929, !3062}
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !12, line: 51, flags: DIFlagFwdDecl)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2918, file: !82, line: 1857, baseType: !3065, size: 64, offset: 640)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{null, !2929, !1010}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2918, file: !82, line: 1858, baseType: !3069, size: 64, offset: 704)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!181, !2828, !1724, !7, !3072, !968}
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !82, line: 354, baseType: !3073)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!181, !3076, !7, !968}
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !3078, line: 106, size: 512, elements: !3079)
!3078 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!3079 = !{!3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3089, !3090}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3077, file: !3078, line: 107, baseType: !1001, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3077, file: !3078, line: 108, baseType: !1001, size: 64, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !3077, file: !3078, line: 109, baseType: !1001, size: 64, offset: 128)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3077, file: !3078, line: 110, baseType: !2257, size: 8, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !3077, file: !3078, line: 111, baseType: !2257, size: 8, offset: 200)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !3077, file: !3078, line: 112, baseType: !2257, size: 8, offset: 208)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3077, file: !3078, line: 113, baseType: !2257, size: 8, offset: 216)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !3077, file: !3078, line: 114, baseType: !3088, size: 32, offset: 224)
!3088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 32, elements: !1015)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !3077, file: !3078, line: 115, baseType: !1001, size: 64, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3077, file: !3078, line: 116, baseType: !3091, size: 192, offset: 320)
!3091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 192, elements: !3092)
!3092 = !{!3093}
!3093 = !DISubrange(count: 24)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2918, file: !82, line: 1860, baseType: !3095, size: 64, offset: 768)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!1126, !2828, !3098}
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2918, file: !82, line: 1861, baseType: !1474, size: 64, offset: 832)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2918, file: !82, line: 1862, baseType: !3101, size: 64, offset: 896)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3103)
!3103 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !82, line: 41, flags: DIFlagFwdDecl)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2829, file: !2830, line: 190, baseType: !3105, size: 64, offset: 7104)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !82, line: 399, size: 14464, elements: !3107)
!3107 = !{!3108, !3325, !3447, !3448, !3451, !3454, !3550, !3551, !3552, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3611, !3620, !3621, !3622, !3623, !3624, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3730, !3731, !3732, !3733, !3734, !3735, !3768, !3769, !3770, !3771}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !3106, file: !82, line: 400, baseType: !3109, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !82, line: 130, size: 2176, elements: !3111)
!3111 = !{!3112, !3113, !3116, !3200, !3201, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3215, !3228, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3323, !3324}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3110, file: !82, line: 131, baseType: !3105, size: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !3110, file: !82, line: 132, baseType: !3114, size: 64, offset: 64)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !82, line: 132, flags: DIFlagFwdDecl)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !3110, file: !82, line: 133, baseType: !3117, size: 64, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !3119, line: 16, size: 4032, elements: !3120)
!3119 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!3120 = !{!3121, !3127, !3128, !3131, !3132, !3133, !3134, !3135, !3136, !3139, !3140, !3155, !3156, !3157, !3158, !3159, !3161, !3162, !3163, !3164, !3167, !3168, !3169, !3170, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185}
!3121 = !DIDerivedType(tag: DW_TAG_member, scope: !3118, file: !3119, line: 17, baseType: !3122, size: 192)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3118, file: !3119, line: 17, size: 192, elements: !3123)
!3123 = !{!3124, !3125, !3126}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3122, file: !3119, line: 19, baseType: !1085)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !3122, file: !3119, line: 27, baseType: !974, size: 128)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3122, file: !3119, line: 32, baseType: !1010, size: 64, offset: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3118, file: !3119, line: 38, baseType: !3004, size: 704, offset: 192)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3118, file: !3119, line: 40, baseType: !3129, size: 64, offset: 896)
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !2270, line: 756, baseType: !3130)
!3130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2271, size: 64, elements: !2275)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !3118, file: !3119, line: 45, baseType: !181, size: 32, offset: 960)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !3118, file: !3119, line: 50, baseType: !181, size: 32, offset: 992)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3118, file: !3119, line: 53, baseType: !1010, size: 64, offset: 1024)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !3118, file: !3119, line: 59, baseType: !968, size: 64, offset: 1088)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3118, file: !3119, line: 63, baseType: !3105, size: 64, offset: 1152)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3118, file: !3119, line: 65, baseType: !3137, size: 64, offset: 1216)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !82, line: 40, flags: DIFlagFwdDecl)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3118, file: !3119, line: 71, baseType: !968, size: 64, offset: 1280)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !3118, file: !3119, line: 77, baseType: !3141, size: 192, offset: 1344)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !3142, line: 48, size: 192, elements: !3143)
!3142 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!3143 = !{!3144, !3145, !3146, !3147}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3141, file: !3142, line: 52, baseType: !7, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3141, file: !3142, line: 57, baseType: !7, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !3141, file: !3142, line: 62, baseType: !7, size: 32, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3141, file: !3142, line: 67, baseType: !3148, size: 64, offset: 128)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !3142, line: 20, size: 192, elements: !3150)
!3150 = !{!3151, !3152, !3153, !3154}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3149, file: !3142, line: 24, baseType: !1010, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3149, file: !3142, line: 29, baseType: !1010, size: 64, offset: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !3149, file: !3142, line: 34, baseType: !1010, size: 64, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !3149, file: !3142, line: 39, baseType: !1085, offset: 192)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !3118, file: !3119, line: 83, baseType: !3114, size: 64, offset: 1536)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !3118, file: !3119, line: 89, baseType: !7, size: 32, offset: 1600)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3118, file: !3119, line: 92, baseType: !1064, size: 16, offset: 1632)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !3118, file: !3119, line: 94, baseType: !1064, size: 16, offset: 1648)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !3118, file: !3119, line: 96, baseType: !3160, size: 64, offset: 1664)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !3118, file: !3119, line: 99, baseType: !1085, offset: 1728)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !3118, file: !3119, line: 104, baseType: !1767, size: 320, offset: 1728)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !3118, file: !3119, line: 110, baseType: !1641, size: 32, offset: 2048)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3118, file: !3119, line: 116, baseType: !3165, size: 64, offset: 2112)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !3119, line: 9, flags: DIFlagFwdDecl)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !3118, file: !3119, line: 122, baseType: !3165, size: 64, offset: 2176)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !3118, file: !3119, line: 125, baseType: !1010, size: 64, offset: 2240)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !3118, file: !3119, line: 127, baseType: !1010, size: 64, offset: 2304)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !3118, file: !3119, line: 130, baseType: !3171, size: 448, offset: 2368)
!3171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 448, elements: !3172)
!3172 = !{!3173}
!3173 = !DISubrange(count: 7)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3118, file: !3119, line: 133, baseType: !7, size: 32, offset: 2816)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !3118, file: !3119, line: 135, baseType: !7, size: 32, offset: 2848)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !3118, file: !3119, line: 141, baseType: !1641, size: 32, offset: 2880)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !3118, file: !3119, line: 145, baseType: !1641, size: 32, offset: 2912)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !3118, file: !3119, line: 148, baseType: !1483, size: 128, offset: 2944)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !3118, file: !3119, line: 150, baseType: !1483, size: 128, offset: 3072)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3118, file: !3119, line: 152, baseType: !1072, size: 512, offset: 3200)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !3118, file: !3119, line: 155, baseType: !1010, size: 64, offset: 3712)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !3118, file: !3119, line: 157, baseType: !1010, size: 64, offset: 3776)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !3118, file: !3119, line: 159, baseType: !1010, size: 64, offset: 3840)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !3118, file: !3119, line: 175, baseType: !974, size: 128, offset: 3904)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !3118, file: !3119, line: 182, baseType: !3186, offset: 4032)
!3186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3187, elements: !2912)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !3188, line: 16, size: 576, elements: !3189)
!3188 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!3189 = !{!3190, !3192, !3193, !3194, !3195, !3196, !3197, !3199}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !3187, file: !3188, line: 17, baseType: !3191, size: 32)
!3191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 32, elements: !2471)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !3187, file: !3188, line: 18, baseType: !2109, size: 16, offset: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !3187, file: !3188, line: 19, baseType: !2256, size: 8, offset: 48)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !3187, file: !3188, line: 20, baseType: !2256, size: 8, offset: 56)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !3187, file: !3188, line: 21, baseType: !2409, size: 128, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !3187, file: !3188, line: 23, baseType: !1217, size: 64, offset: 192)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !3187, file: !3188, line: 24, baseType: !3198, size: 64, offset: 256)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !3187, file: !3188, line: 25, baseType: !2896, size: 256, offset: 320)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !3110, file: !82, line: 135, baseType: !7, size: 32, offset: 192)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !3110, file: !82, line: 136, baseType: !3202, size: 32, offset: 224)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !82, line: 66, baseType: !1041)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3110, file: !82, line: 138, baseType: !181, size: 32, offset: 256)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !3110, file: !82, line: 139, baseType: !181, size: 32, offset: 288)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !3110, file: !82, line: 142, baseType: !7, size: 32, offset: 320)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !3110, file: !82, line: 143, baseType: !1724, size: 64, offset: 384)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !3110, file: !82, line: 145, baseType: !2822, size: 64, offset: 448)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !3110, file: !82, line: 146, baseType: !2822, size: 64, offset: 512)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !3110, file: !82, line: 148, baseType: !974, size: 128, offset: 576)
!3210 = !DIDerivedType(tag: DW_TAG_member, scope: !3110, file: !82, line: 157, baseType: !3211, size: 128, offset: 704)
!3211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3110, file: !82, line: 157, size: 128, elements: !3212)
!3212 = !{!3213, !3214}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3211, file: !82, line: 158, baseType: !1483, size: 128)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3211, file: !82, line: 159, baseType: !974, size: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, scope: !3110, file: !82, line: 167, baseType: !3216, size: 192, offset: 832)
!3216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3110, file: !82, line: 167, size: 192, elements: !3217)
!3217 = !{!3218, !3219, !3226, !3227}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3216, file: !82, line: 168, baseType: !1654, size: 192, align: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3216, file: !82, line: 169, baseType: !3220, size: 128)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !3221, line: 31, size: 128, elements: !3222)
!3221 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!3222 = !{!3223, !3224, !3225}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !3220, file: !3221, line: 32, baseType: !1614, size: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !3220, file: !3221, line: 33, baseType: !7, size: 32, offset: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !3220, file: !3221, line: 34, baseType: !7, size: 32, offset: 96)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3216, file: !82, line: 170, baseType: !968, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3216, file: !82, line: 171, baseType: !181, size: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, scope: !3110, file: !82, line: 180, baseType: !3229, size: 256, offset: 1024)
!3229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3110, file: !82, line: 180, size: 256, elements: !3230)
!3230 = !{!3231, !3266}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3229, file: !82, line: 184, baseType: !3232, size: 192)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3229, file: !82, line: 181, size: 192, elements: !3233)
!3233 = !{!3234, !3264}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3232, file: !82, line: 182, baseType: !3235, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3237, line: 73, size: 448, elements: !3238)
!3237 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3238 = !{!3239, !3240, !3253, !3258, !3263}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3236, file: !3237, line: 74, baseType: !3105, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3236, file: !3237, line: 75, baseType: !3241, size: 64, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3237, line: 99, size: 704, elements: !3243)
!3243 = !{!3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3242, file: !3237, line: 100, baseType: !1571, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3242, file: !3237, line: 101, baseType: !1641, size: 32, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3242, file: !3237, line: 102, baseType: !1641, size: 32, offset: 96)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3242, file: !3237, line: 105, baseType: !1085, offset: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3242, file: !3237, line: 107, baseType: !1064, size: 16, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3242, file: !3237, line: 109, baseType: !1632, size: 128, offset: 192)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3242, file: !3237, line: 110, baseType: !3235, size: 64, offset: 320)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3242, file: !3237, line: 111, baseType: !1479, size: 64, offset: 384)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3242, file: !3237, line: 113, baseType: !2896, size: 256, offset: 448)
!3253 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !3237, line: 83, baseType: !3254, size: 128, offset: 128)
!3254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3236, file: !3237, line: 83, size: 128, elements: !3255)
!3255 = !{!3256, !3257}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3254, file: !3237, line: 84, baseType: !974, size: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3254, file: !3237, line: 85, baseType: !1846, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !3237, line: 87, baseType: !3259, size: 128, offset: 256)
!3259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3236, file: !3237, line: 87, size: 128, elements: !3260)
!3260 = !{!3261, !3262}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3259, file: !3237, line: 88, baseType: !1483, size: 128)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3259, file: !3237, line: 89, baseType: !1214, size: 128, align: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3236, file: !3237, line: 92, baseType: !7, size: 32, offset: 384)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3232, file: !82, line: 183, baseType: !3265, size: 128, offset: 64)
!3265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 128, elements: !2471)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3229, file: !82, line: 190, baseType: !3267, size: 256)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3229, file: !82, line: 186, size: 256, elements: !3268)
!3268 = !{!3269, !3270, !3271}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3267, file: !82, line: 187, baseType: !7, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3267, file: !82, line: 188, baseType: !974, size: 128, offset: 64)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3267, file: !82, line: 189, baseType: !3272, size: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !82, line: 62, baseType: !3274)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{null, !3109, !3276}
!3276 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2824, line: 58, baseType: !2256)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !3110, file: !82, line: 193, baseType: !2828, size: 64, offset: 1280)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3110, file: !82, line: 194, baseType: !2848, size: 64, offset: 1344)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !3110, file: !82, line: 200, baseType: !999, size: 64, offset: 1408)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !3110, file: !82, line: 202, baseType: !999, size: 64, offset: 1472)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !3110, file: !82, line: 212, baseType: !1064, size: 16, offset: 1536)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !3110, file: !82, line: 218, baseType: !1064, size: 16, offset: 1552)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !3110, file: !82, line: 221, baseType: !1064, size: 16, offset: 1568)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !3110, file: !82, line: 229, baseType: !1064, size: 16, offset: 1584)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3110, file: !82, line: 230, baseType: !1064, size: 16, offset: 1600)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3110, file: !82, line: 232, baseType: !81, size: 32, offset: 1632)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3110, file: !82, line: 233, baseType: !2134, size: 32, offset: 1664)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3110, file: !82, line: 235, baseType: !7, size: 32, offset: 1696)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3110, file: !82, line: 236, baseType: !1010, size: 64, offset: 1728)
!3290 = !DIDerivedType(tag: DW_TAG_member, scope: !3110, file: !82, line: 238, baseType: !3291, size: 256, offset: 1792)
!3291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3110, file: !82, line: 238, size: 256, elements: !3292)
!3292 = !{!3293, !3322}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3291, file: !82, line: 239, baseType: !3294, size: 256)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3295, line: 23, size: 256, elements: !3296)
!3295 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3296 = !{!3297, !3319, !3321}
!3297 = !DIDerivedType(tag: DW_TAG_member, scope: !3294, file: !3295, line: 24, baseType: !3298, size: 128)
!3298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3294, file: !3295, line: 24, size: 128, elements: !3299)
!3299 = !{!3300, !3312}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3298, file: !3295, line: 25, baseType: !3301, size: 128)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3302, line: 58, size: 128, elements: !3303)
!3302 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3303 = !{!3304, !3305, !3310, !3311}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3301, file: !3302, line: 59, baseType: !1208, size: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, scope: !3301, file: !3302, line: 60, baseType: !3306, size: 32, offset: 64)
!3306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3301, file: !3302, line: 60, size: 32, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3306, file: !3302, line: 61, baseType: !7, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3306, file: !3302, line: 62, baseType: !1641, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3301, file: !3302, line: 65, baseType: !1753, size: 16, offset: 96)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3301, file: !3302, line: 65, baseType: !1753, size: 16, offset: 112)
!3312 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3295, line: 26, baseType: !3313, size: 128)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3298, file: !3295, line: 26, size: 128, elements: !3314)
!3314 = !{!3315, !3316, !3317, !3318}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3313, file: !3295, line: 27, baseType: !1208, size: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3313, file: !3295, line: 28, baseType: !7, size: 32, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3313, file: !3295, line: 30, baseType: !1753, size: 16, offset: 96)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3313, file: !3295, line: 30, baseType: !1753, size: 16, offset: 112)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3294, file: !3295, line: 34, baseType: !3320, size: 64, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3295, line: 17, baseType: !1309)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3294, file: !3295, line: 35, baseType: !968, size: 64, offset: 192)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3291, file: !82, line: 240, baseType: !999, size: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !3110, file: !82, line: 246, baseType: !3272, size: 64, offset: 2048)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !3110, file: !82, line: 247, baseType: !968, size: 64, offset: 2112)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !3106, file: !82, line: 401, baseType: !3326, size: 64, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !88, line: 101, size: 4992, elements: !3328)
!3328 = !{!3329, !3441, !3442, !3443, !3444, !3445}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3327, file: !88, line: 103, baseType: !3330, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !88, line: 66, size: 2240, elements: !3332)
!3332 = !{!3333, !3334, !3416, !3417, !3418, !3431, !3432, !3433, !3435, !3436, !3440}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3331, file: !88, line: 69, baseType: !1846, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3331, file: !88, line: 72, baseType: !3335, size: 1408, offset: 64)
!3335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !88, line: 29, size: 1408, elements: !3336)
!3336 = !{!3337, !3341, !3345, !3349, !3353, !3357, !3361, !3365, !3370, !3374, !3378, !3384, !3388, !3389, !3393, !3397, !3401, !3405, !3406, !3410, !3411, !3415}
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3335, file: !88, line: 30, baseType: !3338, size: 64)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!181, !3105, !3330}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3335, file: !88, line: 31, baseType: !3342, size: 64, offset: 64)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{null, !3326}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3335, file: !88, line: 32, baseType: !3346, size: 64, offset: 128)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!181, !3117, !7}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3335, file: !88, line: 33, baseType: !3350, size: 64, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{null, !3117, !7}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3335, file: !88, line: 34, baseType: !3354, size: 64, offset: 256)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{null, !3117}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3335, file: !88, line: 36, baseType: !3358, size: 64, offset: 320)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!1331, !3105, !3109, !2822}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3335, file: !88, line: 37, baseType: !3362, size: 64, offset: 384)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!1331, !3117, !2822, !7}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3335, file: !88, line: 38, baseType: !3366, size: 64, offset: 448)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!181, !3105, !3369, !2822}
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3335, file: !88, line: 39, baseType: !3371, size: 64, offset: 512)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{null, !3105, !3109, !87}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3335, file: !88, line: 40, baseType: !3375, size: 64, offset: 576)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{null, !3105, !3109, !3109}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3335, file: !88, line: 41, baseType: !3379, size: 64, offset: 640)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{null, !7, !3382}
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !88, line: 26, flags: DIFlagFwdDecl)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3335, file: !88, line: 42, baseType: !3385, size: 64, offset: 704)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{null, !3109}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3335, file: !88, line: 43, baseType: !3385, size: 64, offset: 768)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3335, file: !88, line: 44, baseType: !3390, size: 64, offset: 832)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{null, !3117, !978, !1331}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3335, file: !88, line: 45, baseType: !3394, size: 64, offset: 896)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!3109, !3117}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3335, file: !88, line: 46, baseType: !3398, size: 64, offset: 960)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!1331, !3117}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3335, file: !88, line: 47, baseType: !3402, size: 64, offset: 1024)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{null, !3109, !999}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3335, file: !88, line: 48, baseType: !3385, size: 64, offset: 1088)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3335, file: !88, line: 49, baseType: !3407, size: 64, offset: 1152)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!3109, !3105, !3109}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3335, file: !88, line: 50, baseType: !3407, size: 64, offset: 1216)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3335, file: !88, line: 51, baseType: !3412, size: 64, offset: 1280)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{null, !3235}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3335, file: !88, line: 52, baseType: !3412, size: 64, offset: 1344)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3331, file: !88, line: 74, baseType: !1171, size: 64, offset: 1472)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3331, file: !88, line: 75, baseType: !1171, size: 64, offset: 1536)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3331, file: !88, line: 76, baseType: !3419, size: 64, offset: 1600)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !88, line: 57, size: 256, elements: !3421)
!3421 = !{!3422, !3423, !3427}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3420, file: !88, line: 58, baseType: !1162, size: 128)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3420, file: !88, line: 59, baseType: !3424, size: 64, offset: 128)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!1157, !3326, !1126}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3420, file: !88, line: 60, baseType: !3428, size: 64, offset: 192)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!1157, !3326, !1006, !1171}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3331, file: !88, line: 77, baseType: !1006, size: 64, offset: 1664)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3331, file: !88, line: 78, baseType: !1006, size: 64, offset: 1728)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3331, file: !88, line: 79, baseType: !3434, size: 32, offset: 1792)
!3434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3331, file: !88, line: 80, baseType: !1474, size: 64, offset: 1856)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3331, file: !88, line: 87, baseType: !3437, size: 176, offset: 1920)
!3437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 176, elements: !3438)
!3438 = !{!3439}
!3439 = !DISubrange(count: 22)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3331, file: !88, line: 88, baseType: !974, size: 128, offset: 2112)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3327, file: !88, line: 104, baseType: !968, size: 64, offset: 64)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3327, file: !88, line: 105, baseType: !1072, size: 512, offset: 128)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3327, file: !88, line: 106, baseType: !1567, size: 192, offset: 640)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3327, file: !88, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3327, file: !88, line: 108, baseType: !3446, size: 4096, offset: 896)
!3446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1479, size: 4096, elements: !1131)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !3106, file: !82, line: 403, baseType: !2858, size: 128, offset: 128)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3106, file: !82, line: 405, baseType: !3449, size: 64, offset: 256)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !82, line: 43, flags: DIFlagFwdDecl)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !3106, file: !82, line: 406, baseType: !3452, size: 64, offset: 320)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !82, line: 42, flags: DIFlagFwdDecl)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !3106, file: !82, line: 408, baseType: !3455, size: 64, offset: 384)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !3119, line: 290, size: 960, elements: !3458)
!3458 = !{!3459, !3469, !3470, !3474, !3478, !3482, !3486, !3487, !3491, !3492, !3539, !3543, !3544, !3545, !3546}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3457, file: !3119, line: 294, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!3276, !3117, !3463}
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3465)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !3119, line: 277, size: 128, elements: !3466)
!3466 = !{!3467, !3468}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3465, file: !3119, line: 278, baseType: !3109, size: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3465, file: !3119, line: 279, baseType: !1331, size: 8, offset: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3457, file: !3119, line: 304, baseType: !3354, size: 64, offset: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3457, file: !3119, line: 312, baseType: !3471, size: 64, offset: 128)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{!1331, !3105}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3457, file: !3119, line: 317, baseType: !3475, size: 64, offset: 192)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !3105}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3457, file: !3119, line: 322, baseType: !3479, size: 64, offset: 256)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!94, !3109, !1331}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3457, file: !3119, line: 327, baseType: !3483, size: 64, offset: 320)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!181, !3117}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3457, file: !3119, line: 332, baseType: !3385, size: 64, offset: 384)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3457, file: !3119, line: 339, baseType: !3488, size: 64, offset: 448)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!181, !3117, !968, !7}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3457, file: !3119, line: 343, baseType: !3350, size: 64, offset: 512)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3457, file: !3119, line: 352, baseType: !3493, size: 64, offset: 576)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!181, !3496, !3109, !7, !7}
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !3119, line: 249, size: 2304, elements: !3498)
!3498 = !{!3499, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3534, !3535, !3537, !3538}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3497, file: !3119, line: 250, baseType: !3500, size: 384)
!3500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3501, size: 384, elements: !1127)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !3119, line: 195, size: 128, elements: !3502)
!3502 = !{!3503, !3505, !3506}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3501, file: !3119, line: 196, baseType: !3504, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3501, file: !3119, line: 197, baseType: !7, size: 32, offset: 64)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3501, file: !3119, line: 198, baseType: !7, size: 32, offset: 96)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3497, file: !3119, line: 251, baseType: !7, size: 32, offset: 384)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3497, file: !3119, line: 252, baseType: !3455, size: 64, offset: 448)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3497, file: !3119, line: 253, baseType: !7, size: 32, offset: 512)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3497, file: !3119, line: 254, baseType: !7, size: 32, offset: 544)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3497, file: !3119, line: 255, baseType: !7, size: 32, offset: 576)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3497, file: !3119, line: 256, baseType: !7, size: 32, offset: 608)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3497, file: !3119, line: 257, baseType: !181, size: 32, offset: 640)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3497, file: !3119, line: 258, baseType: !7, size: 32, offset: 672)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3497, file: !3119, line: 259, baseType: !7, size: 32, offset: 704)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3497, file: !3119, line: 260, baseType: !968, size: 64, offset: 768)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3497, file: !3119, line: 261, baseType: !1641, size: 32, offset: 832)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3497, file: !3119, line: 263, baseType: !3519, size: 512, offset: 896)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !3142, line: 97, size: 512, elements: !3520)
!3520 = !{!3521, !3522, !3523, !3524, !3525, !3531, !3532, !3533}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3519, file: !3142, line: 101, baseType: !3141, size: 192)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3519, file: !3142, line: 109, baseType: !3504, size: 64, offset: 192)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3519, file: !3142, line: 115, baseType: !7, size: 32, offset: 256)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3519, file: !3142, line: 120, baseType: !1641, size: 32, offset: 288)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3519, file: !3142, line: 125, baseType: !3526, size: 64, offset: 320)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !3142, line: 76, size: 192, elements: !3528)
!3528 = !{!3529, !3530}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3527, file: !3142, line: 80, baseType: !1641, size: 32)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3527, file: !3142, line: 85, baseType: !2384, size: 128, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3519, file: !3142, line: 130, baseType: !1641, size: 32, offset: 384)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3519, file: !3142, line: 135, baseType: !1331, size: 8, offset: 416)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3519, file: !3142, line: 141, baseType: !7, size: 32, offset: 448)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3497, file: !3119, line: 264, baseType: !3519, size: 512, offset: 1408)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3497, file: !3119, line: 265, baseType: !3536, size: 64, offset: 1920)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3497, file: !3119, line: 267, baseType: !1567, size: 192, offset: 1984)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3497, file: !3119, line: 268, baseType: !974, size: 128, offset: 2176)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3457, file: !3119, line: 357, baseType: !3540, size: 64, offset: 640)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{null, !3496, !3109, !7}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3457, file: !3119, line: 363, baseType: !3385, size: 64, offset: 704)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3457, file: !3119, line: 369, baseType: !3385, size: 64, offset: 768)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3457, file: !3119, line: 374, baseType: !3471, size: 64, offset: 832)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3457, file: !3119, line: 380, baseType: !3547, size: 64, offset: 896)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!181, !3496}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !3106, file: !82, line: 411, baseType: !3114, size: 64, offset: 448)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3106, file: !82, line: 413, baseType: !7, size: 32, offset: 512)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !3106, file: !82, line: 416, baseType: !3553, size: 64, offset: 576)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3106, file: !82, line: 417, baseType: !7, size: 32, offset: 640)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3106, file: !82, line: 419, baseType: !2949, size: 64, offset: 704)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !3106, file: !82, line: 425, baseType: !968, size: 64, offset: 768)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !3106, file: !82, line: 430, baseType: !1010, size: 64, offset: 832)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !3106, file: !82, line: 436, baseType: !1641, size: 32, offset: 896)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3106, file: !82, line: 442, baseType: !181, size: 32, offset: 928)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !3106, file: !82, line: 447, baseType: !1637, size: 32, offset: 960)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !3106, file: !82, line: 449, baseType: !1085, offset: 992)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3106, file: !82, line: 454, baseType: !1072, size: 512, offset: 1024)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !3106, file: !82, line: 459, baseType: !1078, size: 64, offset: 1536)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !3106, file: !82, line: 462, baseType: !3565, size: 128, offset: 1600)
!3565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2830, line: 159, size: 128, elements: !3566)
!3566 = !{!3567, !3596, !3597, !3598, !3599}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3565, file: !2830, line: 160, baseType: !3568, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3570)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !82, line: 1664, size: 320, elements: !3571)
!3571 = !{!3572, !3586, !3587, !3590, !3595}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3570, file: !82, line: 1665, baseType: !3573, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !82, line: 1660, baseType: !3575)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!3276, !3577}
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !82, line: 1651, size: 320, elements: !3579)
!3579 = !{!3580, !3581, !3582, !3583, !3584, !3585}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3578, file: !82, line: 1652, baseType: !968, size: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3578, file: !82, line: 1653, baseType: !968, size: 64, offset: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3578, file: !82, line: 1654, baseType: !1724, size: 64, offset: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3578, file: !82, line: 1655, baseType: !7, size: 32, offset: 192)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3578, file: !82, line: 1656, baseType: !1064, size: 16, offset: 224)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3578, file: !82, line: 1657, baseType: !1006, size: 64, offset: 256)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3570, file: !82, line: 1666, baseType: !3573, size: 64, offset: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3570, file: !82, line: 1667, baseType: !3588, size: 64, offset: 128)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !82, line: 1661, baseType: !3386)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3570, file: !82, line: 1668, baseType: !3591, size: 64, offset: 192)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !82, line: 1662, baseType: !3593)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{null, !3109, !7}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3570, file: !82, line: 1669, baseType: !1006, size: 64, offset: 256)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3565, file: !2830, line: 161, baseType: !1055, size: 8, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3565, file: !2830, line: 162, baseType: !1055, size: 8, offset: 72)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3565, file: !2830, line: 163, baseType: !1055, size: 8, offset: 80)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3565, file: !2830, line: 164, baseType: !1055, size: 8, offset: 88)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3106, file: !82, line: 466, baseType: !1068, size: 64, offset: 1728)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !3106, file: !82, line: 467, baseType: !61, size: 32, offset: 1792)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !3106, file: !82, line: 468, baseType: !7, size: 32, offset: 1824)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !3106, file: !82, line: 474, baseType: !1010, size: 64, offset: 1856)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !3106, file: !82, line: 476, baseType: !7, size: 32, offset: 1920)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !3106, file: !82, line: 477, baseType: !7, size: 32, offset: 1952)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !3106, file: !82, line: 484, baseType: !7, size: 32, offset: 1984)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !3106, file: !82, line: 485, baseType: !181, size: 32, offset: 2016)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !3106, file: !82, line: 487, baseType: !3609, size: 64, offset: 2048)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !82, line: 44, flags: DIFlagFwdDecl)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !3106, file: !82, line: 488, baseType: !3612, size: 5120, offset: 2112)
!3612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3613, size: 5120, elements: !2637)
!3613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2824, line: 540, size: 320, elements: !3614)
!3614 = !{!3615, !3616, !3617, !3618, !3619}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3613, file: !2824, line: 541, baseType: !999, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3613, file: !2824, line: 542, baseType: !999, size: 64, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3613, file: !2824, line: 543, baseType: !999, size: 64, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3613, file: !2824, line: 544, baseType: !1040, size: 32, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3613, file: !2824, line: 545, baseType: !999, size: 64, offset: 256)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3106, file: !82, line: 490, baseType: !3008, size: 320, offset: 7232)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !3106, file: !82, line: 491, baseType: !2896, size: 256, offset: 7552)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !3106, file: !82, line: 493, baseType: !1641, size: 32, offset: 7808)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3106, file: !82, line: 495, baseType: !974, size: 128, offset: 7872)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !3106, file: !82, line: 502, baseType: !3625, size: 896, offset: 8000)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !82, line: 321, size: 896, elements: !3626)
!3626 = !{!3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3625, file: !82, line: 322, baseType: !1010, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3625, file: !82, line: 323, baseType: !1010, size: 64, offset: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3625, file: !82, line: 324, baseType: !1010, size: 64, offset: 128)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3625, file: !82, line: 326, baseType: !7, size: 32, offset: 192)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3625, file: !82, line: 327, baseType: !7, size: 32, offset: 224)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3625, file: !82, line: 328, baseType: !7, size: 32, offset: 256)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3625, file: !82, line: 329, baseType: !7, size: 32, offset: 288)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3625, file: !82, line: 330, baseType: !7, size: 32, offset: 320)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3625, file: !82, line: 331, baseType: !7, size: 32, offset: 352)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3625, file: !82, line: 332, baseType: !7, size: 32, offset: 384)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3625, file: !82, line: 333, baseType: !7, size: 32, offset: 416)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3625, file: !82, line: 334, baseType: !7, size: 32, offset: 448)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3625, file: !82, line: 335, baseType: !7, size: 32, offset: 480)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3625, file: !82, line: 336, baseType: !7, size: 32, offset: 512)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3625, file: !82, line: 337, baseType: !7, size: 32, offset: 544)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3625, file: !82, line: 338, baseType: !7, size: 32, offset: 576)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3625, file: !82, line: 339, baseType: !7, size: 32, offset: 608)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3625, file: !82, line: 340, baseType: !7, size: 32, offset: 640)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3625, file: !82, line: 341, baseType: !7, size: 32, offset: 672)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3625, file: !82, line: 342, baseType: !7, size: 32, offset: 704)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3625, file: !82, line: 344, baseType: !1064, size: 16, offset: 736)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3625, file: !82, line: 345, baseType: !1064, size: 16, offset: 752)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3625, file: !82, line: 346, baseType: !1064, size: 16, offset: 768)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3625, file: !82, line: 348, baseType: !1055, size: 8, offset: 784)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3625, file: !82, line: 349, baseType: !1055, size: 8, offset: 792)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3625, file: !82, line: 350, baseType: !1055, size: 8, offset: 800)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3625, file: !82, line: 351, baseType: !110, size: 32, offset: 832)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !3106, file: !82, line: 504, baseType: !7, size: 32, offset: 8896)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !3106, file: !82, line: 534, baseType: !7, size: 32, offset: 8928)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !3106, file: !82, line: 535, baseType: !7, size: 32, offset: 8960)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3106, file: !82, line: 536, baseType: !181, size: 32, offset: 8992)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !3106, file: !82, line: 537, baseType: !1567, size: 192, offset: 9024)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3106, file: !82, line: 544, baseType: !3137, size: 64, offset: 9216)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !3106, file: !82, line: 546, baseType: !974, size: 128, offset: 9280)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !3106, file: !82, line: 547, baseType: !1085, offset: 9408)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !3106, file: !82, line: 548, baseType: !3004, size: 704, offset: 9408)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3106, file: !82, line: 550, baseType: !1567, size: 192, offset: 10112)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !3106, file: !82, line: 551, baseType: !1567, size: 192, offset: 10304)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !3106, file: !82, line: 557, baseType: !974, size: 128, offset: 10496)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !3106, file: !82, line: 558, baseType: !1085, offset: 10624)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !3106, file: !82, line: 560, baseType: !181, size: 32, offset: 10624)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !3106, file: !82, line: 563, baseType: !3669, size: 256, offset: 10688)
!3669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3670, line: 18, size: 256, elements: !3671)
!3670 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3671 = !{!3672, !3673, !3674, !3675}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3669, file: !3670, line: 19, baseType: !1068, size: 64)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3669, file: !3670, line: 20, baseType: !181, size: 32, offset: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3669, file: !3670, line: 21, baseType: !3105, size: 64, offset: 128)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3669, file: !3670, line: 22, baseType: !3676, size: 64, offset: 192)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3678)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3670, line: 10, size: 256, elements: !3679)
!3679 = !{!3680, !3721, !3725, !3729}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3678, file: !3670, line: 11, baseType: !3681, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!181, !3684}
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3686, line: 22, size: 1280, elements: !3687)
!3686 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3687 = !{!3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3685, file: !3686, line: 23, baseType: !2348, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3685, file: !3686, line: 24, baseType: !1041, size: 32, offset: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3685, file: !3686, line: 25, baseType: !1041, size: 32, offset: 64)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3685, file: !3686, line: 28, baseType: !1041, size: 32, offset: 96)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3685, file: !3686, line: 29, baseType: !1001, size: 64, offset: 128)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3685, file: !3686, line: 30, baseType: !1001, size: 64, offset: 192)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3685, file: !3686, line: 31, baseType: !1041, size: 32, offset: 256)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3685, file: !3686, line: 32, baseType: !1041, size: 32, offset: 288)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3685, file: !3686, line: 33, baseType: !1041, size: 32, offset: 320)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3685, file: !3686, line: 34, baseType: !1041, size: 32, offset: 352)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3685, file: !3686, line: 35, baseType: !1001, size: 64, offset: 384)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3685, file: !3686, line: 38, baseType: !1041, size: 32, offset: 448)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3685, file: !3686, line: 40, baseType: !1041, size: 32, offset: 480)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3685, file: !3686, line: 41, baseType: !1041, size: 32, offset: 512)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3685, file: !3686, line: 42, baseType: !1041, size: 32, offset: 544)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3685, file: !3686, line: 43, baseType: !1001, size: 64, offset: 576)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3685, file: !3686, line: 44, baseType: !1001, size: 64, offset: 640)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3685, file: !3686, line: 46, baseType: !1041, size: 32, offset: 704)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3685, file: !3686, line: 47, baseType: !1041, size: 32, offset: 736)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3685, file: !3686, line: 48, baseType: !1001, size: 64, offset: 768)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3685, file: !3686, line: 49, baseType: !1041, size: 32, offset: 832)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3685, file: !3686, line: 51, baseType: !1041, size: 32, offset: 864)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3685, file: !3686, line: 52, baseType: !1041, size: 32, offset: 896)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3685, file: !3686, line: 53, baseType: !1041, size: 32, offset: 928)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3685, file: !3686, line: 54, baseType: !1041, size: 32, offset: 960)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3685, file: !3686, line: 55, baseType: !1041, size: 32, offset: 992)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3685, file: !3686, line: 56, baseType: !1041, size: 32, offset: 1024)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3685, file: !3686, line: 57, baseType: !1041, size: 32, offset: 1056)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3685, file: !3686, line: 58, baseType: !2348, size: 32, offset: 1088)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3685, file: !3686, line: 59, baseType: !2348, size: 32, offset: 1120)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3685, file: !3686, line: 60, baseType: !1001, size: 64, offset: 1152)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3685, file: !3686, line: 61, baseType: !1041, size: 32, offset: 1216)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3685, file: !3686, line: 63, baseType: !1041, size: 32, offset: 1248)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3678, file: !3670, line: 12, baseType: !3722, size: 64, offset: 64)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!181, !3109, !3684, !3032}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3678, file: !3670, line: 14, baseType: !3726, size: 64, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{!181, !3109, !3684}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3678, file: !3670, line: 15, baseType: !3385, size: 64, offset: 192)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3106, file: !82, line: 570, baseType: !1214, size: 128, align: 64, offset: 10944)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !3106, file: !82, line: 571, baseType: !2384, size: 128, offset: 11072)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !3106, file: !82, line: 576, baseType: !1567, size: 192, offset: 11200)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !3106, file: !82, line: 578, baseType: !3496, size: 64, offset: 11392)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !3106, file: !82, line: 579, baseType: !974, size: 128, offset: 11456)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !3106, file: !82, line: 580, baseType: !3736, size: 2368, offset: 11584)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2819, line: 682, size: 2368, elements: !3737)
!3737 = !{!3738, !3739, !3740, !3761, !3762, !3763, !3764, !3765, !3766, !3767}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3736, file: !2819, line: 683, baseType: !1846, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3736, file: !2819, line: 684, baseType: !7, size: 32, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3736, file: !2819, line: 686, baseType: !3741, size: 448, offset: 128)
!3741 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3742, line: 26, baseType: !3743)
!3742 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3742, line: 16, size: 448, elements: !3744)
!3744 = !{!3745, !3746, !3747, !3748, !3749, !3750, !3755, !3760}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3743, file: !3742, line: 17, baseType: !1085)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3743, file: !3742, line: 18, baseType: !181, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3743, file: !3742, line: 19, baseType: !181, size: 32, offset: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3743, file: !3742, line: 20, baseType: !1715, size: 64, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3743, file: !3742, line: 22, baseType: !968, size: 64, offset: 128)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3743, file: !3742, line: 23, baseType: !3751, size: 64, offset: 192)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3742, line: 13, baseType: !3753)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!968, !1637, !968}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3743, file: !3742, line: 24, baseType: !3756, size: 64, offset: 256)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3742, line: 14, baseType: !3758)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{null, !968, !968}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3743, file: !3742, line: 25, baseType: !2384, size: 128, offset: 320)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3736, file: !2819, line: 687, baseType: !3741, size: 448, offset: 576)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3736, file: !2819, line: 689, baseType: !3741, size: 448, offset: 1024)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3736, file: !2819, line: 690, baseType: !3741, size: 448, offset: 1472)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3736, file: !2819, line: 697, baseType: !1085, offset: 1920)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3736, file: !2819, line: 698, baseType: !2818, size: 128, offset: 1920)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3736, file: !2819, line: 699, baseType: !2896, size: 256, offset: 2048)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3736, file: !2819, line: 700, baseType: !2908, size: 64, offset: 2304)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !3106, file: !82, line: 582, baseType: !1231, size: 64, offset: 13952)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !3106, file: !82, line: 589, baseType: !1331, size: 8, offset: 14016)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3106, file: !82, line: 591, baseType: !1171, size: 64, offset: 14080)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !3106, file: !82, line: 594, baseType: !3772, size: 320, offset: 14144)
!3772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !999, size: 320, elements: !3773)
!3773 = !{!3774}
!3774 = !DISubrange(count: 5)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2829, file: !2830, line: 191, baseType: !968, size: 64, offset: 7168)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2829, file: !2830, line: 193, baseType: !181, size: 32, offset: 7232)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2829, file: !2830, line: 194, baseType: !1010, size: 64, offset: 7296)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2829, file: !2830, line: 196, baseType: !1661, size: 256, offset: 7360)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2829, file: !2830, line: 197, baseType: !1078, size: 64, offset: 7616)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2829, file: !2830, line: 199, baseType: !3781, size: 64, offset: 7680)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2830, line: 199, flags: DIFlagFwdDecl)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2829, file: !2830, line: 200, baseType: !1641, size: 32, offset: 7744)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2829, file: !2830, line: 201, baseType: !3785, size: 64, offset: 7808)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2830, line: 156, flags: DIFlagFwdDecl)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2829, file: !2830, line: 203, baseType: !1072, size: 512, offset: 7872)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2829, file: !2830, line: 208, baseType: !181, size: 32, offset: 8384)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2829, file: !2830, line: 209, baseType: !3790, size: 64, offset: 8448)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2830, line: 157, flags: DIFlagFwdDecl)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2829, file: !2830, line: 210, baseType: !3793, offset: 8512)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1490, line: 192, elements: !1099)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2823, file: !2824, line: 206, baseType: !7, size: 32, offset: 128)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2823, file: !2824, line: 210, baseType: !1064, size: 16, offset: 160)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2823, file: !2824, line: 211, baseType: !1064, size: 16, offset: 176)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2823, file: !2824, line: 212, baseType: !1064, size: 16, offset: 192)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2823, file: !2824, line: 213, baseType: !3276, size: 8, offset: 208)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2823, file: !2824, line: 214, baseType: !2256, size: 8, offset: 216)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2823, file: !2824, line: 215, baseType: !1641, size: 32, offset: 224)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2823, file: !2824, line: 217, baseType: !3802, size: 192, offset: 256)
!3802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !3221, line: 37, size: 192, elements: !3803)
!3803 = !{!3804, !3805, !3806, !3807}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3802, file: !3221, line: 38, baseType: !1724, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3802, file: !3221, line: 40, baseType: !7, size: 32, offset: 64)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3802, file: !3221, line: 42, baseType: !7, size: 32, offset: 96)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3802, file: !3221, line: 44, baseType: !7, size: 32, offset: 128)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2823, file: !2824, line: 219, baseType: !3809, size: 64, offset: 448)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2824, line: 19, baseType: !3811)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{null, !2822}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2823, file: !2824, line: 221, baseType: !968, size: 64, offset: 512)
!3814 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2824, line: 240, baseType: !3815, size: 64, offset: 576)
!3815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2824, line: 240, size: 64, elements: !3816)
!3816 = !{!3817}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3815, file: !2824, line: 242, baseType: !3818, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2819, line: 313, size: 832, elements: !3820)
!3820 = !{!3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3831}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3819, file: !2819, line: 314, baseType: !2822, size: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3819, file: !2819, line: 316, baseType: !3802, size: 192, offset: 64)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3819, file: !2819, line: 318, baseType: !1064, size: 16, offset: 256)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3819, file: !2819, line: 319, baseType: !1064, size: 16, offset: 272)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3819, file: !2819, line: 320, baseType: !1064, size: 16, offset: 288)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3819, file: !2819, line: 321, baseType: !1064, size: 16, offset: 304)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3819, file: !2819, line: 323, baseType: !3802, size: 192, offset: 320)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3819, file: !2819, line: 325, baseType: !2896, size: 256, offset: 512)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3819, file: !2819, line: 327, baseType: !3830, size: 64, offset: 768)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3819, file: !2819, line: 328, baseType: !3832, offset: 832)
!3832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3220, elements: !2912)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2823, file: !2824, line: 246, baseType: !1064, size: 16, offset: 640)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2823, file: !2824, line: 252, baseType: !1064, size: 16, offset: 656)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2823, file: !2824, line: 254, baseType: !1641, size: 32, offset: 672)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2823, file: !2824, line: 256, baseType: !3830, size: 64, offset: 704)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2823, file: !2824, line: 258, baseType: !3838, size: 64, offset: 768)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2823, file: !2824, line: 265, baseType: !3832, offset: 832)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2818, file: !2819, line: 556, baseType: !2822, size: 64, offset: 64)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2121, file: !2122, line: 1050, baseType: !3842, size: 64, offset: 10688)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !82, line: 1236, size: 320, elements: !3844)
!3844 = !{!3845, !3846, !3847, !3848, !3849}
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3843, file: !82, line: 1237, baseType: !974, size: 128)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3843, file: !82, line: 1238, baseType: !974, size: 128, offset: 128)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3843, file: !82, line: 1239, baseType: !1064, size: 16, offset: 256)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3843, file: !82, line: 1240, baseType: !1331, size: 8, offset: 272)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3843, file: !82, line: 1241, baseType: !1331, size: 8, offset: 280)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2121, file: !2122, line: 1054, baseType: !3851, size: 64, offset: 10752)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2122, line: 55, flags: DIFlagFwdDecl)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2121, file: !2122, line: 1056, baseType: !2949, size: 64, offset: 10816)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2121, file: !2122, line: 1058, baseType: !3241, size: 64, offset: 10880)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2121, file: !2122, line: 1061, baseType: !3856, size: 64, offset: 10944)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2122, line: 43, flags: DIFlagFwdDecl)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2121, file: !2122, line: 1064, baseType: !1010, size: 64, offset: 11008)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2121, file: !2122, line: 1065, baseType: !3860, size: 64, offset: 11072)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2667, line: 14, baseType: !3862)
!3862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2667, line: 12, size: 384, elements: !3863)
!3863 = !{!3864}
!3864 = !DIDerivedType(tag: DW_TAG_member, scope: !3862, file: !2667, line: 13, baseType: !3865, size: 384)
!3865 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3862, file: !2667, line: 13, size: 384, elements: !3866)
!3866 = !{!3867, !3868, !3869, !3870}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3865, file: !2667, line: 13, baseType: !181, size: 32)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3865, file: !2667, line: 13, baseType: !181, size: 32, offset: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3865, file: !2667, line: 13, baseType: !181, size: 32, offset: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3865, file: !2667, line: 13, baseType: !3871, size: 256, offset: 128)
!3871 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3872, line: 32, size: 256, elements: !3873)
!3872 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3873 = !{!3874, !3879, !3892, !3898, !3907, !3927, !3932}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3871, file: !3872, line: 37, baseType: !3875, size: 64)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3871, file: !3872, line: 34, size: 64, elements: !3876)
!3876 = !{!3877, !3878}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3875, file: !3872, line: 35, baseType: !2363, size: 32)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3875, file: !3872, line: 36, baseType: !1282, size: 32, offset: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3871, file: !3872, line: 45, baseType: !3880, size: 192)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3871, file: !3872, line: 40, size: 192, elements: !3881)
!3881 = !{!3882, !3884, !3885, !3891}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3880, file: !3872, line: 41, baseType: !3883, size: 32)
!3883 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1159, line: 95, baseType: !181)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3880, file: !3872, line: 42, baseType: !181, size: 32, offset: 32)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3880, file: !3872, line: 43, baseType: !3886, size: 64, offset: 64)
!3886 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3872, line: 11, baseType: !3887)
!3887 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3872, line: 8, size: 64, elements: !3888)
!3888 = !{!3889, !3890}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3887, file: !3872, line: 9, baseType: !181, size: 32)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3887, file: !3872, line: 10, baseType: !968, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3880, file: !3872, line: 44, baseType: !181, size: 32, offset: 128)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3871, file: !3872, line: 52, baseType: !3893, size: 128)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3871, file: !3872, line: 48, size: 128, elements: !3894)
!3894 = !{!3895, !3896, !3897}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3893, file: !3872, line: 49, baseType: !2363, size: 32)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3893, file: !3872, line: 50, baseType: !1282, size: 32, offset: 32)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3893, file: !3872, line: 51, baseType: !3886, size: 64, offset: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3871, file: !3872, line: 61, baseType: !3899, size: 256)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3871, file: !3872, line: 55, size: 256, elements: !3900)
!3900 = !{!3901, !3902, !3903, !3904, !3906}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3899, file: !3872, line: 56, baseType: !2363, size: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3899, file: !3872, line: 57, baseType: !1282, size: 32, offset: 32)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3899, file: !3872, line: 58, baseType: !181, size: 32, offset: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3899, file: !3872, line: 59, baseType: !3905, size: 64, offset: 128)
!3905 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1159, line: 94, baseType: !1160)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3899, file: !3872, line: 60, baseType: !3905, size: 64, offset: 192)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3871, file: !3872, line: 95, baseType: !3908, size: 256)
!3908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3871, file: !3872, line: 64, size: 256, elements: !3909)
!3909 = !{!3910, !3911}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3908, file: !3872, line: 65, baseType: !968, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_member, scope: !3908, file: !3872, line: 77, baseType: !3912, size: 192, offset: 64)
!3912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3908, file: !3872, line: 77, size: 192, elements: !3913)
!3913 = !{!3914, !3915, !3922}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3912, file: !3872, line: 82, baseType: !2109, size: 16)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3912, file: !3872, line: 88, baseType: !3916, size: 192)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3912, file: !3872, line: 84, size: 192, elements: !3917)
!3917 = !{!3918, !3920, !3921}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3916, file: !3872, line: 85, baseType: !3919, size: 64)
!3919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 64, elements: !2234)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3916, file: !3872, line: 86, baseType: !968, size: 64, offset: 64)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3916, file: !3872, line: 87, baseType: !968, size: 64, offset: 128)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3912, file: !3872, line: 93, baseType: !3923, size: 96)
!3923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3912, file: !3872, line: 90, size: 96, elements: !3924)
!3924 = !{!3925, !3926}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3923, file: !3872, line: 91, baseType: !3919, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3923, file: !3872, line: 92, baseType: !1041, size: 32, offset: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3871, file: !3872, line: 101, baseType: !3928, size: 128)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3871, file: !3872, line: 98, size: 128, elements: !3929)
!3929 = !{!3930, !3931}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3928, file: !3872, line: 99, baseType: !881, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3928, file: !3872, line: 100, baseType: !181, size: 32, offset: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3871, file: !3872, line: 108, baseType: !3933, size: 128)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3871, file: !3872, line: 104, size: 128, elements: !3934)
!3934 = !{!3935, !3936, !3937}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3933, file: !3872, line: 105, baseType: !968, size: 64)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3933, file: !3872, line: 106, baseType: !181, size: 32, offset: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3933, file: !3872, line: 107, baseType: !7, size: 32, offset: 96)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2121, file: !2122, line: 1067, baseType: !2739, offset: 11136)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2121, file: !2122, line: 1099, baseType: !3940, size: 64, offset: 11136)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2122, line: 56, flags: DIFlagFwdDecl)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2121, file: !2122, line: 1103, baseType: !974, size: 128, offset: 11200)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2121, file: !2122, line: 1104, baseType: !3944, size: 64, offset: 11328)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2122, line: 46, flags: DIFlagFwdDecl)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2121, file: !2122, line: 1105, baseType: !1567, size: 192, offset: 11392)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2121, file: !2122, line: 1106, baseType: !7, size: 32, offset: 11584)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2121, file: !2122, line: 1109, baseType: !3949, size: 128, offset: 11648)
!3949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3950, size: 128, elements: !2471)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2122, line: 51, flags: DIFlagFwdDecl)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2121, file: !2122, line: 1110, baseType: !1567, size: 192, offset: 11776)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2121, file: !2122, line: 1111, baseType: !974, size: 128, offset: 11968)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2121, file: !2122, line: 1173, baseType: !3955, size: 64, offset: 12096)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3957, line: 62, size: 256, align: 256, elements: !3958)
!3957 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3958 = !{!3959, !3960, !3961, !3966}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3956, file: !3957, line: 75, baseType: !1041, size: 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3956, file: !3957, line: 90, baseType: !1041, size: 32, offset: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3956, file: !3957, line: 124, baseType: !3962, size: 64, offset: 64)
!3962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3956, file: !3957, line: 109, size: 64, elements: !3963)
!3963 = !{!3964, !3965}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3962, file: !3957, line: 110, baseType: !1001, size: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3962, file: !3957, line: 112, baseType: !1001, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3956, file: !3957, line: 144, baseType: !1041, size: 32, offset: 128)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2121, file: !2122, line: 1174, baseType: !1040, size: 32, offset: 12160)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2121, file: !2122, line: 1179, baseType: !1010, size: 64, offset: 12224)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2121, file: !2122, line: 1182, baseType: !3970, size: 128, offset: 12288)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2063, line: 76, size: 128, elements: !3971)
!3971 = !{!3972, !3977, !3978}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3970, file: !2063, line: 85, baseType: !3973, size: 64)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3974, line: 7, size: 64, elements: !3975)
!3974 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3975 = !{!3976}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3973, file: !3974, line: 12, baseType: !2271, size: 64)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3970, file: !2063, line: 88, baseType: !1331, size: 8, offset: 64)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3970, file: !2063, line: 95, baseType: !1331, size: 8, offset: 72)
!3979 = !DIDerivedType(tag: DW_TAG_member, scope: !2121, file: !2122, line: 1184, baseType: !3980, size: 128, offset: 12416)
!3980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !2122, line: 1184, size: 128, elements: !3981)
!3981 = !{!3982, !3983}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3980, file: !2122, line: 1185, baseType: !2134, size: 32)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3980, file: !2122, line: 1186, baseType: !1214, size: 128, align: 64)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2121, file: !2122, line: 1190, baseType: !3985, size: 64, offset: 12544)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2122, line: 53, flags: DIFlagFwdDecl)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2121, file: !2122, line: 1192, baseType: !3988, size: 128, offset: 12608)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2063, line: 64, size: 128, elements: !3989)
!3989 = !{!3990, !3991, !3992}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3988, file: !2063, line: 65, baseType: !1614, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3988, file: !2063, line: 67, baseType: !1041, size: 32, offset: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3988, file: !2063, line: 68, baseType: !1041, size: 32, offset: 96)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2121, file: !2122, line: 1206, baseType: !181, size: 32, offset: 12736)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2121, file: !2122, line: 1207, baseType: !181, size: 32, offset: 12768)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2121, file: !2122, line: 1209, baseType: !1010, size: 64, offset: 12800)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2121, file: !2122, line: 1219, baseType: !999, size: 64, offset: 12864)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2121, file: !2122, line: 1220, baseType: !999, size: 64, offset: 12928)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2121, file: !2122, line: 1317, baseType: !181, size: 32, offset: 12992)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2121, file: !2122, line: 1319, baseType: !2120, size: 64, offset: 13056)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2121, file: !2122, line: 1322, baseType: !4001, size: 64, offset: 13120)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4003, line: 56, size: 512, elements: !4004)
!4003 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4004 = !{!4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4002, file: !4003, line: 57, baseType: !4001, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4002, file: !4003, line: 58, baseType: !968, size: 64, offset: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4002, file: !4003, line: 59, baseType: !1010, size: 64, offset: 128)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4002, file: !4003, line: 60, baseType: !1010, size: 64, offset: 192)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4002, file: !4003, line: 61, baseType: !1714, size: 64, offset: 256)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4002, file: !4003, line: 62, baseType: !7, size: 32, offset: 320)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4002, file: !4003, line: 63, baseType: !998, size: 64, offset: 384)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4002, file: !4003, line: 64, baseType: !4013, size: 64, offset: 448)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2121, file: !2122, line: 1326, baseType: !2134, size: 32, offset: 13184)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2121, file: !2122, line: 1342, baseType: !968, size: 64, offset: 13248)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2121, file: !2122, line: 1343, baseType: !1001, size: 64, offset: 13312)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2121, file: !2122, line: 1344, baseType: !999, size: 64, offset: 13376)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2121, file: !2122, line: 1345, baseType: !1001, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2121, file: !2122, line: 1346, baseType: !1001, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2121, file: !2122, line: 1347, baseType: !1001, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2121, file: !2122, line: 1348, baseType: !1214, size: 128, align: 64, offset: 13504)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2121, file: !2122, line: 1358, baseType: !4024, size: 34816, offset: 13824)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4025, line: 485, size: 34816, elements: !4026)
!4025 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4026 = !{!4027, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4056, !4057, !4058, !4059, !4060, !4061, !4064, !4065, !4066}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4024, file: !4025, line: 487, baseType: !4028, size: 192)
!4028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4029, size: 192, elements: !1127)
!4029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4030, line: 16, size: 64, elements: !4031)
!4030 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4031 = !{!4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4029, file: !4030, line: 17, baseType: !1753, size: 16)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4029, file: !4030, line: 18, baseType: !1753, size: 16, offset: 16)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4029, file: !4030, line: 19, baseType: !1753, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4029, file: !4030, line: 19, baseType: !1753, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4029, file: !4030, line: 19, baseType: !1753, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4029, file: !4030, line: 19, baseType: !1753, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4029, file: !4030, line: 19, baseType: !1753, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4029, file: !4030, line: 20, baseType: !1753, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4029, file: !4030, line: 20, baseType: !1753, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4029, file: !4030, line: 20, baseType: !1753, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4029, file: !4030, line: 20, baseType: !1753, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4029, file: !4030, line: 20, baseType: !1753, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4029, file: !4030, line: 20, baseType: !1753, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4024, file: !4025, line: 491, baseType: !1010, size: 64, offset: 192)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4024, file: !4025, line: 495, baseType: !1064, size: 16, offset: 256)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4024, file: !4025, line: 496, baseType: !1064, size: 16, offset: 272)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4024, file: !4025, line: 497, baseType: !1064, size: 16, offset: 288)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4024, file: !4025, line: 498, baseType: !1064, size: 16, offset: 304)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4024, file: !4025, line: 502, baseType: !1010, size: 64, offset: 320)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4024, file: !4025, line: 503, baseType: !1010, size: 64, offset: 384)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4024, file: !4025, line: 514, baseType: !4053, size: 256, offset: 448)
!4053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4054, size: 256, elements: !1015)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4025, line: 483, flags: DIFlagFwdDecl)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4024, file: !4025, line: 516, baseType: !1010, size: 64, offset: 704)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4024, file: !4025, line: 518, baseType: !1010, size: 64, offset: 768)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4024, file: !4025, line: 520, baseType: !1010, size: 64, offset: 832)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4024, file: !4025, line: 521, baseType: !1010, size: 64, offset: 896)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4024, file: !4025, line: 522, baseType: !1010, size: 64, offset: 960)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4024, file: !4025, line: 528, baseType: !4062, size: 64, offset: 1024)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4025, line: 10, flags: DIFlagFwdDecl)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4024, file: !4025, line: 535, baseType: !1010, size: 64, offset: 1088)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4024, file: !4025, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4024, file: !4025, line: 540, baseType: !4067, size: 33280, offset: 1536)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4068, line: 317, size: 33280, elements: !4069)
!4068 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4069 = !{!4070, !4071, !4072}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4067, file: !4068, line: 330, baseType: !7, size: 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4067, file: !4068, line: 337, baseType: !1010, size: 64, offset: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4067, file: !4068, line: 348, baseType: !4073, size: 32768, offset: 512)
!4073 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4068, line: 304, size: 32768, elements: !4074)
!4074 = !{!4075, !4090, !4127, !4177, !4190}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4073, file: !4068, line: 305, baseType: !4076, size: 896)
!4076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4068, line: 12, size: 896, elements: !4077)
!4077 = !{!4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4089}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4076, file: !4068, line: 13, baseType: !1040, size: 32)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4076, file: !4068, line: 14, baseType: !1040, size: 32, offset: 32)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4076, file: !4068, line: 15, baseType: !1040, size: 32, offset: 64)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4076, file: !4068, line: 16, baseType: !1040, size: 32, offset: 96)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4076, file: !4068, line: 17, baseType: !1040, size: 32, offset: 128)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4076, file: !4068, line: 18, baseType: !1040, size: 32, offset: 160)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4076, file: !4068, line: 19, baseType: !1040, size: 32, offset: 192)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4076, file: !4068, line: 22, baseType: !4086, size: 640, offset: 224)
!4086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 640, elements: !4087)
!4087 = !{!4088}
!4088 = !DISubrange(count: 20)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4076, file: !4068, line: 25, baseType: !1040, size: 32, offset: 864)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4073, file: !4068, line: 306, baseType: !4091, size: 4096, align: 128)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4068, line: 34, size: 4096, align: 128, elements: !4092)
!4092 = !{!4093, !4094, !4095, !4096, !4097, !4112, !4113, !4114, !4116, !4118, !4122}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4091, file: !4068, line: 35, baseType: !1753, size: 16)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4091, file: !4068, line: 36, baseType: !1753, size: 16, offset: 16)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4091, file: !4068, line: 37, baseType: !1753, size: 16, offset: 32)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4091, file: !4068, line: 38, baseType: !1753, size: 16, offset: 48)
!4097 = !DIDerivedType(tag: DW_TAG_member, scope: !4091, file: !4068, line: 39, baseType: !4098, size: 128, offset: 64)
!4098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4091, file: !4068, line: 39, size: 128, elements: !4099)
!4099 = !{!4100, !4105}
!4100 = !DIDerivedType(tag: DW_TAG_member, scope: !4098, file: !4068, line: 40, baseType: !4101, size: 128)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4068, line: 40, size: 128, elements: !4102)
!4102 = !{!4103, !4104}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4101, file: !4068, line: 41, baseType: !999, size: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4101, file: !4068, line: 42, baseType: !999, size: 64, offset: 64)
!4105 = !DIDerivedType(tag: DW_TAG_member, scope: !4098, file: !4068, line: 44, baseType: !4106, size: 128)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4068, line: 44, size: 128, elements: !4107)
!4107 = !{!4108, !4109, !4110, !4111}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4106, file: !4068, line: 45, baseType: !1040, size: 32)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4106, file: !4068, line: 46, baseType: !1040, size: 32, offset: 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4106, file: !4068, line: 47, baseType: !1040, size: 32, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4106, file: !4068, line: 48, baseType: !1040, size: 32, offset: 96)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4091, file: !4068, line: 51, baseType: !1040, size: 32, offset: 192)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4091, file: !4068, line: 52, baseType: !1040, size: 32, offset: 224)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4091, file: !4068, line: 55, baseType: !4115, size: 1024, offset: 256)
!4115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 1024, elements: !2837)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4091, file: !4068, line: 58, baseType: !4117, size: 2048, offset: 1280)
!4117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 2048, elements: !1131)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4091, file: !4068, line: 60, baseType: !4119, size: 384, offset: 3328)
!4119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 384, elements: !4120)
!4120 = !{!4121}
!4121 = !DISubrange(count: 12)
!4122 = !DIDerivedType(tag: DW_TAG_member, scope: !4091, file: !4068, line: 62, baseType: !4123, size: 384, offset: 3712)
!4123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4091, file: !4068, line: 62, size: 384, elements: !4124)
!4124 = !{!4125, !4126}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4123, file: !4068, line: 63, baseType: !4119, size: 384)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4123, file: !4068, line: 64, baseType: !4119, size: 384)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4073, file: !4068, line: 307, baseType: !4128, size: 1088)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4068, line: 79, size: 1088, elements: !4129)
!4129 = !{!4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4176}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4128, file: !4068, line: 80, baseType: !1040, size: 32)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4128, file: !4068, line: 81, baseType: !1040, size: 32, offset: 32)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4128, file: !4068, line: 82, baseType: !1040, size: 32, offset: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4128, file: !4068, line: 83, baseType: !1040, size: 32, offset: 96)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4128, file: !4068, line: 84, baseType: !1040, size: 32, offset: 128)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4128, file: !4068, line: 85, baseType: !1040, size: 32, offset: 160)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4128, file: !4068, line: 86, baseType: !1040, size: 32, offset: 192)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4128, file: !4068, line: 88, baseType: !4086, size: 640, offset: 224)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4128, file: !4068, line: 89, baseType: !2256, size: 8, offset: 864)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4128, file: !4068, line: 90, baseType: !2256, size: 8, offset: 872)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4128, file: !4068, line: 91, baseType: !2256, size: 8, offset: 880)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4128, file: !4068, line: 92, baseType: !2256, size: 8, offset: 888)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4128, file: !4068, line: 93, baseType: !2256, size: 8, offset: 896)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4128, file: !4068, line: 94, baseType: !2256, size: 8, offset: 904)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4128, file: !4068, line: 95, baseType: !4145, size: 64, offset: 960)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4147, line: 11, size: 128, elements: !4148)
!4147 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4148 = !{!4149, !4150}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4146, file: !4147, line: 12, baseType: !881, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4146, file: !4147, line: 13, baseType: !4151, size: 64, offset: 64)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4153, line: 56, size: 1344, elements: !4154)
!4153 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4154 = !{!4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4152, file: !4153, line: 61, baseType: !1010, size: 64)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4152, file: !4153, line: 62, baseType: !1010, size: 64, offset: 64)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4152, file: !4153, line: 63, baseType: !1010, size: 64, offset: 128)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4152, file: !4153, line: 64, baseType: !1010, size: 64, offset: 192)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4152, file: !4153, line: 65, baseType: !1010, size: 64, offset: 256)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4152, file: !4153, line: 66, baseType: !1010, size: 64, offset: 320)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4152, file: !4153, line: 68, baseType: !1010, size: 64, offset: 384)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4152, file: !4153, line: 69, baseType: !1010, size: 64, offset: 448)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4152, file: !4153, line: 70, baseType: !1010, size: 64, offset: 512)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4152, file: !4153, line: 71, baseType: !1010, size: 64, offset: 576)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4152, file: !4153, line: 72, baseType: !1010, size: 64, offset: 640)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4152, file: !4153, line: 73, baseType: !1010, size: 64, offset: 704)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4152, file: !4153, line: 74, baseType: !1010, size: 64, offset: 768)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4152, file: !4153, line: 75, baseType: !1010, size: 64, offset: 832)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4152, file: !4153, line: 76, baseType: !1010, size: 64, offset: 896)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4152, file: !4153, line: 81, baseType: !1010, size: 64, offset: 960)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4152, file: !4153, line: 83, baseType: !1010, size: 64, offset: 1024)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4152, file: !4153, line: 84, baseType: !1010, size: 64, offset: 1088)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4152, file: !4153, line: 85, baseType: !1010, size: 64, offset: 1152)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4152, file: !4153, line: 86, baseType: !1010, size: 64, offset: 1216)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4152, file: !4153, line: 87, baseType: !1010, size: 64, offset: 1280)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4128, file: !4068, line: 96, baseType: !1040, size: 32, offset: 1024)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4073, file: !4068, line: 308, baseType: !4178, size: 4608, align: 512)
!4178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4068, line: 289, size: 4608, align: 512, elements: !4179)
!4179 = !{!4180, !4181, !4188}
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4178, file: !4068, line: 290, baseType: !4091, size: 4096, align: 128)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4178, file: !4068, line: 291, baseType: !4182, size: 512, offset: 4096)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4068, line: 268, size: 512, elements: !4183)
!4183 = !{!4184, !4185, !4186}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4182, file: !4068, line: 269, baseType: !999, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4182, file: !4068, line: 270, baseType: !999, size: 64, offset: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4182, file: !4068, line: 271, baseType: !4187, size: 384, offset: 128)
!4187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !999, size: 384, elements: !2527)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4178, file: !4068, line: 292, baseType: !4189, offset: 4608)
!4189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, elements: !2625)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4073, file: !4068, line: 309, baseType: !4191, size: 32768)
!4191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 32768, elements: !4192)
!4192 = !{!4193}
!4193 = !DISubrange(count: 4096)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2117, file: !1616, line: 378, baseType: !4195, size: 64, offset: 64)
!4195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2113, file: !1616, line: 384, baseType: !2404, size: 192, offset: 192)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1890, file: !1616, line: 500, baseType: !1085, offset: 6656)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1890, file: !1616, line: 501, baseType: !4199, size: 64, offset: 6656)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 64)
!4200 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1616, line: 387, flags: DIFlagFwdDecl)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1890, file: !1616, line: 516, baseType: !2615, size: 64, offset: 6720)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1890, file: !1616, line: 519, baseType: !1201, size: 64, offset: 6784)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1890, file: !1616, line: 521, baseType: !4204, size: 64, offset: 6848)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1616, line: 521, flags: DIFlagFwdDecl)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1890, file: !1616, line: 545, baseType: !1641, size: 32, offset: 6912)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1890, file: !1616, line: 548, baseType: !1331, size: 8, offset: 6944)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1890, file: !1616, line: 550, baseType: !4209, offset: 6952)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4210, line: 142, elements: !1099)
!4210 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1890, file: !1616, line: 554, baseType: !2896, size: 256, offset: 6976)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1890, file: !1616, line: 557, baseType: !1040, size: 32, offset: 7232)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1887, file: !1616, line: 565, baseType: !4214, offset: 7296)
!4214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, elements: !2912)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1883, file: !1616, line: 151, baseType: !1641, size: 32)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1875, file: !1616, line: 156, baseType: !1085, offset: 256)
!4217 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1616, line: 159, baseType: !4218, size: 128)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1616, line: 159, size: 128, elements: !4219)
!4219 = !{!4220, !4264}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4218, file: !1616, line: 161, baseType: !4221, size: 64)
!4221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64)
!4222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !123, line: 110, size: 1152, elements: !4223)
!4223 = !{!4224, !4234, !4235, !4236, !4237, !4238, !4239, !4251, !4252, !4253}
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4222, file: !123, line: 111, baseType: !4225, size: 384)
!4225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !123, line: 19, size: 384, elements: !4226)
!4226 = !{!4227, !4229, !4230, !4231, !4232, !4233}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4225, file: !123, line: 20, baseType: !4228, size: 64)
!4228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4225, file: !123, line: 21, baseType: !4228, size: 64, offset: 64)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4225, file: !123, line: 22, baseType: !4228, size: 64, offset: 128)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4225, file: !123, line: 23, baseType: !1010, size: 64, offset: 192)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4225, file: !123, line: 24, baseType: !1010, size: 64, offset: 256)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4225, file: !123, line: 25, baseType: !1010, size: 64, offset: 320)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4222, file: !123, line: 112, baseType: !2872, size: 64, offset: 384)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4222, file: !123, line: 113, baseType: !2858, size: 128, offset: 448)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4222, file: !123, line: 114, baseType: !2404, size: 192, offset: 576)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4222, file: !123, line: 115, baseType: !122, size: 32, offset: 768)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4222, file: !123, line: 116, baseType: !7, size: 32, offset: 800)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4222, file: !123, line: 117, baseType: !4240, size: 64, offset: 832)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4242)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !123, line: 67, size: 256, elements: !4243)
!4243 = !{!4244, !4245, !4249, !4250}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4242, file: !123, line: 73, baseType: !1734, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4242, file: !123, line: 78, baseType: !4246, size: 64, offset: 64)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 64)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{null, !4221}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4242, file: !123, line: 83, baseType: !4246, size: 64, offset: 128)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4242, file: !123, line: 89, baseType: !1939, size: 64, offset: 192)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4222, file: !123, line: 118, baseType: !968, size: 64, offset: 896)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4222, file: !123, line: 119, baseType: !181, size: 32, offset: 960)
!4253 = !DIDerivedType(tag: DW_TAG_member, scope: !4222, file: !123, line: 120, baseType: !4254, size: 128, offset: 1024)
!4254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4222, file: !123, line: 120, size: 128, elements: !4255)
!4255 = !{!4256, !4262}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4254, file: !123, line: 121, baseType: !4257, size: 128)
!4257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4258, line: 6, size: 128, elements: !4259)
!4258 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4259 = !{!4260, !4261}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4257, file: !4258, line: 7, baseType: !999, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4257, file: !4258, line: 8, baseType: !999, size: 64, offset: 64)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4254, file: !123, line: 122, baseType: !4263)
!4263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4257, elements: !2625)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4218, file: !1616, line: 162, baseType: !968, size: 64, offset: 64)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1620, file: !1616, line: 176, baseType: !1214, size: 128, align: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, scope: !1615, file: !1616, line: 179, baseType: !4267, size: 32, offset: 384)
!4267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1615, file: !1616, line: 179, size: 32, elements: !4268)
!4268 = !{!4269, !4270, !4271, !4272}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4267, file: !1616, line: 184, baseType: !1641, size: 32)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4267, file: !1616, line: 192, baseType: !7, size: 32)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4267, file: !1616, line: 194, baseType: !7, size: 32)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4267, file: !1616, line: 195, baseType: !181, size: 32)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1615, file: !1616, line: 199, baseType: !1641, size: 32, offset: 416)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1501, file: !12, line: 1964, baseType: !4275, size: 64, offset: 1344)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!881, !1440, !4278}
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4280, line: 12, size: 256, elements: !4281)
!4280 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4281 = !{!4282, !4283, !4284, !4285, !4286}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4279, file: !4280, line: 13, baseType: !1637, size: 32)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4279, file: !4280, line: 16, baseType: !181, size: 32, offset: 32)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4279, file: !4280, line: 23, baseType: !1010, size: 64, offset: 64)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4279, file: !4280, line: 30, baseType: !1010, size: 64, offset: 128)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4279, file: !4280, line: 33, baseType: !4287, size: 64, offset: 192)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1616, line: 27, flags: DIFlagFwdDecl)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1501, file: !12, line: 1966, baseType: !4275, size: 64, offset: 1408)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1441, file: !12, line: 1424, baseType: !4291, size: 64, offset: 448)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4293)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !29, line: 322, size: 704, elements: !4294)
!4294 = !{!4295, !4341, !4345, !4349, !4350, !4351, !4352, !4353, !4358, !4363, !4367}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4293, file: !29, line: 323, baseType: !4296, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!181, !4299}
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !29, line: 294, size: 1600, elements: !4301)
!4301 = !{!4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4326, !4327, !4328}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4300, file: !29, line: 295, baseType: !1483, size: 128)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4300, file: !29, line: 296, baseType: !974, size: 128, offset: 128)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4300, file: !29, line: 297, baseType: !974, size: 128, offset: 256)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4300, file: !29, line: 298, baseType: !974, size: 128, offset: 384)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4300, file: !29, line: 299, baseType: !1567, size: 192, offset: 512)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4300, file: !29, line: 300, baseType: !1085, offset: 704)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4300, file: !29, line: 301, baseType: !1641, size: 32, offset: 704)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4300, file: !29, line: 302, baseType: !1440, size: 64, offset: 768)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4300, file: !29, line: 303, baseType: !4311, size: 64, offset: 832)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !29, line: 68, size: 64, elements: !4312)
!4312 = !{!4313, !4325}
!4313 = !DIDerivedType(tag: DW_TAG_member, scope: !4311, file: !29, line: 69, baseType: !4314, size: 32)
!4314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4311, file: !29, line: 69, size: 32, elements: !4315)
!4315 = !{!4316, !4317, !4318}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4314, file: !29, line: 70, baseType: !1276, size: 32)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4314, file: !29, line: 71, baseType: !1284, size: 32)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4314, file: !29, line: 72, baseType: !4319, size: 32)
!4319 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4320, line: 24, baseType: !4321)
!4320 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4320, line: 22, size: 32, elements: !4322)
!4322 = !{!4323}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4321, file: !4320, line: 23, baseType: !4324, size: 32)
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4320, line: 20, baseType: !1282)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4311, file: !29, line: 74, baseType: !28, size: 32, offset: 32)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4300, file: !29, line: 304, baseType: !1372, size: 64, offset: 896)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4300, file: !29, line: 305, baseType: !1010, size: 64, offset: 960)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4300, file: !29, line: 306, baseType: !4329, size: 576, offset: 1024)
!4329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !29, line: 205, size: 576, elements: !4330)
!4330 = !{!4331, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4329, file: !29, line: 206, baseType: !4332, size: 64)
!4332 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !29, line: 66, baseType: !1374)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4329, file: !29, line: 207, baseType: !4332, size: 64, offset: 64)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4329, file: !29, line: 208, baseType: !4332, size: 64, offset: 128)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4329, file: !29, line: 209, baseType: !4332, size: 64, offset: 192)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4329, file: !29, line: 210, baseType: !4332, size: 64, offset: 256)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4329, file: !29, line: 211, baseType: !4332, size: 64, offset: 320)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4329, file: !29, line: 212, baseType: !4332, size: 64, offset: 384)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4329, file: !29, line: 213, baseType: !1380, size: 64, offset: 448)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4329, file: !29, line: 214, baseType: !1380, size: 64, offset: 512)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4293, file: !29, line: 324, baseType: !4342, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DISubroutineType(types: !4344)
!4344 = !{!4299, !1440, !181}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4293, file: !29, line: 325, baseType: !4346, size: 64, offset: 128)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !4299}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4293, file: !29, line: 326, baseType: !4296, size: 64, offset: 192)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4293, file: !29, line: 327, baseType: !4296, size: 64, offset: 256)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4293, file: !29, line: 328, baseType: !4296, size: 64, offset: 320)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4293, file: !29, line: 329, baseType: !1529, size: 64, offset: 384)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4293, file: !29, line: 332, baseType: !4354, size: 64, offset: 448)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!4357, !1270}
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4293, file: !29, line: 333, baseType: !4359, size: 64, offset: 512)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!181, !1270, !4362}
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4293, file: !29, line: 335, baseType: !4364, size: 64, offset: 576)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!181, !1270, !4357}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4293, file: !29, line: 337, baseType: !4368, size: 64, offset: 640)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!181, !1440, !4371}
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1441, file: !12, line: 1425, baseType: !4373, size: 64, offset: 512)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4375)
!4375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !29, line: 428, size: 704, elements: !4376)
!4376 = !{!4377, !4381, !4382, !4386, !4387, !4388, !4403, !4426, !4430, !4431, !4454}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4375, file: !29, line: 429, baseType: !4378, size: 64)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!181, !1440, !181, !181, !1390}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4375, file: !29, line: 430, baseType: !1529, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4375, file: !29, line: 431, baseType: !4383, size: 64, offset: 128)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{!181, !1440, !7}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4375, file: !29, line: 432, baseType: !4383, size: 64, offset: 192)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4375, file: !29, line: 433, baseType: !1529, size: 64, offset: 256)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4375, file: !29, line: 434, baseType: !4389, size: 64, offset: 320)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!181, !1440, !181, !4392}
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !29, line: 415, size: 256, elements: !4394)
!4394 = !{!4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4393, file: !29, line: 416, baseType: !181, size: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4393, file: !29, line: 417, baseType: !7, size: 32, offset: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4393, file: !29, line: 418, baseType: !7, size: 32, offset: 64)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4393, file: !29, line: 420, baseType: !7, size: 32, offset: 96)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4393, file: !29, line: 421, baseType: !7, size: 32, offset: 128)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4393, file: !29, line: 422, baseType: !7, size: 32, offset: 160)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4393, file: !29, line: 423, baseType: !7, size: 32, offset: 192)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4393, file: !29, line: 424, baseType: !7, size: 32, offset: 224)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4375, file: !29, line: 435, baseType: !4404, size: 64, offset: 384)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!181, !1440, !4311, !4407}
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !29, line: 343, size: 960, elements: !4409)
!4409 = !{!4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4408, file: !29, line: 344, baseType: !181, size: 32)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4408, file: !29, line: 345, baseType: !999, size: 64, offset: 64)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4408, file: !29, line: 346, baseType: !999, size: 64, offset: 128)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4408, file: !29, line: 347, baseType: !999, size: 64, offset: 192)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4408, file: !29, line: 348, baseType: !999, size: 64, offset: 256)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4408, file: !29, line: 349, baseType: !999, size: 64, offset: 320)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4408, file: !29, line: 350, baseType: !999, size: 64, offset: 384)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4408, file: !29, line: 351, baseType: !1577, size: 64, offset: 448)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4408, file: !29, line: 353, baseType: !1577, size: 64, offset: 512)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4408, file: !29, line: 354, baseType: !181, size: 32, offset: 576)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4408, file: !29, line: 355, baseType: !181, size: 32, offset: 608)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4408, file: !29, line: 356, baseType: !999, size: 64, offset: 640)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4408, file: !29, line: 357, baseType: !999, size: 64, offset: 704)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4408, file: !29, line: 358, baseType: !999, size: 64, offset: 768)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4408, file: !29, line: 359, baseType: !1577, size: 64, offset: 832)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4408, file: !29, line: 360, baseType: !181, size: 32, offset: 896)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4375, file: !29, line: 436, baseType: !4427, size: 64, offset: 448)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!181, !1440, !4371, !4407}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4375, file: !29, line: 438, baseType: !4404, size: 64, offset: 512)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4375, file: !29, line: 439, baseType: !4432, size: 64, offset: 576)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!181, !1440, !4435}
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !29, line: 409, size: 1408, elements: !4437)
!4437 = !{!4438, !4439}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4436, file: !29, line: 410, baseType: !7, size: 32)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4436, file: !29, line: 411, baseType: !4440, size: 1344, offset: 64)
!4440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4441, size: 1344, elements: !1127)
!4441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !29, line: 395, size: 448, elements: !4442)
!4442 = !{!4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4453}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4441, file: !29, line: 396, baseType: !7, size: 32)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4441, file: !29, line: 397, baseType: !7, size: 32, offset: 32)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4441, file: !29, line: 399, baseType: !7, size: 32, offset: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4441, file: !29, line: 400, baseType: !7, size: 32, offset: 96)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4441, file: !29, line: 401, baseType: !7, size: 32, offset: 128)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4441, file: !29, line: 402, baseType: !7, size: 32, offset: 160)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4441, file: !29, line: 403, baseType: !7, size: 32, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4441, file: !29, line: 404, baseType: !1003, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4441, file: !29, line: 405, baseType: !4452, size: 64, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !975, line: 126, baseType: !999)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4441, file: !29, line: 406, baseType: !4452, size: 64, offset: 384)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4375, file: !29, line: 440, baseType: !4383, size: 64, offset: 640)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1441, file: !12, line: 1426, baseType: !4456, size: 64, offset: 576)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4458)
!4458 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !12, line: 49, flags: DIFlagFwdDecl)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1441, file: !12, line: 1427, baseType: !1010, size: 64, offset: 640)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1441, file: !12, line: 1428, baseType: !1010, size: 64, offset: 704)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1441, file: !12, line: 1429, baseType: !1010, size: 64, offset: 768)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1441, file: !12, line: 1430, baseType: !1231, size: 64, offset: 832)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1441, file: !12, line: 1431, baseType: !1661, size: 256, offset: 896)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1441, file: !12, line: 1432, baseType: !181, size: 32, offset: 1152)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1441, file: !12, line: 1433, baseType: !1641, size: 32, offset: 1184)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1441, file: !12, line: 1437, baseType: !4467, size: 64, offset: 1216)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4470)
!4470 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !12, line: 1437, flags: DIFlagFwdDecl)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1441, file: !12, line: 1449, baseType: !4472, size: 64, offset: 1280)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1247, line: 34, size: 64, elements: !4473)
!4473 = !{!4474}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4472, file: !1247, line: 35, baseType: !1250, size: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1441, file: !12, line: 1450, baseType: !974, size: 128, offset: 1344)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1441, file: !12, line: 1451, baseType: !2929, size: 64, offset: 1472)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1441, file: !12, line: 1452, baseType: !2949, size: 64, offset: 1536)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1441, file: !12, line: 1453, baseType: !4479, size: 64, offset: 1600)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !12, line: 1453, flags: DIFlagFwdDecl)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1441, file: !12, line: 1454, baseType: !1483, size: 128, offset: 1664)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1441, file: !12, line: 1455, baseType: !7, size: 32, offset: 1792)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1441, file: !12, line: 1456, baseType: !4484, size: 2432, offset: 1856)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !29, line: 518, size: 2432, elements: !4485)
!4485 = !{!4486, !4487, !4488, !4490, !4522}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4484, file: !29, line: 519, baseType: !7, size: 32)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4484, file: !29, line: 520, baseType: !1661, size: 256, offset: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4484, file: !29, line: 521, baseType: !4489, size: 192, offset: 320)
!4489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1270, size: 192, elements: !1127)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4484, file: !29, line: 522, baseType: !4491, size: 1728, offset: 512)
!4491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4492, size: 1728, elements: !1127)
!4492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !29, line: 222, size: 576, elements: !4493)
!4493 = !{!4494, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4492, file: !29, line: 223, baseType: !4495, size: 64)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !29, line: 443, size: 256, elements: !4497)
!4497 = !{!4498, !4499, !4512, !4513}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4496, file: !29, line: 444, baseType: !181, size: 32)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4496, file: !29, line: 445, baseType: !4500, size: 64, offset: 64)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4502)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !29, line: 310, size: 512, elements: !4503)
!4503 = !{!4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4502, file: !29, line: 311, baseType: !1529, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4502, file: !29, line: 312, baseType: !1529, size: 64, offset: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4502, file: !29, line: 313, baseType: !1529, size: 64, offset: 128)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4502, file: !29, line: 314, baseType: !1529, size: 64, offset: 192)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4502, file: !29, line: 315, baseType: !4296, size: 64, offset: 256)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4502, file: !29, line: 316, baseType: !4296, size: 64, offset: 320)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4502, file: !29, line: 317, baseType: !4296, size: 64, offset: 384)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4502, file: !29, line: 318, baseType: !4368, size: 64, offset: 448)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4496, file: !29, line: 446, baseType: !1474, size: 64, offset: 128)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4496, file: !29, line: 447, baseType: !4495, size: 64, offset: 192)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4492, file: !29, line: 224, baseType: !181, size: 32, offset: 64)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4492, file: !29, line: 226, baseType: !974, size: 128, offset: 128)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4492, file: !29, line: 227, baseType: !1010, size: 64, offset: 256)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4492, file: !29, line: 228, baseType: !7, size: 32, offset: 320)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4492, file: !29, line: 229, baseType: !7, size: 32, offset: 352)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4492, file: !29, line: 230, baseType: !4332, size: 64, offset: 384)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4492, file: !29, line: 231, baseType: !4332, size: 64, offset: 448)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4492, file: !29, line: 232, baseType: !968, size: 64, offset: 512)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4484, file: !29, line: 523, baseType: !4523, size: 192, offset: 2240)
!4523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4500, size: 192, elements: !1127)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1441, file: !12, line: 1458, baseType: !4525, size: 2112, offset: 4288)
!4525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !12, line: 1410, size: 2112, elements: !4526)
!4526 = !{!4527, !4528, !4529}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4525, file: !12, line: 1411, baseType: !181, size: 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4525, file: !12, line: 1412, baseType: !2384, size: 128, offset: 64)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4525, file: !12, line: 1413, baseType: !4530, size: 1920, offset: 192)
!4530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4531, size: 1920, elements: !1127)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4532, line: 12, size: 640, elements: !4533)
!4532 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4533 = !{!4534, !4542, !4543, !4548, !4549}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4531, file: !4532, line: 13, baseType: !4535, size: 320)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4536, line: 17, size: 320, elements: !4537)
!4536 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4537 = !{!4538, !4539, !4540, !4541}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4535, file: !4536, line: 18, baseType: !181, size: 32)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4535, file: !4536, line: 19, baseType: !181, size: 32, offset: 32)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4535, file: !4536, line: 20, baseType: !2384, size: 128, offset: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4535, file: !4536, line: 22, baseType: !1214, size: 128, align: 64, offset: 192)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4531, file: !4532, line: 14, baseType: !3504, size: 64, offset: 320)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4531, file: !4532, line: 15, baseType: !4544, size: 64, offset: 384)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4545, line: 16, size: 64, elements: !4546)
!4545 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4546 = !{!4547}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4544, file: !4545, line: 17, baseType: !2120, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4531, file: !4532, line: 16, baseType: !2384, size: 128, offset: 448)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4531, file: !4532, line: 17, baseType: !1641, size: 32, offset: 576)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1441, file: !12, line: 1465, baseType: !968, size: 64, offset: 6400)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1441, file: !12, line: 1468, baseType: !1040, size: 32, offset: 6464)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1441, file: !12, line: 1470, baseType: !1380, size: 64, offset: 6528)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1441, file: !12, line: 1471, baseType: !1380, size: 64, offset: 6592)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1441, file: !12, line: 1473, baseType: !1041, size: 32, offset: 6656)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1441, file: !12, line: 1474, baseType: !4556, size: 64, offset: 6720)
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64)
!4557 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !12, line: 603, flags: DIFlagFwdDecl)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1441, file: !12, line: 1477, baseType: !2836, size: 256, offset: 6784)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1441, file: !12, line: 1478, baseType: !4560, size: 128, offset: 7040)
!4560 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4561, line: 18, baseType: !4562)
!4561 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4561, line: 16, size: 128, elements: !4563)
!4563 = !{!4564}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4562, file: !4561, line: 17, baseType: !4565, size: 128)
!4565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 128, elements: !2637)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1441, file: !12, line: 1480, baseType: !7, size: 32, offset: 7168)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1441, file: !12, line: 1481, baseType: !3032, size: 32, offset: 7200)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1441, file: !12, line: 1487, baseType: !1567, size: 192, offset: 7232)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1441, file: !12, line: 1493, baseType: !1006, size: 64, offset: 7424)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1441, file: !12, line: 1495, baseType: !4571, size: 64, offset: 7488)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4573)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1229, line: 135, size: 1024, align: 512, elements: !4574)
!4574 = !{!4575, !4579, !4580, !4587, !4593, !4597, !4601, !4605, !4606, !4610, !4614, !4619, !4623}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4573, file: !1229, line: 136, baseType: !4576, size: 64)
!4576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 64)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!181, !1231, !7}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4573, file: !1229, line: 137, baseType: !4576, size: 64, offset: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4573, file: !1229, line: 138, baseType: !4581, size: 64, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 64)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!181, !4584, !4586}
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1232)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4573, file: !1229, line: 139, baseType: !4588, size: 64, offset: 192)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!181, !4584, !7, !1006, !4591}
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1255)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4573, file: !1229, line: 141, baseType: !4594, size: 64, offset: 256)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 64)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!181, !4584}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4573, file: !1229, line: 142, baseType: !4598, size: 64, offset: 320)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!181, !1231}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4573, file: !1229, line: 143, baseType: !4602, size: 64, offset: 384)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{null, !1231}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4573, file: !1229, line: 144, baseType: !4602, size: 64, offset: 448)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4573, file: !1229, line: 145, baseType: !4607, size: 64, offset: 512)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{null, !1231, !1270}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4573, file: !1229, line: 146, baseType: !4611, size: 64, offset: 576)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!1126, !1231, !1126, !181}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4573, file: !1229, line: 147, baseType: !4615, size: 64, offset: 640)
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = !DISubroutineType(types: !4617)
!4617 = !{!1227, !4618}
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4573, file: !1229, line: 148, baseType: !4620, size: 64, offset: 704)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!181, !1390, !1331}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4573, file: !1229, line: 149, baseType: !4624, size: 64, offset: 768)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{!1231, !1231, !4627}
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1441, file: !12, line: 1500, baseType: !181, size: 32, offset: 7552)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1441, file: !12, line: 1502, baseType: !4631, size: 448, offset: 7616)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4280, line: 60, size: 448, elements: !4632)
!4632 = !{!4633, !4638, !4639, !4640, !4641, !4642, !4643}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4631, file: !4280, line: 61, baseType: !4634, size: 64)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4635, size: 64)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{!1010, !4637, !4278}
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4631, file: !4280, line: 63, baseType: !4634, size: 64, offset: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4631, file: !4280, line: 66, baseType: !881, size: 64, offset: 128)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4631, file: !4280, line: 67, baseType: !181, size: 32, offset: 192)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4631, file: !4280, line: 68, baseType: !7, size: 32, offset: 224)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4631, file: !4280, line: 71, baseType: !974, size: 128, offset: 256)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4631, file: !4280, line: 77, baseType: !4644, size: 64, offset: 384)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1441, file: !12, line: 1505, baseType: !1571, size: 64, offset: 8064)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1441, file: !12, line: 1508, baseType: !1571, size: 64, offset: 8128)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1441, file: !12, line: 1511, baseType: !181, size: 32, offset: 8192)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1441, file: !12, line: 1514, baseType: !1820, size: 32, offset: 8224)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1441, file: !12, line: 1517, baseType: !2908, size: 64, offset: 8256)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1441, file: !12, line: 1518, baseType: !1479, size: 64, offset: 8320)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1441, file: !12, line: 1525, baseType: !2615, size: 64, offset: 8384)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1441, file: !12, line: 1532, baseType: !4653, size: 64, offset: 8448)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4654, line: 52, size: 64, elements: !4655)
!4654 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4655 = !{!4656}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4653, file: !4654, line: 53, baseType: !4657, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4654, line: 40, size: 256, elements: !4659)
!4659 = !{!4660, !4661, !4666}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4658, file: !4654, line: 42, baseType: !1085)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4658, file: !4654, line: 44, baseType: !4662, size: 192)
!4662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4654, line: 28, size: 192, elements: !4663)
!4663 = !{!4664, !4665}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4662, file: !4654, line: 29, baseType: !974, size: 128)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4662, file: !4654, line: 31, baseType: !881, size: 64, offset: 128)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4658, file: !4654, line: 49, baseType: !881, size: 64, offset: 192)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1441, file: !12, line: 1533, baseType: !4653, size: 64, offset: 8512)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1441, file: !12, line: 1534, baseType: !1214, size: 128, align: 64, offset: 8576)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1441, file: !12, line: 1535, baseType: !2896, size: 256, offset: 8704)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1441, file: !12, line: 1537, baseType: !1567, size: 192, offset: 8960)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1441, file: !12, line: 1542, baseType: !181, size: 32, offset: 9152)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1441, file: !12, line: 1545, baseType: !1085, offset: 9184)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1441, file: !12, line: 1546, baseType: !974, size: 128, offset: 9216)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1441, file: !12, line: 1548, baseType: !1085, offset: 9344)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1441, file: !12, line: 1549, baseType: !974, size: 128, offset: 9344)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1271, file: !12, line: 624, baseType: !1627, size: 64, offset: 256)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1271, file: !12, line: 631, baseType: !1010, size: 64, offset: 320)
!4678 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !12, line: 639, baseType: !4679, size: 32, offset: 384)
!4679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !12, line: 639, size: 32, elements: !4680)
!4680 = !{!4681, !4682}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4679, file: !12, line: 640, baseType: !3434, size: 32)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4679, file: !12, line: 641, baseType: !7, size: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1271, file: !12, line: 643, baseType: !1354, size: 32, offset: 416)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1271, file: !12, line: 644, baseType: !1372, size: 64, offset: 448)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1271, file: !12, line: 645, baseType: !1376, size: 128, offset: 512)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1271, file: !12, line: 646, baseType: !1376, size: 128, offset: 640)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1271, file: !12, line: 647, baseType: !1376, size: 128, offset: 768)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1271, file: !12, line: 648, baseType: !1085, offset: 896)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1271, file: !12, line: 649, baseType: !1064, size: 16, offset: 896)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1271, file: !12, line: 650, baseType: !2256, size: 8, offset: 912)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1271, file: !12, line: 651, baseType: !2256, size: 8, offset: 920)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1271, file: !12, line: 652, baseType: !4452, size: 64, offset: 960)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1271, file: !12, line: 659, baseType: !1010, size: 64, offset: 1024)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1271, file: !12, line: 660, baseType: !1661, size: 256, offset: 1088)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1271, file: !12, line: 662, baseType: !1010, size: 64, offset: 1344)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1271, file: !12, line: 663, baseType: !1010, size: 64, offset: 1408)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1271, file: !12, line: 665, baseType: !1483, size: 128, offset: 1472)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1271, file: !12, line: 666, baseType: !974, size: 128, offset: 1600)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1271, file: !12, line: 675, baseType: !974, size: 128, offset: 1728)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1271, file: !12, line: 676, baseType: !974, size: 128, offset: 1856)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1271, file: !12, line: 677, baseType: !974, size: 128, offset: 1984)
!4702 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !12, line: 678, baseType: !4703, size: 128, offset: 2112)
!4703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !12, line: 678, size: 128, elements: !4704)
!4704 = !{!4705, !4706}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4703, file: !12, line: 679, baseType: !1479, size: 64)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4703, file: !12, line: 680, baseType: !1214, size: 128, align: 64)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1271, file: !12, line: 682, baseType: !1573, size: 64, offset: 2240)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1271, file: !12, line: 683, baseType: !1573, size: 64, offset: 2304)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1271, file: !12, line: 684, baseType: !1641, size: 32, offset: 2368)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1271, file: !12, line: 685, baseType: !1641, size: 32, offset: 2400)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1271, file: !12, line: 686, baseType: !1641, size: 32, offset: 2432)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1271, file: !12, line: 688, baseType: !1641, size: 32, offset: 2464)
!4713 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !12, line: 690, baseType: !4714, size: 64, offset: 2496)
!4714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !12, line: 690, size: 64, elements: !4715)
!4715 = !{!4716, !4938}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4714, file: !12, line: 691, baseType: !4717, size: 64)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4719)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !12, line: 1822, size: 2048, elements: !4720)
!4720 = !{!4721, !4722, !4726, !4730, !4734, !4735, !4736, !4740, !4753, !4754, !4762, !4766, !4767, !4771, !4772, !4776, !4781, !4782, !4786, !4790, !4898, !4902, !4903, !4907, !4908, !4912, !4916, !4921, !4925, !4929, !4933, !4937}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4719, file: !12, line: 1823, baseType: !1474, size: 64)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4719, file: !12, line: 1824, baseType: !4723, size: 64, offset: 64)
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{!1372, !1201, !1372, !181}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4719, file: !12, line: 1825, baseType: !4727, size: 64, offset: 128)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!1157, !1201, !1126, !1171, !1589}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4719, file: !12, line: 1826, baseType: !4731, size: 64, offset: 192)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!1157, !1201, !1006, !1171, !1589}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4719, file: !12, line: 1827, baseType: !1738, size: 64, offset: 256)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4719, file: !12, line: 1828, baseType: !1738, size: 64, offset: 320)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4719, file: !12, line: 1829, baseType: !4737, size: 64, offset: 384)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!181, !1741, !1331}
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4719, file: !12, line: 1830, baseType: !4741, size: 64, offset: 448)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!181, !1201, !4744}
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4745, size: 64)
!4745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !12, line: 1776, size: 128, elements: !4746)
!4746 = !{!4747, !4752}
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4745, file: !12, line: 1777, baseType: !4748, size: 64)
!4748 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !12, line: 1773, baseType: !4749)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{!181, !4744, !1006, !181, !1372, !999, !7}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4745, file: !12, line: 1778, baseType: !1372, size: 64, offset: 64)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4719, file: !12, line: 1831, baseType: !4741, size: 64, offset: 512)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4719, file: !12, line: 1832, baseType: !4755, size: 64, offset: 576)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{!4758, !1201, !4760}
!4758 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4759, line: 52, baseType: !7)
!4759 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1460, line: 27, flags: DIFlagFwdDecl)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4719, file: !12, line: 1833, baseType: !4763, size: 64, offset: 640)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4764, size: 64)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!881, !1201, !7, !1010}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4719, file: !12, line: 1834, baseType: !4763, size: 64, offset: 704)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4719, file: !12, line: 1835, baseType: !4768, size: 64, offset: 768)
!4768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4769, size: 64)
!4769 = !DISubroutineType(types: !4770)
!4770 = !{!181, !1201, !1893}
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4719, file: !12, line: 1836, baseType: !1010, size: 64, offset: 832)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4719, file: !12, line: 1837, baseType: !4773, size: 64, offset: 896)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{!181, !1270, !1201}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4719, file: !12, line: 1838, baseType: !4777, size: 64, offset: 960)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!181, !1201, !4780}
!4780 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !12, line: 1007, baseType: !968)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4719, file: !12, line: 1839, baseType: !4773, size: 64, offset: 1024)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4719, file: !12, line: 1840, baseType: !4783, size: 64, offset: 1088)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64)
!4784 = !DISubroutineType(types: !4785)
!4785 = !{!181, !1201, !1372, !1372, !181}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4719, file: !12, line: 1841, baseType: !4787, size: 64, offset: 1152)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{!181, !181, !1201, !181}
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4719, file: !12, line: 1842, baseType: !4791, size: 64, offset: 1216)
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!181, !1201, !181, !4794}
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !12, line: 1062, size: 1664, elements: !4796)
!4796 = !{!4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4828, !4829, !4830, !4843, !4874}
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4795, file: !12, line: 1063, baseType: !4794, size: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4795, file: !12, line: 1064, baseType: !974, size: 128, offset: 64)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4795, file: !12, line: 1065, baseType: !1483, size: 128, offset: 192)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4795, file: !12, line: 1066, baseType: !974, size: 128, offset: 320)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4795, file: !12, line: 1069, baseType: !974, size: 128, offset: 448)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4795, file: !12, line: 1072, baseType: !4780, size: 64, offset: 576)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4795, file: !12, line: 1073, baseType: !7, size: 32, offset: 640)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4795, file: !12, line: 1074, baseType: !1055, size: 8, offset: 672)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4795, file: !12, line: 1075, baseType: !7, size: 32, offset: 704)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4795, file: !12, line: 1076, baseType: !181, size: 32, offset: 736)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4795, file: !12, line: 1077, baseType: !2384, size: 128, offset: 768)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4795, file: !12, line: 1078, baseType: !1201, size: 64, offset: 896)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4795, file: !12, line: 1079, baseType: !1372, size: 64, offset: 960)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4795, file: !12, line: 1080, baseType: !1372, size: 64, offset: 1024)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4795, file: !12, line: 1082, baseType: !4812, size: 64, offset: 1088)
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 64)
!4813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !12, line: 1314, size: 320, elements: !4814)
!4814 = !{!4815, !4823, !4824, !4825, !4826, !4827}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4813, file: !12, line: 1315, baseType: !4816)
!4816 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4817, line: 20, baseType: !4818)
!4817 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4817, line: 11, elements: !4819)
!4819 = !{!4820}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4818, file: !4817, line: 12, baseType: !4821)
!4821 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1097, line: 33, baseType: !4822)
!4822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1097, line: 31, elements: !1099)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4813, file: !12, line: 1316, baseType: !181, size: 32)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4813, file: !12, line: 1317, baseType: !181, size: 32, offset: 32)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4813, file: !12, line: 1318, baseType: !4812, size: 64, offset: 64)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4813, file: !12, line: 1319, baseType: !1201, size: 64, offset: 128)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4813, file: !12, line: 1320, baseType: !1214, size: 128, align: 64, offset: 192)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4795, file: !12, line: 1084, baseType: !1010, size: 64, offset: 1152)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4795, file: !12, line: 1085, baseType: !1010, size: 64, offset: 1216)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4795, file: !12, line: 1087, baseType: !4831, size: 64, offset: 1280)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4833)
!4833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !12, line: 1011, size: 128, elements: !4834)
!4834 = !{!4835, !4839}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4833, file: !12, line: 1012, baseType: !4836, size: 64)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DISubroutineType(types: !4838)
!4838 = !{null, !4794, !4794}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4833, file: !12, line: 1013, baseType: !4840, size: 64, offset: 64)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{null, !4794}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4795, file: !12, line: 1088, baseType: !4844, size: 64, offset: 1344)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4846)
!4846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !12, line: 1016, size: 512, elements: !4847)
!4847 = !{!4848, !4852, !4856, !4857, !4861, !4865, !4869, !4873}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4846, file: !12, line: 1017, baseType: !4849, size: 64)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!4780, !4780}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4846, file: !12, line: 1018, baseType: !4853, size: 64, offset: 64)
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 64)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{null, !4780}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4846, file: !12, line: 1019, baseType: !4840, size: 64, offset: 128)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4846, file: !12, line: 1020, baseType: !4858, size: 64, offset: 192)
!4858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4859, size: 64)
!4859 = !DISubroutineType(types: !4860)
!4860 = !{!181, !4794, !181}
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4846, file: !12, line: 1021, baseType: !4862, size: 64, offset: 256)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!1331, !4794}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4846, file: !12, line: 1022, baseType: !4866, size: 64, offset: 320)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!181, !4794, !181, !978}
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4846, file: !12, line: 1023, baseType: !4870, size: 64, offset: 384)
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{null, !4794, !1715}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4846, file: !12, line: 1024, baseType: !4862, size: 64, offset: 448)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4795, file: !12, line: 1097, baseType: !4875, size: 256, offset: 1408)
!4875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4795, file: !12, line: 1089, size: 256, elements: !4876)
!4876 = !{!4877, !4886, !4892}
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4875, file: !12, line: 1090, baseType: !4878, size: 256)
!4878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4879, line: 10, size: 256, elements: !4880)
!4879 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4880 = !{!4881, !4882, !4885}
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4878, file: !4879, line: 11, baseType: !1040, size: 32)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4878, file: !4879, line: 12, baseType: !4883, size: 64, offset: 64)
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 64)
!4884 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4879, line: 5, flags: DIFlagFwdDecl)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4878, file: !4879, line: 13, baseType: !974, size: 128, offset: 128)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4875, file: !12, line: 1091, baseType: !4887, size: 64)
!4887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4879, line: 17, size: 64, elements: !4888)
!4888 = !{!4889}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4887, file: !4879, line: 18, baseType: !4890, size: 64)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4879, line: 16, flags: DIFlagFwdDecl)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4875, file: !12, line: 1096, baseType: !4893, size: 192)
!4893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4875, file: !12, line: 1092, size: 192, elements: !4894)
!4894 = !{!4895, !4896, !4897}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4893, file: !12, line: 1093, baseType: !974, size: 128)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4893, file: !12, line: 1094, baseType: !181, size: 32, offset: 128)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4893, file: !12, line: 1095, baseType: !7, size: 32, offset: 160)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4719, file: !12, line: 1843, baseType: !4899, size: 64, offset: 1280)
!4899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4900, size: 64)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!1157, !1201, !1614, !181, !1171, !1589, !181}
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4719, file: !12, line: 1844, baseType: !2013, size: 64, offset: 1344)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4719, file: !12, line: 1845, baseType: !4904, size: 64, offset: 1408)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{!181, !181}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4719, file: !12, line: 1846, baseType: !4791, size: 64, offset: 1472)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4719, file: !12, line: 1847, baseType: !4909, size: 64, offset: 1536)
!4909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4910, size: 64)
!4910 = !DISubroutineType(types: !4911)
!4911 = !{!1157, !3985, !1201, !1589, !1171, !7}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4719, file: !12, line: 1848, baseType: !4913, size: 64, offset: 1600)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!1157, !1201, !1589, !3985, !1171, !7}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4719, file: !12, line: 1849, baseType: !4917, size: 64, offset: 1664)
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!181, !1201, !881, !4920, !1715}
!4920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4719, file: !12, line: 1850, baseType: !4922, size: 64, offset: 1728)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!881, !1201, !181, !1372, !1372}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4719, file: !12, line: 1852, baseType: !4926, size: 64, offset: 1792)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !1555, !1201}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4719, file: !12, line: 1856, baseType: !4930, size: 64, offset: 1856)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!1157, !1201, !1372, !1201, !1372, !1171, !7}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4719, file: !12, line: 1858, baseType: !4934, size: 64, offset: 1920)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 64)
!4935 = !DISubroutineType(types: !4936)
!4936 = !{!1372, !1201, !1372, !1201, !1372, !1372, !7}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4719, file: !12, line: 1861, baseType: !4783, size: 64, offset: 1984)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4714, file: !12, line: 692, baseType: !1508, size: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1271, file: !12, line: 694, baseType: !4940, size: 64, offset: 2560)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !12, line: 1100, size: 384, elements: !4942)
!4942 = !{!4943, !4944, !4945, !4946}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4941, file: !12, line: 1101, baseType: !1085)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4941, file: !12, line: 1102, baseType: !974, size: 128)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4941, file: !12, line: 1103, baseType: !974, size: 128, offset: 128)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4941, file: !12, line: 1104, baseType: !974, size: 128, offset: 256)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1271, file: !12, line: 695, baseType: !1628, size: 1216, align: 64, offset: 2624)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1271, file: !12, line: 696, baseType: !974, size: 128, offset: 3840)
!4949 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !12, line: 697, baseType: !4950, size: 64, offset: 3968)
!4950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !12, line: 697, size: 64, elements: !4951)
!4951 = !{!4952, !4953, !4954, !4957, !4958}
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4950, file: !12, line: 698, baseType: !3985, size: 64)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4950, file: !12, line: 699, baseType: !2929, size: 64)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4950, file: !12, line: 700, baseType: !4955, size: 64)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !12, line: 700, flags: DIFlagFwdDecl)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4950, file: !12, line: 701, baseType: !1126, size: 64)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4950, file: !12, line: 702, baseType: !7, size: 32)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1271, file: !12, line: 705, baseType: !1041, size: 32, offset: 4032)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1271, file: !12, line: 708, baseType: !1041, size: 32, offset: 4064)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1271, file: !12, line: 709, baseType: !4556, size: 64, offset: 4096)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1271, file: !12, line: 720, baseType: !968, size: 64, offset: 4160)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1232, file: !1229, line: 98, baseType: !4964, size: 256, offset: 448)
!4964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 256, elements: !2837)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1232, file: !1229, line: 101, baseType: !4966, size: 32, offset: 704)
!4966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4967, line: 25, size: 32, elements: !4968)
!4967 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4968 = !{!4969}
!4969 = !DIDerivedType(tag: DW_TAG_member, scope: !4966, file: !4967, line: 26, baseType: !4970, size: 32)
!4970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4966, file: !4967, line: 26, size: 32, elements: !4971)
!4971 = !{!4972}
!4972 = !DIDerivedType(tag: DW_TAG_member, scope: !4970, file: !4967, line: 30, baseType: !4973, size: 32)
!4973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4970, file: !4967, line: 30, size: 32, elements: !4974)
!4974 = !{!4975, !4976}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4973, file: !4967, line: 31, baseType: !1085)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4973, file: !4967, line: 32, baseType: !181, size: 32)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1232, file: !1229, line: 102, baseType: !4571, size: 64, offset: 768)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1232, file: !1229, line: 103, baseType: !1440, size: 64, offset: 832)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1232, file: !1229, line: 104, baseType: !1010, size: 64, offset: 896)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1232, file: !1229, line: 105, baseType: !968, size: 64, offset: 960)
!4981 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1229, line: 107, baseType: !4982, size: 128, offset: 1024)
!4982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1229, line: 107, size: 128, elements: !4983)
!4983 = !{!4984, !4985}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4982, file: !1229, line: 108, baseType: !974, size: 128)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4982, file: !1229, line: 109, baseType: !4986, size: 64)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1232, file: !1229, line: 111, baseType: !974, size: 128, offset: 1152)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1232, file: !1229, line: 112, baseType: !974, size: 128, offset: 1280)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1232, file: !1229, line: 120, baseType: !4990, size: 128, offset: 1408)
!4990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1229, line: 116, size: 128, elements: !4991)
!4991 = !{!4992, !4993, !4994}
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4990, file: !1229, line: 117, baseType: !1483, size: 128)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4990, file: !1229, line: 118, baseType: !1246, size: 128)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4990, file: !1229, line: 119, baseType: !1214, size: 128, align: 64)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1202, file: !12, line: 922, baseType: !1270, size: 64, offset: 256)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1202, file: !12, line: 923, baseType: !4717, size: 64, offset: 320)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1202, file: !12, line: 929, baseType: !1085, offset: 384)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1202, file: !12, line: 930, baseType: !11, size: 32, offset: 384)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1202, file: !12, line: 931, baseType: !1571, size: 64, offset: 448)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1202, file: !12, line: 932, baseType: !7, size: 32, offset: 512)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1202, file: !12, line: 933, baseType: !3032, size: 32, offset: 544)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1202, file: !12, line: 934, baseType: !1567, size: 192, offset: 576)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1202, file: !12, line: 935, baseType: !1372, size: 64, offset: 768)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1202, file: !12, line: 936, baseType: !5005, size: 192, offset: 832)
!5005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !12, line: 885, size: 192, elements: !5006)
!5006 = !{!5007, !5008, !5009, !5010, !5011, !5012}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5005, file: !12, line: 886, baseType: !4816)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5005, file: !12, line: 887, baseType: !2374, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5005, file: !12, line: 888, baseType: !20, size: 32, offset: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5005, file: !12, line: 889, baseType: !1276, size: 32, offset: 96)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5005, file: !12, line: 889, baseType: !1276, size: 32, offset: 128)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5005, file: !12, line: 890, baseType: !181, size: 32, offset: 160)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1202, file: !12, line: 937, baseType: !2449, size: 64, offset: 1024)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1202, file: !12, line: 938, baseType: !5015, size: 256, offset: 1088)
!5015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !12, line: 896, size: 256, elements: !5016)
!5016 = !{!5017, !5018, !5019, !5020, !5021, !5022}
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5015, file: !12, line: 897, baseType: !1010, size: 64)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5015, file: !12, line: 898, baseType: !7, size: 32, offset: 64)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5015, file: !12, line: 899, baseType: !7, size: 32, offset: 96)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5015, file: !12, line: 902, baseType: !7, size: 32, offset: 128)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5015, file: !12, line: 903, baseType: !7, size: 32, offset: 160)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5015, file: !12, line: 904, baseType: !1372, size: 64, offset: 192)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1202, file: !12, line: 940, baseType: !999, size: 64, offset: 1344)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1202, file: !12, line: 945, baseType: !968, size: 64, offset: 1408)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1202, file: !12, line: 949, baseType: !974, size: 128, offset: 1472)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1202, file: !12, line: 950, baseType: !974, size: 128, offset: 1600)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1202, file: !12, line: 952, baseType: !1627, size: 64, offset: 1728)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1202, file: !12, line: 953, baseType: !1820, size: 32, offset: 1792)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1202, file: !12, line: 954, baseType: !1820, size: 32, offset: 1824)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1192, file: !1151, line: 174, baseType: !1198, size: 64, offset: 320)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1192, file: !1151, line: 176, baseType: !5032, size: 64, offset: 384)
!5032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5033, size: 64)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!181, !1201, !1078, !1191, !1893}
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1180, file: !1151, line: 90, baseType: !1175, size: 64, offset: 192)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1180, file: !1151, line: 91, baseType: !5037, size: 64, offset: 256)
!5037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1141, file: !1073, line: 143, baseType: !5039, size: 64, offset: 256)
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5040, size: 64)
!5040 = !DISubroutineType(types: !5041)
!5041 = !{!5042, !1078}
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5044)
!5044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !35, line: 39, size: 384, elements: !5045)
!5045 = !{!5046, !5047, !5051, !5055, !5061, !5065}
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5044, file: !35, line: 40, baseType: !34, size: 32)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !5044, file: !35, line: 41, baseType: !5048, size: 64, offset: 64)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!1331}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !5044, file: !35, line: 42, baseType: !5052, size: 64, offset: 128)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!968}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !5044, file: !35, line: 43, baseType: !5056, size: 64, offset: 192)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!4013, !5059}
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !35, line: 19, flags: DIFlagFwdDecl)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !5044, file: !35, line: 44, baseType: !5062, size: 64, offset: 256)
!5062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5063, size: 64)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!4013}
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !5044, file: !35, line: 45, baseType: !1309, size: 64, offset: 320)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1141, file: !1073, line: 144, baseType: !5067, size: 64, offset: 320)
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 64)
!5068 = !DISubroutineType(types: !5069)
!5069 = !{!4013, !1078}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1141, file: !1073, line: 145, baseType: !5071, size: 64, offset: 384)
!5071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5072, size: 64)
!5072 = !DISubroutineType(types: !5073)
!5073 = !{null, !1078, !5074, !5075}
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1072, file: !1073, line: 70, baseType: !5077, size: 64, offset: 384)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1460, line: 123, size: 1024, elements: !5079)
!5079 = !{!5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5196, !5197, !5198, !5199, !5200}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5078, file: !1460, line: 124, baseType: !1641, size: 32)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5078, file: !1460, line: 125, baseType: !1641, size: 32, offset: 32)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5078, file: !1460, line: 135, baseType: !5077, size: 64, offset: 64)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5078, file: !1460, line: 136, baseType: !1006, size: 64, offset: 128)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5078, file: !1460, line: 138, baseType: !1654, size: 192, align: 64, offset: 192)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5078, file: !1460, line: 140, baseType: !4013, size: 64, offset: 384)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5078, file: !1460, line: 141, baseType: !7, size: 32, offset: 448)
!5087 = !DIDerivedType(tag: DW_TAG_member, scope: !5078, file: !1460, line: 142, baseType: !5088, size: 256, offset: 512)
!5088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5078, file: !1460, line: 142, size: 256, elements: !5089)
!5089 = !{!5090, !5136, !5140}
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5088, file: !1460, line: 143, baseType: !5091, size: 192)
!5091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1460, line: 91, size: 192, elements: !5092)
!5092 = !{!5093, !5094, !5095}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5091, file: !1460, line: 92, baseType: !1010, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5091, file: !1460, line: 94, baseType: !1650, size: 64, offset: 64)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5091, file: !1460, line: 100, baseType: !5096, size: 64, offset: 128)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1460, line: 180, size: 704, elements: !5098)
!5098 = !{!5099, !5100, !5101, !5108, !5109, !5110, !5134, !5135}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5097, file: !1460, line: 182, baseType: !5077, size: 64)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5097, file: !1460, line: 183, baseType: !7, size: 32, offset: 64)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5097, file: !1460, line: 186, baseType: !5102, size: 192, offset: 128)
!5102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !5103, line: 19, size: 192, elements: !5104)
!5103 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!5104 = !{!5105, !5106, !5107}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !5102, file: !5103, line: 20, baseType: !1632, size: 128)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !5102, file: !5103, line: 21, baseType: !7, size: 32, offset: 128)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !5102, file: !5103, line: 22, baseType: !7, size: 32, offset: 160)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5097, file: !1460, line: 187, baseType: !1040, size: 32, offset: 320)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5097, file: !1460, line: 188, baseType: !1040, size: 32, offset: 352)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5097, file: !1460, line: 189, baseType: !5111, size: 64, offset: 384)
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1460, line: 168, size: 320, elements: !5113)
!5113 = !{!5114, !5118, !5122, !5126, !5130}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5112, file: !1460, line: 169, baseType: !5115, size: 64)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!181, !1555, !5096}
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5112, file: !1460, line: 171, baseType: !5119, size: 64, offset: 64)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{!181, !5077, !1006, !1166}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5112, file: !1460, line: 173, baseType: !5123, size: 64, offset: 128)
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5124, size: 64)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!181, !5077}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5112, file: !1460, line: 174, baseType: !5127, size: 64, offset: 192)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!181, !5077, !5077, !1006}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5112, file: !1460, line: 176, baseType: !5131, size: 64, offset: 256)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!181, !1555, !5077, !5096}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5097, file: !1460, line: 192, baseType: !974, size: 128, offset: 448)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5097, file: !1460, line: 194, baseType: !2384, size: 128, offset: 576)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5088, file: !1460, line: 144, baseType: !5137, size: 64)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1460, line: 103, size: 64, elements: !5138)
!5138 = !{!5139}
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !5137, file: !1460, line: 104, baseType: !5077, size: 64)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5088, file: !1460, line: 145, baseType: !5141, size: 256)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1460, line: 107, size: 256, elements: !5142)
!5142 = !{!5143, !5191, !5194, !5195}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5141, file: !1460, line: 108, baseType: !5144, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5146)
!5146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1460, line: 217, size: 768, elements: !5147)
!5147 = !{!5148, !5168, !5172, !5173, !5174, !5175, !5176, !5180, !5181, !5182, !5183, !5187}
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5146, file: !1460, line: 222, baseType: !5149, size: 64)
!5149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5150, size: 64)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{!181, !5152}
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1460, line: 197, size: 1088, elements: !5154)
!5154 = !{!5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5153, file: !1460, line: 199, baseType: !5077, size: 64)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5153, file: !1460, line: 200, baseType: !1201, size: 64, offset: 64)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !5153, file: !1460, line: 201, baseType: !1555, size: 64, offset: 128)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5153, file: !1460, line: 202, baseType: !968, size: 64, offset: 192)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5153, file: !1460, line: 205, baseType: !1567, size: 192, offset: 256)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !5153, file: !1460, line: 206, baseType: !1567, size: 192, offset: 448)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5153, file: !1460, line: 207, baseType: !181, size: 32, offset: 640)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5153, file: !1460, line: 208, baseType: !974, size: 128, offset: 704)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !5153, file: !1460, line: 209, baseType: !1126, size: 64, offset: 832)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5153, file: !1460, line: 211, baseType: !1171, size: 64, offset: 896)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !5153, file: !1460, line: 212, baseType: !1331, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !5153, file: !1460, line: 213, baseType: !1331, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !5153, file: !1460, line: 214, baseType: !1921, size: 64, offset: 1024)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5146, file: !1460, line: 223, baseType: !5169, size: 64, offset: 64)
!5169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 64)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{null, !5152}
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !5146, file: !1460, line: 236, baseType: !1599, size: 64, offset: 128)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !5146, file: !1460, line: 238, baseType: !1586, size: 64, offset: 192)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !5146, file: !1460, line: 239, baseType: !1595, size: 64, offset: 256)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !5146, file: !1460, line: 240, baseType: !1591, size: 64, offset: 320)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5146, file: !1460, line: 242, baseType: !5177, size: 64, offset: 384)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!1157, !5152, !1126, !1171, !1372}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5146, file: !1460, line: 252, baseType: !1171, size: 64, offset: 448)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !5146, file: !1460, line: 259, baseType: !1331, size: 8, offset: 512)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5146, file: !1460, line: 260, baseType: !5177, size: 64, offset: 576)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5146, file: !1460, line: 263, baseType: !5184, size: 64, offset: 640)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 64)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!4758, !5152, !4760}
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5146, file: !1460, line: 266, baseType: !5188, size: 64, offset: 704)
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5189, size: 64)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!181, !5152, !1893}
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5141, file: !1460, line: 109, baseType: !5192, size: 64, offset: 64)
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5193, size: 64)
!5193 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1460, line: 31, flags: DIFlagFwdDecl)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5141, file: !1460, line: 110, baseType: !1372, size: 64, offset: 128)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !5141, file: !1460, line: 111, baseType: !5077, size: 64, offset: 192)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5078, file: !1460, line: 148, baseType: !968, size: 64, offset: 768)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5078, file: !1460, line: 154, baseType: !999, size: 64, offset: 832)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5078, file: !1460, line: 156, baseType: !1064, size: 16, offset: 896)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5078, file: !1460, line: 157, baseType: !1166, size: 16, offset: 912)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !5078, file: !1460, line: 158, baseType: !5201, size: 64, offset: 960)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 64)
!5202 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1460, line: 32, flags: DIFlagFwdDecl)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1072, file: !1073, line: 71, baseType: !2958, size: 32, offset: 448)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1072, file: !1073, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1072, file: !1073, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1072, file: !1073, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1072, file: !1073, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1072, file: !1073, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1069, file: !47, line: 463, baseType: !1068, size: 64, offset: 512)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1069, file: !47, line: 465, baseType: !5211, size: 64, offset: 576)
!5211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5212, size: 64)
!5212 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !47, line: 36, flags: DIFlagFwdDecl)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1069, file: !47, line: 467, baseType: !1006, size: 64, offset: 640)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1069, file: !47, line: 468, baseType: !5215, size: 64, offset: 704)
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 64)
!5216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5217)
!5217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !47, line: 87, size: 384, elements: !5218)
!5218 = !{!5219, !5220, !5221, !5225, !5229, !5233}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5217, file: !47, line: 88, baseType: !1006, size: 64)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5217, file: !47, line: 89, baseType: !1177, size: 64, offset: 64)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5217, file: !47, line: 90, baseType: !5222, size: 64, offset: 128)
!5222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 64)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!181, !1068, !1121}
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5217, file: !47, line: 91, baseType: !5226, size: 64, offset: 192)
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 64)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{!1126, !1068, !3098, !5074, !5075}
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5217, file: !47, line: 93, baseType: !5230, size: 64, offset: 256)
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 64)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{null, !1068}
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5217, file: !47, line: 95, baseType: !5234, size: 64, offset: 320)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5236)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !54, line: 278, size: 1472, elements: !5237)
!5237 = !{!5238, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5236, file: !54, line: 279, baseType: !5239, size: 64)
!5239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 64)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!181, !1068}
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5236, file: !54, line: 280, baseType: !5230, size: 64, offset: 64)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5236, file: !54, line: 281, baseType: !5239, size: 64, offset: 128)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5236, file: !54, line: 282, baseType: !5239, size: 64, offset: 192)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !5236, file: !54, line: 283, baseType: !5239, size: 64, offset: 256)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !5236, file: !54, line: 284, baseType: !5239, size: 64, offset: 320)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !5236, file: !54, line: 285, baseType: !5239, size: 64, offset: 384)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !5236, file: !54, line: 286, baseType: !5239, size: 64, offset: 448)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !5236, file: !54, line: 287, baseType: !5239, size: 64, offset: 512)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !5236, file: !54, line: 288, baseType: !5239, size: 64, offset: 576)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !5236, file: !54, line: 289, baseType: !5239, size: 64, offset: 640)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !5236, file: !54, line: 290, baseType: !5239, size: 64, offset: 704)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !5236, file: !54, line: 291, baseType: !5239, size: 64, offset: 768)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !5236, file: !54, line: 292, baseType: !5239, size: 64, offset: 832)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !5236, file: !54, line: 293, baseType: !5239, size: 64, offset: 896)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !5236, file: !54, line: 294, baseType: !5239, size: 64, offset: 960)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !5236, file: !54, line: 295, baseType: !5239, size: 64, offset: 1024)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !5236, file: !54, line: 296, baseType: !5239, size: 64, offset: 1088)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !5236, file: !54, line: 297, baseType: !5239, size: 64, offset: 1152)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !5236, file: !54, line: 298, baseType: !5239, size: 64, offset: 1216)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5236, file: !54, line: 299, baseType: !5239, size: 64, offset: 1280)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5236, file: !54, line: 300, baseType: !5239, size: 64, offset: 1344)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !5236, file: !54, line: 301, baseType: !5239, size: 64, offset: 1408)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1069, file: !47, line: 470, baseType: !5265, size: 64, offset: 768)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !5267, line: 82, size: 1408, elements: !5268)
!5267 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!5268 = !{!5269, !5270, !5271, !5272, !5273, !5274, !5275, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5350, !5353, !5354}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5266, file: !5267, line: 83, baseType: !1006, size: 64)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5266, file: !5267, line: 84, baseType: !1006, size: 64, offset: 64)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !5266, file: !5267, line: 85, baseType: !1068, size: 64, offset: 128)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !5266, file: !5267, line: 86, baseType: !1177, size: 64, offset: 192)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5266, file: !5267, line: 87, baseType: !1177, size: 64, offset: 256)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !5266, file: !5267, line: 88, baseType: !1177, size: 64, offset: 320)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5266, file: !5267, line: 90, baseType: !5276, size: 64, offset: 384)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 64)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{!181, !1068, !5279}
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !41, line: 95, size: 1152, elements: !5281)
!5281 = !{!5282, !5283, !5284, !5285, !5286, !5287, !5288, !5301, !5314, !5315, !5316, !5317, !5318, !5326, !5327, !5328, !5329, !5330, !5331}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5280, file: !41, line: 96, baseType: !1006, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5280, file: !41, line: 97, baseType: !5265, size: 64, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5280, file: !41, line: 99, baseType: !1474, size: 64, offset: 128)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !5280, file: !41, line: 100, baseType: !1006, size: 64, offset: 192)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !5280, file: !41, line: 102, baseType: !1331, size: 8, offset: 256)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !5280, file: !41, line: 103, baseType: !40, size: 32, offset: 288)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !5280, file: !41, line: 105, baseType: !5289, size: 64, offset: 320)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5291)
!5291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !5292, line: 262, size: 1600, elements: !5293)
!5292 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!5293 = !{!5294, !5295, !5296, !5300}
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5291, file: !5292, line: 263, baseType: !2836, size: 256)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5291, file: !5292, line: 264, baseType: !2836, size: 256, offset: 256)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !5291, file: !5292, line: 265, baseType: !5297, size: 1024, offset: 512)
!5297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 1024, elements: !5298)
!5298 = !{!5299}
!5299 = !DISubrange(count: 128)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5291, file: !5292, line: 266, baseType: !4013, size: 64, offset: 1536)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !5280, file: !41, line: 106, baseType: !5302, size: 64, offset: 384)
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5303, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5304)
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !5292, line: 210, size: 256, elements: !5305)
!5305 = !{!5306, !5310, !5312, !5313}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5304, file: !5292, line: 211, baseType: !5307, size: 72)
!5307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 72, elements: !5308)
!5308 = !{!5309}
!5309 = !DISubrange(count: 9)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5304, file: !5292, line: 212, baseType: !5311, size: 64, offset: 128)
!5311 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !5292, line: 14, baseType: !1010)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !5304, file: !5292, line: 213, baseType: !1041, size: 32, offset: 192)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !5304, file: !5292, line: 214, baseType: !1041, size: 32, offset: 224)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5280, file: !41, line: 108, baseType: !5239, size: 64, offset: 448)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5280, file: !41, line: 109, baseType: !5230, size: 64, offset: 512)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5280, file: !41, line: 110, baseType: !5239, size: 64, offset: 576)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5280, file: !41, line: 111, baseType: !5230, size: 64, offset: 640)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5280, file: !41, line: 112, baseType: !5319, size: 64, offset: 704)
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 64)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{!181, !1068, !5322}
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !54, line: 52, baseType: !5323)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !54, line: 50, size: 32, elements: !5324)
!5324 = !{!5325}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5323, file: !54, line: 51, baseType: !181, size: 32)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5280, file: !41, line: 113, baseType: !5239, size: 64, offset: 768)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5280, file: !41, line: 114, baseType: !1177, size: 64, offset: 832)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5280, file: !41, line: 115, baseType: !1177, size: 64, offset: 896)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5280, file: !41, line: 117, baseType: !5234, size: 64, offset: 960)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !5280, file: !41, line: 118, baseType: !5230, size: 64, offset: 1024)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5280, file: !41, line: 120, baseType: !5332, size: 64, offset: 1088)
!5332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5333, size: 64)
!5333 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !41, line: 120, flags: DIFlagFwdDecl)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5266, file: !5267, line: 91, baseType: !5222, size: 64, offset: 448)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5266, file: !5267, line: 92, baseType: !5239, size: 64, offset: 512)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5266, file: !5267, line: 93, baseType: !5230, size: 64, offset: 576)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5266, file: !5267, line: 94, baseType: !5239, size: 64, offset: 640)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5266, file: !5267, line: 95, baseType: !5230, size: 64, offset: 704)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !5266, file: !5267, line: 97, baseType: !5239, size: 64, offset: 768)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5266, file: !5267, line: 98, baseType: !5239, size: 64, offset: 832)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5266, file: !5267, line: 100, baseType: !5319, size: 64, offset: 896)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5266, file: !5267, line: 101, baseType: !5239, size: 64, offset: 960)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !5266, file: !5267, line: 103, baseType: !5239, size: 64, offset: 1024)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !5266, file: !5267, line: 105, baseType: !5239, size: 64, offset: 1088)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5266, file: !5267, line: 107, baseType: !5234, size: 64, offset: 1152)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !5266, file: !5267, line: 109, baseType: !5347, size: 64, offset: 1216)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5349)
!5349 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !5267, line: 109, flags: DIFlagFwdDecl)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5266, file: !5267, line: 111, baseType: !5351, size: 64, offset: 1280)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 64)
!5352 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !5267, line: 111, flags: DIFlagFwdDecl)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !5266, file: !5267, line: 112, baseType: !1489, offset: 1344)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !5266, file: !5267, line: 114, baseType: !1331, size: 8, offset: 1344)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1069, file: !47, line: 471, baseType: !5279, size: 64, offset: 832)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1069, file: !47, line: 473, baseType: !968, size: 64, offset: 896)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1069, file: !47, line: 475, baseType: !968, size: 64, offset: 960)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1069, file: !47, line: 480, baseType: !1567, size: 192, offset: 1024)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1069, file: !47, line: 484, baseType: !5360, size: 576, offset: 1216)
!5360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !47, line: 361, size: 576, elements: !5361)
!5361 = !{!5362, !5363, !5364, !5365, !5366, !5367}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !5360, file: !47, line: 362, baseType: !974, size: 128)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !5360, file: !47, line: 363, baseType: !974, size: 128, offset: 128)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !5360, file: !47, line: 364, baseType: !974, size: 128, offset: 256)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !5360, file: !47, line: 365, baseType: !974, size: 128, offset: 384)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !5360, file: !47, line: 366, baseType: !1331, size: 8, offset: 512)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5360, file: !47, line: 367, baseType: !46, size: 32, offset: 544)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1069, file: !47, line: 485, baseType: !5369, size: 2304, offset: 1792)
!5369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !54, line: 565, size: 2304, elements: !5370)
!5370 = !{!5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5455, !5459}
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !5369, file: !54, line: 566, baseType: !5322, size: 32)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !5369, file: !54, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !5369, file: !54, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !5369, file: !54, line: 569, baseType: !1331, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !5369, file: !54, line: 570, baseType: !1331, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !5369, file: !54, line: 571, baseType: !1331, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !5369, file: !54, line: 572, baseType: !1331, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !5369, file: !54, line: 573, baseType: !1331, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !5369, file: !54, line: 574, baseType: !1331, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !5369, file: !54, line: 575, baseType: !1331, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !5369, file: !54, line: 576, baseType: !1331, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !5369, file: !54, line: 577, baseType: !1040, size: 32, offset: 64)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5369, file: !54, line: 578, baseType: !1085, offset: 96)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5369, file: !54, line: 580, baseType: !974, size: 128, offset: 128)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5369, file: !54, line: 581, baseType: !2404, size: 192, offset: 256)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5369, file: !54, line: 582, baseType: !5387, size: 64, offset: 448)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !5389, line: 43, size: 1472, elements: !5390)
!5389 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!5390 = !{!5391, !5392, !5393, !5394, !5395, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5388, file: !5389, line: 44, baseType: !1006, size: 64)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5388, file: !5389, line: 45, baseType: !181, size: 32, offset: 64)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5388, file: !5389, line: 46, baseType: !974, size: 128, offset: 128)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5388, file: !5389, line: 47, baseType: !1085, offset: 256)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5388, file: !5389, line: 48, baseType: !5396, size: 64, offset: 256)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !54, line: 533, flags: DIFlagFwdDecl)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5388, file: !5389, line: 49, baseType: !3008, size: 320, offset: 320)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5388, file: !5389, line: 50, baseType: !1010, size: 64, offset: 640)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !5388, file: !5389, line: 51, baseType: !2204, size: 64, offset: 704)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !5388, file: !5389, line: 52, baseType: !2204, size: 64, offset: 768)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !5388, file: !5389, line: 53, baseType: !2204, size: 64, offset: 832)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !5388, file: !5389, line: 54, baseType: !2204, size: 64, offset: 896)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !5388, file: !5389, line: 55, baseType: !2204, size: 64, offset: 960)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !5388, file: !5389, line: 56, baseType: !1010, size: 64, offset: 1024)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !5388, file: !5389, line: 57, baseType: !1010, size: 64, offset: 1088)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !5388, file: !5389, line: 58, baseType: !1010, size: 64, offset: 1152)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !5388, file: !5389, line: 59, baseType: !1010, size: 64, offset: 1216)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !5388, file: !5389, line: 60, baseType: !1010, size: 64, offset: 1280)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5388, file: !5389, line: 61, baseType: !1068, size: 64, offset: 1344)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5388, file: !5389, line: 62, baseType: !1331, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !5388, file: !5389, line: 63, baseType: !1331, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !5369, file: !54, line: 583, baseType: !1331, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !5369, file: !54, line: 584, baseType: !1331, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !5369, file: !54, line: 585, baseType: !1331, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !5369, file: !54, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !5369, file: !54, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !5369, file: !54, line: 592, baseType: !2196, size: 512, offset: 576)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5369, file: !54, line: 593, baseType: !999, size: 64, offset: 1088)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5369, file: !54, line: 594, baseType: !2896, size: 256, offset: 1152)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !5369, file: !54, line: 595, baseType: !2384, size: 128, offset: 1408)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5369, file: !54, line: 596, baseType: !5396, size: 64, offset: 1536)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !5369, file: !54, line: 597, baseType: !1641, size: 32, offset: 1600)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !5369, file: !54, line: 598, baseType: !1641, size: 32, offset: 1632)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !5369, file: !54, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !5369, file: !54, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !5369, file: !54, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !5369, file: !54, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !5369, file: !54, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !5369, file: !54, line: 604, baseType: !1331, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !5369, file: !54, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !5369, file: !54, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !5369, file: !54, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !5369, file: !54, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !5369, file: !54, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !5369, file: !54, line: 610, baseType: !7, size: 32, offset: 1696)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5369, file: !54, line: 611, baseType: !53, size: 32, offset: 1728)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !5369, file: !54, line: 612, baseType: !61, size: 32, offset: 1760)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !5369, file: !54, line: 613, baseType: !181, size: 32, offset: 1792)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !5369, file: !54, line: 614, baseType: !181, size: 32, offset: 1824)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !5369, file: !54, line: 615, baseType: !999, size: 64, offset: 1856)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !5369, file: !54, line: 616, baseType: !999, size: 64, offset: 1920)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !5369, file: !54, line: 617, baseType: !999, size: 64, offset: 1984)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !5369, file: !54, line: 618, baseType: !999, size: 64, offset: 2048)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !5369, file: !54, line: 620, baseType: !5446, size: 64, offset: 2112)
!5446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5447, size: 64)
!5447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !54, line: 536, size: 256, elements: !5448)
!5448 = !{!5449, !5450, !5451, !5452}
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5447, file: !54, line: 537, baseType: !1085)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5447, file: !54, line: 538, baseType: !7, size: 32)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !5447, file: !54, line: 540, baseType: !974, size: 128, offset: 64)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !5447, file: !54, line: 543, baseType: !5453, size: 64, offset: 192)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 64)
!5454 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !54, line: 534, flags: DIFlagFwdDecl)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !5369, file: !54, line: 621, baseType: !5456, size: 64, offset: 2176)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{null, !1068, !2347}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5369, file: !54, line: 622, baseType: !5460, size: 64, offset: 2240)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !54, line: 622, flags: DIFlagFwdDecl)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1069, file: !47, line: 486, baseType: !5463, size: 64, offset: 4096)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 64)
!5464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !54, line: 642, size: 1792, elements: !5465)
!5465 = !{!5466, !5467, !5468, !5472, !5473, !5474}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5464, file: !54, line: 643, baseType: !5236, size: 1472)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5464, file: !54, line: 644, baseType: !5239, size: 64, offset: 1472)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5464, file: !54, line: 645, baseType: !5469, size: 64, offset: 1536)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{null, !1068, !1331}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5464, file: !54, line: 646, baseType: !5239, size: 64, offset: 1600)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5464, file: !54, line: 647, baseType: !5230, size: 64, offset: 1664)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5464, file: !54, line: 648, baseType: !5230, size: 64, offset: 1728)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1069, file: !47, line: 493, baseType: !5476, size: 64, offset: 4160)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !68, line: 162, size: 1088, elements: !5478)
!5478 = !{!5479, !5480, !5481, !5654, !5655, !5656, !5657, !5658, !5659, !5662, !5663, !5664, !5665, !5666, !5667, !5668}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5477, file: !68, line: 163, baseType: !974, size: 128)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5477, file: !68, line: 164, baseType: !1006, size: 64, offset: 128)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5477, file: !68, line: 165, baseType: !5482, size: 64, offset: 192)
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5484)
!5484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !68, line: 105, size: 640, elements: !5485)
!5485 = !{!5486, !5604, !5615, !5620, !5624, !5631, !5635, !5639, !5646, !5650}
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5484, file: !68, line: 106, baseType: !5487, size: 64)
!5487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5488, size: 64)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!181, !5476, !5490, !67}
!5490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5491, size: 64)
!5491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5492, line: 51, size: 1344, elements: !5493)
!5492 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!5493 = !{!5494, !5495, !5497, !5498, !5588, !5597, !5598, !5599, !5600, !5601, !5602, !5603}
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5491, file: !5492, line: 52, baseType: !1006, size: 64)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !5491, file: !5492, line: 53, baseType: !5496, size: 32, offset: 64)
!5496 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !5492, line: 28, baseType: !1040)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !5491, file: !5492, line: 54, baseType: !1006, size: 64, offset: 128)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5491, file: !5492, line: 55, baseType: !5499, size: 192, offset: 192)
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5500, line: 17, size: 192, elements: !5501)
!5500 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5501 = !{!5502, !5504, !5587}
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5499, file: !5500, line: 18, baseType: !5503, size: 64)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5499, size: 64)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5499, file: !5500, line: 19, baseType: !5505, size: 64, offset: 64)
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5506, size: 64)
!5506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5507)
!5507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5500, line: 110, size: 1152, elements: !5508)
!5508 = !{!5509, !5513, !5517, !5523, !5529, !5533, !5537, !5542, !5546, !5547, !5551, !5555, !5559, !5570, !5571, !5572, !5573, !5583}
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5507, file: !5500, line: 111, baseType: !5510, size: 64)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!5503, !5503}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5507, file: !5500, line: 112, baseType: !5514, size: 64, offset: 64)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{null, !5503}
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5507, file: !5500, line: 113, baseType: !5518, size: 64, offset: 128)
!5518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!1331, !5521}
!5521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5522, size: 64)
!5522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5499)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5507, file: !5500, line: 114, baseType: !5524, size: 64, offset: 192)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!4013, !5521, !5527}
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 64)
!5528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5507, file: !5500, line: 116, baseType: !5530, size: 64, offset: 256)
!5530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5531, size: 64)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!1331, !5521, !1006}
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5507, file: !5500, line: 118, baseType: !5534, size: 64, offset: 320)
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5535, size: 64)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{!181, !5521, !1006, !7, !968, !1171}
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5507, file: !5500, line: 123, baseType: !5538, size: 64, offset: 384)
!5538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5539, size: 64)
!5539 = !DISubroutineType(types: !5540)
!5540 = !{!181, !5521, !1006, !5541, !1171}
!5541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5507, file: !5500, line: 126, baseType: !5543, size: 64, offset: 448)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = !DISubroutineType(types: !5545)
!5545 = !{!1006, !5521}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5507, file: !5500, line: 127, baseType: !5543, size: 64, offset: 512)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5507, file: !5500, line: 128, baseType: !5548, size: 64, offset: 576)
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 64)
!5549 = !DISubroutineType(types: !5550)
!5550 = !{!5503, !5521}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5507, file: !5500, line: 130, baseType: !5552, size: 64, offset: 640)
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!5553 = !DISubroutineType(types: !5554)
!5554 = !{!5503, !5521, !5503}
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5507, file: !5500, line: 133, baseType: !5556, size: 64, offset: 704)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{!5503, !5521, !1006}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5507, file: !5500, line: 135, baseType: !5560, size: 64, offset: 768)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!181, !5521, !1006, !1006, !7, !7, !5563}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5500, line: 43, size: 640, elements: !5565)
!5565 = !{!5566, !5567, !5568}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5564, file: !5500, line: 44, baseType: !5503, size: 64)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5564, file: !5500, line: 45, baseType: !7, size: 32, offset: 64)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5564, file: !5500, line: 46, baseType: !5569, size: 512, offset: 128)
!5569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !999, size: 512, elements: !2234)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5507, file: !5500, line: 140, baseType: !5552, size: 64, offset: 832)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5507, file: !5500, line: 143, baseType: !5548, size: 64, offset: 896)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5507, file: !5500, line: 145, baseType: !5510, size: 64, offset: 960)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5507, file: !5500, line: 146, baseType: !5574, size: 64, offset: 1024)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!181, !5521, !5577}
!5577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5578, size: 64)
!5578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5500, line: 29, size: 128, elements: !5579)
!5579 = !{!5580, !5581, !5582}
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5578, file: !5500, line: 30, baseType: !7, size: 32)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5578, file: !5500, line: 31, baseType: !7, size: 32, offset: 32)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5578, file: !5500, line: 32, baseType: !5521, size: 64, offset: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5507, file: !5500, line: 148, baseType: !5584, size: 64, offset: 1088)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!181, !5521, !1068}
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5499, file: !5500, line: 20, baseType: !1068, size: 64, offset: 128)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5491, file: !5492, line: 57, baseType: !5589, size: 64, offset: 384)
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 64)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !5492, line: 31, size: 704, elements: !5591)
!5591 = !{!5592, !5593, !5594, !5595, !5596}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5590, file: !5492, line: 32, baseType: !1126, size: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5590, file: !5492, line: 33, baseType: !181, size: 32, offset: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5590, file: !5492, line: 34, baseType: !968, size: 64, offset: 128)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5590, file: !5492, line: 35, baseType: !5589, size: 64, offset: 192)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5590, file: !5492, line: 43, baseType: !1192, size: 448, offset: 256)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !5491, file: !5492, line: 58, baseType: !5589, size: 64, offset: 448)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5491, file: !5492, line: 59, baseType: !5490, size: 64, offset: 512)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5491, file: !5492, line: 60, baseType: !5490, size: 64, offset: 576)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5491, file: !5492, line: 61, baseType: !5490, size: 64, offset: 640)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5491, file: !5492, line: 63, baseType: !1072, size: 512, offset: 704)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5491, file: !5492, line: 65, baseType: !1010, size: 64, offset: 1216)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5491, file: !5492, line: 66, baseType: !968, size: 64, offset: 1280)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !5484, file: !68, line: 108, baseType: !5605, size: 64, offset: 64)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!181, !5476, !5608, !67}
!5608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5609, size: 64)
!5609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !68, line: 63, size: 640, elements: !5610)
!5610 = !{!5611, !5612, !5613}
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5609, file: !68, line: 64, baseType: !5503, size: 64)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !5609, file: !68, line: 65, baseType: !181, size: 32, offset: 64)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5609, file: !68, line: 66, baseType: !5614, size: 512, offset: 96)
!5614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 512, elements: !2637)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5484, file: !68, line: 110, baseType: !5616, size: 64, offset: 128)
!5616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5617, size: 64)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!181, !5476, !7, !5619}
!5619 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !975, line: 164, baseType: !1010)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !5484, file: !68, line: 111, baseType: !5621, size: 64, offset: 192)
!5621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5622, size: 64)
!5622 = !DISubroutineType(types: !5623)
!5623 = !{null, !5476, !7}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !5484, file: !68, line: 112, baseType: !5625, size: 64, offset: 256)
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5626, size: 64)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{!181, !5476, !5490, !5628, !7, !5630, !3504}
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5484, file: !68, line: 117, baseType: !5632, size: 64, offset: 320)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!181, !5476, !7, !7, !968}
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5484, file: !68, line: 119, baseType: !5636, size: 64, offset: 384)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{null, !5476, !7, !7}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5484, file: !68, line: 121, baseType: !5640, size: 64, offset: 448)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{!181, !5476, !5643, !1331}
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 64)
!5644 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !5645, line: 11, flags: DIFlagFwdDecl)
!5645 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !5484, file: !68, line: 122, baseType: !5647, size: 64, offset: 512)
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{null, !5476, !5643}
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !5484, file: !68, line: 123, baseType: !5651, size: 64, offset: 576)
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 64)
!5652 = !DISubroutineType(types: !5653)
!5653 = !{!181, !5476, !5608, !5630, !3504}
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !5477, file: !68, line: 166, baseType: !968, size: 64, offset: 256)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5477, file: !68, line: 167, baseType: !7, size: 32, offset: 320)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !5477, file: !68, line: 168, baseType: !7, size: 32, offset: 352)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5477, file: !68, line: 171, baseType: !5503, size: 64, offset: 384)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !5477, file: !68, line: 172, baseType: !67, size: 32, offset: 448)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5477, file: !68, line: 173, baseType: !5660, size: 64, offset: 512)
!5660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5661, size: 64)
!5661 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !68, line: 134, flags: DIFlagFwdDecl)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5477, file: !68, line: 175, baseType: !5476, size: 64, offset: 576)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !5477, file: !68, line: 182, baseType: !5619, size: 64, offset: 640)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !5477, file: !68, line: 183, baseType: !7, size: 32, offset: 704)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !5477, file: !68, line: 184, baseType: !7, size: 32, offset: 736)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !5477, file: !68, line: 185, baseType: !1632, size: 128, offset: 768)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !5477, file: !68, line: 186, baseType: !1567, size: 192, offset: 896)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !5477, file: !68, line: 187, baseType: !5669, offset: 1088)
!5669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2912)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1069, file: !47, line: 499, baseType: !974, size: 128, offset: 4224)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1069, file: !47, line: 502, baseType: !5672, size: 64, offset: 4352)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 64)
!5673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5674)
!5674 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !47, line: 502, flags: DIFlagFwdDecl)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1069, file: !47, line: 504, baseType: !5676, size: 64, offset: 4416)
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1069, file: !47, line: 505, baseType: !999, size: 64, offset: 4480)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1069, file: !47, line: 510, baseType: !999, size: 64, offset: 4544)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1069, file: !47, line: 511, baseType: !5680, size: 64, offset: 4608)
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5682)
!5682 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !47, line: 511, flags: DIFlagFwdDecl)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1069, file: !47, line: 513, baseType: !5684, size: 64, offset: 4672)
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5685, size: 64)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !47, line: 288, size: 128, elements: !5686)
!5686 = !{!5687, !5688}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5685, file: !47, line: 293, baseType: !7, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5685, file: !47, line: 294, baseType: !1010, size: 64, offset: 64)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1069, file: !47, line: 515, baseType: !974, size: 128, offset: 4736)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1069, file: !47, line: 526, baseType: !5691, offset: 4864)
!5691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5692, line: 5, elements: !1099)
!5692 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1069, file: !47, line: 528, baseType: !5490, size: 64, offset: 4864)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1069, file: !47, line: 529, baseType: !5503, size: 64, offset: 4928)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1069, file: !47, line: 534, baseType: !1354, size: 32, offset: 4992)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1069, file: !47, line: 535, baseType: !1040, size: 32, offset: 5024)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1069, file: !47, line: 537, baseType: !1085, offset: 5056)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1069, file: !47, line: 538, baseType: !974, size: 128, offset: 5056)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1069, file: !47, line: 540, baseType: !5700, size: 64, offset: 5184)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5702, line: 54, size: 960, elements: !5703)
!5702 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5703 = !{!5704, !5705, !5706, !5707, !5708, !5709, !5710, !5714, !5718, !5719, !5720, !5721, !5725, !5729, !5730}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5701, file: !5702, line: 55, baseType: !1006, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5701, file: !5702, line: 56, baseType: !1474, size: 64, offset: 64)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5701, file: !5702, line: 58, baseType: !1177, size: 64, offset: 128)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5701, file: !5702, line: 59, baseType: !1177, size: 64, offset: 192)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5701, file: !5702, line: 60, baseType: !1078, size: 64, offset: 256)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5701, file: !5702, line: 62, baseType: !5222, size: 64, offset: 320)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5701, file: !5702, line: 63, baseType: !5711, size: 64, offset: 384)
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{!1126, !1068, !3098}
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5701, file: !5702, line: 65, baseType: !5715, size: 64, offset: 448)
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = !DISubroutineType(types: !5717)
!5717 = !{null, !5700}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5701, file: !5702, line: 66, baseType: !5230, size: 64, offset: 512)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5701, file: !5702, line: 68, baseType: !5239, size: 64, offset: 576)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5701, file: !5702, line: 70, baseType: !5042, size: 64, offset: 640)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5701, file: !5702, line: 71, baseType: !5722, size: 64, offset: 704)
!5722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5723, size: 64)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{!4013, !1068}
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5701, file: !5702, line: 73, baseType: !5726, size: 64, offset: 768)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = !DISubroutineType(types: !5728)
!5728 = !{null, !1068, !5074, !5075}
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5701, file: !5702, line: 75, baseType: !5234, size: 64, offset: 832)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5701, file: !5702, line: 77, baseType: !5351, size: 64, offset: 896)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1069, file: !47, line: 541, baseType: !1177, size: 64, offset: 5248)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1069, file: !47, line: 543, baseType: !5230, size: 64, offset: 5312)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1069, file: !47, line: 544, baseType: !5734, size: 64, offset: 5376)
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5735 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !47, line: 45, flags: DIFlagFwdDecl)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1069, file: !47, line: 545, baseType: !5737, size: 64, offset: 5440)
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5738 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !47, line: 47, flags: DIFlagFwdDecl)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1069, file: !47, line: 547, baseType: !1331, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1069, file: !47, line: 548, baseType: !1331, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1069, file: !47, line: 549, baseType: !1331, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1069, file: !47, line: 550, baseType: !1331, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !982, file: !971, line: 635, baseType: !1069, size: 5568, offset: 2304)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !982, file: !971, line: 636, baseType: !1191, size: 64, offset: 7872)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !982, file: !971, line: 637, baseType: !1191, size: 64, offset: 7936)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !982, file: !971, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !970, file: !971, line: 312, baseType: !981, size: 64, offset: 192)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !970, file: !971, line: 314, baseType: !968, size: 64, offset: 256)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !970, file: !971, line: 315, baseType: !1051, size: 64, offset: 320)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !970, file: !971, line: 316, baseType: !5751, size: 64, offset: 384)
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5752, size: 64)
!5752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !971, line: 69, size: 832, elements: !5753)
!5753 = !{!5754, !5755, !5756, !5759, !5760}
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5752, file: !971, line: 70, baseType: !981, size: 64)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5752, file: !971, line: 71, baseType: !974, size: 128, offset: 64)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5752, file: !971, line: 72, baseType: !5757, size: 64, offset: 192)
!5757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5758, size: 64)
!5758 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !971, line: 72, flags: DIFlagFwdDecl)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5752, file: !971, line: 73, baseType: !1055, size: 8, offset: 256)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5752, file: !971, line: 74, baseType: !1072, size: 512, offset: 320)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !970, file: !971, line: 318, baseType: !7, size: 32, offset: 448)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !970, file: !971, line: 319, baseType: !1064, size: 16, offset: 480)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !970, file: !971, line: 320, baseType: !1064, size: 16, offset: 496)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !970, file: !971, line: 321, baseType: !1064, size: 16, offset: 512)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !970, file: !971, line: 322, baseType: !1064, size: 16, offset: 528)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !970, file: !971, line: 323, baseType: !7, size: 32, offset: 544)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !970, file: !971, line: 324, baseType: !2256, size: 8, offset: 576)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !970, file: !971, line: 325, baseType: !2256, size: 8, offset: 584)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !970, file: !971, line: 330, baseType: !2256, size: 8, offset: 592)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !970, file: !971, line: 331, baseType: !2256, size: 8, offset: 600)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !970, file: !971, line: 332, baseType: !2256, size: 8, offset: 608)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !970, file: !971, line: 333, baseType: !2256, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !970, file: !971, line: 334, baseType: !2256, size: 8, offset: 624)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !970, file: !971, line: 335, baseType: !2256, size: 8, offset: 632)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !970, file: !971, line: 336, baseType: !1753, size: 16, offset: 640)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !970, file: !971, line: 337, baseType: !5630, size: 64, offset: 704)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !970, file: !971, line: 339, baseType: !5778, size: 64, offset: 768)
!5778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5779, size: 64)
!5779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !971, line: 858, size: 2048, elements: !5780)
!5780 = !{!5781, !5782, !5783, !5795, !5799, !5803, !5807, !5811, !5812, !5816, !5835, !5836, !5837}
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5779, file: !971, line: 859, baseType: !974, size: 128)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5779, file: !971, line: 860, baseType: !1006, size: 64, offset: 128)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5779, file: !971, line: 861, baseType: !5784, size: 64, offset: 192)
!5784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5785, size: 64)
!5785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5786)
!5786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !5292, line: 38, size: 256, elements: !5787)
!5787 = !{!5788, !5789, !5790, !5791, !5792, !5793, !5794}
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5786, file: !5292, line: 39, baseType: !1041, size: 32)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5786, file: !5292, line: 39, baseType: !1041, size: 32, offset: 32)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !5786, file: !5292, line: 40, baseType: !1041, size: 32, offset: 64)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !5786, file: !5292, line: 40, baseType: !1041, size: 32, offset: 96)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5786, file: !5292, line: 41, baseType: !1041, size: 32, offset: 128)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !5786, file: !5292, line: 41, baseType: !1041, size: 32, offset: 160)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5786, file: !5292, line: 42, baseType: !5311, size: 64, offset: 192)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5779, file: !971, line: 862, baseType: !5796, size: 64, offset: 256)
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5797, size: 64)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!181, !969, !5784}
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5779, file: !971, line: 863, baseType: !5800, size: 64, offset: 320)
!5800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5801, size: 64)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{null, !969}
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5779, file: !971, line: 864, baseType: !5804, size: 64, offset: 384)
!5804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5805, size: 64)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!181, !969, !5322}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5779, file: !971, line: 865, baseType: !5808, size: 64, offset: 448)
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5809, size: 64)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!181, !969}
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5779, file: !971, line: 866, baseType: !5800, size: 64, offset: 512)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !5779, file: !971, line: 867, baseType: !5813, size: 64, offset: 576)
!5813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!181, !969, !181}
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !5779, file: !971, line: 868, baseType: !5817, size: 64, offset: 640)
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5818, size: 64)
!5818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5819)
!5819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !971, line: 795, size: 384, elements: !5820)
!5820 = !{!5821, !5827, !5831, !5832, !5833, !5834}
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !5819, file: !971, line: 797, baseType: !5822, size: 64)
!5822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5823, size: 64)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{!5825, !969, !5826}
!5825 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !971, line: 772, baseType: !7)
!5826 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !971, line: 180, baseType: !7)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !5819, file: !971, line: 801, baseType: !5828, size: 64, offset: 64)
!5828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5829, size: 64)
!5829 = !DISubroutineType(types: !5830)
!5830 = !{!5825, !969}
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !5819, file: !971, line: 804, baseType: !5828, size: 64, offset: 128)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !5819, file: !971, line: 807, baseType: !5800, size: 64, offset: 192)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5819, file: !971, line: 808, baseType: !5800, size: 64, offset: 256)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5819, file: !971, line: 811, baseType: !5800, size: 64, offset: 320)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5779, file: !971, line: 869, baseType: !1177, size: 64, offset: 704)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5779, file: !971, line: 870, baseType: !5280, size: 1152, offset: 768)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !5779, file: !971, line: 871, baseType: !5838, size: 128, offset: 1920)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !971, line: 759, size: 128, elements: !5839)
!5839 = !{!5840, !5841}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5838, file: !971, line: 760, baseType: !1085)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5838, file: !971, line: 761, baseType: !974, size: 128)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !970, file: !971, line: 340, baseType: !999, size: 64, offset: 832)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !970, file: !971, line: 346, baseType: !5685, size: 128, offset: 896)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !970, file: !971, line: 348, baseType: !5845, size: 32, offset: 1024)
!5845 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !971, line: 155, baseType: !181)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !970, file: !971, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !970, file: !971, line: 352, baseType: !2256, size: 8, offset: 1064)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !970, file: !971, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !970, file: !971, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !970, file: !971, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !970, file: !971, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !970, file: !971, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !970, file: !971, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !970, file: !971, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !970, file: !971, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !970, file: !971, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !970, file: !971, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !970, file: !971, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !970, file: !971, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !970, file: !971, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !970, file: !971, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !970, file: !971, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !970, file: !971, line: 376, baseType: !7, size: 32, offset: 1120)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !970, file: !971, line: 377, baseType: !7, size: 32, offset: 1152)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !970, file: !971, line: 380, baseType: !5866, size: 64, offset: 1216)
!5866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5867, size: 64)
!5867 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !971, line: 303, flags: DIFlagFwdDecl)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !970, file: !971, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !970, file: !971, line: 383, baseType: !181, size: 32, offset: 1312)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !970, file: !971, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !970, file: !971, line: 387, baseType: !5826, size: 32, offset: 1376)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !970, file: !971, line: 388, baseType: !1069, size: 5568, offset: 1408)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !970, file: !971, line: 390, baseType: !181, size: 32, offset: 6976)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !970, file: !971, line: 396, baseType: !7, size: 32, offset: 7008)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !970, file: !971, line: 397, baseType: !5876, size: 8704, offset: 7040)
!5876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !993, size: 8704, elements: !5877)
!5877 = !{!5878}
!5878 = !DISubrange(count: 17)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !970, file: !971, line: 399, baseType: !1331, size: 8, offset: 15744)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !970, file: !971, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !970, file: !971, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !970, file: !971, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !970, file: !971, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !970, file: !971, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !970, file: !971, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !970, file: !971, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !970, file: !971, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !970, file: !971, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !970, file: !971, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !970, file: !971, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !970, file: !971, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !970, file: !971, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !970, file: !971, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !970, file: !971, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !970, file: !971, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !970, file: !971, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !970, file: !971, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !970, file: !971, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !970, file: !971, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !970, file: !971, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !970, file: !971, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !970, file: !971, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !970, file: !971, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !970, file: !971, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !970, file: !971, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !970, file: !971, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !970, file: !971, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !970, file: !971, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !970, file: !971, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !970, file: !971, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !970, file: !971, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !970, file: !971, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !970, file: !971, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !970, file: !971, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !970, file: !971, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !970, file: !971, line: 450, baseType: !5917, size: 16, offset: 15792)
!5917 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !971, line: 206, baseType: !1064)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !970, file: !971, line: 451, baseType: !1641, size: 32, offset: 15808)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !970, file: !971, line: 453, baseType: !5614, size: 512, offset: 15840)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !970, file: !971, line: 454, baseType: !1479, size: 64, offset: 16384)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !970, file: !971, line: 455, baseType: !1191, size: 64, offset: 16448)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !970, file: !971, line: 456, baseType: !181, size: 32, offset: 16512)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !970, file: !971, line: 457, baseType: !5924, size: 1088, offset: 16576)
!5924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1191, size: 1088, elements: !5877)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !970, file: !971, line: 458, baseType: !5924, size: 1088, offset: 17664)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !970, file: !971, line: 469, baseType: !1177, size: 64, offset: 18752)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !970, file: !971, line: 471, baseType: !5928, size: 64, offset: 18816)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 64)
!5929 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !971, line: 304, flags: DIFlagFwdDecl)
!5930 = !DIDerivedType(tag: DW_TAG_member, scope: !970, file: !971, line: 478, baseType: !5931, size: 64, offset: 18880)
!5931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !970, file: !971, line: 478, size: 64, elements: !5932)
!5932 = !{!5933, !5936}
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !5931, file: !971, line: 479, baseType: !5934, size: 64)
!5934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5935, size: 64)
!5935 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !971, line: 305, flags: DIFlagFwdDecl)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !5931, file: !971, line: 480, baseType: !969, size: 64)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !970, file: !971, line: 482, baseType: !1753, size: 16, offset: 18944)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !970, file: !971, line: 483, baseType: !2256, size: 8, offset: 18960)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !970, file: !971, line: 497, baseType: !1753, size: 16, offset: 18976)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !970, file: !971, line: 498, baseType: !998, size: 64, offset: 19008)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !970, file: !971, line: 499, baseType: !1171, size: 64, offset: 19072)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !970, file: !971, line: 500, baseType: !1126, size: 64, offset: 19136)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !970, file: !971, line: 502, baseType: !1010, size: 64, offset: 19200)
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!5945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5946, size: 64)
!5946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5947)
!5947 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1010)
!5948 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !4759, line: 31, baseType: !1041)
!5949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5950, size: 64)
!5950 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !978)
!5951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!5952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port", file: !152, line: 811, size: 120832, elements: !5953)
!5953 = !{!5954, !6162, !6572, !6573, !6574, !6575, !6576, !6577, !6578, !6596, !6597, !6598, !6599, !6600, !6606, !6607, !6608, !6609, !6610, !6611, !6615, !6616, !6617, !6618, !6619, !6620, !6621, !6622, !6623, !6624, !6630, !6631, !6632, !6633, !6634, !6635, !6636, !6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6649, !6650, !6651, !6661}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_host", scope: !5952, file: !152, line: 812, baseType: !5955, size: 64)
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !142, line: 524, size: 16256, elements: !5957)
!5957 = !{!5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965, !5966, !5967, !5968, !6108, !6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6143, !6144, !6146, !6147, !6148, !6149, !6150, !6151, !6152, !6153, !6154, !6155, !6156, !6157, !6158, !6159, !6160, !6161}
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !5956, file: !142, line: 533, baseType: !974, size: 128)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !5956, file: !142, line: 534, baseType: !974, size: 128, offset: 128)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !5956, file: !142, line: 536, baseType: !974, size: 128, offset: 256)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !5956, file: !142, line: 538, baseType: !1085, offset: 384)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !5956, file: !142, line: 539, baseType: !1976, size: 64, offset: 384)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !5956, file: !142, line: 541, baseType: !1567, size: 192, offset: 448)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !5956, file: !142, line: 543, baseType: !974, size: 128, offset: 640)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !5956, file: !142, line: 544, baseType: !2120, size: 64, offset: 768)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !5956, file: !142, line: 545, baseType: !2403, size: 64, offset: 832)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !5956, file: !142, line: 547, baseType: !2384, size: 128, offset: 896)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !5956, file: !142, line: 548, baseType: !5969, size: 64, offset: 1024)
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !142, line: 32, size: 2880, elements: !5971)
!5971 = !{!5972, !5973, !5974, !5978, !5984, !5991, !5992, !5993, !5997, !6001, !6002, !6003, !6004, !6005, !6009, !6010, !6014, !6020, !6024, !6028, !6032, !6036, !6040, !6044, !6048, !6049, !6053, !6057, !6061, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6100, !6101, !6102, !6103, !6104, !6107}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5970, file: !142, line: 33, baseType: !1474, size: 64)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5970, file: !142, line: 34, baseType: !1006, size: 64, offset: 64)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5970, file: !142, line: 43, baseType: !5975, size: 64, offset: 128)
!5975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5976, size: 64)
!5976 = !DISubroutineType(types: !5977)
!5977 = !{!1006, !5955}
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5970, file: !142, line: 50, baseType: !5979, size: 64, offset: 192)
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!181, !5982, !7, !968}
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5983, size: 64)
!5983 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !142, line: 18, flags: DIFlagFwdDecl)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5970, file: !142, line: 65, baseType: !5985, size: 64, offset: 256)
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5986, size: 64)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!181, !5955, !5988}
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5989, size: 64)
!5989 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !5990, line: 15, flags: DIFlagFwdDecl)
!5990 = !DIFile(filename: "./include/scsi/scsi.h", directory: "/home/lizy2001/genbc/linux")
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5970, file: !142, line: 66, baseType: !5985, size: 64, offset: 320)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5970, file: !142, line: 102, baseType: !5985, size: 64, offset: 384)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5970, file: !142, line: 112, baseType: !5994, size: 64, offset: 448)
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{null, !5955, !1753}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5970, file: !142, line: 132, baseType: !5998, size: 64, offset: 512)
!5998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5999, size: 64)
!5999 = !DISubroutineType(types: !6000)
!6000 = !{!181, !5988}
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5970, file: !142, line: 133, baseType: !5998, size: 64, offset: 576)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5970, file: !142, line: 134, baseType: !5998, size: 64, offset: 640)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5970, file: !142, line: 135, baseType: !5998, size: 64, offset: 704)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5970, file: !142, line: 136, baseType: !5998, size: 64, offset: 768)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5970, file: !142, line: 164, baseType: !6006, size: 64, offset: 832)
!6006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6007, size: 64)
!6007 = !DISubroutineType(types: !6008)
!6008 = !{!181, !5982}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5970, file: !142, line: 195, baseType: !6006, size: 64, offset: 896)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5970, file: !142, line: 206, baseType: !6011, size: 64, offset: 960)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{null, !5982}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5970, file: !142, line: 220, baseType: !6015, size: 64, offset: 1024)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!181, !6018}
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64)
!6019 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !142, line: 20, flags: DIFlagFwdDecl)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5970, file: !142, line: 230, baseType: !6021, size: 64, offset: 1088)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{null, !6018}
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5970, file: !142, line: 241, baseType: !6025, size: 64, offset: 1152)
!6025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6026, size: 64)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!181, !5955, !1010}
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5970, file: !142, line: 250, baseType: !6029, size: 64, offset: 1216)
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{null, !5955}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5970, file: !142, line: 263, baseType: !6033, size: 64, offset: 1280)
!6033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6034, size: 64)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!181, !5982, !181}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5970, file: !142, line: 271, baseType: !6037, size: 64, offset: 1344)
!6037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6038, size: 64)
!6038 = !DISubroutineType(types: !6039)
!6039 = !{!181, !5955}
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5970, file: !142, line: 278, baseType: !6041, size: 64, offset: 1408)
!6041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6042, size: 64)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{!1331, !3109}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5970, file: !142, line: 288, baseType: !6045, size: 64, offset: 1472)
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6046, size: 64)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!181, !5982, !2929, !1724, !1549}
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5970, file: !142, line: 297, baseType: !6011, size: 64, offset: 1536)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5970, file: !142, line: 306, baseType: !6050, size: 64, offset: 1600)
!6050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 64)
!6051 = !DISubroutineType(types: !6052)
!6052 = !{!181, !1555, !5955}
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5970, file: !142, line: 307, baseType: !6054, size: 64, offset: 1664)
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!181, !5955, !1126, !181}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5970, file: !142, line: 316, baseType: !6058, size: 64, offset: 1728)
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6059, size: 64)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!94, !5988}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5970, file: !142, line: 326, baseType: !6062, size: 64, offset: 1792)
!6062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6063, size: 64)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!181, !5955, !181}
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5970, file: !142, line: 334, baseType: !1006, size: 64, offset: 1856)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5970, file: !142, line: 340, baseType: !1051, size: 64, offset: 1920)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5970, file: !142, line: 347, baseType: !181, size: 32, offset: 1984)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5970, file: !142, line: 356, baseType: !181, size: 32, offset: 2016)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5970, file: !142, line: 362, baseType: !1064, size: 16, offset: 2048)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5970, file: !142, line: 363, baseType: !1064, size: 16, offset: 2064)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5970, file: !142, line: 368, baseType: !7, size: 32, offset: 2080)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5970, file: !142, line: 373, baseType: !7, size: 32, offset: 2112)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5970, file: !142, line: 379, baseType: !1010, size: 64, offset: 2176)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5970, file: !142, line: 381, baseType: !1010, size: 64, offset: 2240)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5970, file: !142, line: 400, baseType: !2109, size: 16, offset: 2304)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5970, file: !142, line: 406, baseType: !1055, size: 8, offset: 2320)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5970, file: !142, line: 409, baseType: !181, size: 32, offset: 2336)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5970, file: !142, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5970, file: !142, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5970, file: !142, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5970, file: !142, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5970, file: !142, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5970, file: !142, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5970, file: !142, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5970, file: !142, line: 445, baseType: !7, size: 32, offset: 2400)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5970, file: !142, line: 459, baseType: !6087, size: 64, offset: 2432)
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 64)
!6088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6089, size: 64)
!6089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !47, line: 99, size: 256, elements: !6090)
!6090 = !{!6091, !6092, !6096}
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6089, file: !47, line: 100, baseType: !1162, size: 128)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6089, file: !47, line: 101, baseType: !6093, size: 64, offset: 128)
!6093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6094, size: 64)
!6094 = !DISubroutineType(types: !6095)
!6095 = !{!1157, !1068, !6088, !1126}
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6089, file: !47, line: 103, baseType: !6097, size: 64, offset: 192)
!6097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6098, size: 64)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!1157, !1068, !6088, !1006, !1171}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5970, file: !142, line: 464, baseType: !6087, size: 64, offset: 2496)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5970, file: !142, line: 470, baseType: !1177, size: 64, offset: 2560)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5970, file: !142, line: 479, baseType: !999, size: 64, offset: 2624)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5970, file: !142, line: 484, baseType: !7, size: 32, offset: 2688)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5970, file: !142, line: 485, baseType: !6105, size: 64, offset: 2752)
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 64)
!6106 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !142, line: 19, flags: DIFlagFwdDecl)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5970, file: !142, line: 488, baseType: !181, size: 32, offset: 2816)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !5956, file: !142, line: 549, baseType: !6109, size: 64, offset: 1088)
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6110, size: 64)
!6110 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !142, line: 23, flags: DIFlagFwdDecl)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5956, file: !142, line: 552, baseType: !3497, size: 2304, offset: 1152)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !5956, file: !142, line: 554, baseType: !1641, size: 32, offset: 3456)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !5956, file: !142, line: 556, baseType: !7, size: 32, offset: 3488)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !5956, file: !142, line: 558, baseType: !7, size: 32, offset: 3520)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !5956, file: !142, line: 560, baseType: !7, size: 32, offset: 3552)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !5956, file: !142, line: 563, baseType: !181, size: 32, offset: 3584)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !5956, file: !142, line: 564, baseType: !1010, size: 64, offset: 3648)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !5956, file: !142, line: 573, baseType: !7, size: 32, offset: 3712)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !5956, file: !142, line: 574, baseType: !7, size: 32, offset: 3744)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !5956, file: !142, line: 575, baseType: !999, size: 64, offset: 3776)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !5956, file: !142, line: 584, baseType: !7, size: 32, offset: 3840)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !5956, file: !142, line: 593, baseType: !1064, size: 16, offset: 3872)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5956, file: !142, line: 595, baseType: !181, size: 32, offset: 3904)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5956, file: !142, line: 596, baseType: !181, size: 32, offset: 3936)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5956, file: !142, line: 597, baseType: !2109, size: 16, offset: 3968)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5956, file: !142, line: 598, baseType: !1064, size: 16, offset: 3984)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5956, file: !142, line: 599, baseType: !1064, size: 16, offset: 4000)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5956, file: !142, line: 600, baseType: !7, size: 32, offset: 4032)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5956, file: !142, line: 601, baseType: !7, size: 32, offset: 4064)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5956, file: !142, line: 602, baseType: !1010, size: 64, offset: 4096)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5956, file: !142, line: 603, baseType: !1010, size: 64, offset: 4160)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5956, file: !142, line: 612, baseType: !7, size: 32, offset: 4224)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !5956, file: !142, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5956, file: !142, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !5956, file: !142, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !5956, file: !142, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !5956, file: !142, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !5956, file: !142, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !5956, file: !142, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5956, file: !142, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5956, file: !142, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !5956, file: !142, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !5956, file: !142, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5956, file: !142, line: 653, baseType: !6145, size: 160, offset: 4272)
!6145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 160, elements: !4087)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5956, file: !142, line: 654, baseType: !2908, size: 64, offset: 4480)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !5956, file: !142, line: 659, baseType: !2908, size: 64, offset: 4544)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5956, file: !142, line: 664, baseType: !7, size: 32, offset: 4608)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !5956, file: !142, line: 667, baseType: !7, size: 32, offset: 4640)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !5956, file: !142, line: 668, baseType: !1055, size: 8, offset: 4672)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5956, file: !142, line: 671, baseType: !1010, size: 64, offset: 4736)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !5956, file: !142, line: 672, baseType: !1010, size: 64, offset: 4800)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !5956, file: !142, line: 673, baseType: !1055, size: 8, offset: 4864)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !5956, file: !142, line: 674, baseType: !1055, size: 8, offset: 4872)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5956, file: !142, line: 675, baseType: !7, size: 32, offset: 4896)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !5956, file: !142, line: 678, baseType: !141, size: 32, offset: 4928)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !5956, file: !142, line: 681, baseType: !1069, size: 5568, offset: 4992)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !5956, file: !142, line: 681, baseType: !1069, size: 5568, offset: 10560)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !5956, file: !142, line: 687, baseType: !968, size: 64, offset: 16128)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !5956, file: !142, line: 693, baseType: !1068, size: 64, offset: 16192)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5956, file: !142, line: 700, baseType: !4214, align: 64, offset: 16256)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5952, file: !152, line: 813, baseType: !6163, size: 64, offset: 64)
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6164, size: 64)
!6164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_operations", file: !152, line: 896, size: 3904, elements: !6165)
!6165 = !{!6166, !6392, !6393, !6397, !6401, !6405, !6409, !6413, !6417, !6418, !6423, !6429, !6433, !6437, !6438, !6443, !6448, !6449, !6454, !6455, !6456, !6457, !6458, !6459, !6460, !6461, !6462, !6463, !6467, !6471, !6472, !6473, !6477, !6481, !6482, !6483, !6484, !6507, !6511, !6515, !6519, !6520, !6526, !6530, !6531, !6536, !6537, !6541, !6542, !6543, !6544, !6545, !6546, !6547, !6551, !6555, !6559, !6563, !6567, !6568, !6569}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "qc_defer", scope: !6164, file: !152, line: 900, baseType: !6167, size: 64)
!6167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6168, size: 64)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!181, !6170}
!6170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_queued_cmd", file: !152, line: 617, size: 1920, elements: !6172)
!6172 = !{!6173, !6174, !6334, !6335, !6339, !6358, !6360, !6361, !6362, !6363, !6364, !6365, !6366, !6367, !6368, !6369, !6370, !6379, !6381, !6382, !6383, !6384, !6385, !6390, !6391}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6171, file: !152, line: 618, baseType: !5951, size: 64)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6171, file: !152, line: 619, baseType: !6175, size: 64, offset: 64)
!6175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6176, size: 64)
!6176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_device", file: !152, line: 673, size: 16384, elements: !6177)
!6177 = !{!6178, !6228, !6229, !6230, !6231, !6232, !6233, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302, !6303, !6304, !6313, !6315, !6317, !6318, !6319, !6320, !6321, !6322, !6323}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6176, file: !152, line: 674, baseType: !6179, size: 64)
!6179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6180, size: 64)
!6180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_link", file: !152, line: 783, size: 41984, elements: !6181)
!6181 = !{!6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190, !6191, !6192, !6193, !6209, !6225, !6227}
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6180, file: !152, line: 784, baseType: !5951, size: 64)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "pmp", scope: !6180, file: !152, line: 785, baseType: !181, size: 32, offset: 64)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6180, file: !152, line: 787, baseType: !1069, size: 5568, offset: 128)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "active_tag", scope: !6180, file: !152, line: 788, baseType: !7, size: 32, offset: 5696)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "sactive", scope: !6180, file: !152, line: 789, baseType: !1040, size: 32, offset: 5728)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6180, file: !152, line: 791, baseType: !7, size: 32, offset: 5760)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "saved_scontrol", scope: !6180, file: !152, line: 793, baseType: !1040, size: 32, offset: 5792)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "hw_sata_spd_limit", scope: !6180, file: !152, line: 794, baseType: !7, size: 32, offset: 5824)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd_limit", scope: !6180, file: !152, line: 795, baseType: !7, size: 32, offset: 5856)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd", scope: !6180, file: !152, line: 796, baseType: !7, size: 32, offset: 5888)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_policy", scope: !6180, file: !152, line: 797, baseType: !151, size: 32, offset: 5920)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "eh_info", scope: !6180, file: !152, line: 800, baseType: !6194, size: 960, offset: 5952)
!6194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_info", file: !152, line: 744, size: 960, elements: !6195)
!6195 = !{!6196, !6197, !6198, !6199, !6200, !6202, !6203, !6204, !6208}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6194, file: !152, line: 745, baseType: !6175, size: 64)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "serror", scope: !6194, file: !152, line: 746, baseType: !1040, size: 32, offset: 64)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6194, file: !152, line: 747, baseType: !7, size: 32, offset: 96)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6194, file: !152, line: 748, baseType: !7, size: 32, offset: 128)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "dev_action", scope: !6194, file: !152, line: 749, baseType: !6201, size: 64, offset: 160)
!6201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2471)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6194, file: !152, line: 750, baseType: !7, size: 32, offset: 224)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "probe_mask", scope: !6194, file: !152, line: 752, baseType: !7, size: 32, offset: 256)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !6194, file: !152, line: 754, baseType: !6205, size: 640, offset: 288)
!6205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 640, elements: !6206)
!6206 = !{!6207}
!6207 = !DISubrange(count: 80)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !6194, file: !152, line: 755, baseType: !181, size: 32, offset: 928)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "eh_context", scope: !6180, file: !152, line: 802, baseType: !6210, size: 1664, offset: 6912)
!6210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_context", file: !152, line: 758, size: 1664, elements: !6211)
!6211 = !{!6212, !6213, !6215, !6218, !6219, !6220, !6221, !6222, !6224}
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6210, file: !152, line: 759, baseType: !6194, size: 960)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "tries", scope: !6210, file: !152, line: 760, baseType: !6214, size: 64, offset: 960)
!6214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 64, elements: !2471)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_timeout_idx", scope: !6210, file: !152, line: 761, baseType: !6216, size: 384, offset: 1024)
!6216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 384, elements: !6217)
!6217 = !{!2472, !2528}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "classes", scope: !6210, file: !152, line: 763, baseType: !6201, size: 64, offset: 1408)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "did_probe_mask", scope: !6210, file: !152, line: 764, baseType: !7, size: 32, offset: 1472)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "unloaded_mask", scope: !6210, file: !152, line: 765, baseType: !7, size: 32, offset: 1504)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "saved_ncq_enabled", scope: !6210, file: !152, line: 766, baseType: !7, size: 32, offset: 1536)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "saved_xfer_mode", scope: !6210, file: !152, line: 767, baseType: !6223, size: 16, offset: 1568)
!6223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 16, elements: !2471)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !6210, file: !152, line: 769, baseType: !1010, size: 64, offset: 1600)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6180, file: !152, line: 804, baseType: !6226, size: 32768, offset: 8704)
!6226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6176, size: 32768, elements: !2471)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "last_lpm_change", scope: !6180, file: !152, line: 806, baseType: !1010, size: 64, offset: 41472)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "devno", scope: !6176, file: !152, line: 675, baseType: !7, size: 32, offset: 64)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "horkage", scope: !6176, file: !152, line: 676, baseType: !7, size: 32, offset: 96)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6176, file: !152, line: 677, baseType: !1010, size: 64, offset: 128)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "sdev", scope: !6176, file: !152, line: 678, baseType: !5982, size: 64, offset: 192)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6176, file: !152, line: 679, baseType: !968, size: 64, offset: 256)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_cache", scope: !6176, file: !152, line: 681, baseType: !6234, size: 64, offset: 320)
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6235, size: 64)
!6235 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !6236, line: 899, size: 192, elements: !6237)
!6236 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!6237 = !{!6238, !6240, !6245, !6251, !6258, !6264, !6271, !6279}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6235, file: !6236, line: 900, baseType: !6239, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !6236, line: 635, baseType: !1040)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !6235, file: !6236, line: 904, baseType: !6241, size: 128)
!6241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6235, file: !6236, line: 901, size: 128, elements: !6242)
!6242 = !{!6243, !6244}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6241, file: !6236, line: 902, baseType: !6239, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6241, file: !6236, line: 903, baseType: !999, size: 64, offset: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6235, file: !6236, line: 910, baseType: !6246, size: 128)
!6246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6235, file: !6236, line: 906, size: 128, elements: !6247)
!6247 = !{!6248, !6249, !6250}
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6246, file: !6236, line: 907, baseType: !6239, size: 32)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6246, file: !6236, line: 908, baseType: !1040, size: 32, offset: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6246, file: !6236, line: 909, baseType: !1126, size: 64, offset: 64)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6235, file: !6236, line: 916, baseType: !6252, size: 128)
!6252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6235, file: !6236, line: 912, size: 128, elements: !6253)
!6253 = !{!6254, !6255, !6256}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6252, file: !6236, line: 913, baseType: !6239, size: 32)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6252, file: !6236, line: 914, baseType: !1040, size: 32, offset: 32)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6252, file: !6236, line: 915, baseType: !6257, size: 64, offset: 64)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !6235, file: !6236, line: 922, baseType: !6259, size: 128)
!6259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6235, file: !6236, line: 918, size: 128, elements: !6260)
!6260 = !{!6261, !6262, !6263}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6259, file: !6236, line: 919, baseType: !6239, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6259, file: !6236, line: 920, baseType: !1040, size: 32, offset: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !6259, file: !6236, line: 921, baseType: !6234, size: 64, offset: 64)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !6235, file: !6236, line: 928, baseType: !6265, size: 128)
!6265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6235, file: !6236, line: 924, size: 128, elements: !6266)
!6266 = !{!6267, !6268, !6269}
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6265, file: !6236, line: 925, baseType: !6239, size: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !6265, file: !6236, line: 926, baseType: !6239, size: 32, offset: 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !6265, file: !6236, line: 927, baseType: !6270, size: 64, offset: 64)
!6270 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !6236, line: 424, baseType: !968)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !6235, file: !6236, line: 935, baseType: !6272, size: 192)
!6272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6235, file: !6236, line: 930, size: 192, elements: !6273)
!6273 = !{!6274, !6275, !6276, !6278}
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6272, file: !6236, line: 931, baseType: !6239, size: 32)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !6272, file: !6236, line: 932, baseType: !1040, size: 32, offset: 32)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !6272, file: !6236, line: 933, baseType: !6277, size: 64, offset: 64)
!6277 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !6236, line: 128, baseType: !999)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !6272, file: !6236, line: 934, baseType: !1040, size: 32, offset: 128)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !6235, file: !6236, line: 941, baseType: !6280, size: 96)
!6280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6235, file: !6236, line: 937, size: 96, elements: !6281)
!6281 = !{!6282, !6283, !6284}
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6280, file: !6236, line: 938, baseType: !6239, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !6280, file: !6236, line: 939, baseType: !1040, size: 32, offset: 32)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !6280, file: !6236, line: 940, baseType: !1040, size: 32, offset: 64)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_filter", scope: !6176, file: !152, line: 682, baseType: !7, size: 32, offset: 384)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6176, file: !152, line: 687, baseType: !1069, size: 5568, offset: 448)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "n_sectors", scope: !6176, file: !152, line: 689, baseType: !999, size: 64, offset: 6016)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "n_native_sectors", scope: !6176, file: !152, line: 690, baseType: !999, size: 64, offset: 6080)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6176, file: !152, line: 691, baseType: !7, size: 32, offset: 6144)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "unpark_deadline", scope: !6176, file: !152, line: 692, baseType: !1010, size: 64, offset: 6208)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mode", scope: !6176, file: !152, line: 694, baseType: !2256, size: 8, offset: 6272)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mode", scope: !6176, file: !152, line: 695, baseType: !2256, size: 8, offset: 6280)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_mode", scope: !6176, file: !152, line: 696, baseType: !2256, size: 8, offset: 6288)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_shift", scope: !6176, file: !152, line: 697, baseType: !7, size: 32, offset: 6304)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "multi_count", scope: !6176, file: !152, line: 699, baseType: !7, size: 32, offset: 6336)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !6176, file: !152, line: 701, baseType: !7, size: 32, offset: 6368)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !6176, file: !152, line: 702, baseType: !7, size: 32, offset: 6400)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !6176, file: !152, line: 705, baseType: !1010, size: 64, offset: 6464)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !6176, file: !152, line: 706, baseType: !1010, size: 64, offset: 6528)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !6176, file: !152, line: 707, baseType: !1010, size: 64, offset: 6592)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !6176, file: !152, line: 710, baseType: !1753, size: 16, offset: 6656)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !6176, file: !152, line: 711, baseType: !1753, size: 16, offset: 6672)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !6176, file: !152, line: 712, baseType: !1753, size: 16, offset: 6688)
!6304 = !DIDerivedType(tag: DW_TAG_member, scope: !6176, file: !152, line: 714, baseType: !6305, size: 4096, align: 512, offset: 7168)
!6305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6176, file: !152, line: 714, size: 4096, align: 512, elements: !6306)
!6306 = !{!6307, !6311}
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6305, file: !152, line: 715, baseType: !6308, size: 4096)
!6308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1753, size: 4096, elements: !6309)
!6309 = !{!6310}
!6310 = !DISubrange(count: 256)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "gscr", scope: !6305, file: !152, line: 716, baseType: !6312, size: 4096)
!6312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 4096, elements: !5298)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "devslp_timing", scope: !6176, file: !152, line: 720, baseType: !6314, size: 64, offset: 11264)
!6314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 64, elements: !2234)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_send_recv_cmds", scope: !6176, file: !152, line: 723, baseType: !6316, size: 160, offset: 11328)
!6316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 160, elements: !4087)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_non_data_cmds", scope: !6176, file: !152, line: 724, baseType: !2891, size: 512, offset: 11488)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zoned_cap", scope: !6176, file: !152, line: 727, baseType: !1040, size: 32, offset: 12000)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_open", scope: !6176, file: !152, line: 728, baseType: !1040, size: 32, offset: 12032)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_nonseq", scope: !6176, file: !152, line: 729, baseType: !1040, size: 32, offset: 12064)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_max_open", scope: !6176, file: !152, line: 730, baseType: !1040, size: 32, offset: 12096)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "spdn_cnt", scope: !6176, file: !152, line: 733, baseType: !181, size: 32, offset: 12128)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "ering", scope: !6176, file: !152, line: 735, baseType: !6324, size: 4160, offset: 12160)
!6324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering", file: !152, line: 668, size: 4160, elements: !6325)
!6325 = !{!6326, !6327}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !6324, file: !152, line: 669, baseType: !181, size: 32)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !6324, file: !152, line: 670, baseType: !6328, size: 4096, offset: 64)
!6328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6329, size: 4096, elements: !2837)
!6329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering_entry", file: !152, line: 662, size: 128, elements: !6330)
!6330 = !{!6331, !6332, !6333}
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "eflags", scope: !6329, file: !152, line: 663, baseType: !7, size: 32)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6329, file: !152, line: 664, baseType: !7, size: 32, offset: 32)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !6329, file: !152, line: 665, baseType: !999, size: 64, offset: 64)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "scsicmd", scope: !6171, file: !152, line: 621, baseType: !5988, size: 64, offset: 128)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "scsidone", scope: !6171, file: !152, line: 622, baseType: !6336, size: 64, offset: 192)
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 64)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{null, !5988}
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !6171, file: !152, line: 624, baseType: !6340, size: 256, offset: 256)
!6340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_taskfile", file: !152, line: 550, size: 256, elements: !6341)
!6341 = !{!6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349, !6350, !6351, !6352, !6353, !6354, !6355, !6356, !6357}
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6340, file: !152, line: 551, baseType: !1010, size: 64)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !6340, file: !152, line: 552, baseType: !2256, size: 8, offset: 64)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6340, file: !152, line: 554, baseType: !2256, size: 8, offset: 72)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "hob_feature", scope: !6340, file: !152, line: 556, baseType: !2256, size: 8, offset: 80)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "hob_nsect", scope: !6340, file: !152, line: 557, baseType: !2256, size: 8, offset: 88)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbal", scope: !6340, file: !152, line: 558, baseType: !2256, size: 8, offset: 96)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbam", scope: !6340, file: !152, line: 559, baseType: !2256, size: 8, offset: 104)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbah", scope: !6340, file: !152, line: 560, baseType: !2256, size: 8, offset: 112)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "feature", scope: !6340, file: !152, line: 562, baseType: !2256, size: 8, offset: 120)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "nsect", scope: !6340, file: !152, line: 563, baseType: !2256, size: 8, offset: 128)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "lbal", scope: !6340, file: !152, line: 564, baseType: !2256, size: 8, offset: 136)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "lbam", scope: !6340, file: !152, line: 565, baseType: !2256, size: 8, offset: 144)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "lbah", scope: !6340, file: !152, line: 566, baseType: !2256, size: 8, offset: 152)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6340, file: !152, line: 568, baseType: !2256, size: 8, offset: 160)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !6340, file: !152, line: 570, baseType: !2256, size: 8, offset: 168)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "auxiliary", scope: !6340, file: !152, line: 572, baseType: !1040, size: 32, offset: 192)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !6171, file: !152, line: 625, baseType: !6359, size: 128, offset: 512)
!6359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 128, elements: !2637)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6171, file: !152, line: 627, baseType: !1010, size: 64, offset: 640)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6171, file: !152, line: 628, baseType: !7, size: 32, offset: 704)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "hw_tag", scope: !6171, file: !152, line: 629, baseType: !7, size: 32, offset: 736)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "n_elem", scope: !6171, file: !152, line: 630, baseType: !7, size: 32, offset: 768)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "orig_n_elem", scope: !6171, file: !152, line: 631, baseType: !7, size: 32, offset: 800)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !6171, file: !152, line: 633, baseType: !181, size: 32, offset: 832)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "sect_size", scope: !6171, file: !152, line: 635, baseType: !7, size: 32, offset: 864)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !6171, file: !152, line: 637, baseType: !7, size: 32, offset: 896)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "extrabytes", scope: !6171, file: !152, line: 638, baseType: !7, size: 32, offset: 928)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "curbytes", scope: !6171, file: !152, line: 639, baseType: !7, size: 32, offset: 960)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "sgent", scope: !6171, file: !152, line: 641, baseType: !6371, size: 256, offset: 1024)
!6371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !6372, line: 11, size: 256, elements: !6373)
!6372 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!6373 = !{!6374, !6375, !6376, !6377, !6378}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !6371, file: !6372, line: 12, baseType: !1010, size: 64)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6371, file: !6372, line: 13, baseType: !7, size: 32, offset: 64)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6371, file: !6372, line: 14, baseType: !7, size: 32, offset: 96)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !6371, file: !6372, line: 15, baseType: !1831, size: 64, offset: 128)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !6371, file: !6372, line: 17, baseType: !7, size: 32, offset: 192)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !6171, file: !152, line: 643, baseType: !6380, size: 64, offset: 1280)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6371, size: 64)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "cursg", scope: !6171, file: !152, line: 645, baseType: !6380, size: 64, offset: 1344)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "cursg_ofs", scope: !6171, file: !152, line: 646, baseType: !7, size: 32, offset: 1408)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6171, file: !152, line: 648, baseType: !7, size: 32, offset: 1440)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "result_tf", scope: !6171, file: !152, line: 649, baseType: !6340, size: 256, offset: 1472)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !6171, file: !152, line: 650, baseType: !6386, size: 64, offset: 1728)
!6386 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_qc_cb_t", file: !152, line: 529, baseType: !6387)
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6388, size: 64)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{null, !6170}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6171, file: !152, line: 652, baseType: !968, size: 64, offset: 1792)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "lldd_task", scope: !6171, file: !152, line: 653, baseType: !968, size: 64, offset: 1856)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "check_atapi_dma", scope: !6164, file: !152, line: 901, baseType: !6167, size: 64, offset: 64)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "qc_prep", scope: !6164, file: !152, line: 902, baseType: !6394, size: 64, offset: 128)
!6394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6395, size: 64)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{!160, !6170}
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "qc_issue", scope: !6164, file: !152, line: 903, baseType: !6398, size: 64, offset: 192)
!6398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6399, size: 64)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{!7, !6170}
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "qc_fill_rtf", scope: !6164, file: !152, line: 904, baseType: !6402, size: 64, offset: 256)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!1331, !6170}
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "cable_detect", scope: !6164, file: !152, line: 909, baseType: !6406, size: 64, offset: 320)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 64)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!181, !5951}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "mode_filter", scope: !6164, file: !152, line: 910, baseType: !6410, size: 64, offset: 384)
!6410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 64)
!6411 = !DISubroutineType(types: !6412)
!6412 = !{!1010, !6175, !1010}
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "set_piomode", scope: !6164, file: !152, line: 911, baseType: !6414, size: 64, offset: 448)
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6415, size: 64)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{null, !5951, !6175}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "set_dmamode", scope: !6164, file: !152, line: 912, baseType: !6414, size: 64, offset: 512)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !6164, file: !152, line: 913, baseType: !6419, size: 64, offset: 576)
!6419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6420, size: 64)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!181, !6179, !6422}
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6175, size: 64)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "read_id", scope: !6164, file: !152, line: 914, baseType: !6424, size: 64, offset: 640)
!6424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6425, size: 64)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!7, !6175, !6427, !6428}
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 64)
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "dev_config", scope: !6164, file: !152, line: 916, baseType: !6430, size: 64, offset: 704)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{null, !6175}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6164, file: !152, line: 918, baseType: !6434, size: 64, offset: 768)
!6434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6435, size: 64)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{null, !5951}
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6164, file: !152, line: 919, baseType: !6434, size: 64, offset: 832)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "prereset", scope: !6164, file: !152, line: 920, baseType: !6439, size: 64, offset: 896)
!6439 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_prereset_fn_t", file: !152, line: 530, baseType: !6440)
!6440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6441, size: 64)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{!181, !6179, !1010}
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "softreset", scope: !6164, file: !152, line: 921, baseType: !6444, size: 64, offset: 960)
!6444 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_reset_fn_t", file: !152, line: 531, baseType: !6445)
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6446, size: 64)
!6446 = !DISubroutineType(types: !6447)
!6447 = !{!181, !6179, !3504, !1010}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "hardreset", scope: !6164, file: !152, line: 922, baseType: !6444, size: 64, offset: 1024)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "postreset", scope: !6164, file: !152, line: 923, baseType: !6450, size: 64, offset: 1088)
!6450 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_postreset_fn_t", file: !152, line: 533, baseType: !6451)
!6451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6452, size: 64)
!6452 = !DISubroutineType(types: !6453)
!6453 = !{null, !6179, !3504}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_prereset", scope: !6164, file: !152, line: 924, baseType: !6439, size: 64, offset: 1152)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_softreset", scope: !6164, file: !152, line: 925, baseType: !6444, size: 64, offset: 1216)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_hardreset", scope: !6164, file: !152, line: 926, baseType: !6444, size: 64, offset: 1280)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_postreset", scope: !6164, file: !152, line: 927, baseType: !6450, size: 64, offset: 1344)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "error_handler", scope: !6164, file: !152, line: 928, baseType: !6434, size: 64, offset: 1408)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "lost_interrupt", scope: !6164, file: !152, line: 929, baseType: !6434, size: 64, offset: 1472)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "post_internal_cmd", scope: !6164, file: !152, line: 930, baseType: !6387, size: 64, offset: 1536)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "sched_eh", scope: !6164, file: !152, line: 931, baseType: !6434, size: 64, offset: 1600)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "end_eh", scope: !6164, file: !152, line: 932, baseType: !6434, size: 64, offset: 1664)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "scr_read", scope: !6164, file: !152, line: 937, baseType: !6464, size: 64, offset: 1728)
!6464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6465, size: 64)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!181, !6179, !7, !1039}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "scr_write", scope: !6164, file: !152, line: 938, baseType: !6468, size: 64, offset: 1792)
!6468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6469, size: 64)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{!181, !6179, !7, !1040}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_attach", scope: !6164, file: !152, line: 939, baseType: !6434, size: 64, offset: 1856)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_detach", scope: !6164, file: !152, line: 940, baseType: !6434, size: 64, offset: 1920)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "set_lpm", scope: !6164, file: !152, line: 941, baseType: !6474, size: 64, offset: 1984)
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6475, size: 64)
!6475 = !DISubroutineType(types: !6476)
!6476 = !{!181, !6179, !151, !7}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "port_suspend", scope: !6164, file: !152, line: 947, baseType: !6478, size: 64, offset: 2048)
!6478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 64)
!6479 = !DISubroutineType(types: !6480)
!6480 = !{!181, !5951, !5322}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "port_resume", scope: !6164, file: !152, line: 948, baseType: !6406, size: 64, offset: 2112)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "port_start", scope: !6164, file: !152, line: 949, baseType: !6406, size: 64, offset: 2176)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "port_stop", scope: !6164, file: !152, line: 950, baseType: !6434, size: 64, offset: 2240)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "host_stop", scope: !6164, file: !152, line: 951, baseType: !6485, size: 64, offset: 2304)
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6486, size: 64)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{null, !6488}
!6488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6489, size: 64)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_host", file: !152, line: 599, size: 768, elements: !6490)
!6490 = !{!6491, !6492, !6493, !6496, !6497, !6498, !6499, !6500, !6501, !6502, !6503, !6504, !6505}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6489, file: !152, line: 600, baseType: !1085)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6489, file: !152, line: 601, baseType: !1068, size: 64)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "iomap", scope: !6489, file: !152, line: 602, baseType: !6494, size: 64, offset: 64)
!6494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6495, size: 64)
!6495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "n_ports", scope: !6489, file: !152, line: 603, baseType: !7, size: 32, offset: 128)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "n_tags", scope: !6489, file: !152, line: 604, baseType: !7, size: 32, offset: 160)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6489, file: !152, line: 605, baseType: !968, size: 64, offset: 192)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6489, file: !152, line: 606, baseType: !6163, size: 64, offset: 256)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6489, file: !152, line: 607, baseType: !1010, size: 64, offset: 320)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6489, file: !152, line: 608, baseType: !2958, size: 32, offset: 384)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "eh_mutex", scope: !6489, file: !152, line: 610, baseType: !1567, size: 192, offset: 448)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "eh_owner", scope: !6489, file: !152, line: 611, baseType: !2120, size: 64, offset: 640)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "simplex_claimed", scope: !6489, file: !152, line: 613, baseType: !5951, size: 64, offset: 704)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !6489, file: !152, line: 614, baseType: !6506, offset: 768)
!6506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5951, elements: !2912)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "sff_dev_select", scope: !6164, file: !152, line: 957, baseType: !6508, size: 64, offset: 2368)
!6508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6509, size: 64)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{null, !5951, !7}
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "sff_set_devctl", scope: !6164, file: !152, line: 958, baseType: !6512, size: 64, offset: 2432)
!6512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6513, size: 64)
!6513 = !DISubroutineType(types: !6514)
!6514 = !{null, !5951, !2256}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_status", scope: !6164, file: !152, line: 959, baseType: !6516, size: 64, offset: 2496)
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 64)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{!2256, !5951}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_altstatus", scope: !6164, file: !152, line: 960, baseType: !6516, size: 64, offset: 2560)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_load", scope: !6164, file: !152, line: 961, baseType: !6521, size: 64, offset: 2624)
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6522, size: 64)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{null, !5951, !6524}
!6524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6525, size: 64)
!6525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6340)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_read", scope: !6164, file: !152, line: 962, baseType: !6527, size: 64, offset: 2688)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 64)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{null, !5951, !6427}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "sff_exec_command", scope: !6164, file: !152, line: 963, baseType: !6521, size: 64, offset: 2752)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "sff_data_xfer", scope: !6164, file: !152, line: 965, baseType: !6532, size: 64, offset: 2816)
!6532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6533, size: 64)
!6533 = !DISubroutineType(types: !6534)
!6534 = !{!7, !6170, !6535, !7, !181}
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_on", scope: !6164, file: !152, line: 967, baseType: !6434, size: 64, offset: 2880)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_check", scope: !6164, file: !152, line: 968, baseType: !6538, size: 64, offset: 2944)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!1331, !5951}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_clear", scope: !6164, file: !152, line: 969, baseType: !6434, size: 64, offset: 3008)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "sff_drain_fifo", scope: !6164, file: !152, line: 970, baseType: !6387, size: 64, offset: 3072)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_setup", scope: !6164, file: !152, line: 973, baseType: !6387, size: 64, offset: 3136)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_start", scope: !6164, file: !152, line: 974, baseType: !6387, size: 64, offset: 3200)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_stop", scope: !6164, file: !152, line: 975, baseType: !6387, size: 64, offset: 3264)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_status", scope: !6164, file: !152, line: 976, baseType: !6516, size: 64, offset: 3328)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "em_show", scope: !6164, file: !152, line: 980, baseType: !6548, size: 64, offset: 3392)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 64)
!6549 = !DISubroutineType(types: !6550)
!6550 = !{!1157, !5951, !1126}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "em_store", scope: !6164, file: !152, line: 981, baseType: !6552, size: 64, offset: 3456)
!6552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6553, size: 64)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{!1157, !5951, !1006, !1171}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_show", scope: !6164, file: !152, line: 983, baseType: !6556, size: 64, offset: 3520)
!6556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6557, size: 64)
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!1157, !6175, !1126}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_store", scope: !6164, file: !152, line: 984, baseType: !6560, size: 64, offset: 3584)
!6560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6561, size: 64)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{!1157, !6175, !174}
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_led_message", scope: !6164, file: !152, line: 986, baseType: !6564, size: 64, offset: 3648)
!6564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6565, size: 64)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{!1157, !5951, !1040, !1157}
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "phy_reset", scope: !6164, file: !152, line: 992, baseType: !6434, size: 64, offset: 3712)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "eng_timeout", scope: !6164, file: !152, line: 993, baseType: !6434, size: 64, offset: 3776)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "inherits", scope: !6164, file: !152, line: 999, baseType: !6570, size: 64, offset: 3840)
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 64)
!6571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6164)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5952, file: !152, line: 814, baseType: !1976, size: 64, offset: 128)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5952, file: !152, line: 817, baseType: !1010, size: 64, offset: 192)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "pflags", scope: !5952, file: !152, line: 819, baseType: !7, size: 32, offset: 256)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "print_id", scope: !5952, file: !152, line: 820, baseType: !7, size: 32, offset: 288)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "local_port_no", scope: !5952, file: !152, line: 821, baseType: !7, size: 32, offset: 320)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "port_no", scope: !5952, file: !152, line: 822, baseType: !7, size: 32, offset: 352)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !5952, file: !152, line: 825, baseType: !6579, size: 960, offset: 384)
!6579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ioports", file: !152, line: 578, size: 960, elements: !6580)
!6580 = !{!6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_addr", scope: !6579, file: !152, line: 579, baseType: !968, size: 64)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !6579, file: !152, line: 580, baseType: !968, size: 64, offset: 64)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "error_addr", scope: !6579, file: !152, line: 581, baseType: !968, size: 64, offset: 128)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "feature_addr", scope: !6579, file: !152, line: 582, baseType: !968, size: 64, offset: 192)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "nsect_addr", scope: !6579, file: !152, line: 583, baseType: !968, size: 64, offset: 256)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "lbal_addr", scope: !6579, file: !152, line: 584, baseType: !968, size: 64, offset: 320)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "lbam_addr", scope: !6579, file: !152, line: 585, baseType: !968, size: 64, offset: 384)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "lbah_addr", scope: !6579, file: !152, line: 586, baseType: !968, size: 64, offset: 448)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "device_addr", scope: !6579, file: !152, line: 587, baseType: !968, size: 64, offset: 512)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "status_addr", scope: !6579, file: !152, line: 588, baseType: !968, size: 64, offset: 576)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "command_addr", scope: !6579, file: !152, line: 589, baseType: !968, size: 64, offset: 640)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "altstatus_addr", scope: !6579, file: !152, line: 590, baseType: !968, size: 64, offset: 704)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_addr", scope: !6579, file: !152, line: 591, baseType: !968, size: 64, offset: 768)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_addr", scope: !6579, file: !152, line: 593, baseType: !968, size: 64, offset: 832)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "scr_addr", scope: !6579, file: !152, line: 595, baseType: !968, size: 64, offset: 896)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !5952, file: !152, line: 826, baseType: !2256, size: 8, offset: 1344)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "last_ctl", scope: !5952, file: !152, line: 827, baseType: !2256, size: 8, offset: 1352)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task_link", scope: !5952, file: !152, line: 828, baseType: !6179, size: 64, offset: 1408)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task", scope: !5952, file: !152, line: 829, baseType: !3004, size: 704, offset: 1472)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd", scope: !5952, file: !152, line: 831, baseType: !6601, size: 64, offset: 2176)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 64)
!6602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_bmdma_prd", file: !180, line: 546, size: 64, elements: !6603)
!6603 = !{!6604, !6605}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6602, file: !180, line: 547, baseType: !5948, size: 32)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "flags_len", scope: !6602, file: !180, line: 548, baseType: !5948, size: 32, offset: 32)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd_dma", scope: !5952, file: !152, line: 832, baseType: !1831, size: 64, offset: 2240)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !5952, file: !152, line: 836, baseType: !7, size: 32, offset: 2304)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !5952, file: !152, line: 837, baseType: !7, size: 32, offset: 2336)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !5952, file: !152, line: 838, baseType: !7, size: 32, offset: 2368)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "cbl", scope: !5952, file: !152, line: 839, baseType: !7, size: 32, offset: 2400)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "qcmd", scope: !5952, file: !152, line: 841, baseType: !6612, size: 63360, offset: 2432)
!6612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6171, size: 63360, elements: !6613)
!6613 = !{!6614}
!6614 = !DISubrange(count: 33)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "sas_tag_allocated", scope: !5952, file: !152, line: 842, baseType: !1010, size: 64, offset: 65792)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "qc_active", scope: !5952, file: !152, line: 843, baseType: !999, size: 64, offset: 65856)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_links", scope: !5952, file: !152, line: 844, baseType: !181, size: 32, offset: 65920)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "sas_last_tag", scope: !5952, file: !152, line: 845, baseType: !7, size: 32, offset: 65952)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5952, file: !152, line: 847, baseType: !6180, size: 41984, offset: 66048)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "slave_link", scope: !5952, file: !152, line: 848, baseType: !6179, size: 64, offset: 108032)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pmp_links", scope: !5952, file: !152, line: 850, baseType: !181, size: 32, offset: 108096)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_link", scope: !5952, file: !152, line: 851, baseType: !6179, size: 64, offset: 108160)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "excl_link", scope: !5952, file: !152, line: 852, baseType: !6179, size: 64, offset: 108224)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5952, file: !152, line: 854, baseType: !6625, size: 192, offset: 108288)
!6625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_stats", file: !152, line: 656, size: 192, elements: !6626)
!6626 = !{!6627, !6628, !6629}
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "unhandled_irq", scope: !6625, file: !152, line: 657, baseType: !1010, size: 64)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "idle_irq", scope: !6625, file: !152, line: 658, baseType: !1010, size: 64, offset: 64)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "rw_reqbuf", scope: !6625, file: !152, line: 659, baseType: !1010, size: 64, offset: 128)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5952, file: !152, line: 855, baseType: !6488, size: 64, offset: 108480)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5952, file: !152, line: 856, baseType: !1068, size: 64, offset: 108544)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !5952, file: !152, line: 857, baseType: !1069, size: 5568, offset: 108608)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_scan_mutex", scope: !5952, file: !152, line: 859, baseType: !1567, size: 192, offset: 114176)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_task", scope: !5952, file: !152, line: 860, baseType: !3004, size: 704, offset: 114368)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_rescan_task", scope: !5952, file: !152, line: 861, baseType: !2896, size: 256, offset: 115072)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "hsm_task_state", scope: !5952, file: !152, line: 863, baseType: !7, size: 32, offset: 115328)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !5952, file: !152, line: 865, baseType: !1040, size: 32, offset: 115360)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "eh_done_q", scope: !5952, file: !152, line: 866, baseType: !974, size: 128, offset: 115392)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "eh_wait_q", scope: !5952, file: !152, line: 867, baseType: !2384, size: 128, offset: 115520)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "eh_tries", scope: !5952, file: !152, line: 868, baseType: !181, size: 32, offset: 115648)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "park_req_pending", scope: !5952, file: !152, line: 869, baseType: !2404, size: 192, offset: 115712)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "pm_mesg", scope: !5952, file: !152, line: 871, baseType: !5322, size: 32, offset: 115904)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "target_lpm_policy", scope: !5952, file: !152, line: 872, baseType: !151, size: 32, offset: 115936)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_timer", scope: !5952, file: !152, line: 874, baseType: !3008, size: 320, offset: 115968)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_cnt", scope: !5952, file: !152, line: 875, baseType: !1010, size: 64, offset: 116288)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !5952, file: !152, line: 877, baseType: !6647, size: 64, offset: 116352)
!6647 = !DIDerivedType(tag: DW_TAG_typedef, name: "async_cookie_t", file: !6648, line: 16, baseType: !999)
!6648 = !DIFile(filename: "./include/linux/async.h", directory: "/home/lizy2001/genbc/linux")
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "em_message_type", scope: !5952, file: !152, line: 879, baseType: !181, size: 32, offset: 116416)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !5952, file: !152, line: 880, baseType: !968, size: 64, offset: 116480)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "__acpi_init_gtm", scope: !5952, file: !152, line: 883, baseType: !6652, size: 160, offset: 116544)
!6652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_gtm", file: !152, line: 778, size: 160, elements: !6653)
!6653 = !{!6654, !6660}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "drive", scope: !6652, file: !152, line: 779, baseType: !6655, size: 128)
!6655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6656, size: 128, elements: !2471)
!6656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_drive", file: !152, line: 772, size: 64, elements: !6657)
!6657 = !{!6658, !6659}
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "pio", scope: !6656, file: !152, line: 774, baseType: !1040, size: 32)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !6656, file: !152, line: 775, baseType: !1040, size: 32, offset: 32)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6652, file: !152, line: 780, baseType: !1040, size: 32, offset: 128)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "sector_buf", scope: !5952, file: !152, line: 886, baseType: !6662, size: 4096, align: 512, offset: 116736)
!6662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 4096, elements: !6663)
!6663 = !{!6664}
!6664 = !DISubrange(count: 512)
!6665 = !{!0, !6666, !6668, !6670}
!6666 = !DIGlobalVariableExpression(var: !6667, expr: !DIExpression())
!6667 = distinct !DIGlobalVariable(name: "ata_bmdma_port_ops", scope: !2, file: !3, line: 2533, type: !6571, isLocal: false, isDefinition: true)
!6668 = !DIGlobalVariableExpression(var: !6669, expr: !DIExpression())
!6669 = distinct !DIGlobalVariable(name: "ata_bmdma32_port_ops", scope: !2, file: !3, line: 2552, type: !6571, isLocal: false, isDefinition: true)
!6670 = !DIGlobalVariableExpression(var: !6671, expr: !DIExpression())
!6671 = distinct !DIGlobalVariable(name: "ata_sff_wq", scope: !2, file: !3, line: 24, type: !2908, isLocal: true, isDefinition: true)
!6672 = !{!"rsp"}
!6673 = !{i32 7, !"Dwarf Version", i32 4}
!6674 = !{i32 2, !"Debug Info Version", i32 3}
!6675 = !{i32 1, !"wchar_size", i32 2}
!6676 = !{i32 1, !"Code Model", i32 2}
!6677 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6678 = distinct !DISubprogram(name: "ata_sff_qc_issue", scope: !3, file: !3, line: 1340, type: !6399, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!6679 = !DILocalVariable(name: "qc", arg: 1, scope: !6678, file: !3, line: 1340, type: !6170)
!6680 = !DILocation(line: 1340, column: 54, scope: !6678)
!6681 = !DILocalVariable(name: "ap", scope: !6678, file: !3, line: 1342, type: !5951)
!6682 = !DILocation(line: 1342, column: 19, scope: !6678)
!6683 = !DILocation(line: 1342, column: 24, scope: !6678)
!6684 = !DILocation(line: 1342, column: 28, scope: !6678)
!6685 = !DILocalVariable(name: "link", scope: !6678, file: !3, line: 1343, type: !6179)
!6686 = !DILocation(line: 1343, column: 19, scope: !6678)
!6687 = !DILocation(line: 1343, column: 26, scope: !6678)
!6688 = !DILocation(line: 1343, column: 30, scope: !6678)
!6689 = !DILocation(line: 1343, column: 35, scope: !6678)
!6690 = !DILocation(line: 1348, column: 6, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1348, column: 6)
!6692 = !DILocation(line: 1348, column: 10, scope: !6691)
!6693 = !DILocation(line: 1348, column: 16, scope: !6691)
!6694 = !DILocation(line: 1348, column: 6, scope: !6678)
!6695 = !DILocation(line: 1349, column: 3, scope: !6691)
!6696 = !DILocation(line: 1349, column: 7, scope: !6691)
!6697 = !DILocation(line: 1349, column: 10, scope: !6691)
!6698 = !DILocation(line: 1349, column: 16, scope: !6691)
!6699 = !DILocation(line: 1352, column: 17, scope: !6678)
!6700 = !DILocation(line: 1352, column: 21, scope: !6678)
!6701 = !DILocation(line: 1352, column: 25, scope: !6678)
!6702 = !DILocation(line: 1352, column: 30, scope: !6678)
!6703 = !DILocation(line: 1352, column: 2, scope: !6678)
!6704 = !DILocation(line: 1355, column: 10, scope: !6678)
!6705 = !DILocation(line: 1355, column: 14, scope: !6678)
!6706 = !DILocation(line: 1355, column: 17, scope: !6678)
!6707 = !DILocation(line: 1355, column: 2, scope: !6678)
!6708 = !DILocation(line: 1357, column: 7, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1357, column: 7)
!6710 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1355, column: 27)
!6711 = !DILocation(line: 1357, column: 11, scope: !6709)
!6712 = !DILocation(line: 1357, column: 14, scope: !6709)
!6713 = !DILocation(line: 1357, column: 20, scope: !6709)
!6714 = !DILocation(line: 1357, column: 7, scope: !6710)
!6715 = !DILocation(line: 1358, column: 23, scope: !6709)
!6716 = !DILocation(line: 1358, column: 4, scope: !6709)
!6717 = !DILocation(line: 1360, column: 18, scope: !6710)
!6718 = !DILocation(line: 1360, column: 23, scope: !6710)
!6719 = !DILocation(line: 1360, column: 27, scope: !6710)
!6720 = !DILocation(line: 1360, column: 3, scope: !6710)
!6721 = !DILocation(line: 1361, column: 3, scope: !6710)
!6722 = !DILocation(line: 1361, column: 7, scope: !6710)
!6723 = !DILocation(line: 1361, column: 22, scope: !6710)
!6724 = !DILocation(line: 1363, column: 7, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1363, column: 7)
!6726 = !DILocation(line: 1363, column: 11, scope: !6725)
!6727 = !DILocation(line: 1363, column: 14, scope: !6725)
!6728 = !DILocation(line: 1363, column: 20, scope: !6725)
!6729 = !DILocation(line: 1363, column: 7, scope: !6710)
!6730 = !DILocation(line: 1364, column: 27, scope: !6725)
!6731 = !DILocation(line: 1364, column: 4, scope: !6725)
!6732 = !DILocation(line: 1366, column: 3, scope: !6710)
!6733 = !DILocation(line: 1369, column: 7, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1369, column: 7)
!6735 = !DILocation(line: 1369, column: 11, scope: !6734)
!6736 = !DILocation(line: 1369, column: 14, scope: !6734)
!6737 = !DILocation(line: 1369, column: 20, scope: !6734)
!6738 = !DILocation(line: 1369, column: 7, scope: !6710)
!6739 = !DILocation(line: 1370, column: 23, scope: !6734)
!6740 = !DILocation(line: 1370, column: 4, scope: !6734)
!6741 = !DILocation(line: 1372, column: 18, scope: !6710)
!6742 = !DILocation(line: 1372, column: 23, scope: !6710)
!6743 = !DILocation(line: 1372, column: 27, scope: !6710)
!6744 = !DILocation(line: 1372, column: 3, scope: !6710)
!6745 = !DILocation(line: 1374, column: 7, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1374, column: 7)
!6747 = !DILocation(line: 1374, column: 11, scope: !6746)
!6748 = !DILocation(line: 1374, column: 14, scope: !6746)
!6749 = !DILocation(line: 1374, column: 20, scope: !6746)
!6750 = !DILocation(line: 1374, column: 7, scope: !6710)
!6751 = !DILocation(line: 1376, column: 4, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1374, column: 39)
!6753 = !DILocation(line: 1376, column: 8, scope: !6752)
!6754 = !DILocation(line: 1376, column: 23, scope: !6752)
!6755 = !DILocation(line: 1377, column: 27, scope: !6752)
!6756 = !DILocation(line: 1377, column: 4, scope: !6752)
!6757 = !DILocation(line: 1382, column: 3, scope: !6752)
!6758 = !DILocation(line: 1384, column: 4, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1382, column: 10)
!6760 = !DILocation(line: 1384, column: 8, scope: !6759)
!6761 = !DILocation(line: 1384, column: 23, scope: !6759)
!6762 = !DILocation(line: 1386, column: 8, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 1386, column: 8)
!6764 = !DILocation(line: 1386, column: 12, scope: !6763)
!6765 = !DILocation(line: 1386, column: 15, scope: !6763)
!6766 = !DILocation(line: 1386, column: 21, scope: !6763)
!6767 = !DILocation(line: 1386, column: 8, scope: !6759)
!6768 = !DILocation(line: 1387, column: 28, scope: !6763)
!6769 = !DILocation(line: 1387, column: 5, scope: !6763)
!6770 = !DILocation(line: 1395, column: 3, scope: !6710)
!6771 = !DILocation(line: 1399, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1399, column: 7)
!6773 = !DILocation(line: 1399, column: 11, scope: !6772)
!6774 = !DILocation(line: 1399, column: 14, scope: !6772)
!6775 = !DILocation(line: 1399, column: 20, scope: !6772)
!6776 = !DILocation(line: 1399, column: 7, scope: !6710)
!6777 = !DILocation(line: 1400, column: 23, scope: !6772)
!6778 = !DILocation(line: 1400, column: 4, scope: !6772)
!6779 = !DILocation(line: 1402, column: 18, scope: !6710)
!6780 = !DILocation(line: 1402, column: 23, scope: !6710)
!6781 = !DILocation(line: 1402, column: 27, scope: !6710)
!6782 = !DILocation(line: 1402, column: 3, scope: !6710)
!6783 = !DILocation(line: 1404, column: 3, scope: !6710)
!6784 = !DILocation(line: 1404, column: 7, scope: !6710)
!6785 = !DILocation(line: 1404, column: 22, scope: !6710)
!6786 = !DILocation(line: 1407, column: 10, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1407, column: 7)
!6788 = !DILocation(line: 1407, column: 14, scope: !6787)
!6789 = !DILocation(line: 1407, column: 19, scope: !6787)
!6790 = !DILocation(line: 1407, column: 25, scope: !6787)
!6791 = !DILocation(line: 1407, column: 48, scope: !6787)
!6792 = !DILocation(line: 1408, column: 8, scope: !6787)
!6793 = !DILocation(line: 1408, column: 12, scope: !6787)
!6794 = !DILocation(line: 1408, column: 15, scope: !6787)
!6795 = !DILocation(line: 1408, column: 21, scope: !6787)
!6796 = !DILocation(line: 1407, column: 7, scope: !6710)
!6797 = !DILocation(line: 1409, column: 27, scope: !6787)
!6798 = !DILocation(line: 1409, column: 4, scope: !6787)
!6799 = !DILocation(line: 1410, column: 3, scope: !6710)
!6800 = !DILocation(line: 1413, column: 3, scope: !6710)
!6801 = !DILocation(line: 1416, column: 2, scope: !6678)
!6802 = !DILocation(line: 1417, column: 1, scope: !6678)
!6803 = distinct !DISubprogram(name: "ata_sff_qc_fill_rtf", scope: !3, file: !3, line: 1433, type: !6403, scopeLine: 1434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!6804 = !DILocalVariable(name: "qc", arg: 1, scope: !6803, file: !3, line: 1433, type: !6170)
!6805 = !DILocation(line: 1433, column: 49, scope: !6803)
!6806 = !DILocation(line: 1435, column: 2, scope: !6803)
!6807 = !DILocation(line: 1435, column: 6, scope: !6803)
!6808 = !DILocation(line: 1435, column: 10, scope: !6803)
!6809 = !DILocation(line: 1435, column: 15, scope: !6803)
!6810 = !DILocation(line: 1435, column: 27, scope: !6803)
!6811 = !DILocation(line: 1435, column: 31, scope: !6803)
!6812 = !DILocation(line: 1435, column: 36, scope: !6803)
!6813 = !DILocation(line: 1435, column: 40, scope: !6803)
!6814 = !DILocation(line: 1436, column: 2, scope: !6803)
!6815 = distinct !DISubprogram(name: "ata_sff_freeze", scope: !3, file: !3, line: 1664, type: !6435, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!6816 = !DILocalVariable(name: "ap", arg: 1, scope: !6815, file: !3, line: 1664, type: !5951)
!6817 = !DILocation(line: 1664, column: 38, scope: !6815)
!6818 = !DILocation(line: 1666, column: 2, scope: !6815)
!6819 = !DILocation(line: 1666, column: 6, scope: !6815)
!6820 = !DILocation(line: 1666, column: 10, scope: !6815)
!6821 = !DILocation(line: 1667, column: 17, scope: !6815)
!6822 = !DILocation(line: 1667, column: 21, scope: !6815)
!6823 = !DILocation(line: 1667, column: 2, scope: !6815)
!6824 = !DILocation(line: 1667, column: 6, scope: !6815)
!6825 = !DILocation(line: 1667, column: 15, scope: !6815)
!6826 = !DILocation(line: 1669, column: 6, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 1669, column: 6)
!6828 = !DILocation(line: 1669, column: 10, scope: !6827)
!6829 = !DILocation(line: 1669, column: 15, scope: !6827)
!6830 = !DILocation(line: 1669, column: 30, scope: !6827)
!6831 = !DILocation(line: 1669, column: 33, scope: !6827)
!6832 = !DILocation(line: 1669, column: 37, scope: !6827)
!6833 = !DILocation(line: 1669, column: 44, scope: !6827)
!6834 = !DILocation(line: 1669, column: 6, scope: !6815)
!6835 = !DILocation(line: 1670, column: 22, scope: !6827)
!6836 = !DILocation(line: 1670, column: 26, scope: !6827)
!6837 = !DILocation(line: 1670, column: 30, scope: !6827)
!6838 = !DILocation(line: 1670, column: 3, scope: !6827)
!6839 = !DILocation(line: 1676, column: 2, scope: !6815)
!6840 = !DILocation(line: 1676, column: 6, scope: !6815)
!6841 = !DILocation(line: 1676, column: 11, scope: !6815)
!6842 = !DILocation(line: 1676, column: 28, scope: !6815)
!6843 = !DILocation(line: 1678, column: 6, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 1678, column: 6)
!6845 = !DILocation(line: 1678, column: 10, scope: !6844)
!6846 = !DILocation(line: 1678, column: 15, scope: !6844)
!6847 = !DILocation(line: 1678, column: 6, scope: !6815)
!6848 = !DILocation(line: 1679, column: 3, scope: !6844)
!6849 = !DILocation(line: 1679, column: 7, scope: !6844)
!6850 = !DILocation(line: 1679, column: 12, scope: !6844)
!6851 = !DILocation(line: 1679, column: 26, scope: !6844)
!6852 = !DILocation(line: 1680, column: 1, scope: !6815)
!6853 = distinct !DISubprogram(name: "ata_sff_thaw", scope: !3, file: !3, line: 1692, type: !6435, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!6854 = !DILocalVariable(name: "ap", arg: 1, scope: !6853, file: !3, line: 1692, type: !5951)
!6855 = !DILocation(line: 1692, column: 36, scope: !6853)
!6856 = !DILocation(line: 1695, column: 2, scope: !6853)
!6857 = !DILocation(line: 1695, column: 6, scope: !6853)
!6858 = !DILocation(line: 1695, column: 11, scope: !6853)
!6859 = !DILocation(line: 1695, column: 28, scope: !6853)
!6860 = !DILocation(line: 1696, column: 6, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 1696, column: 6)
!6862 = !DILocation(line: 1696, column: 10, scope: !6861)
!6863 = !DILocation(line: 1696, column: 15, scope: !6861)
!6864 = !DILocation(line: 1696, column: 6, scope: !6853)
!6865 = !DILocation(line: 1697, column: 3, scope: !6861)
!6866 = !DILocation(line: 1697, column: 7, scope: !6861)
!6867 = !DILocation(line: 1697, column: 12, scope: !6861)
!6868 = !DILocation(line: 1697, column: 26, scope: !6861)
!6869 = !DILocation(line: 1698, column: 17, scope: !6853)
!6870 = !DILocation(line: 1698, column: 2, scope: !6853)
!6871 = !DILocation(line: 1699, column: 1, scope: !6853)
!6872 = distinct !DISubprogram(name: "ata_sff_prereset", scope: !3, file: !3, line: 1717, type: !6441, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!6873 = !DILocalVariable(name: "link", arg: 1, scope: !6872, file: !3, line: 1717, type: !6179)
!6874 = !DILocation(line: 1717, column: 39, scope: !6872)
!6875 = !DILocalVariable(name: "deadline", arg: 2, scope: !6872, file: !3, line: 1717, type: !1010)
!6876 = !DILocation(line: 1717, column: 59, scope: !6872)
!6877 = !DILocalVariable(name: "ehc", scope: !6872, file: !3, line: 1719, type: !6878)
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6210, size: 64)
!6879 = !DILocation(line: 1719, column: 25, scope: !6872)
!6880 = !DILocation(line: 1719, column: 32, scope: !6872)
!6881 = !DILocation(line: 1719, column: 38, scope: !6872)
!6882 = !DILocalVariable(name: "rc", scope: !6872, file: !3, line: 1720, type: !181)
!6883 = !DILocation(line: 1720, column: 6, scope: !6872)
!6884 = !DILocation(line: 1722, column: 24, scope: !6872)
!6885 = !DILocation(line: 1722, column: 30, scope: !6872)
!6886 = !DILocation(line: 1722, column: 7, scope: !6872)
!6887 = !DILocation(line: 1722, column: 5, scope: !6872)
!6888 = !DILocation(line: 1723, column: 6, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1723, column: 6)
!6890 = !DILocation(line: 1723, column: 6, scope: !6872)
!6891 = !DILocation(line: 1724, column: 10, scope: !6889)
!6892 = !DILocation(line: 1724, column: 3, scope: !6889)
!6893 = !DILocation(line: 1727, column: 6, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1727, column: 6)
!6895 = !DILocation(line: 1727, column: 11, scope: !6894)
!6896 = !DILocation(line: 1727, column: 13, scope: !6894)
!6897 = !DILocation(line: 1727, column: 20, scope: !6894)
!6898 = !DILocation(line: 1727, column: 6, scope: !6872)
!6899 = !DILocation(line: 1728, column: 3, scope: !6894)
!6900 = !DILocation(line: 1731, column: 24, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1731, column: 6)
!6902 = !DILocation(line: 1731, column: 7, scope: !6901)
!6903 = !DILocation(line: 1731, column: 6, scope: !6872)
!6904 = !DILocation(line: 1732, column: 27, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1731, column: 31)
!6906 = !DILocation(line: 1732, column: 33, scope: !6905)
!6907 = !DILocation(line: 1732, column: 8, scope: !6905)
!6908 = !DILocation(line: 1732, column: 6, scope: !6905)
!6909 = !DILocation(line: 1733, column: 7, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1733, column: 7)
!6911 = !DILocation(line: 1733, column: 10, scope: !6910)
!6912 = !DILocation(line: 1733, column: 13, scope: !6910)
!6913 = !DILocation(line: 1733, column: 16, scope: !6910)
!6914 = !DILocation(line: 1733, column: 7, scope: !6905)
!6915 = !DILocation(line: 1734, column: 4, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1733, column: 28)
!6917 = !DILocation(line: 1737, column: 4, scope: !6916)
!6918 = !DILocation(line: 1737, column: 9, scope: !6916)
!6919 = !DILocation(line: 1737, column: 11, scope: !6916)
!6920 = !DILocation(line: 1737, column: 18, scope: !6916)
!6921 = !DILocation(line: 1738, column: 3, scope: !6916)
!6922 = !DILocation(line: 1739, column: 2, scope: !6905)
!6923 = !DILocation(line: 1741, column: 2, scope: !6872)
!6924 = !DILocation(line: 1742, column: 1, scope: !6872)
!6925 = distinct !DISubprogram(name: "ata_sff_softreset", scope: !3, file: !3, line: 1970, type: !6446, scopeLine: 1972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!6926 = !DILocalVariable(name: "link", arg: 1, scope: !6925, file: !3, line: 1970, type: !6179)
!6927 = !DILocation(line: 1970, column: 40, scope: !6925)
!6928 = !DILocalVariable(name: "classes", arg: 2, scope: !6925, file: !3, line: 1970, type: !3504)
!6929 = !DILocation(line: 1970, column: 60, scope: !6925)
!6930 = !DILocalVariable(name: "deadline", arg: 3, scope: !6925, file: !3, line: 1971, type: !1010)
!6931 = !DILocation(line: 1971, column: 23, scope: !6925)
!6932 = !DILocalVariable(name: "ap", scope: !6925, file: !3, line: 1973, type: !5951)
!6933 = !DILocation(line: 1973, column: 19, scope: !6925)
!6934 = !DILocation(line: 1973, column: 24, scope: !6925)
!6935 = !DILocation(line: 1973, column: 30, scope: !6925)
!6936 = !DILocalVariable(name: "slave_possible", scope: !6925, file: !3, line: 1974, type: !7)
!6937 = !DILocation(line: 1974, column: 15, scope: !6925)
!6938 = !DILocation(line: 1974, column: 32, scope: !6925)
!6939 = !DILocation(line: 1974, column: 36, scope: !6925)
!6940 = !DILocation(line: 1974, column: 42, scope: !6925)
!6941 = !DILocalVariable(name: "devmask", scope: !6925, file: !3, line: 1975, type: !7)
!6942 = !DILocation(line: 1975, column: 15, scope: !6925)
!6943 = !DILocalVariable(name: "rc", scope: !6925, file: !3, line: 1976, type: !181)
!6944 = !DILocation(line: 1976, column: 6, scope: !6925)
!6945 = !DILocalVariable(name: "err", scope: !6925, file: !3, line: 1977, type: !2256)
!6946 = !DILocation(line: 1977, column: 5, scope: !6925)
!6947 = !DILocation(line: 1982, column: 17, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 1982, column: 6)
!6949 = !DILocation(line: 1982, column: 6, scope: !6948)
!6950 = !DILocation(line: 1982, column: 6, scope: !6925)
!6951 = !DILocation(line: 1983, column: 11, scope: !6948)
!6952 = !DILocation(line: 1983, column: 3, scope: !6948)
!6953 = !DILocation(line: 1984, column: 6, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 1984, column: 6)
!6955 = !DILocation(line: 1984, column: 21, scope: !6954)
!6956 = !DILocation(line: 1984, column: 35, scope: !6954)
!6957 = !DILocation(line: 1984, column: 24, scope: !6954)
!6958 = !DILocation(line: 1984, column: 6, scope: !6925)
!6959 = !DILocation(line: 1985, column: 11, scope: !6954)
!6960 = !DILocation(line: 1985, column: 3, scope: !6954)
!6961 = !DILocation(line: 1988, column: 2, scope: !6925)
!6962 = !DILocation(line: 1988, column: 6, scope: !6925)
!6963 = !DILocation(line: 1988, column: 11, scope: !6925)
!6964 = !DILocation(line: 1988, column: 26, scope: !6925)
!6965 = !DILocation(line: 1992, column: 25, scope: !6925)
!6966 = !DILocation(line: 1992, column: 29, scope: !6925)
!6967 = !DILocation(line: 1992, column: 38, scope: !6925)
!6968 = !DILocation(line: 1992, column: 7, scope: !6925)
!6969 = !DILocation(line: 1992, column: 5, scope: !6925)
!6970 = !DILocation(line: 1994, column: 6, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 1994, column: 6)
!6972 = !DILocation(line: 1994, column: 9, scope: !6971)
!6973 = !DILocation(line: 1994, column: 13, scope: !6971)
!6974 = !DILocation(line: 1994, column: 16, scope: !6971)
!6975 = !DILocation(line: 1994, column: 27, scope: !6971)
!6976 = !DILocation(line: 1994, column: 45, scope: !6971)
!6977 = !DILocation(line: 1994, column: 30, scope: !6971)
!6978 = !DILocation(line: 1994, column: 6, scope: !6925)
!6979 = !DILocation(line: 1995, column: 3, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 1994, column: 53)
!6981 = !DILocation(line: 1996, column: 10, scope: !6980)
!6982 = !DILocation(line: 1996, column: 3, scope: !6980)
!6983 = !DILocation(line: 2000, column: 37, scope: !6925)
!6984 = !DILocation(line: 2000, column: 43, scope: !6925)
!6985 = !DILocation(line: 2001, column: 8, scope: !6925)
!6986 = !DILocation(line: 2001, column: 16, scope: !6925)
!6987 = !DILocation(line: 2000, column: 15, scope: !6925)
!6988 = !DILocation(line: 2000, column: 2, scope: !6925)
!6989 = !DILocation(line: 2000, column: 13, scope: !6925)
!6990 = !DILocation(line: 2002, column: 6, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 2002, column: 6)
!6992 = !DILocation(line: 2002, column: 21, scope: !6991)
!6993 = !DILocation(line: 2002, column: 24, scope: !6991)
!6994 = !DILocation(line: 2002, column: 28, scope: !6991)
!6995 = !DILocation(line: 2002, column: 6, scope: !6925)
!6996 = !DILocation(line: 2003, column: 38, scope: !6991)
!6997 = !DILocation(line: 2003, column: 44, scope: !6991)
!6998 = !DILocation(line: 2004, column: 9, scope: !6991)
!6999 = !DILocation(line: 2004, column: 17, scope: !6991)
!7000 = !DILocation(line: 2003, column: 16, scope: !6991)
!7001 = !DILocation(line: 2003, column: 3, scope: !6991)
!7002 = !DILocation(line: 2003, column: 14, scope: !6991)
!7003 = !DILocation(line: 2007, column: 2, scope: !6925)
!7004 = !DILocation(line: 2008, column: 1, scope: !6925)
!7005 = distinct !DISubprogram(name: "sata_sff_hardreset", scope: !3, file: !3, line: 2026, type: !6446, scopeLine: 2028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7006 = !DILocalVariable(name: "link", arg: 1, scope: !7005, file: !3, line: 2026, type: !6179)
!7007 = !DILocation(line: 2026, column: 41, scope: !7005)
!7008 = !DILocalVariable(name: "class", arg: 2, scope: !7005, file: !3, line: 2026, type: !3504)
!7009 = !DILocation(line: 2026, column: 61, scope: !7005)
!7010 = !DILocalVariable(name: "deadline", arg: 3, scope: !7005, file: !3, line: 2027, type: !1010)
!7011 = !DILocation(line: 2027, column: 24, scope: !7005)
!7012 = !DILocalVariable(name: "ehc", scope: !7005, file: !3, line: 2029, type: !6878)
!7013 = !DILocation(line: 2029, column: 25, scope: !7005)
!7014 = !DILocation(line: 2029, column: 32, scope: !7005)
!7015 = !DILocation(line: 2029, column: 38, scope: !7005)
!7016 = !DILocalVariable(name: "timing", scope: !7005, file: !3, line: 2030, type: !7017)
!7017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!7018 = !DILocation(line: 2030, column: 23, scope: !7005)
!7019 = !DILocation(line: 2030, column: 52, scope: !7005)
!7020 = !DILocation(line: 2030, column: 32, scope: !7005)
!7021 = !DILocalVariable(name: "online", scope: !7005, file: !3, line: 2031, type: !1331)
!7022 = !DILocation(line: 2031, column: 7, scope: !7005)
!7023 = !DILocalVariable(name: "rc", scope: !7005, file: !3, line: 2032, type: !181)
!7024 = !DILocation(line: 2032, column: 6, scope: !7005)
!7025 = !DILocation(line: 2034, column: 27, scope: !7005)
!7026 = !DILocation(line: 2034, column: 33, scope: !7005)
!7027 = !DILocation(line: 2034, column: 41, scope: !7005)
!7028 = !DILocation(line: 2034, column: 7, scope: !7005)
!7029 = !DILocation(line: 2034, column: 5, scope: !7005)
!7030 = !DILocation(line: 2036, column: 6, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 2036, column: 6)
!7032 = !DILocation(line: 2036, column: 6, scope: !7005)
!7033 = !DILocation(line: 2037, column: 33, scope: !7031)
!7034 = !DILocation(line: 2037, column: 39, scope: !7031)
!7035 = !DILocation(line: 2037, column: 12, scope: !7031)
!7036 = !DILocation(line: 2037, column: 4, scope: !7031)
!7037 = !DILocation(line: 2037, column: 10, scope: !7031)
!7038 = !DILocation(line: 2037, column: 3, scope: !7031)
!7039 = !DILocation(line: 2040, column: 9, scope: !7005)
!7040 = !DILocation(line: 2040, column: 2, scope: !7005)
!7041 = distinct !DISubprogram(name: "ata_sff_postreset", scope: !3, file: !3, line: 2056, type: !6452, scopeLine: 2057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7042 = !DILocalVariable(name: "link", arg: 1, scope: !7041, file: !3, line: 2056, type: !6179)
!7043 = !DILocation(line: 2056, column: 41, scope: !7041)
!7044 = !DILocalVariable(name: "classes", arg: 2, scope: !7041, file: !3, line: 2056, type: !3504)
!7045 = !DILocation(line: 2056, column: 61, scope: !7041)
!7046 = !DILocalVariable(name: "ap", scope: !7041, file: !3, line: 2058, type: !5951)
!7047 = !DILocation(line: 2058, column: 19, scope: !7041)
!7048 = !DILocation(line: 2058, column: 24, scope: !7041)
!7049 = !DILocation(line: 2058, column: 30, scope: !7041)
!7050 = !DILocation(line: 2060, column: 20, scope: !7041)
!7051 = !DILocation(line: 2060, column: 26, scope: !7041)
!7052 = !DILocation(line: 2060, column: 2, scope: !7041)
!7053 = !DILocation(line: 2063, column: 6, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 2063, column: 6)
!7055 = !DILocation(line: 2063, column: 17, scope: !7054)
!7056 = !DILocation(line: 2063, column: 6, scope: !7041)
!7057 = !DILocation(line: 2064, column: 3, scope: !7054)
!7058 = !DILocation(line: 2064, column: 7, scope: !7054)
!7059 = !DILocation(line: 2064, column: 12, scope: !7054)
!7060 = !DILocation(line: 2064, column: 27, scope: !7054)
!7061 = !DILocation(line: 2065, column: 6, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 2065, column: 6)
!7063 = !DILocation(line: 2065, column: 17, scope: !7062)
!7064 = !DILocation(line: 2065, column: 6, scope: !7041)
!7065 = !DILocation(line: 2066, column: 3, scope: !7062)
!7066 = !DILocation(line: 2066, column: 7, scope: !7062)
!7067 = !DILocation(line: 2066, column: 12, scope: !7062)
!7068 = !DILocation(line: 2066, column: 27, scope: !7062)
!7069 = !DILocation(line: 2069, column: 6, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 2069, column: 6)
!7071 = !DILocation(line: 2069, column: 17, scope: !7070)
!7072 = !DILocation(line: 2069, column: 33, scope: !7070)
!7073 = !DILocation(line: 2069, column: 36, scope: !7070)
!7074 = !DILocation(line: 2069, column: 47, scope: !7070)
!7075 = !DILocation(line: 2069, column: 6, scope: !7041)
!7076 = !DILocation(line: 2071, column: 3, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 2069, column: 64)
!7078 = !DILocation(line: 2075, column: 6, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 2075, column: 6)
!7080 = !DILocation(line: 2075, column: 10, scope: !7079)
!7081 = !DILocation(line: 2075, column: 15, scope: !7079)
!7082 = !DILocation(line: 2075, column: 30, scope: !7079)
!7083 = !DILocation(line: 2075, column: 33, scope: !7079)
!7084 = !DILocation(line: 2075, column: 37, scope: !7079)
!7085 = !DILocation(line: 2075, column: 44, scope: !7079)
!7086 = !DILocation(line: 2075, column: 6, scope: !7041)
!7087 = !DILocation(line: 2076, column: 22, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 2075, column: 54)
!7089 = !DILocation(line: 2076, column: 26, scope: !7088)
!7090 = !DILocation(line: 2076, column: 30, scope: !7088)
!7091 = !DILocation(line: 2076, column: 3, scope: !7088)
!7092 = !DILocation(line: 2077, column: 18, scope: !7088)
!7093 = !DILocation(line: 2077, column: 22, scope: !7088)
!7094 = !DILocation(line: 2077, column: 3, scope: !7088)
!7095 = !DILocation(line: 2077, column: 7, scope: !7088)
!7096 = !DILocation(line: 2077, column: 16, scope: !7088)
!7097 = !DILocation(line: 2078, column: 2, scope: !7088)
!7098 = !DILocation(line: 2079, column: 1, scope: !7041)
!7099 = distinct !DISubprogram(name: "ata_sff_error_handler", scope: !3, file: !3, line: 2126, type: !6435, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7100 = !DILocalVariable(name: "lock", arg: 1, scope: !7101, file: !7102, line: 407, type: !1976)
!7101 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !7102, file: !7102, line: 407, type: !7103, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7102 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7103 = !DISubroutineType(types: !7104)
!7104 = !{null, !1976, !1010}
!7105 = !DILocation(line: 407, column: 64, scope: !7101, inlinedAt: !7106)
!7106 = distinct !DILocation(line: 2149, column: 2, scope: !7099)
!7107 = !DILocalVariable(name: "flags", arg: 2, scope: !7101, file: !7102, line: 407, type: !1010)
!7108 = !DILocation(line: 407, column: 84, scope: !7101, inlinedAt: !7106)
!7109 = !DILocalVariable(name: "lock", arg: 1, scope: !7110, file: !7102, line: 327, type: !1976)
!7110 = distinct !DISubprogram(name: "spinlock_check", scope: !7102, file: !7102, line: 327, type: !7111, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{!7113, !1976}
!7113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!7114 = !DILocation(line: 327, column: 67, scope: !7110, inlinedAt: !7115)
!7115 = distinct !DILocation(line: 2137, column: 2, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 2137, column: 2)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 2137, column: 2)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2137, column: 2)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 2137, column: 2)
!7120 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2137, column: 2)
!7121 = !DILocalVariable(name: "ap", arg: 1, scope: !7099, file: !3, line: 2126, type: !5951)
!7122 = !DILocation(line: 2126, column: 45, scope: !7099)
!7123 = !DILocalVariable(name: "softreset", scope: !7099, file: !3, line: 2128, type: !6444)
!7124 = !DILocation(line: 2128, column: 17, scope: !7099)
!7125 = !DILocation(line: 2128, column: 29, scope: !7099)
!7126 = !DILocation(line: 2128, column: 33, scope: !7099)
!7127 = !DILocation(line: 2128, column: 38, scope: !7099)
!7128 = !DILocalVariable(name: "hardreset", scope: !7099, file: !3, line: 2129, type: !6444)
!7129 = !DILocation(line: 2129, column: 17, scope: !7099)
!7130 = !DILocation(line: 2129, column: 29, scope: !7099)
!7131 = !DILocation(line: 2129, column: 33, scope: !7099)
!7132 = !DILocation(line: 2129, column: 38, scope: !7099)
!7133 = !DILocalVariable(name: "qc", scope: !7099, file: !3, line: 2130, type: !6170)
!7134 = !DILocation(line: 2130, column: 25, scope: !7099)
!7135 = !DILocalVariable(name: "flags", scope: !7099, file: !3, line: 2131, type: !1010)
!7136 = !DILocation(line: 2131, column: 16, scope: !7099)
!7137 = !DILocation(line: 2133, column: 25, scope: !7099)
!7138 = !DILocation(line: 2133, column: 29, scope: !7099)
!7139 = !DILocation(line: 2133, column: 33, scope: !7099)
!7140 = !DILocation(line: 2133, column: 38, scope: !7099)
!7141 = !DILocation(line: 2133, column: 7, scope: !7099)
!7142 = !DILocation(line: 2133, column: 5, scope: !7099)
!7143 = !DILocation(line: 2134, column: 6, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2134, column: 6)
!7145 = !DILocation(line: 2134, column: 9, scope: !7144)
!7146 = !DILocation(line: 2134, column: 14, scope: !7144)
!7147 = !DILocation(line: 2134, column: 18, scope: !7144)
!7148 = !DILocation(line: 2134, column: 24, scope: !7144)
!7149 = !DILocation(line: 2134, column: 6, scope: !7099)
!7150 = !DILocation(line: 2135, column: 6, scope: !7144)
!7151 = !DILocation(line: 2135, column: 3, scope: !7144)
!7152 = !DILocation(line: 2137, column: 2, scope: !7099)
!7153 = !DILocation(line: 2137, column: 2, scope: !7120)
!7154 = !DILocalVariable(name: "__dummy", scope: !7155, file: !3, line: 2137, type: !1010)
!7155 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2137, column: 2)
!7156 = !DILocation(line: 2137, column: 2, scope: !7155)
!7157 = !DILocalVariable(name: "__dummy2", scope: !7155, file: !3, line: 2137, type: !1010)
!7158 = !DILocation(line: 2137, column: 2, scope: !7119)
!7159 = !DILocation(line: 2137, column: 2, scope: !7118)
!7160 = !DILocation(line: 2137, column: 2, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 2137, column: 2)
!7162 = !DILocalVariable(name: "__dummy", scope: !7163, file: !3, line: 2137, type: !1010)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2137, column: 2)
!7164 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 2137, column: 2)
!7165 = !DILocation(line: 2137, column: 2, scope: !7163)
!7166 = !DILocalVariable(name: "__dummy2", scope: !7163, file: !3, line: 2137, type: !1010)
!7167 = !DILocation(line: 2137, column: 2, scope: !7164)
!7168 = !DILocation(line: 2137, column: 2, scope: !7117)
!7169 = !{i32 -2140263758}
!7170 = !DILocation(line: 2137, column: 2, scope: !7116)
!7171 = !DILocation(line: 329, column: 10, scope: !7110, inlinedAt: !7115)
!7172 = !DILocation(line: 329, column: 16, scope: !7110, inlinedAt: !7115)
!7173 = !DILocation(line: 2146, column: 6, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2146, column: 6)
!7175 = !DILocation(line: 2146, column: 10, scope: !7174)
!7176 = !DILocation(line: 2146, column: 15, scope: !7174)
!7177 = !DILocation(line: 2146, column: 6, scope: !7099)
!7178 = !DILocation(line: 2147, column: 3, scope: !7174)
!7179 = !DILocation(line: 2147, column: 7, scope: !7174)
!7180 = !DILocation(line: 2147, column: 12, scope: !7174)
!7181 = !DILocation(line: 2147, column: 27, scope: !7174)
!7182 = !DILocation(line: 2149, column: 25, scope: !7099)
!7183 = !DILocation(line: 2149, column: 29, scope: !7099)
!7184 = !DILocation(line: 2149, column: 35, scope: !7099)
!7185 = !DILocalVariable(name: "__dummy", scope: !7186, file: !7102, line: 409, type: !1010)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !7102, line: 409, column: 2)
!7187 = distinct !DILexicalBlock(scope: !7101, file: !7102, line: 409, column: 2)
!7188 = !DILocation(line: 409, column: 2, scope: !7186, inlinedAt: !7106)
!7189 = !DILocalVariable(name: "__dummy2", scope: !7186, file: !7102, line: 409, type: !1010)
!7190 = !DILocalVariable(name: "__dummy", scope: !7191, file: !7102, line: 409, type: !1010)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !7102, line: 409, column: 2)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !7102, line: 409, column: 2)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !7102, line: 409, column: 2)
!7194 = distinct !DILexicalBlock(scope: !7187, file: !7102, line: 409, column: 2)
!7195 = !DILocation(line: 409, column: 2, scope: !7191, inlinedAt: !7106)
!7196 = !DILocalVariable(name: "__dummy2", scope: !7191, file: !7102, line: 409, type: !1010)
!7197 = !DILocation(line: 409, column: 2, scope: !7192, inlinedAt: !7106)
!7198 = !DILocation(line: 409, column: 2, scope: !7199, inlinedAt: !7106)
!7199 = distinct !DILexicalBlock(scope: !7194, file: !7102, line: 409, column: 2)
!7200 = !{i32 -2145470500}
!7201 = !DILocation(line: 409, column: 2, scope: !7202, inlinedAt: !7106)
!7202 = distinct !DILexicalBlock(scope: !7199, file: !7102, line: 409, column: 2)
!7203 = !DILocation(line: 2152, column: 7, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2152, column: 6)
!7205 = !DILocation(line: 2152, column: 17, scope: !7204)
!7206 = !DILocation(line: 2152, column: 39, scope: !7204)
!7207 = !DILocation(line: 2153, column: 7, scope: !7204)
!7208 = !DILocation(line: 2153, column: 17, scope: !7204)
!7209 = !DILocation(line: 2153, column: 40, scope: !7204)
!7210 = !DILocation(line: 2153, column: 60, scope: !7204)
!7211 = !DILocation(line: 2153, column: 64, scope: !7204)
!7212 = !DILocation(line: 2153, column: 44, scope: !7204)
!7213 = !DILocation(line: 2152, column: 6, scope: !7099)
!7214 = !DILocation(line: 2154, column: 13, scope: !7204)
!7215 = !DILocation(line: 2154, column: 3, scope: !7204)
!7216 = !DILocation(line: 2156, column: 12, scope: !7099)
!7217 = !DILocation(line: 2156, column: 16, scope: !7099)
!7218 = !DILocation(line: 2156, column: 20, scope: !7099)
!7219 = !DILocation(line: 2156, column: 25, scope: !7099)
!7220 = !DILocation(line: 2156, column: 35, scope: !7099)
!7221 = !DILocation(line: 2156, column: 46, scope: !7099)
!7222 = !DILocation(line: 2157, column: 5, scope: !7099)
!7223 = !DILocation(line: 2157, column: 9, scope: !7099)
!7224 = !DILocation(line: 2157, column: 14, scope: !7099)
!7225 = !DILocation(line: 2156, column: 2, scope: !7099)
!7226 = !DILocation(line: 2158, column: 1, scope: !7099)
!7227 = distinct !DISubprogram(name: "ata_sff_lost_interrupt", scope: !3, file: !3, line: 1629, type: !6435, scopeLine: 1630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7228 = !DILocalVariable(name: "ap", arg: 1, scope: !7227, file: !3, line: 1629, type: !5951)
!7229 = !DILocation(line: 1629, column: 46, scope: !7227)
!7230 = !DILocalVariable(name: "status", scope: !7227, file: !3, line: 1631, type: !2256)
!7231 = !DILocation(line: 1631, column: 5, scope: !7227)
!7232 = !DILocalVariable(name: "qc", scope: !7227, file: !3, line: 1632, type: !6170)
!7233 = !DILocation(line: 1632, column: 25, scope: !7227)
!7234 = !DILocation(line: 1635, column: 23, scope: !7227)
!7235 = !DILocation(line: 1635, column: 27, scope: !7227)
!7236 = !DILocation(line: 1635, column: 31, scope: !7227)
!7237 = !DILocation(line: 1635, column: 36, scope: !7227)
!7238 = !DILocation(line: 1635, column: 7, scope: !7227)
!7239 = !DILocation(line: 1635, column: 5, scope: !7227)
!7240 = !DILocation(line: 1637, column: 7, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 1637, column: 6)
!7242 = !DILocation(line: 1637, column: 10, scope: !7241)
!7243 = !DILocation(line: 1637, column: 13, scope: !7241)
!7244 = !DILocation(line: 1637, column: 17, scope: !7241)
!7245 = !DILocation(line: 1637, column: 20, scope: !7241)
!7246 = !DILocation(line: 1637, column: 26, scope: !7241)
!7247 = !DILocation(line: 1637, column: 6, scope: !7227)
!7248 = !DILocation(line: 1638, column: 3, scope: !7241)
!7249 = !DILocation(line: 1641, column: 29, scope: !7227)
!7250 = !DILocation(line: 1641, column: 11, scope: !7227)
!7251 = !DILocation(line: 1641, column: 9, scope: !7227)
!7252 = !DILocation(line: 1642, column: 6, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 1642, column: 6)
!7254 = !DILocation(line: 1642, column: 13, scope: !7253)
!7255 = !DILocation(line: 1642, column: 6, scope: !7227)
!7256 = !DILocation(line: 1643, column: 3, scope: !7253)
!7257 = !DILocation(line: 1647, column: 2, scope: !7227)
!7258 = !DILocation(line: 1651, column: 20, scope: !7227)
!7259 = !DILocation(line: 1651, column: 24, scope: !7227)
!7260 = !DILocation(line: 1651, column: 2, scope: !7227)
!7261 = !DILocation(line: 1652, column: 1, scope: !7227)
!7262 = distinct !DISubprogram(name: "ata_sff_dev_select", scope: !3, file: !3, line: 298, type: !6509, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7263 = !DILocalVariable(name: "ap", arg: 1, scope: !7262, file: !3, line: 298, type: !5951)
!7264 = !DILocation(line: 298, column: 42, scope: !7262)
!7265 = !DILocalVariable(name: "device", arg: 2, scope: !7262, file: !3, line: 298, type: !7)
!7266 = !DILocation(line: 298, column: 59, scope: !7262)
!7267 = !DILocalVariable(name: "tmp", scope: !7262, file: !3, line: 300, type: !2256)
!7268 = !DILocation(line: 300, column: 5, scope: !7262)
!7269 = !DILocation(line: 302, column: 6, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 302, column: 6)
!7271 = !DILocation(line: 302, column: 13, scope: !7270)
!7272 = !DILocation(line: 302, column: 6, scope: !7262)
!7273 = !DILocation(line: 303, column: 7, scope: !7270)
!7274 = !DILocation(line: 303, column: 3, scope: !7270)
!7275 = !DILocation(line: 305, column: 7, scope: !7270)
!7276 = !DILocation(line: 307, column: 11, scope: !7262)
!7277 = !DILocation(line: 307, column: 16, scope: !7262)
!7278 = !DILocation(line: 307, column: 20, scope: !7262)
!7279 = !DILocation(line: 307, column: 27, scope: !7262)
!7280 = !DILocation(line: 307, column: 2, scope: !7262)
!7281 = !DILocation(line: 308, column: 16, scope: !7262)
!7282 = !DILocation(line: 308, column: 2, scope: !7262)
!7283 = !DILocation(line: 309, column: 1, scope: !7262)
!7284 = distinct !DISubprogram(name: "ata_sff_check_status", scope: !3, file: !3, line: 64, type: !6517, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7285 = !DILocalVariable(name: "ap", arg: 1, scope: !7284, file: !3, line: 64, type: !5951)
!7286 = !DILocation(line: 64, column: 42, scope: !7284)
!7287 = !DILocation(line: 66, column: 17, scope: !7284)
!7288 = !DILocation(line: 66, column: 21, scope: !7284)
!7289 = !DILocation(line: 66, column: 28, scope: !7284)
!7290 = !DILocation(line: 66, column: 9, scope: !7284)
!7291 = !DILocation(line: 66, column: 2, scope: !7284)
!7292 = distinct !DISubprogram(name: "ata_sff_tf_load", scope: !3, file: !3, line: 393, type: !6522, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7293 = !DILocalVariable(name: "ap", arg: 1, scope: !7292, file: !3, line: 393, type: !5951)
!7294 = !DILocation(line: 393, column: 39, scope: !7292)
!7295 = !DILocalVariable(name: "tf", arg: 2, scope: !7292, file: !3, line: 393, type: !6524)
!7296 = !DILocation(line: 393, column: 70, scope: !7292)
!7297 = !DILocalVariable(name: "ioaddr", scope: !7292, file: !3, line: 395, type: !7298)
!7298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6579, size: 64)
!7299 = !DILocation(line: 395, column: 22, scope: !7292)
!7300 = !DILocation(line: 395, column: 32, scope: !7292)
!7301 = !DILocation(line: 395, column: 36, scope: !7292)
!7302 = !DILocalVariable(name: "is_addr", scope: !7292, file: !3, line: 396, type: !7)
!7303 = !DILocation(line: 396, column: 15, scope: !7292)
!7304 = !DILocation(line: 396, column: 25, scope: !7292)
!7305 = !DILocation(line: 396, column: 29, scope: !7292)
!7306 = !DILocation(line: 396, column: 35, scope: !7292)
!7307 = !DILocation(line: 398, column: 6, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 398, column: 6)
!7309 = !DILocation(line: 398, column: 10, scope: !7308)
!7310 = !DILocation(line: 398, column: 17, scope: !7308)
!7311 = !DILocation(line: 398, column: 21, scope: !7308)
!7312 = !DILocation(line: 398, column: 14, scope: !7308)
!7313 = !DILocation(line: 398, column: 6, scope: !7292)
!7314 = !DILocation(line: 399, column: 7, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 399, column: 7)
!7316 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 398, column: 31)
!7317 = !DILocation(line: 399, column: 15, scope: !7315)
!7318 = !DILocation(line: 399, column: 7, scope: !7316)
!7319 = !DILocation(line: 400, column: 13, scope: !7315)
!7320 = !DILocation(line: 400, column: 17, scope: !7315)
!7321 = !DILocation(line: 400, column: 22, scope: !7315)
!7322 = !DILocation(line: 400, column: 30, scope: !7315)
!7323 = !DILocation(line: 400, column: 4, scope: !7315)
!7324 = !DILocation(line: 401, column: 18, scope: !7316)
!7325 = !DILocation(line: 401, column: 22, scope: !7316)
!7326 = !DILocation(line: 401, column: 3, scope: !7316)
!7327 = !DILocation(line: 401, column: 7, scope: !7316)
!7328 = !DILocation(line: 401, column: 16, scope: !7316)
!7329 = !DILocation(line: 402, column: 17, scope: !7316)
!7330 = !DILocation(line: 402, column: 3, scope: !7316)
!7331 = !DILocation(line: 403, column: 2, scope: !7316)
!7332 = !DILocation(line: 405, column: 6, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 405, column: 6)
!7334 = !DILocation(line: 405, column: 14, scope: !7333)
!7335 = !DILocation(line: 405, column: 18, scope: !7333)
!7336 = !DILocation(line: 405, column: 22, scope: !7333)
!7337 = !DILocation(line: 405, column: 28, scope: !7333)
!7338 = !DILocation(line: 405, column: 6, scope: !7292)
!7339 = !DILocalVariable(name: "__ret_warn_on", scope: !7340, file: !3, line: 406, type: !181)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 406, column: 3)
!7341 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 405, column: 48)
!7342 = !DILocation(line: 406, column: 3, scope: !7340)
!7343 = !DILocation(line: 406, column: 3, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 406, column: 3)
!7345 = !DILocation(line: 406, column: 3, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 406, column: 3)
!7347 = !DILocation(line: 406, column: 3, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 406, column: 3)
!7349 = !DILocation(line: 406, column: 3, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 406, column: 3)
!7351 = !{i32 -2140299315, i32 -2140299286, i32 -2140299240, i32 -2140299182, i32 -2140299128, i32 -2140299074, i32 -2140299019, i32 -2140298988}
!7352 = !DILocation(line: 406, column: 3, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 406, column: 3)
!7354 = !{i32 -2140298571, i32 -2140298564, i32 -2140298512, i32 -2140298481, i32 -2140298451}
!7355 = !DILocation(line: 406, column: 3, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 406, column: 3)
!7357 = !DILocation(line: 407, column: 12, scope: !7341)
!7358 = !DILocation(line: 407, column: 16, scope: !7341)
!7359 = !DILocation(line: 407, column: 29, scope: !7341)
!7360 = !DILocation(line: 407, column: 37, scope: !7341)
!7361 = !DILocation(line: 407, column: 3, scope: !7341)
!7362 = !DILocation(line: 408, column: 12, scope: !7341)
!7363 = !DILocation(line: 408, column: 16, scope: !7341)
!7364 = !DILocation(line: 408, column: 27, scope: !7341)
!7365 = !DILocation(line: 408, column: 35, scope: !7341)
!7366 = !DILocation(line: 408, column: 3, scope: !7341)
!7367 = !DILocation(line: 409, column: 12, scope: !7341)
!7368 = !DILocation(line: 409, column: 16, scope: !7341)
!7369 = !DILocation(line: 409, column: 26, scope: !7341)
!7370 = !DILocation(line: 409, column: 34, scope: !7341)
!7371 = !DILocation(line: 409, column: 3, scope: !7341)
!7372 = !DILocation(line: 410, column: 12, scope: !7341)
!7373 = !DILocation(line: 410, column: 16, scope: !7341)
!7374 = !DILocation(line: 410, column: 26, scope: !7341)
!7375 = !DILocation(line: 410, column: 34, scope: !7341)
!7376 = !DILocation(line: 410, column: 3, scope: !7341)
!7377 = !DILocation(line: 411, column: 12, scope: !7341)
!7378 = !DILocation(line: 411, column: 16, scope: !7341)
!7379 = !DILocation(line: 411, column: 26, scope: !7341)
!7380 = !DILocation(line: 411, column: 34, scope: !7341)
!7381 = !DILocation(line: 411, column: 3, scope: !7341)
!7382 = !DILocation(line: 418, column: 2, scope: !7341)
!7383 = !DILocation(line: 420, column: 6, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 420, column: 6)
!7385 = !DILocation(line: 420, column: 6, scope: !7292)
!7386 = !DILocation(line: 421, column: 12, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 420, column: 15)
!7388 = !DILocation(line: 421, column: 16, scope: !7387)
!7389 = !DILocation(line: 421, column: 25, scope: !7387)
!7390 = !DILocation(line: 421, column: 33, scope: !7387)
!7391 = !DILocation(line: 421, column: 3, scope: !7387)
!7392 = !DILocation(line: 422, column: 12, scope: !7387)
!7393 = !DILocation(line: 422, column: 16, scope: !7387)
!7394 = !DILocation(line: 422, column: 23, scope: !7387)
!7395 = !DILocation(line: 422, column: 31, scope: !7387)
!7396 = !DILocation(line: 422, column: 3, scope: !7387)
!7397 = !DILocation(line: 423, column: 12, scope: !7387)
!7398 = !DILocation(line: 423, column: 16, scope: !7387)
!7399 = !DILocation(line: 423, column: 22, scope: !7387)
!7400 = !DILocation(line: 423, column: 30, scope: !7387)
!7401 = !DILocation(line: 423, column: 3, scope: !7387)
!7402 = !DILocation(line: 424, column: 12, scope: !7387)
!7403 = !DILocation(line: 424, column: 16, scope: !7387)
!7404 = !DILocation(line: 424, column: 22, scope: !7387)
!7405 = !DILocation(line: 424, column: 30, scope: !7387)
!7406 = !DILocation(line: 424, column: 3, scope: !7387)
!7407 = !DILocation(line: 425, column: 12, scope: !7387)
!7408 = !DILocation(line: 425, column: 16, scope: !7387)
!7409 = !DILocation(line: 425, column: 22, scope: !7387)
!7410 = !DILocation(line: 425, column: 30, scope: !7387)
!7411 = !DILocation(line: 425, column: 3, scope: !7387)
!7412 = !DILocation(line: 432, column: 2, scope: !7387)
!7413 = !DILocation(line: 434, column: 6, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 434, column: 6)
!7415 = !DILocation(line: 434, column: 10, scope: !7414)
!7416 = !DILocation(line: 434, column: 16, scope: !7414)
!7417 = !DILocation(line: 434, column: 6, scope: !7292)
!7418 = !DILocation(line: 435, column: 12, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 434, column: 36)
!7420 = !DILocation(line: 435, column: 16, scope: !7419)
!7421 = !DILocation(line: 435, column: 24, scope: !7419)
!7422 = !DILocation(line: 435, column: 32, scope: !7419)
!7423 = !DILocation(line: 435, column: 3, scope: !7419)
!7424 = !DILocation(line: 437, column: 2, scope: !7419)
!7425 = !DILocation(line: 439, column: 16, scope: !7292)
!7426 = !DILocation(line: 439, column: 2, scope: !7292)
!7427 = !DILocation(line: 440, column: 1, scope: !7292)
!7428 = distinct !DISubprogram(name: "ata_sff_tf_read", scope: !3, file: !3, line: 456, type: !6528, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7429 = !DILocalVariable(name: "ap", arg: 1, scope: !7428, file: !3, line: 456, type: !5951)
!7430 = !DILocation(line: 456, column: 39, scope: !7428)
!7431 = !DILocalVariable(name: "tf", arg: 2, scope: !7428, file: !3, line: 456, type: !6427)
!7432 = !DILocation(line: 456, column: 64, scope: !7428)
!7433 = !DILocalVariable(name: "ioaddr", scope: !7428, file: !3, line: 458, type: !7298)
!7434 = !DILocation(line: 458, column: 22, scope: !7428)
!7435 = !DILocation(line: 458, column: 32, scope: !7428)
!7436 = !DILocation(line: 458, column: 36, scope: !7428)
!7437 = !DILocation(line: 460, column: 37, scope: !7428)
!7438 = !DILocation(line: 460, column: 16, scope: !7428)
!7439 = !DILocation(line: 460, column: 2, scope: !7428)
!7440 = !DILocation(line: 460, column: 6, scope: !7428)
!7441 = !DILocation(line: 460, column: 14, scope: !7428)
!7442 = !DILocation(line: 461, column: 24, scope: !7428)
!7443 = !DILocation(line: 461, column: 32, scope: !7428)
!7444 = !DILocation(line: 461, column: 16, scope: !7428)
!7445 = !DILocation(line: 461, column: 2, scope: !7428)
!7446 = !DILocation(line: 461, column: 6, scope: !7428)
!7447 = !DILocation(line: 461, column: 14, scope: !7428)
!7448 = !DILocation(line: 462, column: 22, scope: !7428)
!7449 = !DILocation(line: 462, column: 30, scope: !7428)
!7450 = !DILocation(line: 462, column: 14, scope: !7428)
!7451 = !DILocation(line: 462, column: 2, scope: !7428)
!7452 = !DILocation(line: 462, column: 6, scope: !7428)
!7453 = !DILocation(line: 462, column: 12, scope: !7428)
!7454 = !DILocation(line: 463, column: 21, scope: !7428)
!7455 = !DILocation(line: 463, column: 29, scope: !7428)
!7456 = !DILocation(line: 463, column: 13, scope: !7428)
!7457 = !DILocation(line: 463, column: 2, scope: !7428)
!7458 = !DILocation(line: 463, column: 6, scope: !7428)
!7459 = !DILocation(line: 463, column: 11, scope: !7428)
!7460 = !DILocation(line: 464, column: 21, scope: !7428)
!7461 = !DILocation(line: 464, column: 29, scope: !7428)
!7462 = !DILocation(line: 464, column: 13, scope: !7428)
!7463 = !DILocation(line: 464, column: 2, scope: !7428)
!7464 = !DILocation(line: 464, column: 6, scope: !7428)
!7465 = !DILocation(line: 464, column: 11, scope: !7428)
!7466 = !DILocation(line: 465, column: 21, scope: !7428)
!7467 = !DILocation(line: 465, column: 29, scope: !7428)
!7468 = !DILocation(line: 465, column: 13, scope: !7428)
!7469 = !DILocation(line: 465, column: 2, scope: !7428)
!7470 = !DILocation(line: 465, column: 6, scope: !7428)
!7471 = !DILocation(line: 465, column: 11, scope: !7428)
!7472 = !DILocation(line: 466, column: 23, scope: !7428)
!7473 = !DILocation(line: 466, column: 31, scope: !7428)
!7474 = !DILocation(line: 466, column: 15, scope: !7428)
!7475 = !DILocation(line: 466, column: 2, scope: !7428)
!7476 = !DILocation(line: 466, column: 6, scope: !7428)
!7477 = !DILocation(line: 466, column: 13, scope: !7428)
!7478 = !DILocation(line: 468, column: 6, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 468, column: 6)
!7480 = !DILocation(line: 468, column: 10, scope: !7479)
!7481 = !DILocation(line: 468, column: 16, scope: !7479)
!7482 = !DILocation(line: 468, column: 6, scope: !7428)
!7483 = !DILocation(line: 469, column: 7, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !3, line: 469, column: 7)
!7485 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 468, column: 35)
!7486 = !DILocation(line: 469, column: 7, scope: !7485)
!7487 = !DILocation(line: 470, column: 13, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 469, column: 33)
!7489 = !DILocation(line: 470, column: 17, scope: !7488)
!7490 = !DILocation(line: 470, column: 21, scope: !7488)
!7491 = !DILocation(line: 470, column: 32, scope: !7488)
!7492 = !DILocation(line: 470, column: 40, scope: !7488)
!7493 = !DILocation(line: 470, column: 4, scope: !7488)
!7494 = !DILocation(line: 471, column: 30, scope: !7488)
!7495 = !DILocation(line: 471, column: 38, scope: !7488)
!7496 = !DILocation(line: 471, column: 22, scope: !7488)
!7497 = !DILocation(line: 471, column: 4, scope: !7488)
!7498 = !DILocation(line: 471, column: 8, scope: !7488)
!7499 = !DILocation(line: 471, column: 20, scope: !7488)
!7500 = !DILocation(line: 472, column: 28, scope: !7488)
!7501 = !DILocation(line: 472, column: 36, scope: !7488)
!7502 = !DILocation(line: 472, column: 20, scope: !7488)
!7503 = !DILocation(line: 472, column: 4, scope: !7488)
!7504 = !DILocation(line: 472, column: 8, scope: !7488)
!7505 = !DILocation(line: 472, column: 18, scope: !7488)
!7506 = !DILocation(line: 473, column: 27, scope: !7488)
!7507 = !DILocation(line: 473, column: 35, scope: !7488)
!7508 = !DILocation(line: 473, column: 19, scope: !7488)
!7509 = !DILocation(line: 473, column: 4, scope: !7488)
!7510 = !DILocation(line: 473, column: 8, scope: !7488)
!7511 = !DILocation(line: 473, column: 17, scope: !7488)
!7512 = !DILocation(line: 474, column: 27, scope: !7488)
!7513 = !DILocation(line: 474, column: 35, scope: !7488)
!7514 = !DILocation(line: 474, column: 19, scope: !7488)
!7515 = !DILocation(line: 474, column: 4, scope: !7488)
!7516 = !DILocation(line: 474, column: 8, scope: !7488)
!7517 = !DILocation(line: 474, column: 17, scope: !7488)
!7518 = !DILocation(line: 475, column: 27, scope: !7488)
!7519 = !DILocation(line: 475, column: 35, scope: !7488)
!7520 = !DILocation(line: 475, column: 19, scope: !7488)
!7521 = !DILocation(line: 475, column: 4, scope: !7488)
!7522 = !DILocation(line: 475, column: 8, scope: !7488)
!7523 = !DILocation(line: 475, column: 17, scope: !7488)
!7524 = !DILocation(line: 476, column: 13, scope: !7488)
!7525 = !DILocation(line: 476, column: 17, scope: !7488)
!7526 = !DILocation(line: 476, column: 22, scope: !7488)
!7527 = !DILocation(line: 476, column: 30, scope: !7488)
!7528 = !DILocation(line: 476, column: 4, scope: !7488)
!7529 = !DILocation(line: 477, column: 19, scope: !7488)
!7530 = !DILocation(line: 477, column: 23, scope: !7488)
!7531 = !DILocation(line: 477, column: 4, scope: !7488)
!7532 = !DILocation(line: 477, column: 8, scope: !7488)
!7533 = !DILocation(line: 477, column: 17, scope: !7488)
!7534 = !DILocation(line: 478, column: 3, scope: !7488)
!7535 = !DILocalVariable(name: "__ret_warn_on", scope: !7536, file: !3, line: 479, type: !181)
!7536 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 479, column: 4)
!7537 = !DILocation(line: 479, column: 4, scope: !7536)
!7538 = !DILocation(line: 479, column: 4, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 479, column: 4)
!7540 = !DILocation(line: 479, column: 4, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 479, column: 4)
!7542 = !DILocation(line: 479, column: 4, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 479, column: 4)
!7544 = !DILocation(line: 479, column: 4, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 479, column: 4)
!7546 = !{i32 -2140297709, i32 -2140297680, i32 -2140297634, i32 -2140297576, i32 -2140297522, i32 -2140297468, i32 -2140297413, i32 -2140297382}
!7547 = !DILocation(line: 479, column: 4, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 479, column: 4)
!7549 = !{i32 -2140296965, i32 -2140296958, i32 -2140296906, i32 -2140296875, i32 -2140296845}
!7550 = !DILocation(line: 479, column: 4, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 479, column: 4)
!7552 = !DILocation(line: 480, column: 2, scope: !7485)
!7553 = !DILocation(line: 481, column: 1, scope: !7428)
!7554 = distinct !DISubprogram(name: "ata_sff_exec_command", scope: !3, file: !3, line: 495, type: !6522, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7555 = !DILocalVariable(name: "ap", arg: 1, scope: !7554, file: !3, line: 495, type: !5951)
!7556 = !DILocation(line: 495, column: 44, scope: !7554)
!7557 = !DILocalVariable(name: "tf", arg: 2, scope: !7554, file: !3, line: 495, type: !6524)
!7558 = !DILocation(line: 495, column: 75, scope: !7554)
!7559 = !DILocation(line: 499, column: 11, scope: !7554)
!7560 = !DILocation(line: 499, column: 15, scope: !7554)
!7561 = !DILocation(line: 499, column: 24, scope: !7554)
!7562 = !DILocation(line: 499, column: 28, scope: !7554)
!7563 = !DILocation(line: 499, column: 35, scope: !7554)
!7564 = !DILocation(line: 499, column: 2, scope: !7554)
!7565 = !DILocation(line: 500, column: 16, scope: !7554)
!7566 = !DILocation(line: 500, column: 2, scope: !7554)
!7567 = !DILocation(line: 501, column: 1, scope: !7554)
!7568 = distinct !DISubprogram(name: "ata_sff_data_xfer", scope: !3, file: !3, line: 538, type: !6533, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7569 = !DILocalVariable(name: "qc", arg: 1, scope: !7568, file: !3, line: 538, type: !6170)
!7570 = !DILocation(line: 538, column: 55, scope: !7568)
!7571 = !DILocalVariable(name: "buf", arg: 2, scope: !7568, file: !3, line: 538, type: !6535)
!7572 = !DILocation(line: 538, column: 74, scope: !7568)
!7573 = !DILocalVariable(name: "buflen", arg: 3, scope: !7568, file: !3, line: 539, type: !7)
!7574 = !DILocation(line: 539, column: 24, scope: !7568)
!7575 = !DILocalVariable(name: "rw", arg: 4, scope: !7568, file: !3, line: 539, type: !181)
!7576 = !DILocation(line: 539, column: 36, scope: !7568)
!7577 = !DILocalVariable(name: "ap", scope: !7568, file: !3, line: 541, type: !5951)
!7578 = !DILocation(line: 541, column: 19, scope: !7568)
!7579 = !DILocation(line: 541, column: 24, scope: !7568)
!7580 = !DILocation(line: 541, column: 28, scope: !7568)
!7581 = !DILocation(line: 541, column: 33, scope: !7568)
!7582 = !DILocation(line: 541, column: 39, scope: !7568)
!7583 = !DILocalVariable(name: "data_addr", scope: !7568, file: !3, line: 542, type: !968)
!7584 = !DILocation(line: 542, column: 16, scope: !7568)
!7585 = !DILocation(line: 542, column: 28, scope: !7568)
!7586 = !DILocation(line: 542, column: 32, scope: !7568)
!7587 = !DILocation(line: 542, column: 39, scope: !7568)
!7588 = !DILocalVariable(name: "words", scope: !7568, file: !3, line: 543, type: !7)
!7589 = !DILocation(line: 543, column: 15, scope: !7568)
!7590 = !DILocation(line: 543, column: 23, scope: !7568)
!7591 = !DILocation(line: 543, column: 30, scope: !7568)
!7592 = !DILocation(line: 546, column: 6, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 546, column: 6)
!7594 = !DILocation(line: 546, column: 9, scope: !7593)
!7595 = !DILocation(line: 546, column: 6, scope: !7568)
!7596 = !DILocation(line: 547, column: 16, scope: !7593)
!7597 = !DILocation(line: 547, column: 27, scope: !7593)
!7598 = !DILocation(line: 547, column: 32, scope: !7593)
!7599 = !DILocation(line: 547, column: 3, scope: !7593)
!7600 = !DILocation(line: 549, column: 17, scope: !7593)
!7601 = !DILocation(line: 549, column: 28, scope: !7593)
!7602 = !DILocation(line: 549, column: 33, scope: !7593)
!7603 = !DILocation(line: 549, column: 3, scope: !7593)
!7604 = !DILocation(line: 552, column: 6, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 552, column: 6)
!7606 = !DILocation(line: 552, column: 6, scope: !7568)
!7607 = !DILocalVariable(name: "pad", scope: !7608, file: !3, line: 553, type: !7609)
!7608 = distinct !DILexicalBlock(scope: !7605, file: !3, line: 552, column: 31)
!7609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 16, elements: !2471)
!7610 = !DILocation(line: 553, column: 17, scope: !7608)
!7611 = !DILocation(line: 556, column: 10, scope: !7608)
!7612 = !DILocation(line: 556, column: 17, scope: !7608)
!7613 = !DILocation(line: 556, column: 7, scope: !7608)
!7614 = !DILocation(line: 562, column: 7, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 562, column: 7)
!7616 = !DILocation(line: 562, column: 10, scope: !7615)
!7617 = !DILocation(line: 562, column: 7, scope: !7608)
!7618 = !DILocation(line: 563, column: 17, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 562, column: 19)
!7620 = !DILocation(line: 563, column: 28, scope: !7619)
!7621 = !DILocation(line: 563, column: 4, scope: !7619)
!7622 = !DILocation(line: 564, column: 11, scope: !7619)
!7623 = !DILocation(line: 564, column: 5, scope: !7619)
!7624 = !DILocation(line: 564, column: 9, scope: !7619)
!7625 = !DILocation(line: 565, column: 3, scope: !7619)
!7626 = !DILocation(line: 566, column: 14, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 565, column: 10)
!7628 = !DILocation(line: 566, column: 13, scope: !7627)
!7629 = !DILocation(line: 566, column: 4, scope: !7627)
!7630 = !DILocation(line: 566, column: 11, scope: !7627)
!7631 = !DILocation(line: 567, column: 18, scope: !7627)
!7632 = !DILocation(line: 567, column: 29, scope: !7627)
!7633 = !DILocation(line: 567, column: 4, scope: !7627)
!7634 = !DILocation(line: 569, column: 8, scope: !7608)
!7635 = !DILocation(line: 570, column: 2, scope: !7608)
!7636 = !DILocation(line: 572, column: 9, scope: !7568)
!7637 = !DILocation(line: 572, column: 15, scope: !7568)
!7638 = !DILocation(line: 572, column: 2, scope: !7568)
!7639 = distinct !DISubprogram(name: "ata_sff_drain_fifo", scope: !3, file: !3, line: 2092, type: !6388, scopeLine: 2093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7640 = !DILocalVariable(name: "qc", arg: 1, scope: !7639, file: !3, line: 2092, type: !6170)
!7641 = !DILocation(line: 2092, column: 48, scope: !7639)
!7642 = !DILocalVariable(name: "count", scope: !7639, file: !3, line: 2094, type: !181)
!7643 = !DILocation(line: 2094, column: 6, scope: !7639)
!7644 = !DILocalVariable(name: "ap", scope: !7639, file: !3, line: 2095, type: !5951)
!7645 = !DILocation(line: 2095, column: 19, scope: !7639)
!7646 = !DILocation(line: 2098, column: 6, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 2098, column: 6)
!7648 = !DILocation(line: 2098, column: 9, scope: !7647)
!7649 = !DILocation(line: 2098, column: 17, scope: !7647)
!7650 = !DILocation(line: 2098, column: 20, scope: !7647)
!7651 = !DILocation(line: 2098, column: 24, scope: !7647)
!7652 = !DILocation(line: 2098, column: 32, scope: !7647)
!7653 = !DILocation(line: 2098, column: 6, scope: !7639)
!7654 = !DILocation(line: 2099, column: 3, scope: !7647)
!7655 = !DILocation(line: 2101, column: 7, scope: !7639)
!7656 = !DILocation(line: 2101, column: 11, scope: !7639)
!7657 = !DILocation(line: 2101, column: 5, scope: !7639)
!7658 = !DILocation(line: 2103, column: 13, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 2103, column: 2)
!7660 = !DILocation(line: 2103, column: 7, scope: !7659)
!7661 = !DILocation(line: 2103, column: 19, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 2103, column: 2)
!7663 = !DILocation(line: 2103, column: 23, scope: !7662)
!7664 = !DILocation(line: 2103, column: 28, scope: !7662)
!7665 = !DILocation(line: 2103, column: 45, scope: !7662)
!7666 = !DILocation(line: 2103, column: 49, scope: !7662)
!7667 = !DILocation(line: 2104, column: 7, scope: !7662)
!7668 = !DILocation(line: 2104, column: 10, scope: !7662)
!7669 = !DILocation(line: 2104, column: 16, scope: !7662)
!7670 = !DILocation(line: 0, scope: !7662)
!7671 = !DILocation(line: 2103, column: 2, scope: !7659)
!7672 = !DILocation(line: 2105, column: 12, scope: !7662)
!7673 = !DILocation(line: 2105, column: 16, scope: !7662)
!7674 = !DILocation(line: 2105, column: 23, scope: !7662)
!7675 = !DILocation(line: 2105, column: 3, scope: !7662)
!7676 = !DILocation(line: 2104, column: 31, scope: !7662)
!7677 = !DILocation(line: 2103, column: 2, scope: !7662)
!7678 = distinct !{!7678, !7671, !7679}
!7679 = !DILocation(line: 2105, column: 32, scope: !7659)
!7680 = !DILocation(line: 2108, column: 6, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 2108, column: 6)
!7682 = !DILocation(line: 2108, column: 6, scope: !7639)
!7683 = !DILocation(line: 2109, column: 3, scope: !7681)
!7684 = !DILocation(line: 2111, column: 1, scope: !7639)
!7685 = distinct !DISubprogram(name: "ata_sff_pause", scope: !3, file: !3, line: 150, type: !6435, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7686 = !DILocalVariable(name: "ap", arg: 1, scope: !7685, file: !3, line: 150, type: !5951)
!7687 = !DILocation(line: 150, column: 37, scope: !7685)
!7688 = !DILocation(line: 152, column: 15, scope: !7685)
!7689 = !DILocation(line: 152, column: 2, scope: !7685)
!7690 = !DILocation(line: 153, column: 2, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 153, column: 2)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 153, column: 2)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 153, column: 2)
!7694 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 153, column: 2)
!7695 = !DILocation(line: 154, column: 1, scope: !7685)
!7696 = distinct !DISubprogram(name: "ata_sff_sync", scope: !3, file: !3, line: 130, type: !6435, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7697 = !DILocalVariable(name: "ap", arg: 1, scope: !7696, file: !3, line: 130, type: !5951)
!7698 = !DILocation(line: 130, column: 43, scope: !7696)
!7699 = !DILocation(line: 132, column: 6, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 132, column: 6)
!7701 = !DILocation(line: 132, column: 10, scope: !7700)
!7702 = !DILocation(line: 132, column: 15, scope: !7700)
!7703 = !DILocation(line: 132, column: 6, scope: !7696)
!7704 = !DILocation(line: 133, column: 3, scope: !7700)
!7705 = !DILocation(line: 133, column: 7, scope: !7700)
!7706 = !DILocation(line: 133, column: 12, scope: !7700)
!7707 = !DILocation(line: 133, column: 32, scope: !7700)
!7708 = !DILocation(line: 134, column: 11, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 134, column: 11)
!7710 = !DILocation(line: 134, column: 15, scope: !7709)
!7711 = !DILocation(line: 134, column: 22, scope: !7709)
!7712 = !DILocation(line: 134, column: 11, scope: !7700)
!7713 = !DILocation(line: 135, column: 11, scope: !7709)
!7714 = !DILocation(line: 135, column: 15, scope: !7709)
!7715 = !DILocation(line: 135, column: 22, scope: !7709)
!7716 = !DILocation(line: 135, column: 3, scope: !7709)
!7717 = !DILocation(line: 136, column: 1, scope: !7696)
!7718 = distinct !DISubprogram(name: "ata_sff_dma_pause", scope: !3, file: !3, line: 165, type: !6435, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7719 = !DILocalVariable(name: "ap", arg: 1, scope: !7718, file: !3, line: 165, type: !5951)
!7720 = !DILocation(line: 165, column: 41, scope: !7718)
!7721 = !DILocation(line: 167, column: 6, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 167, column: 6)
!7723 = !DILocation(line: 167, column: 10, scope: !7722)
!7724 = !DILocation(line: 167, column: 15, scope: !7722)
!7725 = !DILocation(line: 167, column: 35, scope: !7722)
!7726 = !DILocation(line: 167, column: 38, scope: !7722)
!7727 = !DILocation(line: 167, column: 42, scope: !7722)
!7728 = !DILocation(line: 167, column: 49, scope: !7722)
!7729 = !DILocation(line: 167, column: 6, scope: !7718)
!7730 = !DILocation(line: 170, column: 21, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 167, column: 65)
!7732 = !DILocation(line: 170, column: 3, scope: !7731)
!7733 = !DILocation(line: 171, column: 3, scope: !7731)
!7734 = !DILocation(line: 176, column: 2, scope: !7718)
!7735 = !DILocation(line: 176, column: 2, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 176, column: 2)
!7737 = !DILocation(line: 176, column: 2, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 176, column: 2)
!7739 = !DILocation(line: 176, column: 2, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 176, column: 2)
!7741 = !{i32 -2140302573, i32 -2140302544, i32 -2140302498, i32 -2140302440, i32 -2140302386, i32 -2140302332, i32 -2140302277, i32 -2140302246}
!7742 = !DILocation(line: 176, column: 2, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 176, column: 2)
!7744 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 176, column: 2)
!7745 = !{i32 -2140301799, i32 -2140301792, i32 -2140301738, i32 -2140301707, i32 -2140301677}
!7746 = !DILocation(line: 176, column: 2, scope: !7744)
!7747 = !DILocation(line: 177, column: 1, scope: !7718)
!7748 = distinct !DISubprogram(name: "ata_sff_altstatus", scope: !3, file: !3, line: 83, type: !6517, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7749 = !DILocalVariable(name: "ap", arg: 1, scope: !7748, file: !3, line: 83, type: !5951)
!7750 = !DILocation(line: 83, column: 46, scope: !7748)
!7751 = !DILocation(line: 85, column: 6, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 85, column: 6)
!7753 = !DILocation(line: 85, column: 10, scope: !7752)
!7754 = !DILocation(line: 85, column: 15, scope: !7752)
!7755 = !DILocation(line: 85, column: 6, scope: !7748)
!7756 = !DILocation(line: 86, column: 10, scope: !7752)
!7757 = !DILocation(line: 86, column: 14, scope: !7752)
!7758 = !DILocation(line: 86, column: 19, scope: !7752)
!7759 = !DILocation(line: 86, column: 39, scope: !7752)
!7760 = !DILocation(line: 86, column: 3, scope: !7752)
!7761 = !DILocation(line: 88, column: 17, scope: !7748)
!7762 = !DILocation(line: 88, column: 21, scope: !7748)
!7763 = !DILocation(line: 88, column: 28, scope: !7748)
!7764 = !DILocation(line: 88, column: 9, scope: !7748)
!7765 = !DILocation(line: 88, column: 2, scope: !7748)
!7766 = !DILocation(line: 89, column: 1, scope: !7748)
!7767 = distinct !DISubprogram(name: "ata_sff_busy_sleep", scope: !3, file: !3, line: 195, type: !7768, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{!181, !5951, !1010, !1010}
!7770 = !DILocalVariable(name: "ap", arg: 1, scope: !7767, file: !3, line: 195, type: !5951)
!7771 = !DILocation(line: 195, column: 41, scope: !7767)
!7772 = !DILocalVariable(name: "tmout_pat", arg: 2, scope: !7767, file: !3, line: 196, type: !1010)
!7773 = !DILocation(line: 196, column: 24, scope: !7767)
!7774 = !DILocalVariable(name: "tmout", arg: 3, scope: !7767, file: !3, line: 196, type: !1010)
!7775 = !DILocation(line: 196, column: 49, scope: !7767)
!7776 = !DILocalVariable(name: "timer_start", scope: !7767, file: !3, line: 198, type: !1010)
!7777 = !DILocation(line: 198, column: 16, scope: !7767)
!7778 = !DILocalVariable(name: "timeout", scope: !7767, file: !3, line: 198, type: !1010)
!7779 = !DILocation(line: 198, column: 29, scope: !7767)
!7780 = !DILocalVariable(name: "status", scope: !7767, file: !3, line: 199, type: !2256)
!7781 = !DILocation(line: 199, column: 5, scope: !7767)
!7782 = !DILocation(line: 201, column: 29, scope: !7767)
!7783 = !DILocation(line: 201, column: 11, scope: !7767)
!7784 = !DILocation(line: 201, column: 9, scope: !7767)
!7785 = !DILocation(line: 202, column: 16, scope: !7767)
!7786 = !DILocation(line: 202, column: 14, scope: !7767)
!7787 = !DILocation(line: 203, column: 25, scope: !7767)
!7788 = !DILocation(line: 203, column: 38, scope: !7767)
!7789 = !DILocation(line: 203, column: 12, scope: !7767)
!7790 = !DILocation(line: 203, column: 10, scope: !7767)
!7791 = !DILocation(line: 204, column: 2, scope: !7767)
!7792 = !DILocation(line: 204, column: 9, scope: !7767)
!7793 = !DILocation(line: 204, column: 16, scope: !7767)
!7794 = !DILocation(line: 204, column: 24, scope: !7767)
!7795 = !DILocation(line: 204, column: 28, scope: !7767)
!7796 = !DILocation(line: 204, column: 35, scope: !7767)
!7797 = !DILocation(line: 204, column: 47, scope: !7767)
!7798 = !DILocation(line: 205, column: 9, scope: !7767)
!7799 = !DILocation(line: 0, scope: !7767)
!7800 = !DILocation(line: 206, column: 14, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 205, column: 40)
!7802 = !DILocation(line: 206, column: 3, scope: !7801)
!7803 = !DILocation(line: 207, column: 30, scope: !7801)
!7804 = !DILocation(line: 207, column: 12, scope: !7801)
!7805 = !DILocation(line: 207, column: 10, scope: !7801)
!7806 = distinct !{!7806, !7791, !7807}
!7807 = !DILocation(line: 208, column: 2, scope: !7767)
!7808 = !DILocation(line: 210, column: 6, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 210, column: 6)
!7810 = !DILocation(line: 210, column: 13, scope: !7809)
!7811 = !DILocation(line: 210, column: 21, scope: !7809)
!7812 = !DILocation(line: 210, column: 25, scope: !7809)
!7813 = !DILocation(line: 210, column: 32, scope: !7809)
!7814 = !DILocation(line: 210, column: 6, scope: !7767)
!7815 = !DILocation(line: 211, column: 3, scope: !7809)
!7816 = !DILocation(line: 215, column: 25, scope: !7767)
!7817 = !DILocation(line: 215, column: 38, scope: !7767)
!7818 = !DILocation(line: 215, column: 12, scope: !7767)
!7819 = !DILocation(line: 215, column: 10, scope: !7767)
!7820 = !DILocation(line: 216, column: 2, scope: !7767)
!7821 = !DILocation(line: 216, column: 9, scope: !7767)
!7822 = !DILocation(line: 216, column: 16, scope: !7767)
!7823 = !DILocation(line: 216, column: 24, scope: !7767)
!7824 = !DILocation(line: 216, column: 28, scope: !7767)
!7825 = !DILocation(line: 216, column: 35, scope: !7767)
!7826 = !DILocation(line: 216, column: 47, scope: !7767)
!7827 = !DILocation(line: 217, column: 9, scope: !7767)
!7828 = !DILocation(line: 218, column: 14, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 217, column: 40)
!7830 = !DILocation(line: 218, column: 3, scope: !7829)
!7831 = !DILocation(line: 219, column: 12, scope: !7829)
!7832 = !DILocation(line: 219, column: 16, scope: !7829)
!7833 = !DILocation(line: 219, column: 21, scope: !7829)
!7834 = !DILocation(line: 219, column: 38, scope: !7829)
!7835 = !DILocation(line: 219, column: 10, scope: !7829)
!7836 = distinct !{!7836, !7820, !7837}
!7837 = !DILocation(line: 220, column: 2, scope: !7767)
!7838 = !DILocation(line: 222, column: 6, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 222, column: 6)
!7840 = !DILocation(line: 222, column: 13, scope: !7839)
!7841 = !DILocation(line: 222, column: 6, scope: !7767)
!7842 = !DILocation(line: 223, column: 3, scope: !7839)
!7843 = !DILocation(line: 225, column: 6, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 225, column: 6)
!7845 = !DILocation(line: 225, column: 13, scope: !7844)
!7846 = !DILocation(line: 225, column: 6, scope: !7767)
!7847 = !DILocation(line: 226, column: 3, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 225, column: 25)
!7849 = !DILocation(line: 229, column: 3, scope: !7848)
!7850 = !DILocation(line: 232, column: 2, scope: !7767)
!7851 = !DILocation(line: 233, column: 1, scope: !7767)
!7852 = distinct !DISubprogram(name: "ata_sff_busy_wait", scope: !152, file: !152, line: 2015, type: !7853, scopeLine: 2017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7853 = !DISubroutineType(types: !7854)
!7854 = !{!2256, !5951, !7, !7}
!7855 = !DILocalVariable(name: "ap", arg: 1, scope: !7852, file: !152, line: 2015, type: !5951)
!7856 = !DILocation(line: 2015, column: 53, scope: !7852)
!7857 = !DILocalVariable(name: "bits", arg: 2, scope: !7852, file: !152, line: 2015, type: !7)
!7858 = !DILocation(line: 2015, column: 70, scope: !7852)
!7859 = !DILocalVariable(name: "max", arg: 3, scope: !7852, file: !152, line: 2016, type: !7)
!7860 = !DILocation(line: 2016, column: 21, scope: !7852)
!7861 = !DILocalVariable(name: "status", scope: !7852, file: !152, line: 2018, type: !2256)
!7862 = !DILocation(line: 2018, column: 5, scope: !7852)
!7863 = !DILocation(line: 2020, column: 2, scope: !7852)
!7864 = !DILocation(line: 2021, column: 3, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !152, line: 2021, column: 3)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !152, line: 2021, column: 3)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !152, line: 2021, column: 3)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !152, line: 2021, column: 3)
!7869 = distinct !DILexicalBlock(scope: !7852, file: !152, line: 2020, column: 5)
!7870 = !DILocation(line: 2022, column: 12, scope: !7869)
!7871 = !DILocation(line: 2022, column: 16, scope: !7869)
!7872 = !DILocation(line: 2022, column: 21, scope: !7869)
!7873 = !DILocation(line: 2022, column: 38, scope: !7869)
!7874 = !DILocation(line: 2022, column: 10, scope: !7869)
!7875 = !DILocation(line: 2023, column: 6, scope: !7869)
!7876 = !DILocation(line: 2024, column: 2, scope: !7869)
!7877 = !DILocation(line: 2024, column: 11, scope: !7852)
!7878 = !DILocation(line: 2024, column: 18, scope: !7852)
!7879 = !DILocation(line: 2024, column: 26, scope: !7852)
!7880 = !DILocation(line: 2024, column: 30, scope: !7852)
!7881 = !DILocation(line: 2024, column: 39, scope: !7852)
!7882 = !DILocation(line: 2024, column: 37, scope: !7852)
!7883 = !DILocation(line: 2024, column: 45, scope: !7852)
!7884 = !DILocation(line: 2024, column: 49, scope: !7852)
!7885 = !DILocation(line: 2024, column: 53, scope: !7852)
!7886 = !DILocation(line: 0, scope: !7852)
!7887 = distinct !{!7887, !7863, !7888}
!7888 = !DILocation(line: 2024, column: 57, scope: !7852)
!7889 = !DILocation(line: 2026, column: 9, scope: !7852)
!7890 = !DILocation(line: 2026, column: 2, scope: !7852)
!7891 = distinct !DISubprogram(name: "ata_deadline", scope: !152, file: !152, line: 1835, type: !7892, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7892 = !DISubroutineType(types: !7893)
!7893 = !{!1010, !1010, !1010}
!7894 = !DILocalVariable(name: "m", arg: 1, scope: !7895, file: !7896, line: 363, type: !3434)
!7895 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !7896, file: !7896, line: 363, type: !7897, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7896 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!7897 = !DISubroutineType(types: !7898)
!7898 = !{!1010, !3434}
!7899 = !DILocation(line: 363, column: 74, scope: !7895, inlinedAt: !7900)
!7900 = distinct !DILocation(line: 1838, column: 24, scope: !7891)
!7901 = !DILocalVariable(name: "from_jiffies", arg: 1, scope: !7891, file: !152, line: 1835, type: !1010)
!7902 = !DILocation(line: 1835, column: 56, scope: !7891)
!7903 = !DILocalVariable(name: "timeout_msecs", arg: 2, scope: !7891, file: !152, line: 1836, type: !1010)
!7904 = !DILocation(line: 1836, column: 21, scope: !7891)
!7905 = !DILocation(line: 1838, column: 9, scope: !7891)
!7906 = !DILocation(line: 1838, column: 41, scope: !7891)
!7907 = !DILocation(line: 365, column: 27, scope: !7908, inlinedAt: !7900)
!7908 = distinct !DILexicalBlock(scope: !7895, file: !7896, line: 365, column: 6)
!7909 = !DILocation(line: 365, column: 6, scope: !7908, inlinedAt: !7900)
!7910 = !DILocation(line: 365, column: 6, scope: !7895, inlinedAt: !7900)
!7911 = !DILocation(line: 366, column: 12, scope: !7912, inlinedAt: !7900)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !7896, line: 366, column: 7)
!7913 = distinct !DILexicalBlock(scope: !7908, file: !7896, line: 365, column: 31)
!7914 = !DILocation(line: 366, column: 14, scope: !7912, inlinedAt: !7900)
!7915 = !DILocation(line: 366, column: 7, scope: !7913, inlinedAt: !7900)
!7916 = !DILocation(line: 367, column: 4, scope: !7912, inlinedAt: !7900)
!7917 = !DILocation(line: 368, column: 28, scope: !7913, inlinedAt: !7900)
!7918 = !DILocation(line: 368, column: 10, scope: !7913, inlinedAt: !7900)
!7919 = !DILocation(line: 368, column: 3, scope: !7913, inlinedAt: !7900)
!7920 = !DILocation(line: 370, column: 29, scope: !7921, inlinedAt: !7900)
!7921 = distinct !DILexicalBlock(scope: !7908, file: !7896, line: 369, column: 9)
!7922 = !DILocation(line: 370, column: 10, scope: !7921, inlinedAt: !7900)
!7923 = !DILocation(line: 370, column: 3, scope: !7921, inlinedAt: !7900)
!7924 = !DILocation(line: 372, column: 1, scope: !7895, inlinedAt: !7900)
!7925 = !DILocation(line: 1838, column: 22, scope: !7891)
!7926 = !DILocation(line: 1838, column: 2, scope: !7891)
!7927 = distinct !DISubprogram(name: "ata_sff_wait_ready", scope: !3, file: !3, line: 257, type: !6441, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7928 = !DILocalVariable(name: "link", arg: 1, scope: !7927, file: !3, line: 257, type: !6179)
!7929 = !DILocation(line: 257, column: 41, scope: !7927)
!7930 = !DILocalVariable(name: "deadline", arg: 2, scope: !7927, file: !3, line: 257, type: !1010)
!7931 = !DILocation(line: 257, column: 61, scope: !7927)
!7932 = !DILocation(line: 259, column: 24, scope: !7927)
!7933 = !DILocation(line: 259, column: 30, scope: !7927)
!7934 = !DILocation(line: 259, column: 9, scope: !7927)
!7935 = !DILocation(line: 259, column: 2, scope: !7927)
!7936 = distinct !DISubprogram(name: "ata_sff_check_ready", scope: !3, file: !3, line: 236, type: !7937, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!181, !6179}
!7939 = !DILocalVariable(name: "link", arg: 1, scope: !7936, file: !3, line: 236, type: !6179)
!7940 = !DILocation(line: 236, column: 49, scope: !7936)
!7941 = !DILocalVariable(name: "status", scope: !7936, file: !3, line: 238, type: !2256)
!7942 = !DILocation(line: 238, column: 5, scope: !7936)
!7943 = !DILocation(line: 238, column: 14, scope: !7936)
!7944 = !DILocation(line: 238, column: 20, scope: !7936)
!7945 = !DILocation(line: 238, column: 24, scope: !7936)
!7946 = !DILocation(line: 238, column: 29, scope: !7936)
!7947 = !DILocation(line: 238, column: 46, scope: !7936)
!7948 = !DILocation(line: 238, column: 52, scope: !7936)
!7949 = !DILocation(line: 240, column: 25, scope: !7936)
!7950 = !DILocation(line: 240, column: 9, scope: !7936)
!7951 = !DILocation(line: 240, column: 2, scope: !7936)
!7952 = distinct !DISubprogram(name: "ata_sff_irq_on", scope: !3, file: !3, line: 362, type: !6435, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!7953 = !DILocalVariable(name: "ap", arg: 1, scope: !7952, file: !3, line: 362, type: !5951)
!7954 = !DILocation(line: 362, column: 38, scope: !7952)
!7955 = !DILocalVariable(name: "ioaddr", scope: !7952, file: !3, line: 364, type: !7298)
!7956 = !DILocation(line: 364, column: 22, scope: !7952)
!7957 = !DILocation(line: 364, column: 32, scope: !7952)
!7958 = !DILocation(line: 364, column: 36, scope: !7952)
!7959 = !DILocation(line: 366, column: 6, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 366, column: 6)
!7961 = !DILocation(line: 366, column: 10, scope: !7960)
!7962 = !DILocation(line: 366, column: 15, scope: !7960)
!7963 = !DILocation(line: 366, column: 6, scope: !7952)
!7964 = !DILocation(line: 367, column: 3, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 366, column: 27)
!7966 = !DILocation(line: 367, column: 7, scope: !7965)
!7967 = !DILocation(line: 367, column: 12, scope: !7965)
!7968 = !DILocation(line: 367, column: 23, scope: !7965)
!7969 = !DILocation(line: 368, column: 3, scope: !7965)
!7970 = !DILocation(line: 371, column: 2, scope: !7952)
!7971 = !DILocation(line: 371, column: 6, scope: !7952)
!7972 = !DILocation(line: 371, column: 10, scope: !7952)
!7973 = !DILocation(line: 372, column: 17, scope: !7952)
!7974 = !DILocation(line: 372, column: 21, scope: !7952)
!7975 = !DILocation(line: 372, column: 2, scope: !7952)
!7976 = !DILocation(line: 372, column: 6, scope: !7952)
!7977 = !DILocation(line: 372, column: 15, scope: !7952)
!7978 = !DILocation(line: 374, column: 6, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 374, column: 6)
!7980 = !DILocation(line: 374, column: 10, scope: !7979)
!7981 = !DILocation(line: 374, column: 15, scope: !7979)
!7982 = !DILocation(line: 374, column: 30, scope: !7979)
!7983 = !DILocation(line: 374, column: 33, scope: !7979)
!7984 = !DILocation(line: 374, column: 41, scope: !7979)
!7985 = !DILocation(line: 374, column: 6, scope: !7952)
!7986 = !DILocation(line: 375, column: 22, scope: !7979)
!7987 = !DILocation(line: 375, column: 26, scope: !7979)
!7988 = !DILocation(line: 375, column: 30, scope: !7979)
!7989 = !DILocation(line: 375, column: 3, scope: !7979)
!7990 = !DILocation(line: 376, column: 16, scope: !7952)
!7991 = !DILocation(line: 376, column: 2, scope: !7952)
!7992 = !DILocation(line: 378, column: 6, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 378, column: 6)
!7994 = !DILocation(line: 378, column: 10, scope: !7993)
!7995 = !DILocation(line: 378, column: 15, scope: !7993)
!7996 = !DILocation(line: 378, column: 6, scope: !7952)
!7997 = !DILocation(line: 379, column: 3, scope: !7993)
!7998 = !DILocation(line: 379, column: 7, scope: !7993)
!7999 = !DILocation(line: 379, column: 12, scope: !7993)
!8000 = !DILocation(line: 379, column: 26, scope: !7993)
!8001 = !DILocation(line: 380, column: 1, scope: !7952)
!8002 = distinct !DISubprogram(name: "ata_sff_set_devctl", scope: !3, file: !3, line: 276, type: !6513, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8003 = !DILocalVariable(name: "ap", arg: 1, scope: !8002, file: !3, line: 276, type: !5951)
!8004 = !DILocation(line: 276, column: 49, scope: !8002)
!8005 = !DILocalVariable(name: "ctl", arg: 2, scope: !8002, file: !3, line: 276, type: !2256)
!8006 = !DILocation(line: 276, column: 56, scope: !8002)
!8007 = !DILocation(line: 278, column: 6, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 278, column: 6)
!8009 = !DILocation(line: 278, column: 10, scope: !8008)
!8010 = !DILocation(line: 278, column: 15, scope: !8008)
!8011 = !DILocation(line: 278, column: 6, scope: !8002)
!8012 = !DILocation(line: 279, column: 3, scope: !8008)
!8013 = !DILocation(line: 279, column: 7, scope: !8008)
!8014 = !DILocation(line: 279, column: 12, scope: !8008)
!8015 = !DILocation(line: 279, column: 27, scope: !8008)
!8016 = !DILocation(line: 279, column: 31, scope: !8008)
!8017 = !DILocation(line: 281, column: 12, scope: !8008)
!8018 = !DILocation(line: 281, column: 17, scope: !8008)
!8019 = !DILocation(line: 281, column: 21, scope: !8008)
!8020 = !DILocation(line: 281, column: 28, scope: !8008)
!8021 = !DILocation(line: 281, column: 3, scope: !8008)
!8022 = !DILocation(line: 282, column: 1, scope: !8002)
!8023 = distinct !DISubprogram(name: "ata_wait_idle", scope: !152, file: !152, line: 2039, type: !6517, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8024 = !DILocalVariable(name: "ap", arg: 1, scope: !8023, file: !152, line: 2039, type: !5951)
!8025 = !DILocation(line: 2039, column: 49, scope: !8023)
!8026 = !DILocalVariable(name: "status", scope: !8023, file: !152, line: 2041, type: !2256)
!8027 = !DILocation(line: 2041, column: 5, scope: !8023)
!8028 = !DILocation(line: 2041, column: 32, scope: !8023)
!8029 = !DILocation(line: 2041, column: 14, scope: !8023)
!8030 = !DILocation(line: 2049, column: 9, scope: !8023)
!8031 = !DILocation(line: 2049, column: 2, scope: !8023)
!8032 = distinct !DISubprogram(name: "ata_sff_data_xfer32", scope: !3, file: !3, line: 593, type: !6533, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8033 = !DILocalVariable(name: "qc", arg: 1, scope: !8032, file: !3, line: 593, type: !6170)
!8034 = !DILocation(line: 593, column: 57, scope: !8032)
!8035 = !DILocalVariable(name: "buf", arg: 2, scope: !8032, file: !3, line: 593, type: !6535)
!8036 = !DILocation(line: 593, column: 76, scope: !8032)
!8037 = !DILocalVariable(name: "buflen", arg: 3, scope: !8032, file: !3, line: 594, type: !7)
!8038 = !DILocation(line: 594, column: 24, scope: !8032)
!8039 = !DILocalVariable(name: "rw", arg: 4, scope: !8032, file: !3, line: 594, type: !181)
!8040 = !DILocation(line: 594, column: 36, scope: !8032)
!8041 = !DILocalVariable(name: "dev", scope: !8032, file: !3, line: 596, type: !6175)
!8042 = !DILocation(line: 596, column: 21, scope: !8032)
!8043 = !DILocation(line: 596, column: 27, scope: !8032)
!8044 = !DILocation(line: 596, column: 31, scope: !8032)
!8045 = !DILocalVariable(name: "ap", scope: !8032, file: !3, line: 597, type: !5951)
!8046 = !DILocation(line: 597, column: 19, scope: !8032)
!8047 = !DILocation(line: 597, column: 24, scope: !8032)
!8048 = !DILocation(line: 597, column: 29, scope: !8032)
!8049 = !DILocation(line: 597, column: 35, scope: !8032)
!8050 = !DILocalVariable(name: "data_addr", scope: !8032, file: !3, line: 598, type: !968)
!8051 = !DILocation(line: 598, column: 16, scope: !8032)
!8052 = !DILocation(line: 598, column: 28, scope: !8032)
!8053 = !DILocation(line: 598, column: 32, scope: !8032)
!8054 = !DILocation(line: 598, column: 39, scope: !8032)
!8055 = !DILocalVariable(name: "words", scope: !8032, file: !3, line: 599, type: !7)
!8056 = !DILocation(line: 599, column: 15, scope: !8032)
!8057 = !DILocation(line: 599, column: 23, scope: !8032)
!8058 = !DILocation(line: 599, column: 30, scope: !8032)
!8059 = !DILocalVariable(name: "slop", scope: !8032, file: !3, line: 600, type: !181)
!8060 = !DILocation(line: 600, column: 6, scope: !8032)
!8061 = !DILocation(line: 600, column: 13, scope: !8032)
!8062 = !DILocation(line: 600, column: 20, scope: !8032)
!8063 = !DILocation(line: 602, column: 8, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 602, column: 6)
!8065 = !DILocation(line: 602, column: 12, scope: !8064)
!8066 = !DILocation(line: 602, column: 19, scope: !8064)
!8067 = !DILocation(line: 602, column: 6, scope: !8032)
!8068 = !DILocation(line: 603, column: 28, scope: !8064)
!8069 = !DILocation(line: 603, column: 32, scope: !8064)
!8070 = !DILocation(line: 603, column: 37, scope: !8064)
!8071 = !DILocation(line: 603, column: 45, scope: !8064)
!8072 = !DILocation(line: 603, column: 10, scope: !8064)
!8073 = !DILocation(line: 603, column: 3, scope: !8064)
!8074 = !DILocation(line: 606, column: 6, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 606, column: 6)
!8076 = !DILocation(line: 606, column: 9, scope: !8075)
!8077 = !DILocation(line: 606, column: 6, scope: !8032)
!8078 = !DILocation(line: 607, column: 16, scope: !8075)
!8079 = !DILocation(line: 607, column: 27, scope: !8075)
!8080 = !DILocation(line: 607, column: 32, scope: !8075)
!8081 = !DILocation(line: 607, column: 3, scope: !8075)
!8082 = !DILocation(line: 609, column: 17, scope: !8075)
!8083 = !DILocation(line: 609, column: 28, scope: !8075)
!8084 = !DILocation(line: 609, column: 33, scope: !8075)
!8085 = !DILocation(line: 609, column: 3, scope: !8075)
!8086 = !DILocation(line: 612, column: 6, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 612, column: 6)
!8088 = !DILocation(line: 612, column: 6, scope: !8032)
!8089 = !DILocalVariable(name: "pad", scope: !8090, file: !3, line: 613, type: !8091)
!8090 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 612, column: 22)
!8091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 32, elements: !1015)
!8092 = !DILocation(line: 613, column: 17, scope: !8090)
!8093 = !DILocation(line: 616, column: 10, scope: !8090)
!8094 = !DILocation(line: 616, column: 19, scope: !8090)
!8095 = !DILocation(line: 616, column: 17, scope: !8090)
!8096 = !DILocation(line: 616, column: 7, scope: !8090)
!8097 = !DILocation(line: 622, column: 7, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 622, column: 7)
!8099 = !DILocation(line: 622, column: 10, scope: !8098)
!8100 = !DILocation(line: 622, column: 7, scope: !8090)
!8101 = !DILocation(line: 623, column: 8, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 623, column: 8)
!8103 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 622, column: 19)
!8104 = !DILocation(line: 623, column: 13, scope: !8102)
!8105 = !DILocation(line: 623, column: 8, scope: !8103)
!8106 = !DILocation(line: 624, column: 18, scope: !8102)
!8107 = !DILocation(line: 624, column: 29, scope: !8102)
!8108 = !DILocation(line: 624, column: 5, scope: !8102)
!8109 = !DILocation(line: 626, column: 18, scope: !8102)
!8110 = !DILocation(line: 626, column: 29, scope: !8102)
!8111 = !DILocation(line: 626, column: 5, scope: !8102)
!8112 = !DILocation(line: 627, column: 11, scope: !8103)
!8113 = !DILocation(line: 627, column: 4, scope: !8103)
!8114 = !DILocation(line: 627, column: 21, scope: !8103)
!8115 = !DILocation(line: 628, column: 3, scope: !8103)
!8116 = !DILocation(line: 629, column: 4, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 628, column: 10)
!8118 = !DILocation(line: 629, column: 16, scope: !8117)
!8119 = !DILocation(line: 629, column: 21, scope: !8117)
!8120 = !DILocation(line: 630, column: 8, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 630, column: 8)
!8122 = !DILocation(line: 630, column: 13, scope: !8121)
!8123 = !DILocation(line: 630, column: 8, scope: !8117)
!8124 = !DILocation(line: 631, column: 19, scope: !8121)
!8125 = !DILocation(line: 631, column: 30, scope: !8121)
!8126 = !DILocation(line: 631, column: 5, scope: !8121)
!8127 = !DILocation(line: 633, column: 19, scope: !8121)
!8128 = !DILocation(line: 633, column: 30, scope: !8121)
!8129 = !DILocation(line: 633, column: 5, scope: !8121)
!8130 = !DILocation(line: 635, column: 2, scope: !8090)
!8131 = !DILocation(line: 636, column: 10, scope: !8032)
!8132 = !DILocation(line: 636, column: 17, scope: !8032)
!8133 = !DILocation(line: 636, column: 22, scope: !8032)
!8134 = !DILocation(line: 636, column: 2, scope: !8032)
!8135 = !DILocation(line: 637, column: 1, scope: !8032)
!8136 = distinct !DISubprogram(name: "ata_sff_hsm_move", scope: !3, file: !3, line: 968, type: !8137, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8137 = !DISubroutineType(types: !8138)
!8138 = !{!181, !5951, !6170, !2256, !181}
!8139 = !DILocalVariable(name: "ap", arg: 1, scope: !8136, file: !3, line: 968, type: !5951)
!8140 = !DILocation(line: 968, column: 39, scope: !8136)
!8141 = !DILocalVariable(name: "qc", arg: 2, scope: !8136, file: !3, line: 968, type: !6170)
!8142 = !DILocation(line: 968, column: 66, scope: !8136)
!8143 = !DILocalVariable(name: "status", arg: 3, scope: !8136, file: !3, line: 969, type: !2256)
!8144 = !DILocation(line: 969, column: 11, scope: !8136)
!8145 = !DILocalVariable(name: "in_wq", arg: 4, scope: !8136, file: !3, line: 969, type: !181)
!8146 = !DILocation(line: 969, column: 23, scope: !8136)
!8147 = !DILocalVariable(name: "link", scope: !8136, file: !3, line: 971, type: !6179)
!8148 = !DILocation(line: 971, column: 19, scope: !8136)
!8149 = !DILocation(line: 971, column: 26, scope: !8136)
!8150 = !DILocation(line: 971, column: 30, scope: !8136)
!8151 = !DILocation(line: 971, column: 35, scope: !8136)
!8152 = !DILocalVariable(name: "ehi", scope: !8136, file: !3, line: 972, type: !8153)
!8153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6194, size: 64)
!8154 = !DILocation(line: 972, column: 22, scope: !8136)
!8155 = !DILocation(line: 972, column: 29, scope: !8136)
!8156 = !DILocation(line: 972, column: 35, scope: !8136)
!8157 = !DILocalVariable(name: "poll_next", scope: !8136, file: !3, line: 973, type: !181)
!8158 = !DILocation(line: 973, column: 6, scope: !8136)
!8159 = !DILocation(line: 975, column: 2, scope: !8136)
!8160 = !DILocation(line: 975, column: 2, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 975, column: 2)
!8162 = !DILocalVariable(name: "__ret_warn_on", scope: !8163, file: !3, line: 977, type: !181)
!8163 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 977, column: 2)
!8164 = !DILocation(line: 977, column: 2, scope: !8163)
!8165 = !DILocation(line: 977, column: 2, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 977, column: 2)
!8167 = !DILocation(line: 977, column: 2, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 977, column: 2)
!8169 = !DILocation(line: 977, column: 2, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 977, column: 2)
!8171 = !DILocation(line: 977, column: 2, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 977, column: 2)
!8173 = !{i32 -2140280948, i32 -2140280919, i32 -2140280873, i32 -2140280815, i32 -2140280761, i32 -2140280707, i32 -2140280652, i32 -2140280621}
!8174 = !DILocation(line: 977, column: 2, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 977, column: 2)
!8176 = !{i32 -2140280204, i32 -2140280197, i32 -2140280145, i32 -2140280114, i32 -2140280084}
!8177 = !DILocation(line: 977, column: 2, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 977, column: 2)
!8179 = !DILocalVariable(name: "__ret_warn_on", scope: !8180, file: !3, line: 983, type: !181)
!8180 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 983, column: 2)
!8181 = !DILocation(line: 983, column: 2, scope: !8180)
!8182 = !DILocation(line: 983, column: 2, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 983, column: 2)
!8184 = !DILocation(line: 983, column: 2, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 983, column: 2)
!8186 = !DILocation(line: 983, column: 2, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 983, column: 2)
!8188 = !DILocation(line: 983, column: 2, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 983, column: 2)
!8190 = !{i32 -2140279451, i32 -2140279422, i32 -2140279376, i32 -2140279318, i32 -2140279264, i32 -2140279210, i32 -2140279155, i32 -2140279124}
!8191 = !DILocation(line: 983, column: 2, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 983, column: 2)
!8193 = !{i32 -2140278707, i32 -2140278700, i32 -2140278648, i32 -2140278617, i32 -2140278587}
!8194 = !DILocation(line: 983, column: 2, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 983, column: 2)
!8196 = !DILocation(line: 983, column: 2, scope: !8136)
!8197 = !DILabel(scope: !8136, name: "fsm_start", file: !3, line: 985)
!8198 = !DILocation(line: 985, column: 1, scope: !8136)
!8199 = !DILocation(line: 989, column: 10, scope: !8136)
!8200 = !DILocation(line: 989, column: 14, scope: !8136)
!8201 = !DILocation(line: 989, column: 2, scope: !8136)
!8202 = !DILocation(line: 997, column: 16, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 989, column: 30)
!8204 = !DILocation(line: 997, column: 20, scope: !8203)
!8205 = !DILocation(line: 997, column: 23, scope: !8203)
!8206 = !DILocation(line: 997, column: 29, scope: !8203)
!8207 = !DILocation(line: 997, column: 15, scope: !8203)
!8208 = !DILocation(line: 997, column: 13, scope: !8203)
!8209 = !DILocation(line: 1000, column: 7, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1000, column: 7)
!8211 = !DILocation(line: 1000, column: 7, scope: !8203)
!8212 = !DILocation(line: 1002, column: 8, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1002, column: 8)
!8214 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1000, column: 42)
!8215 = !DILocation(line: 1002, column: 8, scope: !8214)
!8216 = !DILocation(line: 1004, column: 5, scope: !8213)
!8217 = !DILocation(line: 1004, column: 9, scope: !8213)
!8218 = !DILocation(line: 1004, column: 18, scope: !8213)
!8219 = !DILocation(line: 1007, column: 23, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 1005, column: 9)
!8221 = !DILocation(line: 1007, column: 5, scope: !8220)
!8222 = !DILocation(line: 1009, column: 5, scope: !8220)
!8223 = !DILocation(line: 1009, column: 9, scope: !8220)
!8224 = !DILocation(line: 1009, column: 18, scope: !8220)
!8225 = !DILocation(line: 1012, column: 4, scope: !8214)
!8226 = !DILocation(line: 1012, column: 8, scope: !8214)
!8227 = !DILocation(line: 1012, column: 23, scope: !8214)
!8228 = !DILocation(line: 1013, column: 4, scope: !8214)
!8229 = !DILocation(line: 1022, column: 7, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1022, column: 7)
!8231 = !DILocation(line: 1022, column: 7, scope: !8203)
!8232 = !DILocation(line: 1028, column: 10, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 1028, column: 8)
!8234 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 1022, column: 46)
!8235 = !DILocation(line: 1028, column: 14, scope: !8233)
!8236 = !DILocation(line: 1028, column: 19, scope: !8233)
!8237 = !DILocation(line: 1028, column: 27, scope: !8233)
!8238 = !DILocation(line: 1028, column: 8, scope: !8234)
!8239 = !DILocation(line: 1029, column: 23, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1028, column: 53)
!8241 = !DILocation(line: 1031, column: 23, scope: !8240)
!8242 = !DILocation(line: 1029, column: 5, scope: !8240)
!8243 = !DILocation(line: 1032, column: 5, scope: !8240)
!8244 = !DILocation(line: 1032, column: 9, scope: !8240)
!8245 = !DILocation(line: 1032, column: 18, scope: !8240)
!8246 = !DILocation(line: 1033, column: 5, scope: !8240)
!8247 = !DILocation(line: 1033, column: 9, scope: !8240)
!8248 = !DILocation(line: 1033, column: 24, scope: !8240)
!8249 = !DILocation(line: 1034, column: 5, scope: !8240)
!8250 = !DILocation(line: 1036, column: 3, scope: !8234)
!8251 = !DILocation(line: 1038, column: 7, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1038, column: 7)
!8253 = !DILocation(line: 1038, column: 11, scope: !8252)
!8254 = !DILocation(line: 1038, column: 14, scope: !8252)
!8255 = !DILocation(line: 1038, column: 23, scope: !8252)
!8256 = !DILocation(line: 1038, column: 7, scope: !8203)
!8257 = !DILocation(line: 1047, column: 4, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 1038, column: 40)
!8259 = !DILocation(line: 1047, column: 8, scope: !8258)
!8260 = !DILocation(line: 1047, column: 23, scope: !8258)
!8261 = !DILocation(line: 1048, column: 20, scope: !8258)
!8262 = !DILocation(line: 1048, column: 4, scope: !8258)
!8263 = !DILocation(line: 1049, column: 3, scope: !8258)
!8264 = !DILocation(line: 1051, column: 19, scope: !8252)
!8265 = !DILocation(line: 1051, column: 23, scope: !8252)
!8266 = !DILocation(line: 1051, column: 4, scope: !8252)
!8267 = !DILocation(line: 1056, column: 3, scope: !8203)
!8268 = !DILocation(line: 1060, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1060, column: 7)
!8270 = !DILocation(line: 1060, column: 11, scope: !8269)
!8271 = !DILocation(line: 1060, column: 14, scope: !8269)
!8272 = !DILocation(line: 1060, column: 23, scope: !8269)
!8273 = !DILocation(line: 1060, column: 7, scope: !8203)
!8274 = !DILocation(line: 1062, column: 9, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 1062, column: 8)
!8276 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 1060, column: 42)
!8277 = !DILocation(line: 1062, column: 16, scope: !8275)
!8278 = !DILocation(line: 1062, column: 27, scope: !8275)
!8279 = !DILocation(line: 1062, column: 8, scope: !8276)
!8280 = !DILocation(line: 1066, column: 5, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 1062, column: 33)
!8282 = !DILocation(line: 1066, column: 9, scope: !8281)
!8283 = !DILocation(line: 1066, column: 24, scope: !8281)
!8284 = !DILocation(line: 1067, column: 5, scope: !8281)
!8285 = !DILocation(line: 1076, column: 8, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 1076, column: 8)
!8287 = !DILocation(line: 1076, column: 8, scope: !8276)
!8288 = !DILocation(line: 1077, column: 23, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1076, column: 47)
!8290 = !DILocation(line: 1079, column: 23, scope: !8289)
!8291 = !DILocation(line: 1077, column: 5, scope: !8289)
!8292 = !DILocation(line: 1080, column: 5, scope: !8289)
!8293 = !DILocation(line: 1080, column: 9, scope: !8289)
!8294 = !DILocation(line: 1080, column: 18, scope: !8289)
!8295 = !DILocation(line: 1081, column: 5, scope: !8289)
!8296 = !DILocation(line: 1081, column: 9, scope: !8289)
!8297 = !DILocation(line: 1081, column: 24, scope: !8289)
!8298 = !DILocation(line: 1082, column: 5, scope: !8289)
!8299 = !DILocation(line: 1085, column: 20, scope: !8276)
!8300 = !DILocation(line: 1085, column: 4, scope: !8276)
!8301 = !DILocation(line: 1087, column: 8, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 1087, column: 8)
!8303 = !DILocation(line: 1087, column: 8, scope: !8276)
!8304 = !DILocation(line: 1089, column: 5, scope: !8302)
!8305 = !DILocation(line: 1091, column: 3, scope: !8276)
!8306 = !DILocation(line: 1093, column: 8, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1093, column: 8)
!8308 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 1091, column: 10)
!8309 = !DILocation(line: 1093, column: 8, scope: !8308)
!8310 = !DILocation(line: 1095, column: 9, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 1095, column: 9)
!8312 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 1093, column: 43)
!8313 = !DILocation(line: 1095, column: 9, scope: !8312)
!8314 = !DILocation(line: 1097, column: 6, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 1095, column: 46)
!8316 = !DILocation(line: 1097, column: 10, scope: !8315)
!8317 = !DILocation(line: 1097, column: 19, scope: !8315)
!8318 = !DILocation(line: 1103, column: 10, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 1103, column: 10)
!8320 = !DILocation(line: 1103, column: 14, scope: !8319)
!8321 = !DILocation(line: 1103, column: 19, scope: !8319)
!8322 = !DILocation(line: 1103, column: 27, scope: !8319)
!8323 = !DILocation(line: 1103, column: 10, scope: !8315)
!8324 = !DILocation(line: 1105, column: 7, scope: !8319)
!8325 = !DILocation(line: 1105, column: 11, scope: !8319)
!8326 = !DILocation(line: 1105, column: 20, scope: !8319)
!8327 = !DILocation(line: 1107, column: 5, scope: !8315)
!8328 = !DILocation(line: 1112, column: 24, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 1107, column: 12)
!8330 = !DILocation(line: 1114, column: 24, scope: !8329)
!8331 = !DILocation(line: 1112, column: 6, scope: !8329)
!8332 = !DILocation(line: 1115, column: 6, scope: !8329)
!8333 = !DILocation(line: 1115, column: 10, scope: !8329)
!8334 = !DILocation(line: 1115, column: 19, scope: !8329)
!8335 = !DILocation(line: 1119, column: 5, scope: !8312)
!8336 = !DILocation(line: 1119, column: 9, scope: !8312)
!8337 = !DILocation(line: 1119, column: 24, scope: !8312)
!8338 = !DILocation(line: 1120, column: 5, scope: !8312)
!8339 = !DILocation(line: 1133, column: 8, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1133, column: 8)
!8341 = !DILocation(line: 1133, column: 8, scope: !8308)
!8342 = !DILocation(line: 1135, column: 5, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 1133, column: 47)
!8344 = !DILocation(line: 1135, column: 9, scope: !8343)
!8345 = !DILocation(line: 1135, column: 18, scope: !8343)
!8346 = !DILocation(line: 1137, column: 11, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1137, column: 9)
!8348 = !DILocation(line: 1137, column: 15, scope: !8347)
!8349 = !DILocation(line: 1137, column: 18, scope: !8347)
!8350 = !DILocation(line: 1137, column: 24, scope: !8347)
!8351 = !DILocation(line: 1137, column: 9, scope: !8343)
!8352 = !DILocation(line: 1138, column: 22, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 1137, column: 44)
!8354 = !DILocation(line: 1138, column: 6, scope: !8353)
!8355 = !DILocation(line: 1139, column: 29, scope: !8353)
!8356 = !DILocation(line: 1139, column: 15, scope: !8353)
!8357 = !DILocation(line: 1139, column: 13, scope: !8353)
!8358 = !DILocation(line: 1140, column: 5, scope: !8353)
!8359 = !DILocation(line: 1142, column: 9, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1142, column: 9)
!8361 = !DILocation(line: 1142, column: 16, scope: !8360)
!8362 = !DILocation(line: 1142, column: 9, scope: !8343)
!8363 = !DILocation(line: 1143, column: 24, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 1142, column: 40)
!8365 = !DILocation(line: 1145, column: 24, scope: !8364)
!8366 = !DILocation(line: 1143, column: 6, scope: !8364)
!8367 = !DILocation(line: 1146, column: 6, scope: !8364)
!8368 = !DILocation(line: 1146, column: 10, scope: !8364)
!8369 = !DILocation(line: 1146, column: 19, scope: !8364)
!8370 = !DILocation(line: 1147, column: 5, scope: !8364)
!8371 = !DILocation(line: 1156, column: 9, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1156, column: 9)
!8373 = !DILocation(line: 1156, column: 16, scope: !8372)
!8374 = !DILocation(line: 1156, column: 9, scope: !8343)
!8375 = !DILocation(line: 1157, column: 6, scope: !8372)
!8376 = !DILocation(line: 1157, column: 10, scope: !8372)
!8377 = !DILocation(line: 1157, column: 19, scope: !8372)
!8378 = !DILocation(line: 1163, column: 5, scope: !8343)
!8379 = !DILocation(line: 1163, column: 9, scope: !8343)
!8380 = !DILocation(line: 1163, column: 24, scope: !8343)
!8381 = !DILocation(line: 1164, column: 5, scope: !8343)
!8382 = !DILocation(line: 1167, column: 20, scope: !8308)
!8383 = !DILocation(line: 1167, column: 4, scope: !8308)
!8384 = !DILocation(line: 1169, column: 8, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1169, column: 8)
!8386 = !DILocation(line: 1169, column: 12, scope: !8385)
!8387 = !DILocation(line: 1169, column: 27, scope: !8385)
!8388 = !DILocation(line: 1169, column: 42, scope: !8385)
!8389 = !DILocation(line: 1170, column: 11, scope: !8385)
!8390 = !DILocation(line: 1170, column: 15, scope: !8385)
!8391 = !DILocation(line: 1170, column: 18, scope: !8385)
!8392 = !DILocation(line: 1170, column: 24, scope: !8385)
!8393 = !DILocation(line: 1169, column: 8, scope: !8308)
!8394 = !DILocation(line: 1172, column: 28, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 1170, column: 45)
!8396 = !DILocation(line: 1172, column: 14, scope: !8395)
!8397 = !DILocation(line: 1172, column: 12, scope: !8395)
!8398 = !DILocation(line: 1173, column: 5, scope: !8395)
!8399 = !DILocation(line: 1177, column: 13, scope: !8203)
!8400 = !DILocation(line: 1178, column: 3, scope: !8203)
!8401 = !DILocation(line: 1181, column: 7, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1181, column: 7)
!8403 = !DILocation(line: 1181, column: 7, scope: !8203)
!8404 = !DILocation(line: 1182, column: 34, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1181, column: 34)
!8406 = !DILocation(line: 1182, column: 20, scope: !8405)
!8407 = !DILocation(line: 1182, column: 4, scope: !8405)
!8408 = !DILocation(line: 1182, column: 8, scope: !8405)
!8409 = !DILocation(line: 1182, column: 17, scope: !8405)
!8410 = !DILocation(line: 1183, column: 4, scope: !8405)
!8411 = !DILocation(line: 1183, column: 8, scope: !8405)
!8412 = !DILocation(line: 1183, column: 23, scope: !8405)
!8413 = !DILocation(line: 1184, column: 4, scope: !8405)
!8414 = !DILocalVariable(name: "__ret_warn_on", scope: !8415, file: !3, line: 1191, type: !181)
!8415 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1191, column: 3)
!8416 = !DILocation(line: 1191, column: 3, scope: !8415)
!8417 = !DILocation(line: 1191, column: 3, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 1191, column: 3)
!8419 = !DILocation(line: 1191, column: 3, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 1191, column: 3)
!8421 = !DILocation(line: 1191, column: 3, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 1191, column: 3)
!8423 = !DILocation(line: 1191, column: 3, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 1191, column: 3)
!8425 = !{i32 -2140277467, i32 -2140277438, i32 -2140277392, i32 -2140277334, i32 -2140277280, i32 -2140277226, i32 -2140277171, i32 -2140277140}
!8426 = !DILocation(line: 1191, column: 3, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 1191, column: 3)
!8428 = !{i32 -2140276722, i32 -2140276715, i32 -2140276663, i32 -2140276632, i32 -2140276602}
!8429 = !DILocation(line: 1191, column: 3, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 1191, column: 3)
!8431 = !DILocation(line: 1193, column: 3, scope: !8203)
!8432 = !DILocation(line: 1193, column: 7, scope: !8203)
!8433 = !DILocation(line: 1193, column: 22, scope: !8203)
!8434 = !DILocation(line: 1196, column: 23, scope: !8203)
!8435 = !DILocation(line: 1196, column: 27, scope: !8203)
!8436 = !DILocation(line: 1196, column: 3, scope: !8203)
!8437 = !DILocation(line: 1198, column: 13, scope: !8203)
!8438 = !DILocation(line: 1199, column: 3, scope: !8203)
!8439 = !DILocation(line: 1202, column: 3, scope: !8203)
!8440 = !DILocation(line: 1202, column: 7, scope: !8203)
!8441 = !DILocation(line: 1202, column: 22, scope: !8203)
!8442 = !DILocation(line: 1205, column: 23, scope: !8203)
!8443 = !DILocation(line: 1205, column: 27, scope: !8203)
!8444 = !DILocation(line: 1205, column: 3, scope: !8203)
!8445 = !DILocation(line: 1207, column: 13, scope: !8203)
!8446 = !DILocation(line: 1208, column: 3, scope: !8203)
!8447 = !DILocation(line: 1210, column: 13, scope: !8203)
!8448 = !DILocalVariable(name: "__ret_warn_on", scope: !8449, file: !3, line: 1211, type: !181)
!8449 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1211, column: 3)
!8450 = !DILocation(line: 1211, column: 3, scope: !8449)
!8451 = !DILocation(line: 1211, column: 3, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 1211, column: 3)
!8453 = !DILocation(line: 1211, column: 3, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 1211, column: 3)
!8455 = !DILocation(line: 1211, column: 3, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 1211, column: 3)
!8457 = !DILocation(line: 1211, column: 3, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 1211, column: 3)
!8459 = !DILocation(line: 1211, column: 3, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 1211, column: 3)
!8461 = !DILocation(line: 1211, column: 3, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 1211, column: 3)
!8463 = !{i32 -2140275644, i32 -2140275615, i32 -2140275569, i32 -2140275511, i32 -2140275457, i32 -2140275403, i32 -2140275348, i32 -2140275317}
!8464 = !DILocation(line: 1211, column: 3, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 1211, column: 3)
!8466 = !{i32 -2140274899, i32 -2140274892, i32 -2140274840, i32 -2140274809, i32 -2140274779}
!8467 = !DILocation(line: 1211, column: 3, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 1211, column: 3)
!8469 = !DILocation(line: 1211, column: 3, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 1211, column: 3)
!8471 = !DILocation(line: 1213, column: 2, scope: !8203)
!8472 = !DILocation(line: 1215, column: 9, scope: !8136)
!8473 = !DILocation(line: 1215, column: 2, scope: !8136)
!8474 = distinct !DISubprogram(name: "ata_hsm_ok_in_wq", scope: !3, file: !3, line: 896, type: !8475, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{!181, !5951, !6170}
!8477 = !DILocalVariable(name: "ap", arg: 1, scope: !8474, file: !3, line: 896, type: !5951)
!8478 = !DILocation(line: 896, column: 53, scope: !8474)
!8479 = !DILocalVariable(name: "qc", arg: 2, scope: !8474, file: !3, line: 897, type: !6170)
!8480 = !DILocation(line: 897, column: 30, scope: !8474)
!8481 = !DILocation(line: 899, column: 6, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 899, column: 6)
!8483 = !DILocation(line: 899, column: 10, scope: !8482)
!8484 = !DILocation(line: 899, column: 13, scope: !8482)
!8485 = !DILocation(line: 899, column: 19, scope: !8482)
!8486 = !DILocation(line: 899, column: 6, scope: !8474)
!8487 = !DILocation(line: 900, column: 3, scope: !8482)
!8488 = !DILocation(line: 902, column: 6, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 902, column: 6)
!8490 = !DILocation(line: 902, column: 10, scope: !8489)
!8491 = !DILocation(line: 902, column: 25, scope: !8489)
!8492 = !DILocation(line: 902, column: 6, scope: !8474)
!8493 = !DILocation(line: 903, column: 7, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 903, column: 7)
!8495 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 902, column: 42)
!8496 = !DILocation(line: 903, column: 11, scope: !8494)
!8497 = !DILocation(line: 903, column: 14, scope: !8494)
!8498 = !DILocation(line: 903, column: 23, scope: !8494)
!8499 = !DILocation(line: 903, column: 39, scope: !8494)
!8500 = !DILocation(line: 904, column: 7, scope: !8494)
!8501 = !DILocation(line: 904, column: 11, scope: !8494)
!8502 = !DILocation(line: 904, column: 14, scope: !8494)
!8503 = !DILocation(line: 904, column: 20, scope: !8494)
!8504 = !DILocation(line: 903, column: 7, scope: !8495)
!8505 = !DILocation(line: 905, column: 7, scope: !8494)
!8506 = !DILocation(line: 907, column: 20, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 907, column: 7)
!8508 = !DILocation(line: 907, column: 24, scope: !8507)
!8509 = !DILocation(line: 907, column: 27, scope: !8507)
!8510 = !DILocation(line: 907, column: 7, scope: !8507)
!8511 = !DILocation(line: 907, column: 37, scope: !8507)
!8512 = !DILocation(line: 908, column: 8, scope: !8507)
!8513 = !DILocation(line: 908, column: 12, scope: !8507)
!8514 = !DILocation(line: 908, column: 17, scope: !8507)
!8515 = !DILocation(line: 908, column: 23, scope: !8507)
!8516 = !DILocation(line: 907, column: 7, scope: !8495)
!8517 = !DILocation(line: 909, column: 4, scope: !8507)
!8518 = !DILocation(line: 910, column: 2, scope: !8495)
!8519 = !DILocation(line: 912, column: 2, scope: !8474)
!8520 = !DILocation(line: 913, column: 1, scope: !8474)
!8521 = distinct !DISubprogram(name: "ata_pio_sectors", scope: !3, file: !3, line: 702, type: !6388, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8522 = !DILocalVariable(name: "qc", arg: 1, scope: !8521, file: !3, line: 702, type: !6170)
!8523 = !DILocation(line: 702, column: 52, scope: !8521)
!8524 = !DILocation(line: 704, column: 25, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 704, column: 6)
!8526 = !DILocation(line: 704, column: 29, scope: !8525)
!8527 = !DILocation(line: 704, column: 6, scope: !8525)
!8528 = !DILocation(line: 704, column: 6, scope: !8521)
!8529 = !DILocalVariable(name: "nsect", scope: !8530, file: !3, line: 706, type: !7)
!8530 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 704, column: 34)
!8531 = !DILocation(line: 706, column: 16, scope: !8530)
!8532 = !DILocalVariable(name: "__ret_warn_on", scope: !8533, file: !3, line: 708, type: !181)
!8533 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 708, column: 3)
!8534 = !DILocation(line: 708, column: 3, scope: !8533)
!8535 = !DILocation(line: 708, column: 3, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 708, column: 3)
!8537 = !DILocation(line: 708, column: 3, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 708, column: 3)
!8539 = !DILocation(line: 708, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 708, column: 3)
!8541 = !DILocation(line: 708, column: 3, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 708, column: 3)
!8543 = !{i32 -2140293942, i32 -2140293913, i32 -2140293867, i32 -2140293809, i32 -2140293755, i32 -2140293701, i32 -2140293646, i32 -2140293615}
!8544 = !DILocation(line: 708, column: 3, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 708, column: 3)
!8546 = !{i32 -2140293198, i32 -2140293191, i32 -2140293139, i32 -2140293108, i32 -2140293078}
!8547 = !DILocation(line: 708, column: 3, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 708, column: 3)
!8549 = !DILocalVariable(name: "__UNIQUE_ID___x305", scope: !8550, file: !3, line: 710, type: !7)
!8550 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 710, column: 11)
!8551 = !DILocation(line: 710, column: 11, scope: !8550)
!8552 = !DILocalVariable(name: "__UNIQUE_ID___y306", scope: !8550, file: !3, line: 710, type: !7)
!8553 = !DILocation(line: 710, column: 9, scope: !8530)
!8554 = !DILocation(line: 712, column: 3, scope: !8530)
!8555 = !DILocation(line: 712, column: 15, scope: !8530)
!8556 = !DILocation(line: 713, column: 19, scope: !8530)
!8557 = !DILocation(line: 713, column: 4, scope: !8530)
!8558 = distinct !{!8558, !8554, !8559}
!8559 = !DILocation(line: 713, column: 21, scope: !8530)
!8560 = !DILocation(line: 714, column: 2, scope: !8530)
!8561 = !DILocation(line: 715, column: 18, scope: !8525)
!8562 = !DILocation(line: 715, column: 3, scope: !8525)
!8563 = !DILocation(line: 717, column: 15, scope: !8521)
!8564 = !DILocation(line: 717, column: 19, scope: !8521)
!8565 = !DILocation(line: 717, column: 2, scope: !8521)
!8566 = !DILocation(line: 718, column: 1, scope: !8521)
!8567 = distinct !DISubprogram(name: "atapi_send_cdb", scope: !3, file: !3, line: 731, type: !8568, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8568 = !DISubroutineType(types: !8569)
!8569 = !{null, !5951, !6170}
!8570 = !DILocalVariable(name: "ap", arg: 1, scope: !8567, file: !3, line: 731, type: !5951)
!8571 = !DILocation(line: 731, column: 45, scope: !8567)
!8572 = !DILocalVariable(name: "qc", arg: 2, scope: !8567, file: !3, line: 731, type: !6170)
!8573 = !DILocation(line: 731, column: 72, scope: !8567)
!8574 = !DILocalVariable(name: "__ret_warn_on", scope: !8575, file: !3, line: 735, type: !181)
!8575 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 735, column: 2)
!8576 = !DILocation(line: 735, column: 2, scope: !8575)
!8577 = !DILocation(line: 735, column: 2, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 735, column: 2)
!8579 = !DILocation(line: 735, column: 2, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 735, column: 2)
!8581 = !DILocation(line: 735, column: 2, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 735, column: 2)
!8583 = !DILocation(line: 735, column: 2, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 735, column: 2)
!8585 = !{i32 -2140290462, i32 -2140290433, i32 -2140290387, i32 -2140290329, i32 -2140290275, i32 -2140290221, i32 -2140290166, i32 -2140290135}
!8586 = !DILocation(line: 735, column: 2, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 735, column: 2)
!8588 = !{i32 -2140289718, i32 -2140289711, i32 -2140289659, i32 -2140289628, i32 -2140289598}
!8589 = !DILocation(line: 735, column: 2, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 735, column: 2)
!8591 = !DILocation(line: 737, column: 2, scope: !8567)
!8592 = !DILocation(line: 737, column: 6, scope: !8567)
!8593 = !DILocation(line: 737, column: 11, scope: !8567)
!8594 = !DILocation(line: 737, column: 25, scope: !8567)
!8595 = !DILocation(line: 737, column: 29, scope: !8567)
!8596 = !DILocation(line: 737, column: 33, scope: !8567)
!8597 = !DILocation(line: 737, column: 38, scope: !8567)
!8598 = !DILocation(line: 737, column: 42, scope: !8567)
!8599 = !DILocation(line: 737, column: 47, scope: !8567)
!8600 = !DILocation(line: 738, column: 15, scope: !8567)
!8601 = !DILocation(line: 738, column: 2, scope: !8567)
!8602 = !DILocation(line: 741, column: 10, scope: !8567)
!8603 = !DILocation(line: 741, column: 14, scope: !8567)
!8604 = !DILocation(line: 741, column: 17, scope: !8567)
!8605 = !DILocation(line: 741, column: 2, scope: !8567)
!8606 = !DILocation(line: 743, column: 3, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 741, column: 27)
!8608 = !DILocation(line: 743, column: 7, scope: !8607)
!8609 = !DILocation(line: 743, column: 22, scope: !8607)
!8610 = !DILocation(line: 744, column: 3, scope: !8607)
!8611 = !DILocation(line: 746, column: 3, scope: !8607)
!8612 = !DILocation(line: 746, column: 7, scope: !8607)
!8613 = !DILocation(line: 746, column: 22, scope: !8607)
!8614 = !DILocation(line: 747, column: 3, scope: !8607)
!8615 = !DILocation(line: 750, column: 3, scope: !8607)
!8616 = !DILocation(line: 750, column: 7, scope: !8607)
!8617 = !DILocation(line: 750, column: 22, scope: !8607)
!8618 = !DILocation(line: 752, column: 3, scope: !8607)
!8619 = !DILocation(line: 752, column: 7, scope: !8607)
!8620 = !DILocation(line: 752, column: 12, scope: !8607)
!8621 = !DILocation(line: 752, column: 24, scope: !8607)
!8622 = !DILocation(line: 753, column: 3, scope: !8607)
!8623 = !DILocation(line: 756, column: 3, scope: !8607)
!8624 = !DILocation(line: 756, column: 3, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 756, column: 3)
!8626 = !DILocation(line: 756, column: 3, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 756, column: 3)
!8628 = !DILocation(line: 756, column: 3, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 756, column: 3)
!8630 = !{i32 -2140289336, i32 -2140289307, i32 -2140289261, i32 -2140289203, i32 -2140289149, i32 -2140289095, i32 -2140289040, i32 -2140289009}
!8631 = !DILocation(line: 756, column: 3, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 756, column: 3)
!8633 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 756, column: 3)
!8634 = !{i32 -2140288562, i32 -2140288555, i32 -2140288501, i32 -2140288470, i32 -2140288440}
!8635 = !DILocation(line: 756, column: 3, scope: !8633)
!8636 = !DILocation(line: 757, column: 2, scope: !8607)
!8637 = !DILocation(line: 758, column: 1, scope: !8567)
!8638 = distinct !DISubprogram(name: "atapi_pio_bytes", scope: !3, file: !3, line: 840, type: !6388, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8639 = !DILocalVariable(name: "qc", arg: 1, scope: !8638, file: !3, line: 840, type: !6170)
!8640 = !DILocation(line: 840, column: 52, scope: !8638)
!8641 = !DILocalVariable(name: "ap", scope: !8638, file: !3, line: 842, type: !5951)
!8642 = !DILocation(line: 842, column: 19, scope: !8638)
!8643 = !DILocation(line: 842, column: 24, scope: !8638)
!8644 = !DILocation(line: 842, column: 28, scope: !8638)
!8645 = !DILocalVariable(name: "dev", scope: !8638, file: !3, line: 843, type: !6175)
!8646 = !DILocation(line: 843, column: 21, scope: !8638)
!8647 = !DILocation(line: 843, column: 27, scope: !8638)
!8648 = !DILocation(line: 843, column: 31, scope: !8638)
!8649 = !DILocalVariable(name: "ehi", scope: !8638, file: !3, line: 844, type: !8153)
!8650 = !DILocation(line: 844, column: 22, scope: !8638)
!8651 = !DILocation(line: 844, column: 29, scope: !8638)
!8652 = !DILocation(line: 844, column: 34, scope: !8638)
!8653 = !DILocation(line: 844, column: 40, scope: !8638)
!8654 = !DILocalVariable(name: "ireason", scope: !8638, file: !3, line: 845, type: !7)
!8655 = !DILocation(line: 845, column: 15, scope: !8638)
!8656 = !DILocalVariable(name: "bc_lo", scope: !8638, file: !3, line: 845, type: !7)
!8657 = !DILocation(line: 845, column: 24, scope: !8638)
!8658 = !DILocalVariable(name: "bc_hi", scope: !8638, file: !3, line: 845, type: !7)
!8659 = !DILocation(line: 845, column: 31, scope: !8638)
!8660 = !DILocalVariable(name: "bytes", scope: !8638, file: !3, line: 845, type: !7)
!8661 = !DILocation(line: 845, column: 38, scope: !8638)
!8662 = !DILocalVariable(name: "i_write", scope: !8638, file: !3, line: 846, type: !181)
!8663 = !DILocation(line: 846, column: 6, scope: !8638)
!8664 = !DILocalVariable(name: "do_write", scope: !8638, file: !3, line: 846, type: !181)
!8665 = !DILocation(line: 846, column: 15, scope: !8638)
!8666 = !DILocation(line: 846, column: 27, scope: !8638)
!8667 = !DILocation(line: 846, column: 31, scope: !8638)
!8668 = !DILocation(line: 846, column: 34, scope: !8638)
!8669 = !DILocation(line: 846, column: 40, scope: !8638)
!8670 = !DILocation(line: 846, column: 26, scope: !8638)
!8671 = !DILocation(line: 854, column: 2, scope: !8638)
!8672 = !DILocation(line: 854, column: 6, scope: !8638)
!8673 = !DILocation(line: 854, column: 11, scope: !8638)
!8674 = !DILocation(line: 854, column: 23, scope: !8638)
!8675 = !DILocation(line: 854, column: 28, scope: !8638)
!8676 = !DILocation(line: 854, column: 32, scope: !8638)
!8677 = !DILocation(line: 855, column: 12, scope: !8638)
!8678 = !DILocation(line: 855, column: 16, scope: !8638)
!8679 = !DILocation(line: 855, column: 26, scope: !8638)
!8680 = !DILocation(line: 855, column: 10, scope: !8638)
!8681 = !DILocation(line: 856, column: 10, scope: !8638)
!8682 = !DILocation(line: 856, column: 14, scope: !8638)
!8683 = !DILocation(line: 856, column: 24, scope: !8638)
!8684 = !DILocation(line: 856, column: 8, scope: !8638)
!8685 = !DILocation(line: 857, column: 10, scope: !8638)
!8686 = !DILocation(line: 857, column: 14, scope: !8638)
!8687 = !DILocation(line: 857, column: 24, scope: !8638)
!8688 = !DILocation(line: 857, column: 8, scope: !8638)
!8689 = !DILocation(line: 858, column: 11, scope: !8638)
!8690 = !DILocation(line: 858, column: 17, scope: !8638)
!8691 = !DILocation(line: 858, column: 25, scope: !8638)
!8692 = !DILocation(line: 858, column: 23, scope: !8638)
!8693 = !DILocation(line: 858, column: 8, scope: !8638)
!8694 = !DILocation(line: 861, column: 6, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 861, column: 6)
!8696 = !DILocation(line: 861, column: 6, scope: !8638)
!8697 = !DILocation(line: 862, column: 3, scope: !8695)
!8698 = !DILocation(line: 865, column: 14, scope: !8638)
!8699 = !DILocation(line: 865, column: 22, scope: !8638)
!8700 = !DILocation(line: 865, column: 34, scope: !8638)
!8701 = !DILocation(line: 865, column: 12, scope: !8638)
!8702 = !DILocation(line: 865, column: 10, scope: !8638)
!8703 = !DILocation(line: 866, column: 6, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 866, column: 6)
!8705 = !DILocation(line: 866, column: 6, scope: !8638)
!8706 = !DILocation(line: 867, column: 3, scope: !8704)
!8707 = !DILocation(line: 869, column: 6, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 869, column: 6)
!8709 = !DILocation(line: 869, column: 6, scope: !8638)
!8710 = !DILocation(line: 870, column: 3, scope: !8708)
!8711 = !DILocation(line: 874, column: 6, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 874, column: 6)
!8713 = !DILocation(line: 874, column: 6, scope: !8638)
!8714 = !DILocation(line: 875, column: 3, scope: !8712)
!8715 = !DILocation(line: 876, column: 15, scope: !8638)
!8716 = !DILocation(line: 876, column: 2, scope: !8638)
!8717 = !DILocation(line: 878, column: 2, scope: !8638)
!8718 = !DILabel(scope: !8638, name: "atapi_check", file: !3, line: 880)
!8719 = !DILocation(line: 880, column: 2, scope: !8638)
!8720 = !DILocation(line: 881, column: 20, scope: !8638)
!8721 = !DILocation(line: 882, column: 6, scope: !8638)
!8722 = !DILocation(line: 882, column: 15, scope: !8638)
!8723 = !DILocation(line: 881, column: 2, scope: !8638)
!8724 = !DILabel(scope: !8638, name: "err_out", file: !3, line: 883)
!8725 = !DILocation(line: 883, column: 2, scope: !8638)
!8726 = !DILocation(line: 884, column: 2, scope: !8638)
!8727 = !DILocation(line: 884, column: 6, scope: !8638)
!8728 = !DILocation(line: 884, column: 15, scope: !8638)
!8729 = !DILocation(line: 885, column: 2, scope: !8638)
!8730 = !DILocation(line: 885, column: 6, scope: !8638)
!8731 = !DILocation(line: 885, column: 21, scope: !8638)
!8732 = !DILocation(line: 886, column: 1, scope: !8638)
!8733 = distinct !DISubprogram(name: "ata_ok", scope: !180, file: !180, line: 1117, type: !8734, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8734 = !DISubroutineType(types: !8735)
!8735 = !{!1331, !2256}
!8736 = !DILocalVariable(name: "status", arg: 1, scope: !8733, file: !180, line: 1117, type: !2256)
!8737 = !DILocation(line: 1117, column: 30, scope: !8733)
!8738 = !DILocation(line: 1119, column: 11, scope: !8733)
!8739 = !DILocation(line: 1119, column: 18, scope: !8733)
!8740 = !DILocation(line: 1120, column: 4, scope: !8733)
!8741 = !DILocation(line: 1119, column: 2, scope: !8733)
!8742 = distinct !DISubprogram(name: "__ac_err_mask", scope: !152, file: !152, line: 1810, type: !8743, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8743 = !DISubroutineType(types: !8744)
!8744 = !{!7, !2256}
!8745 = !DILocalVariable(name: "status", arg: 1, scope: !8742, file: !152, line: 1810, type: !2256)
!8746 = !DILocation(line: 1810, column: 45, scope: !8742)
!8747 = !DILocalVariable(name: "mask", scope: !8742, file: !152, line: 1812, type: !7)
!8748 = !DILocation(line: 1812, column: 15, scope: !8742)
!8749 = !DILocation(line: 1812, column: 34, scope: !8742)
!8750 = !DILocation(line: 1812, column: 22, scope: !8742)
!8751 = !DILocation(line: 1813, column: 6, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8742, file: !152, line: 1813, column: 6)
!8753 = !DILocation(line: 1813, column: 11, scope: !8752)
!8754 = !DILocation(line: 1813, column: 6, scope: !8742)
!8755 = !DILocation(line: 1814, column: 3, scope: !8752)
!8756 = !DILocation(line: 1815, column: 9, scope: !8742)
!8757 = !DILocation(line: 1815, column: 2, scope: !8742)
!8758 = !DILocation(line: 1816, column: 1, scope: !8742)
!8759 = distinct !DISubprogram(name: "ata_hsm_qc_complete", scope: !3, file: !3, line: 926, type: !8760, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8760 = !DISubroutineType(types: !8761)
!8761 = !{null, !6170, !181}
!8762 = !DILocalVariable(name: "qc", arg: 1, scope: !8759, file: !3, line: 926, type: !6170)
!8763 = !DILocation(line: 926, column: 56, scope: !8759)
!8764 = !DILocalVariable(name: "in_wq", arg: 2, scope: !8759, file: !3, line: 926, type: !181)
!8765 = !DILocation(line: 926, column: 64, scope: !8759)
!8766 = !DILocalVariable(name: "ap", scope: !8759, file: !3, line: 928, type: !5951)
!8767 = !DILocation(line: 928, column: 19, scope: !8759)
!8768 = !DILocation(line: 928, column: 24, scope: !8759)
!8769 = !DILocation(line: 928, column: 28, scope: !8759)
!8770 = !DILocation(line: 930, column: 6, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 930, column: 6)
!8772 = !DILocation(line: 930, column: 10, scope: !8771)
!8773 = !DILocation(line: 930, column: 15, scope: !8771)
!8774 = !DILocation(line: 930, column: 6, scope: !8759)
!8775 = !DILocation(line: 931, column: 7, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 931, column: 7)
!8777 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 930, column: 30)
!8778 = !DILocation(line: 931, column: 7, scope: !8777)
!8779 = !DILocation(line: 935, column: 25, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 931, column: 14)
!8781 = !DILocation(line: 935, column: 29, scope: !8780)
!8782 = !DILocation(line: 935, column: 33, scope: !8780)
!8783 = !DILocation(line: 935, column: 9, scope: !8780)
!8784 = !DILocation(line: 935, column: 7, scope: !8780)
!8785 = !DILocation(line: 936, column: 8, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 936, column: 8)
!8787 = !DILocation(line: 936, column: 8, scope: !8780)
!8788 = !DILocation(line: 937, column: 9, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 937, column: 9)
!8790 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 936, column: 12)
!8791 = !DILocation(line: 937, column: 9, scope: !8790)
!8792 = !DILocation(line: 938, column: 21, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 937, column: 47)
!8794 = !DILocation(line: 938, column: 6, scope: !8793)
!8795 = !DILocation(line: 939, column: 22, scope: !8793)
!8796 = !DILocation(line: 939, column: 6, scope: !8793)
!8797 = !DILocation(line: 940, column: 5, scope: !8793)
!8798 = !DILocation(line: 941, column: 22, scope: !8789)
!8799 = !DILocation(line: 941, column: 6, scope: !8789)
!8800 = !DILocation(line: 942, column: 4, scope: !8790)
!8801 = !DILocation(line: 943, column: 3, scope: !8780)
!8802 = !DILocation(line: 944, column: 8, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 944, column: 8)
!8804 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 943, column: 10)
!8805 = !DILocation(line: 944, column: 8, scope: !8804)
!8806 = !DILocation(line: 945, column: 21, scope: !8803)
!8807 = !DILocation(line: 945, column: 5, scope: !8803)
!8808 = !DILocation(line: 947, column: 21, scope: !8803)
!8809 = !DILocation(line: 947, column: 5, scope: !8803)
!8810 = !DILocation(line: 949, column: 2, scope: !8777)
!8811 = !DILocation(line: 950, column: 7, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8813, file: !3, line: 950, column: 7)
!8813 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 949, column: 9)
!8814 = !DILocation(line: 950, column: 7, scope: !8813)
!8815 = !DILocation(line: 951, column: 19, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 950, column: 14)
!8817 = !DILocation(line: 951, column: 4, scope: !8816)
!8818 = !DILocation(line: 952, column: 20, scope: !8816)
!8819 = !DILocation(line: 952, column: 4, scope: !8816)
!8820 = !DILocation(line: 953, column: 3, scope: !8816)
!8821 = !DILocation(line: 954, column: 20, scope: !8812)
!8822 = !DILocation(line: 954, column: 4, scope: !8812)
!8823 = !DILocation(line: 956, column: 1, scope: !8759)
!8824 = distinct !DISubprogram(name: "ata_sff_queue_work", scope: !3, file: !3, line: 1219, type: !2903, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8825 = !DILocalVariable(name: "work", arg: 1, scope: !8824, file: !3, line: 1219, type: !2905)
!8826 = !DILocation(line: 1219, column: 45, scope: !8824)
!8827 = !DILocation(line: 1221, column: 13, scope: !8824)
!8828 = !DILocation(line: 1221, column: 25, scope: !8824)
!8829 = !DILocation(line: 1221, column: 2, scope: !8824)
!8830 = !DILocation(line: 1222, column: 1, scope: !8824)
!8831 = distinct !DISubprogram(name: "queue_work", scope: !880, file: !880, line: 504, type: !8832, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8832 = !DISubroutineType(types: !8833)
!8833 = !{!1331, !2908, !2905}
!8834 = !DILocalVariable(name: "wq", arg: 1, scope: !8831, file: !880, line: 504, type: !2908)
!8835 = !DILocation(line: 504, column: 56, scope: !8831)
!8836 = !DILocalVariable(name: "work", arg: 2, scope: !8831, file: !880, line: 505, type: !2905)
!8837 = !DILocation(line: 505, column: 30, scope: !8831)
!8838 = !DILocation(line: 507, column: 41, scope: !8831)
!8839 = !DILocation(line: 507, column: 45, scope: !8831)
!8840 = !DILocation(line: 507, column: 9, scope: !8831)
!8841 = !DILocation(line: 507, column: 2, scope: !8831)
!8842 = distinct !DISubprogram(name: "ata_sff_queue_delayed_work", scope: !3, file: !3, line: 1225, type: !8843, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8843 = !DISubroutineType(types: !8844)
!8844 = !{null, !8845, !1010}
!8845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!8846 = !DILocalVariable(name: "dwork", arg: 1, scope: !8842, file: !3, line: 1225, type: !8845)
!8847 = !DILocation(line: 1225, column: 54, scope: !8842)
!8848 = !DILocalVariable(name: "delay", arg: 2, scope: !8842, file: !3, line: 1225, type: !1010)
!8849 = !DILocation(line: 1225, column: 75, scope: !8842)
!8850 = !DILocation(line: 1227, column: 21, scope: !8842)
!8851 = !DILocation(line: 1227, column: 33, scope: !8842)
!8852 = !DILocation(line: 1227, column: 40, scope: !8842)
!8853 = !DILocation(line: 1227, column: 2, scope: !8842)
!8854 = !DILocation(line: 1228, column: 1, scope: !8842)
!8855 = distinct !DISubprogram(name: "queue_delayed_work", scope: !880, file: !880, line: 518, type: !8856, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8856 = !DISubroutineType(types: !8857)
!8857 = !{!1331, !2908, !8845, !1010}
!8858 = !DILocalVariable(name: "wq", arg: 1, scope: !8855, file: !880, line: 518, type: !2908)
!8859 = !DILocation(line: 518, column: 64, scope: !8855)
!8860 = !DILocalVariable(name: "dwork", arg: 2, scope: !8855, file: !880, line: 519, type: !8845)
!8861 = !DILocation(line: 519, column: 32, scope: !8855)
!8862 = !DILocalVariable(name: "delay", arg: 3, scope: !8855, file: !880, line: 520, type: !1010)
!8863 = !DILocation(line: 520, column: 25, scope: !8855)
!8864 = !DILocation(line: 522, column: 49, scope: !8855)
!8865 = !DILocation(line: 522, column: 53, scope: !8855)
!8866 = !DILocation(line: 522, column: 60, scope: !8855)
!8867 = !DILocation(line: 522, column: 9, scope: !8855)
!8868 = !DILocation(line: 522, column: 2, scope: !8855)
!8869 = distinct !DISubprogram(name: "ata_sff_queue_pio_task", scope: !3, file: !3, line: 1231, type: !8870, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{null, !6179, !1010}
!8872 = !DILocation(line: 363, column: 74, scope: !7895, inlinedAt: !8873)
!8873 = distinct !DILocation(line: 1240, column: 48, scope: !8869)
!8874 = !DILocalVariable(name: "link", arg: 1, scope: !8869, file: !3, line: 1231, type: !6179)
!8875 = !DILocation(line: 1231, column: 46, scope: !8869)
!8876 = !DILocalVariable(name: "delay", arg: 2, scope: !8869, file: !3, line: 1231, type: !1010)
!8877 = !DILocation(line: 1231, column: 66, scope: !8869)
!8878 = !DILocalVariable(name: "ap", scope: !8869, file: !3, line: 1233, type: !5951)
!8879 = !DILocation(line: 1233, column: 19, scope: !8869)
!8880 = !DILocation(line: 1233, column: 24, scope: !8869)
!8881 = !DILocation(line: 1233, column: 30, scope: !8869)
!8882 = !DILocalVariable(name: "__ret_warn_on", scope: !8883, file: !3, line: 1235, type: !181)
!8883 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 1235, column: 2)
!8884 = !DILocation(line: 1235, column: 2, scope: !8883)
!8885 = !DILocation(line: 0, scope: !8883)
!8886 = !DILocation(line: 1235, column: 2, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8883, file: !3, line: 1235, column: 2)
!8888 = !DILocation(line: 1235, column: 2, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 1235, column: 2)
!8890 = !DILocation(line: 1235, column: 2, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 1235, column: 2)
!8892 = !DILocation(line: 1235, column: 2, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 1235, column: 2)
!8894 = !{i32 -2140273782, i32 -2140273753, i32 -2140273707, i32 -2140273649, i32 -2140273595, i32 -2140273541, i32 -2140273486, i32 -2140273455}
!8895 = !DILocation(line: 1235, column: 2, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 1235, column: 2)
!8897 = !{i32 -2140273048, i32 -2140273041, i32 -2140272989, i32 -2140272958, i32 -2140272928}
!8898 = !DILocation(line: 1235, column: 2, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 1235, column: 2)
!8900 = !DILocation(line: 1237, column: 26, scope: !8869)
!8901 = !DILocation(line: 1237, column: 2, scope: !8869)
!8902 = !DILocation(line: 1237, column: 6, scope: !8869)
!8903 = !DILocation(line: 1237, column: 24, scope: !8869)
!8904 = !DILocation(line: 1240, column: 30, scope: !8869)
!8905 = !DILocation(line: 1240, column: 34, scope: !8869)
!8906 = !DILocation(line: 1240, column: 65, scope: !8869)
!8907 = !DILocation(line: 365, column: 27, scope: !7908, inlinedAt: !8873)
!8908 = !DILocation(line: 365, column: 6, scope: !7908, inlinedAt: !8873)
!8909 = !DILocation(line: 365, column: 6, scope: !7895, inlinedAt: !8873)
!8910 = !DILocation(line: 366, column: 12, scope: !7912, inlinedAt: !8873)
!8911 = !DILocation(line: 366, column: 14, scope: !7912, inlinedAt: !8873)
!8912 = !DILocation(line: 366, column: 7, scope: !7913, inlinedAt: !8873)
!8913 = !DILocation(line: 367, column: 4, scope: !7912, inlinedAt: !8873)
!8914 = !DILocation(line: 368, column: 28, scope: !7913, inlinedAt: !8873)
!8915 = !DILocation(line: 368, column: 10, scope: !7913, inlinedAt: !8873)
!8916 = !DILocation(line: 368, column: 3, scope: !7913, inlinedAt: !8873)
!8917 = !DILocation(line: 370, column: 29, scope: !7921, inlinedAt: !8873)
!8918 = !DILocation(line: 370, column: 10, scope: !7921, inlinedAt: !8873)
!8919 = !DILocation(line: 370, column: 3, scope: !7921, inlinedAt: !8873)
!8920 = !DILocation(line: 372, column: 1, scope: !7895, inlinedAt: !8873)
!8921 = !DILocation(line: 1240, column: 2, scope: !8869)
!8922 = !DILocation(line: 1241, column: 1, scope: !8869)
!8923 = distinct !DISubprogram(name: "ata_sff_flush_pio_task", scope: !3, file: !3, line: 1244, type: !6435, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8924 = !DILocalVariable(name: "lock", arg: 1, scope: !8925, file: !7102, line: 402, type: !1976)
!8925 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !7102, file: !7102, line: 402, type: !8926, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{null, !1976}
!8928 = !DILocation(line: 402, column: 57, scope: !8925, inlinedAt: !8929)
!8929 = distinct !DILocation(line: 1260, column: 2, scope: !8923)
!8930 = !DILocalVariable(name: "lock", arg: 1, scope: !8931, file: !7102, line: 377, type: !1976)
!8931 = distinct !DISubprogram(name: "spin_lock_irq", scope: !7102, file: !7102, line: 377, type: !8926, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8932 = !DILocation(line: 377, column: 55, scope: !8931, inlinedAt: !8933)
!8933 = distinct !DILocation(line: 1258, column: 2, scope: !8923)
!8934 = !DILocalVariable(name: "ap", arg: 1, scope: !8923, file: !3, line: 1244, type: !5951)
!8935 = !DILocation(line: 1244, column: 46, scope: !8923)
!8936 = !DILocation(line: 1248, column: 28, scope: !8923)
!8937 = !DILocation(line: 1248, column: 32, scope: !8923)
!8938 = !DILocation(line: 1248, column: 2, scope: !8923)
!8939 = !DILocation(line: 1258, column: 16, scope: !8923)
!8940 = !DILocation(line: 1258, column: 20, scope: !8923)
!8941 = !DILocation(line: 379, column: 2, scope: !8942, inlinedAt: !8933)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !7102, line: 379, column: 2)
!8943 = distinct !DILexicalBlock(scope: !8931, file: !7102, line: 379, column: 2)
!8944 = !DILocation(line: 379, column: 2, scope: !8945, inlinedAt: !8933)
!8945 = distinct !DILexicalBlock(scope: !8943, file: !7102, line: 379, column: 2)
!8946 = !{i32 -2145473292}
!8947 = !DILocation(line: 379, column: 2, scope: !8948, inlinedAt: !8933)
!8948 = distinct !DILexicalBlock(scope: !8945, file: !7102, line: 379, column: 2)
!8949 = !DILocation(line: 1259, column: 2, scope: !8923)
!8950 = !DILocation(line: 1259, column: 6, scope: !8923)
!8951 = !DILocation(line: 1259, column: 21, scope: !8923)
!8952 = !DILocation(line: 1260, column: 18, scope: !8923)
!8953 = !DILocation(line: 1260, column: 22, scope: !8923)
!8954 = !DILocation(line: 404, column: 2, scope: !8955, inlinedAt: !8929)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !7102, line: 404, column: 2)
!8956 = distinct !DILexicalBlock(scope: !8925, file: !7102, line: 404, column: 2)
!8957 = !DILocation(line: 404, column: 2, scope: !8958, inlinedAt: !8929)
!8958 = distinct !DILexicalBlock(scope: !8956, file: !7102, line: 404, column: 2)
!8959 = !{i32 -2145471544}
!8960 = !DILocation(line: 404, column: 2, scope: !8961, inlinedAt: !8929)
!8961 = distinct !DILexicalBlock(scope: !8958, file: !7102, line: 404, column: 2)
!8962 = !DILocation(line: 1262, column: 2, scope: !8923)
!8963 = !DILocation(line: 1262, column: 6, scope: !8923)
!8964 = !DILocation(line: 1262, column: 24, scope: !8923)
!8965 = !DILocation(line: 1264, column: 6, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 1264, column: 6)
!8967 = !DILocation(line: 1264, column: 6, scope: !8923)
!8968 = !DILocation(line: 1265, column: 3, scope: !8966)
!8969 = !DILocation(line: 1266, column: 1, scope: !8923)
!8970 = distinct !DISubprogram(name: "ata_dev_select", scope: !3, file: !3, line: 330, type: !8971, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!8971 = !DISubroutineType(types: !8972)
!8972 = !{null, !5951, !7, !7, !7}
!8973 = !DILocalVariable(name: "ap", arg: 1, scope: !8970, file: !3, line: 330, type: !5951)
!8974 = !DILocation(line: 330, column: 45, scope: !8970)
!8975 = !DILocalVariable(name: "device", arg: 2, scope: !8970, file: !3, line: 330, type: !7)
!8976 = !DILocation(line: 330, column: 62, scope: !8970)
!8977 = !DILocalVariable(name: "wait", arg: 3, scope: !8970, file: !3, line: 331, type: !7)
!8978 = !DILocation(line: 331, column: 20, scope: !8970)
!8979 = !DILocalVariable(name: "can_sleep", arg: 4, scope: !8970, file: !3, line: 331, type: !7)
!8980 = !DILocation(line: 331, column: 39, scope: !8970)
!8981 = !DILocation(line: 333, column: 6, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 333, column: 6)
!8983 = !DILocation(line: 333, column: 6, scope: !8970)
!8984 = !DILocation(line: 334, column: 3, scope: !8982)
!8985 = !DILocation(line: 337, column: 6, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 337, column: 6)
!8987 = !DILocation(line: 337, column: 6, scope: !8970)
!8988 = !DILocation(line: 338, column: 17, scope: !8986)
!8989 = !DILocation(line: 338, column: 3, scope: !8986)
!8990 = !DILocation(line: 340, column: 2, scope: !8970)
!8991 = !DILocation(line: 340, column: 6, scope: !8970)
!8992 = !DILocation(line: 340, column: 11, scope: !8970)
!8993 = !DILocation(line: 340, column: 26, scope: !8970)
!8994 = !DILocation(line: 340, column: 30, scope: !8970)
!8995 = !DILocation(line: 342, column: 6, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 342, column: 6)
!8997 = !DILocation(line: 342, column: 6, scope: !8970)
!8998 = !DILocation(line: 343, column: 7, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 343, column: 7)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 342, column: 12)
!9001 = !DILocation(line: 343, column: 17, scope: !8999)
!9002 = !DILocation(line: 343, column: 20, scope: !8999)
!9003 = !DILocation(line: 343, column: 24, scope: !8999)
!9004 = !DILocation(line: 343, column: 29, scope: !8999)
!9005 = !DILocation(line: 343, column: 36, scope: !8999)
!9006 = !DILocation(line: 343, column: 44, scope: !8999)
!9007 = !DILocation(line: 343, column: 50, scope: !8999)
!9008 = !DILocation(line: 343, column: 7, scope: !9000)
!9009 = !DILocation(line: 344, column: 15, scope: !8999)
!9010 = !DILocation(line: 344, column: 4, scope: !8999)
!9011 = !DILocation(line: 345, column: 17, scope: !9000)
!9012 = !DILocation(line: 345, column: 3, scope: !9000)
!9013 = !DILocation(line: 346, column: 2, scope: !9000)
!9014 = !DILocation(line: 347, column: 1, scope: !8970)
!9015 = distinct !DISubprogram(name: "ata_qc_set_polling", scope: !152, file: !152, line: 1727, type: !6388, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9016 = !DILocalVariable(name: "qc", arg: 1, scope: !9015, file: !152, line: 1727, type: !6170)
!9017 = !DILocation(line: 1727, column: 62, scope: !9015)
!9018 = !DILocation(line: 1729, column: 2, scope: !9015)
!9019 = !DILocation(line: 1729, column: 6, scope: !9015)
!9020 = !DILocation(line: 1729, column: 9, scope: !9015)
!9021 = !DILocation(line: 1729, column: 13, scope: !9015)
!9022 = !DILocation(line: 1730, column: 1, scope: !9015)
!9023 = distinct !DISubprogram(name: "ata_tf_to_host", scope: !3, file: !3, line: 516, type: !6522, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9024 = !DILocalVariable(name: "ap", arg: 1, scope: !9023, file: !3, line: 516, type: !5951)
!9025 = !DILocation(line: 516, column: 52, scope: !9023)
!9026 = !DILocalVariable(name: "tf", arg: 2, scope: !9023, file: !3, line: 517, type: !6524)
!9027 = !DILocation(line: 517, column: 34, scope: !9023)
!9028 = !DILocation(line: 519, column: 2, scope: !9023)
!9029 = !DILocation(line: 519, column: 6, scope: !9023)
!9030 = !DILocation(line: 519, column: 11, scope: !9023)
!9031 = !DILocation(line: 519, column: 23, scope: !9023)
!9032 = !DILocation(line: 519, column: 27, scope: !9023)
!9033 = !DILocation(line: 520, column: 2, scope: !9023)
!9034 = !DILocation(line: 520, column: 6, scope: !9023)
!9035 = !DILocation(line: 520, column: 11, scope: !9023)
!9036 = !DILocation(line: 520, column: 28, scope: !9023)
!9037 = !DILocation(line: 520, column: 32, scope: !9023)
!9038 = !DILocation(line: 521, column: 1, scope: !9023)
!9039 = distinct !DISubprogram(name: "ata_sff_port_intr", scope: !3, file: !3, line: 1518, type: !9040, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9040 = !DISubroutineType(types: !9041)
!9041 = !{!7, !5951, !6170}
!9042 = !DILocalVariable(name: "ap", arg: 1, scope: !9039, file: !3, line: 1518, type: !5951)
!9043 = !DILocation(line: 1518, column: 49, scope: !9039)
!9044 = !DILocalVariable(name: "qc", arg: 2, scope: !9039, file: !3, line: 1518, type: !6170)
!9045 = !DILocation(line: 1518, column: 76, scope: !9039)
!9046 = !DILocation(line: 1520, column: 29, scope: !9039)
!9047 = !DILocation(line: 1520, column: 33, scope: !9039)
!9048 = !DILocation(line: 1520, column: 9, scope: !9039)
!9049 = !DILocation(line: 1520, column: 2, scope: !9039)
!9050 = distinct !DISubprogram(name: "__ata_sff_port_intr", scope: !3, file: !3, line: 1456, type: !9051, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!7, !5951, !6170, !1331}
!9053 = !DILocalVariable(name: "ap", arg: 1, scope: !9050, file: !3, line: 1456, type: !5951)
!9054 = !DILocation(line: 1456, column: 58, scope: !9050)
!9055 = !DILocalVariable(name: "qc", arg: 2, scope: !9050, file: !3, line: 1457, type: !6170)
!9056 = !DILocation(line: 1457, column: 29, scope: !9050)
!9057 = !DILocalVariable(name: "hsmv_on_idle", arg: 3, scope: !9050, file: !3, line: 1458, type: !1331)
!9058 = !DILocation(line: 1458, column: 11, scope: !9050)
!9059 = !DILocalVariable(name: "status", scope: !9050, file: !3, line: 1460, type: !2256)
!9060 = !DILocation(line: 1460, column: 5, scope: !9050)
!9061 = !DILocation(line: 1466, column: 10, scope: !9050)
!9062 = !DILocation(line: 1466, column: 14, scope: !9050)
!9063 = !DILocation(line: 1466, column: 2, scope: !9050)
!9064 = !DILocation(line: 1476, column: 9, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 1476, column: 7)
!9066 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1466, column: 30)
!9067 = !DILocation(line: 1476, column: 13, scope: !9065)
!9068 = !DILocation(line: 1476, column: 18, scope: !9065)
!9069 = !DILocation(line: 1476, column: 24, scope: !9065)
!9070 = !DILocation(line: 1476, column: 7, scope: !9066)
!9071 = !DILocation(line: 1477, column: 28, scope: !9065)
!9072 = !DILocation(line: 1477, column: 11, scope: !9065)
!9073 = !DILocation(line: 1477, column: 4, scope: !9065)
!9074 = !DILocation(line: 1478, column: 3, scope: !9066)
!9075 = !DILocation(line: 1480, column: 27, scope: !9066)
!9076 = !DILocation(line: 1480, column: 10, scope: !9066)
!9077 = !DILocation(line: 1480, column: 3, scope: !9066)
!9078 = !DILocation(line: 1482, column: 3, scope: !9066)
!9079 = !DILocation(line: 1486, column: 30, scope: !9050)
!9080 = !DILocation(line: 1486, column: 11, scope: !9050)
!9081 = !DILocation(line: 1486, column: 9, scope: !9050)
!9082 = !DILocation(line: 1487, column: 6, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1487, column: 6)
!9084 = !DILocation(line: 1487, column: 13, scope: !9083)
!9085 = !DILocation(line: 1487, column: 6, scope: !9050)
!9086 = !DILocation(line: 1488, column: 7, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 1488, column: 7)
!9088 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1487, column: 25)
!9089 = !DILocation(line: 1488, column: 7, scope: !9088)
!9090 = !DILocation(line: 1490, column: 4, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1488, column: 21)
!9092 = !DILocation(line: 1490, column: 8, scope: !9091)
!9093 = !DILocation(line: 1490, column: 17, scope: !9091)
!9094 = !DILocation(line: 1491, column: 4, scope: !9091)
!9095 = !DILocation(line: 1491, column: 8, scope: !9091)
!9096 = !DILocation(line: 1491, column: 23, scope: !9091)
!9097 = !DILocation(line: 1492, column: 3, scope: !9091)
!9098 = !DILocation(line: 1493, column: 28, scope: !9087)
!9099 = !DILocation(line: 1493, column: 11, scope: !9087)
!9100 = !DILocation(line: 1493, column: 4, scope: !9087)
!9101 = !DILocation(line: 1494, column: 2, scope: !9088)
!9102 = !DILocation(line: 1497, column: 6, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1497, column: 6)
!9104 = !DILocation(line: 1497, column: 10, scope: !9103)
!9105 = !DILocation(line: 1497, column: 15, scope: !9103)
!9106 = !DILocation(line: 1497, column: 6, scope: !9050)
!9107 = !DILocation(line: 1498, column: 3, scope: !9103)
!9108 = !DILocation(line: 1498, column: 7, scope: !9103)
!9109 = !DILocation(line: 1498, column: 12, scope: !9103)
!9110 = !DILocation(line: 1498, column: 26, scope: !9103)
!9111 = !DILocation(line: 1500, column: 19, scope: !9050)
!9112 = !DILocation(line: 1500, column: 23, scope: !9050)
!9113 = !DILocation(line: 1500, column: 27, scope: !9050)
!9114 = !DILocation(line: 1500, column: 2, scope: !9050)
!9115 = !DILocation(line: 1502, column: 2, scope: !9050)
!9116 = !DILocation(line: 1503, column: 1, scope: !9050)
!9117 = distinct !DISubprogram(name: "ata_sff_interrupt", scope: !3, file: !3, line: 1610, type: !9118, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9118 = !DISubroutineType(types: !9119)
!9119 = !{!9120, !181, !968}
!9120 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !867, line: 17, baseType: !866)
!9121 = !DILocalVariable(name: "irq", arg: 1, scope: !9117, file: !3, line: 1610, type: !181)
!9122 = !DILocation(line: 1610, column: 35, scope: !9117)
!9123 = !DILocalVariable(name: "dev_instance", arg: 2, scope: !9117, file: !3, line: 1610, type: !968)
!9124 = !DILocation(line: 1610, column: 46, scope: !9117)
!9125 = !DILocation(line: 1612, column: 29, scope: !9117)
!9126 = !DILocation(line: 1612, column: 34, scope: !9117)
!9127 = !DILocation(line: 1612, column: 9, scope: !9117)
!9128 = !DILocation(line: 1612, column: 2, scope: !9117)
!9129 = distinct !DISubprogram(name: "__ata_sff_interrupt", scope: !3, file: !3, line: 1524, type: !9130, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!9120, !181, !968, !9132}
!9132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9040, size: 64)
!9133 = !DILocation(line: 407, column: 64, scope: !7101, inlinedAt: !9134)
!9134 = distinct !DILocation(line: 1591, column: 2, scope: !9129)
!9135 = !DILocation(line: 407, column: 84, scope: !7101, inlinedAt: !9134)
!9136 = !DILocation(line: 327, column: 67, scope: !7110, inlinedAt: !9137)
!9137 = distinct !DILocation(line: 1534, column: 2, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 1534, column: 2)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 1534, column: 2)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 1534, column: 2)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 1534, column: 2)
!9142 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 1534, column: 2)
!9143 = !DILocalVariable(name: "irq", arg: 1, scope: !9129, file: !3, line: 1524, type: !181)
!9144 = !DILocation(line: 1524, column: 51, scope: !9129)
!9145 = !DILocalVariable(name: "dev_instance", arg: 2, scope: !9129, file: !3, line: 1524, type: !968)
!9146 = !DILocation(line: 1524, column: 62, scope: !9129)
!9147 = !DILocalVariable(name: "port_intr", arg: 3, scope: !9129, file: !3, line: 1525, type: !9132)
!9148 = !DILocation(line: 1525, column: 17, scope: !9129)
!9149 = !DILocalVariable(name: "host", scope: !9129, file: !3, line: 1527, type: !6488)
!9150 = !DILocation(line: 1527, column: 19, scope: !9129)
!9151 = !DILocation(line: 1527, column: 26, scope: !9129)
!9152 = !DILocalVariable(name: "retried", scope: !9129, file: !3, line: 1528, type: !1331)
!9153 = !DILocation(line: 1528, column: 7, scope: !9129)
!9154 = !DILocalVariable(name: "i", scope: !9129, file: !3, line: 1529, type: !7)
!9155 = !DILocation(line: 1529, column: 15, scope: !9129)
!9156 = !DILocalVariable(name: "handled", scope: !9129, file: !3, line: 1530, type: !7)
!9157 = !DILocation(line: 1530, column: 15, scope: !9129)
!9158 = !DILocalVariable(name: "idle", scope: !9129, file: !3, line: 1530, type: !7)
!9159 = !DILocation(line: 1530, column: 24, scope: !9129)
!9160 = !DILocalVariable(name: "polling", scope: !9129, file: !3, line: 1530, type: !7)
!9161 = !DILocation(line: 1530, column: 30, scope: !9129)
!9162 = !DILocalVariable(name: "flags", scope: !9129, file: !3, line: 1531, type: !1010)
!9163 = !DILocation(line: 1531, column: 16, scope: !9129)
!9164 = !DILocation(line: 1534, column: 2, scope: !9129)
!9165 = !DILocation(line: 1534, column: 2, scope: !9142)
!9166 = !DILocalVariable(name: "__dummy", scope: !9167, file: !3, line: 1534, type: !1010)
!9167 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 1534, column: 2)
!9168 = !DILocation(line: 1534, column: 2, scope: !9167)
!9169 = !DILocalVariable(name: "__dummy2", scope: !9167, file: !3, line: 1534, type: !1010)
!9170 = !DILocation(line: 1534, column: 2, scope: !9141)
!9171 = !DILocation(line: 1534, column: 2, scope: !9140)
!9172 = !DILocation(line: 1534, column: 2, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 1534, column: 2)
!9174 = !DILocalVariable(name: "__dummy", scope: !9175, file: !3, line: 1534, type: !1010)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 1534, column: 2)
!9176 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 1534, column: 2)
!9177 = !DILocation(line: 1534, column: 2, scope: !9175)
!9178 = !DILocalVariable(name: "__dummy2", scope: !9175, file: !3, line: 1534, type: !1010)
!9179 = !DILocation(line: 1534, column: 2, scope: !9176)
!9180 = !DILocation(line: 1534, column: 2, scope: !9139)
!9181 = !{i32 -2140266901}
!9182 = !DILocation(line: 1534, column: 2, scope: !9138)
!9183 = !DILocation(line: 329, column: 10, scope: !7110, inlinedAt: !9137)
!9184 = !DILocation(line: 329, column: 16, scope: !7110, inlinedAt: !9137)
!9185 = !DILabel(scope: !9129, name: "retry", file: !3, line: 1536)
!9186 = !DILocation(line: 1536, column: 1, scope: !9129)
!9187 = !DILocation(line: 1537, column: 27, scope: !9129)
!9188 = !DILocation(line: 1537, column: 17, scope: !9129)
!9189 = !DILocation(line: 1537, column: 10, scope: !9129)
!9190 = !DILocation(line: 1538, column: 9, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 1538, column: 2)
!9192 = !DILocation(line: 1538, column: 7, scope: !9191)
!9193 = !DILocation(line: 1538, column: 14, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 1538, column: 2)
!9195 = !DILocation(line: 1538, column: 18, scope: !9194)
!9196 = !DILocation(line: 1538, column: 24, scope: !9194)
!9197 = !DILocation(line: 1538, column: 16, scope: !9194)
!9198 = !DILocation(line: 1538, column: 2, scope: !9191)
!9199 = !DILocalVariable(name: "ap", scope: !9200, file: !3, line: 1539, type: !5951)
!9200 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 1538, column: 38)
!9201 = !DILocation(line: 1539, column: 20, scope: !9200)
!9202 = !DILocation(line: 1539, column: 25, scope: !9200)
!9203 = !DILocation(line: 1539, column: 31, scope: !9200)
!9204 = !DILocation(line: 1539, column: 37, scope: !9200)
!9205 = !DILocalVariable(name: "qc", scope: !9200, file: !3, line: 1540, type: !6170)
!9206 = !DILocation(line: 1540, column: 26, scope: !9200)
!9207 = !DILocation(line: 1542, column: 24, scope: !9200)
!9208 = !DILocation(line: 1542, column: 28, scope: !9200)
!9209 = !DILocation(line: 1542, column: 32, scope: !9200)
!9210 = !DILocation(line: 1542, column: 37, scope: !9200)
!9211 = !DILocation(line: 1542, column: 8, scope: !9200)
!9212 = !DILocation(line: 1542, column: 6, scope: !9200)
!9213 = !DILocation(line: 1543, column: 7, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1543, column: 7)
!9215 = !DILocation(line: 1543, column: 7, scope: !9200)
!9216 = !DILocation(line: 1544, column: 10, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 1544, column: 8)
!9218 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 1543, column: 11)
!9219 = !DILocation(line: 1544, column: 14, scope: !9217)
!9220 = !DILocation(line: 1544, column: 17, scope: !9217)
!9221 = !DILocation(line: 1544, column: 23, scope: !9217)
!9222 = !DILocation(line: 1544, column: 8, scope: !9218)
!9223 = !DILocation(line: 1545, column: 16, scope: !9217)
!9224 = !DILocation(line: 1545, column: 26, scope: !9217)
!9225 = !DILocation(line: 1545, column: 30, scope: !9217)
!9226 = !DILocation(line: 1545, column: 13, scope: !9217)
!9227 = !DILocation(line: 1545, column: 5, scope: !9217)
!9228 = !DILocation(line: 1547, column: 21, scope: !9217)
!9229 = !DILocation(line: 1547, column: 18, scope: !9217)
!9230 = !DILocation(line: 1547, column: 13, scope: !9217)
!9231 = !DILocation(line: 1548, column: 3, scope: !9218)
!9232 = !DILocation(line: 1549, column: 17, scope: !9214)
!9233 = !DILocation(line: 1549, column: 14, scope: !9214)
!9234 = !DILocation(line: 1549, column: 9, scope: !9214)
!9235 = !DILocation(line: 1550, column: 2, scope: !9200)
!9236 = !DILocation(line: 1538, column: 34, scope: !9194)
!9237 = !DILocation(line: 1538, column: 2, scope: !9194)
!9238 = distinct !{!9238, !9198, !9239}
!9239 = !DILocation(line: 1550, column: 2, scope: !9191)
!9240 = !DILocation(line: 1557, column: 7, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 1557, column: 6)
!9242 = !DILocation(line: 1557, column: 15, scope: !9241)
!9243 = !DILocation(line: 1557, column: 19, scope: !9241)
!9244 = !DILocation(line: 1557, column: 6, scope: !9129)
!9245 = !DILocalVariable(name: "retry", scope: !9246, file: !3, line: 1558, type: !1331)
!9246 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 1557, column: 28)
!9247 = !DILocation(line: 1558, column: 8, scope: !9246)
!9248 = !DILocation(line: 1560, column: 10, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1560, column: 3)
!9250 = !DILocation(line: 1560, column: 8, scope: !9249)
!9251 = !DILocation(line: 1560, column: 15, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 1560, column: 3)
!9253 = !DILocation(line: 1560, column: 19, scope: !9252)
!9254 = !DILocation(line: 1560, column: 25, scope: !9252)
!9255 = !DILocation(line: 1560, column: 17, scope: !9252)
!9256 = !DILocation(line: 1560, column: 3, scope: !9249)
!9257 = !DILocalVariable(name: "ap", scope: !9258, file: !3, line: 1561, type: !5951)
!9258 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 1560, column: 39)
!9259 = !DILocation(line: 1561, column: 21, scope: !9258)
!9260 = !DILocation(line: 1561, column: 26, scope: !9258)
!9261 = !DILocation(line: 1561, column: 32, scope: !9258)
!9262 = !DILocation(line: 1561, column: 38, scope: !9258)
!9263 = !DILocation(line: 1563, column: 8, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1563, column: 8)
!9265 = !DILocation(line: 1563, column: 24, scope: !9264)
!9266 = !DILocation(line: 1563, column: 21, scope: !9264)
!9267 = !DILocation(line: 1563, column: 16, scope: !9264)
!9268 = !DILocation(line: 1563, column: 8, scope: !9258)
!9269 = !DILocation(line: 1564, column: 5, scope: !9264)
!9270 = !DILocation(line: 1566, column: 9, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1566, column: 8)
!9272 = !DILocation(line: 1566, column: 13, scope: !9271)
!9273 = !DILocation(line: 1566, column: 18, scope: !9271)
!9274 = !DILocation(line: 1566, column: 32, scope: !9271)
!9275 = !DILocation(line: 1567, column: 9, scope: !9271)
!9276 = !DILocation(line: 1567, column: 13, scope: !9271)
!9277 = !DILocation(line: 1567, column: 18, scope: !9271)
!9278 = !DILocation(line: 1567, column: 32, scope: !9271)
!9279 = !DILocation(line: 1566, column: 8, scope: !9258)
!9280 = !DILocation(line: 1568, column: 5, scope: !9271)
!9281 = !DILocation(line: 1570, column: 8, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1570, column: 8)
!9283 = !DILocation(line: 1570, column: 21, scope: !9282)
!9284 = !DILocation(line: 1570, column: 18, scope: !9282)
!9285 = !DILocation(line: 1570, column: 13, scope: !9282)
!9286 = !DILocation(line: 1570, column: 8, scope: !9258)
!9287 = !DILocation(line: 1571, column: 5, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1570, column: 25)
!9289 = !DILocation(line: 1571, column: 9, scope: !9288)
!9290 = !DILocation(line: 1571, column: 14, scope: !9288)
!9291 = !DILocation(line: 1571, column: 31, scope: !9288)
!9292 = !DILocation(line: 1572, column: 9, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 1572, column: 9)
!9294 = !DILocation(line: 1572, column: 13, scope: !9293)
!9295 = !DILocation(line: 1572, column: 18, scope: !9293)
!9296 = !DILocation(line: 1572, column: 9, scope: !9288)
!9297 = !DILocation(line: 1573, column: 6, scope: !9293)
!9298 = !DILocation(line: 1573, column: 10, scope: !9293)
!9299 = !DILocation(line: 1573, column: 15, scope: !9293)
!9300 = !DILocation(line: 1573, column: 29, scope: !9293)
!9301 = !DILocation(line: 1574, column: 4, scope: !9288)
!9302 = !DILocation(line: 1576, column: 11, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9304, file: !3, line: 1576, column: 9)
!9304 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1574, column: 11)
!9305 = !DILocation(line: 1576, column: 15, scope: !9303)
!9306 = !DILocation(line: 1576, column: 20, scope: !9303)
!9307 = !DILocation(line: 1576, column: 37, scope: !9303)
!9308 = !DILocation(line: 1576, column: 41, scope: !9303)
!9309 = !DILocation(line: 1576, column: 9, scope: !9304)
!9310 = !DILocation(line: 1577, column: 12, scope: !9303)
!9311 = !DILocation(line: 1577, column: 6, scope: !9303)
!9312 = !DILocation(line: 1583, column: 3, scope: !9258)
!9313 = !DILocation(line: 1560, column: 35, scope: !9252)
!9314 = !DILocation(line: 1560, column: 3, scope: !9252)
!9315 = distinct !{!9315, !9256, !9316}
!9316 = !DILocation(line: 1583, column: 3, scope: !9249)
!9317 = !DILocation(line: 1585, column: 7, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1585, column: 7)
!9319 = !DILocation(line: 1585, column: 7, scope: !9246)
!9320 = !DILocation(line: 1586, column: 12, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 1585, column: 14)
!9322 = !DILocation(line: 1587, column: 4, scope: !9321)
!9323 = !DILocation(line: 1589, column: 2, scope: !9246)
!9324 = !DILocation(line: 1591, column: 26, scope: !9129)
!9325 = !DILocation(line: 1591, column: 32, scope: !9129)
!9326 = !DILocation(line: 1591, column: 38, scope: !9129)
!9327 = !DILocation(line: 409, column: 2, scope: !7186, inlinedAt: !9134)
!9328 = !DILocation(line: 409, column: 2, scope: !7191, inlinedAt: !9134)
!9329 = !DILocation(line: 409, column: 2, scope: !7192, inlinedAt: !9134)
!9330 = !DILocation(line: 409, column: 2, scope: !7199, inlinedAt: !9134)
!9331 = !DILocation(line: 409, column: 2, scope: !7202, inlinedAt: !9134)
!9332 = !DILocation(line: 1593, column: 9, scope: !9129)
!9333 = !DILocation(line: 1593, column: 2, scope: !9129)
!9334 = distinct !DISubprogram(name: "ata_qc_from_tag", scope: !152, file: !152, line: 1740, type: !9335, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9335 = !DISubroutineType(types: !9336)
!9336 = !{!6170, !5951, !7}
!9337 = !DILocalVariable(name: "ap", arg: 1, scope: !9334, file: !152, line: 1740, type: !5951)
!9338 = !DILocation(line: 1740, column: 71, scope: !9334)
!9339 = !DILocalVariable(name: "tag", arg: 2, scope: !9334, file: !152, line: 1741, type: !7)
!9340 = !DILocation(line: 1741, column: 25, scope: !9334)
!9341 = !DILocalVariable(name: "qc", scope: !9334, file: !152, line: 1743, type: !6170)
!9342 = !DILocation(line: 1743, column: 25, scope: !9334)
!9343 = !DILocation(line: 1743, column: 48, scope: !9334)
!9344 = !DILocation(line: 1743, column: 52, scope: !9334)
!9345 = !DILocation(line: 1743, column: 30, scope: !9334)
!9346 = !DILocation(line: 1745, column: 6, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9334, file: !152, line: 1745, column: 6)
!9348 = !DILocation(line: 1745, column: 20, scope: !9347)
!9349 = !DILocation(line: 1745, column: 24, scope: !9347)
!9350 = !DILocation(line: 1745, column: 28, scope: !9347)
!9351 = !DILocation(line: 1745, column: 33, scope: !9347)
!9352 = !DILocation(line: 1745, column: 6, scope: !9334)
!9353 = !DILocation(line: 1746, column: 10, scope: !9347)
!9354 = !DILocation(line: 1746, column: 3, scope: !9347)
!9355 = !DILocation(line: 1748, column: 7, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9334, file: !152, line: 1748, column: 6)
!9357 = !DILocation(line: 1748, column: 11, scope: !9356)
!9358 = !DILocation(line: 1748, column: 17, scope: !9356)
!9359 = !DILocation(line: 1749, column: 26, scope: !9356)
!9360 = !DILocation(line: 1748, column: 6, scope: !9334)
!9361 = !DILocation(line: 1750, column: 10, scope: !9356)
!9362 = !DILocation(line: 1750, column: 3, scope: !9356)
!9363 = !DILocation(line: 1752, column: 2, scope: !9334)
!9364 = !DILocation(line: 1753, column: 1, scope: !9334)
!9365 = distinct !DISubprogram(name: "ata_sff_dev_classify", scope: !3, file: !3, line: 1808, type: !9366, scopeLine: 1810, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9366 = !DISubroutineType(types: !9367)
!9367 = !{!7, !6175, !181, !6257}
!9368 = !DILocalVariable(name: "dev", arg: 1, scope: !9365, file: !3, line: 1808, type: !6175)
!9369 = !DILocation(line: 1808, column: 54, scope: !9365)
!9370 = !DILocalVariable(name: "present", arg: 2, scope: !9365, file: !3, line: 1808, type: !181)
!9371 = !DILocation(line: 1808, column: 63, scope: !9365)
!9372 = !DILocalVariable(name: "r_err", arg: 3, scope: !9365, file: !3, line: 1809, type: !6257)
!9373 = !DILocation(line: 1809, column: 11, scope: !9365)
!9374 = !DILocalVariable(name: "ap", scope: !9365, file: !3, line: 1811, type: !5951)
!9375 = !DILocation(line: 1811, column: 19, scope: !9365)
!9376 = !DILocation(line: 1811, column: 24, scope: !9365)
!9377 = !DILocation(line: 1811, column: 29, scope: !9365)
!9378 = !DILocation(line: 1811, column: 35, scope: !9365)
!9379 = !DILocalVariable(name: "tf", scope: !9365, file: !3, line: 1812, type: !6340)
!9380 = !DILocation(line: 1812, column: 22, scope: !9365)
!9381 = !DILocalVariable(name: "class", scope: !9365, file: !3, line: 1813, type: !7)
!9382 = !DILocation(line: 1813, column: 15, scope: !9365)
!9383 = !DILocalVariable(name: "err", scope: !9365, file: !3, line: 1814, type: !2256)
!9384 = !DILocation(line: 1814, column: 5, scope: !9365)
!9385 = !DILocation(line: 1816, column: 2, scope: !9365)
!9386 = !DILocation(line: 1816, column: 6, scope: !9365)
!9387 = !DILocation(line: 1816, column: 11, scope: !9365)
!9388 = !DILocation(line: 1816, column: 26, scope: !9365)
!9389 = !DILocation(line: 1816, column: 30, scope: !9365)
!9390 = !DILocation(line: 1816, column: 35, scope: !9365)
!9391 = !DILocation(line: 1818, column: 2, scope: !9365)
!9392 = !DILocation(line: 1820, column: 2, scope: !9365)
!9393 = !DILocation(line: 1820, column: 6, scope: !9365)
!9394 = !DILocation(line: 1820, column: 11, scope: !9365)
!9395 = !DILocation(line: 1820, column: 23, scope: !9365)
!9396 = !DILocation(line: 1821, column: 11, scope: !9365)
!9397 = !DILocation(line: 1821, column: 6, scope: !9365)
!9398 = !DILocation(line: 1822, column: 6, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1822, column: 6)
!9400 = !DILocation(line: 1822, column: 6, scope: !9365)
!9401 = !DILocation(line: 1823, column: 12, scope: !9399)
!9402 = !DILocation(line: 1823, column: 4, scope: !9399)
!9403 = !DILocation(line: 1823, column: 10, scope: !9399)
!9404 = !DILocation(line: 1823, column: 3, scope: !9399)
!9405 = !DILocation(line: 1826, column: 6, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1826, column: 6)
!9407 = !DILocation(line: 1826, column: 10, scope: !9406)
!9408 = !DILocation(line: 1826, column: 6, scope: !9365)
!9409 = !DILocation(line: 1828, column: 3, scope: !9406)
!9410 = !DILocation(line: 1828, column: 8, scope: !9406)
!9411 = !DILocation(line: 1828, column: 16, scope: !9406)
!9412 = !DILocation(line: 1829, column: 11, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 1829, column: 11)
!9414 = !DILocation(line: 1829, column: 15, scope: !9413)
!9415 = !DILocation(line: 1829, column: 11, scope: !9406)
!9416 = !DILocation(line: 1831, column: 12, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 1831, column: 11)
!9418 = !DILocation(line: 1831, column: 17, scope: !9417)
!9419 = !DILocation(line: 1831, column: 23, scope: !9417)
!9420 = !DILocation(line: 1831, column: 29, scope: !9417)
!9421 = !DILocation(line: 1831, column: 33, scope: !9417)
!9422 = !DILocation(line: 1831, column: 37, scope: !9417)
!9423 = !DILocation(line: 1831, column: 11, scope: !9413)
!9424 = !DILocation(line: 1834, column: 3, scope: !9417)
!9425 = !DILocation(line: 1837, column: 10, scope: !9365)
!9426 = !DILocation(line: 1837, column: 8, scope: !9365)
!9427 = !DILocation(line: 1839, column: 6, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1839, column: 6)
!9429 = !DILocation(line: 1839, column: 12, scope: !9428)
!9430 = !DILocation(line: 1839, column: 6, scope: !9365)
!9431 = !DILocation(line: 1846, column: 7, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1846, column: 7)
!9433 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 1839, column: 32)
!9434 = !DILocation(line: 1846, column: 15, scope: !9432)
!9435 = !DILocation(line: 1846, column: 19, scope: !9432)
!9436 = !DILocation(line: 1846, column: 24, scope: !9432)
!9437 = !DILocation(line: 1846, column: 32, scope: !9432)
!9438 = !DILocation(line: 1846, column: 7, scope: !9433)
!9439 = !DILocation(line: 1847, column: 10, scope: !9432)
!9440 = !DILocation(line: 1847, column: 4, scope: !9432)
!9441 = !DILocation(line: 1849, column: 10, scope: !9432)
!9442 = !DILocation(line: 1850, column: 2, scope: !9433)
!9443 = !DILocation(line: 1850, column: 14, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 1850, column: 13)
!9445 = !DILocation(line: 1850, column: 20, scope: !9444)
!9446 = !DILocation(line: 1850, column: 36, scope: !9444)
!9447 = !DILocation(line: 1851, column: 7, scope: !9444)
!9448 = !DILocation(line: 1851, column: 11, scope: !9444)
!9449 = !DILocation(line: 1851, column: 16, scope: !9444)
!9450 = !DILocation(line: 1851, column: 33, scope: !9444)
!9451 = !DILocation(line: 1851, column: 37, scope: !9444)
!9452 = !DILocation(line: 1850, column: 13, scope: !9428)
!9453 = !DILocation(line: 1852, column: 9, scope: !9444)
!9454 = !DILocation(line: 1852, column: 3, scope: !9444)
!9455 = !DILocation(line: 1854, column: 9, scope: !9365)
!9456 = !DILocation(line: 1854, column: 2, scope: !9365)
!9457 = !DILocation(line: 1855, column: 1, scope: !9365)
!9458 = distinct !DISubprogram(name: "ata_sff_wait_after_reset", scope: !3, file: !3, line: 1875, type: !9459, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9459 = !DISubroutineType(types: !9460)
!9460 = !{!181, !6179, !7, !1010}
!9461 = !DILocalVariable(name: "link", arg: 1, scope: !9458, file: !3, line: 1875, type: !6179)
!9462 = !DILocation(line: 1875, column: 47, scope: !9458)
!9463 = !DILocalVariable(name: "devmask", arg: 2, scope: !9458, file: !3, line: 1875, type: !7)
!9464 = !DILocation(line: 1875, column: 66, scope: !9458)
!9465 = !DILocalVariable(name: "deadline", arg: 3, scope: !9458, file: !3, line: 1876, type: !1010)
!9466 = !DILocation(line: 1876, column: 23, scope: !9458)
!9467 = !DILocalVariable(name: "ap", scope: !9458, file: !3, line: 1878, type: !5951)
!9468 = !DILocation(line: 1878, column: 19, scope: !9458)
!9469 = !DILocation(line: 1878, column: 24, scope: !9458)
!9470 = !DILocation(line: 1878, column: 30, scope: !9458)
!9471 = !DILocalVariable(name: "ioaddr", scope: !9458, file: !3, line: 1879, type: !7298)
!9472 = !DILocation(line: 1879, column: 22, scope: !9458)
!9473 = !DILocation(line: 1879, column: 32, scope: !9458)
!9474 = !DILocation(line: 1879, column: 36, scope: !9458)
!9475 = !DILocalVariable(name: "dev0", scope: !9458, file: !3, line: 1880, type: !7)
!9476 = !DILocation(line: 1880, column: 15, scope: !9458)
!9477 = !DILocation(line: 1880, column: 22, scope: !9458)
!9478 = !DILocation(line: 1880, column: 30, scope: !9458)
!9479 = !DILocalVariable(name: "dev1", scope: !9458, file: !3, line: 1881, type: !7)
!9480 = !DILocation(line: 1881, column: 15, scope: !9458)
!9481 = !DILocation(line: 1881, column: 22, scope: !9458)
!9482 = !DILocation(line: 1881, column: 30, scope: !9458)
!9483 = !DILocalVariable(name: "rc", scope: !9458, file: !3, line: 1882, type: !181)
!9484 = !DILocation(line: 1882, column: 6, scope: !9458)
!9485 = !DILocalVariable(name: "ret", scope: !9458, file: !3, line: 1882, type: !181)
!9486 = !DILocation(line: 1882, column: 10, scope: !9458)
!9487 = !DILocation(line: 1884, column: 13, scope: !9458)
!9488 = !DILocation(line: 1884, column: 2, scope: !9458)
!9489 = !DILocation(line: 1887, column: 26, scope: !9458)
!9490 = !DILocation(line: 1887, column: 32, scope: !9458)
!9491 = !DILocation(line: 1887, column: 7, scope: !9458)
!9492 = !DILocation(line: 1887, column: 5, scope: !9458)
!9493 = !DILocation(line: 1891, column: 6, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 1891, column: 6)
!9495 = !DILocation(line: 1891, column: 6, scope: !9458)
!9496 = !DILocation(line: 1892, column: 10, scope: !9494)
!9497 = !DILocation(line: 1892, column: 3, scope: !9494)
!9498 = !DILocation(line: 1897, column: 6, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 1897, column: 6)
!9500 = !DILocation(line: 1897, column: 6, scope: !9458)
!9501 = !DILocalVariable(name: "i", scope: !9502, file: !3, line: 1898, type: !181)
!9502 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 1897, column: 12)
!9503 = !DILocation(line: 1898, column: 7, scope: !9502)
!9504 = !DILocation(line: 1900, column: 3, scope: !9502)
!9505 = !DILocation(line: 1900, column: 7, scope: !9502)
!9506 = !DILocation(line: 1900, column: 12, scope: !9502)
!9507 = !DILocation(line: 1900, column: 27, scope: !9502)
!9508 = !DILocation(line: 1906, column: 10, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1906, column: 3)
!9510 = !DILocation(line: 1906, column: 8, scope: !9509)
!9511 = !DILocation(line: 1906, column: 15, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 1906, column: 3)
!9513 = !DILocation(line: 1906, column: 17, scope: !9512)
!9514 = !DILocation(line: 1906, column: 3, scope: !9509)
!9515 = !DILocalVariable(name: "nsect", scope: !9516, file: !3, line: 1907, type: !2256)
!9516 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 1906, column: 27)
!9517 = !DILocation(line: 1907, column: 7, scope: !9516)
!9518 = !DILocalVariable(name: "lbal", scope: !9516, file: !3, line: 1907, type: !2256)
!9519 = !DILocation(line: 1907, column: 14, scope: !9516)
!9520 = !DILocation(line: 1909, column: 20, scope: !9516)
!9521 = !DILocation(line: 1909, column: 28, scope: !9516)
!9522 = !DILocation(line: 1909, column: 12, scope: !9516)
!9523 = !DILocation(line: 1909, column: 10, scope: !9516)
!9524 = !DILocation(line: 1910, column: 19, scope: !9516)
!9525 = !DILocation(line: 1910, column: 27, scope: !9516)
!9526 = !DILocation(line: 1910, column: 11, scope: !9516)
!9527 = !DILocation(line: 1910, column: 9, scope: !9516)
!9528 = !DILocation(line: 1911, column: 9, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 1911, column: 8)
!9530 = !DILocation(line: 1911, column: 15, scope: !9529)
!9531 = !DILocation(line: 1911, column: 21, scope: !9529)
!9532 = !DILocation(line: 1911, column: 25, scope: !9529)
!9533 = !DILocation(line: 1911, column: 30, scope: !9529)
!9534 = !DILocation(line: 1911, column: 8, scope: !9516)
!9535 = !DILocation(line: 1912, column: 5, scope: !9529)
!9536 = !DILocation(line: 1913, column: 15, scope: !9516)
!9537 = !DILocation(line: 1913, column: 4, scope: !9516)
!9538 = !DILocation(line: 1914, column: 3, scope: !9516)
!9539 = !DILocation(line: 1906, column: 23, scope: !9512)
!9540 = !DILocation(line: 1906, column: 3, scope: !9512)
!9541 = distinct !{!9541, !9514, !9542}
!9542 = !DILocation(line: 1914, column: 3, scope: !9509)
!9543 = !DILocation(line: 1916, column: 27, scope: !9502)
!9544 = !DILocation(line: 1916, column: 33, scope: !9502)
!9545 = !DILocation(line: 1916, column: 8, scope: !9502)
!9546 = !DILocation(line: 1916, column: 6, scope: !9502)
!9547 = !DILocation(line: 1917, column: 7, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1917, column: 7)
!9549 = !DILocation(line: 1917, column: 7, scope: !9502)
!9550 = !DILocation(line: 1918, column: 8, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 1918, column: 8)
!9552 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 1917, column: 11)
!9553 = !DILocation(line: 1918, column: 11, scope: !9551)
!9554 = !DILocation(line: 1918, column: 8, scope: !9552)
!9555 = !DILocation(line: 1919, column: 12, scope: !9551)
!9556 = !DILocation(line: 1919, column: 5, scope: !9551)
!9557 = !DILocation(line: 1920, column: 10, scope: !9552)
!9558 = !DILocation(line: 1920, column: 8, scope: !9552)
!9559 = !DILocation(line: 1921, column: 3, scope: !9552)
!9560 = !DILocation(line: 1922, column: 2, scope: !9502)
!9561 = !DILocation(line: 1925, column: 2, scope: !9458)
!9562 = !DILocation(line: 1925, column: 6, scope: !9458)
!9563 = !DILocation(line: 1925, column: 11, scope: !9458)
!9564 = !DILocation(line: 1925, column: 26, scope: !9458)
!9565 = !DILocation(line: 1926, column: 6, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 1926, column: 6)
!9567 = !DILocation(line: 1926, column: 6, scope: !9458)
!9568 = !DILocation(line: 1927, column: 3, scope: !9566)
!9569 = !DILocation(line: 1927, column: 7, scope: !9566)
!9570 = !DILocation(line: 1927, column: 12, scope: !9566)
!9571 = !DILocation(line: 1927, column: 27, scope: !9566)
!9572 = !DILocation(line: 1928, column: 6, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 1928, column: 6)
!9574 = !DILocation(line: 1928, column: 6, scope: !9458)
!9575 = !DILocation(line: 1929, column: 3, scope: !9573)
!9576 = !DILocation(line: 1929, column: 7, scope: !9573)
!9577 = !DILocation(line: 1929, column: 12, scope: !9573)
!9578 = !DILocation(line: 1929, column: 27, scope: !9573)
!9579 = !DILocation(line: 1931, column: 9, scope: !9458)
!9580 = !DILocation(line: 1931, column: 2, scope: !9458)
!9581 = !DILocation(line: 1932, column: 1, scope: !9458)
!9582 = distinct !DISubprogram(name: "ata_devchk", scope: !3, file: !3, line: 1762, type: !9583, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9583 = !DISubroutineType(types: !9584)
!9584 = !{!7, !5951, !7}
!9585 = !DILocalVariable(name: "ap", arg: 1, scope: !9582, file: !3, line: 1762, type: !5951)
!9586 = !DILocation(line: 1762, column: 49, scope: !9582)
!9587 = !DILocalVariable(name: "device", arg: 2, scope: !9582, file: !3, line: 1762, type: !7)
!9588 = !DILocation(line: 1762, column: 66, scope: !9582)
!9589 = !DILocalVariable(name: "ioaddr", scope: !9582, file: !3, line: 1764, type: !7298)
!9590 = !DILocation(line: 1764, column: 22, scope: !9582)
!9591 = !DILocation(line: 1764, column: 32, scope: !9582)
!9592 = !DILocation(line: 1764, column: 36, scope: !9582)
!9593 = !DILocalVariable(name: "nsect", scope: !9582, file: !3, line: 1765, type: !2256)
!9594 = !DILocation(line: 1765, column: 5, scope: !9582)
!9595 = !DILocalVariable(name: "lbal", scope: !9582, file: !3, line: 1765, type: !2256)
!9596 = !DILocation(line: 1765, column: 12, scope: !9582)
!9597 = !DILocation(line: 1767, column: 2, scope: !9582)
!9598 = !DILocation(line: 1767, column: 6, scope: !9582)
!9599 = !DILocation(line: 1767, column: 11, scope: !9582)
!9600 = !DILocation(line: 1767, column: 26, scope: !9582)
!9601 = !DILocation(line: 1767, column: 30, scope: !9582)
!9602 = !DILocation(line: 1769, column: 17, scope: !9582)
!9603 = !DILocation(line: 1769, column: 25, scope: !9582)
!9604 = !DILocation(line: 1769, column: 2, scope: !9582)
!9605 = !DILocation(line: 1770, column: 17, scope: !9582)
!9606 = !DILocation(line: 1770, column: 25, scope: !9582)
!9607 = !DILocation(line: 1770, column: 2, scope: !9582)
!9608 = !DILocation(line: 1772, column: 17, scope: !9582)
!9609 = !DILocation(line: 1772, column: 25, scope: !9582)
!9610 = !DILocation(line: 1772, column: 2, scope: !9582)
!9611 = !DILocation(line: 1773, column: 17, scope: !9582)
!9612 = !DILocation(line: 1773, column: 25, scope: !9582)
!9613 = !DILocation(line: 1773, column: 2, scope: !9582)
!9614 = !DILocation(line: 1775, column: 17, scope: !9582)
!9615 = !DILocation(line: 1775, column: 25, scope: !9582)
!9616 = !DILocation(line: 1775, column: 2, scope: !9582)
!9617 = !DILocation(line: 1776, column: 17, scope: !9582)
!9618 = !DILocation(line: 1776, column: 25, scope: !9582)
!9619 = !DILocation(line: 1776, column: 2, scope: !9582)
!9620 = !DILocation(line: 1778, column: 18, scope: !9582)
!9621 = !DILocation(line: 1778, column: 26, scope: !9582)
!9622 = !DILocation(line: 1778, column: 10, scope: !9582)
!9623 = !DILocation(line: 1778, column: 8, scope: !9582)
!9624 = !DILocation(line: 1779, column: 17, scope: !9582)
!9625 = !DILocation(line: 1779, column: 25, scope: !9582)
!9626 = !DILocation(line: 1779, column: 9, scope: !9582)
!9627 = !DILocation(line: 1779, column: 7, scope: !9582)
!9628 = !DILocation(line: 1781, column: 7, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 1781, column: 6)
!9630 = !DILocation(line: 1781, column: 13, scope: !9629)
!9631 = !DILocation(line: 1781, column: 22, scope: !9629)
!9632 = !DILocation(line: 1781, column: 26, scope: !9629)
!9633 = !DILocation(line: 1781, column: 31, scope: !9629)
!9634 = !DILocation(line: 1781, column: 6, scope: !9582)
!9635 = !DILocation(line: 1782, column: 3, scope: !9629)
!9636 = !DILocation(line: 1784, column: 2, scope: !9582)
!9637 = !DILocation(line: 1785, column: 1, scope: !9582)
!9638 = distinct !DISubprogram(name: "ata_bus_softreset", scope: !3, file: !3, line: 1935, type: !9639, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9639 = !DISubroutineType(types: !9640)
!9640 = !{!181, !5951, !7, !1010}
!9641 = !DILocalVariable(name: "ap", arg: 1, scope: !9638, file: !3, line: 1935, type: !5951)
!9642 = !DILocation(line: 1935, column: 47, scope: !9638)
!9643 = !DILocalVariable(name: "devmask", arg: 2, scope: !9638, file: !3, line: 1935, type: !7)
!9644 = !DILocation(line: 1935, column: 64, scope: !9638)
!9645 = !DILocalVariable(name: "deadline", arg: 3, scope: !9638, file: !3, line: 1936, type: !1010)
!9646 = !DILocation(line: 1936, column: 23, scope: !9638)
!9647 = !DILocalVariable(name: "ioaddr", scope: !9638, file: !3, line: 1938, type: !7298)
!9648 = !DILocation(line: 1938, column: 22, scope: !9638)
!9649 = !DILocation(line: 1938, column: 32, scope: !9638)
!9650 = !DILocation(line: 1938, column: 36, scope: !9638)
!9651 = !DILocation(line: 1942, column: 6, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 1942, column: 6)
!9653 = !DILocation(line: 1942, column: 10, scope: !9652)
!9654 = !DILocation(line: 1942, column: 17, scope: !9652)
!9655 = !DILocation(line: 1942, column: 6, scope: !9638)
!9656 = !DILocation(line: 1944, column: 12, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1942, column: 27)
!9658 = !DILocation(line: 1944, column: 16, scope: !9657)
!9659 = !DILocation(line: 1944, column: 21, scope: !9657)
!9660 = !DILocation(line: 1944, column: 29, scope: !9657)
!9661 = !DILocation(line: 1944, column: 3, scope: !9657)
!9662 = !DILocation(line: 1945, column: 3, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1945, column: 3)
!9664 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 1945, column: 3)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 1945, column: 3)
!9666 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 1945, column: 3)
!9667 = !DILocation(line: 1946, column: 12, scope: !9657)
!9668 = !DILocation(line: 1946, column: 16, scope: !9657)
!9669 = !DILocation(line: 1946, column: 20, scope: !9657)
!9670 = !DILocation(line: 1946, column: 32, scope: !9657)
!9671 = !DILocation(line: 1946, column: 40, scope: !9657)
!9672 = !DILocation(line: 1946, column: 3, scope: !9657)
!9673 = !DILocation(line: 1947, column: 3, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1947, column: 3)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 1947, column: 3)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 1947, column: 3)
!9677 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 1947, column: 3)
!9678 = !DILocation(line: 1948, column: 12, scope: !9657)
!9679 = !DILocation(line: 1948, column: 16, scope: !9657)
!9680 = !DILocation(line: 1948, column: 21, scope: !9657)
!9681 = !DILocation(line: 1948, column: 29, scope: !9657)
!9682 = !DILocation(line: 1948, column: 3, scope: !9657)
!9683 = !DILocation(line: 1949, column: 18, scope: !9657)
!9684 = !DILocation(line: 1949, column: 22, scope: !9657)
!9685 = !DILocation(line: 1949, column: 3, scope: !9657)
!9686 = !DILocation(line: 1949, column: 7, scope: !9657)
!9687 = !DILocation(line: 1949, column: 16, scope: !9657)
!9688 = !DILocation(line: 1950, column: 2, scope: !9657)
!9689 = !DILocation(line: 1953, column: 35, scope: !9638)
!9690 = !DILocation(line: 1953, column: 39, scope: !9638)
!9691 = !DILocation(line: 1953, column: 45, scope: !9638)
!9692 = !DILocation(line: 1953, column: 54, scope: !9638)
!9693 = !DILocation(line: 1953, column: 9, scope: !9638)
!9694 = !DILocation(line: 1953, column: 2, scope: !9638)
!9695 = distinct !DISubprogram(name: "sata_ehc_deb_timing", scope: !152, file: !152, line: 1175, type: !9696, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9696 = !DISubroutineType(types: !9697)
!9697 = !{!7017, !6878}
!9698 = !DILocalVariable(name: "ehc", arg: 1, scope: !9695, file: !152, line: 1175, type: !6878)
!9699 = !DILocation(line: 1175, column: 44, scope: !9695)
!9700 = !DILocation(line: 1177, column: 6, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9695, file: !152, line: 1177, column: 6)
!9702 = !DILocation(line: 1177, column: 11, scope: !9701)
!9703 = !DILocation(line: 1177, column: 13, scope: !9701)
!9704 = !DILocation(line: 1177, column: 19, scope: !9701)
!9705 = !DILocation(line: 1177, column: 6, scope: !9695)
!9706 = !DILocation(line: 1178, column: 3, scope: !9701)
!9707 = !DILocation(line: 1180, column: 3, scope: !9701)
!9708 = !DILocation(line: 1181, column: 1, scope: !9695)
!9709 = distinct !DISubprogram(name: "__ata_qc_from_tag", scope: !152, file: !152, line: 1732, type: !9335, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9710 = !DILocalVariable(name: "ap", arg: 1, scope: !9709, file: !152, line: 1732, type: !5951)
!9711 = !DILocation(line: 1732, column: 73, scope: !9709)
!9712 = !DILocalVariable(name: "tag", arg: 2, scope: !9709, file: !152, line: 1733, type: !7)
!9713 = !DILocation(line: 1733, column: 27, scope: !9709)
!9714 = !DILocation(line: 1735, column: 20, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9709, file: !152, line: 1735, column: 6)
!9716 = !DILocation(line: 1735, column: 6, scope: !9715)
!9717 = !DILocation(line: 1735, column: 6, scope: !9709)
!9718 = !DILocation(line: 1736, column: 11, scope: !9715)
!9719 = !DILocation(line: 1736, column: 15, scope: !9715)
!9720 = !DILocation(line: 1736, column: 20, scope: !9715)
!9721 = !DILocation(line: 1736, column: 3, scope: !9715)
!9722 = !DILocation(line: 1737, column: 2, scope: !9709)
!9723 = !DILocation(line: 1738, column: 1, scope: !9709)
!9724 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !9725, file: !9725, line: 666, type: !9726, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9725 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!1010}
!9728 = !DILocalVariable(name: "f", scope: !9724, file: !9725, line: 668, type: !1010)
!9729 = !DILocation(line: 668, column: 16, scope: !9724)
!9730 = !DILocation(line: 670, column: 6, scope: !9724)
!9731 = !DILocation(line: 670, column: 4, scope: !9724)
!9732 = !DILocation(line: 671, column: 2, scope: !9724)
!9733 = !DILocation(line: 672, column: 9, scope: !9724)
!9734 = !DILocation(line: 672, column: 2, scope: !9724)
!9735 = distinct !DISubprogram(name: "ata_sff_std_ports", scope: !3, file: !3, line: 2172, type: !9736, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{null, !7298}
!9738 = !DILocalVariable(name: "ioaddr", arg: 1, scope: !9735, file: !3, line: 2172, type: !7298)
!9739 = !DILocation(line: 2172, column: 44, scope: !9735)
!9740 = !DILocation(line: 2174, column: 22, scope: !9735)
!9741 = !DILocation(line: 2174, column: 30, scope: !9735)
!9742 = !DILocation(line: 2174, column: 39, scope: !9735)
!9743 = !DILocation(line: 2174, column: 2, scope: !9735)
!9744 = !DILocation(line: 2174, column: 10, scope: !9735)
!9745 = !DILocation(line: 2174, column: 20, scope: !9735)
!9746 = !DILocation(line: 2175, column: 23, scope: !9735)
!9747 = !DILocation(line: 2175, column: 31, scope: !9735)
!9748 = !DILocation(line: 2175, column: 40, scope: !9735)
!9749 = !DILocation(line: 2175, column: 2, scope: !9735)
!9750 = !DILocation(line: 2175, column: 10, scope: !9735)
!9751 = !DILocation(line: 2175, column: 21, scope: !9735)
!9752 = !DILocation(line: 2176, column: 25, scope: !9735)
!9753 = !DILocation(line: 2176, column: 33, scope: !9735)
!9754 = !DILocation(line: 2176, column: 42, scope: !9735)
!9755 = !DILocation(line: 2176, column: 2, scope: !9735)
!9756 = !DILocation(line: 2176, column: 10, scope: !9735)
!9757 = !DILocation(line: 2176, column: 23, scope: !9735)
!9758 = !DILocation(line: 2177, column: 23, scope: !9735)
!9759 = !DILocation(line: 2177, column: 31, scope: !9735)
!9760 = !DILocation(line: 2177, column: 40, scope: !9735)
!9761 = !DILocation(line: 2177, column: 2, scope: !9735)
!9762 = !DILocation(line: 2177, column: 10, scope: !9735)
!9763 = !DILocation(line: 2177, column: 21, scope: !9735)
!9764 = !DILocation(line: 2178, column: 22, scope: !9735)
!9765 = !DILocation(line: 2178, column: 30, scope: !9735)
!9766 = !DILocation(line: 2178, column: 39, scope: !9735)
!9767 = !DILocation(line: 2178, column: 2, scope: !9735)
!9768 = !DILocation(line: 2178, column: 10, scope: !9735)
!9769 = !DILocation(line: 2178, column: 20, scope: !9735)
!9770 = !DILocation(line: 2179, column: 22, scope: !9735)
!9771 = !DILocation(line: 2179, column: 30, scope: !9735)
!9772 = !DILocation(line: 2179, column: 39, scope: !9735)
!9773 = !DILocation(line: 2179, column: 2, scope: !9735)
!9774 = !DILocation(line: 2179, column: 10, scope: !9735)
!9775 = !DILocation(line: 2179, column: 20, scope: !9735)
!9776 = !DILocation(line: 2180, column: 22, scope: !9735)
!9777 = !DILocation(line: 2180, column: 30, scope: !9735)
!9778 = !DILocation(line: 2180, column: 39, scope: !9735)
!9779 = !DILocation(line: 2180, column: 2, scope: !9735)
!9780 = !DILocation(line: 2180, column: 10, scope: !9735)
!9781 = !DILocation(line: 2180, column: 20, scope: !9735)
!9782 = !DILocation(line: 2181, column: 24, scope: !9735)
!9783 = !DILocation(line: 2181, column: 32, scope: !9735)
!9784 = !DILocation(line: 2181, column: 41, scope: !9735)
!9785 = !DILocation(line: 2181, column: 2, scope: !9735)
!9786 = !DILocation(line: 2181, column: 10, scope: !9735)
!9787 = !DILocation(line: 2181, column: 22, scope: !9735)
!9788 = !DILocation(line: 2182, column: 24, scope: !9735)
!9789 = !DILocation(line: 2182, column: 32, scope: !9735)
!9790 = !DILocation(line: 2182, column: 41, scope: !9735)
!9791 = !DILocation(line: 2182, column: 2, scope: !9735)
!9792 = !DILocation(line: 2182, column: 10, scope: !9735)
!9793 = !DILocation(line: 2182, column: 22, scope: !9735)
!9794 = !DILocation(line: 2183, column: 25, scope: !9735)
!9795 = !DILocation(line: 2183, column: 33, scope: !9735)
!9796 = !DILocation(line: 2183, column: 42, scope: !9735)
!9797 = !DILocation(line: 2183, column: 2, scope: !9735)
!9798 = !DILocation(line: 2183, column: 10, scope: !9735)
!9799 = !DILocation(line: 2183, column: 23, scope: !9735)
!9800 = !DILocation(line: 2184, column: 1, scope: !9735)
!9801 = distinct !DISubprogram(name: "ata_pci_sff_init_host", scope: !3, file: !3, line: 2222, type: !9802, scopeLine: 2223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{!181, !6488}
!9804 = !DILocalVariable(name: "host", arg: 1, scope: !9801, file: !3, line: 2222, type: !6488)
!9805 = !DILocation(line: 2222, column: 44, scope: !9801)
!9806 = !DILocalVariable(name: "gdev", scope: !9801, file: !3, line: 2224, type: !1068)
!9807 = !DILocation(line: 2224, column: 17, scope: !9801)
!9808 = !DILocation(line: 2224, column: 24, scope: !9801)
!9809 = !DILocation(line: 2224, column: 30, scope: !9801)
!9810 = !DILocalVariable(name: "pdev", scope: !9801, file: !3, line: 2225, type: !969)
!9811 = !DILocation(line: 2225, column: 18, scope: !9801)
!9812 = !DILocalVariable(name: "__mptr", scope: !9813, file: !3, line: 2225, type: !968)
!9813 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 2225, column: 25)
!9814 = !DILocation(line: 2225, column: 25, scope: !9813)
!9815 = !DILocation(line: 2225, column: 25, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2225, column: 25)
!9817 = !DILocalVariable(name: "mask", scope: !9801, file: !3, line: 2226, type: !7)
!9818 = !DILocation(line: 2226, column: 15, scope: !9801)
!9819 = !DILocalVariable(name: "i", scope: !9801, file: !3, line: 2227, type: !181)
!9820 = !DILocation(line: 2227, column: 6, scope: !9801)
!9821 = !DILocalVariable(name: "rc", scope: !9801, file: !3, line: 2227, type: !181)
!9822 = !DILocation(line: 2227, column: 9, scope: !9801)
!9823 = !DILocation(line: 2230, column: 9, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 2230, column: 2)
!9825 = !DILocation(line: 2230, column: 7, scope: !9824)
!9826 = !DILocation(line: 2230, column: 14, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 2230, column: 2)
!9828 = !DILocation(line: 2230, column: 16, scope: !9827)
!9829 = !DILocation(line: 2230, column: 2, scope: !9824)
!9830 = !DILocalVariable(name: "ap", scope: !9831, file: !3, line: 2231, type: !5951)
!9831 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 2230, column: 26)
!9832 = !DILocation(line: 2231, column: 20, scope: !9831)
!9833 = !DILocation(line: 2231, column: 25, scope: !9831)
!9834 = !DILocation(line: 2231, column: 31, scope: !9831)
!9835 = !DILocation(line: 2231, column: 37, scope: !9831)
!9836 = !DILocalVariable(name: "base", scope: !9831, file: !3, line: 2232, type: !181)
!9837 = !DILocation(line: 2232, column: 7, scope: !9831)
!9838 = !DILocation(line: 2232, column: 14, scope: !9831)
!9839 = !DILocation(line: 2232, column: 16, scope: !9831)
!9840 = !DILocalVariable(name: "iomap", scope: !9831, file: !3, line: 2233, type: !6494)
!9841 = !DILocation(line: 2233, column: 25, scope: !9831)
!9842 = !DILocation(line: 2235, column: 25, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 2235, column: 7)
!9844 = !DILocation(line: 2235, column: 7, scope: !9843)
!9845 = !DILocation(line: 2235, column: 7, scope: !9831)
!9846 = !DILocation(line: 2236, column: 4, scope: !9843)
!9847 = !DILocation(line: 2242, column: 30, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 2242, column: 7)
!9849 = !DILocation(line: 2242, column: 36, scope: !9848)
!9850 = !DILocation(line: 2242, column: 8, scope: !9848)
!9851 = !DILocation(line: 2242, column: 7, scope: !9831)
!9852 = !DILocation(line: 2243, column: 4, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 2242, column: 40)
!9854 = !DILocation(line: 2243, column: 8, scope: !9853)
!9855 = !DILocation(line: 2243, column: 12, scope: !9853)
!9856 = !DILocation(line: 2244, column: 4, scope: !9853)
!9857 = !DILocation(line: 2247, column: 27, scope: !9831)
!9858 = !DILocation(line: 2247, column: 40, scope: !9831)
!9859 = !DILocation(line: 2247, column: 37, scope: !9831)
!9860 = !DILocation(line: 2248, column: 24, scope: !9831)
!9861 = !DILocation(line: 2248, column: 6, scope: !9831)
!9862 = !DILocation(line: 2247, column: 8, scope: !9831)
!9863 = !DILocation(line: 2247, column: 6, scope: !9831)
!9864 = !DILocation(line: 2249, column: 7, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 2249, column: 7)
!9866 = !DILocation(line: 2249, column: 7, scope: !9831)
!9867 = !DILocation(line: 2250, column: 4, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2249, column: 11)
!9869 = !DILocation(line: 2253, column: 8, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9868, file: !3, line: 2253, column: 8)
!9871 = !DILocation(line: 2253, column: 11, scope: !9870)
!9872 = !DILocation(line: 2253, column: 8, scope: !9868)
!9873 = !DILocation(line: 2254, column: 21, scope: !9870)
!9874 = !DILocation(line: 2254, column: 5, scope: !9870)
!9875 = !DILocation(line: 2255, column: 4, scope: !9868)
!9876 = !DILocation(line: 2255, column: 8, scope: !9868)
!9877 = !DILocation(line: 2255, column: 12, scope: !9868)
!9878 = !DILocation(line: 2256, column: 4, scope: !9868)
!9879 = !DILocation(line: 2258, column: 42, scope: !9831)
!9880 = !DILocation(line: 2258, column: 25, scope: !9831)
!9881 = !DILocation(line: 2258, column: 23, scope: !9831)
!9882 = !DILocation(line: 2258, column: 3, scope: !9831)
!9883 = !DILocation(line: 2258, column: 9, scope: !9831)
!9884 = !DILocation(line: 2258, column: 15, scope: !9831)
!9885 = !DILocation(line: 2260, column: 25, scope: !9831)
!9886 = !DILocation(line: 2260, column: 31, scope: !9831)
!9887 = !DILocation(line: 2260, column: 3, scope: !9831)
!9888 = !DILocation(line: 2260, column: 7, scope: !9831)
!9889 = !DILocation(line: 2260, column: 14, scope: !9831)
!9890 = !DILocation(line: 2260, column: 23, scope: !9831)
!9891 = !DILocation(line: 2263, column: 20, scope: !9831)
!9892 = !DILocation(line: 2263, column: 26, scope: !9831)
!9893 = !DILocation(line: 2263, column: 31, scope: !9831)
!9894 = !DILocation(line: 2263, column: 5, scope: !9831)
!9895 = !DILocation(line: 2263, column: 36, scope: !9831)
!9896 = !DILocation(line: 2262, column: 25, scope: !9831)
!9897 = !DILocation(line: 2262, column: 3, scope: !9831)
!9898 = !DILocation(line: 2262, column: 7, scope: !9831)
!9899 = !DILocation(line: 2262, column: 14, scope: !9831)
!9900 = !DILocation(line: 2262, column: 23, scope: !9831)
!9901 = !DILocation(line: 2261, column: 3, scope: !9831)
!9902 = !DILocation(line: 2261, column: 7, scope: !9831)
!9903 = !DILocation(line: 2261, column: 14, scope: !9831)
!9904 = !DILocation(line: 2261, column: 29, scope: !9831)
!9905 = !DILocation(line: 2264, column: 22, scope: !9831)
!9906 = !DILocation(line: 2264, column: 26, scope: !9831)
!9907 = !DILocation(line: 2264, column: 3, scope: !9831)
!9908 = !DILocation(line: 2266, column: 17, scope: !9831)
!9909 = !DILocation(line: 2267, column: 24, scope: !9831)
!9910 = !DILocation(line: 2268, column: 24, scope: !9831)
!9911 = !DILocation(line: 2266, column: 3, scope: !9831)
!9912 = !DILocation(line: 2270, column: 16, scope: !9831)
!9913 = !DILocation(line: 2270, column: 13, scope: !9831)
!9914 = !DILocation(line: 2270, column: 8, scope: !9831)
!9915 = !DILocation(line: 2271, column: 2, scope: !9831)
!9916 = !DILocation(line: 2230, column: 22, scope: !9827)
!9917 = !DILocation(line: 2230, column: 2, scope: !9827)
!9918 = distinct !{!9918, !9829, !9919}
!9919 = !DILocation(line: 2271, column: 2, scope: !9824)
!9920 = !DILocation(line: 2273, column: 7, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 2273, column: 6)
!9922 = !DILocation(line: 2273, column: 6, scope: !9801)
!9923 = !DILocation(line: 2274, column: 3, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9921, file: !3, line: 2273, column: 13)
!9925 = !DILocation(line: 2275, column: 3, scope: !9924)
!9926 = !DILocation(line: 2278, column: 2, scope: !9801)
!9927 = !DILocation(line: 2279, column: 1, scope: !9801)
!9928 = distinct !DISubprogram(name: "ata_port_is_dummy", scope: !152, file: !152, line: 1065, type: !6407, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9929 = !DILocalVariable(name: "ap", arg: 1, scope: !9928, file: !152, line: 1065, type: !5951)
!9930 = !DILocation(line: 1065, column: 54, scope: !9928)
!9931 = !DILocation(line: 1067, column: 9, scope: !9928)
!9932 = !DILocation(line: 1067, column: 13, scope: !9928)
!9933 = !DILocation(line: 1067, column: 17, scope: !9928)
!9934 = !DILocation(line: 1067, column: 2, scope: !9928)
!9935 = distinct !DISubprogram(name: "ata_resources_present", scope: !3, file: !3, line: 2189, type: !5814, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9936 = !DILocalVariable(name: "pdev", arg: 1, scope: !9935, file: !3, line: 2189, type: !969)
!9937 = !DILocation(line: 2189, column: 50, scope: !9935)
!9938 = !DILocalVariable(name: "port", arg: 2, scope: !9935, file: !3, line: 2189, type: !181)
!9939 = !DILocation(line: 2189, column: 60, scope: !9935)
!9940 = !DILocalVariable(name: "i", scope: !9935, file: !3, line: 2191, type: !181)
!9941 = !DILocation(line: 2191, column: 6, scope: !9935)
!9942 = !DILocation(line: 2194, column: 9, scope: !9935)
!9943 = !DILocation(line: 2194, column: 14, scope: !9935)
!9944 = !DILocation(line: 2194, column: 7, scope: !9935)
!9945 = !DILocation(line: 2195, column: 9, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 2195, column: 2)
!9947 = !DILocation(line: 2195, column: 7, scope: !9946)
!9948 = !DILocation(line: 2195, column: 14, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 2195, column: 2)
!9950 = !DILocation(line: 2195, column: 16, scope: !9949)
!9951 = !DILocation(line: 2195, column: 2, scope: !9946)
!9952 = !DILocation(line: 2196, column: 7, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 2196, column: 7)
!9954 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 2195, column: 26)
!9955 = !DILocation(line: 2196, column: 42, scope: !9953)
!9956 = !DILocation(line: 2196, column: 47, scope: !9953)
!9957 = !DILocation(line: 2197, column: 7, scope: !9953)
!9958 = !DILocation(line: 2197, column: 40, scope: !9953)
!9959 = !DILocation(line: 2196, column: 7, scope: !9954)
!9960 = !DILocation(line: 2198, column: 4, scope: !9953)
!9961 = !DILocation(line: 2199, column: 2, scope: !9954)
!9962 = !DILocation(line: 2195, column: 22, scope: !9949)
!9963 = !DILocation(line: 2195, column: 2, scope: !9949)
!9964 = distinct !{!9964, !9951, !9965}
!9965 = !DILocation(line: 2199, column: 2, scope: !9946)
!9966 = !DILocation(line: 2200, column: 2, scope: !9935)
!9967 = !DILocation(line: 2201, column: 1, scope: !9935)
!9968 = distinct !DISubprogram(name: "ata_pci_sff_prepare_host", scope: !3, file: !3, line: 2297, type: !9969, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!9969 = !DISubroutineType(types: !9970)
!9970 = !{!181, !969, !9971, !9984}
!9971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9972, size: 64)
!9972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9973)
!9973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9974, size: 64)
!9974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9975)
!9975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_info", file: !152, line: 1002, size: 448, elements: !9976)
!9976 = !{!9977, !9978, !9979, !9980, !9981, !9982, !9983}
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9975, file: !152, line: 1003, baseType: !1010, size: 64)
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "link_flags", scope: !9975, file: !152, line: 1004, baseType: !1010, size: 64, offset: 64)
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !9975, file: !152, line: 1005, baseType: !1010, size: 64, offset: 128)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !9975, file: !152, line: 1006, baseType: !1010, size: 64, offset: 192)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !9975, file: !152, line: 1007, baseType: !1010, size: 64, offset: 256)
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "port_ops", scope: !9975, file: !152, line: 1008, baseType: !6163, size: 64, offset: 320)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !9975, file: !152, line: 1009, baseType: !968, size: 64, offset: 384)
!9984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6488, size: 64)
!9985 = !DILocalVariable(name: "pdev", arg: 1, scope: !9968, file: !3, line: 2297, type: !969)
!9986 = !DILocation(line: 2297, column: 46, scope: !9968)
!9987 = !DILocalVariable(name: "ppi", arg: 2, scope: !9968, file: !3, line: 2298, type: !9971)
!9988 = !DILocation(line: 2298, column: 45, scope: !9968)
!9989 = !DILocalVariable(name: "r_host", arg: 3, scope: !9968, file: !3, line: 2299, type: !9984)
!9990 = !DILocation(line: 2299, column: 27, scope: !9968)
!9991 = !DILocalVariable(name: "host", scope: !9968, file: !3, line: 2301, type: !6488)
!9992 = !DILocation(line: 2301, column: 19, scope: !9968)
!9993 = !DILocalVariable(name: "rc", scope: !9968, file: !3, line: 2302, type: !181)
!9994 = !DILocation(line: 2302, column: 6, scope: !9968)
!9995 = !DILocation(line: 2304, column: 26, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2304, column: 6)
!9997 = !DILocation(line: 2304, column: 32, scope: !9996)
!9998 = !DILocation(line: 2304, column: 7, scope: !9996)
!9999 = !DILocation(line: 2304, column: 6, scope: !9968)
!10000 = !DILocation(line: 2305, column: 3, scope: !9996)
!10001 = !DILocation(line: 2307, column: 31, scope: !9968)
!10002 = !DILocation(line: 2307, column: 37, scope: !9968)
!10003 = !DILocation(line: 2307, column: 42, scope: !9968)
!10004 = !DILocation(line: 2307, column: 9, scope: !9968)
!10005 = !DILocation(line: 2307, column: 7, scope: !9968)
!10006 = !DILocation(line: 2308, column: 7, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2308, column: 6)
!10008 = !DILocation(line: 2308, column: 6, scope: !9968)
!10009 = !DILocation(line: 2309, column: 3, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 2308, column: 13)
!10011 = !DILocation(line: 2310, column: 6, scope: !10010)
!10012 = !DILocation(line: 2311, column: 3, scope: !10010)
!10013 = !DILocation(line: 2314, column: 29, scope: !9968)
!10014 = !DILocation(line: 2314, column: 7, scope: !9968)
!10015 = !DILocation(line: 2314, column: 5, scope: !9968)
!10016 = !DILocation(line: 2315, column: 6, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2315, column: 6)
!10018 = !DILocation(line: 2315, column: 6, scope: !9968)
!10019 = !DILocation(line: 2316, column: 3, scope: !10017)
!10020 = !DILocation(line: 2318, column: 23, scope: !9968)
!10021 = !DILocation(line: 2318, column: 29, scope: !9968)
!10022 = !DILocation(line: 2318, column: 2, scope: !9968)
!10023 = !DILocation(line: 2319, column: 12, scope: !9968)
!10024 = !DILocation(line: 2319, column: 3, scope: !9968)
!10025 = !DILocation(line: 2319, column: 10, scope: !9968)
!10026 = !DILocation(line: 2320, column: 2, scope: !9968)
!10027 = !DILabel(scope: !9968, name: "err_out", file: !3, line: 2322)
!10028 = !DILocation(line: 2322, column: 1, scope: !9968)
!10029 = !DILocation(line: 2323, column: 24, scope: !9968)
!10030 = !DILocation(line: 2323, column: 30, scope: !9968)
!10031 = !DILocation(line: 2323, column: 2, scope: !9968)
!10032 = !DILocation(line: 2324, column: 9, scope: !9968)
!10033 = !DILocation(line: 2324, column: 2, scope: !9968)
!10034 = !DILocation(line: 2325, column: 1, scope: !9968)
!10035 = distinct !DISubprogram(name: "ata_pci_sff_activate_host", scope: !3, file: !3, line: 2344, type: !10036, scopeLine: 2347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10036 = !DISubroutineType(types: !10037)
!10037 = !{!181, !6488, !10038, !5969}
!10038 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !1053, line: 92, baseType: !10039)
!10039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9118, size: 64)
!10040 = !DILocalVariable(name: "host", arg: 1, scope: !10035, file: !3, line: 2344, type: !6488)
!10041 = !DILocation(line: 2344, column: 48, scope: !10035)
!10042 = !DILocalVariable(name: "irq_handler", arg: 2, scope: !10035, file: !3, line: 2345, type: !10038)
!10043 = !DILocation(line: 2345, column: 24, scope: !10035)
!10044 = !DILocalVariable(name: "sht", arg: 3, scope: !10035, file: !3, line: 2346, type: !5969)
!10045 = !DILocation(line: 2346, column: 37, scope: !10035)
!10046 = !DILocalVariable(name: "dev", scope: !10035, file: !3, line: 2348, type: !1068)
!10047 = !DILocation(line: 2348, column: 17, scope: !10035)
!10048 = !DILocation(line: 2348, column: 23, scope: !10035)
!10049 = !DILocation(line: 2348, column: 29, scope: !10035)
!10050 = !DILocalVariable(name: "pdev", scope: !10035, file: !3, line: 2349, type: !969)
!10051 = !DILocation(line: 2349, column: 18, scope: !10035)
!10052 = !DILocalVariable(name: "__mptr", scope: !10053, file: !3, line: 2349, type: !968)
!10053 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 2349, column: 25)
!10054 = !DILocation(line: 2349, column: 25, scope: !10053)
!10055 = !DILocation(line: 2349, column: 25, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 2349, column: 25)
!10057 = !DILocalVariable(name: "drv_name", scope: !10035, file: !3, line: 2350, type: !1006)
!10058 = !DILocation(line: 2350, column: 14, scope: !10035)
!10059 = !DILocation(line: 2350, column: 43, scope: !10035)
!10060 = !DILocation(line: 2350, column: 49, scope: !10035)
!10061 = !DILocation(line: 2350, column: 25, scope: !10035)
!10062 = !DILocalVariable(name: "legacy_mode", scope: !10035, file: !3, line: 2351, type: !181)
!10063 = !DILocation(line: 2351, column: 6, scope: !10035)
!10064 = !DILocalVariable(name: "rc", scope: !10035, file: !3, line: 2351, type: !181)
!10065 = !DILocation(line: 2351, column: 23, scope: !10035)
!10066 = !DILocation(line: 2353, column: 22, scope: !10035)
!10067 = !DILocation(line: 2353, column: 7, scope: !10035)
!10068 = !DILocation(line: 2353, column: 5, scope: !10035)
!10069 = !DILocation(line: 2354, column: 6, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 2354, column: 6)
!10071 = !DILocation(line: 2354, column: 6, scope: !10035)
!10072 = !DILocation(line: 2355, column: 10, scope: !10070)
!10073 = !DILocation(line: 2355, column: 3, scope: !10070)
!10074 = !DILocation(line: 2357, column: 7, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 2357, column: 6)
!10076 = !DILocation(line: 2357, column: 13, scope: !10075)
!10077 = !DILocation(line: 2357, column: 19, scope: !10075)
!10078 = !DILocation(line: 2357, column: 25, scope: !10075)
!10079 = !DILocation(line: 2357, column: 6, scope: !10035)
!10080 = !DILocalVariable(name: "tmp8", scope: !10081, file: !3, line: 2358, type: !2256)
!10081 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 2357, column: 51)
!10082 = !DILocation(line: 2358, column: 6, scope: !10081)
!10083 = !DILocalVariable(name: "mask", scope: !10081, file: !3, line: 2358, type: !2256)
!10084 = !DILocation(line: 2358, column: 12, scope: !10081)
!10085 = !DILocation(line: 2368, column: 24, scope: !10081)
!10086 = !DILocation(line: 2368, column: 3, scope: !10081)
!10087 = !DILocation(line: 2369, column: 26, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 2369, column: 7)
!10089 = !DILocation(line: 2369, column: 32, scope: !10088)
!10090 = !DILocation(line: 2369, column: 8, scope: !10088)
!10091 = !DILocation(line: 2369, column: 7, scope: !10081)
!10092 = !DILocation(line: 2370, column: 9, scope: !10088)
!10093 = !DILocation(line: 2370, column: 4, scope: !10088)
!10094 = !DILocation(line: 2371, column: 26, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 2371, column: 7)
!10096 = !DILocation(line: 2371, column: 32, scope: !10095)
!10097 = !DILocation(line: 2371, column: 8, scope: !10095)
!10098 = !DILocation(line: 2371, column: 7, scope: !10081)
!10099 = !DILocation(line: 2372, column: 9, scope: !10095)
!10100 = !DILocation(line: 2372, column: 4, scope: !10095)
!10101 = !DILocation(line: 2373, column: 8, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 2373, column: 7)
!10103 = !DILocation(line: 2373, column: 15, scope: !10102)
!10104 = !DILocation(line: 2373, column: 13, scope: !10102)
!10105 = !DILocation(line: 2373, column: 24, scope: !10102)
!10106 = !DILocation(line: 2373, column: 21, scope: !10102)
!10107 = !DILocation(line: 2373, column: 7, scope: !10081)
!10108 = !DILocation(line: 2374, column: 16, scope: !10102)
!10109 = !DILocation(line: 2374, column: 4, scope: !10102)
!10110 = !DILocation(line: 2375, column: 2, scope: !10081)
!10111 = !DILocation(line: 2377, column: 25, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 2377, column: 6)
!10113 = !DILocation(line: 2377, column: 7, scope: !10112)
!10114 = !DILocation(line: 2377, column: 6, scope: !10035)
!10115 = !DILocation(line: 2378, column: 3, scope: !10112)
!10116 = !DILocation(line: 2380, column: 7, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 2380, column: 6)
!10118 = !DILocation(line: 2380, column: 19, scope: !10117)
!10119 = !DILocation(line: 2380, column: 22, scope: !10117)
!10120 = !DILocation(line: 2380, column: 28, scope: !10117)
!10121 = !DILocation(line: 2380, column: 6, scope: !10035)
!10122 = !DILocalVariable(name: "i", scope: !10123, file: !3, line: 2381, type: !181)
!10123 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 2380, column: 33)
!10124 = !DILocation(line: 2381, column: 7, scope: !10123)
!10125 = !DILocation(line: 2383, column: 25, scope: !10123)
!10126 = !DILocation(line: 2383, column: 30, scope: !10123)
!10127 = !DILocation(line: 2383, column: 36, scope: !10123)
!10128 = !DILocation(line: 2383, column: 41, scope: !10123)
!10129 = !DILocation(line: 2384, column: 24, scope: !10123)
!10130 = !DILocation(line: 2384, column: 34, scope: !10123)
!10131 = !DILocation(line: 2383, column: 8, scope: !10123)
!10132 = !DILocation(line: 2383, column: 6, scope: !10123)
!10133 = !DILocation(line: 2385, column: 7, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 2385, column: 7)
!10135 = !DILocation(line: 2385, column: 7, scope: !10123)
!10136 = !DILocation(line: 2386, column: 4, scope: !10134)
!10137 = !DILocation(line: 2388, column: 10, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 2388, column: 3)
!10139 = !DILocation(line: 2388, column: 8, scope: !10138)
!10140 = !DILocation(line: 2388, column: 15, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 2388, column: 3)
!10142 = !DILocation(line: 2388, column: 17, scope: !10141)
!10143 = !DILocation(line: 2388, column: 3, scope: !10138)
!10144 = !DILocation(line: 2389, column: 26, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 2389, column: 8)
!10146 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 2388, column: 27)
!10147 = !DILocation(line: 2389, column: 32, scope: !10145)
!10148 = !DILocation(line: 2389, column: 38, scope: !10145)
!10149 = !DILocation(line: 2389, column: 8, scope: !10145)
!10150 = !DILocation(line: 2389, column: 8, scope: !10146)
!10151 = !DILocation(line: 2390, column: 5, scope: !10145)
!10152 = !DILocation(line: 2391, column: 18, scope: !10146)
!10153 = !DILocation(line: 2391, column: 24, scope: !10146)
!10154 = !DILocation(line: 2391, column: 30, scope: !10146)
!10155 = !DILocation(line: 2391, column: 44, scope: !10146)
!10156 = !DILocation(line: 2391, column: 50, scope: !10146)
!10157 = !DILocation(line: 2391, column: 4, scope: !10146)
!10158 = !DILocation(line: 2392, column: 3, scope: !10146)
!10159 = !DILocation(line: 2388, column: 23, scope: !10141)
!10160 = !DILocation(line: 2388, column: 3, scope: !10141)
!10161 = distinct !{!10161, !10143, !10162}
!10162 = !DILocation(line: 2392, column: 3, scope: !10138)
!10163 = !DILocation(line: 2393, column: 2, scope: !10123)
!10164 = !DILocation(line: 2393, column: 13, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 2393, column: 13)
!10166 = !DILocation(line: 2393, column: 13, scope: !10117)
!10167 = !DILocation(line: 2394, column: 26, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 2394, column: 7)
!10169 = distinct !DILexicalBlock(scope: !10165, file: !3, line: 2393, column: 26)
!10170 = !DILocation(line: 2394, column: 32, scope: !10168)
!10171 = !DILocation(line: 2394, column: 8, scope: !10168)
!10172 = !DILocation(line: 2394, column: 7, scope: !10169)
!10173 = !DILocation(line: 2395, column: 26, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10168, file: !3, line: 2394, column: 43)
!10175 = !DILocation(line: 2396, column: 12, scope: !10174)
!10176 = !DILocation(line: 2397, column: 12, scope: !10174)
!10177 = !DILocation(line: 2397, column: 22, scope: !10174)
!10178 = !DILocation(line: 2395, column: 9, scope: !10174)
!10179 = !DILocation(line: 2395, column: 7, scope: !10174)
!10180 = !DILocation(line: 2398, column: 8, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10174, file: !3, line: 2398, column: 8)
!10182 = !DILocation(line: 2398, column: 8, scope: !10174)
!10183 = !DILocation(line: 2399, column: 5, scope: !10181)
!10184 = !DILocation(line: 2401, column: 18, scope: !10174)
!10185 = !DILocation(line: 2401, column: 24, scope: !10174)
!10186 = !DILocation(line: 2401, column: 4, scope: !10174)
!10187 = !DILocation(line: 2403, column: 3, scope: !10174)
!10188 = !DILocation(line: 2405, column: 26, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 2405, column: 7)
!10190 = !DILocation(line: 2405, column: 32, scope: !10189)
!10191 = !DILocation(line: 2405, column: 8, scope: !10189)
!10192 = !DILocation(line: 2405, column: 7, scope: !10169)
!10193 = !DILocation(line: 2406, column: 26, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 2405, column: 43)
!10195 = !DILocation(line: 2407, column: 12, scope: !10194)
!10196 = !DILocation(line: 2408, column: 12, scope: !10194)
!10197 = !DILocation(line: 2408, column: 22, scope: !10194)
!10198 = !DILocation(line: 2406, column: 9, scope: !10194)
!10199 = !DILocation(line: 2406, column: 7, scope: !10194)
!10200 = !DILocation(line: 2409, column: 8, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 2409, column: 8)
!10202 = !DILocation(line: 2409, column: 8, scope: !10194)
!10203 = !DILocation(line: 2410, column: 5, scope: !10201)
!10204 = !DILocation(line: 2412, column: 18, scope: !10194)
!10205 = !DILocation(line: 2412, column: 24, scope: !10194)
!10206 = !DILocation(line: 2412, column: 4, scope: !10194)
!10207 = !DILocation(line: 2414, column: 3, scope: !10194)
!10208 = !DILocation(line: 2415, column: 2, scope: !10169)
!10209 = !DILocation(line: 2417, column: 25, scope: !10035)
!10210 = !DILocation(line: 2417, column: 31, scope: !10035)
!10211 = !DILocation(line: 2417, column: 7, scope: !10035)
!10212 = !DILocation(line: 2417, column: 5, scope: !10035)
!10213 = !DILocation(line: 2417, column: 2, scope: !10035)
!10214 = !DILabel(scope: !10035, name: "out", file: !3, line: 2418)
!10215 = !DILocation(line: 2418, column: 1, scope: !10035)
!10216 = !DILocation(line: 2419, column: 6, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 2419, column: 6)
!10218 = !DILocation(line: 2419, column: 9, scope: !10217)
!10219 = !DILocation(line: 2419, column: 6, scope: !10035)
!10220 = !DILocation(line: 2420, column: 23, scope: !10217)
!10221 = !DILocation(line: 2420, column: 3, scope: !10217)
!10222 = !DILocation(line: 2422, column: 24, scope: !10217)
!10223 = !DILocation(line: 2422, column: 3, scope: !10217)
!10224 = !DILocation(line: 2424, column: 9, scope: !10035)
!10225 = !DILocation(line: 2424, column: 2, scope: !10035)
!10226 = !DILocation(line: 2425, column: 1, scope: !10035)
!10227 = distinct !DISubprogram(name: "devm_request_irq", scope: !1053, file: !1053, line: 203, type: !10228, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10228 = !DISubroutineType(types: !10229)
!10229 = !{!181, !1068, !7, !10038, !1010, !1006, !968}
!10230 = !DILocalVariable(name: "dev", arg: 1, scope: !10227, file: !1053, line: 203, type: !1068)
!10231 = !DILocation(line: 203, column: 33, scope: !10227)
!10232 = !DILocalVariable(name: "irq", arg: 2, scope: !10227, file: !1053, line: 203, type: !7)
!10233 = !DILocation(line: 203, column: 51, scope: !10227)
!10234 = !DILocalVariable(name: "handler", arg: 3, scope: !10227, file: !1053, line: 203, type: !10038)
!10235 = !DILocation(line: 203, column: 70, scope: !10227)
!10236 = !DILocalVariable(name: "irqflags", arg: 4, scope: !10227, file: !1053, line: 204, type: !1010)
!10237 = !DILocation(line: 204, column: 18, scope: !10227)
!10238 = !DILocalVariable(name: "devname", arg: 5, scope: !10227, file: !1053, line: 204, type: !1006)
!10239 = !DILocation(line: 204, column: 40, scope: !10227)
!10240 = !DILocalVariable(name: "dev_id", arg: 6, scope: !10227, file: !1053, line: 204, type: !968)
!10241 = !DILocation(line: 204, column: 55, scope: !10227)
!10242 = !DILocation(line: 206, column: 35, scope: !10227)
!10243 = !DILocation(line: 206, column: 40, scope: !10227)
!10244 = !DILocation(line: 206, column: 45, scope: !10227)
!10245 = !DILocation(line: 206, column: 60, scope: !10227)
!10246 = !DILocation(line: 207, column: 7, scope: !10227)
!10247 = !DILocation(line: 207, column: 16, scope: !10227)
!10248 = !DILocation(line: 206, column: 9, scope: !10227)
!10249 = !DILocation(line: 206, column: 2, scope: !10227)
!10250 = distinct !DISubprogram(name: "ata_pci_sff_init_one", scope: !3, file: !3, line: 2517, type: !10251, scopeLine: 2520, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{!181, !969, !9971, !5969, !968, !181}
!10253 = !DILocalVariable(name: "pdev", arg: 1, scope: !10250, file: !3, line: 2517, type: !969)
!10254 = !DILocation(line: 2517, column: 42, scope: !10250)
!10255 = !DILocalVariable(name: "ppi", arg: 2, scope: !10250, file: !3, line: 2518, type: !9971)
!10256 = !DILocation(line: 2518, column: 40, scope: !10250)
!10257 = !DILocalVariable(name: "sht", arg: 3, scope: !10250, file: !3, line: 2519, type: !5969)
!10258 = !DILocation(line: 2519, column: 31, scope: !10250)
!10259 = !DILocalVariable(name: "host_priv", arg: 4, scope: !10250, file: !3, line: 2519, type: !968)
!10260 = !DILocation(line: 2519, column: 42, scope: !10250)
!10261 = !DILocalVariable(name: "hflag", arg: 5, scope: !10250, file: !3, line: 2519, type: !181)
!10262 = !DILocation(line: 2519, column: 57, scope: !10250)
!10263 = !DILocation(line: 2521, column: 26, scope: !10250)
!10264 = !DILocation(line: 2521, column: 32, scope: !10250)
!10265 = !DILocation(line: 2521, column: 37, scope: !10250)
!10266 = !DILocation(line: 2521, column: 42, scope: !10250)
!10267 = !DILocation(line: 2521, column: 53, scope: !10250)
!10268 = !DILocation(line: 2521, column: 9, scope: !10250)
!10269 = !DILocation(line: 2521, column: 2, scope: !10250)
!10270 = distinct !DISubprogram(name: "ata_pci_init_one", scope: !3, file: !3, line: 2441, type: !10271, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!181, !969, !9971, !5969, !968, !181, !1331}
!10273 = !DILocalVariable(name: "pdev", arg: 1, scope: !10270, file: !3, line: 2441, type: !969)
!10274 = !DILocation(line: 2441, column: 45, scope: !10270)
!10275 = !DILocalVariable(name: "ppi", arg: 2, scope: !10270, file: !3, line: 2442, type: !9971)
!10276 = !DILocation(line: 2442, column: 39, scope: !10270)
!10277 = !DILocalVariable(name: "sht", arg: 3, scope: !10270, file: !3, line: 2443, type: !5969)
!10278 = !DILocation(line: 2443, column: 30, scope: !10270)
!10279 = !DILocalVariable(name: "host_priv", arg: 4, scope: !10270, file: !3, line: 2443, type: !968)
!10280 = !DILocation(line: 2443, column: 41, scope: !10270)
!10281 = !DILocalVariable(name: "hflags", arg: 5, scope: !10270, file: !3, line: 2444, type: !181)
!10282 = !DILocation(line: 2444, column: 7, scope: !10270)
!10283 = !DILocalVariable(name: "bmdma", arg: 6, scope: !10270, file: !3, line: 2444, type: !1331)
!10284 = !DILocation(line: 2444, column: 20, scope: !10270)
!10285 = !DILocalVariable(name: "dev", scope: !10270, file: !3, line: 2446, type: !1068)
!10286 = !DILocation(line: 2446, column: 17, scope: !10270)
!10287 = !DILocation(line: 2446, column: 24, scope: !10270)
!10288 = !DILocation(line: 2446, column: 30, scope: !10270)
!10289 = !DILocalVariable(name: "pi", scope: !10270, file: !3, line: 2447, type: !9973)
!10290 = !DILocation(line: 2447, column: 30, scope: !10270)
!10291 = !DILocalVariable(name: "host", scope: !10270, file: !3, line: 2448, type: !6488)
!10292 = !DILocation(line: 2448, column: 19, scope: !10270)
!10293 = !DILocalVariable(name: "rc", scope: !10270, file: !3, line: 2449, type: !181)
!10294 = !DILocation(line: 2449, column: 6, scope: !10270)
!10295 = !DILocation(line: 2453, column: 29, scope: !10270)
!10296 = !DILocation(line: 2453, column: 7, scope: !10270)
!10297 = !DILocation(line: 2453, column: 5, scope: !10270)
!10298 = !DILocation(line: 2454, column: 7, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2454, column: 6)
!10300 = !DILocation(line: 2454, column: 6, scope: !10270)
!10301 = !DILocation(line: 2455, column: 3, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2454, column: 11)
!10303 = !DILocation(line: 2456, column: 3, scope: !10302)
!10304 = !DILocation(line: 2459, column: 25, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2459, column: 6)
!10306 = !DILocation(line: 2459, column: 7, scope: !10305)
!10307 = !DILocation(line: 2459, column: 6, scope: !10270)
!10308 = !DILocation(line: 2460, column: 3, scope: !10305)
!10309 = !DILocation(line: 2462, column: 26, scope: !10270)
!10310 = !DILocation(line: 2462, column: 7, scope: !10270)
!10311 = !DILocation(line: 2462, column: 5, scope: !10270)
!10312 = !DILocation(line: 2463, column: 6, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2463, column: 6)
!10314 = !DILocation(line: 2463, column: 6, scope: !10270)
!10315 = !DILocation(line: 2464, column: 3, scope: !10313)
!10316 = !DILocation(line: 2467, column: 6, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2467, column: 6)
!10318 = !DILocation(line: 2467, column: 6, scope: !10270)
!10319 = !DILocation(line: 2469, column: 35, scope: !10317)
!10320 = !DILocation(line: 2469, column: 41, scope: !10317)
!10321 = !DILocation(line: 2469, column: 8, scope: !10317)
!10322 = !DILocation(line: 2469, column: 6, scope: !10317)
!10323 = !DILocation(line: 2469, column: 3, scope: !10317)
!10324 = !DILocation(line: 2473, column: 33, scope: !10317)
!10325 = !DILocation(line: 2473, column: 39, scope: !10317)
!10326 = !DILocation(line: 2473, column: 8, scope: !10317)
!10327 = !DILocation(line: 2473, column: 6, scope: !10317)
!10328 = !DILocation(line: 2474, column: 6, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2474, column: 6)
!10330 = !DILocation(line: 2474, column: 6, scope: !10270)
!10331 = !DILocation(line: 2475, column: 3, scope: !10329)
!10332 = !DILocation(line: 2476, column: 23, scope: !10270)
!10333 = !DILocation(line: 2476, column: 2, scope: !10270)
!10334 = !DILocation(line: 2476, column: 8, scope: !10270)
!10335 = !DILocation(line: 2476, column: 21, scope: !10270)
!10336 = !DILocation(line: 2477, column: 17, scope: !10270)
!10337 = !DILocation(line: 2477, column: 2, scope: !10270)
!10338 = !DILocation(line: 2477, column: 8, scope: !10270)
!10339 = !DILocation(line: 2477, column: 14, scope: !10270)
!10340 = !DILocation(line: 2480, column: 6, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2480, column: 6)
!10342 = !DILocation(line: 2480, column: 6, scope: !10270)
!10343 = !DILocation(line: 2481, column: 18, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 2480, column: 13)
!10345 = !DILocation(line: 2481, column: 3, scope: !10344)
!10346 = !DILocation(line: 2482, column: 34, scope: !10344)
!10347 = !DILocation(line: 2482, column: 61, scope: !10344)
!10348 = !DILocation(line: 2482, column: 8, scope: !10344)
!10349 = !DILocation(line: 2482, column: 6, scope: !10344)
!10350 = !DILocation(line: 2483, column: 2, scope: !10344)
!10351 = !DILocation(line: 2485, column: 34, scope: !10341)
!10352 = !DILocation(line: 2485, column: 59, scope: !10341)
!10353 = !DILocation(line: 2485, column: 8, scope: !10341)
!10354 = !DILocation(line: 2485, column: 6, scope: !10341)
!10355 = !DILabel(scope: !10270, name: "out", file: !3, line: 2486)
!10356 = !DILocation(line: 2486, column: 1, scope: !10270)
!10357 = !DILocation(line: 2487, column: 6, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2487, column: 6)
!10359 = !DILocation(line: 2487, column: 9, scope: !10358)
!10360 = !DILocation(line: 2487, column: 6, scope: !10270)
!10361 = !DILocation(line: 2488, column: 24, scope: !10358)
!10362 = !DILocation(line: 2488, column: 30, scope: !10358)
!10363 = !DILocation(line: 2488, column: 3, scope: !10358)
!10364 = !DILocation(line: 2490, column: 25, scope: !10358)
!10365 = !DILocation(line: 2490, column: 31, scope: !10358)
!10366 = !DILocation(line: 2490, column: 3, scope: !10358)
!10367 = !DILocation(line: 2492, column: 9, scope: !10270)
!10368 = !DILocation(line: 2492, column: 2, scope: !10270)
!10369 = !DILocation(line: 2493, column: 1, scope: !10270)
!10370 = distinct !DISubprogram(name: "ata_bmdma_qc_prep", scope: !3, file: !3, line: 2678, type: !6395, scopeLine: 2679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10371 = !DILocalVariable(name: "qc", arg: 1, scope: !10370, file: !3, line: 2678, type: !6170)
!10372 = !DILocation(line: 2678, column: 69, scope: !10370)
!10373 = !DILocation(line: 2680, column: 8, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 2680, column: 6)
!10375 = !DILocation(line: 2680, column: 12, scope: !10374)
!10376 = !DILocation(line: 2680, column: 18, scope: !10374)
!10377 = !DILocation(line: 2680, column: 6, scope: !10370)
!10378 = !DILocation(line: 2681, column: 3, scope: !10374)
!10379 = !DILocation(line: 2683, column: 20, scope: !10370)
!10380 = !DILocation(line: 2683, column: 2, scope: !10370)
!10381 = !DILocation(line: 2685, column: 2, scope: !10370)
!10382 = !DILocation(line: 2686, column: 1, scope: !10370)
!10383 = distinct !DISubprogram(name: "ata_bmdma_qc_issue", scope: !3, file: !3, line: 2723, type: !6399, scopeLine: 2724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10384 = !DILocalVariable(name: "qc", arg: 1, scope: !10383, file: !3, line: 2723, type: !6170)
!10385 = !DILocation(line: 2723, column: 56, scope: !10383)
!10386 = !DILocalVariable(name: "ap", scope: !10383, file: !3, line: 2725, type: !5951)
!10387 = !DILocation(line: 2725, column: 19, scope: !10383)
!10388 = !DILocation(line: 2725, column: 24, scope: !10383)
!10389 = !DILocation(line: 2725, column: 28, scope: !10383)
!10390 = !DILocalVariable(name: "link", scope: !10383, file: !3, line: 2726, type: !6179)
!10391 = !DILocation(line: 2726, column: 19, scope: !10383)
!10392 = !DILocation(line: 2726, column: 26, scope: !10383)
!10393 = !DILocation(line: 2726, column: 30, scope: !10383)
!10394 = !DILocation(line: 2726, column: 35, scope: !10383)
!10395 = !DILocation(line: 2729, column: 18, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 2729, column: 6)
!10397 = !DILocation(line: 2729, column: 22, scope: !10396)
!10398 = !DILocation(line: 2729, column: 25, scope: !10396)
!10399 = !DILocation(line: 2729, column: 7, scope: !10396)
!10400 = !DILocation(line: 2729, column: 6, scope: !10383)
!10401 = !DILocation(line: 2730, column: 27, scope: !10396)
!10402 = !DILocation(line: 2730, column: 10, scope: !10396)
!10403 = !DILocation(line: 2730, column: 3, scope: !10396)
!10404 = !DILocation(line: 2733, column: 17, scope: !10383)
!10405 = !DILocation(line: 2733, column: 21, scope: !10383)
!10406 = !DILocation(line: 2733, column: 25, scope: !10383)
!10407 = !DILocation(line: 2733, column: 30, scope: !10383)
!10408 = !DILocation(line: 2733, column: 2, scope: !10383)
!10409 = !DILocation(line: 2736, column: 10, scope: !10383)
!10410 = !DILocation(line: 2736, column: 14, scope: !10383)
!10411 = !DILocation(line: 2736, column: 17, scope: !10383)
!10412 = !DILocation(line: 2736, column: 2, scope: !10383)
!10413 = !DILocalVariable(name: "__ret_warn_on", scope: !10414, file: !3, line: 2738, type: !181)
!10414 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 2738, column: 3)
!10415 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 2736, column: 27)
!10416 = !DILocation(line: 2738, column: 3, scope: !10414)
!10417 = !DILocation(line: 2738, column: 3, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 2738, column: 3)
!10419 = !DILocation(line: 2738, column: 3, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 2738, column: 3)
!10421 = !DILocation(line: 2738, column: 3, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 2738, column: 3)
!10423 = !DILocation(line: 2738, column: 3, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 2738, column: 3)
!10425 = !{i32 -2140256429, i32 -2140256400, i32 -2140256354, i32 -2140256296, i32 -2140256242, i32 -2140256188, i32 -2140256133, i32 -2140256102}
!10426 = !DILocation(line: 2738, column: 3, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 2738, column: 3)
!10428 = !{i32 -2140255684, i32 -2140255677, i32 -2140255625, i32 -2140255594, i32 -2140255564}
!10429 = !DILocation(line: 2738, column: 3, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 2738, column: 3)
!10431 = !DILocation(line: 2740, column: 3, scope: !10415)
!10432 = !DILocation(line: 2740, column: 7, scope: !10415)
!10433 = !DILocation(line: 2740, column: 12, scope: !10415)
!10434 = !DILocation(line: 2740, column: 24, scope: !10415)
!10435 = !DILocation(line: 2740, column: 29, scope: !10415)
!10436 = !DILocation(line: 2740, column: 33, scope: !10415)
!10437 = !DILocation(line: 2741, column: 3, scope: !10415)
!10438 = !DILocation(line: 2741, column: 7, scope: !10415)
!10439 = !DILocation(line: 2741, column: 12, scope: !10415)
!10440 = !DILocation(line: 2741, column: 24, scope: !10415)
!10441 = !DILocation(line: 2742, column: 3, scope: !10415)
!10442 = !DILocation(line: 2742, column: 7, scope: !10415)
!10443 = !DILocation(line: 2742, column: 12, scope: !10415)
!10444 = !DILocation(line: 2742, column: 24, scope: !10415)
!10445 = !DILocation(line: 2743, column: 3, scope: !10415)
!10446 = !DILocation(line: 2743, column: 7, scope: !10415)
!10447 = !DILocation(line: 2743, column: 22, scope: !10415)
!10448 = !DILocation(line: 2744, column: 3, scope: !10415)
!10449 = !DILocalVariable(name: "__ret_warn_on", scope: !10450, file: !3, line: 2747, type: !181)
!10450 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 2747, column: 3)
!10451 = !DILocation(line: 2747, column: 3, scope: !10450)
!10452 = !DILocation(line: 2747, column: 3, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 2747, column: 3)
!10454 = !DILocation(line: 2747, column: 3, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 2747, column: 3)
!10456 = !DILocation(line: 2747, column: 3, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2747, column: 3)
!10458 = !DILocation(line: 2747, column: 3, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2747, column: 3)
!10460 = !{i32 -2140254932, i32 -2140254903, i32 -2140254857, i32 -2140254799, i32 -2140254745, i32 -2140254691, i32 -2140254636, i32 -2140254605}
!10461 = !DILocation(line: 2747, column: 3, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2747, column: 3)
!10463 = !{i32 -2140254187, i32 -2140254180, i32 -2140254128, i32 -2140254097, i32 -2140254067}
!10464 = !DILocation(line: 2747, column: 3, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2747, column: 3)
!10466 = !DILocation(line: 2749, column: 3, scope: !10415)
!10467 = !DILocation(line: 2749, column: 7, scope: !10415)
!10468 = !DILocation(line: 2749, column: 12, scope: !10415)
!10469 = !DILocation(line: 2749, column: 24, scope: !10415)
!10470 = !DILocation(line: 2749, column: 29, scope: !10415)
!10471 = !DILocation(line: 2749, column: 33, scope: !10415)
!10472 = !DILocation(line: 2750, column: 3, scope: !10415)
!10473 = !DILocation(line: 2750, column: 7, scope: !10415)
!10474 = !DILocation(line: 2750, column: 12, scope: !10415)
!10475 = !DILocation(line: 2750, column: 24, scope: !10415)
!10476 = !DILocation(line: 2751, column: 3, scope: !10415)
!10477 = !DILocation(line: 2751, column: 7, scope: !10415)
!10478 = !DILocation(line: 2751, column: 22, scope: !10415)
!10479 = !DILocation(line: 2754, column: 9, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 2754, column: 7)
!10481 = !DILocation(line: 2754, column: 13, scope: !10480)
!10482 = !DILocation(line: 2754, column: 18, scope: !10480)
!10483 = !DILocation(line: 2754, column: 24, scope: !10480)
!10484 = !DILocation(line: 2754, column: 7, scope: !10415)
!10485 = !DILocation(line: 2755, column: 27, scope: !10480)
!10486 = !DILocation(line: 2755, column: 4, scope: !10480)
!10487 = !DILocation(line: 2756, column: 3, scope: !10415)
!10488 = !DILocalVariable(name: "__ret_warn_on", scope: !10489, file: !3, line: 2759, type: !181)
!10489 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 2759, column: 3)
!10490 = !DILocation(line: 2759, column: 3, scope: !10489)
!10491 = !DILocation(line: 2759, column: 3, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 2759, column: 3)
!10493 = !DILocation(line: 2759, column: 3, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 2759, column: 3)
!10495 = !DILocation(line: 2759, column: 3, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2759, column: 3)
!10497 = !DILocation(line: 2759, column: 3, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2759, column: 3)
!10499 = !{i32 -2140253494, i32 -2140253465, i32 -2140253419, i32 -2140253361, i32 -2140253307, i32 -2140253253, i32 -2140253198, i32 -2140253167}
!10500 = !DILocation(line: 2759, column: 3, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2759, column: 3)
!10502 = !{i32 -2140252760, i32 -2140252753, i32 -2140252701, i32 -2140252670, i32 -2140252640}
!10503 = !DILocation(line: 2759, column: 3, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2759, column: 3)
!10505 = !DILocation(line: 2760, column: 3, scope: !10415)
!10506 = !DILocation(line: 2763, column: 2, scope: !10383)
!10507 = !DILocation(line: 2764, column: 1, scope: !10383)
!10508 = distinct !DISubprogram(name: "ata_bmdma_error_handler", scope: !3, file: !3, line: 2848, type: !6435, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10509 = !DILocation(line: 407, column: 64, scope: !7101, inlinedAt: !10510)
!10510 = distinct !DILocation(line: 2886, column: 2, scope: !10508)
!10511 = !DILocation(line: 407, column: 84, scope: !7101, inlinedAt: !10510)
!10512 = !DILocation(line: 327, column: 67, scope: !7110, inlinedAt: !10513)
!10513 = distinct !DILocation(line: 2859, column: 2, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 2859, column: 2)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 2859, column: 2)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 2859, column: 2)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 2859, column: 2)
!10518 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2859, column: 2)
!10519 = !DILocalVariable(name: "ap", arg: 1, scope: !10508, file: !3, line: 2848, type: !5951)
!10520 = !DILocation(line: 2848, column: 47, scope: !10508)
!10521 = !DILocalVariable(name: "qc", scope: !10508, file: !3, line: 2850, type: !6170)
!10522 = !DILocation(line: 2850, column: 25, scope: !10508)
!10523 = !DILocalVariable(name: "flags", scope: !10508, file: !3, line: 2851, type: !1010)
!10524 = !DILocation(line: 2851, column: 16, scope: !10508)
!10525 = !DILocalVariable(name: "thaw", scope: !10508, file: !3, line: 2852, type: !1331)
!10526 = !DILocation(line: 2852, column: 7, scope: !10508)
!10527 = !DILocation(line: 2854, column: 25, scope: !10508)
!10528 = !DILocation(line: 2854, column: 29, scope: !10508)
!10529 = !DILocation(line: 2854, column: 33, scope: !10508)
!10530 = !DILocation(line: 2854, column: 38, scope: !10508)
!10531 = !DILocation(line: 2854, column: 7, scope: !10508)
!10532 = !DILocation(line: 2854, column: 5, scope: !10508)
!10533 = !DILocation(line: 2855, column: 6, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2855, column: 6)
!10535 = !DILocation(line: 2855, column: 9, scope: !10534)
!10536 = !DILocation(line: 2855, column: 14, scope: !10534)
!10537 = !DILocation(line: 2855, column: 18, scope: !10534)
!10538 = !DILocation(line: 2855, column: 24, scope: !10534)
!10539 = !DILocation(line: 2855, column: 6, scope: !10508)
!10540 = !DILocation(line: 2856, column: 6, scope: !10534)
!10541 = !DILocation(line: 2856, column: 3, scope: !10534)
!10542 = !DILocation(line: 2859, column: 2, scope: !10508)
!10543 = !DILocation(line: 2859, column: 2, scope: !10518)
!10544 = !DILocalVariable(name: "__dummy", scope: !10545, file: !3, line: 2859, type: !1010)
!10545 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 2859, column: 2)
!10546 = !DILocation(line: 2859, column: 2, scope: !10545)
!10547 = !DILocalVariable(name: "__dummy2", scope: !10545, file: !3, line: 2859, type: !1010)
!10548 = !DILocation(line: 2859, column: 2, scope: !10517)
!10549 = !DILocation(line: 2859, column: 2, scope: !10516)
!10550 = !DILocation(line: 2859, column: 2, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 2859, column: 2)
!10552 = !DILocalVariable(name: "__dummy", scope: !10553, file: !3, line: 2859, type: !1010)
!10553 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 2859, column: 2)
!10554 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 2859, column: 2)
!10555 = !DILocation(line: 2859, column: 2, scope: !10553)
!10556 = !DILocalVariable(name: "__dummy2", scope: !10553, file: !3, line: 2859, type: !1010)
!10557 = !DILocation(line: 2859, column: 2, scope: !10554)
!10558 = !DILocation(line: 2859, column: 2, scope: !10515)
!10559 = !{i32 -2140251258}
!10560 = !DILocation(line: 2859, column: 2, scope: !10514)
!10561 = !DILocation(line: 329, column: 10, scope: !7110, inlinedAt: !10513)
!10562 = !DILocation(line: 329, column: 16, scope: !7110, inlinedAt: !10513)
!10563 = !DILocation(line: 2861, column: 6, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2861, column: 6)
!10565 = !DILocation(line: 2861, column: 9, scope: !10564)
!10566 = !DILocation(line: 2861, column: 23, scope: !10564)
!10567 = !DILocation(line: 2861, column: 27, scope: !10564)
!10568 = !DILocation(line: 2861, column: 30, scope: !10564)
!10569 = !DILocation(line: 2861, column: 12, scope: !10564)
!10570 = !DILocation(line: 2861, column: 6, scope: !10508)
!10571 = !DILocalVariable(name: "host_stat", scope: !10572, file: !3, line: 2862, type: !2256)
!10572 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 2861, column: 41)
!10573 = !DILocation(line: 2862, column: 6, scope: !10572)
!10574 = !DILocation(line: 2864, column: 15, scope: !10572)
!10575 = !DILocation(line: 2864, column: 19, scope: !10572)
!10576 = !DILocation(line: 2864, column: 24, scope: !10572)
!10577 = !DILocation(line: 2864, column: 37, scope: !10572)
!10578 = !DILocation(line: 2864, column: 13, scope: !10572)
!10579 = !DILocation(line: 2871, column: 7, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 2871, column: 7)
!10581 = !DILocation(line: 2871, column: 11, scope: !10580)
!10582 = !DILocation(line: 2871, column: 20, scope: !10580)
!10583 = !DILocation(line: 2871, column: 38, scope: !10580)
!10584 = !DILocation(line: 2871, column: 42, scope: !10580)
!10585 = !DILocation(line: 2871, column: 52, scope: !10580)
!10586 = !DILocation(line: 2871, column: 7, scope: !10572)
!10587 = !DILocation(line: 2872, column: 4, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 2871, column: 68)
!10589 = !DILocation(line: 2872, column: 8, scope: !10588)
!10590 = !DILocation(line: 2872, column: 17, scope: !10588)
!10591 = !DILocation(line: 2873, column: 9, scope: !10588)
!10592 = !DILocation(line: 2874, column: 3, scope: !10588)
!10593 = !DILocation(line: 2876, column: 3, scope: !10572)
!10594 = !DILocation(line: 2876, column: 7, scope: !10572)
!10595 = !DILocation(line: 2876, column: 12, scope: !10572)
!10596 = !DILocation(line: 2876, column: 23, scope: !10572)
!10597 = !DILocation(line: 2879, column: 7, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 2879, column: 7)
!10599 = !DILocation(line: 2879, column: 7, scope: !10572)
!10600 = !DILocation(line: 2880, column: 4, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2879, column: 13)
!10602 = !DILocation(line: 2880, column: 8, scope: !10601)
!10603 = !DILocation(line: 2880, column: 13, scope: !10601)
!10604 = !DILocation(line: 2880, column: 30, scope: !10601)
!10605 = !DILocation(line: 2881, column: 8, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 2881, column: 8)
!10607 = !DILocation(line: 2881, column: 12, scope: !10606)
!10608 = !DILocation(line: 2881, column: 17, scope: !10606)
!10609 = !DILocation(line: 2881, column: 8, scope: !10601)
!10610 = !DILocation(line: 2882, column: 5, scope: !10606)
!10611 = !DILocation(line: 2882, column: 9, scope: !10606)
!10612 = !DILocation(line: 2882, column: 14, scope: !10606)
!10613 = !DILocation(line: 2882, column: 28, scope: !10606)
!10614 = !DILocation(line: 2883, column: 3, scope: !10601)
!10615 = !DILocation(line: 2884, column: 2, scope: !10572)
!10616 = !DILocation(line: 2886, column: 25, scope: !10508)
!10617 = !DILocation(line: 2886, column: 29, scope: !10508)
!10618 = !DILocation(line: 2886, column: 35, scope: !10508)
!10619 = !DILocation(line: 409, column: 2, scope: !7186, inlinedAt: !10510)
!10620 = !DILocation(line: 409, column: 2, scope: !7191, inlinedAt: !10510)
!10621 = !DILocation(line: 409, column: 2, scope: !7192, inlinedAt: !10510)
!10622 = !DILocation(line: 409, column: 2, scope: !7199, inlinedAt: !10510)
!10623 = !DILocation(line: 409, column: 2, scope: !7202, inlinedAt: !10510)
!10624 = !DILocation(line: 2888, column: 6, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2888, column: 6)
!10626 = !DILocation(line: 2888, column: 6, scope: !10508)
!10627 = !DILocation(line: 2889, column: 20, scope: !10625)
!10628 = !DILocation(line: 2889, column: 3, scope: !10625)
!10629 = !DILocation(line: 2891, column: 24, scope: !10508)
!10630 = !DILocation(line: 2891, column: 2, scope: !10508)
!10631 = !DILocation(line: 2892, column: 1, scope: !10508)
!10632 = distinct !DISubprogram(name: "ata_bmdma_post_internal_cmd", scope: !3, file: !3, line: 2902, type: !6388, scopeLine: 2903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10633 = !DILocation(line: 407, column: 64, scope: !7101, inlinedAt: !10634)
!10634 = distinct !DILocation(line: 2910, column: 3, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 2907, column: 35)
!10636 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 2907, column: 6)
!10637 = !DILocation(line: 407, column: 84, scope: !7101, inlinedAt: !10634)
!10638 = !DILocation(line: 327, column: 67, scope: !7110, inlinedAt: !10639)
!10639 = distinct !DILocation(line: 2908, column: 3, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 2908, column: 3)
!10641 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 2908, column: 3)
!10642 = distinct !DILexicalBlock(scope: !10643, file: !3, line: 2908, column: 3)
!10643 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 2908, column: 3)
!10644 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 2908, column: 3)
!10645 = !DILocalVariable(name: "qc", arg: 1, scope: !10632, file: !3, line: 2902, type: !6170)
!10646 = !DILocation(line: 2902, column: 57, scope: !10632)
!10647 = !DILocalVariable(name: "ap", scope: !10632, file: !3, line: 2904, type: !5951)
!10648 = !DILocation(line: 2904, column: 19, scope: !10632)
!10649 = !DILocation(line: 2904, column: 24, scope: !10632)
!10650 = !DILocation(line: 2904, column: 28, scope: !10632)
!10651 = !DILocalVariable(name: "flags", scope: !10632, file: !3, line: 2905, type: !1010)
!10652 = !DILocation(line: 2905, column: 16, scope: !10632)
!10653 = !DILocation(line: 2907, column: 17, scope: !10636)
!10654 = !DILocation(line: 2907, column: 21, scope: !10636)
!10655 = !DILocation(line: 2907, column: 24, scope: !10636)
!10656 = !DILocation(line: 2907, column: 6, scope: !10636)
!10657 = !DILocation(line: 2907, column: 6, scope: !10632)
!10658 = !DILocation(line: 2908, column: 3, scope: !10635)
!10659 = !DILocation(line: 2908, column: 3, scope: !10644)
!10660 = !DILocalVariable(name: "__dummy", scope: !10661, file: !3, line: 2908, type: !1010)
!10661 = distinct !DILexicalBlock(scope: !10643, file: !3, line: 2908, column: 3)
!10662 = !DILocation(line: 2908, column: 3, scope: !10661)
!10663 = !DILocalVariable(name: "__dummy2", scope: !10661, file: !3, line: 2908, type: !1010)
!10664 = !DILocation(line: 2908, column: 3, scope: !10643)
!10665 = !DILocation(line: 2908, column: 3, scope: !10642)
!10666 = !DILocation(line: 2908, column: 3, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 2908, column: 3)
!10668 = !DILocalVariable(name: "__dummy", scope: !10669, file: !3, line: 2908, type: !1010)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 2908, column: 3)
!10670 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 2908, column: 3)
!10671 = !DILocation(line: 2908, column: 3, scope: !10669)
!10672 = !DILocalVariable(name: "__dummy2", scope: !10669, file: !3, line: 2908, type: !1010)
!10673 = !DILocation(line: 2908, column: 3, scope: !10670)
!10674 = !DILocation(line: 2908, column: 3, scope: !10641)
!10675 = !{i32 -2140250147}
!10676 = !DILocation(line: 2908, column: 3, scope: !10640)
!10677 = !DILocation(line: 329, column: 10, scope: !7110, inlinedAt: !10639)
!10678 = !DILocation(line: 329, column: 16, scope: !7110, inlinedAt: !10639)
!10679 = !DILocation(line: 2909, column: 3, scope: !10635)
!10680 = !DILocation(line: 2909, column: 7, scope: !10635)
!10681 = !DILocation(line: 2909, column: 12, scope: !10635)
!10682 = !DILocation(line: 2909, column: 23, scope: !10635)
!10683 = !DILocation(line: 2910, column: 26, scope: !10635)
!10684 = !DILocation(line: 2910, column: 30, scope: !10635)
!10685 = !DILocation(line: 2910, column: 36, scope: !10635)
!10686 = !DILocation(line: 409, column: 2, scope: !7186, inlinedAt: !10634)
!10687 = !DILocation(line: 409, column: 2, scope: !7191, inlinedAt: !10634)
!10688 = !DILocation(line: 409, column: 2, scope: !7192, inlinedAt: !10634)
!10689 = !DILocation(line: 409, column: 2, scope: !7199, inlinedAt: !10634)
!10690 = !DILocation(line: 409, column: 2, scope: !7202, inlinedAt: !10634)
!10691 = !DILocation(line: 2911, column: 2, scope: !10635)
!10692 = !DILocation(line: 2912, column: 1, scope: !10632)
!10693 = distinct !DISubprogram(name: "ata_bmdma_port_start", scope: !3, file: !3, line: 3054, type: !6407, scopeLine: 3055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10694 = !DILocalVariable(name: "ap", arg: 1, scope: !10693, file: !3, line: 3054, type: !5951)
!10695 = !DILocation(line: 3054, column: 43, scope: !10693)
!10696 = !DILocation(line: 3056, column: 6, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 3056, column: 6)
!10698 = !DILocation(line: 3056, column: 10, scope: !10697)
!10699 = !DILocation(line: 3056, column: 21, scope: !10697)
!10700 = !DILocation(line: 3056, column: 24, scope: !10697)
!10701 = !DILocation(line: 3056, column: 28, scope: !10697)
!10702 = !DILocation(line: 3056, column: 6, scope: !10693)
!10703 = !DILocation(line: 3058, column: 24, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 3056, column: 39)
!10705 = !DILocation(line: 3058, column: 28, scope: !10704)
!10706 = !DILocation(line: 3058, column: 34, scope: !10704)
!10707 = !DILocation(line: 3059, column: 11, scope: !10704)
!10708 = !DILocation(line: 3059, column: 15, scope: !10704)
!10709 = !DILocation(line: 3058, column: 4, scope: !10704)
!10710 = !DILocation(line: 3057, column: 3, scope: !10704)
!10711 = !DILocation(line: 3057, column: 7, scope: !10704)
!10712 = !DILocation(line: 3057, column: 17, scope: !10704)
!10713 = !DILocation(line: 3060, column: 8, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 3060, column: 7)
!10715 = !DILocation(line: 3060, column: 12, scope: !10714)
!10716 = !DILocation(line: 3060, column: 7, scope: !10704)
!10717 = !DILocation(line: 3061, column: 4, scope: !10714)
!10718 = !DILocation(line: 3062, column: 2, scope: !10704)
!10719 = !DILocation(line: 3064, column: 2, scope: !10693)
!10720 = !DILocation(line: 3065, column: 1, scope: !10693)
!10721 = distinct !DISubprogram(name: "ata_bmdma_irq_clear", scope: !3, file: !3, line: 2926, type: !6435, scopeLine: 2927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10722 = !DILocalVariable(name: "ap", arg: 1, scope: !10721, file: !3, line: 2926, type: !5951)
!10723 = !DILocation(line: 2926, column: 43, scope: !10721)
!10724 = !DILocalVariable(name: "mmio", scope: !10721, file: !3, line: 2928, type: !968)
!10725 = !DILocation(line: 2928, column: 16, scope: !10721)
!10726 = !DILocation(line: 2928, column: 23, scope: !10721)
!10727 = !DILocation(line: 2928, column: 27, scope: !10721)
!10728 = !DILocation(line: 2928, column: 34, scope: !10721)
!10729 = !DILocation(line: 2930, column: 7, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2930, column: 6)
!10731 = !DILocation(line: 2930, column: 6, scope: !10721)
!10732 = !DILocation(line: 2931, column: 3, scope: !10730)
!10733 = !DILocation(line: 2933, column: 19, scope: !10721)
!10734 = !DILocation(line: 2933, column: 24, scope: !10721)
!10735 = !DILocation(line: 2933, column: 11, scope: !10721)
!10736 = !DILocation(line: 2933, column: 43, scope: !10721)
!10737 = !DILocation(line: 2933, column: 48, scope: !10721)
!10738 = !DILocation(line: 2933, column: 2, scope: !10721)
!10739 = !DILocation(line: 2934, column: 1, scope: !10721)
!10740 = distinct !DISubprogram(name: "ata_bmdma_setup", scope: !3, file: !3, line: 2944, type: !6388, scopeLine: 2945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10741 = !DILocalVariable(name: "qc", arg: 1, scope: !10740, file: !3, line: 2944, type: !6170)
!10742 = !DILocation(line: 2944, column: 45, scope: !10740)
!10743 = !DILocalVariable(name: "ap", scope: !10740, file: !3, line: 2946, type: !5951)
!10744 = !DILocation(line: 2946, column: 19, scope: !10740)
!10745 = !DILocation(line: 2946, column: 24, scope: !10740)
!10746 = !DILocation(line: 2946, column: 28, scope: !10740)
!10747 = !DILocalVariable(name: "rw", scope: !10740, file: !3, line: 2947, type: !7)
!10748 = !DILocation(line: 2947, column: 15, scope: !10740)
!10749 = !DILocation(line: 2947, column: 21, scope: !10740)
!10750 = !DILocation(line: 2947, column: 25, scope: !10740)
!10751 = !DILocation(line: 2947, column: 28, scope: !10740)
!10752 = !DILocation(line: 2947, column: 34, scope: !10740)
!10753 = !DILocation(line: 2947, column: 20, scope: !10740)
!10754 = !DILocalVariable(name: "dmactl", scope: !10740, file: !3, line: 2948, type: !2256)
!10755 = !DILocation(line: 2948, column: 5, scope: !10740)
!10756 = !DILocation(line: 2951, column: 2, scope: !10740)
!10757 = !{i32 -2140249781}
!10758 = !DILocation(line: 2952, column: 12, scope: !10740)
!10759 = !DILocation(line: 2952, column: 16, scope: !10740)
!10760 = !DILocation(line: 2952, column: 31, scope: !10740)
!10761 = !DILocation(line: 2952, column: 35, scope: !10740)
!10762 = !DILocation(line: 2952, column: 42, scope: !10740)
!10763 = !DILocation(line: 2952, column: 53, scope: !10740)
!10764 = !DILocation(line: 2952, column: 2, scope: !10740)
!10765 = !DILocation(line: 2955, column: 19, scope: !10740)
!10766 = !DILocation(line: 2955, column: 23, scope: !10740)
!10767 = !DILocation(line: 2955, column: 30, scope: !10740)
!10768 = !DILocation(line: 2955, column: 41, scope: !10740)
!10769 = !DILocation(line: 2955, column: 11, scope: !10740)
!10770 = !DILocation(line: 2955, column: 9, scope: !10740)
!10771 = !DILocation(line: 2956, column: 9, scope: !10740)
!10772 = !DILocation(line: 2957, column: 7, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10740, file: !3, line: 2957, column: 6)
!10774 = !DILocation(line: 2957, column: 6, scope: !10740)
!10775 = !DILocation(line: 2958, column: 10, scope: !10773)
!10776 = !DILocation(line: 2958, column: 3, scope: !10773)
!10777 = !DILocation(line: 2959, column: 11, scope: !10740)
!10778 = !DILocation(line: 2959, column: 19, scope: !10740)
!10779 = !DILocation(line: 2959, column: 23, scope: !10740)
!10780 = !DILocation(line: 2959, column: 30, scope: !10740)
!10781 = !DILocation(line: 2959, column: 41, scope: !10740)
!10782 = !DILocation(line: 2959, column: 2, scope: !10740)
!10783 = !DILocation(line: 2962, column: 2, scope: !10740)
!10784 = !DILocation(line: 2962, column: 6, scope: !10740)
!10785 = !DILocation(line: 2962, column: 11, scope: !10740)
!10786 = !DILocation(line: 2962, column: 28, scope: !10740)
!10787 = !DILocation(line: 2962, column: 33, scope: !10740)
!10788 = !DILocation(line: 2962, column: 37, scope: !10740)
!10789 = !DILocation(line: 2963, column: 1, scope: !10740)
!10790 = distinct !DISubprogram(name: "ata_bmdma_start", scope: !3, file: !3, line: 2973, type: !6388, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10791 = !DILocalVariable(name: "qc", arg: 1, scope: !10790, file: !3, line: 2973, type: !6170)
!10792 = !DILocation(line: 2973, column: 45, scope: !10790)
!10793 = !DILocalVariable(name: "ap", scope: !10790, file: !3, line: 2975, type: !5951)
!10794 = !DILocation(line: 2975, column: 19, scope: !10790)
!10795 = !DILocation(line: 2975, column: 24, scope: !10790)
!10796 = !DILocation(line: 2975, column: 28, scope: !10790)
!10797 = !DILocalVariable(name: "dmactl", scope: !10790, file: !3, line: 2976, type: !2256)
!10798 = !DILocation(line: 2976, column: 5, scope: !10790)
!10799 = !DILocation(line: 2979, column: 19, scope: !10790)
!10800 = !DILocation(line: 2979, column: 23, scope: !10790)
!10801 = !DILocation(line: 2979, column: 30, scope: !10790)
!10802 = !DILocation(line: 2979, column: 41, scope: !10790)
!10803 = !DILocation(line: 2979, column: 11, scope: !10790)
!10804 = !DILocation(line: 2979, column: 9, scope: !10790)
!10805 = !DILocation(line: 2980, column: 11, scope: !10790)
!10806 = !DILocation(line: 2980, column: 18, scope: !10790)
!10807 = !DILocation(line: 2980, column: 35, scope: !10790)
!10808 = !DILocation(line: 2980, column: 39, scope: !10790)
!10809 = !DILocation(line: 2980, column: 46, scope: !10790)
!10810 = !DILocation(line: 2980, column: 57, scope: !10790)
!10811 = !DILocation(line: 2980, column: 2, scope: !10790)
!10812 = !DILocation(line: 2996, column: 1, scope: !10790)
!10813 = distinct !DISubprogram(name: "ata_bmdma_stop", scope: !3, file: !3, line: 3010, type: !6388, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10814 = !DILocalVariable(name: "qc", arg: 1, scope: !10813, file: !3, line: 3010, type: !6170)
!10815 = !DILocation(line: 3010, column: 44, scope: !10813)
!10816 = !DILocalVariable(name: "ap", scope: !10813, file: !3, line: 3012, type: !5951)
!10817 = !DILocation(line: 3012, column: 19, scope: !10813)
!10818 = !DILocation(line: 3012, column: 24, scope: !10813)
!10819 = !DILocation(line: 3012, column: 28, scope: !10813)
!10820 = !DILocalVariable(name: "mmio", scope: !10813, file: !3, line: 3013, type: !968)
!10821 = !DILocation(line: 3013, column: 16, scope: !10813)
!10822 = !DILocation(line: 3013, column: 23, scope: !10813)
!10823 = !DILocation(line: 3013, column: 27, scope: !10813)
!10824 = !DILocation(line: 3013, column: 34, scope: !10813)
!10825 = !DILocation(line: 3016, column: 19, scope: !10813)
!10826 = !DILocation(line: 3016, column: 24, scope: !10813)
!10827 = !DILocation(line: 3016, column: 11, scope: !10813)
!10828 = !DILocation(line: 3016, column: 39, scope: !10813)
!10829 = !DILocation(line: 3017, column: 4, scope: !10813)
!10830 = !DILocation(line: 3017, column: 9, scope: !10813)
!10831 = !DILocation(line: 3016, column: 2, scope: !10813)
!10832 = !DILocation(line: 3020, column: 20, scope: !10813)
!10833 = !DILocation(line: 3020, column: 2, scope: !10813)
!10834 = !DILocation(line: 3021, column: 1, scope: !10813)
!10835 = distinct !DISubprogram(name: "ata_bmdma_status", scope: !3, file: !3, line: 3035, type: !6517, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10836 = !DILocalVariable(name: "ap", arg: 1, scope: !10835, file: !3, line: 3035, type: !5951)
!10837 = !DILocation(line: 3035, column: 38, scope: !10835)
!10838 = !DILocation(line: 3037, column: 17, scope: !10835)
!10839 = !DILocation(line: 3037, column: 21, scope: !10835)
!10840 = !DILocation(line: 3037, column: 28, scope: !10835)
!10841 = !DILocation(line: 3037, column: 39, scope: !10835)
!10842 = !DILocation(line: 3037, column: 9, scope: !10835)
!10843 = !DILocation(line: 3037, column: 2, scope: !10835)
!10844 = distinct !DISubprogram(name: "ata_bmdma_port_start32", scope: !3, file: !3, line: 3082, type: !6407, scopeLine: 3083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10845 = !DILocalVariable(name: "ap", arg: 1, scope: !10844, file: !3, line: 3082, type: !5951)
!10846 = !DILocation(line: 3082, column: 45, scope: !10844)
!10847 = !DILocation(line: 3084, column: 2, scope: !10844)
!10848 = !DILocation(line: 3084, column: 6, scope: !10844)
!10849 = !DILocation(line: 3084, column: 13, scope: !10844)
!10850 = !DILocation(line: 3085, column: 30, scope: !10844)
!10851 = !DILocation(line: 3085, column: 9, scope: !10844)
!10852 = !DILocation(line: 3085, column: 2, scope: !10844)
!10853 = distinct !DISubprogram(name: "ata_bmdma_fill_sg", scope: !3, file: !3, line: 2571, type: !6388, scopeLine: 2572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10854 = !DILocalVariable(name: "qc", arg: 1, scope: !10853, file: !3, line: 2571, type: !6170)
!10855 = !DILocation(line: 2571, column: 54, scope: !10853)
!10856 = !DILocalVariable(name: "ap", scope: !10853, file: !3, line: 2573, type: !5951)
!10857 = !DILocation(line: 2573, column: 19, scope: !10853)
!10858 = !DILocation(line: 2573, column: 24, scope: !10853)
!10859 = !DILocation(line: 2573, column: 28, scope: !10853)
!10860 = !DILocalVariable(name: "prd", scope: !10853, file: !3, line: 2574, type: !6601)
!10861 = !DILocation(line: 2574, column: 24, scope: !10853)
!10862 = !DILocation(line: 2574, column: 30, scope: !10853)
!10863 = !DILocation(line: 2574, column: 34, scope: !10853)
!10864 = !DILocalVariable(name: "sg", scope: !10853, file: !3, line: 2575, type: !6380)
!10865 = !DILocation(line: 2575, column: 22, scope: !10853)
!10866 = !DILocalVariable(name: "si", scope: !10853, file: !3, line: 2576, type: !7)
!10867 = !DILocation(line: 2576, column: 15, scope: !10853)
!10868 = !DILocalVariable(name: "pi", scope: !10853, file: !3, line: 2576, type: !7)
!10869 = !DILocation(line: 2576, column: 19, scope: !10853)
!10870 = !DILocation(line: 2578, column: 5, scope: !10853)
!10871 = !DILocation(line: 2579, column: 2, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2579, column: 2)
!10873 = !DILocation(line: 2579, column: 2, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 2579, column: 2)
!10875 = !DILocalVariable(name: "addr", scope: !10876, file: !3, line: 2580, type: !1040)
!10876 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 2579, column: 42)
!10877 = !DILocation(line: 2580, column: 7, scope: !10876)
!10878 = !DILocalVariable(name: "offset", scope: !10876, file: !3, line: 2580, type: !1040)
!10879 = !DILocation(line: 2580, column: 13, scope: !10876)
!10880 = !DILocalVariable(name: "sg_len", scope: !10876, file: !3, line: 2581, type: !1040)
!10881 = !DILocation(line: 2581, column: 7, scope: !10876)
!10882 = !DILocalVariable(name: "len", scope: !10876, file: !3, line: 2581, type: !1040)
!10883 = !DILocation(line: 2581, column: 15, scope: !10876)
!10884 = !DILocation(line: 2587, column: 16, scope: !10876)
!10885 = !DILocation(line: 2587, column: 10, scope: !10876)
!10886 = !DILocation(line: 2587, column: 8, scope: !10876)
!10887 = !DILocation(line: 2588, column: 12, scope: !10876)
!10888 = !DILocation(line: 2588, column: 10, scope: !10876)
!10889 = !DILocation(line: 2590, column: 3, scope: !10876)
!10890 = !DILocation(line: 2590, column: 10, scope: !10876)
!10891 = !DILocation(line: 2591, column: 13, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 2590, column: 18)
!10893 = !DILocation(line: 2591, column: 18, scope: !10892)
!10894 = !DILocation(line: 2591, column: 11, scope: !10892)
!10895 = !DILocation(line: 2592, column: 10, scope: !10892)
!10896 = !DILocation(line: 2592, column: 8, scope: !10892)
!10897 = !DILocation(line: 2593, column: 9, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 2593, column: 8)
!10899 = !DILocation(line: 2593, column: 18, scope: !10898)
!10900 = !DILocation(line: 2593, column: 16, scope: !10898)
!10901 = !DILocation(line: 2593, column: 26, scope: !10898)
!10902 = !DILocation(line: 2593, column: 8, scope: !10892)
!10903 = !DILocation(line: 2594, column: 21, scope: !10898)
!10904 = !DILocation(line: 2594, column: 19, scope: !10898)
!10905 = !DILocation(line: 2594, column: 9, scope: !10898)
!10906 = !DILocation(line: 2594, column: 5, scope: !10898)
!10907 = !DILocation(line: 2596, column: 19, scope: !10892)
!10908 = !DILocation(line: 2596, column: 4, scope: !10892)
!10909 = !DILocation(line: 2596, column: 8, scope: !10892)
!10910 = !DILocation(line: 2596, column: 12, scope: !10892)
!10911 = !DILocation(line: 2596, column: 17, scope: !10892)
!10912 = !DILocation(line: 2597, column: 24, scope: !10892)
!10913 = !DILocation(line: 2597, column: 4, scope: !10892)
!10914 = !DILocation(line: 2597, column: 8, scope: !10892)
!10915 = !DILocation(line: 2597, column: 12, scope: !10892)
!10916 = !DILocation(line: 2597, column: 22, scope: !10892)
!10917 = !DILocation(line: 2600, column: 6, scope: !10892)
!10918 = !DILocation(line: 2601, column: 14, scope: !10892)
!10919 = !DILocation(line: 2601, column: 11, scope: !10892)
!10920 = !DILocation(line: 2602, column: 12, scope: !10892)
!10921 = !DILocation(line: 2602, column: 9, scope: !10892)
!10922 = distinct !{!10922, !10889, !10923}
!10923 = !DILocation(line: 2603, column: 3, scope: !10876)
!10924 = !DILocation(line: 2604, column: 2, scope: !10876)
!10925 = distinct !{!10925, !10871, !10926}
!10926 = !DILocation(line: 2604, column: 2, scope: !10872)
!10927 = !DILocation(line: 2606, column: 2, scope: !10853)
!10928 = !DILocation(line: 2606, column: 6, scope: !10853)
!10929 = !DILocation(line: 2606, column: 9, scope: !10853)
!10930 = !DILocation(line: 2606, column: 14, scope: !10853)
!10931 = !DILocation(line: 2606, column: 24, scope: !10853)
!10932 = !DILocation(line: 2607, column: 1, scope: !10853)
!10933 = distinct !DISubprogram(name: "ata_bmdma_dumb_qc_prep", scope: !3, file: !3, line: 2698, type: !6395, scopeLine: 2699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10934 = !DILocalVariable(name: "qc", arg: 1, scope: !10933, file: !3, line: 2698, type: !6170)
!10935 = !DILocation(line: 2698, column: 74, scope: !10933)
!10936 = !DILocation(line: 2700, column: 8, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 2700, column: 6)
!10938 = !DILocation(line: 2700, column: 12, scope: !10937)
!10939 = !DILocation(line: 2700, column: 18, scope: !10937)
!10940 = !DILocation(line: 2700, column: 6, scope: !10933)
!10941 = !DILocation(line: 2701, column: 3, scope: !10937)
!10942 = !DILocation(line: 2703, column: 25, scope: !10933)
!10943 = !DILocation(line: 2703, column: 2, scope: !10933)
!10944 = !DILocation(line: 2705, column: 2, scope: !10933)
!10945 = !DILocation(line: 2706, column: 1, scope: !10933)
!10946 = distinct !DISubprogram(name: "ata_bmdma_fill_sg_dumb", scope: !3, file: !3, line: 2622, type: !6388, scopeLine: 2623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!10947 = !DILocalVariable(name: "qc", arg: 1, scope: !10946, file: !3, line: 2622, type: !6170)
!10948 = !DILocation(line: 2622, column: 59, scope: !10946)
!10949 = !DILocalVariable(name: "ap", scope: !10946, file: !3, line: 2624, type: !5951)
!10950 = !DILocation(line: 2624, column: 19, scope: !10946)
!10951 = !DILocation(line: 2624, column: 24, scope: !10946)
!10952 = !DILocation(line: 2624, column: 28, scope: !10946)
!10953 = !DILocalVariable(name: "prd", scope: !10946, file: !3, line: 2625, type: !6601)
!10954 = !DILocation(line: 2625, column: 24, scope: !10946)
!10955 = !DILocation(line: 2625, column: 30, scope: !10946)
!10956 = !DILocation(line: 2625, column: 34, scope: !10946)
!10957 = !DILocalVariable(name: "sg", scope: !10946, file: !3, line: 2626, type: !6380)
!10958 = !DILocation(line: 2626, column: 22, scope: !10946)
!10959 = !DILocalVariable(name: "si", scope: !10946, file: !3, line: 2627, type: !7)
!10960 = !DILocation(line: 2627, column: 15, scope: !10946)
!10961 = !DILocalVariable(name: "pi", scope: !10946, file: !3, line: 2627, type: !7)
!10962 = !DILocation(line: 2627, column: 19, scope: !10946)
!10963 = !DILocation(line: 2629, column: 5, scope: !10946)
!10964 = !DILocation(line: 2630, column: 2, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 2630, column: 2)
!10966 = !DILocation(line: 2630, column: 2, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 2630, column: 2)
!10968 = !DILocalVariable(name: "addr", scope: !10969, file: !3, line: 2631, type: !1040)
!10969 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 2630, column: 42)
!10970 = !DILocation(line: 2631, column: 7, scope: !10969)
!10971 = !DILocalVariable(name: "offset", scope: !10969, file: !3, line: 2631, type: !1040)
!10972 = !DILocation(line: 2631, column: 13, scope: !10969)
!10973 = !DILocalVariable(name: "sg_len", scope: !10969, file: !3, line: 2632, type: !1040)
!10974 = !DILocation(line: 2632, column: 7, scope: !10969)
!10975 = !DILocalVariable(name: "len", scope: !10969, file: !3, line: 2632, type: !1040)
!10976 = !DILocation(line: 2632, column: 15, scope: !10969)
!10977 = !DILocalVariable(name: "blen", scope: !10969, file: !3, line: 2632, type: !1040)
!10978 = !DILocation(line: 2632, column: 20, scope: !10969)
!10979 = !DILocation(line: 2638, column: 16, scope: !10969)
!10980 = !DILocation(line: 2638, column: 10, scope: !10969)
!10981 = !DILocation(line: 2638, column: 8, scope: !10969)
!10982 = !DILocation(line: 2639, column: 12, scope: !10969)
!10983 = !DILocation(line: 2639, column: 10, scope: !10969)
!10984 = !DILocation(line: 2641, column: 3, scope: !10969)
!10985 = !DILocation(line: 2641, column: 10, scope: !10969)
!10986 = !DILocation(line: 2642, column: 13, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 2641, column: 18)
!10988 = !DILocation(line: 2642, column: 18, scope: !10987)
!10989 = !DILocation(line: 2642, column: 11, scope: !10987)
!10990 = !DILocation(line: 2643, column: 10, scope: !10987)
!10991 = !DILocation(line: 2643, column: 8, scope: !10987)
!10992 = !DILocation(line: 2644, column: 9, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 2644, column: 8)
!10994 = !DILocation(line: 2644, column: 18, scope: !10993)
!10995 = !DILocation(line: 2644, column: 16, scope: !10993)
!10996 = !DILocation(line: 2644, column: 26, scope: !10993)
!10997 = !DILocation(line: 2644, column: 8, scope: !10987)
!10998 = !DILocation(line: 2645, column: 21, scope: !10993)
!10999 = !DILocation(line: 2645, column: 19, scope: !10993)
!11000 = !DILocation(line: 2645, column: 9, scope: !10993)
!11001 = !DILocation(line: 2645, column: 5, scope: !10993)
!11002 = !DILocation(line: 2647, column: 11, scope: !10987)
!11003 = !DILocation(line: 2647, column: 15, scope: !10987)
!11004 = !DILocation(line: 2647, column: 9, scope: !10987)
!11005 = !DILocation(line: 2648, column: 19, scope: !10987)
!11006 = !DILocation(line: 2648, column: 4, scope: !10987)
!11007 = !DILocation(line: 2648, column: 8, scope: !10987)
!11008 = !DILocation(line: 2648, column: 12, scope: !10987)
!11009 = !DILocation(line: 2648, column: 17, scope: !10987)
!11010 = !DILocation(line: 2649, column: 8, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 2649, column: 8)
!11012 = !DILocation(line: 2649, column: 13, scope: !11011)
!11013 = !DILocation(line: 2649, column: 8, scope: !10987)
!11014 = !DILocation(line: 2653, column: 5, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 2649, column: 19)
!11016 = !DILocation(line: 2653, column: 9, scope: !11015)
!11017 = !DILocation(line: 2653, column: 13, scope: !11015)
!11018 = !DILocation(line: 2653, column: 23, scope: !11015)
!11019 = !DILocation(line: 2654, column: 10, scope: !11015)
!11020 = !DILocation(line: 2655, column: 22, scope: !11015)
!11021 = !DILocation(line: 2655, column: 5, scope: !11015)
!11022 = !DILocation(line: 2655, column: 9, scope: !11015)
!11023 = !DILocation(line: 2655, column: 15, scope: !11015)
!11024 = !DILocation(line: 2655, column: 20, scope: !11015)
!11025 = !DILocation(line: 2656, column: 4, scope: !11015)
!11026 = !DILocation(line: 2657, column: 24, scope: !10987)
!11027 = !DILocation(line: 2657, column: 4, scope: !10987)
!11028 = !DILocation(line: 2657, column: 8, scope: !10987)
!11029 = !DILocation(line: 2657, column: 12, scope: !10987)
!11030 = !DILocation(line: 2657, column: 22, scope: !10987)
!11031 = !DILocation(line: 2660, column: 6, scope: !10987)
!11032 = !DILocation(line: 2661, column: 14, scope: !10987)
!11033 = !DILocation(line: 2661, column: 11, scope: !10987)
!11034 = !DILocation(line: 2662, column: 12, scope: !10987)
!11035 = !DILocation(line: 2662, column: 9, scope: !10987)
!11036 = distinct !{!11036, !10984, !11037}
!11037 = !DILocation(line: 2663, column: 3, scope: !10969)
!11038 = !DILocation(line: 2664, column: 2, scope: !10969)
!11039 = distinct !{!11039, !10964, !11040}
!11040 = !DILocation(line: 2664, column: 2, scope: !10965)
!11041 = !DILocation(line: 2666, column: 2, scope: !10946)
!11042 = !DILocation(line: 2666, column: 6, scope: !10946)
!11043 = !DILocation(line: 2666, column: 9, scope: !10946)
!11044 = !DILocation(line: 2666, column: 14, scope: !10946)
!11045 = !DILocation(line: 2666, column: 24, scope: !10946)
!11046 = !DILocation(line: 2667, column: 1, scope: !10946)
!11047 = distinct !DISubprogram(name: "ata_is_dma", scope: !152, file: !152, line: 1041, type: !8734, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11048 = !DILocalVariable(name: "prot", arg: 1, scope: !11047, file: !152, line: 1041, type: !2256)
!11049 = !DILocation(line: 1041, column: 34, scope: !11047)
!11050 = !DILocation(line: 1043, column: 9, scope: !11047)
!11051 = !DILocation(line: 1043, column: 14, scope: !11047)
!11052 = !DILocation(line: 1043, column: 2, scope: !11047)
!11053 = distinct !DISubprogram(name: "ata_bmdma_port_intr", scope: !3, file: !3, line: 2780, type: !9040, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11054 = !DILocalVariable(name: "ap", arg: 1, scope: !11053, file: !3, line: 2780, type: !5951)
!11055 = !DILocation(line: 2780, column: 51, scope: !11053)
!11056 = !DILocalVariable(name: "qc", arg: 2, scope: !11053, file: !3, line: 2780, type: !6170)
!11057 = !DILocation(line: 2780, column: 78, scope: !11053)
!11058 = !DILocalVariable(name: "ehi", scope: !11053, file: !3, line: 2782, type: !8153)
!11059 = !DILocation(line: 2782, column: 22, scope: !11053)
!11060 = !DILocation(line: 2782, column: 29, scope: !11053)
!11061 = !DILocation(line: 2782, column: 33, scope: !11053)
!11062 = !DILocation(line: 2782, column: 38, scope: !11053)
!11063 = !DILocalVariable(name: "host_stat", scope: !11053, file: !3, line: 2783, type: !2256)
!11064 = !DILocation(line: 2783, column: 5, scope: !11053)
!11065 = !DILocalVariable(name: "bmdma_stopped", scope: !11053, file: !3, line: 2784, type: !1331)
!11066 = !DILocation(line: 2784, column: 7, scope: !11053)
!11067 = !DILocalVariable(name: "handled", scope: !11053, file: !3, line: 2785, type: !7)
!11068 = !DILocation(line: 2785, column: 15, scope: !11053)
!11069 = !DILocation(line: 2787, column: 6, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 2787, column: 6)
!11071 = !DILocation(line: 2787, column: 10, scope: !11070)
!11072 = !DILocation(line: 2787, column: 25, scope: !11070)
!11073 = !DILocation(line: 2787, column: 40, scope: !11070)
!11074 = !DILocation(line: 2787, column: 54, scope: !11070)
!11075 = !DILocation(line: 2787, column: 58, scope: !11070)
!11076 = !DILocation(line: 2787, column: 61, scope: !11070)
!11077 = !DILocation(line: 2787, column: 43, scope: !11070)
!11078 = !DILocation(line: 2787, column: 6, scope: !11053)
!11079 = !DILocation(line: 2789, column: 15, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 2787, column: 72)
!11081 = !DILocation(line: 2789, column: 19, scope: !11080)
!11082 = !DILocation(line: 2789, column: 24, scope: !11080)
!11083 = !DILocation(line: 2789, column: 37, scope: !11080)
!11084 = !DILocation(line: 2789, column: 13, scope: !11080)
!11085 = !DILocation(line: 2793, column: 9, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11080, file: !3, line: 2793, column: 7)
!11087 = !DILocation(line: 2793, column: 19, scope: !11086)
!11088 = !DILocation(line: 2793, column: 7, scope: !11080)
!11089 = !DILocation(line: 2794, column: 28, scope: !11086)
!11090 = !DILocation(line: 2794, column: 11, scope: !11086)
!11091 = !DILocation(line: 2794, column: 4, scope: !11086)
!11092 = !DILocation(line: 2797, column: 3, scope: !11080)
!11093 = !DILocation(line: 2797, column: 7, scope: !11080)
!11094 = !DILocation(line: 2797, column: 12, scope: !11080)
!11095 = !DILocation(line: 2797, column: 23, scope: !11080)
!11096 = !DILocation(line: 2798, column: 17, scope: !11080)
!11097 = !DILocation(line: 2800, column: 7, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11080, file: !3, line: 2800, column: 7)
!11099 = !DILocation(line: 2800, column: 7, scope: !11080)
!11100 = !DILocation(line: 2802, column: 4, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2800, column: 42)
!11102 = !DILocation(line: 2802, column: 8, scope: !11101)
!11103 = !DILocation(line: 2802, column: 17, scope: !11101)
!11104 = !DILocation(line: 2803, column: 4, scope: !11101)
!11105 = !DILocation(line: 2803, column: 8, scope: !11101)
!11106 = !DILocation(line: 2803, column: 23, scope: !11101)
!11107 = !DILocation(line: 2804, column: 3, scope: !11101)
!11108 = !DILocation(line: 2805, column: 2, scope: !11080)
!11109 = !DILocation(line: 2807, column: 32, scope: !11053)
!11110 = !DILocation(line: 2807, column: 36, scope: !11053)
!11111 = !DILocation(line: 2807, column: 40, scope: !11053)
!11112 = !DILocation(line: 2807, column: 12, scope: !11053)
!11113 = !DILocation(line: 2807, column: 10, scope: !11053)
!11114 = !DILocation(line: 2809, column: 6, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 2809, column: 6)
!11116 = !DILocation(line: 2809, column: 29, scope: !11115)
!11117 = !DILocation(line: 2809, column: 43, scope: !11115)
!11118 = !DILocation(line: 2809, column: 47, scope: !11115)
!11119 = !DILocation(line: 2809, column: 50, scope: !11115)
!11120 = !DILocation(line: 2809, column: 32, scope: !11115)
!11121 = !DILocation(line: 2809, column: 6, scope: !11053)
!11122 = !DILocation(line: 2810, column: 21, scope: !11115)
!11123 = !DILocation(line: 2810, column: 45, scope: !11115)
!11124 = !DILocation(line: 2810, column: 3, scope: !11115)
!11125 = !DILocation(line: 2812, column: 9, scope: !11053)
!11126 = !DILocation(line: 2812, column: 2, scope: !11053)
!11127 = !DILocation(line: 2813, column: 1, scope: !11053)
!11128 = distinct !DISubprogram(name: "ata_sff_idle_irq", scope: !3, file: !3, line: 1440, type: !11129, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11129 = !DISubroutineType(types: !11130)
!11130 = !{!7, !5951}
!11131 = !DILocalVariable(name: "ap", arg: 1, scope: !11128, file: !3, line: 1440, type: !5951)
!11132 = !DILocation(line: 1440, column: 55, scope: !11128)
!11133 = !DILocation(line: 1442, column: 2, scope: !11128)
!11134 = !DILocation(line: 1442, column: 6, scope: !11128)
!11135 = !DILocation(line: 1442, column: 12, scope: !11128)
!11136 = !DILocation(line: 1442, column: 20, scope: !11128)
!11137 = !DILocation(line: 1453, column: 2, scope: !11128)
!11138 = distinct !DISubprogram(name: "ata_bmdma_interrupt", scope: !3, file: !3, line: 2830, type: !9118, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11139 = !DILocalVariable(name: "irq", arg: 1, scope: !11138, file: !3, line: 2830, type: !181)
!11140 = !DILocation(line: 2830, column: 37, scope: !11138)
!11141 = !DILocalVariable(name: "dev_instance", arg: 2, scope: !11138, file: !3, line: 2830, type: !968)
!11142 = !DILocation(line: 2830, column: 48, scope: !11138)
!11143 = !DILocation(line: 2832, column: 29, scope: !11138)
!11144 = !DILocation(line: 2832, column: 34, scope: !11138)
!11145 = !DILocation(line: 2832, column: 9, scope: !11138)
!11146 = !DILocation(line: 2832, column: 2, scope: !11138)
!11147 = distinct !DISubprogram(name: "dmam_alloc_coherent", scope: !11148, file: !11148, line: 511, type: !11149, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11148 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!11149 = !DISubroutineType(types: !11150)
!11150 = !{!968, !1068, !1171, !11151, !1637}
!11151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!11152 = !DILocalVariable(name: "dev", arg: 1, scope: !11147, file: !11148, line: 511, type: !1068)
!11153 = !DILocation(line: 511, column: 56, scope: !11147)
!11154 = !DILocalVariable(name: "size", arg: 2, scope: !11147, file: !11148, line: 511, type: !1171)
!11155 = !DILocation(line: 511, column: 68, scope: !11147)
!11156 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !11147, file: !11148, line: 512, type: !11151)
!11157 = !DILocation(line: 512, column: 15, scope: !11147)
!11158 = !DILocalVariable(name: "gfp", arg: 4, scope: !11147, file: !11148, line: 512, type: !1637)
!11159 = !DILocation(line: 512, column: 33, scope: !11147)
!11160 = !DILocation(line: 514, column: 26, scope: !11147)
!11161 = !DILocation(line: 514, column: 31, scope: !11147)
!11162 = !DILocation(line: 514, column: 37, scope: !11147)
!11163 = !DILocation(line: 514, column: 49, scope: !11147)
!11164 = !DILocation(line: 515, column: 5, scope: !11147)
!11165 = !DILocation(line: 515, column: 9, scope: !11147)
!11166 = !DILocation(line: 515, column: 4, scope: !11147)
!11167 = !DILocation(line: 514, column: 9, scope: !11147)
!11168 = !DILocation(line: 514, column: 2, scope: !11147)
!11169 = distinct !DISubprogram(name: "ata_pci_bmdma_clear_simplex", scope: !3, file: !3, line: 3100, type: !5809, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11170 = !DILocalVariable(name: "pdev", arg: 1, scope: !11169, file: !3, line: 3100, type: !969)
!11171 = !DILocation(line: 3100, column: 49, scope: !11169)
!11172 = !DILocalVariable(name: "bmdma", scope: !11169, file: !3, line: 3102, type: !1010)
!11173 = !DILocation(line: 3102, column: 16, scope: !11169)
!11174 = !DILocation(line: 3102, column: 24, scope: !11169)
!11175 = !DILocalVariable(name: "simplex", scope: !11169, file: !3, line: 3103, type: !2256)
!11176 = !DILocation(line: 3103, column: 5, scope: !11169)
!11177 = !DILocation(line: 3105, column: 6, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 3105, column: 6)
!11179 = !DILocation(line: 3105, column: 12, scope: !11178)
!11180 = !DILocation(line: 3105, column: 6, scope: !11169)
!11181 = !DILocation(line: 3106, column: 3, scope: !11178)
!11182 = !DILocation(line: 3108, column: 16, scope: !11169)
!11183 = !DILocation(line: 3108, column: 22, scope: !11169)
!11184 = !DILocation(line: 3108, column: 12, scope: !11169)
!11185 = !DILocation(line: 3108, column: 10, scope: !11169)
!11186 = !DILocation(line: 3109, column: 7, scope: !11169)
!11187 = !DILocation(line: 3109, column: 15, scope: !11169)
!11188 = !DILocation(line: 3109, column: 23, scope: !11169)
!11189 = !DILocation(line: 3109, column: 29, scope: !11169)
!11190 = !DILocation(line: 3109, column: 2, scope: !11169)
!11191 = !DILocation(line: 3110, column: 16, scope: !11169)
!11192 = !DILocation(line: 3110, column: 22, scope: !11169)
!11193 = !DILocation(line: 3110, column: 12, scope: !11169)
!11194 = !DILocation(line: 3110, column: 10, scope: !11169)
!11195 = !DILocation(line: 3111, column: 6, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 3111, column: 6)
!11197 = !DILocation(line: 3111, column: 14, scope: !11196)
!11198 = !DILocation(line: 3111, column: 6, scope: !11169)
!11199 = !DILocation(line: 3112, column: 3, scope: !11196)
!11200 = !DILocation(line: 3113, column: 2, scope: !11169)
!11201 = !DILocation(line: 3114, column: 1, scope: !11169)
!11202 = distinct !DISubprogram(name: "inb", scope: !11203, file: !11203, line: 334, type: !11204, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11203 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!11204 = !DISubroutineType(types: !11205)
!11205 = !{!1055, !181}
!11206 = !DILocalVariable(name: "port", arg: 1, scope: !11202, file: !11203, line: 334, type: !181)
!11207 = !DILocation(line: 334, column: 1, scope: !11202)
!11208 = !DILocalVariable(name: "value", scope: !11202, file: !11203, line: 334, type: !1055)
!11209 = !{i32 -2143507466}
!11210 = distinct !DISubprogram(name: "outb", scope: !11203, file: !11203, line: 334, type: !11211, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11211 = !DISubroutineType(types: !11212)
!11212 = !{null, !1055, !181}
!11213 = !DILocalVariable(name: "value", arg: 1, scope: !11210, file: !11203, line: 334, type: !1055)
!11214 = !DILocation(line: 334, column: 1, scope: !11210)
!11215 = !DILocalVariable(name: "port", arg: 2, scope: !11210, file: !11203, line: 334, type: !181)
!11216 = !{i32 -2143507668}
!11217 = distinct !DISubprogram(name: "ata_pci_bmdma_init", scope: !3, file: !3, line: 3138, type: !6486, scopeLine: 3139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11218 = !DILocalVariable(name: "host", arg: 1, scope: !11217, file: !3, line: 3138, type: !6488)
!11219 = !DILocation(line: 3138, column: 42, scope: !11217)
!11220 = !DILocalVariable(name: "gdev", scope: !11217, file: !3, line: 3140, type: !1068)
!11221 = !DILocation(line: 3140, column: 17, scope: !11217)
!11222 = !DILocation(line: 3140, column: 24, scope: !11217)
!11223 = !DILocation(line: 3140, column: 30, scope: !11217)
!11224 = !DILocalVariable(name: "pdev", scope: !11217, file: !3, line: 3141, type: !969)
!11225 = !DILocation(line: 3141, column: 18, scope: !11217)
!11226 = !DILocalVariable(name: "__mptr", scope: !11227, file: !3, line: 3141, type: !968)
!11227 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3141, column: 25)
!11228 = !DILocation(line: 3141, column: 25, scope: !11227)
!11229 = !DILocation(line: 3141, column: 25, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 3141, column: 25)
!11231 = !DILocalVariable(name: "i", scope: !11217, file: !3, line: 3142, type: !181)
!11232 = !DILocation(line: 3142, column: 6, scope: !11217)
!11233 = !DILocalVariable(name: "rc", scope: !11217, file: !3, line: 3142, type: !181)
!11234 = !DILocation(line: 3142, column: 9, scope: !11217)
!11235 = !DILocation(line: 3145, column: 6, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3145, column: 6)
!11237 = !DILocation(line: 3145, column: 34, scope: !11236)
!11238 = !DILocation(line: 3145, column: 6, scope: !11217)
!11239 = !DILocation(line: 3146, column: 19, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 3145, column: 40)
!11241 = !DILocation(line: 3146, column: 3, scope: !11240)
!11242 = !DILocation(line: 3147, column: 3, scope: !11240)
!11243 = !DILocation(line: 3156, column: 34, scope: !11217)
!11244 = !DILocation(line: 3156, column: 40, scope: !11217)
!11245 = !DILocation(line: 3156, column: 7, scope: !11217)
!11246 = !DILocation(line: 3156, column: 5, scope: !11217)
!11247 = !DILocation(line: 3157, column: 6, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3157, column: 6)
!11249 = !DILocation(line: 3157, column: 6, scope: !11217)
!11250 = !DILocation(line: 3158, column: 19, scope: !11248)
!11251 = !DILocation(line: 3158, column: 3, scope: !11248)
!11252 = !DILocation(line: 3161, column: 26, scope: !11217)
!11253 = !DILocation(line: 3161, column: 58, scope: !11217)
!11254 = !DILocation(line: 3161, column: 40, scope: !11217)
!11255 = !DILocation(line: 3161, column: 7, scope: !11217)
!11256 = !DILocation(line: 3161, column: 5, scope: !11217)
!11257 = !DILocation(line: 3162, column: 6, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3162, column: 6)
!11259 = !DILocation(line: 3162, column: 6, scope: !11217)
!11260 = !DILocation(line: 3163, column: 19, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 3162, column: 10)
!11262 = !DILocation(line: 3163, column: 3, scope: !11261)
!11263 = !DILocation(line: 3164, column: 3, scope: !11261)
!11264 = !DILocation(line: 3166, column: 33, scope: !11217)
!11265 = !DILocation(line: 3166, column: 16, scope: !11217)
!11266 = !DILocation(line: 3166, column: 2, scope: !11217)
!11267 = !DILocation(line: 3166, column: 8, scope: !11217)
!11268 = !DILocation(line: 3166, column: 14, scope: !11217)
!11269 = !DILocation(line: 3168, column: 9, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 3168, column: 2)
!11271 = !DILocation(line: 3168, column: 7, scope: !11270)
!11272 = !DILocation(line: 3168, column: 14, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11270, file: !3, line: 3168, column: 2)
!11274 = !DILocation(line: 3168, column: 16, scope: !11273)
!11275 = !DILocation(line: 3168, column: 2, scope: !11270)
!11276 = !DILocalVariable(name: "ap", scope: !11277, file: !3, line: 3169, type: !5951)
!11277 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 3168, column: 26)
!11278 = !DILocation(line: 3169, column: 20, scope: !11277)
!11279 = !DILocation(line: 3169, column: 25, scope: !11277)
!11280 = !DILocation(line: 3169, column: 31, scope: !11277)
!11281 = !DILocation(line: 3169, column: 37, scope: !11277)
!11282 = !DILocalVariable(name: "bmdma", scope: !11277, file: !3, line: 3170, type: !968)
!11283 = !DILocation(line: 3170, column: 17, scope: !11277)
!11284 = !DILocation(line: 3170, column: 25, scope: !11277)
!11285 = !DILocation(line: 3170, column: 31, scope: !11277)
!11286 = !DILocation(line: 3170, column: 46, scope: !11277)
!11287 = !DILocation(line: 3170, column: 44, scope: !11277)
!11288 = !DILocation(line: 3170, column: 40, scope: !11277)
!11289 = !DILocation(line: 3172, column: 25, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 3172, column: 7)
!11291 = !DILocation(line: 3172, column: 7, scope: !11290)
!11292 = !DILocation(line: 3172, column: 7, scope: !11277)
!11293 = !DILocation(line: 3173, column: 4, scope: !11290)
!11294 = !DILocation(line: 3175, column: 27, scope: !11277)
!11295 = !DILocation(line: 3175, column: 3, scope: !11277)
!11296 = !DILocation(line: 3175, column: 7, scope: !11277)
!11297 = !DILocation(line: 3175, column: 14, scope: !11277)
!11298 = !DILocation(line: 3175, column: 25, scope: !11277)
!11299 = !DILocation(line: 3176, column: 10, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 3176, column: 7)
!11301 = !DILocation(line: 3176, column: 14, scope: !11300)
!11302 = !DILocation(line: 3176, column: 20, scope: !11300)
!11303 = !DILocation(line: 3176, column: 45, scope: !11300)
!11304 = !DILocation(line: 3177, column: 16, scope: !11300)
!11305 = !DILocation(line: 3177, column: 22, scope: !11300)
!11306 = !DILocation(line: 3177, column: 8, scope: !11300)
!11307 = !DILocation(line: 3177, column: 27, scope: !11300)
!11308 = !DILocation(line: 3176, column: 7, scope: !11277)
!11309 = !DILocation(line: 3178, column: 4, scope: !11300)
!11310 = !DILocation(line: 3178, column: 10, scope: !11300)
!11311 = !DILocation(line: 3178, column: 16, scope: !11300)
!11312 = !DILocation(line: 3180, column: 17, scope: !11277)
!11313 = !DILocation(line: 3181, column: 27, scope: !11277)
!11314 = !DILocation(line: 3181, column: 61, scope: !11277)
!11315 = !DILocation(line: 3181, column: 59, scope: !11277)
!11316 = !DILocation(line: 3181, column: 57, scope: !11277)
!11317 = !DILocation(line: 3181, column: 55, scope: !11277)
!11318 = !DILocation(line: 3180, column: 3, scope: !11277)
!11319 = !DILocation(line: 3182, column: 2, scope: !11277)
!11320 = !DILocation(line: 3168, column: 22, scope: !11273)
!11321 = !DILocation(line: 3168, column: 2, scope: !11273)
!11322 = distinct !{!11322, !11275, !11323}
!11323 = !DILocation(line: 3182, column: 2, scope: !11270)
!11324 = !DILocation(line: 3183, column: 1, scope: !11217)
!11325 = distinct !DISubprogram(name: "ata_bmdma_nodma", scope: !3, file: !3, line: 3117, type: !11326, scopeLine: 3118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{null, !6488, !1006}
!11328 = !DILocalVariable(name: "host", arg: 1, scope: !11325, file: !3, line: 3117, type: !6488)
!11329 = !DILocation(line: 3117, column: 46, scope: !11325)
!11330 = !DILocalVariable(name: "reason", arg: 2, scope: !11325, file: !3, line: 3117, type: !1006)
!11331 = !DILocation(line: 3117, column: 64, scope: !11325)
!11332 = !DILocalVariable(name: "i", scope: !11325, file: !3, line: 3119, type: !181)
!11333 = !DILocation(line: 3119, column: 6, scope: !11325)
!11334 = !DILocation(line: 3121, column: 2, scope: !11325)
!11335 = !DILocation(line: 3123, column: 9, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 3123, column: 2)
!11337 = !DILocation(line: 3123, column: 7, scope: !11336)
!11338 = !DILocation(line: 3123, column: 14, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 3123, column: 2)
!11340 = !DILocation(line: 3123, column: 16, scope: !11339)
!11341 = !DILocation(line: 3123, column: 2, scope: !11336)
!11342 = !DILocation(line: 3124, column: 3, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11339, file: !3, line: 3123, column: 26)
!11344 = !DILocation(line: 3124, column: 9, scope: !11343)
!11345 = !DILocation(line: 3124, column: 15, scope: !11343)
!11346 = !DILocation(line: 3124, column: 19, scope: !11343)
!11347 = !DILocation(line: 3124, column: 30, scope: !11343)
!11348 = !DILocation(line: 3125, column: 3, scope: !11343)
!11349 = !DILocation(line: 3125, column: 9, scope: !11343)
!11350 = !DILocation(line: 3125, column: 15, scope: !11343)
!11351 = !DILocation(line: 3125, column: 19, scope: !11343)
!11352 = !DILocation(line: 3125, column: 29, scope: !11343)
!11353 = !DILocation(line: 3126, column: 2, scope: !11343)
!11354 = !DILocation(line: 3123, column: 22, scope: !11339)
!11355 = !DILocation(line: 3123, column: 2, scope: !11339)
!11356 = distinct !{!11356, !11341, !11357}
!11357 = !DILocation(line: 3126, column: 2, scope: !11336)
!11358 = !DILocation(line: 3127, column: 1, scope: !11325)
!11359 = distinct !DISubprogram(name: "dma_set_mask_and_coherent", scope: !11148, file: !11148, line: 420, type: !11360, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11360 = !DISubroutineType(types: !11361)
!11361 = !{!181, !1068, !999}
!11362 = !DILocalVariable(name: "dev", arg: 1, scope: !11359, file: !11148, line: 420, type: !1068)
!11363 = !DILocation(line: 420, column: 60, scope: !11359)
!11364 = !DILocalVariable(name: "mask", arg: 2, scope: !11359, file: !11148, line: 420, type: !999)
!11365 = !DILocation(line: 420, column: 69, scope: !11359)
!11366 = !DILocalVariable(name: "rc", scope: !11359, file: !11148, line: 422, type: !181)
!11367 = !DILocation(line: 422, column: 6, scope: !11359)
!11368 = !DILocation(line: 422, column: 24, scope: !11359)
!11369 = !DILocation(line: 422, column: 29, scope: !11359)
!11370 = !DILocation(line: 422, column: 11, scope: !11359)
!11371 = !DILocation(line: 423, column: 6, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11359, file: !11148, line: 423, column: 6)
!11373 = !DILocation(line: 423, column: 9, scope: !11372)
!11374 = !DILocation(line: 423, column: 6, scope: !11359)
!11375 = !DILocation(line: 424, column: 25, scope: !11372)
!11376 = !DILocation(line: 424, column: 30, scope: !11372)
!11377 = !DILocation(line: 424, column: 3, scope: !11372)
!11378 = !DILocation(line: 425, column: 9, scope: !11359)
!11379 = !DILocation(line: 425, column: 2, scope: !11359)
!11380 = distinct !DISubprogram(name: "ata_pci_bmdma_prepare_host", scope: !3, file: !3, line: 3201, type: !9969, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11381 = !DILocalVariable(name: "pdev", arg: 1, scope: !11380, file: !3, line: 3201, type: !969)
!11382 = !DILocation(line: 3201, column: 48, scope: !11380)
!11383 = !DILocalVariable(name: "ppi", arg: 2, scope: !11380, file: !3, line: 3202, type: !9971)
!11384 = !DILocation(line: 3202, column: 48, scope: !11380)
!11385 = !DILocalVariable(name: "r_host", arg: 3, scope: !11380, file: !3, line: 3203, type: !9984)
!11386 = !DILocation(line: 3203, column: 29, scope: !11380)
!11387 = !DILocalVariable(name: "rc", scope: !11380, file: !3, line: 3205, type: !181)
!11388 = !DILocation(line: 3205, column: 6, scope: !11380)
!11389 = !DILocation(line: 3207, column: 32, scope: !11380)
!11390 = !DILocation(line: 3207, column: 38, scope: !11380)
!11391 = !DILocation(line: 3207, column: 43, scope: !11380)
!11392 = !DILocation(line: 3207, column: 7, scope: !11380)
!11393 = !DILocation(line: 3207, column: 5, scope: !11380)
!11394 = !DILocation(line: 3208, column: 6, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11380, file: !3, line: 3208, column: 6)
!11396 = !DILocation(line: 3208, column: 6, scope: !11380)
!11397 = !DILocation(line: 3209, column: 10, scope: !11395)
!11398 = !DILocation(line: 3209, column: 3, scope: !11395)
!11399 = !DILocation(line: 3211, column: 22, scope: !11380)
!11400 = !DILocation(line: 3211, column: 21, scope: !11380)
!11401 = !DILocation(line: 3211, column: 2, scope: !11380)
!11402 = !DILocation(line: 3212, column: 2, scope: !11380)
!11403 = !DILocation(line: 3213, column: 1, scope: !11380)
!11404 = distinct !DISubprogram(name: "ata_pci_bmdma_init_one", scope: !3, file: !3, line: 3233, type: !10251, scopeLine: 3237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11405 = !DILocalVariable(name: "pdev", arg: 1, scope: !11404, file: !3, line: 3233, type: !969)
!11406 = !DILocation(line: 3233, column: 44, scope: !11404)
!11407 = !DILocalVariable(name: "ppi", arg: 2, scope: !11404, file: !3, line: 3234, type: !9971)
!11408 = !DILocation(line: 3234, column: 44, scope: !11404)
!11409 = !DILocalVariable(name: "sht", arg: 3, scope: !11404, file: !3, line: 3235, type: !5969)
!11410 = !DILocation(line: 3235, column: 34, scope: !11404)
!11411 = !DILocalVariable(name: "host_priv", arg: 4, scope: !11404, file: !3, line: 3235, type: !968)
!11412 = !DILocation(line: 3235, column: 45, scope: !11404)
!11413 = !DILocalVariable(name: "hflags", arg: 5, scope: !11404, file: !3, line: 3236, type: !181)
!11414 = !DILocation(line: 3236, column: 11, scope: !11404)
!11415 = !DILocation(line: 3238, column: 26, scope: !11404)
!11416 = !DILocation(line: 3238, column: 32, scope: !11404)
!11417 = !DILocation(line: 3238, column: 37, scope: !11404)
!11418 = !DILocation(line: 3238, column: 42, scope: !11404)
!11419 = !DILocation(line: 3238, column: 53, scope: !11404)
!11420 = !DILocation(line: 3238, column: 9, scope: !11404)
!11421 = !DILocation(line: 3238, column: 2, scope: !11404)
!11422 = distinct !DISubprogram(name: "ata_sff_port_init", scope: !3, file: !3, line: 3255, type: !6435, scopeLine: 3256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11423 = !DILocalVariable(name: "ap", arg: 1, scope: !11422, file: !3, line: 3255, type: !5951)
!11424 = !DILocation(line: 3255, column: 41, scope: !11422)
!11425 = !DILocation(line: 3257, column: 2, scope: !11422)
!11426 = !DILocation(line: 3257, column: 2, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 3257, column: 2)
!11428 = !DILocation(line: 3257, column: 2, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 3257, column: 2)
!11430 = !DILocation(line: 3258, column: 2, scope: !11422)
!11431 = !DILocation(line: 3258, column: 6, scope: !11422)
!11432 = !DILocation(line: 3258, column: 10, scope: !11422)
!11433 = !DILocation(line: 3259, column: 2, scope: !11422)
!11434 = !DILocation(line: 3259, column: 6, scope: !11422)
!11435 = !DILocation(line: 3259, column: 15, scope: !11422)
!11436 = !DILocation(line: 3260, column: 1, scope: !11422)
!11437 = distinct !DISubprogram(name: "__init_work", scope: !880, file: !880, line: 215, type: !11438, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11438 = !DISubroutineType(types: !11439)
!11439 = !{null, !2905, !181}
!11440 = !DILocalVariable(name: "work", arg: 1, scope: !11437, file: !880, line: 215, type: !2905)
!11441 = !DILocation(line: 215, column: 52, scope: !11437)
!11442 = !DILocalVariable(name: "onstack", arg: 2, scope: !11437, file: !880, line: 215, type: !181)
!11443 = !DILocation(line: 215, column: 62, scope: !11437)
!11444 = !DILocation(line: 215, column: 73, scope: !11437)
!11445 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !11446, file: !11446, line: 33, type: !11447, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11446 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!11447 = !DISubroutineType(types: !11448)
!11448 = !{null, !978}
!11449 = !DILocalVariable(name: "list", arg: 1, scope: !11445, file: !11446, line: 33, type: !978)
!11450 = !DILocation(line: 33, column: 53, scope: !11445)
!11451 = !DILocation(line: 35, column: 2, scope: !11445)
!11452 = !DILocation(line: 35, column: 2, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11445, file: !11446, line: 35, column: 2)
!11454 = !DILocation(line: 35, column: 2, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11453, file: !11446, line: 35, column: 2)
!11456 = !DILocation(line: 35, column: 2, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !11446, line: 35, column: 2)
!11458 = !DILocation(line: 36, column: 15, scope: !11445)
!11459 = !DILocation(line: 36, column: 2, scope: !11445)
!11460 = !DILocation(line: 36, column: 8, scope: !11445)
!11461 = !DILocation(line: 36, column: 13, scope: !11445)
!11462 = !DILocation(line: 37, column: 1, scope: !11445)
!11463 = distinct !DISubprogram(name: "ata_sff_pio_task", scope: !3, file: !3, line: 1268, type: !2903, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11464 = !DILocation(line: 402, column: 57, scope: !8925, inlinedAt: !11465)
!11465 = distinct !DILocation(line: 1324, column: 2, scope: !11463)
!11466 = !DILocation(line: 377, column: 55, scope: !8931, inlinedAt: !11467)
!11467 = distinct !DILocation(line: 1301, column: 3, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 1298, column: 25)
!11469 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 1298, column: 6)
!11470 = !DILocation(line: 402, column: 57, scope: !8925, inlinedAt: !11471)
!11471 = distinct !DILocation(line: 1299, column: 3, scope: !11468)
!11472 = !DILocation(line: 377, column: 55, scope: !8931, inlinedAt: !11473)
!11473 = distinct !DILocation(line: 1277, column: 2, scope: !11463)
!11474 = !DILocalVariable(name: "work", arg: 1, scope: !11463, file: !3, line: 1268, type: !2905)
!11475 = !DILocation(line: 1268, column: 50, scope: !11463)
!11476 = !DILocalVariable(name: "ap", scope: !11463, file: !3, line: 1270, type: !5951)
!11477 = !DILocation(line: 1270, column: 19, scope: !11463)
!11478 = !DILocalVariable(name: "__mptr", scope: !11479, file: !3, line: 1271, type: !968)
!11479 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 1271, column: 3)
!11480 = !DILocation(line: 1271, column: 3, scope: !11479)
!11481 = !DILocation(line: 1271, column: 3, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 1271, column: 3)
!11483 = !DILocalVariable(name: "link", scope: !11463, file: !3, line: 1272, type: !6179)
!11484 = !DILocation(line: 1272, column: 19, scope: !11463)
!11485 = !DILocation(line: 1272, column: 26, scope: !11463)
!11486 = !DILocation(line: 1272, column: 30, scope: !11463)
!11487 = !DILocalVariable(name: "qc", scope: !11463, file: !3, line: 1273, type: !6170)
!11488 = !DILocation(line: 1273, column: 25, scope: !11463)
!11489 = !DILocalVariable(name: "status", scope: !11463, file: !3, line: 1274, type: !2256)
!11490 = !DILocation(line: 1274, column: 5, scope: !11463)
!11491 = !DILocalVariable(name: "poll_next", scope: !11463, file: !3, line: 1275, type: !181)
!11492 = !DILocation(line: 1275, column: 6, scope: !11463)
!11493 = !DILocation(line: 1277, column: 16, scope: !11463)
!11494 = !DILocation(line: 1277, column: 20, scope: !11463)
!11495 = !DILocation(line: 379, column: 2, scope: !8942, inlinedAt: !11473)
!11496 = !DILocation(line: 379, column: 2, scope: !8945, inlinedAt: !11473)
!11497 = !DILocation(line: 379, column: 2, scope: !8948, inlinedAt: !11473)
!11498 = !DILocation(line: 1279, column: 2, scope: !11463)
!11499 = !DILocation(line: 1279, column: 2, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 1279, column: 2)
!11501 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 1279, column: 2)
!11502 = !DILocation(line: 1279, column: 2, scope: !11501)
!11503 = !DILocation(line: 1279, column: 2, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11500, file: !3, line: 1279, column: 2)
!11505 = !DILocation(line: 1279, column: 2, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1279, column: 2)
!11507 = !DILocation(line: 1279, column: 2, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1279, column: 2)
!11509 = !{i32 -2140270714, i32 -2140270685, i32 -2140270639, i32 -2140270581, i32 -2140270527, i32 -2140270473, i32 -2140270418, i32 -2140270387}
!11510 = !DILocation(line: 1279, column: 2, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 1279, column: 2)
!11512 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1279, column: 2)
!11513 = !{i32 -2140269939, i32 -2140269932, i32 -2140269878, i32 -2140269847, i32 -2140269817}
!11514 = !DILocation(line: 1279, column: 2, scope: !11512)
!11515 = !DILocation(line: 1281, column: 23, scope: !11463)
!11516 = !DILocation(line: 1281, column: 27, scope: !11463)
!11517 = !DILocation(line: 1281, column: 33, scope: !11463)
!11518 = !DILocation(line: 1281, column: 7, scope: !11463)
!11519 = !DILocation(line: 1281, column: 5, scope: !11463)
!11520 = !DILocation(line: 1282, column: 7, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 1282, column: 6)
!11522 = !DILocation(line: 1282, column: 6, scope: !11463)
!11523 = !DILocation(line: 1283, column: 3, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 1282, column: 11)
!11525 = !DILocation(line: 1283, column: 7, scope: !11524)
!11526 = !DILocation(line: 1283, column: 25, scope: !11524)
!11527 = !DILocation(line: 1284, column: 3, scope: !11524)
!11528 = !DILabel(scope: !11463, name: "fsm_start", file: !3, line: 1287)
!11529 = !DILocation(line: 1287, column: 1, scope: !11463)
!11530 = !DILocalVariable(name: "__ret_warn_on", scope: !11531, file: !3, line: 1288, type: !181)
!11531 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 1288, column: 2)
!11532 = !DILocation(line: 1288, column: 2, scope: !11531)
!11533 = !DILocation(line: 1288, column: 2, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 1288, column: 2)
!11535 = !DILocation(line: 1288, column: 2, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11534, file: !3, line: 1288, column: 2)
!11537 = !DILocation(line: 1288, column: 2, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 1288, column: 2)
!11539 = !DILocation(line: 1288, column: 2, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 1288, column: 2)
!11541 = !{i32 -2140269229, i32 -2140269200, i32 -2140269154, i32 -2140269096, i32 -2140269042, i32 -2140268988, i32 -2140268933, i32 -2140268902}
!11542 = !DILocation(line: 1288, column: 2, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 1288, column: 2)
!11544 = !{i32 -2140268484, i32 -2140268477, i32 -2140268425, i32 -2140268394, i32 -2140268364}
!11545 = !DILocation(line: 1288, column: 2, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 1288, column: 2)
!11547 = !DILocation(line: 1297, column: 29, scope: !11463)
!11548 = !DILocation(line: 1297, column: 11, scope: !11463)
!11549 = !DILocation(line: 1297, column: 9, scope: !11463)
!11550 = !DILocation(line: 1298, column: 6, scope: !11469)
!11551 = !DILocation(line: 1298, column: 13, scope: !11469)
!11552 = !DILocation(line: 1298, column: 6, scope: !11463)
!11553 = !DILocation(line: 1299, column: 19, scope: !11468)
!11554 = !DILocation(line: 1299, column: 23, scope: !11468)
!11555 = !DILocation(line: 404, column: 2, scope: !8955, inlinedAt: !11471)
!11556 = !DILocation(line: 404, column: 2, scope: !8958, inlinedAt: !11471)
!11557 = !DILocation(line: 404, column: 2, scope: !8961, inlinedAt: !11471)
!11558 = !DILocation(line: 1300, column: 14, scope: !11468)
!11559 = !DILocation(line: 1300, column: 3, scope: !11468)
!11560 = !DILocation(line: 1301, column: 17, scope: !11468)
!11561 = !DILocation(line: 1301, column: 21, scope: !11468)
!11562 = !DILocation(line: 379, column: 2, scope: !8942, inlinedAt: !11467)
!11563 = !DILocation(line: 379, column: 2, scope: !8945, inlinedAt: !11467)
!11564 = !DILocation(line: 379, column: 2, scope: !8948, inlinedAt: !11467)
!11565 = !DILocation(line: 1303, column: 30, scope: !11468)
!11566 = !DILocation(line: 1303, column: 12, scope: !11468)
!11567 = !DILocation(line: 1303, column: 10, scope: !11468)
!11568 = !DILocation(line: 1304, column: 7, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1304, column: 7)
!11570 = !DILocation(line: 1304, column: 14, scope: !11569)
!11571 = !DILocation(line: 1304, column: 7, scope: !11468)
!11572 = !DILocation(line: 1305, column: 27, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 1304, column: 26)
!11574 = !DILocation(line: 1305, column: 4, scope: !11573)
!11575 = !DILocation(line: 1306, column: 4, scope: !11573)
!11576 = !DILocation(line: 1308, column: 2, scope: !11468)
!11577 = !DILocation(line: 1314, column: 2, scope: !11463)
!11578 = !DILocation(line: 1314, column: 6, scope: !11463)
!11579 = !DILocation(line: 1314, column: 24, scope: !11463)
!11580 = !DILocation(line: 1316, column: 31, scope: !11463)
!11581 = !DILocation(line: 1316, column: 35, scope: !11463)
!11582 = !DILocation(line: 1316, column: 39, scope: !11463)
!11583 = !DILocation(line: 1316, column: 14, scope: !11463)
!11584 = !DILocation(line: 1316, column: 12, scope: !11463)
!11585 = !DILocation(line: 1321, column: 6, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 1321, column: 6)
!11587 = !DILocation(line: 1321, column: 6, scope: !11463)
!11588 = !DILocation(line: 1322, column: 3, scope: !11586)
!11589 = !DILabel(scope: !11463, name: "out_unlock", file: !3, line: 1323)
!11590 = !DILocation(line: 1323, column: 1, scope: !11463)
!11591 = !DILocation(line: 1324, column: 18, scope: !11463)
!11592 = !DILocation(line: 1324, column: 22, scope: !11463)
!11593 = !DILocation(line: 404, column: 2, scope: !8955, inlinedAt: !11465)
!11594 = !DILocation(line: 404, column: 2, scope: !8958, inlinedAt: !11465)
!11595 = !DILocation(line: 404, column: 2, scope: !8961, inlinedAt: !11465)
!11596 = !DILocation(line: 1325, column: 1, scope: !11463)
!11597 = distinct !DISubprogram(name: "ata_sff_init", scope: !3, file: !3, line: 3262, type: !11598, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{!181}
!11600 = !DILocation(line: 3264, column: 15, scope: !11597)
!11601 = !DILocation(line: 3264, column: 13, scope: !11597)
!11602 = !DILocation(line: 3265, column: 7, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 3265, column: 6)
!11604 = !DILocation(line: 3265, column: 6, scope: !11597)
!11605 = !DILocation(line: 3266, column: 3, scope: !11603)
!11606 = !DILocation(line: 3268, column: 2, scope: !11597)
!11607 = !DILocation(line: 3269, column: 1, scope: !11597)
!11608 = distinct !DISubprogram(name: "ata_sff_exit", scope: !3, file: !3, line: 3271, type: !2781, scopeLine: 3272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11609 = !DILocation(line: 3273, column: 20, scope: !11608)
!11610 = !DILocation(line: 3273, column: 2, scope: !11608)
!11611 = !DILocation(line: 3274, column: 1, scope: !11608)
!11612 = distinct !DISubprogram(name: "ata_check_ready", scope: !152, file: !152, line: 1823, type: !11613, scopeLine: 1824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11613 = !DISubroutineType(types: !11614)
!11614 = !{!181, !2256}
!11615 = !DILocalVariable(name: "status", arg: 1, scope: !11612, file: !152, line: 1823, type: !2256)
!11616 = !DILocation(line: 1823, column: 38, scope: !11612)
!11617 = !DILocation(line: 1825, column: 8, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11612, file: !152, line: 1825, column: 6)
!11619 = !DILocation(line: 1825, column: 15, scope: !11618)
!11620 = !DILocation(line: 1825, column: 6, scope: !11612)
!11621 = !DILocation(line: 1826, column: 3, scope: !11618)
!11622 = !DILocation(line: 1829, column: 6, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11612, file: !152, line: 1829, column: 6)
!11624 = !DILocation(line: 1829, column: 13, scope: !11623)
!11625 = !DILocation(line: 1829, column: 6, scope: !11612)
!11626 = !DILocation(line: 1830, column: 3, scope: !11623)
!11627 = !DILocation(line: 1832, column: 2, scope: !11612)
!11628 = !DILocation(line: 1833, column: 1, scope: !11612)
!11629 = distinct !DISubprogram(name: "ata_is_atapi", scope: !152, file: !152, line: 1031, type: !8734, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11630 = !DILocalVariable(name: "prot", arg: 1, scope: !11629, file: !152, line: 1031, type: !2256)
!11631 = !DILocation(line: 1031, column: 36, scope: !11629)
!11632 = !DILocation(line: 1033, column: 9, scope: !11629)
!11633 = !DILocation(line: 1033, column: 14, scope: !11629)
!11634 = !DILocation(line: 1033, column: 2, scope: !11629)
!11635 = distinct !DISubprogram(name: "is_multi_taskfile", scope: !152, file: !152, line: 1056, type: !11636, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11636 = !DISubroutineType(types: !11637)
!11637 = !{!181, !6427}
!11638 = !DILocalVariable(name: "tf", arg: 1, scope: !11635, file: !152, line: 1056, type: !6427)
!11639 = !DILocation(line: 1056, column: 58, scope: !11635)
!11640 = !DILocation(line: 1058, column: 10, scope: !11635)
!11641 = !DILocation(line: 1058, column: 14, scope: !11635)
!11642 = !DILocation(line: 1058, column: 22, scope: !11635)
!11643 = !DILocation(line: 1058, column: 45, scope: !11635)
!11644 = !DILocation(line: 1059, column: 10, scope: !11635)
!11645 = !DILocation(line: 1059, column: 14, scope: !11635)
!11646 = !DILocation(line: 1059, column: 22, scope: !11635)
!11647 = !DILocation(line: 1059, column: 46, scope: !11635)
!11648 = !DILocation(line: 1060, column: 10, scope: !11635)
!11649 = !DILocation(line: 1060, column: 14, scope: !11635)
!11650 = !DILocation(line: 1060, column: 22, scope: !11635)
!11651 = !DILocation(line: 1060, column: 49, scope: !11635)
!11652 = !DILocation(line: 1061, column: 10, scope: !11635)
!11653 = !DILocation(line: 1061, column: 14, scope: !11635)
!11654 = !DILocation(line: 1061, column: 22, scope: !11635)
!11655 = !DILocation(line: 1061, column: 50, scope: !11635)
!11656 = !DILocation(line: 1062, column: 10, scope: !11635)
!11657 = !DILocation(line: 1062, column: 14, scope: !11635)
!11658 = !DILocation(line: 1062, column: 22, scope: !11635)
!11659 = !DILocation(line: 1058, column: 2, scope: !11635)
!11660 = distinct !DISubprogram(name: "ata_pio_sector", scope: !3, file: !3, line: 649, type: !6388, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11661 = !DILocalVariable(name: "page", arg: 1, scope: !11662, file: !929, line: 342, type: !1614)
!11662 = distinct !DISubprogram(name: "PageSlab", scope: !929, file: !929, line: 342, type: !1691, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11663 = !DILocation(line: 342, column: 1, scope: !11662, inlinedAt: !11664)
!11664 = distinct !DILocation(line: 678, column: 20, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 678, column: 6)
!11666 = !DILocalVariable(name: "qc", arg: 1, scope: !11660, file: !3, line: 649, type: !6170)
!11667 = !DILocation(line: 649, column: 51, scope: !11660)
!11668 = !DILocalVariable(name: "do_write", scope: !11660, file: !3, line: 651, type: !181)
!11669 = !DILocation(line: 651, column: 6, scope: !11660)
!11670 = !DILocation(line: 651, column: 18, scope: !11660)
!11671 = !DILocation(line: 651, column: 22, scope: !11660)
!11672 = !DILocation(line: 651, column: 25, scope: !11660)
!11673 = !DILocation(line: 651, column: 31, scope: !11660)
!11674 = !DILocation(line: 651, column: 17, scope: !11660)
!11675 = !DILocalVariable(name: "ap", scope: !11660, file: !3, line: 652, type: !5951)
!11676 = !DILocation(line: 652, column: 19, scope: !11660)
!11677 = !DILocation(line: 652, column: 24, scope: !11660)
!11678 = !DILocation(line: 652, column: 28, scope: !11660)
!11679 = !DILocalVariable(name: "page", scope: !11660, file: !3, line: 653, type: !1614)
!11680 = !DILocation(line: 653, column: 15, scope: !11660)
!11681 = !DILocalVariable(name: "offset", scope: !11660, file: !3, line: 654, type: !7)
!11682 = !DILocation(line: 654, column: 15, scope: !11660)
!11683 = !DILocalVariable(name: "buf", scope: !11660, file: !3, line: 655, type: !6535)
!11684 = !DILocation(line: 655, column: 17, scope: !11660)
!11685 = !DILocation(line: 657, column: 7, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 657, column: 6)
!11687 = !DILocation(line: 657, column: 11, scope: !11686)
!11688 = !DILocation(line: 657, column: 6, scope: !11660)
!11689 = !DILocation(line: 658, column: 18, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11686, file: !3, line: 657, column: 18)
!11691 = !DILocation(line: 658, column: 22, scope: !11690)
!11692 = !DILocation(line: 658, column: 3, scope: !11690)
!11693 = !DILocation(line: 658, column: 7, scope: !11690)
!11694 = !DILocation(line: 658, column: 16, scope: !11690)
!11695 = !DILocation(line: 659, column: 3, scope: !11690)
!11696 = !DILocation(line: 661, column: 6, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 661, column: 6)
!11698 = !DILocation(line: 661, column: 10, scope: !11697)
!11699 = !DILocation(line: 661, column: 22, scope: !11697)
!11700 = !DILocation(line: 661, column: 26, scope: !11697)
!11701 = !DILocation(line: 661, column: 35, scope: !11697)
!11702 = !DILocation(line: 661, column: 39, scope: !11697)
!11703 = !DILocation(line: 661, column: 33, scope: !11697)
!11704 = !DILocation(line: 661, column: 19, scope: !11697)
!11705 = !DILocation(line: 661, column: 6, scope: !11660)
!11706 = !DILocation(line: 662, column: 3, scope: !11697)
!11707 = !DILocation(line: 662, column: 7, scope: !11697)
!11708 = !DILocation(line: 662, column: 22, scope: !11697)
!11709 = !DILocation(line: 664, column: 17, scope: !11660)
!11710 = !DILocation(line: 664, column: 21, scope: !11660)
!11711 = !DILocation(line: 664, column: 9, scope: !11660)
!11712 = !DILocation(line: 664, column: 7, scope: !11660)
!11713 = !DILocation(line: 665, column: 11, scope: !11660)
!11714 = !DILocation(line: 665, column: 15, scope: !11660)
!11715 = !DILocation(line: 665, column: 22, scope: !11660)
!11716 = !DILocation(line: 665, column: 31, scope: !11660)
!11717 = !DILocation(line: 665, column: 35, scope: !11660)
!11718 = !DILocation(line: 665, column: 29, scope: !11660)
!11719 = !DILocation(line: 665, column: 9, scope: !11660)
!11720 = !DILocation(line: 668, column: 9, scope: !11660)
!11721 = !DILocation(line: 668, column: 7, scope: !11660)
!11722 = !DILocation(line: 669, column: 9, scope: !11660)
!11723 = !DILocation(line: 674, column: 20, scope: !11660)
!11724 = !DILocation(line: 674, column: 8, scope: !11660)
!11725 = !DILocation(line: 674, column: 6, scope: !11660)
!11726 = !DILocation(line: 675, column: 2, scope: !11660)
!11727 = !DILocation(line: 675, column: 6, scope: !11660)
!11728 = !DILocation(line: 675, column: 11, scope: !11660)
!11729 = !DILocation(line: 675, column: 25, scope: !11660)
!11730 = !DILocation(line: 675, column: 29, scope: !11660)
!11731 = !DILocation(line: 675, column: 35, scope: !11660)
!11732 = !DILocation(line: 675, column: 33, scope: !11660)
!11733 = !DILocation(line: 675, column: 43, scope: !11660)
!11734 = !DILocation(line: 675, column: 47, scope: !11660)
!11735 = !DILocation(line: 675, column: 58, scope: !11660)
!11736 = !DILocation(line: 676, column: 2, scope: !11660)
!11737 = !DILocation(line: 676, column: 2, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 676, column: 2)
!11739 = !DILocation(line: 676, column: 2, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11738, file: !3, line: 676, column: 2)
!11741 = !{i32 -2140294489}
!11742 = !DILocation(line: 678, column: 7, scope: !11665)
!11743 = !DILocation(line: 678, column: 16, scope: !11665)
!11744 = !DILocation(line: 678, column: 29, scope: !11665)
!11745 = !DILocation(line: 342, column: 1, scope: !11746, inlinedAt: !11664)
!11746 = distinct !DILexicalBlock(scope: !11747, file: !929, line: 342, column: 1)
!11747 = distinct !DILexicalBlock(scope: !11662, file: !929, line: 342, column: 1)
!11748 = !DILocation(line: 342, column: 1, scope: !11747, inlinedAt: !11664)
!11749 = !DILocation(line: 678, column: 20, scope: !11665)
!11750 = !DILocation(line: 678, column: 6, scope: !11660)
!11751 = !DILocation(line: 679, column: 21, scope: !11665)
!11752 = !DILocation(line: 679, column: 3, scope: !11665)
!11753 = !DILocation(line: 681, column: 18, scope: !11660)
!11754 = !DILocation(line: 681, column: 22, scope: !11660)
!11755 = !DILocation(line: 681, column: 2, scope: !11660)
!11756 = !DILocation(line: 681, column: 6, scope: !11660)
!11757 = !DILocation(line: 681, column: 15, scope: !11660)
!11758 = !DILocation(line: 682, column: 19, scope: !11660)
!11759 = !DILocation(line: 682, column: 23, scope: !11660)
!11760 = !DILocation(line: 682, column: 2, scope: !11660)
!11761 = !DILocation(line: 682, column: 6, scope: !11660)
!11762 = !DILocation(line: 682, column: 16, scope: !11660)
!11763 = !DILocation(line: 684, column: 6, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 684, column: 6)
!11765 = !DILocation(line: 684, column: 10, scope: !11764)
!11766 = !DILocation(line: 684, column: 23, scope: !11764)
!11767 = !DILocation(line: 684, column: 27, scope: !11764)
!11768 = !DILocation(line: 684, column: 34, scope: !11764)
!11769 = !DILocation(line: 684, column: 20, scope: !11764)
!11770 = !DILocation(line: 684, column: 6, scope: !11660)
!11771 = !DILocation(line: 685, column: 23, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 684, column: 42)
!11773 = !DILocation(line: 685, column: 27, scope: !11772)
!11774 = !DILocation(line: 685, column: 15, scope: !11772)
!11775 = !DILocation(line: 685, column: 3, scope: !11772)
!11776 = !DILocation(line: 685, column: 7, scope: !11772)
!11777 = !DILocation(line: 685, column: 13, scope: !11772)
!11778 = !DILocation(line: 686, column: 8, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11772, file: !3, line: 686, column: 7)
!11780 = !DILocation(line: 686, column: 12, scope: !11779)
!11781 = !DILocation(line: 686, column: 7, scope: !11772)
!11782 = !DILocation(line: 687, column: 4, scope: !11779)
!11783 = !DILocation(line: 687, column: 8, scope: !11779)
!11784 = !DILocation(line: 687, column: 23, scope: !11779)
!11785 = !DILocation(line: 688, column: 3, scope: !11772)
!11786 = !DILocation(line: 688, column: 7, scope: !11772)
!11787 = !DILocation(line: 688, column: 17, scope: !11772)
!11788 = !DILocation(line: 689, column: 2, scope: !11772)
!11789 = !DILocation(line: 690, column: 1, scope: !11660)
!11790 = distinct !DISubprogram(name: "sg_page", scope: !6372, file: !6372, line: 124, type: !11791, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11791 = !DISubroutineType(types: !11792)
!11792 = !{!1614, !6380}
!11793 = !DILocalVariable(name: "sg", arg: 1, scope: !11790, file: !6372, line: 124, type: !6380)
!11794 = !DILocation(line: 124, column: 56, scope: !11790)
!11795 = !DILocation(line: 129, column: 26, scope: !11790)
!11796 = !DILocation(line: 129, column: 31, scope: !11790)
!11797 = !DILocation(line: 129, column: 41, scope: !11790)
!11798 = !DILocation(line: 129, column: 9, scope: !11790)
!11799 = !DILocation(line: 129, column: 2, scope: !11790)
!11800 = distinct !DISubprogram(name: "kmap_atomic", scope: !11801, file: !11801, line: 154, type: !11802, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11801 = !DIFile(filename: "./include/linux/highmem.h", directory: "/home/lizy2001/genbc/linux")
!11802 = !DISubroutineType(types: !11803)
!11803 = !{!968, !1614}
!11804 = !DILocalVariable(name: "page", arg: 1, scope: !11805, file: !130, line: 1514, type: !11808)
!11805 = distinct !DISubprogram(name: "lowmem_page_address", scope: !130, file: !130, line: 1514, type: !11806, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{!968, !11808}
!11808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11809, size: 64)
!11809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!11810 = !DILocation(line: 1514, column: 69, scope: !11805, inlinedAt: !11811)
!11811 = distinct !DILocation(line: 158, column: 9, scope: !11800)
!11812 = !DILocalVariable(name: "page", arg: 1, scope: !11800, file: !11801, line: 154, type: !1614)
!11813 = !DILocation(line: 154, column: 46, scope: !11800)
!11814 = !DILocation(line: 156, column: 2, scope: !11800)
!11815 = !{i32 -2141327123}
!11816 = !DILocation(line: 157, column: 2, scope: !11800)
!11817 = !DILocation(line: 158, column: 9, scope: !11800)
!11818 = !DILocation(line: 1516, column: 9, scope: !11805, inlinedAt: !11811)
!11819 = !DILocation(line: 158, column: 2, scope: !11800)
!11820 = distinct !DISubprogram(name: "kunmap_atomic_high", scope: !11801, file: !11801, line: 162, type: !1310, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11821 = !DILocalVariable(name: "addr", arg: 1, scope: !11820, file: !11801, line: 162, type: !968)
!11822 = !DILocation(line: 162, column: 45, scope: !11820)
!11823 = !DILocation(line: 171, column: 1, scope: !11820)
!11824 = distinct !DISubprogram(name: "pagefault_enable", scope: !11825, file: !11825, line: 254, type: !2781, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11825 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!11826 = !DILocalVariable(name: "pscr_ret__", scope: !11827, file: !11828, line: 15, type: !2120)
!11827 = distinct !DILexicalBlock(scope: !11829, file: !11828, line: 15, column: 9)
!11828 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!11829 = distinct !DISubprogram(name: "get_current", scope: !11828, file: !11828, line: 13, type: !11830, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11830 = !DISubroutineType(types: !11831)
!11831 = !{!2120}
!11832 = !DILocation(line: 15, column: 9, scope: !11827, inlinedAt: !11833)
!11833 = distinct !DILocation(line: 234, column: 2, scope: !11834, inlinedAt: !11835)
!11834 = distinct !DISubprogram(name: "pagefault_disabled_dec", scope: !11825, file: !11825, line: 232, type: !2781, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11835 = distinct !DILocation(line: 261, column: 2, scope: !11824)
!11836 = !DILocalVariable(name: "__vpp_verify", scope: !11837, file: !11828, line: 15, type: !4013)
!11837 = distinct !DILexicalBlock(scope: !11827, file: !11828, line: 15, column: 9)
!11838 = !DILocation(line: 15, column: 9, scope: !11837, inlinedAt: !11833)
!11839 = !DILocalVariable(name: "pfo_val__", scope: !11840, file: !11828, line: 15, type: !999)
!11840 = distinct !DILexicalBlock(scope: !11827, file: !11828, line: 15, column: 9)
!11841 = !DILocation(line: 15, column: 9, scope: !11840, inlinedAt: !11833)
!11842 = !DILocation(line: 260, column: 2, scope: !11824)
!11843 = !{i32 -2142830676}
!11844 = !{i32 -2146637181}
!11845 = !DILocation(line: 234, column: 11, scope: !11834, inlinedAt: !11835)
!11846 = !DILocation(line: 234, column: 29, scope: !11834, inlinedAt: !11835)
!11847 = !DILocation(line: 262, column: 1, scope: !11824)
!11848 = distinct !DISubprogram(name: "flush_dcache_page", scope: !11849, file: !11849, line: 49, type: !1735, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11849 = !DIFile(filename: "./include/asm-generic/cacheflush.h", directory: "/home/lizy2001/genbc/linux")
!11850 = !DILocalVariable(name: "page", arg: 1, scope: !11848, file: !11849, line: 49, type: !1614)
!11851 = !DILocation(line: 49, column: 51, scope: !11848)
!11852 = !DILocation(line: 51, column: 1, scope: !11848)
!11853 = distinct !DISubprogram(name: "pagefault_disable", scope: !11825, file: !11825, line: 244, type: !2781, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11854 = !DILocation(line: 15, column: 9, scope: !11827, inlinedAt: !11855)
!11855 = distinct !DILocation(line: 229, column: 2, scope: !11856, inlinedAt: !11857)
!11856 = distinct !DISubprogram(name: "pagefault_disabled_inc", scope: !11825, file: !11825, line: 227, type: !2781, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11857 = distinct !DILocation(line: 246, column: 2, scope: !11853)
!11858 = !DILocation(line: 15, column: 9, scope: !11837, inlinedAt: !11855)
!11859 = !DILocation(line: 15, column: 9, scope: !11840, inlinedAt: !11855)
!11860 = !DILocation(line: 229, column: 11, scope: !11856, inlinedAt: !11857)
!11861 = !DILocation(line: 229, column: 29, scope: !11856, inlinedAt: !11857)
!11862 = !DILocation(line: 251, column: 2, scope: !11853)
!11863 = !{i32 -2142830879}
!11864 = !DILocation(line: 252, column: 1, scope: !11853)
!11865 = distinct !DISubprogram(name: "test_bit", scope: !11866, file: !11866, line: 132, type: !11867, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11866 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11867 = !DISubroutineType(types: !11868)
!11868 = !{!1331, !881, !5945}
!11869 = !DILocalVariable(name: "nr", arg: 1, scope: !11870, file: !11871, line: 210, type: !881)
!11870 = distinct !DISubprogram(name: "variable_test_bit", scope: !11871, file: !11871, line: 210, type: !11867, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11871 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11872 = !DILocation(line: 210, column: 52, scope: !11870, inlinedAt: !11873)
!11873 = distinct !DILocation(line: 135, column: 9, scope: !11865)
!11874 = !DILocalVariable(name: "addr", arg: 2, scope: !11870, file: !11871, line: 210, type: !5945)
!11875 = !DILocation(line: 210, column: 86, scope: !11870, inlinedAt: !11873)
!11876 = !DILocalVariable(name: "oldbit", scope: !11870, file: !11871, line: 212, type: !1331)
!11877 = !DILocation(line: 212, column: 7, scope: !11870, inlinedAt: !11873)
!11878 = !DILocalVariable(name: "nr", arg: 1, scope: !11879, file: !11871, line: 204, type: !881)
!11879 = distinct !DISubprogram(name: "constant_test_bit", scope: !11871, file: !11871, line: 204, type: !11867, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11880 = !DILocation(line: 204, column: 52, scope: !11879, inlinedAt: !11881)
!11881 = distinct !DILocation(line: 135, column: 9, scope: !11865)
!11882 = !DILocalVariable(name: "addr", arg: 2, scope: !11879, file: !11871, line: 204, type: !5945)
!11883 = !DILocation(line: 204, column: 86, scope: !11879, inlinedAt: !11881)
!11884 = !DILocalVariable(name: "v", arg: 1, scope: !11885, file: !11886, line: 69, type: !11889)
!11885 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !11886, file: !11886, line: 69, type: !11887, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11886 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11887 = !DISubroutineType(types: !11888)
!11888 = !{null, !11889, !1171}
!11889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11890, size: 64)
!11890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11891)
!11891 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11892 = !DILocation(line: 69, column: 73, scope: !11885, inlinedAt: !11893)
!11893 = distinct !DILocation(line: 134, column: 2, scope: !11865)
!11894 = !DILocalVariable(name: "size", arg: 2, scope: !11885, file: !11886, line: 69, type: !1171)
!11895 = !DILocation(line: 69, column: 83, scope: !11885, inlinedAt: !11893)
!11896 = !DILocalVariable(name: "nr", arg: 1, scope: !11865, file: !11866, line: 132, type: !881)
!11897 = !DILocation(line: 132, column: 34, scope: !11865)
!11898 = !DILocalVariable(name: "addr", arg: 2, scope: !11865, file: !11866, line: 132, type: !5945)
!11899 = !DILocation(line: 132, column: 68, scope: !11865)
!11900 = !DILocation(line: 134, column: 25, scope: !11865)
!11901 = !DILocation(line: 134, column: 32, scope: !11865)
!11902 = !DILocation(line: 134, column: 30, scope: !11865)
!11903 = !DILocation(line: 71, column: 19, scope: !11885, inlinedAt: !11893)
!11904 = !DILocation(line: 71, column: 22, scope: !11885, inlinedAt: !11893)
!11905 = !DILocation(line: 71, column: 2, scope: !11885, inlinedAt: !11893)
!11906 = !DILocation(line: 72, column: 2, scope: !11885, inlinedAt: !11893)
!11907 = !DILocation(line: 135, column: 9, scope: !11865)
!11908 = !DILocation(line: 206, column: 19, scope: !11879, inlinedAt: !11881)
!11909 = !DILocation(line: 206, column: 22, scope: !11879, inlinedAt: !11881)
!11910 = !DILocation(line: 206, column: 15, scope: !11879, inlinedAt: !11881)
!11911 = !DILocation(line: 207, column: 4, scope: !11879, inlinedAt: !11881)
!11912 = !DILocation(line: 207, column: 9, scope: !11879, inlinedAt: !11881)
!11913 = !DILocation(line: 207, column: 12, scope: !11879, inlinedAt: !11881)
!11914 = !DILocation(line: 206, column: 44, scope: !11879, inlinedAt: !11881)
!11915 = !DILocation(line: 207, column: 37, scope: !11879, inlinedAt: !11881)
!11916 = !DILocation(line: 217, column: 33, scope: !11870, inlinedAt: !11873)
!11917 = !DILocation(line: 217, column: 46, scope: !11870, inlinedAt: !11873)
!11918 = !DILocation(line: 214, column: 2, scope: !11870, inlinedAt: !11873)
!11919 = !{i32 -2147119996, i32 -2147119936}
!11920 = !DILocation(line: 219, column: 9, scope: !11870, inlinedAt: !11873)
!11921 = !DILocation(line: 135, column: 2, scope: !11865)
!11922 = distinct !DISubprogram(name: "compound_head", scope: !929, file: !929, line: 183, type: !11923, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11923 = !DISubroutineType(types: !11924)
!11924 = !{!1614, !1614}
!11925 = !DILocalVariable(name: "page", arg: 1, scope: !11922, file: !929, line: 183, type: !1614)
!11926 = !DILocation(line: 183, column: 55, scope: !11922)
!11927 = !DILocalVariable(name: "head", scope: !11922, file: !929, line: 185, type: !1010)
!11928 = !DILocation(line: 185, column: 16, scope: !11922)
!11929 = !DILocation(line: 185, column: 23, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11922, file: !929, line: 185, column: 23)
!11931 = !DILocation(line: 185, column: 23, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11930, file: !929, line: 185, column: 23)
!11933 = !DILocation(line: 187, column: 6, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11922, file: !929, line: 187, column: 6)
!11935 = !DILocation(line: 187, column: 6, scope: !11922)
!11936 = !DILocation(line: 188, column: 27, scope: !11934)
!11937 = !DILocation(line: 188, column: 32, scope: !11934)
!11938 = !DILocation(line: 188, column: 10, scope: !11934)
!11939 = !DILocation(line: 188, column: 3, scope: !11934)
!11940 = !DILocation(line: 189, column: 9, scope: !11922)
!11941 = !DILocation(line: 189, column: 2, scope: !11922)
!11942 = !DILocation(line: 190, column: 1, scope: !11922)
!11943 = distinct !DISubprogram(name: "kasan_check_read", scope: !11944, file: !11944, line: 34, type: !11945, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11944 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11945 = !DISubroutineType(types: !11946)
!11946 = !{!1331, !11889, !7}
!11947 = !DILocalVariable(name: "p", arg: 1, scope: !11943, file: !11944, line: 34, type: !11889)
!11948 = !DILocation(line: 34, column: 58, scope: !11943)
!11949 = !DILocalVariable(name: "size", arg: 2, scope: !11943, file: !11944, line: 34, type: !7)
!11950 = !DILocation(line: 34, column: 74, scope: !11943)
!11951 = !DILocation(line: 36, column: 2, scope: !11943)
!11952 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11953, file: !11953, line: 178, type: !11954, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11953 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11954 = !DISubroutineType(types: !11955)
!11955 = !{null, !11889, !1171, !181}
!11956 = !DILocalVariable(name: "ptr", arg: 1, scope: !11952, file: !11953, line: 178, type: !11889)
!11957 = !DILocation(line: 178, column: 60, scope: !11952)
!11958 = !DILocalVariable(name: "size", arg: 2, scope: !11952, file: !11953, line: 178, type: !1171)
!11959 = !DILocation(line: 178, column: 72, scope: !11952)
!11960 = !DILocalVariable(name: "type", arg: 3, scope: !11952, file: !11953, line: 179, type: !181)
!11961 = !DILocation(line: 179, column: 15, scope: !11952)
!11962 = !DILocation(line: 179, column: 23, scope: !11952)
!11963 = distinct !DISubprogram(name: "__atapi_pio_bytes", scope: !3, file: !3, line: 771, type: !11964, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!11964 = !DISubroutineType(types: !11965)
!11965 = !{!181, !6170, !7}
!11966 = !DILocalVariable(name: "qc", arg: 1, scope: !11963, file: !3, line: 771, type: !6170)
!11967 = !DILocation(line: 771, column: 53, scope: !11963)
!11968 = !DILocalVariable(name: "bytes", arg: 2, scope: !11963, file: !3, line: 771, type: !7)
!11969 = !DILocation(line: 771, column: 70, scope: !11963)
!11970 = !DILocalVariable(name: "rw", scope: !11963, file: !3, line: 773, type: !181)
!11971 = !DILocation(line: 773, column: 6, scope: !11963)
!11972 = !DILocation(line: 773, column: 12, scope: !11963)
!11973 = !DILocation(line: 773, column: 16, scope: !11963)
!11974 = !DILocation(line: 773, column: 19, scope: !11963)
!11975 = !DILocation(line: 773, column: 25, scope: !11963)
!11976 = !DILocation(line: 773, column: 11, scope: !11963)
!11977 = !DILocalVariable(name: "ap", scope: !11963, file: !3, line: 774, type: !5951)
!11978 = !DILocation(line: 774, column: 19, scope: !11963)
!11979 = !DILocation(line: 774, column: 24, scope: !11963)
!11980 = !DILocation(line: 774, column: 28, scope: !11963)
!11981 = !DILocalVariable(name: "dev", scope: !11963, file: !3, line: 775, type: !6175)
!11982 = !DILocation(line: 775, column: 21, scope: !11963)
!11983 = !DILocation(line: 775, column: 27, scope: !11963)
!11984 = !DILocation(line: 775, column: 31, scope: !11963)
!11985 = !DILocalVariable(name: "ehi", scope: !11963, file: !3, line: 776, type: !8153)
!11986 = !DILocation(line: 776, column: 22, scope: !11963)
!11987 = !DILocation(line: 776, column: 29, scope: !11963)
!11988 = !DILocation(line: 776, column: 34, scope: !11963)
!11989 = !DILocation(line: 776, column: 40, scope: !11963)
!11990 = !DILocalVariable(name: "sg", scope: !11963, file: !3, line: 777, type: !6380)
!11991 = !DILocation(line: 777, column: 22, scope: !11963)
!11992 = !DILocalVariable(name: "page", scope: !11963, file: !3, line: 778, type: !1614)
!11993 = !DILocation(line: 778, column: 15, scope: !11963)
!11994 = !DILocalVariable(name: "buf", scope: !11963, file: !3, line: 779, type: !6535)
!11995 = !DILocation(line: 779, column: 17, scope: !11963)
!11996 = !DILocalVariable(name: "offset", scope: !11963, file: !3, line: 780, type: !7)
!11997 = !DILocation(line: 780, column: 15, scope: !11963)
!11998 = !DILocalVariable(name: "count", scope: !11963, file: !3, line: 780, type: !7)
!11999 = !DILocation(line: 780, column: 23, scope: !11963)
!12000 = !DILocalVariable(name: "consumed", scope: !11963, file: !3, line: 780, type: !7)
!12001 = !DILocation(line: 780, column: 30, scope: !11963)
!12002 = !DILocation(line: 780, column: 2, scope: !11963)
!12003 = !DILabel(scope: !11963, name: "next_sg", file: !3, line: 782)
!12004 = !DILocation(line: 782, column: 1, scope: !11963)
!12005 = !DILocation(line: 783, column: 7, scope: !11963)
!12006 = !DILocation(line: 783, column: 11, scope: !11963)
!12007 = !DILocation(line: 783, column: 5, scope: !11963)
!12008 = !DILocation(line: 784, column: 6, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 784, column: 6)
!12010 = !DILocation(line: 784, column: 6, scope: !11963)
!12011 = !DILocation(line: 785, column: 21, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12009, file: !3, line: 784, column: 21)
!12013 = !DILocation(line: 787, column: 7, scope: !12012)
!12014 = !DILocation(line: 787, column: 11, scope: !12012)
!12015 = !DILocation(line: 787, column: 19, scope: !12012)
!12016 = !DILocation(line: 787, column: 23, scope: !12012)
!12017 = !DILocation(line: 787, column: 33, scope: !12012)
!12018 = !DILocation(line: 785, column: 3, scope: !12012)
!12019 = !DILocation(line: 788, column: 3, scope: !12012)
!12020 = !DILocation(line: 791, column: 17, scope: !11963)
!12021 = !DILocation(line: 791, column: 9, scope: !11963)
!12022 = !DILocation(line: 791, column: 7, scope: !11963)
!12023 = !DILocation(line: 792, column: 11, scope: !11963)
!12024 = !DILocation(line: 792, column: 15, scope: !11963)
!12025 = !DILocation(line: 792, column: 24, scope: !11963)
!12026 = !DILocation(line: 792, column: 28, scope: !11963)
!12027 = !DILocation(line: 792, column: 22, scope: !11963)
!12028 = !DILocation(line: 792, column: 9, scope: !11963)
!12029 = !DILocation(line: 795, column: 9, scope: !11963)
!12030 = !DILocation(line: 795, column: 7, scope: !11963)
!12031 = !DILocation(line: 796, column: 9, scope: !11963)
!12032 = !DILocalVariable(name: "__UNIQUE_ID___x309", scope: !12033, file: !3, line: 799, type: !7)
!12033 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 799, column: 10)
!12034 = !DILocation(line: 799, column: 10, scope: !12033)
!12035 = !DILocalVariable(name: "__UNIQUE_ID___y310", scope: !12033, file: !3, line: 799, type: !7)
!12036 = !DILocation(line: 799, column: 8, scope: !11963)
!12037 = !DILocalVariable(name: "__UNIQUE_ID___x311", scope: !12038, file: !3, line: 802, type: !7)
!12038 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 802, column: 10)
!12039 = !DILocation(line: 802, column: 10, scope: !12038)
!12040 = !DILocalVariable(name: "__UNIQUE_ID___y312", scope: !12038, file: !3, line: 802, type: !7)
!12041 = !DILocation(line: 802, column: 8, scope: !11963)
!12042 = !DILocation(line: 807, column: 20, scope: !11963)
!12043 = !DILocation(line: 807, column: 8, scope: !11963)
!12044 = !DILocation(line: 807, column: 6, scope: !11963)
!12045 = !DILocation(line: 808, column: 13, scope: !11963)
!12046 = !DILocation(line: 808, column: 17, scope: !11963)
!12047 = !DILocation(line: 808, column: 22, scope: !11963)
!12048 = !DILocation(line: 808, column: 36, scope: !11963)
!12049 = !DILocation(line: 808, column: 40, scope: !11963)
!12050 = !DILocation(line: 808, column: 46, scope: !11963)
!12051 = !DILocation(line: 808, column: 44, scope: !11963)
!12052 = !DILocation(line: 808, column: 54, scope: !11963)
!12053 = !DILocation(line: 808, column: 61, scope: !11963)
!12054 = !DILocation(line: 808, column: 11, scope: !11963)
!12055 = !DILocation(line: 809, column: 2, scope: !11963)
!12056 = !DILocation(line: 809, column: 2, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 809, column: 2)
!12058 = !DILocation(line: 809, column: 2, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 809, column: 2)
!12060 = !{i32 -2140283349}
!12061 = !DILocalVariable(name: "__UNIQUE_ID___x314", scope: !12062, file: !3, line: 811, type: !7)
!12062 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 811, column: 11)
!12063 = !DILocation(line: 811, column: 11, scope: !12062)
!12064 = !DILocalVariable(name: "__UNIQUE_ID___y315", scope: !12062, file: !3, line: 811, type: !7)
!12065 = !DILocation(line: 811, column: 8, scope: !11963)
!12066 = !DILocation(line: 812, column: 18, scope: !11963)
!12067 = !DILocation(line: 812, column: 2, scope: !11963)
!12068 = !DILocation(line: 812, column: 6, scope: !11963)
!12069 = !DILocation(line: 812, column: 15, scope: !11963)
!12070 = !DILocation(line: 813, column: 19, scope: !11963)
!12071 = !DILocation(line: 813, column: 2, scope: !11963)
!12072 = !DILocation(line: 813, column: 6, scope: !11963)
!12073 = !DILocation(line: 813, column: 16, scope: !11963)
!12074 = !DILocation(line: 815, column: 6, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 815, column: 6)
!12076 = !DILocation(line: 815, column: 10, scope: !12075)
!12077 = !DILocation(line: 815, column: 23, scope: !12075)
!12078 = !DILocation(line: 815, column: 27, scope: !12075)
!12079 = !DILocation(line: 815, column: 20, scope: !12075)
!12080 = !DILocation(line: 815, column: 6, scope: !11963)
!12081 = !DILocation(line: 816, column: 23, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 815, column: 35)
!12083 = !DILocation(line: 816, column: 27, scope: !12082)
!12084 = !DILocation(line: 816, column: 15, scope: !12082)
!12085 = !DILocation(line: 816, column: 3, scope: !12082)
!12086 = !DILocation(line: 816, column: 7, scope: !12082)
!12087 = !DILocation(line: 816, column: 13, scope: !12082)
!12088 = !DILocation(line: 817, column: 3, scope: !12082)
!12089 = !DILocation(line: 817, column: 7, scope: !12082)
!12090 = !DILocation(line: 817, column: 17, scope: !12082)
!12091 = !DILocation(line: 818, column: 2, scope: !12082)
!12092 = !DILocation(line: 826, column: 6, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 826, column: 6)
!12094 = !DILocation(line: 826, column: 6, scope: !11963)
!12095 = !DILocation(line: 827, column: 3, scope: !12093)
!12096 = !DILocation(line: 828, column: 2, scope: !11963)
!12097 = !DILocation(line: 829, column: 1, scope: !11963)
!12098 = distinct !DISubprogram(name: "ac_err_mask", scope: !152, file: !152, line: 1801, type: !8743, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12099 = !DILocalVariable(name: "status", arg: 1, scope: !12098, file: !152, line: 1801, type: !2256)
!12100 = !DILocation(line: 1801, column: 43, scope: !12098)
!12101 = !DILocation(line: 1803, column: 6, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12098, file: !152, line: 1803, column: 6)
!12103 = !DILocation(line: 1803, column: 13, scope: !12102)
!12104 = !DILocation(line: 1803, column: 6, scope: !12098)
!12105 = !DILocation(line: 1804, column: 3, scope: !12102)
!12106 = !DILocation(line: 1805, column: 6, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12098, file: !152, line: 1805, column: 6)
!12108 = !DILocation(line: 1805, column: 13, scope: !12107)
!12109 = !DILocation(line: 1805, column: 6, scope: !12098)
!12110 = !DILocation(line: 1806, column: 3, scope: !12107)
!12111 = !DILocation(line: 1807, column: 2, scope: !12098)
!12112 = !DILocation(line: 1808, column: 1, scope: !12098)
!12113 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !7896, file: !7896, line: 308, type: !7897, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12114 = !DILocalVariable(name: "m", arg: 1, scope: !12113, file: !7896, line: 308, type: !3434)
!12115 = !DILocation(line: 308, column: 66, scope: !12113)
!12116 = !DILocation(line: 310, column: 10, scope: !12113)
!12117 = !DILocation(line: 310, column: 12, scope: !12113)
!12118 = !DILocation(line: 310, column: 34, scope: !12113)
!12119 = !DILocation(line: 310, column: 39, scope: !12113)
!12120 = !DILocation(line: 310, column: 2, scope: !12113)
!12121 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !9725, file: !9725, line: 656, type: !2781, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12122 = !DILocalVariable(name: "__edi", scope: !12123, file: !9725, line: 658, type: !1010)
!12123 = distinct !DILexicalBlock(scope: !12121, file: !9725, line: 658, column: 2)
!12124 = !DILocation(line: 658, column: 2, scope: !12123)
!12125 = !DILocalVariable(name: "__esi", scope: !12123, file: !9725, line: 658, type: !1010)
!12126 = !DILocalVariable(name: "__edx", scope: !12123, file: !9725, line: 658, type: !1010)
!12127 = !DILocalVariable(name: "__ecx", scope: !12123, file: !9725, line: 658, type: !1010)
!12128 = !DILocalVariable(name: "__eax", scope: !12123, file: !9725, line: 658, type: !1010)
!12129 = !{i32 -2145637264, i32 -2145636532, i32 -2145636298, i32 -2145636247, i32 -2145636219, i32 -2145636194, i32 -2145636510, i32 -2145636497, i32 -2145636059, i32 -2145635940, i32 -2145636405, i32 -2145636378, i32 -2145636350, i32 -2145636320}
!12130 = !DILocation(line: 659, column: 1, scope: !12121)
!12131 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !9725, file: !9725, line: 661, type: !2781, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12132 = !DILocalVariable(name: "__edi", scope: !12133, file: !9725, line: 663, type: !1010)
!12133 = distinct !DILexicalBlock(scope: !12131, file: !9725, line: 663, column: 2)
!12134 = !DILocation(line: 663, column: 2, scope: !12133)
!12135 = !DILocalVariable(name: "__esi", scope: !12133, file: !9725, line: 663, type: !1010)
!12136 = !DILocalVariable(name: "__edx", scope: !12133, file: !9725, line: 663, type: !1010)
!12137 = !DILocalVariable(name: "__ecx", scope: !12133, file: !9725, line: 663, type: !1010)
!12138 = !DILocalVariable(name: "__eax", scope: !12133, file: !9725, line: 663, type: !1010)
!12139 = !{i32 -2145634680, i32 -2145633950, i32 -2145633716, i32 -2145633665, i32 -2145633637, i32 -2145633612, i32 -2145633928, i32 -2145633915, i32 -2145633477, i32 -2145633358, i32 -2145633823, i32 -2145633796, i32 -2145633768, i32 -2145633738}
!12140 = !DILocation(line: 664, column: 1, scope: !12131)
!12141 = distinct !DISubprogram(name: "ata_sff_irq_status", scope: !3, file: !3, line: 103, type: !6517, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12142 = !DILocalVariable(name: "ap", arg: 1, scope: !12141, file: !3, line: 103, type: !5951)
!12143 = !DILocation(line: 103, column: 47, scope: !12141)
!12144 = !DILocalVariable(name: "status", scope: !12141, file: !3, line: 105, type: !2256)
!12145 = !DILocation(line: 105, column: 5, scope: !12141)
!12146 = !DILocation(line: 107, column: 6, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 107, column: 6)
!12148 = !DILocation(line: 107, column: 10, scope: !12147)
!12149 = !DILocation(line: 107, column: 15, scope: !12147)
!12150 = !DILocation(line: 107, column: 35, scope: !12147)
!12151 = !DILocation(line: 107, column: 38, scope: !12147)
!12152 = !DILocation(line: 107, column: 42, scope: !12147)
!12153 = !DILocation(line: 107, column: 49, scope: !12147)
!12154 = !DILocation(line: 107, column: 6, scope: !12141)
!12155 = !DILocation(line: 108, column: 30, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12147, file: !3, line: 107, column: 65)
!12157 = !DILocation(line: 108, column: 12, scope: !12156)
!12158 = !DILocation(line: 108, column: 10, scope: !12156)
!12159 = !DILocation(line: 110, column: 7, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12156, file: !3, line: 110, column: 7)
!12161 = !DILocation(line: 110, column: 14, scope: !12160)
!12162 = !DILocation(line: 110, column: 7, scope: !12156)
!12163 = !DILocation(line: 111, column: 11, scope: !12160)
!12164 = !DILocation(line: 111, column: 4, scope: !12160)
!12165 = !DILocation(line: 112, column: 2, scope: !12156)
!12166 = !DILocation(line: 114, column: 11, scope: !12141)
!12167 = !DILocation(line: 114, column: 15, scope: !12141)
!12168 = !DILocation(line: 114, column: 20, scope: !12141)
!12169 = !DILocation(line: 114, column: 37, scope: !12141)
!12170 = !DILocation(line: 114, column: 9, scope: !12141)
!12171 = !DILocation(line: 115, column: 9, scope: !12141)
!12172 = !DILocation(line: 115, column: 2, scope: !12141)
!12173 = !DILocation(line: 116, column: 1, scope: !12141)
!12174 = distinct !DISubprogram(name: "ata_tag_valid", scope: !152, file: !152, line: 1545, type: !12175, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12175 = !DISubroutineType(types: !12176)
!12176 = !{!1331, !7}
!12177 = !DILocalVariable(name: "tag", arg: 1, scope: !12174, file: !152, line: 1545, type: !7)
!12178 = !DILocation(line: 1545, column: 47, scope: !12174)
!12179 = !DILocation(line: 1547, column: 9, scope: !12174)
!12180 = !DILocation(line: 1547, column: 13, scope: !12174)
!12181 = !DILocation(line: 1547, column: 29, scope: !12174)
!12182 = !DILocation(line: 1547, column: 49, scope: !12174)
!12183 = !DILocation(line: 1547, column: 32, scope: !12174)
!12184 = !DILocation(line: 1547, column: 2, scope: !12174)
!12185 = distinct !DISubprogram(name: "ata_tag_internal", scope: !152, file: !152, line: 1540, type: !12175, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12186 = !DILocalVariable(name: "tag", arg: 1, scope: !12185, file: !152, line: 1540, type: !7)
!12187 = !DILocation(line: 1540, column: 50, scope: !12185)
!12188 = !DILocation(line: 1542, column: 9, scope: !12185)
!12189 = !DILocation(line: 1542, column: 13, scope: !12185)
!12190 = !DILocation(line: 1542, column: 2, scope: !12185)
!12191 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !9725, file: !9725, line: 646, type: !9726, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12192 = !DILocalVariable(name: "__ret", scope: !12193, file: !9725, line: 648, type: !1010)
!12193 = distinct !DILexicalBlock(scope: !12191, file: !9725, line: 648, column: 9)
!12194 = !DILocation(line: 648, column: 9, scope: !12193)
!12195 = !DILocalVariable(name: "__edi", scope: !12193, file: !9725, line: 648, type: !1010)
!12196 = !DILocalVariable(name: "__esi", scope: !12193, file: !9725, line: 648, type: !1010)
!12197 = !DILocalVariable(name: "__edx", scope: !12193, file: !9725, line: 648, type: !1010)
!12198 = !DILocalVariable(name: "__ecx", scope: !12193, file: !9725, line: 648, type: !1010)
!12199 = !DILocalVariable(name: "__eax", scope: !12193, file: !9725, line: 648, type: !1010)
!12200 = !DILocation(line: 648, column: 9, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12202, file: !9725, line: 648, column: 9)
!12202 = distinct !DILexicalBlock(scope: !12193, file: !9725, line: 648, column: 9)
!12203 = !{i32 -2145644358, i32 -2145642043, i32 -2145641809, i32 -2145641758, i32 -2145641730, i32 -2145641705, i32 -2145642021, i32 -2145642008, i32 -2145641570, i32 -2145641451, i32 -2145641916, i32 -2145641889, i32 -2145641861, i32 -2145641831}
!12204 = !DILocalVariable(name: "__mask", scope: !12205, file: !9725, line: 648, type: !1010)
!12205 = distinct !DILexicalBlock(scope: !12201, file: !9725, line: 648, column: 9)
!12206 = !DILocation(line: 648, column: 9, scope: !12205)
!12207 = !DILocation(line: 648, column: 9, scope: !12202)
!12208 = !DILocation(line: 648, column: 2, scope: !12191)
!12209 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !9725, file: !9725, line: 651, type: !12210, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12210 = !DISubroutineType(types: !12211)
!12211 = !{null, !1010}
!12212 = !DILocalVariable(name: "f", arg: 1, scope: !12209, file: !9725, line: 651, type: !1010)
!12213 = !DILocation(line: 651, column: 65, scope: !12209)
!12214 = !DILocalVariable(name: "__edi", scope: !12215, file: !9725, line: 653, type: !1010)
!12215 = distinct !DILexicalBlock(scope: !12209, file: !9725, line: 653, column: 2)
!12216 = !DILocation(line: 653, column: 2, scope: !12215)
!12217 = !DILocalVariable(name: "__esi", scope: !12215, file: !9725, line: 653, type: !1010)
!12218 = !DILocalVariable(name: "__edx", scope: !12215, file: !9725, line: 653, type: !1010)
!12219 = !DILocalVariable(name: "__ecx", scope: !12215, file: !9725, line: 653, type: !1010)
!12220 = !DILocalVariable(name: "__eax", scope: !12215, file: !9725, line: 653, type: !1010)
!12221 = !{i32 -2145639891, i32 -2145639141, i32 -2145638907, i32 -2145638856, i32 -2145638828, i32 -2145638803, i32 -2145639119, i32 -2145639106, i32 -2145638668, i32 -2145638549, i32 -2145639014, i32 -2145638987, i32 -2145638959, i32 -2145638929}
!12222 = !DILocation(line: 654, column: 1, scope: !12209)
!12223 = distinct !DISubprogram(name: "ata_sff_find_valid_pi", scope: !3, file: !3, line: 2428, type: !12224, scopeLine: 2430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1099)
!12224 = !DISubroutineType(types: !12225)
!12225 = !{!9973, !9971}
!12226 = !DILocalVariable(name: "ppi", arg: 1, scope: !12223, file: !3, line: 2429, type: !9971)
!12227 = !DILocation(line: 2429, column: 42, scope: !12223)
!12228 = !DILocalVariable(name: "i", scope: !12223, file: !3, line: 2431, type: !181)
!12229 = !DILocation(line: 2431, column: 6, scope: !12223)
!12230 = !DILocation(line: 2434, column: 9, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12223, file: !3, line: 2434, column: 2)
!12232 = !DILocation(line: 2434, column: 7, scope: !12231)
!12233 = !DILocation(line: 2434, column: 14, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12231, file: !3, line: 2434, column: 2)
!12235 = !DILocation(line: 2434, column: 16, scope: !12234)
!12236 = !DILocation(line: 2434, column: 20, scope: !12234)
!12237 = !DILocation(line: 2434, column: 23, scope: !12234)
!12238 = !DILocation(line: 2434, column: 27, scope: !12234)
!12239 = !DILocation(line: 0, scope: !12234)
!12240 = !DILocation(line: 2434, column: 2, scope: !12231)
!12241 = !DILocation(line: 2435, column: 7, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 2435, column: 7)
!12243 = !DILocation(line: 2435, column: 11, scope: !12242)
!12244 = !DILocation(line: 2435, column: 15, scope: !12242)
!12245 = !DILocation(line: 2435, column: 24, scope: !12242)
!12246 = !DILocation(line: 2435, column: 7, scope: !12234)
!12247 = !DILocation(line: 2436, column: 11, scope: !12242)
!12248 = !DILocation(line: 2436, column: 15, scope: !12242)
!12249 = !DILocation(line: 2436, column: 4, scope: !12242)
!12250 = !DILocation(line: 2435, column: 28, scope: !12242)
!12251 = !DILocation(line: 2434, column: 32, scope: !12234)
!12252 = !DILocation(line: 2434, column: 2, scope: !12234)
!12253 = distinct !{!12253, !12240, !12254}
!12254 = !DILocation(line: 2436, column: 16, scope: !12231)
!12255 = !DILocation(line: 2438, column: 2, scope: !12223)
!12256 = !DILocation(line: 2439, column: 1, scope: !12223)
